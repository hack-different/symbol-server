/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices [arm64e, 0.094600 seconds]:
    38CBDA48-E47A-39B7-A455-AE0BE891C28A /System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001b4e06000 (  0x8000) __TEXT SEGMENT
            0x00000001b4e06000 (  0x3a14) MACH_HEADER
            0x00000001b4e09a14 (  0x23fc) __TEXT __text
                0x00000001b4e09a14 (   0x1b0) -[MOSplunkLogger initWithName:configurationURL:splunkTopic:version:allowInvalidCert:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e09bc4 (   0x194) -[MOSplunkLogger _onQueue_loadConfiguration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e09d58 (   0x38c) __44-[MOSplunkLogger _onQueue_loadConfiguration]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a0e4 (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a120 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a15c (   0x134) -[MOSplunkLogger uploadEventsWithCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a290 (    0x78) __45-[MOSplunkLogger uploadEventsWithCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a308 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a310 (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a318 (   0x3c4) __45-[MOSplunkLogger uploadEventsWithCompletion:]_block_invoke.55 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a6dc (   0x1b4) __45-[MOSplunkLogger uploadEventsWithCompletion:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a890 (    0x50) __copy_helper_block_e8_32s40s48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a8e0 (    0x44) __destroy_helper_block_e8_32s40s48s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a924 (    0x48) __copy_helper_block_e8_32s40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0a96c (   0x17c) -[MOSplunkLogger logEventNamed:value:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0aae8 (    0xd4) __38-[MOSplunkLogger logEventNamed:value:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0abbc (   0x204) -[MOSplunkLogger URLSession:didReceiveChallenge:completionHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0adc0 (     0x8) -[MOSplunkLogger path] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0adc8 (     0xc) -[MOSplunkLogger setPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0add4 (     0x8) -[MOSplunkLogger events] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0addc (     0xc) -[MOSplunkLogger setEvents:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ade8 (     0x8) -[MOSplunkLogger queue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0adf0 (     0xc) -[MOSplunkLogger setQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0adfc (     0x8) -[MOSplunkLogger allowInvalidCert] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae04 (     0x8) -[MOSplunkLogger setAllowInvalidCert:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae0c (     0x8) -[MOSplunkLogger version] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae14 (     0xc) -[MOSplunkLogger setVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae20 (     0x8) -[MOSplunkLogger splunkUploadURL] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae28 (     0xc) -[MOSplunkLogger setSplunkUploadURL:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae34 (     0x8) -[MOSplunkLogger configurationURL] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae3c (     0xc) -[MOSplunkLogger setConfigurationURL:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae48 (     0x8) -[MOSplunkLogger splunkTopic] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae50 (     0xc) -[MOSplunkLogger setSplunkTopic:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae5c (     0x8) -[MOSplunkLogger samplingPercentage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae64 (     0xc) -[MOSplunkLogger setSamplingPercentage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae70 (     0x8) -[MOSplunkLogger lastSuccessfulConfigurationLoad] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae78 (     0x8) -[MOSplunkLogger setLastSuccessfulConfigurationLoad:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0ae80 (    0x8c) -[MOSplunkLogger .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0af0c (   0x184) MOLogOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b090 (    0xb0) __MOLogOpen_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b140 (    0x2c) MOLogWrite [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b16c (    0x7c) MOLogEnableDiskLogging [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b1e8 (    0x70) __MOLogEnableDiskLogging_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b258 (    0x6c) MOLogClose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b2c4 (   0x2c0) MOLogWriteV [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b584 (   0x340) __MOLogWriteV_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0b8c4 (   0x1ec) MOLogSetLogLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0bab0 (    0x80) MOLogGetLogLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0bb30 (   0x108) _MOLogGetPreferenceIntValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0bc38 (    0x84) ___MOLogLoadPreferences_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0bcbc (    0x80) MOCreateSerializedData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4e0bd3c (    0xd4) MOCreateCFTypeFromSerializedBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001b4e0be10 (   0x4a0) __TEXT __auth_stubs
                0x00000001b4e0be10 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be20 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be30 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be40 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be50 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be60 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be70 (    0x10) DYLD-STUB$$CFPreferencesSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be80 (    0x10) DYLD-STUB$$CFPreferencesSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0be90 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bea0 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0beb0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bec0 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bed0 (    0x10) DYLD-STUB$$CFStringCreateWithFormatAndArguments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bee0 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bef0 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf00 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf10 (    0x10) DYLD-STUB$$CFStringGetIntValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf20 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf30 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf40 (    0x10) DYLD-STUB$$NSStringFromClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf50 (    0x10) DYLD-STUB$$SecTrustEvaluate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf60 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf70 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf80 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bf90 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bfa0 (    0x10) DYLD-STUB$$arc4random_uniform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bfb0 (    0x10) DYLD-STUB$$asl_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bfc0 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bfd0 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bfe0 (    0x10) DYLD-STUB$$clock_gettime_nsec_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0bff0 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c000 (    0x10) DYLD-STUB$$ctime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c010 (    0x10) DYLD-STUB$$dispatch_assert_queue$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c020 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c030 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c040 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_autorelease_frequency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c050 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c060 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c070 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c080 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c090 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0a0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0b0 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0c0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0d0 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0e0 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c0f0 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c100 (    0x10) DYLD-STUB$$getpwnam_r [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c110 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c120 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c130 (    0x10) DYLD-STUB$$mkpath_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c140 (    0x10) DYLD-STUB$$notify_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c150 (    0x10) DYLD-STUB$$notify_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c160 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c170 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c180 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c190 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1a0 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1b0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1c0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1d0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1e0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c1f0 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c200 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c210 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c220 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c230 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c240 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c250 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c260 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c270 (    0x10) DYLD-STUB$$sysconf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c280 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c290 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4e0c2a0 (    0x10) DYLD-STUB$$writev [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001b4e0c2b0 (   0x140) __TEXT __objc_methlist
                0x00000001b4e0c2b0 (   0x140) _OBJC_$_INSTANCE_METHODS_MOSplunkLogger [NameNList, MangledNameNList, NList] 
            0x00000001b4e0c3f0 (   0x418) __TEXT __const
            0x00000001b4e0c808 (   0x6cc) __TEXT __cstring
            0x00000001b4e0ced4 (    0xc4) __TEXT __unwind_info
            0x00000001b4e0cf98 (    0x2f) __TEXT __objc_classname
            0x00000001b4e0cfc8 (   0x82c) __TEXT __objc_methname
            0x00000001b4e0d7f4 (   0x20b) __TEXT __objc_methtype
            0x00000001b4e0da00 (   0x600) __TEXT __objc_stubs
                0x00000001b4e0da00 (    0x20) objc_msgSend$JSONObjectWithData:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0da20 (    0x20) objc_msgSend$URLByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0da40 (    0x20) objc_msgSend$URLWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0da60 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0da80 (    0x20) objc_msgSend$_onQueue_loadConfiguration [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0daa0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dac0 (    0x20) objc_msgSend$allowInvalidCert [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dae0 (    0x20) objc_msgSend$authenticationMethod [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0db00 (    0x20) objc_msgSend$configurationURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0db20 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0db40 (    0x20) objc_msgSend$credentialForTrust: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0db60 (    0x20) objc_msgSend$dataTaskWithRequest:completionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0db80 (    0x20) objc_msgSend$dataTaskWithURL:completionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dba0 (    0x20) objc_msgSend$dataWithJSONObject:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dbc0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dbe0 (    0x20) objc_msgSend$ephemeralSessionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dc00 (    0x20) objc_msgSend$events [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dc20 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dc40 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dc60 (    0x20) objc_msgSend$lastSuccessfulConfigurationLoad [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dc80 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dca0 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dcc0 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dce0 (    0x20) objc_msgSend$previousFailureCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dd00 (    0x20) objc_msgSend$protectionSpace [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dd20 (    0x20) objc_msgSend$queue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dd40 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dd60 (    0x20) objc_msgSend$removeObjectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dd80 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dda0 (    0x20) objc_msgSend$samplingPercentage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0ddc0 (    0x20) objc_msgSend$serverTrust [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dde0 (    0x20) objc_msgSend$sessionWithConfiguration:delegate:delegateQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0de00 (    0x20) objc_msgSend$setAllowInvalidCert: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0de20 (    0x20) objc_msgSend$setEvents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0de40 (    0x20) objc_msgSend$setHTTPBody: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0de60 (    0x20) objc_msgSend$setHTTPMethod: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0de80 (    0x20) objc_msgSend$setLastSuccessfulConfigurationLoad: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dea0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dec0 (    0x20) objc_msgSend$setQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dee0 (    0x20) objc_msgSend$setSamplingPercentage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0df00 (    0x20) objc_msgSend$setSplunkUploadURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0df20 (    0x20) objc_msgSend$setURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0df40 (    0x20) objc_msgSend$splunkTopic [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0df60 (    0x20) objc_msgSend$splunkUploadURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0df80 (    0x20) objc_msgSend$statusCode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dfa0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dfc0 (    0x20) objc_msgSend$timeIntervalSinceReferenceDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4e0dfe0 (    0x20) objc_msgSend$version [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001de934b48 (   0x8d8) __DATA_CONST SEGMENT
            0x00000001de934b48 (    0x38) __DATA_CONST __got
            0x00000001de934b80 (    0xc0) __DATA_CONST __const
                0x00000001de934b80 (    0x40) levelNames [NameNList, MangledNameNList, NList] 
                0x00000001de934bc0 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001de934be0 (    0x20) __block_descriptor_tmp.8 [NameNList, MangledNameNList, NList] 
                0x00000001de934c00 (    0x20) __block_descriptor_tmp.19 [NameNList, MangledNameNList, NList] 
                0x00000001de934c20 (    0x20) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
            0x00000001de934c40 (     0x8) __DATA_CONST __objc_classlist
            0x00000001de934c48 (    0x10) __DATA_CONST __objc_protolist
                0x00000001de934c48 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de934c50 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSURLSessionDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001de934c58 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001de934c60 (   0x5e8) __DATA_CONST __objc_const
                0x00000001de934c60 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001de934e30 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001de934e50 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001de934e98 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001de934f38 (    0x18) _OBJC_$_PROTOCOL_REFS_NSURLSessionDelegate [NameNList, MangledNameNList, NList] 
                0x00000001de934f50 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSURLSessionDelegate [NameNList, MangledNameNList, NList] 
                0x00000001de934fa0 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_NSURLSessionDelegate [NameNList, MangledNameNList, NList] 
                0x00000001de934fb8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_MOSplunkLogger [NameNList, MangledNameNList, NList] 
                0x00000001de934fd0 (    0x48) _OBJC_METACLASS_RO_$_MOSplunkLogger [NameNList, MangledNameNList, NList] 
                0x00000001de935018 (   0x148) _OBJC_$_INSTANCE_VARIABLES_MOSplunkLogger [NameNList, MangledNameNList, NList] 
                0x00000001de935160 (    0xe8) _OBJC_$_PROP_LIST_MOSplunkLogger [NameNList, MangledNameNList, NList] 
            0x00000001de935248 (   0x1d8) __DATA_CONST __objc_selrefs
        0x00000001de935420 (   0x7d8) __AUTH_CONST SEGMENT
            0x00000001de935420 (   0x440) __AUTH_CONST __cfstring
            0x00000001de935860 (    0xf0) __AUTH_CONST __const
                0x00000001de935860 (    0x30) __block_descriptor_48_e8_32s40s_e46_v32?0"NSData"8"NSURLResponse"16"NSError"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de935890 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de9358c0 (    0x30) __block_descriptor_56_e8_32s40s48bs_e46_v32?0"NSData"8"NSURLResponse"16"NSError"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de9358f0 (    0x30) __block_descriptor_48_e8_32s40bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de935920 (    0x30) __block_descriptor_48_e8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001de935950 (    0x48) __AUTH_CONST __objc_const
                0x00000001de935950 (    0x48) _OBJC_CLASS_RO_$_MOSplunkLogger [NameNList, MangledNameNList, NList] 
            0x00000001de935998 (     0x8) __AUTH_CONST __auth_ptr
            0x00000001de9359a0 (   0x258) __AUTH_CONST __auth_got
        0x00000001d65d3f58 (   0x150) __DATA SEGMENT
            0x00000001d65d3f58 (    0x60) __DATA __objc_classrefs
            0x00000001d65d3fb8 (     0x8) __DATA __objc_superrefs
            0x00000001d65d3fc0 (    0x28) __DATA __objc_ivar
                0x00000001d65d3fc0 (     0x4) OBJC_IVAR_$_MOSplunkLogger._allowInvalidCert [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fc4 (     0x4) OBJC_IVAR_$_MOSplunkLogger._path [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fc8 (     0x4) OBJC_IVAR_$_MOSplunkLogger._events [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fcc (     0x4) OBJC_IVAR_$_MOSplunkLogger._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fd0 (     0x4) OBJC_IVAR_$_MOSplunkLogger._version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fd4 (     0x4) OBJC_IVAR_$_MOSplunkLogger._splunkUploadURL [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fd8 (     0x4) OBJC_IVAR_$_MOSplunkLogger._configurationURL [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fdc (     0x4) OBJC_IVAR_$_MOSplunkLogger._splunkTopic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fe0 (     0x4) OBJC_IVAR_$_MOSplunkLogger._samplingPercentage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d3fe4 (     0x4) OBJC_IVAR_$_MOSplunkLogger._lastSuccessfulConfigurationLoad [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d65d3fe8 (    0xc0) __DATA __data
                0x00000001d65d3fe8 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65d4048 (    0x60) _OBJC_PROTOCOL_$_NSURLSessionDelegate [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d707fed8 (    0x50) __DATA_DIRTY SEGMENT
            0x00000001d707fed8 (    0x50) __DATA_DIRTY __objc_data
                0x00000001d707fed8 (    0x28) OBJC_CLASS_$_MOSplunkLogger [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d707ff00 (    0x28) OBJC_METACLASS_$_MOSplunkLogger [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
