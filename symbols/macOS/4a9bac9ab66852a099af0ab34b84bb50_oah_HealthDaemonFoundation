Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/HealthDaemonFoundation.framework/Versions/A/HealthDaemonFoundation [arm64e, 0.026883 seconds]:
    6A0EF311-70AA-33F2-8740-F6FCE552CD63 /System/Library/PrivateFrameworks/HealthDaemonFoundation.framework/Versions/A/HealthDaemonFoundation [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000002020ca000 ( 0x1d000) __TEXT SEGMENT
            0x00000002020ca000 (  0x156c) MACH_HEADER
            0x00000002020cb56c ( 0x11d34) __TEXT __text
                0x00000002020cb56c (   0x1b8) -[HDDatabaseConnectionPool initWithConcurrentReaderLimit:delegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb724 (    0x78) -[HDDatabaseConnectionPool dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb79c (    0x10) -[HDDatabaseConnectionPool count] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb7ac (     0x8) -[HDDatabaseConnectionPool cacheSize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb7b4 (     0x8) -[HDDatabaseConnectionPool concurrentReaderLimit] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb7bc (    0x44) -[HDDatabaseConnectionPool checkedOutDatabaseCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cb800 (   0x230) -[HDDatabaseConnectionPool checkOutConnectionWithOptions:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cba30 (    0x58) -[HDDatabaseConnectionPool _semaphoreForCheckOutOptions:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cba88 (    0xb4) -[_HDDatabaseConnectionWrapper initWithConnection:flushGroup:generation:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cbb3c (    0x80) -[HDDatabaseConnectionPool _addDatabaseWrapperToCheckoutMap:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cbbbc (   0x1ec) -[HDDatabaseConnectionPool checkInConnection:flushImmediately:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cbda8 (    0x98) -[HDDatabaseConnectionPool _removeDatabaseFromCheckoutMap:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cbe40 (    0x78) -[HDDatabaseConnectionPool _didFlushDatabases:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cbeb8 (   0x1cc) -[HDDatabaseConnectionPool flush] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc084 (    0x50) -[HDDatabaseConnectionPool currentFlushGroup] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc0d4 (   0x34c) -[HDDatabaseConnectionPool diagnosticDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc420 (    0x2c) -[HDDatabaseConnectionPool delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc44c (    0x7c) -[HDDatabaseConnectionPool .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc4c8 (    0x44) -[_HDDatabaseConnectionWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc50c (   0x1b8) -[HDAssertion initWithAssertionIdentifier:ownerIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc6c4 (    0xa4) -[HDAssertion dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc768 (    0x5c) -[HDAssertion description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc7c4 (    0x7c) -[HDAssertion cloneWithOwnerIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc840 (     0x8) -[HDAssertion invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc848 (    0x44) -[HDAssertion state] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc88c (    0xa4) -[HDAssertion setBudget:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc930 (    0x68) -[HDAssertion remainingBudget] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc998 (    0x3c) -[HDAssertion rawState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cc9d4 (    0xe4) -[HDAssertion _takeWithManager:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccab8 (   0x114) -[HDAssertion _invalidateAndRelease:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccbcc (    0x9c) -[HDAssertion _setBudgetIntervalStartTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccc68 (    0xb0) -[HDAssertion _consumeFromBudgetThroughTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccd18 (   0x14c) -[HDAssertion _lock_description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cce64 (    0xa8) -[HDAssertion _lock_cloneWithOwnerIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccf0c (    0x44) -[HDAssertion _lock_state] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccf50 (    0x54) -[HDAssertion _lock_remainingBudget] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ccfa4 (    0xc8) -[HDAssertion _lock_setBudget:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd06c (   0x104) -[HDAssertion _lock_setBudgetIntervalStartTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd170 (    0xdc) -[HDAssertion _lock_consumeBudgetThroughTime:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd24c (     0x8) -[HDAssertion UUID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd254 (     0x8) -[HDAssertion assertionIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd25c (     0x8) -[HDAssertion ownerIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd264 (     0x8) -[HDAssertion budget] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd26c (    0x58) -[HDAssertion .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd2c4 (   0x240) -[HDXPCPeriodicActivity initWithName:baseInterval:criteria:loggingCategory:handler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd504 (    0x6c) _HDXPCPeriodicActivityLastSuccessfulRunUserDefaultsKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd570 (    0xc8) -[HDXPCPeriodicActivity _dateForDefaultsKey:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd638 (    0x88) -[HDXPCPeriodicActivity _lock_errorCount] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd6c0 (    0x80) -[HDXPCPeriodicActivity dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd740 (   0x190) -[HDXPCPeriodicActivity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cd8d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002020cd8e0 (   0x178) +[HDXPCPeriodicActivity registerDisabledPeriodicActivityWithName:loggingCategory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cda58 (   0x124) __82+[HDXPCPeriodicActivity registerDisabledPeriodicActivityWithName:loggingCategory:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdb7c (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdbb8 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdbf4 (   0x190) -[HDXPCPeriodicActivity registerActivity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdd84 (    0x74) __41-[HDXPCPeriodicActivity registerActivity]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cddf8 (   0x134) -[HDXPCPeriodicActivity _handleXPCActivityCallback:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdf2c (     0xc) __copy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdf38 (     0x8) __destroy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cdf40 (    0xe0) -[HDXPCPeriodicActivity unregisterActivity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce020 (    0x54) -[HDXPCPeriodicActivity criteria] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce074 (    0x68) -[HDXPCPeriodicActivity setCriteria:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce0dc (    0xb8) -[HDXPCPeriodicActivity _lock_setCriteria:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce194 (    0x54) -[HDXPCPeriodicActivity currentActivity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce1e8 (    0xa4) -[HDXPCPeriodicActivity didPerformActivityWithResult:minimumRetryInterval:activityStartDate:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce28c (   0x34c) -[HDXPCPeriodicActivity _lock_activityFinishedWithResult:minimumRetryInterval:activityStartDate:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce5d8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002020ce5ec (    0x44) -[HDXPCPeriodicActivity errorCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce630 (    0x70) -[HDXPCPeriodicActivity shouldDefer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce6a0 (    0x84) -[HDXPCPeriodicActivity lastSuccessfulRunDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce724 (    0x68) -[HDXPCPeriodicActivity earliestRunDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce78c (    0x6c) _HDXPCPeriodicActivityEarliestNextRunUserDefaultsKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce7f8 (    0x44) -[HDXPCPeriodicActivity isWaiting] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce83c (    0x88) -[HDXPCPeriodicActivity currentCriteria] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ce8c4 (   0x148) -[HDXPCPeriodicActivity externalConditionsChanged] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cea0c (     0x4) __50-[HDXPCPeriodicActivity externalConditionsChanged]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cea10 (   0x358) -[HDXPCPeriodicActivity _performCurrentActivityWithCompletion:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020ced68 (    0x4c) -[HDXPCPeriodicActivity modifiedIntervalForCurrentState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cedb4 (    0xe8) -[HDXPCPeriodicActivity _lock_modifiedIntervalForCurrentState] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cee9c (    0x6c) -[HDXPCPeriodicActivity updateCriteriaForModifiedIntervalForCurrentState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cef08 (    0x40) -[HDXPCPeriodicActivity resetIntervalWithCriteria:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cef48 (   0x1e8) -[HDXPCPeriodicActivity _performActivity:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf130 (     0x4) __42-[HDXPCPeriodicActivity _performActivity:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf134 (   0x46c) __63-[HDXPCPeriodicActivity _performCurrentActivityWithCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf5a0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002020cf5b4 (    0x68) HDStringFromXPCPeriodicActivityResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf61c (     0x4) __63-[HDXPCPeriodicActivity _performCurrentActivityWithCompletion:]_block_invoke.229 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf620 (   0x2cc) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf8ec (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002020cf900 (    0x58) __copy_helper_block_e8_32s40s48s56b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf958 (    0x4c) __destroy_helper_block_e8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cf9a4 (    0xa0) -[HDXPCPeriodicActivity _lock_incrementErrorCount] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfa44 (    0xf4) -[HDXPCPeriodicActivity _lock_setLastSuccessfulRunDate:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfb38 (    0x6c) _HDXPCPeriodicActivityErrorCountUserDefaultsKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfba4 (    0x78) -[HDXPCPeriodicActivity xpcActivity_register:criteria:handler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfc1c (    0x48) -[HDXPCPeriodicActivity xpcActivity_unregister:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfc64 (     0x8) -[HDXPCPeriodicActivity xpcActivity_shouldDefer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfc6c (     0xc) -[HDXPCPeriodicActivity xpcActivity_setCriteria:activity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfc78 (    0x2c) -[HDXPCPeriodicActivity xpcActivity_copyCriteria:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfca4 (     0x8) -[HDXPCPeriodicActivity xpcActivity_getState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfcac (     0xc) -[HDXPCPeriodicActivity xpcActivity_setState:activity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfcb8 (     0xc) -[HDXPCPeriodicActivity xpcActivity_setCompletionStatus:activity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfcc4 (    0x6c) -[HDXPCPeriodicActivity unitTest_setActivityShim:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfd30 (    0xec) -[HDXPCPeriodicActivity unitTest_reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfe1c (    0xd4) -[HDXPCPeriodicActivity unitTest_synthesizeActivityFireWithCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cfef0 (    0x10) __71-[HDXPCPeriodicActivity unitTest_synthesizeActivityFireWithCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff00 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff10 (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff18 (     0x8) -[HDXPCPeriodicActivity name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff20 (     0x8) -[HDXPCPeriodicActivity loggingCategory] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff28 (     0x8) -[HDXPCPeriodicActivity baseInterval] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cff30 (    0x70) -[HDXPCPeriodicActivity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cffa0 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cffbc (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cffcc (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020cffe8 (    0x20) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0008 (    0x10) -[HDContentProtectionManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0018 (   0x22c) -[HDContentProtectionManager initWithNotifications:initialState:unlockedSinceBoot:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0244 (    0x24) __83-[HDContentProtectionManager initWithNotifications:initialState:unlockedSinceBoot:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0268 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0270 (    0x6c) -[HDContentProtectionManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d02dc (   0x1d8) -[HDContentProtectionManager addContentProtectionObserver:withQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d04b4 (   0x11c) -[HDContentProtectionManager addSynchronousContentProtectionObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d05d0 (    0xac) -[HDContentProtectionManager removeContentProtectionObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d067c (    0x24) -[HDContentProtectionManager observedState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d06a0 (    0x48) -[HDContentProtectionManager isProtectedDataAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d06e8 (    0x10) +[HDContentProtectionManager isProtectedDataAvailableWithState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d06f8 (    0x10) -[HDContentProtectionManager deviceUnlockedSinceBoot] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0708 (    0x10) -[HDContentProtectionManager shouldIgnoreUnlockedState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0718 (     0x4) -[HDContentProtectionManager recheckContentProtectionState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d071c (    0x74) -[HDContentProtectionManager setContentProtectionState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0790 (    0x74) __56-[HDContentProtectionManager setContentProtectionState:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0804 (    0x14) __56-[HDContentProtectionManager setContentProtectionState:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0818 (   0x320) -[HDContentProtectionManager _observationQueue_adjustContentProtectionStateWithBlock:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0b38 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002020d0b4c (    0x78) -[HDContentProtectionManager setShouldIgnoreUnlockedState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0bc4 (    0x7c) __59-[HDContentProtectionManager setShouldIgnoreUnlockedState:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0c40 (    0x14) __59-[HDContentProtectionManager setShouldIgnoreUnlockedState:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0c54 (    0xc4) -[HDContentProtectionManager diagnosticDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d0d18 (   0x3c4) __51-[HDContentProtectionManager diagnosticDescription]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d10dc (    0x24) HDStringFromContentProtectionState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1100 (     0xc) __86-[HDContentProtectionManager _observationQueue_adjustContentProtectionStateWithBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d110c (     0xc) __86-[HDContentProtectionManager _observationQueue_adjustContentProtectionStateWithBlock:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1118 (    0x50) -[HDContentProtectionManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1168 (    0x8c) -[_HDContentProtectionObserverWrapper init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d11f4 (    0x40) -[_HDContentProtectionObserverWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1234 (    0xdc) -[HDXPCAlarm initWithScheduler:eventName:eventHandlerQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1310 (   0x128) -[HDXPCAlarm initWithProfileIdentifier:scheduler:eventName:eventHandlerQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1438 (    0xec) -[HDXPCAlarm beginReceivingEventsWithHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1524 (    0x58) -[HDXPCAlarm invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d157c (   0x110) -[HDXPCAlarm setNextFireDate:isUserVisible:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d168c (    0xd0) -[HDXPCAlarm unschedule] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d175c (    0x50) -[HDXPCAlarm description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d17ac (   0x170) -[HDXPCAlarm eventDidFire:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d191c (    0x78) __27-[HDXPCAlarm eventDidFire:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1994 (    0x50) __copy_helper_block_e8_32s40s48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d19e4 (    0x44) __destroy_helper_block_e8_32s40s48s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1a28 (    0xc8) -[HDXPCAlarm unitTest_fireEventImmediatelyWithDate:isUserVisible:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1af0 (     0x8) -[HDXPCAlarm eventName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1af8 (     0x8) -[HDXPCAlarm scheduler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b00 (     0x8) -[HDXPCAlarm eventHandlerQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b08 (     0x8) -[HDXPCAlarm eventHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b10 (     0x8) -[HDXPCAlarm setEventHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b18 (     0x8) -[HDXPCAlarm unitTest_schedulerObserver] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b20 (     0x8) -[HDXPCAlarm setUnitTest_schedulerObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b28 (    0x68) -[HDXPCAlarm .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1b90 (    0x80) -[HDXPCListener init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1c10 (    0x78) -[HDXPCListener initWithLabel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1c88 (    0x78) -[HDXPCListener initWithMachServiceName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1d00 (   0x188) -[HDXPCListener initWithUnderlyingListener:label:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1e88 (    0x48) -[HDXPCListener dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1ed0 (    0x54) +[HDXPCListener serviceListener] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1f24 (    0x78) __32+[HDXPCListener serviceListener]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d1f9c (   0x154) -[HDXPCListener allClients] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d20f0 (     0x8) -[HDXPCListener setQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d20f8 (     0xc) -[HDXPCListener setConnectionQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2104 (     0x8) -[HDXPCListener resume] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d210c (    0x40) -[HDXPCListener invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d214c (     0x8) -[HDXPCListener endpoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2154 (   0x5bc) -[HDXPCListener listener:shouldAcceptNewConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2710 (    0x50) __52-[HDXPCListener listener:shouldAcceptNewConnection:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2760 (    0xac) __52-[HDXPCListener listener:shouldAcceptNewConnection:]_block_invoke.246 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d280c (    0x10) __52-[HDXPCListener listener:shouldAcceptNewConnection:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d281c (    0x44) __copy_helper_block_e8_32s40s48s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2860 (    0xac) __52-[HDXPCListener listener:shouldAcceptNewConnection:]_block_invoke.247 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d290c (    0x10) __52-[HDXPCListener listener:shouldAcceptNewConnection:]_block_invoke_2.248 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d291c (   0x1a8) -[HDXPCListener _handleInvalidationWithClient:exportedObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2ac4 (    0xc4) -[HDXPCListener _handleInterruptionWithClient:exportedObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2b88 (    0xa0) -[HDXPCListener _handleConnectionInvalidationForClient:exportedObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2c28 (    0x2c) -[HDXPCListener delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2c54 (     0xc) -[HDXPCListener setDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2c60 (    0x2c) -[HDXPCListener clientProvider] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2c8c (     0xc) -[HDXPCListener setClientProvider:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2c98 (     0xc) -[HDXPCListener label] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2ca4 (    0x6c) -[HDXPCListener .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2d10 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2d2c (   0x1b8) -[HDXPCEventPublisher initWithStream:entitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2ee4 (    0x74) __50-[HDXPCEventPublisher initWithStream:entitlement:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d2f58 (   0x194) -[HDXPCEventPublisher _handleEventAction:token:descriptor:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d30ec (    0x58) __50-[HDXPCEventPublisher initWithStream:entitlement:]_block_invoke.219 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3144 (   0x194) __59-[HDXPCEventPublisher _handleEventAction:token:descriptor:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d32d8 (   0x128) -[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3400 (   0x134) -[HDXPCEventPublisher _queue_removeSubscriberForToken:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3534 (   0x124) -[HDXPCEventPublisher _queue_sendPendingEvents] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3658 (   0x404) __63-[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3a5c (   0x240) -[HDXPCEventPublisher _queue_sendEventWithXPCObject:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3c9c (    0xa0) -[HDXPCEventPublisher broadcastEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3d3c (    0x78) __38-[HDXPCEventPublisher broadcastEvent:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3db4 (    0x68) -[HDXPCEventPublisher .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3e1c (    0x20) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3e3c (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3e5c (    0xa0) +[HDXPCClient clientWithConnection:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d3efc (   0x128) -[HDXPCClient initWithConnection:process:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4024 (    0xb4) -[HDXPCClient initWithProcess:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d40d8 (    0xa8) -[HDXPCClient _initWithConnection:process:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4180 (   0x14c) -[HDXPCClient description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d42cc (     0xc) -[HDXPCClient process] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d42d8 (     0xc) -[HDXPCClient connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d42e4 (    0x44) -[HDXPCClient .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4328 (    0xa0) +[HDDiagnosticManager sharedDiagnosticManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d43c8 (    0x3c) __46+[HDDiagnosticManager sharedDiagnosticManager]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4404 (    0x74) -[HDDiagnosticManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4478 (    0x68) -[HDDiagnosticManager addObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d44e0 (    0x68) -[HDDiagnosticManager removeObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4548 (    0x28) -[HDDiagnosticManager logAllDiagnostics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4570 (     0x8) -[HDDiagnosticManager diagnosticsForKeys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4578 (   0x484) -[HDDiagnosticManager _diagnosticsForKeys:shouldLog:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d49fc (    0xa0) _LogOrAppend [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4a9c (   0x208) -[HDDiagnosticManager _diagnosticsOverview] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4ca4 (     0x4) HDDiagnosticStringFromDate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4ca8 (     0xc) -[HDDiagnosticManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4cb4 (     0x4) HDDiagnosticStringFromDuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4cb8 (    0xbc) -[HDAssertionManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4d74 (    0xa4) +[HDAssertionManager _sharedBudgetTimerQueue] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4e18 (    0x48) -[HDAssertionManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4e60 (    0x4c) __45+[HDAssertionManager _sharedBudgetTimerQueue]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4eac (    0xf8) -[HDAssertionManager hasActiveAssertionForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4fa4 (    0x18) __54-[HDAssertionManager hasActiveAssertionForIdentifier:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4fbc (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4fcc (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d4fd8 (   0x198) -[HDAssertionManager _lock_enumerateActiveAssertionsWithIdentifier:handler:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5170 (   0x130) -[HDAssertionManager hasActiveAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d52a0 (   0x14c) __41-[HDAssertionManager hasActiveAssertion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d53ec (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5434 (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5474 (   0x100) -[HDAssertionManager activeAssertionsForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5574 (     0xc) __52-[HDAssertionManager activeAssertionsForIdentifier:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5580 (    0xe0) -[HDAssertionManager allAssertionsForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5660 (   0x108) -[HDAssertionManager ownerIdentifiersForAssertionIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5768 (    0x54) __61-[HDAssertionManager ownerIdentifiersForAssertionIdentifier:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d57bc (   0x444) -[HDAssertionManager takeAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5c00 (    0xa4) -[_HDAssertionRecord initWithAssertionIdentifier:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5ca4 (    0x18) __36-[HDAssertionManager takeAssertion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5cbc (    0x9c) -[HDAssertionManager _lock_consumeBudgetsThenResetTimerWithIntermediateBlock:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5d58 (    0x58) __36-[HDAssertionManager takeAssertion:]_block_invoke.242 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5db0 (    0xdc) -[HDAssertionManager _postNotification:forAssertion:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5e8c (    0x48) -[HDAssertionManager resumeBudgetConsumption] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5ed4 (    0x60) -[HDAssertionManager _lock_resumeBudgetConsumption] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5f34 (    0x48) -[HDAssertionManager suspendBudgetConsumption] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5f7c (    0x5c) -[HDAssertionManager _lock_suspendBudgetConsumption] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d5fd8 (   0x124) -[HDAssertionManager addObserver:forAssertionIdentifier:queue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d60fc (    0xa0) -[HDAssertionManager removeObserver:forAssertionIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d619c (   0x14c) -[HDAssertionManager removeObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d62e8 (   0x2bc) -[HDAssertionManager invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d65a4 (    0x68) -[HDAssertionManager _releaseAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d660c (   0x20c) -[HDAssertionManager _lock_releaseAssertion:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d6818 (    0xd0) __53-[HDAssertionManager _postNotification:forAssertion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d68e8 (   0x104) -[HDAssertionManager _budgetConsumptionTimerDidFire] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d69ec (     0xc) __45-[HDAssertionManager _lock_releaseAssertion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d69f8 (   0x2fc) -[HDAssertionManager _lock_setBudgetConsumptionTimerWithStartTime:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d6cf4 (   0x2b4) -[HDAssertionManager _lock_consumeBudgetsThroughTime:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d6fa8 (    0x40) __67-[HDAssertionManager _lock_setBudgetConsumptionTimerWithStartTime:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d6fe8 (     0x8) -[HDAssertionManager budgetTimerQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d6ff0 (    0x68) -[HDAssertionManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7058 (    0x44) -[_HDAssertionRecord .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d709c (   0x1d0) -[HDXPCGatedActivity initWithName:criteria:loggingCategory:handler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d726c (    0x44) -[HDXPCGatedActivity waitingForTrigger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d72b0 (   0x138) -[HDXPCGatedActivity setWaitingForTrigger:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d73e8 (     0x4) __43-[HDXPCGatedActivity setWaitingForTrigger:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d73ec (   0x110) -[HDXPCGatedActivity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d74fc (    0x74) -[HDXPCGatedActivity requestRunWithMaximumDelay:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7570 (   0x324) -[HDXPCGatedActivity _runRequestWithMaximumDelay:requiredDelay:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7894 (     0xc) -[HDXPCGatedActivity runUngatedWithCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d78a0 (    0x50) -[HDXPCGatedActivity shouldDefer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d78f0 (    0xf4) -[HDXPCGatedActivity _registerActivityWithCriteria:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d79e4 (    0x74) __52-[HDXPCGatedActivity _registerActivityWithCriteria:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7a58 (    0xac) -[HDXPCGatedActivity _registerActivityWithCriteria:delay:gracePeriod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7b04 (   0x244) -[HDXPCGatedActivity _handleXPCActivityCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d7d48 (   0x3d8) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8120 (   0x1d8) -[HDXPCGatedActivity _performActivity:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d82f8 (    0x10) __50-[HDXPCGatedActivity _performActivity:completion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8308 (   0x168) -[HDXPCGatedActivity _activityFinishedWithResult:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8470 (    0x70) -[HDXPCGatedActivity _lock_setNextScheduledFireDeadline:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d84e0 (    0x60) -[HDXPCGatedActivity _lock_resetNextActivityFireDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8540 (    0x44) -[HDXPCGatedActivity unitTest_setActivityCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8584 (     0x8) -[HDXPCGatedActivity name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d858c (     0x8) -[HDXPCGatedActivity loggingCategory] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8594 (     0xc) -[HDXPCGatedActivity currentActivity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85a0 (     0x8) -[HDXPCGatedActivity setCurrentActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85a8 (     0xc) -[HDXPCGatedActivity rescheduleWhileInProgress] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85b4 (     0x8) -[HDXPCGatedActivity setRescheduleWhileInProgress:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85bc (     0x8) -[HDXPCGatedActivity quota] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85c4 (     0x8) -[HDXPCGatedActivity setQuota:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d85cc (    0x98) -[HDXPCGatedActivity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8664 (    0x68) HDStringFromGatedActivityResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d86cc (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d86e8 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8704 (    0x9c) -[HDAnalyticsWriter initWithURL:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d87a0 (    0x8c) -[HDAnalyticsWriter init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d882c (    0x18) -[HDAnalyticsWriter submitJSONAnalyticsData:bugType:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8844 (   0x4ac) -[HDAnalyticsWriter _submitJSONAnalyticsData:bugType:customDirectory:configuration:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8cf0 (     0xc) -[HDAnalyticsWriter submitJSONAnalyticsData:toDirectory:withConfiguration:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8cfc (    0xc8) -[HDAnalyticsWriter URLForAnalyticsFileWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8dc4 (   0x17c) -[HDAnalyticsWriter analyticsFilePathsWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d8f40 (   0x33c) -[HDAnalyticsWriter _cleanAnalyticsDirectory:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d927c (    0xa0) __49-[HDAnalyticsWriter analyticsFilePathsWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d931c (    0x5c) -[HDAnalyticsWriter _createAndCleanAnalyticsDirectoryWithError:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9378 (    0xc4) -[HDAnalyticsWriter _serializeAnalyticsData:errorOut:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d943c (    0xa8) -[HDAnalyticsWriter _loadCertificateWithError:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d94e4 (   0x100) -[HDAnalyticsWriter _encryptAnalyticsData:withConfig:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d95e4 (    0x7c) __90-[HDAnalyticsWriter _submitJSONAnalyticsData:bugType:customDirectory:configuration:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9660 (   0x150) -[HDAnalyticsWriter _createAnalyticsDirectory:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d97b0 (     0xc) -[HDAnalyticsWriter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d97bc (    0xa0) +[NSDictionary(HealthDaemonFoundation) hd_dictionaryFromXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d985c (   0x2b4) -[HDXPCProcess initWithAuditToken:entitlements:isExtension:containerAppBundleIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9b10 (    0x28) -[HDXPCProcess name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9b38 (   0x160) -[HDXPCProcess isWidgetKitExtension] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9c98 (   0x130) -[HDXPCProcess _pluginBundleForCurrentProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9dc8 (   0x150) +[HDXPCProcess processWithConnection:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9f18 (    0xd4) +[HDXPCProcess currentProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9fec (     0x8) -[HDXPCProcess processIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9ff4 (     0x8) -[HDXPCProcess applicationIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020d9ffc (    0x84) -[HDXPCProcess hasEntitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da080 (    0x80) -[HDXPCProcess hasRequiredEntitlement:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da100 (    0x9c) -[HDXPCProcess hasArrayEntitlement:containing:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da19c (    0x9c) -[HDXPCProcess hasRequiredArrayEntitlement:containing:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da238 (    0x78) -[HDXPCProcess valueForEntitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da2b0 (    0x70) -[HDXPCProcess dropEntitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da320 (    0x78) -[HDXPCProcess unitTest_copyProcessWithEntitlements:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da398 (     0x8) -[HDXPCProcess restoreEntitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da3a0 (    0xd0) -[HDXPCProcess description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da470 (     0x8) -[HDXPCProcess auditToken] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da478 (     0x8) -[HDXPCProcess bundleIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da480 (     0x8) -[HDXPCProcess isExtension] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da488 (     0x8) -[HDXPCProcess containerAppBundleIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da490 (     0x8) -[HDXPCProcess entitlements] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da498 (    0x74) -[HDXPCProcess .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da50c (    0x40) __HDXPCProcessNameFromAuditToken_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da54c (   0x1b0) -[HDXPCAlarmScheduler init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da6fc (    0x5c) __27-[HDXPCAlarmScheduler init]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da758 (   0x200) -[HDXPCAlarmScheduler _queue_handleXPCEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020da958 (    0xfc) -[HDXPCAlarmScheduler _queue_scheduleEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020daa54 (    0xac) -[HDXPCAlarmScheduler _queue_unscheduleEventWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dab00 (    0xa0) -[HDXPCAlarmScheduler unittest_fireEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020daba0 (     0xc) __42-[HDXPCAlarmScheduler unittest_fireEvent:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dabac (    0x68) -[HDXPCAlarmScheduler _queue_handleEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dac14 (   0x270) -[HDXPCAlarmScheduler _queue_notifyAlarmsOfPendingEvents] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dae84 (    0xa0) -[HDXPCAlarmScheduler addAlarm:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020daf24 (   0x11c) __32-[HDXPCAlarmScheduler addAlarm:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db040 (    0xa0) -[HDXPCAlarmScheduler removeAlarm:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db0e0 (   0x10c) __35-[HDXPCAlarmScheduler removeAlarm:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db1ec (    0xa0) -[HDXPCAlarmScheduler scheduleEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db28c (    0xe8) __37-[HDXPCAlarmScheduler scheduleEvent:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db374 (    0xa0) -[HDXPCAlarmScheduler unscheduleEventWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db414 (    0xe8) __47-[HDXPCAlarmScheduler unscheduleEventWithName:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db4fc (   0x138) -[HDXPCAlarmScheduler diagnosticDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db634 (   0x250) __44-[HDXPCAlarmScheduler diagnosticDescription]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db884 (     0x8) -[HDXPCAlarmScheduler unitTest_schedulerObserver] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db88c (     0x8) -[HDXPCAlarmScheduler setUnitTest_schedulerObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db894 (    0x5c) -[HDXPCAlarmScheduler .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db8f0 (    0x94) +[HDXPCAlarmEvent _eventWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020db984 (    0xbc) -[HDXPCAlarmEvent initWithName:fireDate:isUserVisible:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dba40 (    0xac) -[HDXPCAlarmEvent isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbaec (    0x40) -[HDXPCAlarmEvent hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbb2c (    0xa4) -[HDXPCAlarmEvent description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbbd0 (     0x8) -[HDXPCAlarmEvent name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbbd8 (     0x8) -[HDXPCAlarmEvent fireDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbbe0 (     0x8) -[HDXPCAlarmEvent isUserVisible] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbbe8 (    0x44) -[HDXPCAlarmEvent .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbc2c (   0x268) -[HDUserNotification presentWithResponseHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dbe94 (   0x194) _HDCFNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc028 (    0x64) -[HDUserNotification _handleResponse:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc08c (     0x8) -[HDUserNotification title] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc094 (     0x8) -[HDUserNotification setTitle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc09c (     0x8) -[HDUserNotification message] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0a4 (     0x8) -[HDUserNotification setMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0ac (     0x8) -[HDUserNotification defaultButton] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0b4 (     0x8) -[HDUserNotification setDefaultButton:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0bc (     0x8) -[HDUserNotification cancelButton] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0c4 (     0x8) -[HDUserNotification setCancelButton:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0cc (     0x8) -[HDUserNotification otherButton] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0d4 (     0x8) -[HDUserNotification setOtherButton:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0dc (     0x8) -[HDUserNotification additionalDescriptors] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0e4 (     0x8) -[HDUserNotification setAdditionalDescriptors:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0ec (     0x8) -[HDUserNotification alertLevel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0f4 (     0x8) -[HDUserNotification setAlertLevel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc0fc (     0x8) -[HDUserNotification userNotificationOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc104 (     0x8) -[HDUserNotification setUserNotificationOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc10c (     0x8) -[HDUserNotification responseHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc114 (     0x8) -[HDUserNotification setResponseHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc11c (     0x8) -[HDUserNotification notification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc124 (     0x8) -[HDUserNotification setNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc12c (    0x80) -[HDUserNotification .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc1ac (    0x2c) HDUserNotificationResponseButtonToString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc1d8 (    0x44) HDIsUnitTesting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc21c (    0x30) __HDIsUnitTesting_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc24c (    0xb8) -[HDAssertion _takeWithManager:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc304 (    0xa0) -[HDAssertion _invalidateAndRelease:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc3a4 (    0x68) -[HDXPCPeriodicActivity dealloc].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc40c (    0x68) __82+[HDXPCPeriodicActivity registerDisabledPeriodicActivityWithName:loggingCategory:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc474 (    0x74) -[HDXPCPeriodicActivity _lock_activityFinishedWithResult:minimumRetryInterval:activityStartDate:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc4e8 (    0x5c) -[HDXPCPeriodicActivity _performActivity:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc544 (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc5a0 (    0x74) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc614 (    0x68) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc67c (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc6d8 (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc734 (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc790 (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc7ec (    0x5c) -[HDXPCPeriodicActivity _updateStateForFinishedActivity:result:].cold.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc848 (    0x78) -[HDXPCListener listener:shouldAcceptNewConnection:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc8c0 (    0x78) -[HDXPCListener listener:shouldAcceptNewConnection:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dc938 (   0x11c) -[HDXPCListener _handleInterruptionWithClient:exportedObject:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dca54 (    0x74) __50-[HDXPCEventPublisher initWithStream:entitlement:]_block_invoke.219.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcac8 (    0x8c) __63-[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcb54 (    0x88) __63-[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:]_block_invoke.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcbdc (    0x78) __63-[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:]_block_invoke.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcc54 (    0x7c) __63-[HDXPCEventPublisher _queue_addSubscriberForToken:descriptor:]_block_invoke.cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dccd0 (    0x78) _LogOrAppend.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcd48 (    0x88) -[HDAssertionManager _lock_releaseAssertion:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcdd0 (    0x6c) -[HDXPCGatedActivity _handleXPCActivityCallback:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dce3c (    0x5c) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dce98 (    0x5c) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcef4 (    0x8c) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcf80 (    0x5c) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke.cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dcfdc (    0x5c) __49-[HDXPCGatedActivity _handleXPCActivityCallback:]_block_invoke.cold.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dd038 (    0x88) -[HDXPCGatedActivity _performActivity:completion:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dd0c0 (    0x44) +[NSDictionary(HealthDaemonFoundation) hd_dictionaryFromXPCObject:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dd104 (    0x78) -[HDXPCProcess isWidgetKitExtension].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dd17c (    0x88) -[HDXPCProcess _pluginBundleForCurrentProcess].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002020dd204 (    0x9c) -[HDXPCAlarmScheduler _queue_handleXPCEvent:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000002020dd2a0 (   0x780) __TEXT __auth_stubs
                0x00000002020dd2a0 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd2b0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd2c0 (    0x10) DYLD-STUB$$CFRunLoopAddSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd2d0 (    0x10) DYLD-STUB$$CFRunLoopGetMain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd2e0 (    0x10) DYLD-STUB$$CFUserNotificationCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd2f0 (    0x10) DYLD-STUB$$CFUserNotificationCreateRunLoopSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd300 (    0x10) DYLD-STUB$$HKCreateSerialDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd310 (    0x10) DYLD-STUB$$HKDiagnosticStringFromDate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd320 (    0x10) DYLD-STUB$$HKDiagnosticStringFromDuration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd330 (    0x10) DYLD-STUB$$HKHealthWrapDERDataFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd340 (    0x10) DYLD-STUB$$HKLogAssertions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd350 (    0x10) DYLD-STUB$$HKLogInfrastructure [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd360 (    0x10) DYLD-STUB$$HKMachAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd370 (    0x10) DYLD-STUB$$HKSubmitAnalyticsFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd380 (    0x10) DYLD-STUB$$NSClassFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd390 (    0x10) DYLD-STUB$$NSStringFromClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3a0 (    0x10) DYLD-STUB$$NSStringFromSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3b0 (    0x10) DYLD-STUB$$SecCertificateCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3c0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3d0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3e0 (    0x10) DYLD-STUB$$_CFXPCCreateCFObjectFromXPCObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd3f0 (    0x10) DYLD-STUB$$_HKInitializeLogging [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd400 (    0x10) DYLD-STUB$$_HKLogDroppedError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd410 (    0x10) DYLD-STUB$$_HKLogPersistedSignposts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd420 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd430 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd440 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd450 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd460 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd470 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd480 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd490 (    0x10) DYLD-STUB$$dispatch_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4a0 (    0x10) DYLD-STUB$$dispatch_assert_queue$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4b0 (    0x10) DYLD-STUB$$dispatch_assert_queue_not$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4c0 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4d0 (    0x10) DYLD-STUB$$dispatch_group_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4e0 (    0x10) DYLD-STUB$$dispatch_group_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd4f0 (    0x10) DYLD-STUB$$dispatch_group_leave [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd500 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd510 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd520 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd530 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd540 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd550 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd560 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd570 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd580 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd590 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5a0 (    0x10) DYLD-STUB$$exp2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5b0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5c0 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5d0 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5e0 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd5f0 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd600 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd610 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd620 (    0x10) DYLD-STUB$$objc_copyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd630 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd640 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd650 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd660 (    0x10) DYLD-STUB$$objc_initWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd670 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd680 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd690 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6a0 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6b0 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6c0 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6d0 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6e0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd6f0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd700 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd710 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd720 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd730 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd740 (    0x10) DYLD-STUB$$objc_setProperty_atomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd750 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd760 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd770 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd780 (    0x10) DYLD-STUB$$objc_unsafeClaimAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd790 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7a0 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7b0 (    0x10) DYLD-STUB$$os_signpost_id_make_with_pointer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7c0 (    0x10) DYLD-STUB$$os_unfair_lock_assert_owner [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7d0 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7e0 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd7f0 (    0x10) DYLD-STUB$$proc_name [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd800 (    0x10) DYLD-STUB$$proc_pidpath_audittoken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd810 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd820 (    0x10) DYLD-STUB$$pthread_threadid_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd830 (    0x10) DYLD-STUB$$sandbox_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd840 (    0x10) DYLD-STUB$$xpc_activity_copy_criteria [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd850 (    0x10) DYLD-STUB$$xpc_activity_get_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd860 (    0x10) DYLD-STUB$$xpc_activity_register [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd870 (    0x10) DYLD-STUB$$xpc_activity_set_completion_status [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd880 (    0x10) DYLD-STUB$$xpc_activity_set_criteria [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd890 (    0x10) DYLD-STUB$$xpc_activity_set_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8a0 (    0x10) DYLD-STUB$$xpc_activity_should_defer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8b0 (    0x10) DYLD-STUB$$xpc_activity_unregister [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8c0 (    0x10) DYLD-STUB$$xpc_bool_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8d0 (    0x10) DYLD-STUB$$xpc_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8e0 (    0x10) DYLD-STUB$$xpc_copy_code_signing_identity_for_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd8f0 (    0x10) DYLD-STUB$$xpc_copy_entitlement_for_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd900 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd910 (    0x10) DYLD-STUB$$xpc_dictionary_get_audit_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd920 (    0x10) DYLD-STUB$$xpc_dictionary_get_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd930 (    0x10) DYLD-STUB$$xpc_dictionary_get_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd940 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd950 (    0x10) DYLD-STUB$$xpc_dictionary_set_date [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd960 (    0x10) DYLD-STUB$$xpc_dictionary_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd970 (    0x10) DYLD-STUB$$xpc_equal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd980 (    0x10) DYLD-STUB$$xpc_event_publisher_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd990 (    0x10) DYLD-STUB$$xpc_event_publisher_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9a0 (    0x10) DYLD-STUB$$xpc_event_publisher_fire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9b0 (    0x10) DYLD-STUB$$xpc_event_publisher_fire_with_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9c0 (    0x10) DYLD-STUB$$xpc_event_publisher_set_error_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9d0 (    0x10) DYLD-STUB$$xpc_event_publisher_set_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9e0 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dd9f0 (    0x10) DYLD-STUB$$xpc_set_event [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dda00 (    0x10) DYLD-STUB$$xpc_set_event_stream_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002020dda10 (    0x10) DYLD-STUB$$xpc_type_get_name [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000002020dda20 (   0xdec) __TEXT __objc_methlist
                0x00000002020dda20 (    0xa8) _OBJC_$_INSTANCE_METHODS_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x00000002020ddac8 (    0x18) _OBJC_$_INSTANCE_METHODS__HDDatabaseConnectionWrapper [NameNList, MangledNameNList, NList] 
                0x00000002020ddae0 (   0x138) _OBJC_$_INSTANCE_METHODS_HDAssertion [NameNList, MangledNameNList, NList] 
                0x00000002020ddc18 (    0x18) _OBJC_$_CLASS_METHODS_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x00000002020ddc30 (   0x1a0) _OBJC_$_INSTANCE_METHODS_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x00000002020dddd0 (    0x18) _OBJC_$_CLASS_METHODS_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x00000002020ddde8 (    0xc0) _OBJC_$_INSTANCE_METHODS_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x00000002020ddea8 (    0x20) _OBJC_$_INSTANCE_METHODS__HDContentProtectionObserverWrapper [NameNList, MangledNameNList, NList] 
                0x00000002020ddec8 (    0xd8) _OBJC_$_INSTANCE_METHODS_HDXPCAlarm [NameNList, MangledNameNList, NList] 
                0x00000002020ddfa0 (    0x18) _OBJC_$_CLASS_METHODS_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x00000002020ddfb8 (   0x108) _OBJC_$_INSTANCE_METHODS_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x00000002020de0c0 (    0x30) _OBJC_$_INSTANCE_METHODS_HDXPCEventPublisher [NameNList, MangledNameNList, NList] 
                0x00000002020de0f0 (    0x18) _OBJC_$_CLASS_METHODS_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x00000002020de108 (    0x60) _OBJC_$_INSTANCE_METHODS_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x00000002020de168 (    0x18) _OBJC_$_CLASS_METHODS_HDDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x00000002020de180 (    0x68) _OBJC_$_INSTANCE_METHODS_HDDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x00000002020de1e8 (    0xd8) _OBJC_$_INSTANCE_METHODS_HDAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000002020de2c0 (    0x18) _OBJC_$_INSTANCE_METHODS__HDAssertionRecord [NameNList, MangledNameNList, NList] 
                0x00000002020de2d8 (   0x138) _OBJC_$_INSTANCE_METHODS_HDXPCGatedActivity [NameNList, MangledNameNList, NList] 
                0x00000002020de410 (    0x60) _OBJC_$_INSTANCE_METHODS_HDAnalyticsWriter [NameNList, MangledNameNList, NList] 
                0x00000002020de470 (    0x18) _OBJC_$_CLASS_METHODS_NSDictionary(HealthDaemonFoundation) [NameNList, MangledNameNList, NList] 
                0x00000002020de488 (    0x20) _OBJC_$_CLASS_METHODS_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x00000002020de4a8 (   0x108) _OBJC_$_INSTANCE_METHODS_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x00000002020de5b0 (    0x18) _OBJC_$_CLASS_METHODS_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x00000002020de5c8 (    0x68) _OBJC_$_INSTANCE_METHODS_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x00000002020de630 (    0xc0) _OBJC_$_INSTANCE_METHODS_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x00000002020de6f0 (   0x11c) _OBJC_$_INSTANCE_METHODS_HDUserNotification [NameNList, MangledNameNList, NList] 
            0x00000002020de810 (    0x90) __TEXT __const
                0x00000002020de810 (    0x40) HealthDaemonFoundationVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020de850 (    0x50) HealthDaemonFoundationVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002020de8a0 (  0x1349) __TEXT __cstring
            0x00000002020dfbe9 (  0x13c0) __TEXT __oslogstring
            0x00000002020e0fac (    0x9c) __TEXT __gcc_except_tab
                0x00000002020e0fac (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000002020e0fcc (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000002020e0fe8 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000002020e0ffc (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000002020e1018 (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000002020e1034 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
            0x00000002020e1048 (   0x544) __TEXT __unwind_info
            0x00000002020e158c (   0x200) __TEXT __objc_classname
            0x00000002020e178c (  0x2fc2) __TEXT __objc_methname
            0x00000002020e474e (   0x84b) __TEXT __objc_methtype
            0x00000002020e4fa0 (  0x2060) __TEXT __objc_stubs
                0x00000002020e4fa0 (    0x20) objc_msgSend$URLByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e4fc0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e4fe0 (    0x20) objc_msgSend$UUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5000 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5020 (    0x20) objc_msgSend$_activityFinishedWithResult:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5040 (    0x20) objc_msgSend$_consumeFromBudgetThroughTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5060 (    0x20) objc_msgSend$_diagnosticsForKeys:shouldLog: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5080 (    0x20) objc_msgSend$_diagnosticsOverview [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e50a0 (    0x20) objc_msgSend$_eventWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e50c0 (    0x20) objc_msgSend$_handleConnectionInvalidationForClient:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e50e0 (    0x20) objc_msgSend$_handleInterruptionWithClient:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5100 (    0x20) objc_msgSend$_handleInvalidationWithClient:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5120 (    0x20) objc_msgSend$_handleResponse: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5140 (    0x20) objc_msgSend$_handleXPCActivityCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5160 (    0x20) objc_msgSend$_initWithConnection:process: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5180 (    0x20) objc_msgSend$_invalidateAndRelease: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e51a0 (    0x20) objc_msgSend$_lock_cloneWithOwnerIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e51c0 (    0x20) objc_msgSend$_lock_consumeBudgetThroughTime:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e51e0 (    0x20) objc_msgSend$_lock_description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5200 (    0x20) objc_msgSend$_lock_remainingBudget [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5220 (    0x20) objc_msgSend$_lock_resetNextActivityFireDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5240 (    0x20) objc_msgSend$_lock_setBudget:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5260 (    0x20) objc_msgSend$_lock_setBudgetIntervalStartTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5280 (    0x20) objc_msgSend$_lock_setNextScheduledFireDeadline: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e52a0 (    0x20) objc_msgSend$_lock_state [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e52c0 (    0x20) objc_msgSend$_performActivity:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e52e0 (    0x20) objc_msgSend$_pluginBundleForCurrentProcess [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5300 (    0x20) objc_msgSend$_queue_handleEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5320 (    0x20) objc_msgSend$_queue_handleXPCEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5340 (    0x20) objc_msgSend$_queue_notifyAlarmsOfPendingEvents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5360 (    0x20) objc_msgSend$_queue_scheduleEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5380 (    0x20) objc_msgSend$_queue_unscheduleEventWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e53a0 (    0x20) objc_msgSend$_registerActivityWithCriteria: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e53c0 (    0x20) objc_msgSend$_registerActivityWithCriteria:delay:gracePeriod: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e53e0 (    0x20) objc_msgSend$_releaseAssertion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5400 (    0x20) objc_msgSend$_runRequestWithMaximumDelay:requiredDelay:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5420 (    0x20) objc_msgSend$_setBudgetIntervalStartTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5440 (    0x20) objc_msgSend$_setQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5460 (    0x20) objc_msgSend$_takeWithManager: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5480 (    0x20) objc_msgSend$addAlarm: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e54a0 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e54c0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e54e0 (    0x20) objc_msgSend$alertLevel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5500 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5520 (    0x20) objc_msgSend$allObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5540 (    0x20) objc_msgSend$allObservers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5560 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5580 (    0x20) objc_msgSend$anonymousListener [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e55a0 (    0x20) objc_msgSend$anyObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e55c0 (    0x20) objc_msgSend$appendData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e55e0 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5600 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5620 (    0x20) objc_msgSend$applicationIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5640 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5660 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5680 (    0x20) objc_msgSend$assertionIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e56a0 (    0x20) objc_msgSend$assertionManager:assertionInvalidated: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e56c0 (    0x20) objc_msgSend$assertionManager:assertionTaken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e56e0 (    0x20) objc_msgSend$auditToken [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5700 (    0x20) objc_msgSend$auditTokenForCurrentTask [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5720 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5740 (    0x20) objc_msgSend$broadcast [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5760 (    0x20) objc_msgSend$bundleIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5780 (    0x20) objc_msgSend$bundleWithURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e57a0 (    0x20) objc_msgSend$clientForListener:connection:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e57c0 (    0x20) objc_msgSend$clientProvider [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e57e0 (    0x20) objc_msgSend$clientWithConnection:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5800 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5820 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5840 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5860 (    0x20) objc_msgSend$connectionConfigured [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5880 (    0x20) objc_msgSend$connectionConfiguredForListener:client:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e58a0 (    0x20) objc_msgSend$connectionInterrupted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e58c0 (    0x20) objc_msgSend$connectionInvalidated [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e58e0 (    0x20) objc_msgSend$connectionInvalidatedForListener:client:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5900 (    0x20) objc_msgSend$consumeQuota [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5920 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5940 (    0x20) objc_msgSend$contentProtectionStateChanged:previousState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5960 (    0x20) objc_msgSend$contentsOfDirectoryAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5980 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e59a0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e59c0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e59e0 (    0x20) objc_msgSend$createDirectoryAtPath:withIntermediateDirectories:attributes:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5a00 (    0x20) objc_msgSend$currentActivity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5a20 (    0x20) objc_msgSend$currentDeviceProductType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5a40 (    0x20) objc_msgSend$currentDiskSpaceAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5a60 (    0x20) objc_msgSend$currentHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5a80 (    0x20) objc_msgSend$currentInternalDeviceModel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5aa0 (    0x20) objc_msgSend$currentOSBuild [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ac0 (    0x20) objc_msgSend$currentOSVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ae0 (    0x20) objc_msgSend$dataWithContentsOfURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5b00 (    0x20) objc_msgSend$dataWithJSONObject:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5b20 (    0x20) objc_msgSend$databasePool:didFlushConnections: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5b40 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5b60 (    0x20) objc_msgSend$dateWithTimeIntervalSinceNow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5b80 (    0x20) objc_msgSend$dateWithTimeIntervalSinceReferenceDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ba0 (    0x20) objc_msgSend$defaultCenter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5bc0 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5be0 (    0x20) objc_msgSend$delegate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5c00 (    0x20) objc_msgSend$deviceUnlockedSinceBoot [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5c20 (    0x20) objc_msgSend$diagnosticDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5c40 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5c60 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5c80 (    0x20) objc_msgSend$doubleForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ca0 (    0x20) objc_msgSend$endpoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5cc0 (    0x20) objc_msgSend$entitlementsForCurrentTaskWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ce0 (    0x20) objc_msgSend$entitlementsWithConnection:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5d00 (    0x20) objc_msgSend$entitlementsWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5d20 (    0x20) objc_msgSend$enumeratorAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5d40 (    0x20) objc_msgSend$eventDidFire: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5d60 (    0x20) objc_msgSend$eventHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5d80 (    0x20) objc_msgSend$eventHandlerQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5da0 (    0x20) objc_msgSend$eventName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5dc0 (    0x20) objc_msgSend$exportObjectForListener:client:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5de0 (    0x20) objc_msgSend$exportedInterface [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5e00 (    0x20) objc_msgSend$fileAttributes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5e20 (    0x20) objc_msgSend$fileExistsAtPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5e40 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5e60 (    0x20) objc_msgSend$fileURLWithPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5e80 (    0x20) objc_msgSend$finalizeWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ea0 (    0x20) objc_msgSend$fireDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ec0 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5ee0 (    0x20) objc_msgSend$flush [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5f00 (    0x20) objc_msgSend$handleFailureInMethod:object:file:lineNumber:description: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5f20 (    0x20) objc_msgSend$hasArrayEntitlement:containing: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5f40 (    0x20) objc_msgSend$hasEntitlement: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5f60 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5f80 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5fa0 (    0x20) objc_msgSend$hd_dictionaryFromXPCObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5fc0 (    0x20) objc_msgSend$hk_appExtensionContainerBundleForConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e5fe0 (    0x20) objc_msgSend$hk_assignError:code:format: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6000 (    0x20) objc_msgSend$hk_error:description: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6020 (    0x20) objc_msgSend$hk_error:description:underlyingError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6040 (    0x20) objc_msgSend$hk_errorForInvalidArgument:class:selector:format: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6060 (    0x20) objc_msgSend$hk_extensionPointIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6080 (    0x20) objc_msgSend$hk_isAppExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e60a0 (    0x20) objc_msgSend$hk_map: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e60c0 (    0x20) objc_msgSend$hk_nanosecondsSince1970 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e60e0 (    0x20) objc_msgSend$identifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6100 (    0x20) objc_msgSend$informationForPlugInWithPid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6120 (    0x20) objc_msgSend$initWithAssertionIdentifier:ownerIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6140 (    0x20) objc_msgSend$initWithAuditToken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6160 (    0x20) objc_msgSend$initWithAuditToken:entitlements:isExtension:containerAppBundleIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6180 (    0x20) objc_msgSend$initWithBytes:length:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e61a0 (    0x20) objc_msgSend$initWithChannel:payloadType:certificate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e61c0 (    0x20) objc_msgSend$initWithConfiguration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e61e0 (    0x20) objc_msgSend$initWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6200 (    0x20) objc_msgSend$initWithMachServiceName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6220 (    0x20) objc_msgSend$initWithName:fireDate:isUserVisible: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6240 (    0x20) objc_msgSend$initWithName:loggingCategory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6260 (    0x20) objc_msgSend$initWithNotifications:initialState:unlockedSinceBoot: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6280 (    0x20) objc_msgSend$initWithScheduler:eventName:eventHandlerQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e62a0 (    0x20) objc_msgSend$initWithUnderlyingListener:label: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e62c0 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e62e0 (    0x20) objc_msgSend$integerForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6300 (    0x20) objc_msgSend$invalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6320 (    0x20) objc_msgSend$isAppleInternalInstall [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6340 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6360 (    0x20) objc_msgSend$isProtectedDataAvailableWithState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6380 (    0x20) objc_msgSend$isUserVisible [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e63a0 (    0x20) objc_msgSend$keyEnumerator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e63c0 (    0x20) objc_msgSend$lastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e63e0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6400 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6420 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6440 (    0x20) objc_msgSend$newConnectionForPool:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6460 (    0x20) objc_msgSend$newOutputFileURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6480 (    0x20) objc_msgSend$notification [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e64a0 (    0x20) objc_msgSend$notifyObservers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e64c0 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e64e0 (    0x20) objc_msgSend$objectEnumerator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6500 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6520 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6540 (    0x20) objc_msgSend$observedState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6560 (    0x20) objc_msgSend$ownerIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6580 (    0x20) objc_msgSend$path [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e65a0 (    0x20) objc_msgSend$postNotificationName:object:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e65c0 (    0x20) objc_msgSend$process [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e65e0 (    0x20) objc_msgSend$processIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6600 (    0x20) objc_msgSend$processWithConnection:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6620 (    0x20) objc_msgSend$raise:format: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6640 (    0x20) objc_msgSend$rawState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6660 (    0x20) objc_msgSend$registerActivity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6680 (    0x20) objc_msgSend$registerObserver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e66a0 (    0x20) objc_msgSend$registerObserver:queue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e66c0 (    0x20) objc_msgSend$remainingBudget [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e66e0 (    0x20) objc_msgSend$remoteInterface [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6700 (    0x20) objc_msgSend$removeAlarm: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6720 (    0x20) objc_msgSend$removeItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6740 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6760 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6780 (    0x20) objc_msgSend$requestRunWithMaximumDelay:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e67a0 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e67c0 (    0x20) objc_msgSend$scheduleEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e67e0 (    0x20) objc_msgSend$scheduler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6800 (    0x20) objc_msgSend$schedulesXPCAlarms [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6820 (    0x20) objc_msgSend$serviceListener [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6840 (    0x20) objc_msgSend$set [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6860 (    0x20) objc_msgSend$setCriteria: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6880 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e68a0 (    0x20) objc_msgSend$setDouble:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e68c0 (    0x20) objc_msgSend$setEndDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e68e0 (    0x20) objc_msgSend$setExportedInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6900 (    0x20) objc_msgSend$setExportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6920 (    0x20) objc_msgSend$setInteger:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6940 (    0x20) objc_msgSend$setInterruptionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6960 (    0x20) objc_msgSend$setInvalidationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6980 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e69a0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e69c0 (    0x20) objc_msgSend$setPayloadIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e69e0 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6a00 (    0x20) objc_msgSend$setStartDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6a20 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6a40 (    0x20) objc_msgSend$sharedBehavior [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6a60 (    0x20) objc_msgSend$sharedDiagnosticManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6a80 (    0x20) objc_msgSend$shouldIgnoreUnlockedState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6aa0 (    0x20) objc_msgSend$signal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ac0 (    0x20) objc_msgSend$signingIdentifierFromAuditToken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ae0 (    0x20) objc_msgSend$sortedArrayUsingSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6b00 (    0x20) objc_msgSend$standardUserDefaults [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6b20 (    0x20) objc_msgSend$startWithOutputFileURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6b40 (    0x20) objc_msgSend$state [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6b60 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6b80 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ba0 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6bc0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6be0 (    0x20) objc_msgSend$stringWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6c00 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6c20 (    0x20) objc_msgSend$strongToStrongObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6c40 (    0x20) objc_msgSend$strongToWeakObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6c60 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6c80 (    0x20) objc_msgSend$timeIntervalSince1970 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ca0 (    0x20) objc_msgSend$timeIntervalSinceDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6cc0 (    0x20) objc_msgSend$timeIntervalSinceNow [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ce0 (    0x20) objc_msgSend$timeUntilNextAvailableTrigger [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6d00 (    0x20) objc_msgSend$totalDiskCapacity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6d20 (    0x20) objc_msgSend$transactionWithOwner:activityName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6d40 (    0x20) objc_msgSend$unitTest_schedulerObserver [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6d60 (    0x20) objc_msgSend$unittest_fireEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6d80 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6da0 (    0x20) objc_msgSend$unregisterActivity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6dc0 (    0x20) objc_msgSend$unregisterObserver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6de0 (    0x20) objc_msgSend$unscheduleEventWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6e00 (    0x20) objc_msgSend$userNotificationOptions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6e20 (    0x20) objc_msgSend$valueForEntitlement: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6e40 (    0x20) objc_msgSend$wait [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6e60 (    0x20) objc_msgSend$waitingForTrigger [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6e80 (    0x20) objc_msgSend$weakObjectsHashTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ea0 (    0x20) objc_msgSend$weakToStrongObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ec0 (    0x20) objc_msgSend$writeData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6ee0 (    0x20) objc_msgSend$writeToURL:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6f00 (    0x20) objc_msgSend$xpcActivity_copyCriteria: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6f20 (    0x20) objc_msgSend$xpcActivity_getState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6f40 (    0x20) objc_msgSend$xpcActivity_register:criteria:handler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6f60 (    0x20) objc_msgSend$xpcActivity_setCompletionStatus:activity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6f80 (    0x20) objc_msgSend$xpcActivity_setCriteria:activity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6fa0 (    0x20) objc_msgSend$xpcActivity_setState:activity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6fc0 (    0x20) objc_msgSend$xpcActivity_shouldDefer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002020e6fe0 (    0x20) objc_msgSend$xpcActivity_unregister: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000237537c10 (  0x2c60) __DATA_CONST SEGMENT
            0x0000000237537c10 (    0xe0) __DATA_CONST __got
            0x0000000237537cf0 (   0x148) __DATA_CONST __const
                0x0000000237537cf0 (    0x48) __block_descriptor_32_e8_v16?0q8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537d38 (    0x48) __block_descriptor_48_e39_v16?0"<HDContentProtectionObserver>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537d80 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537da0 (    0x20) __block_descriptor_32_e8_v12?0i8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537dc0 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537de0 (     0x8) HDAssertionManagerAssertionTakenNotification [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237537de8 (     0x8) HDAssertionManagerAssertionReturnedNotification [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237537df0 (     0x8) HDAssertionManagerAssertionKey [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237537df8 (    0x38) __block_descriptor_32_e20_v24?0q8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537e30 (     0x8) HDAnalyticsWriterBugTypeReportAProblem [EXT, NameNList, MangledNameNList, NList] 
            0x0000000237537e38 (    0x98) __DATA_CONST __objc_classlist
            0x0000000237537ed0 (     0x8) __DATA_CONST __objc_catlist
            0x0000000237537ed8 (    0x20) __DATA_CONST __objc_protolist
                0x0000000237537ed8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537ee0 (     0x8) _OBJC_LABEL_PROTOCOL_$_HDDiagnosticObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537ee8 (     0x8) _OBJC_LABEL_PROTOCOL_$_HDXPCActivityShim [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237537ef0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000237537ef8 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000237537f00 (  0x1da8) __DATA_CONST __objc_const
                0x0000000237537f00 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000002375380d0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000002375380f0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000237538138 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000002375381d8 (    0x18) _OBJC_$_PROTOCOL_REFS_HDDiagnosticObject [NameNList, MangledNameNList, NList] 
                0x00000002375381f0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_HDDiagnosticObject [NameNList, MangledNameNList, NList] 
                0x0000000237538210 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_HDDiagnosticObject [NameNList, MangledNameNList, NList] 
                0x0000000237538218 (    0x18) _OBJC_CLASS_PROTOCOLS_$_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x0000000237538230 (    0x48) _OBJC_METACLASS_RO_$_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x0000000237538278 (   0x188) _OBJC_$_INSTANCE_VARIABLES_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x0000000237538400 (    0x98) _OBJC_$_PROP_LIST_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x0000000237538498 (    0x48) _OBJC_METACLASS_RO_$__HDDatabaseConnectionWrapper [NameNList, MangledNameNList, NList] 
                0x00000002375384e0 (    0xa8) _OBJC_$_INSTANCE_VARIABLES__HDDatabaseConnectionWrapper [NameNList, MangledNameNList, NList] 
                0x0000000237538588 (    0x48) _OBJC_METACLASS_RO_$_HDAssertion [NameNList, MangledNameNList, NList] 
                0x00000002375385d0 (   0x128) _OBJC_$_INSTANCE_VARIABLES_HDAssertion [NameNList, MangledNameNList, NList] 
                0x00000002375386f8 (    0x78) _OBJC_$_PROP_LIST_HDAssertion [NameNList, MangledNameNList, NList] 
                0x0000000237538770 (    0xc8) _OBJC_$_PROTOCOL_INSTANCE_METHODS_HDXPCActivityShim [NameNList, MangledNameNList, NList] 
                0x0000000237538838 (    0x40) _OBJC_$_PROTOCOL_METHOD_TYPES_HDXPCActivityShim [NameNList, MangledNameNList, NList] 
                0x0000000237538878 (    0x18) _OBJC_CLASS_PROTOCOLS_$_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x0000000237538890 (   0x168) _OBJC_$_INSTANCE_VARIABLES_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x00000002375389f8 (    0xb8) _OBJC_$_PROP_LIST_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x0000000237538ab0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x0000000237538ac8 (   0x148) _OBJC_$_INSTANCE_VARIABLES_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x0000000237538c10 (    0x58) _OBJC_$_PROP_LIST_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x0000000237538c68 (    0x48) _OBJC_METACLASS_RO_$__HDContentProtectionObserverWrapper [NameNList, MangledNameNList, NList] 
                0x0000000237538cb0 (    0x48) _OBJC_$_INSTANCE_VARIABLES__HDContentProtectionObserverWrapper [NameNList, MangledNameNList, NList] 
                0x0000000237538cf8 (    0x48) _OBJC_METACLASS_RO_$_HDXPCAlarm [NameNList, MangledNameNList, NList] 
                0x0000000237538d40 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_HDXPCAlarm [NameNList, MangledNameNList, NList] 
                0x0000000237538e08 (    0x58) _OBJC_$_PROP_LIST_HDXPCAlarm [NameNList, MangledNameNList, NList] 
                0x0000000237538e60 (    0x18) _OBJC_$_PROTOCOL_REFS_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x0000000237538e78 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x0000000237538e98 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x0000000237538ea0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x0000000237538eb8 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x0000000237538fa0 (    0x98) _OBJC_$_PROP_LIST_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x0000000237539038 (    0x48) _OBJC_METACLASS_RO_$_HDXPCEventPublisher [NameNList, MangledNameNList, NList] 
                0x0000000237539080 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_HDXPCEventPublisher [NameNList, MangledNameNList, NList] 
                0x0000000237539148 (    0x48) _OBJC_$_INSTANCE_VARIABLES_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x0000000237539190 (    0x28) _OBJC_$_PROP_LIST_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x00000002375391b8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_HDDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x0000000237539200 (    0x48) _OBJC_METACLASS_RO_$_HDAssertionManager [NameNList, MangledNameNList, NList] 
                0x0000000237539248 (   0x108) _OBJC_$_INSTANCE_VARIABLES_HDAssertionManager [NameNList, MangledNameNList, NList] 
                0x0000000237539350 (    0x18) _OBJC_$_PROP_LIST_HDAssertionManager [NameNList, MangledNameNList, NList] 
                0x0000000237539368 (    0x48) _OBJC_METACLASS_RO_$__HDAssertionRecord [NameNList, MangledNameNList, NList] 
                0x00000002375393b0 (    0x48) _OBJC_$_INSTANCE_VARIABLES__HDAssertionRecord [NameNList, MangledNameNList, NList] 
                0x00000002375393f8 (    0x48) _OBJC_METACLASS_RO_$_HDXPCGatedActivity [NameNList, MangledNameNList, NList] 
                0x0000000237539440 (   0x1c8) _OBJC_$_INSTANCE_VARIABLES_HDXPCGatedActivity [NameNList, MangledNameNList, NList] 
                0x0000000237539608 (    0x78) _OBJC_$_PROP_LIST_HDXPCGatedActivity [NameNList, MangledNameNList, NList] 
                0x0000000237539680 (    0x48) _OBJC_METACLASS_RO_$_HDAnalyticsWriter [NameNList, MangledNameNList, NList] 
                0x00000002375396c8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_HDAnalyticsWriter [NameNList, MangledNameNList, NList] 
                0x0000000237539710 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x00000002375397f8 (    0x98) _OBJC_$_PROP_LIST_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x0000000237539890 (    0x18) _OBJC_CLASS_PROTOCOLS_$_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x00000002375398a8 (    0x48) _OBJC_METACLASS_RO_$_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x00000002375398f0 (    0x88) _OBJC_$_INSTANCE_VARIABLES_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x0000000237539978 (    0x58) _OBJC_$_PROP_LIST_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x00000002375399d0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x0000000237539a38 (    0x38) _OBJC_$_PROP_LIST_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x0000000237539a70 (    0x48) _OBJC_METACLASS_RO_$_HDUserNotification [NameNList, MangledNameNList, NList] 
                0x0000000237539ab8 (   0x148) _OBJC_$_INSTANCE_VARIABLES_HDUserNotification [NameNList, MangledNameNList, NList] 
                0x0000000237539c00 (    0xa8) _OBJC_$_PROP_LIST_HDUserNotification [NameNList, MangledNameNList, NList] 
            0x0000000237539ca8 (   0xbc8) __DATA_CONST __objc_selrefs
        0x000000023753a870 (  0x21a8) __AUTH_CONST SEGMENT
            0x000000023753a870 (  0x10e0) __AUTH_CONST __cfstring
            0x000000023753b950 (   0x790) __AUTH_CONST __objc_const
                0x000000023753b950 (    0x48) _OBJC_CLASS_RO_$_HDDatabaseConnectionPool [NameNList, MangledNameNList, NList] 
                0x000000023753b998 (    0x48) _OBJC_CLASS_RO_$__HDDatabaseConnectionWrapper [NameNList, MangledNameNList, NList] 
                0x000000023753b9e0 (    0x48) _OBJC_CLASS_RO_$_HDAssertion [NameNList, MangledNameNList, NList] 
                0x000000023753ba28 (    0x48) _OBJC_METACLASS_RO_$_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x000000023753ba70 (    0x48) _OBJC_CLASS_RO_$_HDXPCPeriodicActivity [NameNList, MangledNameNList, NList] 
                0x000000023753bab8 (    0x48) _OBJC_METACLASS_RO_$_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x000000023753bb00 (    0x48) _OBJC_CLASS_RO_$_HDContentProtectionManager [NameNList, MangledNameNList, NList] 
                0x000000023753bb48 (    0x48) _OBJC_CLASS_RO_$__HDContentProtectionObserverWrapper [NameNList, MangledNameNList, NList] 
                0x000000023753bb90 (    0x48) _OBJC_CLASS_RO_$_HDXPCAlarm [NameNList, MangledNameNList, NList] 
                0x000000023753bbd8 (    0x48) _OBJC_METACLASS_RO_$_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x000000023753bc20 (    0x48) _OBJC_CLASS_RO_$_HDXPCListener [NameNList, MangledNameNList, NList] 
                0x000000023753bc68 (    0x48) _OBJC_CLASS_RO_$_HDXPCEventPublisher [NameNList, MangledNameNList, NList] 
                0x000000023753bcb0 (    0x48) _OBJC_METACLASS_RO_$_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x000000023753bcf8 (    0x48) _OBJC_CLASS_RO_$_HDXPCClient [NameNList, MangledNameNList, NList] 
                0x000000023753bd40 (    0x48) _OBJC_METACLASS_RO_$_HDDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x000000023753bd88 (    0x48) _OBJC_CLASS_RO_$_HDDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x000000023753bdd0 (    0x48) _OBJC_CLASS_RO_$_HDAssertionManager [NameNList, MangledNameNList, NList] 
                0x000000023753be18 (    0x48) _OBJC_CLASS_RO_$__HDAssertionRecord [NameNList, MangledNameNList, NList] 
                0x000000023753be60 (    0x48) _OBJC_CLASS_RO_$_HDXPCGatedActivity [NameNList, MangledNameNList, NList] 
                0x000000023753bea8 (    0x48) _OBJC_CLASS_RO_$_HDAnalyticsWriter [NameNList, MangledNameNList, NList] 
                0x000000023753bef0 (    0x40) _OBJC_$_CATEGORY_NSDictionary_$_HealthDaemonFoundation [NameNList, MangledNameNList, NList] 
                0x000000023753bf30 (    0x48) _OBJC_METACLASS_RO_$_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x000000023753bf78 (    0x48) _OBJC_CLASS_RO_$_HDXPCProcess [NameNList, MangledNameNList, NList] 
                0x000000023753bfc0 (    0x48) _OBJC_CLASS_RO_$_HDXPCAlarmScheduler [NameNList, MangledNameNList, NList] 
                0x000000023753c008 (    0x48) _OBJC_METACLASS_RO_$_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x000000023753c050 (    0x48) _OBJC_CLASS_RO_$_HDXPCAlarmEvent [NameNList, MangledNameNList, NList] 
                0x000000023753c098 (    0x48) _OBJC_CLASS_RO_$_HDUserNotification [NameNList, MangledNameNList, NList] 
            0x000000023753c0e0 (   0x550) __AUTH_CONST __const
                0x000000023753c0e0 (    0x30) __block_descriptor_48_e8_32s40s_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c110 (    0x30) __block_descriptor_40_e8_32w_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c140 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023753c160 (    0x20) __block_literal_global.225 [NameNList, MangledNameNList, NList] 
                0x000000023753c180 (    0x20) __block_literal_global.231 [NameNList, MangledNameNList, NList] 
                0x000000023753c1a0 (    0x30) __block_descriptor_80_e8_32s40s48s56bs_e23_v32?0q8d16"NSError"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c1d0 (    0x30) __block_descriptor_40_e8_32bs_e8_v16?0q8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c200 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c230 (    0x30) __block_descriptor_48_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c260 (    0x30) __block_descriptor_41_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c290 (    0x30) __block_descriptor_48_e8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c2c0 (    0x30) __block_descriptor_56_e8_32s40s48bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c2f0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023753c310 (    0x30) __block_descriptor_56_e8_32s40s48s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c340 (    0x30) __block_descriptor_40_e8_32w_e39_v28?0I8Q12"NSObject<OS_xpc_object>"20l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c370 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023753c390 (    0x30) __block_descriptor_60_e8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c3c0 (    0x30) __block_descriptor_56_e8_32s40s_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c3f0 (    0x30) __block_descriptor_40_e8_32r_e25_v24?0"HDAssertion"8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c420 (    0x30) __block_descriptor_48_e8_32s40r_e25_v24?0"HDAssertion"8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c450 (    0x30) __block_descriptor_40_e8_32s_e25_v24?0"HDAssertion"8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c480 (    0x30) __block_descriptor_56_e8_32s40s_e31_v16?0"<HDAssertionObserver>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c4b0 (    0x30) __block_descriptor_48_e8_32s40s_e31_v16?0"<HDAssertionObserver>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c4e0 (    0x30) __block_descriptor_40_e8_32w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c510 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023753c530 (    0x30) __block_descriptor_48_e8_32s40s_e20_v24?0q8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c560 (    0x30) __block_descriptor_40_e8_32s_e20_v24?0q8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c590 (    0x30) __block_descriptor_40_e8_32s_e28_"NSString"16?0"NSString"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c5c0 (    0x30) __block_descriptor_40_e8_32s_e22_v16?0"NSFileHandle"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023753c5f0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023753c610 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
            0x000000023753c630 (    0x18) __AUTH_CONST __objc_intobj
            0x000000023753c648 (   0x3d0) __AUTH_CONST __auth_got
        0x0000000232715a98 (   0x5f0) __AUTH SEGMENT
            0x0000000232715a98 (   0x5f0) __AUTH __objc_data
                0x0000000232715a98 (    0x28) OBJC_CLASS_$_HDDatabaseConnectionPool [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ac0 (    0x28) OBJC_CLASS_$__HDDatabaseConnectionWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ae8 (    0x28) OBJC_METACLASS_$_HDDatabaseConnectionPool [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715b10 (    0x28) OBJC_METACLASS_$__HDDatabaseConnectionWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715b38 (    0x28) OBJC_CLASS_$_HDAssertion [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715b60 (    0x28) OBJC_METACLASS_$_HDAssertion [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715b88 (    0x28) OBJC_CLASS_$_HDXPCPeriodicActivity [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715bb0 (    0x28) OBJC_METACLASS_$_HDXPCPeriodicActivity [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715bd8 (    0x28) OBJC_CLASS_$_HDContentProtectionManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715c00 (    0x28) OBJC_METACLASS_$_HDContentProtectionManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715c28 (    0x28) OBJC_CLASS_$__HDContentProtectionObserverWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715c50 (    0x28) OBJC_METACLASS_$__HDContentProtectionObserverWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715c78 (    0x28) OBJC_CLASS_$_HDXPCAlarm [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ca0 (    0x28) OBJC_METACLASS_$_HDXPCAlarm [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715cc8 (    0x28) OBJC_CLASS_$_HDXPCListener [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715cf0 (    0x28) OBJC_METACLASS_$_HDXPCListener [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715d18 (    0x28) OBJC_CLASS_$_HDXPCEventPublisher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715d40 (    0x28) OBJC_METACLASS_$_HDXPCEventPublisher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715d68 (    0x28) OBJC_CLASS_$_HDXPCClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715d90 (    0x28) OBJC_METACLASS_$_HDXPCClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715db8 (    0x28) OBJC_CLASS_$_HDDiagnosticManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715de0 (    0x28) OBJC_METACLASS_$_HDDiagnosticManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715e08 (    0x28) OBJC_CLASS_$_HDAssertionManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715e30 (    0x28) OBJC_CLASS_$__HDAssertionRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715e58 (    0x28) OBJC_METACLASS_$_HDAssertionManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715e80 (    0x28) OBJC_METACLASS_$__HDAssertionRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ea8 (    0x28) OBJC_CLASS_$_HDXPCGatedActivity [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ed0 (    0x28) OBJC_METACLASS_$_HDXPCGatedActivity [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715ef8 (    0x28) OBJC_CLASS_$_HDAnalyticsWriter [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715f20 (    0x28) OBJC_METACLASS_$_HDAnalyticsWriter [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715f48 (    0x28) OBJC_CLASS_$_HDXPCProcess [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715f70 (    0x28) OBJC_METACLASS_$_HDXPCProcess [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715f98 (    0x28) OBJC_CLASS_$_HDXPCAlarmScheduler [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715fc0 (    0x28) OBJC_CLASS_$_HDXPCAlarmEvent [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232715fe8 (    0x28) OBJC_METACLASS_$_HDXPCAlarmScheduler [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232716010 (    0x28) OBJC_METACLASS_$_HDXPCAlarmEvent [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232716038 (    0x28) OBJC_METACLASS_$_HDUserNotification [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232716060 (    0x28) OBJC_CLASS_$_HDUserNotification [EXT, NameNList, MangledNameNList, NList] 
        0x0000000231060190 (   0x5c8) __DATA SEGMENT
            0x0000000231060190 (   0x160) __DATA __objc_classrefs
            0x00000002310602f0 (    0x90) __DATA __objc_superrefs
            0x0000000231060380 (   0x1e8) __DATA __objc_ivar
                0x0000000231060380 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._cacheCondition [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060384 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._cache [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060388 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._flushGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106038c (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._cacheGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060390 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._cacheSize [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060394 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._concurrentReaderLimit [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060398 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._count [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106039c (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._checkoutLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603a0 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._checkoutMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603a4 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._readerSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603a8 (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._writerSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603ac (     0x4) OBJC_IVAR_$_HDDatabaseConnectionPool._delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603b0 (     0x4) OBJC_IVAR_$__HDDatabaseConnectionWrapper._connection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603b4 (     0x4) OBJC_IVAR_$__HDDatabaseConnectionWrapper._flushGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603b8 (     0x4) OBJC_IVAR_$__HDDatabaseConnectionWrapper._generation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603bc (     0x4) OBJC_IVAR_$__HDDatabaseConnectionWrapper._threadID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603c0 (     0x4) OBJC_IVAR_$__HDDatabaseConnectionWrapper._options [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603c4 (     0x4) OBJC_IVAR_$_HDAssertion._manager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603c8 (     0x4) OBJC_IVAR_$_HDAssertion._state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603cc (     0x4) OBJC_IVAR_$_HDAssertion._remainingBudget [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603d0 (     0x4) OBJC_IVAR_$_HDAssertion._budgetIntervalStartTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603d4 (     0x4) OBJC_IVAR_$_HDAssertion._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603d8 (     0x4) OBJC_IVAR_$_HDAssertion._UUID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603dc (     0x4) OBJC_IVAR_$_HDAssertion._assertionIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603e0 (     0x4) OBJC_IVAR_$_HDAssertion._ownerIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603e4 (     0x4) OBJC_IVAR_$_HDAssertion._budget [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603e8 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603ec (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._registered [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603f0 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._criteria [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603f4 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._currentActivity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603f8 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310603fc (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._conditionsChanged [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060400 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060404 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._activityShim [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060408 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._name [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106040c (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._loggingCategory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060410 (     0x4) OBJC_IVAR_$_HDXPCPeriodicActivity._baseInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060414 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._contentProtectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060418 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._shouldIgnoreUnlockedState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106041c (     0x4) OBJC_IVAR_$_HDContentProtectionManager._unlockedSinceBoot [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060420 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._notifyToken [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060424 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._observationQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060428 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._observers [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106042c (     0x4) OBJC_IVAR_$_HDContentProtectionManager._synchronousObservers [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060430 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._beganObservingTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060434 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._lastNotificationTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060438 (     0x4) OBJC_IVAR_$_HDContentProtectionManager._lastRecheckTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106043c (     0x4) OBJC_IVAR_$__HDContentProtectionObserverWrapper._observer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060440 (     0x4) OBJC_IVAR_$__HDContentProtectionObserverWrapper._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060444 (     0x4) OBJC_IVAR_$_HDXPCAlarm._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060448 (     0x4) OBJC_IVAR_$_HDXPCAlarm._eventName [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106044c (     0x4) OBJC_IVAR_$_HDXPCAlarm._scheduler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060450 (     0x4) OBJC_IVAR_$_HDXPCAlarm._eventHandlerQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060454 (     0x4) OBJC_IVAR_$_HDXPCAlarm._eventHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060458 (     0x4) OBJC_IVAR_$_HDXPCAlarm._unitTest_schedulerObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106045c (     0x4) OBJC_IVAR_$_HDXPCListener._underlyingListener [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060460 (     0x4) OBJC_IVAR_$_HDXPCListener._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060464 (     0x4) OBJC_IVAR_$_HDXPCListener._connectionQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060468 (     0x4) OBJC_IVAR_$_HDXPCListener._exportedObjectsByClient [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106046c (     0x4) OBJC_IVAR_$_HDXPCListener._delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060470 (     0x4) OBJC_IVAR_$_HDXPCListener._clientProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060474 (     0x4) OBJC_IVAR_$_HDXPCListener._label [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060478 (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106047c (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._publisher [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060480 (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._pendingEvents [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060484 (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._pendingSubscribers [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060488 (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._subscribers [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106048c (     0x4) OBJC_IVAR_$_HDXPCEventPublisher._requiredEntitlement [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060490 (     0x4) OBJC_IVAR_$_HDXPCClient._process [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060494 (     0x4) OBJC_IVAR_$_HDXPCClient._connection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060498 (     0x4) OBJC_IVAR_$_HDDiagnosticManager._objects [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106049c (     0x4) OBJC_IVAR_$_HDDiagnosticManager._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604a0 (     0x4) OBJC_IVAR_$_HDAssertionManager._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604a4 (     0x4) OBJC_IVAR_$_HDAssertionManager._notificationQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604a8 (     0x4) OBJC_IVAR_$_HDAssertionManager._assertionRecordsByIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604ac (     0x4) OBJC_IVAR_$_HDAssertionManager._observerSetsByAssertionIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604b0 (     0x4) OBJC_IVAR_$_HDAssertionManager._invalidated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604b4 (     0x4) OBJC_IVAR_$_HDAssertionManager._consumeBudgets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604b8 (     0x4) OBJC_IVAR_$_HDAssertionManager._budgetConsumptionTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604bc (     0x4) OBJC_IVAR_$_HDAssertionManager._budgetTimerQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604c0 (     0x4) OBJC_IVAR_$__HDAssertionRecord._assertionIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604c4 (     0x4) OBJC_IVAR_$__HDAssertionRecord._assertions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604c8 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604cc (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._handler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604d0 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._criteria [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604d4 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._nextScheduledFireDeadline [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604d8 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._inProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604dc (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._pendingCompletions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604e0 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._nextFireTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604e4 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._nextCompletions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604e8 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity.unitTest_ActivityCompletion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604ec (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._rescheduleWhileInProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604f0 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._name [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604f4 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._loggingCategory [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604f8 (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._currentActivity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310604fc (     0x4) OBJC_IVAR_$_HDXPCGatedActivity._quota [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060500 (     0x4) OBJC_IVAR_$_HDAnalyticsWriter._certificate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060504 (     0x4) OBJC_IVAR_$_HDAnalyticsWriter._analyticsDirectory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060508 (     0x4) OBJC_IVAR_$_HDXPCProcess._name [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106050c (     0x4) OBJC_IVAR_$_HDXPCProcess._droppedEntitlements [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060510 (     0x4) OBJC_IVAR_$_HDXPCProcess._isExtension [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060514 (     0x4) OBJC_IVAR_$_HDXPCProcess._auditToken [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060518 (     0x4) OBJC_IVAR_$_HDXPCProcess._bundleIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106051c (     0x4) OBJC_IVAR_$_HDXPCProcess._containerAppBundleIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060520 (     0x4) OBJC_IVAR_$_HDXPCProcess._entitlements [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060524 (     0x4) OBJC_IVAR_$_HDXPCAlarmScheduler._alarms [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060528 (     0x4) OBJC_IVAR_$_HDXPCAlarmScheduler._pendingEvents [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106052c (     0x4) OBJC_IVAR_$_HDXPCAlarmScheduler._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060530 (     0x4) OBJC_IVAR_$_HDXPCAlarmScheduler._unitTest_schedulerObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060534 (     0x4) OBJC_IVAR_$_HDXPCAlarmEvent._isUserVisible [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060538 (     0x4) OBJC_IVAR_$_HDXPCAlarmEvent._name [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106053c (     0x4) OBJC_IVAR_$_HDXPCAlarmEvent._fireDate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060540 (     0x4) OBJC_IVAR_$_HDUserNotification._title [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060544 (     0x4) OBJC_IVAR_$_HDUserNotification._message [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060548 (     0x4) OBJC_IVAR_$_HDUserNotification._defaultButton [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106054c (     0x4) OBJC_IVAR_$_HDUserNotification._cancelButton [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060550 (     0x4) OBJC_IVAR_$_HDUserNotification._otherButton [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060554 (     0x4) OBJC_IVAR_$_HDUserNotification._additionalDescriptors [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060558 (     0x4) OBJC_IVAR_$_HDUserNotification._alertLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023106055c (     0x4) OBJC_IVAR_$_HDUserNotification._userNotificationOptions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060560 (     0x4) OBJC_IVAR_$_HDUserNotification._responseHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060564 (     0x4) OBJC_IVAR_$_HDUserNotification._notification [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231060568 (   0x180) __DATA __data
                0x0000000231060568 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002310605c8 (    0x60) _OBJC_PROTOCOL_$_HDDiagnosticObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060628 (    0x60) _OBJC_PROTOCOL_$_HDXPCActivityShim [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231060688 (    0x60) _OBJC_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002310606e8 (    0x70) __DATA __bss
                0x00000002310606e8 (     0x8) serviceListener.serviceListener [NameNList, MangledNameNList, NList] 
                0x00000002310606f0 (     0x8) serviceListener.onceToken [NameNList, MangledNameNList, NList] 
                0x00000002310606f8 (     0x8) listener:shouldAcceptNewConnection:.sharedQueue [NameNList, MangledNameNList, NList] 
                0x0000000231060700 (     0x8) listener:shouldAcceptNewConnection:.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231060708 (     0x8) sharedDiagnosticManager.__sharedDiagnosticManager [NameNList, MangledNameNList, NList] 
                0x0000000231060710 (     0x8) sharedDiagnosticManager.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231060718 (     0x8) _sharedBudgetTimerQueue.queue [NameNList, MangledNameNList, NList] 
                0x0000000231060720 (     0x8) _sharedBudgetTimerQueue.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231060728 (     0x8) HDXPCProcessNameFromAuditToken.pidInfoAllowed [NameNList, MangledNameNList, NList] 
                0x0000000231060730 (     0x8) HDXPCProcessNameFromAuditToken.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231060738 (     0x8) _pendingNotificationsLock [NameNList, MangledNameNList, NList] 
                0x0000000231060740 (     0x8) _pendingNotifications [NameNList, MangledNameNList, NList] 
                0x0000000231060748 (     0x8) HDIsUnitTesting._HDFIsUnitTesting [NameNList, MangledNameNList, NList] 
                0x0000000231060750 (     0x8) HDIsUnitTesting.onceToken [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
