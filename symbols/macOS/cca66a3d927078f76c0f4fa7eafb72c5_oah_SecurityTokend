Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/SecurityTokend.framework/Versions/A/SecurityTokend [arm64e, 0.273755 seconds]:
    CFCC54BB-C0CD-351A-AE4E-E04B4C316F8D /System/Library/PrivateFrameworks/SecurityTokend.framework/Versions/A/SecurityTokend [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000020d515000 ( 0x14000) __TEXT SEGMENT
            0x000000020d515000 (  0x3990) MACH_HEADER
            0x000000020d518990 (  0xdb60) __TEXT __text
                0x000000020d518990 (   0x10c) SecTokendMain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518a9c (    0x14) Security::Tokend::cbStartupReaderInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518ab0 (    0x24) Security::Tokend::cbTokenUid() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518ad4 (     0x8) Security::Tokend::cbMalloc(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518adc (     0x4) Security::Tokend::cbFree(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518ae0 (     0x8) Security::Tokend::cbMallocSensitive(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518ae8 (     0x4) Security::Tokend::cbFreeSensitive(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518aec (    0xf8) Security::Tokend::Server::operator()(int, char const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518be4 (    0x28) Security::Tokend::Server::termination(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518c0c (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518c18 (     0xc) Security::Tokend::Server::handle(mach_msg_header_t*, mach_msg_header_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518c24 (    0x60) Security::Tokend::Server::~Server() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518c84 (    0x7c) Security::Tokend::Server::~Server() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518d00 (    0x8c) tokend_server(mach_msg_header_t*, mach_msg_header_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518d8c (    0x34) tokend_server_routine(mach_msg_header_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518dc0 (    0xc4) _Xprobe(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d518e84 (   0x204) _Xestablish(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519088 (    0x64) _Xterminate(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5190ec (   0x194) _XfindFirst(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519280 (   0x150) _XfindNext(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5193d0 (   0x148) _XfindRecordHandle(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519518 (   0x11c) _XinsertRecord(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519634 (   0x13c) _XmodifyRecord(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519770 (    0x84) _XdeleteRecord(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5197f4 (    0x84) _XreleaseSearch(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519878 (    0x84) _XreleaseRecord(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5198fc (    0x84) _XreleaseKey(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519980 (    0x88) _XqueryKeySizeInBits(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519a08 (   0x104) _XgetOutputSize(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519b0c (   0x178) _XgenerateSignature(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519c84 (   0x170) _XverifySignature(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519df4 (   0x174) _XgenerateMac(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d519f68 (   0x16c) _XverifyMac(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a0d4 (   0x174) _Xencrypt(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a248 (   0x174) _Xdecrypt(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a3bc (   0x1cc) _XgenerateKey(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a588 (   0x1f4) _XgenerateKeyPair(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a77c (   0x278) _XwrapKey(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51a9f4 (   0x31c) _XunwrapKey(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ad10 (   0x2ac) _XderiveKey(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51afbc (   0x130) _XgenerateRandom(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b0ec (    0xb8) _XgetOwner(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b1a4 (   0x120) _XsetOwner(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b2c4 (   0x120) _XgetAcl(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b3e4 (   0x12c) _XchangeAcl(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b510 (    0xd4) _Xauthenticate(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b5e4 (   0x104) _Xlogin(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b6e8 (    0x80) _Xlogout(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b768 (    0x84) _XgetStatistics(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b7ec (    0xb4) _XgetTime(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b8a0 (    0xb0) _XgetCounter(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b950 (    0x80) _XselfVerify(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51b9d0 (   0x1c0) _XcspPassThrough(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51bb90 (   0x10c) _XdlPassThrough(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51bc9c (    0x84) _XisLocked(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51bd20 (   0x100) tokend_server_probe(unsigned int, unsigned int, int*, unsigned int*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51be20 (   0x12c) tokend_server_establish(unsigned int, unsigned int, int*, cssm_guid, unsigned int, unsigned int, char const*, char const*, char*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51bf4c (    0x1c) tokend_server_terminate(unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51bf68 (   0x1fc) tokend_server_findFirst(unsigned int, unsigned int, int*, Security::CssmQuery*, unsigned int, Security::CssmQuery*, Security::CssmDbRecordAttributeData*, unsigned int, Security::CssmDbRecordAttributeData*, int, void**, unsigned int*, unsigned int*, Security::CssmDbRecordAttributeData**, unsigned int*, Security::CssmDbRecordAttributeData**, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c164 (   0x1a8) tokend_server_findNext(unsigned int, unsigned int, int*, unsigned int, Security::CssmDbRecordAttributeData*, unsigned int, Security::CssmDbRecordAttributeData*, int, void**, unsigned int*, unsigned int*, Security::CssmDbRecordAttributeData**, unsigned int*, Security::CssmDbRecordAttributeData**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c30c (   0x1ac) tokend_server_findRecordHandle(unsigned int, unsigned int, int*, unsigned int, Security::CssmDbRecordAttributeData*, unsigned int, Security::CssmDbRecordAttributeData*, int, void**, unsigned int*, unsigned int*, Security::CssmDbRecordAttributeData**, unsigned int*, Security::CssmDbRecordAttributeData**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c4b8 (   0x164) tokend_server_insertRecord(unsigned int, unsigned int, int*, unsigned int, Security::CssmDbRecordAttributeData*, unsigned int, Security::CssmDbRecordAttributeData*, void*, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c61c (   0x16c) tokend_server_modifyRecord(unsigned int, unsigned int, int*, unsigned int, unsigned int*, Security::CssmDbRecordAttributeData*, unsigned int, Security::CssmDbRecordAttributeData*, int, void*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c788 (    0xe0) tokend_server_deleteRecord(unsigned int, unsigned int, int*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c868 (    0xe0) tokend_server_releaseSearch(unsigned int, unsigned int, int*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51c948 (    0xe0) tokend_server_releaseRecord(unsigned int, unsigned int, int*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ca28 (    0xe0) tokend_server_releaseKey(unsigned int, unsigned int, int*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51cb08 (    0xe8) tokend_server_queryKeySizeInBits(unsigned int, unsigned int, int*, unsigned int, cssm_key_size*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51cbf0 (   0x118) tokend_server_getOutputSize(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, unsigned int, int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51cd08 (   0x18c) tokend_server_generateSignature(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ce94 (   0x13c) tokend_server_verifySignature(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, unsigned int, void*, unsigned int, void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51cfd0 (   0x188) tokend_server_generateMac(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d158 (   0x138) tokend_server_verifyMac(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, void*, unsigned int, void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d290 (   0x188) tokend_server_encrypt(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d418 (   0x188) tokend_server_decrypt(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d5a0 (   0x20c) tokend_server_generateKey(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, Security::AclEntryPrototype*, unsigned int, Security::AclEntryPrototype*, unsigned int, unsigned int, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d7ac (    0x58) void Security::DataWalkers::relocate<Security::AclEntryPrototype>(Security::AclEntryPrototype*, Security::AclEntryPrototype*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51d804 (   0x274) tokend_server_generateKeyPair(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, Security::AclEntryPrototype*, unsigned int, Security::AclEntryPrototype*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51da78 (   0x260) tokend_server_wrapKey(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, void*, unsigned int, Security::CssmKey**, unsigned int*, Security::CssmKey**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51dcd8 (   0x328) tokend_server_unwrapKey(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, Security::AclEntryPrototype*, unsigned int, Security::AclEntryPrototype*, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, Security::CssmKey*, unsigned int, Security::CssmKey*, unsigned int, unsigned int, void**, unsigned int*, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e000 (   0x2cc) tokend_server_deriveKey(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, Security::AclEntryPrototype*, unsigned int, Security::AclEntryPrototype*, Security::DataWalkers::CssmDeriveData*, unsigned int, Security::DataWalkers::CssmDeriveData*, void**, unsigned int*, unsigned int, unsigned int, unsigned int*, Security::CssmKey**, unsigned int*, Security::CssmKey**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e2cc (   0x16c) tokend_server_generateRandom(unsigned int, unsigned int, int*, Security::Context, void*, Security::Context::Attr*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e438 (   0x1c0) tokend_server_getOwner(unsigned int, unsigned int, int*, Security::SecurityServer::AclKind, unsigned int, Security::AclOwnerPrototype**, unsigned int*, Security::AclOwnerPrototype**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e5f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020d51e608 (   0x114) tokend_server_setOwner(unsigned int, unsigned int, int*, Security::SecurityServer::AclKind, unsigned int, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, Security::AclOwnerPrototype*, unsigned int, Security::AclOwnerPrototype*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e71c (   0x280) tokend_server_getAcl(unsigned int, unsigned int, int*, Security::SecurityServer::AclKind, unsigned int, int, char const*, unsigned int*, Security::AclEntryInfo**, unsigned int*, Security::AclEntryInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51e99c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020d51e9ac (   0x204) tokend_server_changeAcl(unsigned int, unsigned int, int*, Security::SecurityServer::AclKind, unsigned int, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, unsigned int, long, Security::AclEntryInput*, unsigned int, Security::AclEntryInput*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ebb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020d51ebc0 (    0x58) void Security::DataWalkers::relocate<Security::AclEntryInput>(Security::AclEntryInput*, Security::AclEntryInput*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ec18 (   0x130) tokend_server_authenticate(unsigned int, unsigned int, int*, unsigned int, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ed48 (    0xf0) tokend_server_login(unsigned int, unsigned int, int*, Security::AccessCredentials*, unsigned int, Security::AccessCredentials*, void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ee38 (     0xc) tokend_server_logout(unsigned int, unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ee44 (    0xdc) tokend_server_getStatistics(unsigned int, unsigned int, int*, Security::CSPOperationalStatistics*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ef20 (   0x148) tokend_server_getTime(unsigned int, unsigned int, int*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f068 (   0x144) tokend_server_getCounter(unsigned int, unsigned int, int*, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f1ac (    0xd8) tokend_server_selfVerify(unsigned int, unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f284 (   0x1c8) tokend_server_cspPassThrough(unsigned int, unsigned int, int*, unsigned int, Security::Context, void*, Security::Context::Attr*, unsigned int, unsigned int, Security::CssmKey*, unsigned int, Security::CssmKey*, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f44c (   0x15c) tokend_server_dlPassThrough(unsigned int, unsigned int, int*, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f5a8 (    0xdc) tokend_server_isLocked(unsigned int, unsigned int, int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f684 (    0x60) Security::Tokend::OutputData::~OutputData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f6e4 (    0x9c) void Security::DataWalkers::enumerateArray<Security::DataWalkers::ReconstituteWalker, Security::CssmQuery, Security::CssmSelectionPredicate>(Security::DataWalkers::ReconstituteWalker&, Security::CssmQuery&, Security::CssmSelectionPredicate*& (Security::CssmQuery::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f780 (     0x8) Security::CssmQuery::predicates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f788 (    0x54) void Security::DataWalkers::walk<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, Security::CssmDbAttributeData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f7dc (    0x98) void Security::DataWalkers::enumerateArray<Security::DataWalkers::ReconstituteWalker, Security::CssmDbAttributeData, Security::CssmData>(Security::DataWalkers::ReconstituteWalker&, Security::CssmDbAttributeData&, Security::CssmData*& (Security::CssmDbAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f874 (     0x8) Security::CssmDbAttributeData::values() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f87c (    0x5c) Security::CssmQuery::at(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f8d8 (    0x9c) void Security::DataWalkers::enumerateArray<Security::DataWalkers::ReconstituteWalker, Security::CssmDbRecordAttributeData, Security::CssmDbAttributeData>(Security::DataWalkers::ReconstituteWalker&, Security::CssmDbRecordAttributeData&, Security::CssmDbAttributeData*& (Security::CssmDbRecordAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f974 (     0x8) Security::CssmDbRecordAttributeData::attributes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f97c (    0x5c) Security::CssmDbRecordAttributeData::at(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51f9d8 (    0xbc) void Security::DataWalkers::enumerateArray<Security::DataWalkers::ReconstituteWalker, Security::SampleGroup, Security::CssmSample>(Security::DataWalkers::ReconstituteWalker&, Security::SampleGroup&, Security::CssmSample*& (Security::SampleGroup::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fa94 (     0x8) Security::SampleGroup::samples() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fa9c (    0x38) void Security::DataWalkers::enumerate<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, Security::CssmList&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fad4 (    0xcc) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, Security::ListElement*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fba0 (    0xe8) Security::Tokend::Return<Security::CssmKey>::~Return() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fc88 (    0xd0) Security::DataWalkers::Copier<Security::CssmKey>::Copier(Security::CssmKey const*, Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fd58 (    0x60) void Security::DataWalkers::CssmDeriveData::enumerate<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fdb8 (    0xe8) Security::Tokend::Return<Security::AclOwnerPrototype>::~Return() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51fea0 (    0xd0) Security::DataWalkers::Copier<Security::AclOwnerPrototype>::Copier(Security::AclOwnerPrototype const*, Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d51ff70 (    0xe4) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::SizeWalker>(Security::DataWalkers::SizeWalker&, Security::ListElement*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520054 (    0x38) void Security::DataWalkers::enumerate<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, Security::CssmList&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52008c (   0x110) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, Security::ListElement*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52019c (   0x13c) Security::DataWalkers::Copier<Security::AclEntryInfo>::Copier(Security::AclEntryInfo const*, unsigned int, Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5202d8 (    0x50) void Security::DataWalkers::enumerate<Security::DataWalkers::SizeWalker>(Security::DataWalkers::SizeWalker&, Security::AclEntryPrototype&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520328 (    0x64) void Security::DataWalkers::enumerate<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, Security::AclEntryPrototype&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52038c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5203a8 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5203c4 (    0x70) Security::Tokend::relocate(Security::Context&, void*, Security::Context::Attr*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520434 (    0x20) Security::Tokend::DataRetrieval::DataRetrieval(Security::CssmDbRecordAttributeData*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520454 (     0x4) Security::Tokend::DataRetrieval::~DataRetrieval() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520458 (   0x164) Security::Tokend::DataRetrieval::returnData(unsigned int&, unsigned int&, void*&, unsigned int&, Security::CssmDbRecordAttributeData*&, unsigned int&, Security::CssmDbRecordAttributeData*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5205bc (    0x5c) Security::Tokend::TokendHandleObject::make(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520618 (    0xa4) Security::Tokend::TokendHandleObject::TokendHandleObject(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5206bc (    0x84) Security::ModuleNexus<Security::Tokend::TokendHandleObject::TokendHandleMapState>::operator()() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520740 (    0x9c) Security::Tokend::TokendHandleObject::TokendHandleMapState::add(unsigned int, Security::Tokend::TokendHandleObject*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5207dc (     0x4) Security::Tokend::TokendHandle::~TokendHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5207e0 (    0x80) Security::MappingHandle<unsigned int>::~MappingHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520860 (    0x7c) Security::Tokend::TokendHandleObject::~TokendHandleObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5208dc (    0x5c) Security::Tokend::TokendHandleObject::TokendHandleMapState::erase(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520938 (     0x4) Security::Tokend::TokendHandleObject::~TokendHandleObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52093c (    0x4c) Security::Tokend::TokendHandleObject::~TokendHandleObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520988 (    0x98) Security::Tokend::TokendHandleObject::findTDHandle(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520a20 (     0x4) Security::Tokend::TokendHandle::~TokendHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520a24 (   0x190) void Security::DataWalkers::walk<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, cssm_context_attribute&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520bb4 (    0xe8) Security::DataWalkers::Copier<Security::CssmDbRecordAttributeData>::Copier(Security::CssmDbRecordAttributeData const*, Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520c9c (    0xcc) void Security::DataWalkers::enumerateArray<Security::DataWalkers::SizeWalker, Security::CssmDbRecordAttributeData, Security::CssmDbAttributeData>(Security::DataWalkers::SizeWalker&, Security::CssmDbRecordAttributeData&, Security::CssmDbAttributeData*& (Security::CssmDbRecordAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520d68 (    0x90) void Security::DataWalkers::enumerateArray<Security::DataWalkers::SizeWalker, Security::CssmDbAttributeData, Security::CssmData>(Security::DataWalkers::SizeWalker&, Security::CssmDbAttributeData&, Security::CssmData*& (Security::CssmDbAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520df8 (    0x70) void Security::DataWalkers::enumerate<Security::DataWalkers::SizeWalker>(Security::DataWalkers::SizeWalker&, Security::CssmDbAttributeInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520e68 (    0xec) void Security::DataWalkers::enumerateArray<Security::DataWalkers::CopyWalker, Security::CssmDbRecordAttributeData, Security::CssmDbAttributeData>(Security::DataWalkers::CopyWalker&, Security::CssmDbRecordAttributeData&, Security::CssmDbAttributeData*& (Security::CssmDbRecordAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d520f54 (    0xf0) void Security::DataWalkers::enumerateArray<Security::DataWalkers::CopyWalker, Security::CssmDbAttributeData, Security::CssmData>(Security::DataWalkers::CopyWalker&, Security::CssmDbAttributeData&, Security::CssmData*& (Security::CssmDbAttributeData::*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521044 (    0x80) void Security::DataWalkers::enumerate<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, Security::CssmDbAttributeInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5210c4 (    0x74) char* Security::DataWalkers::walk<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, char*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521138 (    0x84) Security::ModuleNexus<Security::MappingHandle<unsigned int>::State>::operator()() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5211bc (     0x4) Security::MappingHandle<unsigned int>::~MappingHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5211c0 (    0x4c) Security::MappingHandle<unsigned int>::~MappingHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52120c (    0x44) Security::ModuleNexus<Security::MappingHandle<unsigned int>::State>::make() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521250 (    0x54) Security::ModuleNexus<Security::Tokend::TokendHandleObject::TokendHandleMapState>::make() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5212a4 (    0x88) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__tree_node<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>>>::__emplace_hint_unique_key_args<unsigned int, std::__1::pair<unsigned int const, Security::Tokend::TokendHandleObject*> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__tree_node<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, void*>*, long>, unsigned...
                0x000000020d52132c (   0x1ac) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>>>::__find_equal<unsigned int>(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__tree_node<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5214d8 (    0x58) std::__1::__tree<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521530 (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5216c8 (    0x7c) unsigned long std::__1::__tree<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521744 (    0x74) std::__1::__tree<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<unsigned int, Security::Tokend::TokendHandleObject*>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5217b8 (   0x384) void std::__1::__tree_remove[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521b3c (    0x44) Security::StLock<Security::Mutex, &Security::Mutex::lock(), &Security::Mutex::unlock()>::~StLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521b80 (     0x8) Security::MappingHandle<unsigned int>::tryLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521b88 (     0x4) Security::MappingHandle<unsigned int>::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521b8c (   0x164) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521cf0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, Security::MappingHandle<unsigned int>*>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521da4 (    0x10) Security::TypedHandle<long>::TypedHandle(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521db4 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521de8 (    0x30) Security::MappingHandle<unsigned int>::State::State() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521e18 (    0x18) Security::MappingHandle<unsigned int>::State::erase(Security::MappingHandle<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d521e30 (   0x53c) Security::MappingHandle<unsigned int>::MappingHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52236c (    0x14) Security::ListElement::last() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522380 (     0x8) Security::ListElement::data() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522388 (     0x8) Security::ListElement::list() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522390 (    0xbc) Security::CssmError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52244c (    0x14) Security::CssmError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522460 (     0x8) Security::CssmError::what() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522468 (    0x28) Security::CssmError::~CssmError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522490 (     0x4) Security::CssmError::~CssmError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522494 (   0x1b0) Security::CssmError::CssmError(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522644 (    0x5c) Security::CssmError::throwMe(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5226a0 (    0x14) Security::CssmError::merge(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5226b4 (   0x100) Security::CssmError::cssmError(Security::CommonError const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5227b4 (    0x14) Security::CssmError::cssmError(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5227c8 (    0xcc) Security::CssmData::fromHex(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522894 (     0x4) Security::SecurityServer::ClientSession::~ClientSession() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522898 (     0x4) Security::SecurityServer::ClientSession::~ClientSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52289c (    0x28) Security::SecurityServer::ClientSession::ClientSession(Security::Allocator&, Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5228c4 (    0x24) Security::ThreadStoreSlot::operator=(void*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5228e8 (    0x54) Security::MachPlusPlus::ReplyPort::~ReplyPort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52293c (   0x558) Security::SecurityServer::ClientSession::childCheckIn(Security::MachPlusPlus::Port, Security::MachPlusPlus::Port) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522e94 (    0x34) Security::Syslog::notice(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522ec8 (    0x34) Security::Mutex::Mutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522efc (    0xc0) Security::Mutex::~Mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522fbc (    0x20) Security::Mutex::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522fdc (    0x20) Security::Mutex::unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d522ffc (   0x178) Security::Thread::runner(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523174 (     0x4) Security::MachPlusPlus::MachServer::eventDone() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523178 (     0x4) Security::MachPlusPlus::MachServer::threadLimitReached(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52317c (     0x4) Security::MachPlusPlus::MachServer::notifyNoSenders(Security::MachPlusPlus::Port, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523180 (     0x4) Security::MachPlusPlus::MachServer::notifySendOnce(Security::MachPlusPlus::Port) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523184 (     0x4) Security::MachPlusPlus::MachServer::notifyPortDestroyed(Security::MachPlusPlus::Port) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523188 (     0x4) Security::MachPlusPlus::MachServer::notifyPortDeleted(Security::MachPlusPlus::Port) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52318c (     0x4) Security::MachPlusPlus::MachServer::notifyDeadName(Security::MachPlusPlus::Port) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523190 (    0x70) Security::MachPlusPlus::MachServer::clearTimer(Security::MachPlusPlus::MachServer::Timer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523200 (    0xbc) Security::ScheduleQueue<Security::Time::Absolute>::Event::unschedule() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5232bc (   0x258) Security::MachPlusPlus::MachServer::setTimer(Security::MachPlusPlus::MachServer::Timer*, Security::Time::Absolute) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523514 (    0x54) Security::MachPlusPlus::MachServer::notifyIfUnused(Security::MachPlusPlus::Port, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523568 (    0x5c) Security::MachPlusPlus::MachServer::notifyIfDead(Security::MachPlusPlus::Port, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5235c4 (     0x4) Security::MachPlusPlus::MachServer::~MachServer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5235c8 (     0x4) Security::MachPlusPlus::MachServer::~MachServer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5235cc (   0x238) Security::MachPlusPlus::MachServer::LoadThread::threadAction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d523804 (   0xd6c) Security::MachPlusPlus::MachServer::runServerThread(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524570 (    0xb8) std::__1::pair<std::__1::__tree_iterator<Security::Thread*, std::__1::__tree_node<Security::Thread*, void*>*, long>, bool> std::__1::__tree<Security::Thread*, std::__1::less<Security::Thread*>, std::__1::allocator<Security::Thread*>>::__emplace_unique_key_args<Security::Thread*, Security::Thread* const&>(Security::Thread* const&, Security::Thread* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524628 (    0x54) std::__1::__tree<Security::Thread*, std::__1::less<Security::Thread*>, std::__1::allocator<Security::Thread*>>::__remove_node_pointer(std::__1::__tree_node<Security::Thread*, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52467c (    0x94) Security::ModuleNexus<Security::ThreadNexus<Security::MachPlusPlus::MachServer::PerThread>>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524710 (    0x70) Security::ThreadNexus<Security::MachPlusPlus::MachServer::PerThread>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524780 (   0x224) Security::MachPlusPlus::MachServer::busy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5249a4 (    0x70) Security::StLock<Security::MachPlusPlus::MachServer, &Security::MachPlusPlus::MachServer::busy(), &Security::MachPlusPlus::MachServer::idle()>::~StLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524a14 (    0x58) Security::StLock<Security::MachPlusPlus::MachServer::Timer, &Security::MachPlusPlus::MachServer::Timer::select(), &Security::MachPlusPlus::MachServer::Timer::unselect()>::~StLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524a6c (    0x60) Security::ModuleNexus<Security::ThreadNexus<Security::MachPlusPlus::MachServer::PerThread>>::make() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524acc (    0x44) Security::PerThreadPointer<Security::MachPlusPlus::MachServer::PerThread>::destructor(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524b10 (    0x4c) std::__1::__tree<Security::MachPlusPlus::MachServer::Allocation, std::__1::less<Security::MachPlusPlus::MachServer::Allocation>, std::__1::allocator<Security::MachPlusPlus::MachServer::Allocation>>::destroy(std::__1::__tree_node<Security::MachPlusPlus::MachServer::Allocation, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524b5c (     0x4) Security::MachPlusPlus::MachServer::LoadThread::~LoadThread() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524b60 (     0x4) Security::MachPlusPlus::MachServer::LoadThread::~LoadThread() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524b64 (   0x1ac) Security::MachPlusPlus::MachServer::MachServer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524d10 (    0x38) Security::ScheduleQueue<Security::Time::Absolute>::Event::~Event() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524d48 (    0x4c) std::__1::__tree<Security::Thread*, std::__1::less<Security::Thread*>, std::__1::allocator<Security::Thread*>>::destroy(std::__1::__tree_node<Security::Thread*, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524d94 (    0x4c) std::__1::__tree<Security::MachPlusPlus::MachServer::Handler*, std::__1::less<Security::MachPlusPlus::MachServer::Handler*>, std::__1::allocator<Security::MachPlusPlus::MachServer::Handler*>>::destroy(std::__1::__tree_node<Security::MachPlusPlus::MachServer::Handler*, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524de0 (    0x4c) Security::MachPlusPlus::PortSet::~PortSet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524e2c (    0x50) Security::MachPlusPlus::ReceivePort::~ReceivePort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524e7c (    0x54) Security::ScheduleQueue<Security::Time::Absolute>::~ScheduleQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524ed0 (    0x44) Security::ScheduleQueue<Security::Time::Absolute>::~ScheduleQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524f14 (    0x98) Security::MachPlusPlus::MachServer::~MachServer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d524fac (   0x11c) Security::MachPlusPlus::MachServer::run(unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5250c8 (   0x17c) Security::MachPlusPlus::MachServer::releaseWhenDone(Security::Allocator&, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525244 (     0x4) Security::CommonError::~CommonError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525248 (     0x4) Security::CommonError::~CommonError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52524c (     0x8) Security::UnixError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525254 (    0x10) Security::UnixError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525264 (     0x8) Security::UnixError::what() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52526c (    0x28) Security::UnixError::~UnixError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525294 (     0x4) Security::UnixError::~UnixError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525298 (     0x8) Security::ModuleNexusError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5252a0 (     0x8) Security::ModuleNexusError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5252a8 (    0x28) Security::ModuleNexusError::~ModuleNexusError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5252d0 (     0x4) Security::ModuleNexusError::~ModuleNexusError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5252d4 (   0x264) Security::CommonError::LogBacktrace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525538 (   0x188) Security::UnixError::UnixError(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5256c0 (    0x5c) Security::UnixError::throwMe(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52571c (    0xa8) Security::ModuleNexusError::throwMe() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5257c4 (     0xc) Security::Allocator::operator==(Security::Allocator const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5257d0 (    0x4c) DefaultAllocator::realloc(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52581c (     0x8) DefaultAllocator::free(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525824 (    0x48) DefaultAllocator::malloc(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52586c (     0x4) DefaultAllocator::~DefaultAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525870 (     0x4) DefaultAllocator::~DefaultAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525874 (    0x5c) SensitiveAllocator::realloc(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5258d0 (    0x54) SensitiveAllocator::free(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525924 (     0x4) SensitiveAllocator::~SensitiveAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525928 (     0x4) SensitiveAllocator::~SensitiveAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52592c (    0x48) Security::Allocator::standard(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525974 (    0x94) Security::ModuleNexus<DefaultAllocators>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525a08 (    0x58) Security::ModuleNexus<DefaultAllocators>::make() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525a60 (    0x28) Security::MachPlusPlus::Error::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525a88 (    0x28) Security::MachPlusPlus::Error::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525ab0 (    0x28) Security::MachPlusPlus::Error::~Error() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525ad8 (     0x4) Security::MachPlusPlus::Error::~Error() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525adc (    0x64) Security::MachPlusPlus::Message::~Message() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525b40 (    0x54) Security::MachPlusPlus::Message::~Message() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525b94 (   0x148) Security::MachPlusPlus::Error::Error(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525cdc (    0x5c) Security::MachPlusPlus::Error::throwMe(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525d38 (    0x54) Security::MachPlusPlus::Port::requestNotify(unsigned int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525d8c (    0x88) Security::MachPlusPlus::Port::cancelNotify(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525e14 (    0x74) Security::MachPlusPlus::Message::Message(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525e88 (    0x94) Security::ModuleNexusCommon::create(void* (*)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525f1c (    0x4c) invocation function for block in Security::ModuleNexusCommon::create(void* (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d525f68 (    0xac) _Xmach_notify_dead_name [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526014 (    0x98) _Xmach_notify_send_once [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5260ac (    0xa8) _Xmach_notify_no_senders [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526154 (    0xbc) _Xmach_notify_port_destroyed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526210 (    0x98) _Xmach_notify_port_deleted [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5262a8 (    0x34) cdsa_notify_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5262dc (    0x44) Security::CssmQuery::at(unsigned int) const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526320 (    0x44) Security::CssmDbRecordAttributeData::at(unsigned int) const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526364 (    0x5c) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, Security::ListElement*&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d5263c0 (    0x5c) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::SizeWalker>(Security::DataWalkers::SizeWalker&, Security::ListElement*&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d52641c (    0x5c) Security::ListElement* Security::DataWalkers::walk<Security::DataWalkers::CopyWalker>(Security::DataWalkers::CopyWalker&, Security::ListElement*&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020d526478 (    0x78) void Security::DataWalkers::walk<Security::DataWalkers::ReconstituteWalker>(Security::DataWalkers::ReconstituteWalker&, cssm_context_attribute&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000020d5264f0 (   0x520) __TEXT __auth_stubs
                0x000000020d5264f0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526500 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526510 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526520 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526530 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::assign(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526540 (    0x10) DYLD-STUB$$std::bad_alloc::bad_alloc() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526550 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526560 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526570 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526580 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526590 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265a0 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265b0 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265c0 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265d0 (    0x10) DYLD-STUB$$__cxa_demangle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265e0 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5265f0 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526600 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526610 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526620 (    0x10) DYLD-STUB$$__dynamic_cast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526630 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526640 (    0x10) DYLD-STUB$$__tolower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526650 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526660 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526670 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526680 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526690 (    0x10) DYLD-STUB$$atol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266a0 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266b0 (    0x10) DYLD-STUB$$backtrace_symbols [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266c0 (    0x10) DYLD-STUB$$bootstrap_look_up2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266d0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266e0 (    0x10) DYLD-STUB$$cssmErrorString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5266f0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526700 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526710 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526720 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526730 (    0x10) DYLD-STUB$$mach_msg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526740 (    0x10) DYLD-STUB$$mach_msg_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526750 (    0x10) DYLD-STUB$$mach_msg_overwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526760 (    0x10) DYLD-STUB$$mach_port_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526770 (    0x10) DYLD-STUB$$mach_port_construct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526780 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526790 (    0x10) DYLD-STUB$$mach_port_destruct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267a0 (    0x10) DYLD-STUB$$mach_port_mod_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267b0 (    0x10) DYLD-STUB$$mach_port_move_member [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267c0 (    0x10) DYLD-STUB$$mach_port_request_notification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267d0 (    0x10) DYLD-STUB$$mach_port_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267e0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5267f0 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526800 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526810 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526820 (    0x10) DYLD-STUB$$memset_s [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526830 (    0x10) DYLD-STUB$$mig_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526840 (    0x10) DYLD-STUB$$mig_strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526850 (    0x10) DYLD-STUB$$mig_strncpy_zerofill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526860 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526870 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526880 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526890 (    0x10) DYLD-STUB$$pthread_attr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268a0 (    0x10) DYLD-STUB$$pthread_attr_setdetachstate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268b0 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268c0 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268d0 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268e0 (    0x10) DYLD-STUB$$pthread_key_delete [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5268f0 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526900 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526910 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526920 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526930 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526940 (    0x10) DYLD-STUB$$pthread_setname_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526950 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526960 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526970 (    0x10) DYLD-STUB$$secLogObjForScope [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526980 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526990 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269a0 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269b0 (    0x10) DYLD-STUB$$strsep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269c0 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269d0 (    0x10) DYLD-STUB$$task_get_special_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269e0 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d5269f0 (    0x10) DYLD-STUB$$voucher_mach_msg_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020d526a00 (    0x10) DYLD-STUB$$vsyslog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000020d526a10 (   0x400) __TEXT __const
                0x000000020d526a10 (    0x40) SecurityTokendVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526a50 (     0x8) SecurityTokendVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526a58 (    0x1a) typeinfo name for Security::Tokend::Server [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526a72 (    0x15) typeinfo name for SecTokendCallbacks [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526a87 (    0x27) typeinfo name for Security::Tokend::TokendHandleObject [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526aae (    0x62) typeinfo name for Security::Tokend::TokendHandle [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526b10 (    0x1c) typeinfo name for Security::TypedHandle<long> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526b2c (    0x1e) typeinfo name for Security::MappingHandle<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526b4a (    0x1c) typeinfo name for Security::TypedHandle<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020d526b66 (    0x16) typeinfo name for Security::CssmError [NameNList, MangledNameNList, NList] 
                0x000000020d526b7c (    0x13) Security::CssmData::toHex() const::digits [NameNList, MangledNameNList, NList] 
                0x000000020d526b8f (    0x2b) typeinfo name for Security::SecurityServer::ClientSession [NameNList, MangledNameNList, NList] 
                0x000000020d526bba (    0x46) typeinfo name for Security::SecurityServer::ClientCommon [NameNList, MangledNameNList, NList] 
                0x000000020d526c00 (    0x13) typeinfo name for Security::Thread [NameNList, MangledNameNList, NList] 
                0x000000020d526c13 (    0x32) typeinfo name for Security::MachPlusPlus::MachServer::LoadThread [NameNList, MangledNameNList, NList] 
                0x000000020d526c45 (    0x26) typeinfo name for Security::MachPlusPlus::MachServer [NameNList, MangledNameNList, NList] 
                0x000000020d526c6b (    0xaf) typeinfo name for Security::ScheduleQueue<Security::Time::Absolute> [NameNList, MangledNameNList, NList] 
                0x000000020d526d1a (    0x16) typeinfo name for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x000000020d526d30 (    0x19) typeinfo name for Security::CommonError [NameNList, MangledNameNList, NList] 
                0x000000020d526d49 (    0x1e) typeinfo name for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x000000020d526d67 (    0x16) typeinfo name for Security::Allocator [NameNList, MangledNameNList, NList] 
                0x000000020d526d7d (    0x13) typeinfo name for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x000000020d526d90 (    0x15) typeinfo name for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x000000020d526da5 (    0x20) typeinfo name for Security::MachPlusPlus::Error [NameNList, MangledNameNList, NList] 
                0x000000020d526dc5 (    0x4b) typeinfo name for Security::MachPlusPlus::Message [NameNList, MangledNameNList, NList] 
            0x000000020d526e10 (  0x1394) __TEXT __gcc_except_tab
                0x000000020d526e10 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020d526e34 (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020d526e60 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000020d526e6c (    0x48) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020d526eb4 (    0x48) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000020d526efc (    0x68) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000020d526f64 (    0x64) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000020d526fc8 (    0x64) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000020d52702c (    0x50) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000020d52707c (    0x50) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000020d5270cc (    0x44) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000020d527110 (    0x44) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000020d527154 (    0x44) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000020d527198 (    0x44) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000020d5271dc (    0x44) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000020d527220 (    0x50) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000020d527270 (    0x60) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000020d5272d0 (    0x50) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000020d527320 (    0x60) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000020d527380 (    0x50) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000020d5273d0 (    0x60) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000020d527430 (    0x60) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000020d527490 (    0x68) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000020d5274f8 (    0x6c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000020d527564 (    0x68) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000020d5275cc (    0x74) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000020d527640 (    0x74) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000020d5276b4 (    0x60) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000020d527714 (    0x74) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000020d527788 (    0x48) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000020d5277d0 (    0x78) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000020d527848 (    0x6c) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000020d5278b4 (    0x48) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000020d5278fc (    0x48) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000020d527944 (    0x44) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000020d527988 (    0x5c) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000020d5279e4 (    0x5c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000020d527a40 (    0x44) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x000000020d527a84 (    0x60) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000020d527ae4 (    0x5c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000020d527b40 (    0x44) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000020d527b84 (    0x14) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x000000020d527b98 (    0x14) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000020d527bac (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000020d527bc0 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000020d527bd0 (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000020d527bf4 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000020d527c14 (    0x28) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000020d527c3c (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000020d527c5c (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000020d527c78 (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000020d527c98 (     0xc) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000020d527ca4 (    0x20) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000020d527cc4 (     0xc) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000020d527cd0 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000020d527ce0 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000020d527cf0 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020d527d00 (    0x34) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000020d527d34 (    0x20) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000020d527d54 (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000020d527d64 (    0x10) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000020d527d74 (    0x50) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000020d527dc4 (    0x18) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x000000020d527ddc (    0x30) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x000000020d527e0c (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x000000020d527e1c (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x000000020d527e30 (    0x50) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x000000020d527e80 (   0x11c) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x000000020d527f9c (    0x24) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x000000020d527fc0 (    0x24) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x000000020d527fe4 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000020d527ff4 (    0x10) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x000000020d528004 (    0x10) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x000000020d528014 (    0x34) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x000000020d528048 (    0x10) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x000000020d528058 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x000000020d528068 (    0x10) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x000000020d528078 (    0x28) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x000000020d5280a0 (    0x20) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x000000020d5280c0 (    0x10) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x000000020d5280d0 (    0x10) GCC_except_table115 [NameNList, MangledNameNList, NList] 
                0x000000020d5280e0 (    0x24) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x000000020d528104 (    0x18) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x000000020d52811c (    0x10) GCC_except_table128 [NameNList, MangledNameNList, NList] 
                0x000000020d52812c (    0x14) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x000000020d528140 (    0x14) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x000000020d528154 (    0x14) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x000000020d528168 (    0x14) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x000000020d52817c (    0x14) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x000000020d528190 (    0x14) GCC_except_table138 [NameNList, MangledNameNList, NList] 
            0x000000020d5281a4 (   0x121) __TEXT __cstring
            0x000000020d5282c5 (   0x2f0) __TEXT __oslogstring
            0x000000020d5285b5 (   0x340) __TEXT __dof_security_
            0x000000020d5288f8 (   0x6d0) __TEXT __unwind_info
            0x000000020d528fc8 (    0x38) __TEXT __eh_frame
        0x000000022e7c4db0 (    0x68) __DATA_CONST SEGMENT
            0x000000022e7c4db0 (    0x48) __DATA_CONST __got
            0x000000022e7c4df8 (    0x20) __DATA_CONST __const
                0x000000022e7c4df8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
        0x0000000237c1c9d0 (  0x1078) __AUTH_CONST SEGMENT
            0x0000000237c1c9d0 (   0xdd0) __AUTH_CONST __const
                0x0000000237c1c9d0 (    0x30) Security::Tokend::supportVector [NameNList, MangledNameNList, NList] 
                0x0000000237c1ca00 (    0x80) vtable for Security::Tokend::Server [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1ca80 (    0x10) typeinfo for SecTokendCallbacks [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1ca90 (    0x38) typeinfo for Security::Tokend::Server [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1cac8 (   0x660) tokend_server_tokend_subsystem [NameNList, MangledNameNList, NList] 
                0x0000000237c1d128 (    0x30) vtable for Security::Tokend::TokendHandleObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d158 (    0x10) typeinfo for Security::TypedHandle<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d168 (    0x28) typeinfo for Security::MappingHandle<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d190 (    0x18) typeinfo for Security::Tokend::TokendHandleObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d1a8 (    0x20) vtable for Security::Tokend::TokendHandle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d1c8 (    0x10) typeinfo for Security::TypedHandle<long> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d1d8 (    0x28) typeinfo for Security::Tokend::TokendHandle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d200 (    0x30) vtable for Security::MappingHandle<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d230 (    0x38) vtable for Security::CssmError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d268 (    0x18) typeinfo for Security::CssmError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d280 (    0x20) vtable for Security::SecurityServer::ClientSession [NameNList, MangledNameNList, NList] 
                0x0000000237c1d2a0 (    0x10) typeinfo for Security::SecurityServer::ClientCommon [NameNList, MangledNameNList, NList] 
                0x0000000237c1d2b0 (    0x28) typeinfo for Security::SecurityServer::ClientSession [NameNList, MangledNameNList, NList] 
                0x0000000237c1d2d8 (    0x80) vtable for Security::MachPlusPlus::MachServer [NameNList, MangledNameNList, NList] 
                0x0000000237c1d358 (    0x28) vtable for Security::MachPlusPlus::MachServer::LoadThread [NameNList, MangledNameNList, NList] 
                0x0000000237c1d380 (    0x10) typeinfo for Security::Thread [NameNList, MangledNameNList, NList] 
                0x0000000237c1d390 (    0x18) typeinfo for Security::MachPlusPlus::MachServer::LoadThread [NameNList, MangledNameNList, NList] 
                0x0000000237c1d3a8 (    0x10) typeinfo for Security::MachPlusPlus::MachServer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d3b8 (    0x20) vtable for Security::ScheduleQueue<Security::Time::Absolute> [NameNList, MangledNameNList, NList] 
                0x0000000237c1d3d8 (    0x10) typeinfo for Security::ScheduleQueue<Security::Time::Absolute> [NameNList, MangledNameNList, NList] 
                0x0000000237c1d3e8 (    0x38) vtable for Security::CommonError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d420 (    0x38) vtable for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d458 (    0x18) typeinfo for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d470 (    0x38) vtable for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d4a8 (    0x18) typeinfo for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x0000000237c1d4c0 (    0x10) typeinfo for Security::Allocator [NameNList, MangledNameNList, NList] 
                0x0000000237c1d4d0 (    0x40) vtable for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x0000000237c1d510 (    0x18) typeinfo for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x0000000237c1d528 (    0x40) vtable for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x0000000237c1d568 (    0x18) typeinfo for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x0000000237c1d580 (    0x38) vtable for Security::MachPlusPlus::Error [NameNList, MangledNameNList, NList] 
                0x0000000237c1d5b8 (    0x18) typeinfo for Security::CommonError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237c1d5d0 (    0x18) typeinfo for Security::MachPlusPlus::Error [NameNList, MangledNameNList, NList] 
                0x0000000237c1d5e8 (    0x20) vtable for Security::MachPlusPlus::Message [NameNList, MangledNameNList, NList] 
                0x0000000237c1d608 (    0x10) typeinfo for Security::MachPlusPlus::Message [NameNList, MangledNameNList, NList] 
                0x0000000237c1d618 (   0x188) cdsa_notify_subsystem [NameNList, MangledNameNList, NList] 
            0x0000000237c1d7a0 (    0x10) __AUTH_CONST __auth_ptr
            0x0000000237c1d7b0 (   0x298) __AUTH_CONST __auth_got
        0x0000000231543c90 (    0x88) __DATA SEGMENT
            0x0000000231543c90 (    0x18) __DATA __data
                0x0000000231543c90 (    0x18) Security::MappingHandle<unsigned int>::state [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231543ca8 (    0x20) __DATA __common
                0x0000000231543ca8 (     0x8) Security::Tokend::server [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231543cb0 (    0x18) Security::Tokend::TokendHandleObject::thmstate [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231543cc8 (    0x50) __DATA __bss
                0x0000000231543cc8 (    0x18) Security::SecurityServer::ClientSession::mGlobal [NameNList, MangledNameNList, NList] 
                0x0000000231543ce0 (     0x8) Security::SecurityServer::ClientSession::mContactName [NameNList, MangledNameNList, NList] 
                0x0000000231543ce8 (    0x18) Security::MachPlusPlus::MachServer::thread [NameNList, MangledNameNList, NList] 
                0x0000000231543d00 (    0x18) defaultAllocators [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
