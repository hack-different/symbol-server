/System/iOSSupport/usr/lib/swift/libswiftCoreNFC.dylib [arm64e, 0.131738 seconds]:
    7353BB9C-5068-3C7F-9DDC-0F471A0EA74F /System/iOSSupport/usr/lib/swift/libswiftCoreNFC.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000022d8cb000 (  0xaff2) __TEXT SEGMENT
            0x000000022d8cb000 (  0x1fbc) MACH_HEADER
            0x000000022d8ccfbc (  0x5fec) __TEXT __text
                0x000000022d8ccfbc (    0x34) NFCISO15693SystemInfo.uniqueIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ccff0 (    0x64) outlined copy of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd054 (    0x38) NFCISO15693SystemInfo.uniqueIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd08c (    0x58) outlined consume of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd0e4 (    0x20) NFCISO15693SystemInfo.uniqueIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd104 (     0x4) NFCISO15693SystemInfo.uniqueIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd108 (     0x8) NFCISO15693SystemInfo.dataStorageFormatIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd110 (     0x8) NFCISO15693SystemInfo.dataStorageFormatIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd118 (    0x20) NFCISO15693SystemInfo.dataStorageFormatIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd138 (     0x4) NFCISO15693SystemInfo.dataStorageFormatIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd13c (     0x8) NFCISO15693SystemInfo.applicationFamilyIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd144 (     0x8) NFCISO15693SystemInfo.applicationFamilyIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd14c (    0x20) NFCISO15693SystemInfo.applicationFamilyIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd16c (     0x4) NFCISO15693SystemInfo.applicationFamilyIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd170 (     0x8) NFCISO15693SystemInfo.blockSize.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd178 (     0x8) NFCISO15693SystemInfo.blockSize.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd180 (    0x20) NFCISO15693SystemInfo.blockSize.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1a0 (     0x4) NFCISO15693SystemInfo.blockSize.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1a4 (     0x8) NFCISO15693SystemInfo.totalBlocks.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1ac (     0x8) NFCISO15693SystemInfo.totalBlocks.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1b4 (    0x20) NFCISO15693SystemInfo.totalBlocks.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1d4 (     0x4) NFCISO15693SystemInfo.totalBlocks.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1d8 (     0x8) NFCISO15693SystemInfo.icReference.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1e0 (     0x8) NFCISO15693SystemInfo.icReference.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd1e8 (    0x20) NFCISO15693SystemInfo.icReference.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd208 (     0x4) NFCISO15693SystemInfo.icReference.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd20c (    0x74) NFCISO15693SystemInfo.init(uniqueIdentifier:dataStorageFormatIdentifier:applicationFamilyIdentifier:blockSize:totalBlocks:icReference:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd280 (     0x8) NFCISO15693MultipleBlockSecurityStatus.blockSecurityStatus.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd288 (    0x2c) NFCISO15693MultipleBlockSecurityStatus.blockSecurityStatus.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd2b4 (    0x20) NFCISO15693MultipleBlockSecurityStatus.blockSecurityStatus.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd2d4 (     0x4) NFCISO15693MultipleBlockSecurityStatus.blockSecurityStatus.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd2d8 (     0x8) NFCISO15693MultipleBlockSecurityStatus.init(blockSecurityStatus:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd2e0 (    0xf8) NFCISO15693Tag.readSingleBlock(requestFlags:blockNumber:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd3d8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022d8cd410 (     0x4) partial apply for closure #1 in NFCISO15693Tag.readSingleBlock(requestFlags:blockNumber:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd414 (    0xa8) thunk for @escaping @callee_guaranteed (@guaranteed Data, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd4bc (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd4cc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd4d4 (    0x50) NFCISO15693Tag.readMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd524 (     0x4) partial apply for closure #1 in NFCISO15693Tag.readMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd528 (    0x90) thunk for @escaping @callee_guaranteed (@guaranteed [Data], @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd5b8 (    0xf0) NFCISO15693Tag.getSystemInfo(requestFlags:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd6a8 (   0x168) closure #1 in NFCISO15693Tag.getSystemInfo(requestFlags:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd810 (    0x28) partial apply for closure #1 in NFCISO15693Tag.getSystemInfo(requestFlags:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd838 (    0xf0) thunk for @escaping @callee_guaranteed (@guaranteed Data?, @unowned Int, @unowned Int, @unowned Int, @unowned Int, @unowned Int, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd928 (    0x50) NFCISO15693Tag.fastReadMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd978 (     0x4) partial apply for closure #1 in NFCISO15693Tag.fastReadMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cd97c (   0x118) NFCISO15693Tag.customCommand(requestFlags:customCommandCode:customRequestParameters:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cda94 (     0x4) partial apply for closure #1 in NFCISO15693Tag.customCommand(requestFlags:customCommandCode:customRequestParameters:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cda98 (    0xf8) NFCISO15693Tag.extendedReadSingleBlock(requestFlags:blockNumber:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdb90 (     0x4) partial apply for closure #1 in NFCISO15693Tag.extendedReadSingleBlock(requestFlags:blockNumber:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdb94 (    0x38) partial apply for closure #1 in NFCISO15693Tag.readSingleBlock(requestFlags:blockNumber:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdbcc (   0x128) NFCISO15693Tag.extendedWriteMultipleBlocks(requestFlags:blockRange:dataBlocks:completionHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdcf4 (    0x28) partial apply for closure #1 in NFCISO15693Tag.extendedWriteMultipleBlocks(requestFlags:blockRange:dataBlocks:completionHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdd1c (    0x6c) thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdd88 (    0x50) NFCISO15693Tag.authenticate(requestFlags:cryptoSuiteIdentifier:message:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cddd8 (     0x4) partial apply for closure #1 in NFCISO15693Tag.authenticate(requestFlags:cryptoSuiteIdentifier:message:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdddc (    0xb0) thunk for @escaping @callee_guaranteed (@unowned NFCISO15693ResponseFlag, @guaranteed Data, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cde8c (    0x50) NFCISO15693Tag.keyUpdate(requestFlags:keyIdentifier:message:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdedc (   0x10c) NFCISO15693Tag.authenticate(requestFlags:cryptoSuiteIdentifier:message:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdfe8 (     0x4) partial apply for closure #1 in NFCISO15693Tag.keyUpdate(requestFlags:keyIdentifier:message:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cdfec (    0xf0) NFCISO15693Tag.challenge(requestFlags:cryptoSuiteIdentifier:message:completionHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce0dc (    0xf0) NFCISO15693Tag.readBuffer(requestFlags:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce1cc (     0x4) partial apply for closure #1 in NFCISO15693Tag.readBuffer(requestFlags:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce1d0 (   0x108) NFCISO15693Tag.extendedGetMultipleBlockSecurityStatus(requestFlags:blockRange:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce2d8 (   0x1bc) closure #1 in NFCISO15693Tag.extendedGetMultipleBlockSecurityStatus(requestFlags:blockRange:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce494 (     0x8) partial apply for closure #1 in NFCISO15693Tag.extendedGetMultipleBlockSecurityStatus(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce49c (    0xa0) thunk for @escaping @callee_guaranteed (@guaranteed [NSNumber], @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce53c (    0x50) NFCISO15693Tag.extendedFastReadMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce58c (    0xf8) NFCISO15693Tag.readMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce684 (     0x4) partial apply for closure #1 in NFCISO15693Tag.extendedFastReadMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce688 (    0x34) partial apply for closure #1 in NFCISO15693Tag.readMultipleBlocks(requestFlags:blockRange:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce6bc (   0x12c) NFCISO15693Tag.sendRequest(requestFlags:commandCode:data:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce7e8 (     0x4) partial apply for closure #1 in NFCISO15693Tag.sendRequest(requestFlags:commandCode:data:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce7ec (    0x44) partial apply for closure #1 in NFCISO15693Tag.authenticate(requestFlags:cryptoSuiteIdentifier:message:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce830 (    0xc0) thunk for @escaping @callee_guaranteed (@unowned NFCISO15693ResponseFlag, @guaranteed Data?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce8f0 (    0x34) initializeBufferWithCopyOfBuffer for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce924 (     0xc) destroy for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce930 (    0x54) initializeWithCopy for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce984 (    0x74) assignWithCopy for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ce9f8 (    0x1c) __swift_memcpy56_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cea14 (    0x4c) assignWithTake for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cea60 (    0x54) getEnumTagSinglePayload for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceab4 (    0x5c) storeEnumTagSinglePayload for NFCISO15693SystemInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceb10 (    0x10) type metadata accessor for NFCISO15693SystemInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceb20 (    0x10) type metadata accessor for NFCISO15693MultipleBlockSecurityStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceb30 (    0x14) type metadata accessor for NFCFeliCaEncryptionId [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceb44 (    0x14) type metadata accessor for NFCISO15693ResponseFlag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceb58 (    0x48) type metadata accessor for NFCFeliCaEncryptionId [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceba0 (    0x14) outlined consume of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cebb4 (    0x40) type metadata accessor for NSNumber [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cebf4 (     0x4) block_copy_helper.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cebf8 (     0x4) block_copy_helper.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cebfc (     0x4) block_copy_helper.20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec00 (     0x4) block_copy_helper.26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec04 (     0x4) block_copy_helper.32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec08 (     0x4) block_copy_helper.38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec0c (     0x4) block_copy_helper.44 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec10 (     0x4) block_copy_helper.50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec14 (     0x4) block_copy_helper.53 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec18 (     0x4) block_copy_helper.59 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec1c (     0x4) block_copy_helper.65 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec20 (     0x4) block_copy_helper.71 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec24 (     0x4) block_copy_helper.77 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec28 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec2c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec30 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec38 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec3c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec40 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec44 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec48 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec4c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec50 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec54 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cec58 (     0x4) block_destroy_helper.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec5c (     0x4) block_destroy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec60 (     0x4) block_destroy_helper.21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec64 (     0x4) block_destroy_helper.27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec68 (     0x4) block_destroy_helper.33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec6c (     0x4) block_destroy_helper.39 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec70 (     0x4) block_destroy_helper.45 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec74 (     0x4) block_destroy_helper.51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec78 (     0x4) block_destroy_helper.54 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec7c (     0x4) block_destroy_helper.60 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec80 (     0x4) block_destroy_helper.66 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec84 (     0x4) block_destroy_helper.72 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec88 (     0x4) block_destroy_helper.78 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec8c (     0x8) NFCTagReaderSession.upcastTag(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cec94 (    0x80) NFCTagReaderSession.connectedTag.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ced14 (    0xf8) NFCTagReaderSession.init(pollingOption:delegate:queue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cee0c (    0xd4) NFCTagReaderSession.connect(to:completionHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceee0 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceef0 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8ceef8 (     0x8) NFCISO7816ResponseAPDU.statusWord1.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef00 (     0x8) NFCISO7816ResponseAPDU.statusWord1.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef08 (    0x20) NFCISO7816ResponseAPDU.statusWord1.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef28 (     0x4) NFCISO7816ResponseAPDU.statusWord1.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef2c (     0x8) NFCISO7816ResponseAPDU.statusWord2.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef34 (     0x8) NFCISO7816ResponseAPDU.statusWord2.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef3c (    0x20) NFCISO7816ResponseAPDU.statusWord2.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef5c (     0x4) NFCISO7816ResponseAPDU.statusWord2.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef60 (    0x34) NFCISO7816ResponseAPDU.payload.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cef94 (    0x14) outlined copy of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cefa8 (    0x38) NFCISO7816ResponseAPDU.payload.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cefe0 (    0x20) NFCISO7816ResponseAPDU.payload.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf000 (     0x4) NFCISO7816ResponseAPDU.payload.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf004 (    0x54) NFCISO7816ResponseAPDU.init(statusWord1:statusWord2:paylaod:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf058 (    0xf0) NFCISO7816Tag.sendCommand(apdu:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf148 (   0x170) closure #1 in NFCISO7816Tag.sendCommand(apdu:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf2b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022d8cf2c8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022d8cf300 (     0x8) partial apply for closure #1 in NFCISO7816Tag.sendCommand(apdu:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf308 (    0xb8) thunk for @escaping @callee_guaranteed (@guaranteed Data, @unowned UInt8, @unowned UInt8, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf3c0 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf3d0 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf3d8 (    0x6c) initializeBufferWithCopyOfBuffer for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf444 (    0x1c) destroy for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf460 (    0x6c) initializeWithCopy for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf4cc (    0xb8) assignWithCopy for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf584 (    0x54) outlined destroy of Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf5d8 (    0x14) __swift_memcpy24_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf5ec (    0x84) assignWithTake for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf670 (    0x5c) getEnumTagSinglePayload for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf6cc (    0x50) storeEnumTagSinglePayload for NFCISO7816ResponseAPDU [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf71c (    0x10) type metadata accessor for NFCISO7816ResponseAPDU [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf72c (   0x198) NFCNDEFPayload.wellKnownTypeTextPayload() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf8c4 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf908 (    0x68) outlined init with take of Locale? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cf970 (    0xf8) NFCMiFareTag.sendMiFareCommand(commandPacket:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfa68 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022d8cfaa0 (    0x38) partial apply for closure #1 in NFCMiFareTag.sendMiFareCommand(commandPacket:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfad8 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfae8 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfaf0 (    0xf0) NFCMiFareTag.sendMiFareISO7816Command(_:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfbe0 (   0x170) closure #1 in NFCMiFareTag.sendMiFareISO7816Command(_:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022d8cfd60 (     0x8) partial apply for closure #1 in NFCMiFareTag.sendMiFareISO7816Command(_:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd68 (     0x4) block_copy_helper.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd6c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8cfd70 (     0x4) block_destroy_helper.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd74 (    0x14) dispatch thunk of NFCTagReaderSessionDelegate.tagReaderSessionDidBecomeActive(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd88 (    0x14) dispatch thunk of NFCTagReaderSessionDelegate.tagReaderSession(_:didInvalidateWithError:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfd9c (    0x14) dispatch thunk of NFCTagReaderSessionDelegate.tagReaderSession(_:didDetect:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfdb0 (    0xc8) @objc NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSessionDidBecomeActive(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cfe78 (    0xe8) @objc NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSession(_:didInvalidateWithError:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8cff60 (   0x2e0) NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSession(_:didDetect:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0240 (    0x90) @objc NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSession(_:didDetect:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d02d0 (    0x30) @objc NFCTagReaderSessionDelegateSwiftWrapper.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0300 (    0x34) NFCTagReaderSessionDelegateSwiftWrapper.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0334 (    0x10) @objc NFCTagReaderSessionDelegateSwiftWrapper.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0344 (    0x24) type metadata accessor for NFCTagReaderSessionDelegateSwiftWrapper [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0368 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0388 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d03a8 (   0x100) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d04a8 (   0x108) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d05b0 (   0x1b4) specialized _ArrayBuffer._getElementSlowPath(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0764 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0768 (    0x28) outlined destroy of weak NFCTagReaderSessionDelegate? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0790 (    0x34) NFCFeliCaPollingResponse.manufactureParameter.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d07c4 (    0x38) NFCFeliCaPollingResponse.manufactureParameter.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d07fc (    0x20) NFCFeliCaPollingResponse.manufactureParameter.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d081c (     0x4) NFCFeliCaPollingResponse.manufactureParameter.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0820 (    0x34) NFCFeliCaPollingResponse.requestData.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0854 (    0x38) NFCFeliCaPollingResponse.requestData.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d088c (    0x20) NFCFeliCaPollingResponse.requestData.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d08ac (     0x4) NFCFeliCaPollingResponse.requestData.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d08b0 (    0x70) NFCFeliCaPollingResponse.init(manufactureParameter:requestData:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0920 (     0x8) NFCFeliCaStatusFlag.statusFlag1.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0928 (     0x8) NFCFeliCaStatusFlag.statusFlag1.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0930 (    0x20) NFCFeliCaStatusFlag.statusFlag1.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0950 (     0x4) NFCFeliCaStatusFlag.statusFlag1.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0954 (     0x8) NFCFeliCaStatusFlag.statusFlag2.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d095c (     0x8) NFCFeliCaStatusFlag.statusFlag2.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0964 (    0x20) NFCFeliCaStatusFlag.statusFlag2.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0984 (     0x4) NFCFeliCaStatusFlag.statusFlag2.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0988 (     0x8) NFCFeliCaStatusFlag.init(statusFlag1:statusFlag2:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0990 (     0x8) NFCFeliCaRequsetServiceV2Response.statusFlag1.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0998 (     0x8) NFCFeliCaRequsetServiceV2Response.statusFlag1.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09a0 (    0x20) NFCFeliCaRequsetServiceV2Response.statusFlag1.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09c0 (     0x4) NFCFeliCaRequsetServiceV2Response.statusFlag1.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09c4 (     0x8) NFCFeliCaRequsetServiceV2Response.statusFlag2.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09cc (     0x8) NFCFeliCaRequsetServiceV2Response.statusFlag2.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09d4 (    0x20) NFCFeliCaRequsetServiceV2Response.statusFlag2.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09f4 (     0x4) NFCFeliCaRequsetServiceV2Response.statusFlag2.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d09f8 (     0x8) NFCFeliCaRequsetServiceV2Response.encryptionIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a00 (     0x8) NFCFeliCaRequsetServiceV2Response.encryptionIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a08 (    0x20) NFCFeliCaRequsetServiceV2Response.encryptionIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a28 (     0x4) NFCFeliCaRequsetServiceV2Response.encryptionIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a2c (     0x8) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListAES.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a34 (    0x2c) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListAES.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a60 (    0x20) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListAES.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a80 (     0x4) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListAES.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a84 (     0x8) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListDES.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0a8c (    0x2c) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListDES.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0ab8 (    0x20) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListDES.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0ad8 (     0x4) NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListDES.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0adc (    0x10) NFCFeliCaRequsetServiceV2Response.init(statusFlag1:statusFlag2:encryptionIdentifier:nodeKeyVersionListAES:nodeKeyVersionListDES:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0aec (     0x8) NFCFeliCaRequestSpecificationVersionResponse.statusFlag1.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0af4 (     0x8) NFCFeliCaRequestSpecificationVersionResponse.statusFlag1.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0afc (    0x20) NFCFeliCaRequestSpecificationVersionResponse.statusFlag1.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b1c (     0x4) NFCFeliCaRequestSpecificationVersionResponse.statusFlag1.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b20 (     0x8) NFCFeliCaRequestSpecificationVersionResponse.statusFlag2.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b28 (     0x8) NFCFeliCaRequestSpecificationVersionResponse.statusFlag2.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b30 (    0x20) NFCFeliCaRequestSpecificationVersionResponse.statusFlag2.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b50 (     0x4) NFCFeliCaRequestSpecificationVersionResponse.statusFlag2.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b54 (    0x34) NFCFeliCaRequestSpecificationVersionResponse.basicVersion.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0b88 (    0x38) NFCFeliCaRequestSpecificationVersionResponse.basicVersion.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0bc0 (    0x20) NFCFeliCaRequestSpecificationVersionResponse.basicVersion.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0be0 (     0x4) NFCFeliCaRequestSpecificationVersionResponse.basicVersion.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0be4 (    0x34) NFCFeliCaRequestSpecificationVersionResponse.optionVersion.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0c18 (    0x38) NFCFeliCaRequestSpecificationVersionResponse.optionVersion.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0c50 (    0x20) NFCFeliCaRequestSpecificationVersionResponse.optionVersion.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0c70 (     0x4) NFCFeliCaRequestSpecificationVersionResponse.optionVersion.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0c74 (    0x7c) NFCFeliCaRequestSpecificationVersionResponse.init(statusFlag1:statusFlag2:basicVersion:optionVersion:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0cf0 (   0x114) NFCFeliCaTag.polling(systemCode:requestCode:timeSlot:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0e04 (   0x198) closure #1 in NFCFeliCaTag.polling(systemCode:requestCode:timeSlot:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0f9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022d8d0fac (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022d8d0fe4 (     0x8) partial apply for closure #1 in NFCFeliCaTag.polling(systemCode:requestCode:timeSlot:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d0fec (    0xd8) thunk for @escaping @callee_guaranteed (@guaranteed Data, @guaranteed Data, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d10c4 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d10d4 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d10dc (   0x100) NFCFeliCaTag.requestService(nodeCodeList:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d11dc (     0x4) partial apply for closure #1 in NFCFeliCaTag.requestService(nodeCodeList:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d11e0 (    0xe0) NFCFeliCaTag.requestResponse(resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d12c0 (    0x34) partial apply for closure #1 in NFCFeliCaTag.requestResponse(resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d12f4 (    0x78) thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d136c (   0x120) NFCFeliCaTag.readWithoutEncryption(serviceCodeList:blockList:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d148c (    0x98) closure #1 in NFCFeliCaTag.readWithoutEncryption(serviceCodeList:blockList:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1524 (     0x8) partial apply for closure #1 in NFCFeliCaTag.readWithoutEncryption(serviceCodeList:blockList:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d152c (    0xa8) thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Int, @guaranteed [Data], @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d15d4 (   0x144) NFCFeliCaTag.writeWithoutEncryption(serviceCodeList:blockList:blockData:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1718 (    0x1c) partial apply for closure #1 in NFCFeliCaTag.writeWithoutEncryption(serviceCodeList:blockList:blockData:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1734 (    0x88) thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Int, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d17bc (    0xe0) NFCFeliCaTag.requestSystemCode(resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d189c (     0x4) partial apply for closure #1 in NFCFeliCaTag.requestSystemCode(resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d18a0 (    0x34) partial apply for closure #1 in NFCFeliCaTag.requestService(nodeCodeList:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d18d4 (   0x100) NFCFeliCaTag.requestServiceV2(nodeCodeList:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d19d4 (    0xfc) closure #1 in NFCFeliCaTag.requestServiceV2(nodeCodeList:resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1ad0 (     0x8) partial apply for closure #1 in NFCFeliCaTag.requestServiceV2(nodeCodeList:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1ad8 (    0xe4) thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Int, @unowned NFCFeliCaEncryptionId, @guaranteed [Data], @guaranteed [Data], @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1bbc (    0xe0) NFCFeliCaTag.requestSpecificationVersion(resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1c9c (   0x218) closure #1 in NFCFeliCaTag.requestSpecificationVersion(resultHandler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1eb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022d8d1ec4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022d8d1ed4 (    0x28) partial apply for closure #1 in NFCFeliCaTag.requestSpecificationVersion(resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1efc (    0xf0) thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Int, @guaranteed Data, @guaranteed Data, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d1fec (    0xe0) NFCFeliCaTag.resetMode(resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d20cc (    0x7c) closure #1 in NFCFeliCaTag.writeWithoutEncryption(serviceCodeList:blockList:blockData:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2148 (    0xf8) NFCFeliCaTag.sendFeliCaCommand(commandPacket:resultHandler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2240 (    0x38) partial apply for closure #1 in NFCFeliCaTag.sendFeliCaCommand(commandPacket:resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2278 (    0x34) initializeBufferWithCopyOfBuffer for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d22ac (    0x5c) destroy for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2308 (    0x7c) initializeWithCopy for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2384 (    0xc8) assignWithCopy for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d244c (     0xc) __swift_memcpy32_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2458 (    0x90) assignWithTake for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d24e8 (    0x54) getEnumTagSinglePayload for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d253c (    0x50) storeEnumTagSinglePayload for NFCFeliCaPollingResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d258c (    0x10) type metadata accessor for NFCFeliCaPollingResponse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d259c (     0xc) __swift_memcpy16_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d25a8 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d25ac (    0x20) getEnumTagSinglePayload for NFCFeliCaStatusFlag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d25cc (    0x28) storeEnumTagSinglePayload for NFCFeliCaStatusFlag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d25f4 (    0x10) type metadata accessor for NFCFeliCaStatusFlag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2604 (    0x3c) destroy for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2640 (    0x48) initializeWithCopy for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2688 (    0x78) assignWithCopy for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2700 (    0x14) __swift_memcpy40_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2714 (    0x50) assignWithTake for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2764 (    0x5c) getEnumTagSinglePayload for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d27c0 (    0x5c) storeEnumTagSinglePayload for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d281c (    0x10) type metadata accessor for NFCFeliCaRequsetServiceV2Response [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d282c (    0x68) destroy for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2894 (    0xa8) initializeWithCopy for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d293c (   0x140) assignWithCopy for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2a7c (    0x14) __swift_memcpy48_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2a90 (    0xd0) assignWithTake for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2b60 (    0x5c) getEnumTagSinglePayload for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2bbc (    0x5c) storeEnumTagSinglePayload for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c18 (    0x10) type metadata accessor for NFCFeliCaRequestSpecificationVersionResponse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c28 (     0x4) block_copy_helper.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c2c (     0x4) block_copy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c30 (     0x4) block_copy_helper.21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c34 (     0x4) block_copy_helper.27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c38 (     0x4) block_copy_helper.33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c3c (     0x4) block_copy_helper.39 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c40 (     0x4) block_copy_helper.45 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c44 (     0x4) block_copy_helper.51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c48 (     0x4) block_copy_helper.57 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c4c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c50 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c54 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c58 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c5c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c60 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c64 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c68 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c6c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000022d8d2c70 (     0x4) initializeBufferWithCopyOfBuffer for NFCFeliCaRequsetServiceV2Response [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c74 (     0x4) initializeBufferWithCopyOfBuffer for NFCFeliCaRequestSpecificationVersionResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c78 (     0x4) block_destroy_helper.10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c7c (     0x4) block_destroy_helper.16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c80 (     0x4) block_destroy_helper.22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c84 (     0x4) block_destroy_helper.28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c88 (     0x4) block_destroy_helper.34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c8c (     0x4) block_destroy_helper.40 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c90 (     0x4) block_destroy_helper.46 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c94 (     0x4) block_destroy_helper.52 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c98 (     0x4) block_destroy_helper.58 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2c9c (     0x4) partial apply for closure #1 in NFCFeliCaTag.resetMode(resultHandler:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2ca0 (   0x128) NFCTag.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2dc8 (    0x24) NFCTag.isAvailable.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2dec (    0x38) initializeBufferWithCopyOfBuffer for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2e24 (     0x8) destroy for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2e2c (    0x38) initializeWithCopy for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2e64 (    0x44) assignWithCopy for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2ea8 (    0x14) __swift_memcpy9_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2ebc (    0x3c) assignWithTake for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2ef8 (    0x48) getEnumTagSinglePayload for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2f40 (    0x44) storeEnumTagSinglePayload for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2f84 (     0x8) getEnumTag for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2f8c (     0x4) destructiveProjectEnumData for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2f90 (     0x8) destructiveInjectEnumTag for NFCTag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022d8d2f98 (    0x10) type metadata accessor for NFCTag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000022d8d2fa8 (   0x410) __TEXT __auth_stubs
                0x000000022d8d2fa8 (    0x10) DYLD-STUB$$Data._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d2fb8 (    0x10) DYLD-STUB$$static Data._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d2fc8 (    0x10) DYLD-STUB$$static Locale._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d2fd8 (    0x10) DYLD-STUB$$type metadata accessor for Locale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d2fe8 (    0x10) DYLD-STUB$$static String._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d2ff8 (    0x10) DYLD-STUB$$String.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3008 (    0x10) DYLD-STUB$$Array._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3018 (    0x10) DYLD-STUB$$static Array._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3028 (    0x10) DYLD-STUB$$_StringGuts.grow(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3038 (    0x10) DYLD-STUB$$specialized _ArrayBuffer._getElementSlowPath(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3048 (    0x10) DYLD-STUB$$_assertionFailure(_:_:file:line:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3058 (    0x10) DYLD-STUB$$_assertionFailure(_:_:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3068 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3078 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3088 (    0x10) DYLD-STUB$$_typeName(_:qualified:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3098 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30a8 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30b8 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30c8 (    0x10) DYLD-STUB$$_swift_stdlib_reportUnimplementedInitializer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30d8 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30e8 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d30f8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3108 (    0x10) DYLD-STUB$$objc_allocWithZone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3118 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3128 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3138 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3148 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3158 (    0x10) DYLD-STUB$$objc_release_x19 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3168 (    0x10) DYLD-STUB$$objc_release_x20 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3178 (    0x10) DYLD-STUB$$objc_release_x21 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3188 (    0x10) DYLD-STUB$$objc_release_x22 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3198 (    0x10) DYLD-STUB$$objc_release_x23 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31a8 (    0x10) DYLD-STUB$$objc_release_x24 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31b8 (    0x10) DYLD-STUB$$objc_release_x25 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31c8 (    0x10) DYLD-STUB$$objc_release_x26 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31d8 (    0x10) DYLD-STUB$$objc_release_x28 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31e8 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d31f8 (    0x10) DYLD-STUB$$objc_retain_x19 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3208 (    0x10) DYLD-STUB$$objc_retain_x20 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3218 (    0x10) DYLD-STUB$$objc_retain_x21 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3228 (    0x10) DYLD-STUB$$objc_retain_x22 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3238 (    0x10) DYLD-STUB$$objc_retain_x26 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3248 (    0x10) DYLD-STUB$$objc_retain_x8 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3258 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3268 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3278 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3288 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3298 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32a8 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32b8 (    0x10) DYLD-STUB$$swift_dynamicCastObjCProtocolConditional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32c8 (    0x10) DYLD-STUB$$swift_errorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32d8 (    0x10) DYLD-STUB$$swift_errorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32e8 (    0x10) DYLD-STUB$$swift_getForeignTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d32f8 (    0x10) DYLD-STUB$$swift_getObjCClassFromMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3308 (    0x10) DYLD-STUB$$swift_getObjCClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3318 (    0x10) DYLD-STUB$$swift_getObjectType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3328 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3338 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3348 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3358 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3368 (    0x10) DYLD-STUB$$swift_unknownObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3378 (    0x10) DYLD-STUB$$swift_unknownObjectWeakAssign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3388 (    0x10) DYLD-STUB$$swift_unknownObjectWeakDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d3398 (    0x10) DYLD-STUB$$swift_unknownObjectWeakInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022d8d33a8 (    0x10) DYLD-STUB$$swift_unknownObjectWeakLoadStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000022d8d33b8 (    0x44) __TEXT __objc_methlist
                0x000000022d8d33b8 (    0x44) _OBJC_$_INSTANCE_METHODS__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [NameNList, MangledNameNList, NList] 
            0x000000022d8d3400 (   0x274) __TEXT __const
                0x000000022d8d3410 (     0x4) property descriptor for NFCISO15693SystemInfo.uniqueIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3414 (     0x4) property descriptor for NFCISO15693SystemInfo.dataStorageFormatIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3418 (     0x4) property descriptor for NFCISO15693SystemInfo.applicationFamilyIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d341c (     0x4) property descriptor for NFCISO15693SystemInfo.blockSize [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3420 (     0x4) property descriptor for NFCISO15693SystemInfo.totalBlocks [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3424 (     0x4) property descriptor for NFCISO15693SystemInfo.icReference [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3428 (    0xa0) property descriptor for NFCISO15693MultipleBlockSecurityStatus.blockSecurityStatus [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d34c8 (     0x4) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d34cc (     0x4) property descriptor for NFCTagReaderSession.connectedTag [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d34d0 (     0x4) property descriptor for NFCISO7816ResponseAPDU.statusWord1 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d34d4 (     0x4) property descriptor for NFCISO7816ResponseAPDU.statusWord2 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d34d8 (    0x98) property descriptor for NFCISO7816ResponseAPDU.payload [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3570 (     0x4) property descriptor for NFCFeliCaPollingResponse.manufactureParameter [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3574 (     0x4) property descriptor for NFCFeliCaPollingResponse.requestData [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3578 (     0x4) property descriptor for NFCFeliCaStatusFlag.statusFlag1 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d357c (     0x4) property descriptor for NFCFeliCaStatusFlag.statusFlag2 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3580 (     0x4) property descriptor for NFCFeliCaRequsetServiceV2Response.statusFlag1 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3584 (     0x4) property descriptor for NFCFeliCaRequsetServiceV2Response.statusFlag2 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3588 (     0x4) property descriptor for NFCFeliCaRequsetServiceV2Response.encryptionIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d358c (     0x4) property descriptor for NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListAES [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3590 (     0x4) property descriptor for NFCFeliCaRequsetServiceV2Response.nodeKeyVersionListDES [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3594 (     0x4) property descriptor for NFCFeliCaRequestSpecificationVersionResponse.statusFlag1 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3598 (     0x4) property descriptor for NFCFeliCaRequestSpecificationVersionResponse.statusFlag2 [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d359c (     0x4) property descriptor for NFCFeliCaRequestSpecificationVersionResponse.basicVersion [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d35a0 (    0xb0) property descriptor for NFCFeliCaRequestSpecificationVersionResponse.optionVersion [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3650 (    0x14) property descriptor for NFCTag.isAvailable [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3664 (     0x4) enum case for NFCTag.feliCa(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3668 (     0x4) enum case for NFCTag.iso7816(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d366c (     0x4) enum case for NFCTag.iso15693(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3670 (     0x4) enum case for NFCTag.miFare(_:) [EXT, NameNList, MangledNameNList, NList] 
            0x000000022d8d3674 (   0x2ab) __TEXT __swift5_typeref
                0x000000022d8d3674 (    0x1a) symbolic _____y___________pGIegg_ s6ResultO 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d368e (    0x1e) symbolic _____ySay_____G______pGIegg_ s6ResultO 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d36ac (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC21NFCISO15693SystemInfoV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d36c6 (    0x10) symbolic ______pSgIegg_ s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d36d6 (    0x20) symbolic _____y___________t______pGIegg_ s6ResultO So23NFCISO15693ResponseFlagV 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d36f6 (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC38NFCISO15693MultipleBlockSecurityStatusV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3710 (    0x22) symbolic _____y___________Sgt______pGIegg_ s6ResultO So23NFCISO15693ResponseFlagV 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3732 (     0x6) symbolic _____ 7CoreNFC21NFCISO15693SystemInfoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3738 (     0x6) symbolic _____ 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d373e (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3742 (     0x6) symbolic _____ 7CoreNFC38NFCISO15693MultipleBlockSecurityStatusV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3748 (     0x8) symbolic SaySiG [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3750 (     0x6) symbolic _____ So21NFCFeliCaEncryptionIdV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3756 (     0x6) symbolic _____ So23NFCISO15693ResponseFlagV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d375c (     0x6) symbolic _____ s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3762 (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC22NFCISO7816ResponseAPDUV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d377c (     0x6) symbolic _____ 7CoreNFC22NFCISO7816ResponseAPDUV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3782 (     0x8) symbolic _____Sg 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d378a (     0x8) symbolic _____Sg 10Foundation6LocaleV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3792 (    0x2a) symbolic $s7CoreNFC27NFCTagReaderSessionDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37bc (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37be (     0xe) symbolic So8NSObjectC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37cc (     0x6) symbolic _____ 7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapperC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37d2 (     0xc) symbolic ______pSgXw 7CoreNFC27NFCTagReaderSessionDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37de (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 7CoreNFC6NFCTagO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37ec (     0xc) symbolic So6NFCTag_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d37f8 (     0xa) symbolic _____ySiG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3802 (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC24NFCFeliCaPollingResponseV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d381c (    0x16) symbolic _____ySi______pGIegg_ s6ResultO s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3832 (    0x24) symbolic _____y______Say_____Gt______pGIegn_ s6ResultO 7CoreNFC19NFCFeliCaStatusFlagV 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3856 (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC19NFCFeliCaStatusFlagV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3870 (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC33NFCFeliCaRequsetServiceV2ResponseV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d388a (    0x1a) symbolic _____y___________pGIegn_ s6ResultO 7CoreNFC44NFCFeliCaRequestSpecificationVersionResponseV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38a4 (     0x6) symbolic _____ 7CoreNFC24NFCFeliCaPollingResponseV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38aa (     0x6) symbolic _____ 7CoreNFC19NFCFeliCaStatusFlagV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38b0 (     0x6) symbolic _____ 7CoreNFC33NFCFeliCaRequsetServiceV2ResponseV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38b6 (     0xc) symbolic Say_____GSg 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38c2 (     0x6) symbolic _____ 7CoreNFC44NFCFeliCaRequestSpecificationVersionResponseV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38c8 (     0x6) symbolic _____ 7CoreNFC6NFCTagO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38ce (    0x14) symbolic So12NFCFeliCaTag_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38e2 (    0x14) symbolic So13NFCISO7816Tag_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d38f6 (    0x16) symbolic So14NFCISO15693Tag_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d390c (    0x13) symbolic So12NFCMiFareTag_p [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022d8d3920 (   0x1a0) __TEXT __swift5_capture
            0x000000022d8d3ac0 (   0x3ae) __TEXT __cstring
            0x000000022d8d3e70 (   0x1e0) __TEXT __constg_swiftt
                0x000000022d8d3e70 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3e7c (    0x1c) nominal type descriptor for NFCISO15693SystemInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3e98 (    0x1c) nominal type descriptor for NFCISO15693MultipleBlockSecurityStatus [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3eb4 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3ec0 (    0x20) nominal type descriptor for NFCFeliCaEncryptionId [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3ee0 (    0x20) nominal type descriptor for NFCISO15693ResponseFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f00 (    0x1c) nominal type descriptor for NFCISO7816ResponseAPDU [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f1c (    0x1c) protocol descriptor for NFCTagReaderSessionDelegate [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f38 (     0x8) protocol requirements base descriptor for NFCTagReaderSessionDelegate [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f40 (     0x8) method descriptor for NFCTagReaderSessionDelegate.tagReaderSessionDidBecomeActive(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f48 (     0x8) method descriptor for NFCTagReaderSessionDelegate.tagReaderSession(_:didInvalidateWithError:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f50 (     0x8) method descriptor for NFCTagReaderSessionDelegate.tagReaderSession(_:didDetect:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f58 (    0x34) nominal type descriptor for NFCTagReaderSessionDelegateSwiftWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f8c (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.swiftDelegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f94 (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.swiftDelegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3f9c (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.swiftDelegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fa4 (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.__allocating_init(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fac (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSessionDidBecomeActive(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fb4 (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSession(_:didInvalidateWithError:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fbc (     0x8) method descriptor for NFCTagReaderSessionDelegateSwiftWrapper.tagReaderSession(_:didDetect:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fc4 (    0x1c) nominal type descriptor for NFCFeliCaPollingResponse [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3fe0 (    0x1c) nominal type descriptor for NFCFeliCaStatusFlag [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d3ffc (    0x1c) nominal type descriptor for NFCFeliCaRequsetServiceV2Response [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4018 (    0x1c) nominal type descriptor for NFCFeliCaRequestSpecificationVersionResponse [EXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4034 (    0x1c) nominal type descriptor for NFCTag [EXT, NameNList, MangledNameNList, NList] 
            0x000000022d8d4050 (   0x1a0) __TEXT __swift5_reflstr
            0x000000022d8d41f0 (   0x20c) __TEXT __swift5_fieldmd
                0x000000022d8d41f0 (    0x58) reflection metadata field descriptor NFCISO15693SystemInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4248 (    0x1c) reflection metadata field descriptor NFCISO15693MultipleBlockSecurityStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4264 (    0x1c) reflection metadata field descriptor NFCISO15693ResponseFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4280 (    0x34) reflection metadata field descriptor NFCISO7816ResponseAPDU [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d42b4 (    0x10) reflection metadata field descriptor NFCTagReaderSessionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d42c4 (    0x1c) reflection metadata field descriptor NFCTagReaderSessionDelegateSwiftWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d42e0 (    0x28) reflection metadata field descriptor NFCFeliCaPollingResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4308 (    0x28) reflection metadata field descriptor NFCFeliCaStatusFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4330 (    0x4c) reflection metadata field descriptor NFCFeliCaRequsetServiceV2Response [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d437c (    0x40) reflection metadata field descriptor NFCFeliCaRequestSpecificationVersionResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d43bc (    0x40) reflection metadata field descriptor NFCTag [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022d8d43fc (    0x3c) __TEXT __swift5_builtin
                0x000000022d8d43fc (    0x14) reflection metadata builtin descriptor NFCFeliCaEncryptionId [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4410 (    0x14) reflection metadata builtin descriptor NFCISO15693ResponseFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022d8d4424 (    0x14) reflection metadata builtin descriptor NFCTag [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022d8d4438 (    0x2c) __TEXT __swift5_types
            0x000000022d8d4464 (     0x4) __TEXT __swift5_protos
            0x000000022d8d4468 (     0x8) __TEXT __swift5_mpenum
            0x000000022d8d4470 (   0x328) __TEXT __unwind_info
            0x000000022d8d4798 (    0x90) __TEXT __objc_classname
            0x000000022d8d4828 (   0xec4) __TEXT __objc_methname
            0x000000022d8d56ec (   0x906) __TEXT __objc_methtype
        0x0000000236363720 (  0x1710) __DATA_CONST SEGMENT
            0x0000000236363720 (    0x20) __DATA_CONST __got
            0x0000000236363740 (    0x38) __DATA_CONST __const
                0x0000000236363740 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363748 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363750 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363758 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363760 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363768 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363770 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_CoreNFC [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236363778 (     0x8) __DATA_CONST __objc_classlist
            0x0000000236363780 (    0xb0) __DATA_CONST __objc_protolist
                0x00000002363637a8 (    0x10) _OBJC_LABEL_PROTOCOL_$_NFCFeliCaTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637b8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFCISO7816Tag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637c0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFCISO15693Tag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637c8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFCMiFareTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637d0 (    0x20) _OBJC_LABEL_PROTOCOL_$_NFCTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637f0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFCNDEFTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002363637f8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363800 (    0x10) _OBJC_LABEL_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363810 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363818 (    0x10) _OBJC_LABEL_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236363828 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFCTagReaderSessionDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236363830 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000236363838 (  0x14a0) __DATA_CONST __objc_const
                0x0000000236363838 (    0x20) _OBJC_$_PROTOCOL_REFS_NFCFeliCaTag [NameNList, MangledNameNList, NList] 
                0x0000000236363858 (   0x128) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCFeliCaTag [NameNList, MangledNameNList, NList] 
                0x0000000236363980 (    0x28) _OBJC_$_PROP_LIST_NFCFeliCaTag [NameNList, MangledNameNList, NList] 
                0x00000002363639a8 (    0x60) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCFeliCaTag [NameNList, MangledNameNList, NList] 
                0x0000000236363a08 (    0x20) _OBJC_$_PROTOCOL_REFS_NFCISO7816Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363a28 (    0x98) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCISO7816Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363ac0 (    0x58) _OBJC_$_PROP_LIST_NFCISO7816Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363b18 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCISO7816Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363b48 (    0x20) _OBJC_$_PROTOCOL_REFS_NFCISO15693Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363b68 (   0x350) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCISO15693Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363eb8 (    0x38) _OBJC_$_PROP_LIST_NFCISO15693Tag [NameNList, MangledNameNList, NList] 
                0x0000000236363ef0 (   0x118) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCISO15693Tag [NameNList, MangledNameNList, NList] 
                0x0000000236364008 (    0x20) _OBJC_$_PROTOCOL_REFS_NFCMiFareTag [NameNList, MangledNameNList, NList] 
                0x0000000236364028 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCMiFareTag [NameNList, MangledNameNList, NList] 
                0x00000002363640a8 (    0x38) _OBJC_$_PROP_LIST_NFCMiFareTag [NameNList, MangledNameNList, NList] 
                0x00000002363640e0 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCMiFareTag [NameNList, MangledNameNList, NList] 
                0x0000000236364108 (    0x28) _OBJC_$_PROTOCOL_REFS_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364130 (    0xb0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCTag [NameNList, MangledNameNList, NList] 
                0x00000002363641e0 (    0x38) _OBJC_$_PROP_LIST_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364218 (    0x38) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364250 (    0x28) _OBJC_$_PROTOCOL_REFS_NFCNDEFTag [NameNList, MangledNameNList, NList] 
                0x0000000236364278 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCNDEFTag [NameNList, MangledNameNList, NList] 
                0x00000002363642f8 (    0x18) _OBJC_$_PROP_LIST_NFCNDEFTag [NameNList, MangledNameNList, NList] 
                0x0000000236364310 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCNDEFTag [NameNList, MangledNameNList, NList] 
                0x0000000236364338 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364508 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364528 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364570 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364610 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364628 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364648 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364650 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364668 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236364688 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236364690 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x00000002363646c8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x00000002363646d8 (    0x10) _PROTOCOLS__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [NameNList, MangledNameNList, NList] 
                0x00000002363646e8 (    0x48) _METACLASS_DATA__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [NameNList, MangledNameNList, NList] 
                0x0000000236364730 (    0x10) _PROTOCOLS__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper.2 [NameNList, MangledNameNList, NList] 
                0x0000000236364740 (    0x28) _IVARS__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [NameNList, MangledNameNList, NList] 
                0x0000000236364768 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364938 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364958 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000002363649a0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000236364a40 (    0x18) _OBJC_$_PROTOCOL_REFS_NFCTagReaderSessionDelegate [NameNList, MangledNameNList, NList] 
                0x0000000236364a58 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCTagReaderSessionDelegate [NameNList, MangledNameNList, NList] 
                0x0000000236364a78 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NFCTagReaderSessionDelegate [NameNList, MangledNameNList, NList] 
                0x0000000236364ab0 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCTagReaderSessionDelegate [NameNList, MangledNameNList, NList] 
                0x0000000236364ac8 (    0x28) _OBJC_$_PROTOCOL_REFS_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364af0 (    0xb0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364ba0 (    0x38) _OBJC_$_PROP_LIST_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364bd8 (    0x38) _OBJC_$_PROTOCOL_METHOD_TYPES_NFCTag [NameNList, MangledNameNList, NList] 
                0x0000000236364c10 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364c28 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364c48 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364c50 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364c68 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236364c88 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236364c90 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236364cc8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
            0x0000000236364cd8 (   0x158) __DATA_CONST __objc_selrefs
        0x00000002388c5e00 (   0xf48) __AUTH_CONST SEGMENT
            0x00000002388c5e00 (   0xd38) __AUTH_CONST __const
                0x00000002388c5e40 (    0x50) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000002388c5e90 (    0x50) block_descriptor.10 [NameNList, MangledNameNList, NList] 
                0x00000002388c5ee0 (    0x50) block_descriptor.16 [NameNList, MangledNameNList, NList] 
                0x00000002388c5f30 (    0x50) block_descriptor.22 [NameNList, MangledNameNList, NList] 
                0x00000002388c5f80 (    0x50) block_descriptor.28 [NameNList, MangledNameNList, NList] 
                0x00000002388c5fd0 (    0x50) block_descriptor.34 [NameNList, MangledNameNList, NList] 
                0x00000002388c6020 (    0x50) block_descriptor.40 [NameNList, MangledNameNList, NList] 
                0x00000002388c6070 (    0x50) block_descriptor.46 [NameNList, MangledNameNList, NList] 
                0x00000002388c60c0 (    0x28) block_descriptor.52 [NameNList, MangledNameNList, NList] 
                0x00000002388c60e8 (    0x50) block_descriptor.55 [NameNList, MangledNameNList, NList] 
                0x00000002388c6138 (    0x50) block_descriptor.61 [NameNList, MangledNameNList, NList] 
                0x00000002388c6188 (    0x50) block_descriptor.67 [NameNList, MangledNameNList, NList] 
                0x00000002388c61d8 (    0x50) block_descriptor.73 [NameNList, MangledNameNList, NList] 
                0x00000002388c6228 (    0x28) block_descriptor.79 [NameNList, MangledNameNList, NList] 
                0x00000002388c6250 (    0x58) value witness table for NFCISO15693SystemInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c62a8 (    0x10) full type metadata for NFCISO15693SystemInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c62b8 (    0x28) type metadata for NFCISO15693SystemInfo [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c62e0 (    0x10) full type metadata for NFCISO15693MultipleBlockSecurityStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c62f0 (    0x18) type metadata for NFCISO15693MultipleBlockSecurityStatus [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6308 (    0x20) full type metadata for NFCFeliCaEncryptionId [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6328 (    0x30) full type metadata for NFCISO15693ResponseFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6358 (    0x60) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000002388c63b8 (    0x28) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000002388c63e0 (    0x58) value witness table for NFCISO7816ResponseAPDU [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6438 (    0x10) full type metadata for NFCISO7816ResponseAPDU [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6448 (    0x78) type metadata for NFCISO7816ResponseAPDU [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c64c0 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000002388c6518 (    0x70) block_descriptor.6 [NameNList, MangledNameNList, NList] 
                0x00000002388c6588 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000002388c65e0 (    0x50) block_descriptor.11 [NameNList, MangledNameNList, NList] 
                0x00000002388c6630 (    0x50) block_descriptor.17 [NameNList, MangledNameNList, NList] 
                0x00000002388c6680 (    0x50) block_descriptor.23 [NameNList, MangledNameNList, NList] 
                0x00000002388c66d0 (    0x50) block_descriptor.29 [NameNList, MangledNameNList, NList] 
                0x00000002388c6720 (    0x50) block_descriptor.35 [NameNList, MangledNameNList, NList] 
                0x00000002388c6770 (    0x50) block_descriptor.41 [NameNList, MangledNameNList, NList] 
                0x00000002388c67c0 (    0x50) block_descriptor.47 [NameNList, MangledNameNList, NList] 
                0x00000002388c6810 (    0x50) block_descriptor.53 [NameNList, MangledNameNList, NList] 
                0x00000002388c6860 (    0x28) block_descriptor.59 [NameNList, MangledNameNList, NList] 
                0x00000002388c6888 (    0x58) value witness table for NFCFeliCaPollingResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c68e0 (    0x10) full type metadata for NFCFeliCaPollingResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c68f0 (    0x18) type metadata for NFCFeliCaPollingResponse [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6908 (    0x58) value witness table for NFCFeliCaStatusFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6960 (    0x10) full type metadata for NFCFeliCaStatusFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6970 (    0x18) type metadata for NFCFeliCaStatusFlag [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6988 (    0x58) value witness table for NFCFeliCaRequsetServiceV2Response [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c69e0 (    0x10) full type metadata for NFCFeliCaRequsetServiceV2Response [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c69f0 (    0x30) type metadata for NFCFeliCaRequsetServiceV2Response [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6a20 (    0x58) value witness table for NFCFeliCaRequestSpecificationVersionResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6a78 (    0x10) full type metadata for NFCFeliCaRequestSpecificationVersionResponse [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6a88 (    0x20) type metadata for NFCFeliCaRequestSpecificationVersionResponse [EXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6aa8 (    0x70) value witness table for NFCTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6b18 (    0x10) full type metadata for NFCTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002388c6b28 (    0x10) type metadata for NFCTag [EXT, NameNList, MangledNameNList, NList] 
            0x00000002388c6b38 (     0x8) __AUTH_CONST __auth_ptr
            0x00000002388c6b40 (   0x208) __AUTH_CONST __auth_got
        0x0000000233badb70 (   0x120) __AUTH SEGMENT
            0x0000000233badb70 (    0x30) __AUTH __data
                0x0000000233badb78 (    0x28) OBJC_METACLASS_$__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000233badba0 (    0xf0) __AUTH __objc_data
                0x0000000233badba0 (    0x48) _DATA__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [NameNList, MangledNameNList, NList] 
                0x0000000233badbe8 (    0x18) full type metadata for NFCTagReaderSessionDelegateSwiftWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233badc00 (    0x90) OBJC_CLASS_$__TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper [PEXT, NameNList, MangledNameNList, Merged, NList] 
        0x0000000231e86a50 (   0x4e1) __DATA SEGMENT
            0x0000000231e86a50 (    0x58) __DATA __objc_protorefs
            0x0000000231e86aa8 (     0x8) __DATA __objc_classrefs
            0x0000000231e86ab0 (   0x480) __DATA __data
                0x0000000231e86ab0 (    0x60) _OBJC_PROTOCOL_$_NFCFeliCaTag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86b10 (    0x60) _OBJC_PROTOCOL_$_NFCISO7816Tag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86b70 (    0x60) _OBJC_PROTOCOL_$_NFCISO15693Tag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86bd0 (    0x60) _OBJC_PROTOCOL_$_NFCMiFareTag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86c30 (     0x8) lazy cache variable for type metadata for NFCFeliCaEncryptionId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86c38 (     0x8) lazy cache variable for type metadata for NFCISO15693ResponseFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86c40 (    0x60) _OBJC_PROTOCOL_$_NFCTag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86ca0 (    0x10) lazy cache variable for type metadata for NSNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86cb0 (    0x60) _OBJC_PROTOCOL_$_NFCNDEFTag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86d10 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86d70 (    0x60) _OBJC_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86dd0 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86e30 (    0x60) _OBJC_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86e90 (    0x10) demangling cache variable for type metadata for Locale? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86ea0 (    0x10) direct field offset for NFCTagReaderSessionDelegateSwiftWrapper.swiftDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86eb0 (    0x60) _OBJC_PROTOCOL_$_NFCTagReaderSessionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86f10 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<NFCTag> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86f18 (     0x8) demangling cache variable for type metadata for NFCTag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231e86f20 (    0x10) demangling cache variable for type metadata for _ContiguousArrayStorage<Int> [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231e86f30 (     0x1) __DATA __common
                0x0000000231e86f30 (     0x1) _swift_FORCE_LOAD_$_swiftCoreNFC [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
