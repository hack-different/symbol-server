Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight [arm64e, 0.123543 seconds]:
    F666CCE9-0B6D-3405-BC17-3B963BB96867 /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000185b5a000 (0x498000) __TEXT SEGMENT
            0x0000000185b5a000 (  0x2df8) MACH_HEADER
            0x0000000185b5cdf8 (0x3e8688) __TEXT __text
                0x0000000185b5cdf8 (    0x58) __get_remote_context_callback_record_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ce50 (   0x61c) CGSInternalRegisterNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d46c (   0x108) (anonymous namespace)::get_process_notifier() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d574 (    0xc4) (anonymous namespace)::ProcessNotifier::synchronize_all(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d638 (     0x8) cf_block_retain_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d640 (    0xc4) CGSScoreboard [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d704 (   0x1c4) get_session_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5d8c8 (   0x31c) CGSLookupServerRootPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5dbe4 (   0x338) connect_and_check [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5df1c (    0x88) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::vector(std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5dfa4 (    0xb4) CGSUnlockShmemLock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e058 (    0xe8) __SLSEventInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e140 (    0x1c) __CGSNotifierInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e15c (   0x148) (anonymous namespace)::ProcessNotifier::get_types() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e2a4 (   0x1d4) _CGSSetProcessNotifyInterests [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e478 (    0x5c) (anonymous namespace)::Registry::is_dead(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e4d4 (    0x88) (anonymous namespace)::Registry::is_known(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e55c (    0xe8) (anonymous namespace)::Backtrace::capture(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e644 (   0x2d0) CGSConnectionByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e914 (    0x68) CGSConnectionRegistryCheckConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e97c (    0x78) (anonymous namespace)::notify_new_connection_handler(unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5e9f4 (    0xd4) CPSNoticeNewConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5eac8 (    0x84) CGSConnectionGetNotifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5eb4c (   0x314) CGSConnectionNotifier::notify() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ee60 (    0xec) CGSGetConnectionPortById [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ef4c (    0x28) CGSDisplaySystemState::mainDisplay() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ef74 (    0x64) CGSDisplaySystemState::displayByDisplayID(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5efd8 (   0x1e4) _CGSCreateApplication [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f1bc (    0x80) NormalizePSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f23c (   0x164) _CGSAppShowHideOp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f3a0 (   0x194) _CGSSetNotifications [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f534 (   0x14c) get_display_id_list_conditional(CGSDisplaySystemState const*, int**, bool, bool (CGSDisplayState::*)() const) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f680 (    0x30) CGSDisplayState::isActive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f6b0 (   0x160) canonicalize_display_id_list(CGSDisplaySystemState const*, int*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f810 (    0x40) primary_alias_display_id(CGSDisplaySystemState const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f850 (   0x180) CGSDisplaySystemStateGetDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5f9d0 (    0x94) CGSDisplaySystemStateGetBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5fa64 (   0x344) CGSColorSpaceRegistryCopyColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5fda8 (    0x9c) (anonymous namespace)::get_registry() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5fe44 (   0x140) CGSPropertyListCreateWithSerializedData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ff84 (    0x64) x_list_append [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b5ffe8 (    0x64) x_list_remove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6004c (    0xd0) lookup_connection_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6011c (   0x18c) _CGSGetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b602a8 (   0x15c) CGSPropertyListCreateSerializedData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60404 (    0x74) CGSWindowGetShapeBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60478 (   0x17c) CGSWindowSynchronizeBacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b605f4 (    0x9c) CGSBackingStoreLock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60690 (    0x64) CGSBackingStoreUnlock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b606f4 (   0x1ac) CGSWindowHasAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b608a0 (   0x15c) _CGSWindowIsOrderedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b609fc (    0x9c) create_uuid_string [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60a98 (   0x114) set_cached_managed_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60bac (   0x1a8) CGSWindowCopyColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b60d54 (   0x3c0) CGSColorSpaceRegistryAddColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61114 (   0x1a0) _CGSGetWindowLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b612b4 (    0x30) x_list_prepend [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b612e4 (    0x90) update_device_geometry_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61374 (   0x1d0) CGSWindowGetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61544 (    0x60) update_device_geometry_depth_format [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b615a4 (    0x8c) CGSWindowGetDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61630 (   0x15c) _CGSGetWindowDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6178c (   0x408) lock_window_backing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61b94 (    0xc0) device_dirty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61c54 (    0xd0) CGSWindowUnlockBackingWriter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61d24 (    0xd4) get_window_backing_store_information [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61df8 (   0x18c) CGSWindowFlushRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61f84 (    0x6c) window_context_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61ff0 (     0x8) CGSDisplayState::isOnline() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b61ff8 (    0x4c) CGSPropertyListCreateWithSerializedBytesRequiringType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62044 (    0x7c) CGSModifyWindowDirtyShapeRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b620c0 (   0x108) _CGSSetMenuBars [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b621c8 (   0x1a4) _CGSSessionDeathWatchPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6236c (    0x94) CGSConnectionGetEventQueue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62400 (    0x78) findDirectDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62478 (    0x88) findDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62500 (    0xdc) initDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b625dc (   0x134) __initDisplays_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62710 (    0xa4) addEntryForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b627b4 (    0xb8) adjustShieldWindowAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6286c (   0x208) testAndUpdateDisplayFlaggingParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62a74 (    0x94) displayInfoInvalidate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b62b08 (   0x508) initDisplayModeList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63010 (    0x54) CGSDisplaySystemStateGetNumberOfModes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63064 (   0x4a4) CGSCreateModeDictFromDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63508 (   0x3f4) create_display_mode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b638fc (    0x68) displayInfoSetCurrentMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63964 (    0xe4) displayInfoGetCurrentMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63a48 (    0xcc) getDisplayModeBitsPerPixelAndBitsPerSample [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63b14 (    0xf4) display_mode_is_legacy_listed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63c08 (   0x2a8) createLegacyModeDictCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63eb0 (    0x40) CGSConnectionGetUpdateManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63ef0 (     0x8) std::__1::__shared_ptr_pointer<CGSBacktrace*, void (*)(CGSBacktrace*), std::__1::allocator<CGSBacktrace>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63ef8 (     0xc) CGSBacktraceRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63f04 (     0x4) std::__1::__shared_ptr_pointer<CGSBacktrace*, void (*)(CGSBacktrace*), std::__1::allocator<CGSBacktrace>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b63f08 (   0xb7c) CGSSnarfAndDispatchDatagrams [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b64a84 (    0x78) CGSDecodeEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b64afc (    0x34) CGSEventAppendixCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b64b30 (    0xa0) cf_typified<(anonymous namespace)::event_appendix>::get_type_id() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b64bd0 (    0x30) invocation function for block in cf_typified<(anonymous namespace)::event_appendix>::get_type_id()::'lambda'()::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b64c00 (   0x4fc) CGSEventQueueEnqueueEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b650fc (   0x128) CGSDeepCopyEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65224 (    0x9c) (anonymous namespace)::event_appendix::event_appendix((anonymous namespace)::event_appendix const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b652c0 (    0x34) cf_typified<(anonymous namespace)::event_appendix>::cf_finalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b652f4 (   0x3dc) (anonymous namespace)::notify_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b656d0 (   0x164) CGSPostLocalNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65834 (   0x224) CGSCanCoalesceEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65a58 (    0x4c) CGSDatagramReadStream::release() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65aa4 (    0xb4) CGSEventQueueDequeueEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65b58 (   0x1b0) (anonymous namespace)::shared_logger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65d08 (    0x60) (anonymous namespace)::get_application_name() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65d68 (   0x24c) CGSEventSourceForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b65fb4 (   0x260) _CGSGetWindowListWithTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66214 (   0x1b8) _GetWindowRightHolder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b663cc (    0x94) add_structural_region_of_type [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66460 (   0x1dc) _CGSFindWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6663c (   0x128) transform_is_valid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66764 (    0xc0) CGSWindowSetAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66824 (    0x70) x_list_copy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66894 (    0xbc) _CGSSetWindowCornerMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66950 (   0x14c) CGSWindowSetSurfaceBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66a9c (    0x88) get_cacheable_surfaces() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66b24 (   0x130) _CGSShapeSurfaceInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66c54 (    0x14) SLSEventRecordTimeFromRealTimeStamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66c68 (    0x18) SLSEventRecordGetContextID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66c80 (   0x118) parse_uuid_string [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66d98 (    0x10) __array_call_as_space_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b66da8 (   0x524) hw_capture_window_list_common [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b672cc (   0x17c) _CGSSetWindowIsBuffered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67448 (   0x164) _CGSOrderWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b675ac (    0x84) CGS_CHECK_INIT [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67630 (   0x114) CGSConnectionInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67744 (    0x4c) (anonymous namespace)::ProcessNotifier::process_notify_port() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67790 (   0x1a0) CGSDisplayInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67930 (   0x1d0) _CGSGetEventShmem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67b00 (    0xec) CGSWindowInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67bec (    0x5c) CGSInitProcessNotifyInterests [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67c48 (   0x1dc) CGSConnectionRegistryAddConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67e24 (    0x94) CGSBacktraceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b67eb8 (   0x580) CGSConnectionNotifierAddCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68438 (    0x60) CGSPropertyListCreateWithSerializedBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68498 (    0x5c) CGSGetMainConnectionMachPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b684f4 (   0x114) CGSWindowSetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68608 (    0x40) CGSWindowGetRights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68648 (   0x204) CGSUpdateManagerCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6884c (   0x18c) CGSUpdateManager::enable_update(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b689d8 (   0x174) CGSLookupServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68b4c (     0x8) CGSDisplayState::isInMirrorSet() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68b54 (    0x74) SLSClearEventOfLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68bc8 (    0x3c) SLSEventRecordSetContextID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68c04 (   0x168) _CGSBindSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68d6c (    0xb4) _CGSSetBackgroundEventMaskAndShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68e20 (   0x16c) array_call_as_integer_list [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68f8c (    0x10) __array_call_as_window_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b68f9c (    0xf4) array_create_with_integer_values [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69090 (   0x2b8) _CGSRegisterCursorImages [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69348 (    0x80) ___WindowRightsGetGrantOfferedCallbackRecord_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b693c8 (     0x8) blockValueRetain [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b693d0 (    0xc8) SLSPeekNextEventRecordInternal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69498 (   0x300) _WindowRightsGrantOfferedNotificationHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69798 (   0x1cc) _CGSGetWindowTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69964 (    0x68) CGSWindowCopyWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b699cc (   0x1d8) _CGSGetWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69ba4 (    0xa4) _CGSSetWindowBackgroundBlurRadius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69c48 (     0x8) blockValueRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69c50 (   0x270) _WindowRightsGrantCompletedNotificationHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69ec0 (    0x80) ___WindowRightsGetGrantCompletedCallbackRecord_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69f40 (    0x68) __CGSGetPerUserPerMachineKeys_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b69fa8 (   0x184) CGSPropertyListCreateSerializedBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a12c (    0x68) AbortIfRunningInServer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a194 (   0x108) get_hid_service_connection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a29c (   0x114) CGSEventServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a3b0 (    0x84) get_server_port_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a434 (   0x1c8) _CGSPlaceTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a5fc (   0x170) _CGSEnableEventTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a76c (    0x9c) set_spaces_notification_block [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a808 (    0x60) __set_spaces_notification_block_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a868 (    0x28) CGSDisplayState::isPotentiallyActive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6a890 (   0x294) CGSCoalesceEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ab24 (   0x194) __CGPixelAccessAccessWindowData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6acb8 (   0x3b4) __CGPixelAccessDataInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b06c (     0x8) pixel_access_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b074 (    0x7c) __CGPixelAccessDataRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b0f0 (    0x7c) CGSBindPortAndData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b16c (    0x5c) CGSDataForPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b1c8 (    0x58) CGSUnbindPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b220 (     0x8) __CGPixelAccessDataGetDataPointer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b228 (    0x6c) app_permitted_to_connect_or_launch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b294 (    0x70) rectInset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b304 (   0x24c) _CGSWindowListCreateImageFromArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b550 (   0x198) create_image_for_capture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b6e8 (   0x1a4) CGSCaptureImageProviderBytePointer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b88c (    0x70) CGSCaptureImageProviderReleaseInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b8fc (    0xd4) CPSNoticeConnectionDeath [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6b9d0 (    0xf0) CGSUpdateManagerRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bac0 (    0x6c) CGSDatagramReadStream::~CGSDatagramReadStream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bb2c (    0x88) CGSConnectionNotifierRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bbb4 (   0x180) CGSEventQueueRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bd34 (    0x48) CGSEventStateRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bd7c (    0xa0) _CGSSetMenuBarSystemOverrideAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6be1c (   0x1a0) _CGSGetWindowRightHolderPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6bfbc (    0x78) _window_spaces_notification_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c034 (    0xa8) CGSFillDRAM64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c0dc (   0x130) list_sort_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c20c (   0x164) _CGSScrollWindowRegionInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c370 (   0x1b0) CGSCopyBackingRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c520 (    0x60) CGSEventReclaimObjects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c580 (   0x22c) displayAcceleratorChangedProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c7ac (    0x10) display_mode_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c7bc (    0x94) addPendingNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6c850 (   0x348) displayWillConfigNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cb98 (    0xac) CGSReconfigNotifierCalloutListInit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cc44 (   0x184) displayConfigFinalizedProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cdc8 (     0x8) -[SLVirtualDisplayConfiguration setUti:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cdd0 (     0x8) -[SLVirtualDisplayConfiguration uti] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cdd8 (     0x8) -[SLVirtualDisplayConfiguration setOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cde0 (     0x8) -[SLVirtualDisplayConfiguration options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cde8 (     0x8) -[SLVirtualDisplayConfiguration setType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cdf0 (     0x8) -[SLVirtualDisplayConfiguration type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cdf8 (    0x10) -[SLVirtualDisplayConfiguration chromaticities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce08 (     0x8) -[SLVirtualDisplayConfiguration maximumSizeInPixels] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce10 (     0x8) -[SLVirtualDisplayConfiguration sizeInMillimeters] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce18 (     0x8) -[SLVirtualDisplayConfiguration serialNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce20 (     0x8) -[SLVirtualDisplayConfiguration productID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce28 (     0x8) -[SLVirtualDisplayConfiguration vendorID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce30 (     0x8) -[SLVirtualDisplayConfiguration name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ce38 (    0x78) -[SLVirtualDisplayConfiguration dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ceb0 (     0x4) -[SLVirtualDisplayConfiguration init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ceb4 (    0x28) -[SLVirtualDisplayConfiguration description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6cedc (   0x33c) -[SLVirtualDisplayConfiguration dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6d218 (   0x2d4) -[SLVirtualDisplayConfiguration initWithName:vendorID:productID:serialNumber:sizeInMillimeters:maximumSizeInPixels:chromaticities:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6d4ec (   0x108) SLVirtualDisplayError(CGError, NSString*, NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6d5f4 (    0x6c) supports_size_in_pixels(SLVirtualDisplaySize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6d660 (   0x2d0) +[SLVirtualDisplayConfiguration configurationWithBackendOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6d930 (   0x278) +[SLVirtualDisplayConfiguration configurationWithDisplayInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6dba8 (   0x36c) +[SLVirtualDisplayConfiguration configurationWithDictionaryRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df14 (     0x8) -[SLVirtualDisplayMode setOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df1c (     0x8) -[SLVirtualDisplayMode options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df24 (     0x8) -[SLVirtualDisplayMode setEotf:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df2c (     0x8) -[SLVirtualDisplayMode eotf] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df34 (     0x8) -[SLVirtualDisplayMode setRefreshDeadline:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df3c (     0x8) -[SLVirtualDisplayMode refreshDeadline] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df44 (     0x8) -[SLVirtualDisplayMode refreshRate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df4c (     0x8) -[SLVirtualDisplayMode sizeInPoints] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df54 (     0x8) -[SLVirtualDisplayMode sizeInPixels] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6df5c (    0x64) -[SLVirtualDisplayMode dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6dfc0 (     0x4) -[SLVirtualDisplayMode init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6dfc4 (    0x28) -[SLVirtualDisplayMode description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6dfec (   0x13c) -[SLVirtualDisplayMode dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e128 (    0xe4) -[SLVirtualDisplayMode isEqualToMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e20c (   0x190) -[SLVirtualDisplayMode initWithSizeInPixels:sizeInPoints:refreshRate:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e39c (    0xd0) +[SLVirtualDisplayMode modeWithBackendMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e46c (   0x198) +[SLVirtualDisplayMode modeWithDictionaryRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e604 (     0x8) -[SLVirtualDisplaySettings rotations] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e60c (     0x8) -[SLVirtualDisplaySettings optionalModes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e614 (     0x8) -[SLVirtualDisplaySettings preferredMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e61c (     0x8) -[SLVirtualDisplaySettings nativeMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e624 (    0x90) -[SLVirtualDisplaySettings dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e6b4 (     0x4) -[SLVirtualDisplaySettings init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e6b8 (    0x3c) -[SLVirtualDisplaySettings description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e6f4 (   0x218) -[SLVirtualDisplaySettings dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6e90c (   0x1a4) -[SLVirtualDisplaySettings initWithNativeMode:preferredMode:optionalModes:rotations:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6eab0 (   0x1bc) +[SLVirtualDisplaySettings settingsWithBackendSettings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ec6c (   0x1ac) +[SLVirtualDisplaySettings settingsWithDictionaryRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee18 (     0x8) -[SLVirtualDisplayCapabilities minimumRefreshRate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee20 (     0x8) -[SLVirtualDisplayCapabilities minimumPixelsPerPoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee28 (     0x8) -[SLVirtualDisplayCapabilities maximumPixelsPerPoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee30 (     0x8) -[SLVirtualDisplayCapabilities maximumSizeInPixels] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee38 (    0x64) -[SLVirtualDisplayCapabilities dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ee9c (    0x28) -[SLVirtualDisplayCapabilities description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6eec4 (   0x110) -[SLVirtualDisplayCapabilities dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6efd4 (    0xb4) -[SLVirtualDisplayCapabilities init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f088 (     0x8) -[SLVirtualDisplay .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f090 (     0xc) -[SLVirtualDisplay setDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f09c (     0x8) -[SLVirtualDisplay delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f0a4 (     0x8) -[SLVirtualDisplay displayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f0ac (    0x94) -[SLVirtualDisplay dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f140 (     0x4) -[SLVirtualDisplay init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f144 (    0x30) -[SLVirtualDisplay destroy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f174 (   0x5f0) -[SLVirtualDisplay applySettings:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f764 (   0x194) __40-[SLVirtualDisplay applySettings:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f8f8 (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f904 (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6f914 (   0x370) -[SLVirtualDisplay initWithConfiguration:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6fc84 (   0x1c8) __48-[SLVirtualDisplay initWithConfiguration:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6fe4c (    0xf4) __48-[SLVirtualDisplay initWithConfiguration:error:]_block_invoke.281 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ff40 (    0x30) +[SLVirtualDisplay capabilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b6ff70 (   0x1fc) WSFeaturesSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7016c (     0x8) -[SLContentFilter setHideMenuBar:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70174 (     0x8) -[SLContentFilter hideMenuBar] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7017c (     0x8) -[SLContentFilter setExcludedPIDS:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70184 (     0x8) -[SLContentFilter excludedPIDS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7018c (     0x8) -[SLContentFilter excludedApplications] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70194 (     0x8) -[SLContentFilter excludedWindows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7019c (     0x8) -[SLContentFilter setIncludedPIDS:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701a4 (     0x8) -[SLContentFilter includedPIDS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701ac (     0x8) -[SLContentFilter includedApplications] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701b4 (     0x8) -[SLContentFilter includedWindows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701bc (     0x8) -[SLContentFilter shareAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701c4 (     0x8) -[SLContentFilter applicationID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701cc (     0x8) -[SLContentFilter displayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701d4 (     0x8) -[SLContentFilter windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701dc (     0x8) -[SLContentFilter filterType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b701e4 (   0x1f4) -[SLContentFilter initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b703d8 (   0x184) -[SLContentFilter encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7055c (   0x108) -[SLContentFilter dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70664 (   0x2b8) -[SLContentFilter initWithDisplay:shareAll:includedWindows:includedApplications:includedPIDS:excludedWindows:excludedApplications:excludedPIDS:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7091c (    0x9c) -[SLContentFilter initWithDisplay:shareAll:includedWindows:includedApplications:excludedWindows:excludedApplications:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b709b8 (   0x220) -[SLContentFilter initWithDisplay:application:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70bd8 (   0x220) -[SLContentFilter initWithDisplay:window:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70df8 (   0x174) -[SLContentFilter initWithDisplay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b70f6c (   0x16c) -[SLContentFilter initWithDesktopIndependentWindow:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710d8 (     0x4) -[SLContentFilter excludeMenuBar:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710dc (     0x8) +[SLContentFilter supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710e4 (     0x8) -[SLContentStreamUpdate setMetaData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710ec (     0x8) -[SLContentStreamUpdate metaData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710f4 (     0x8) -[SLContentStreamUpdate setUpdateRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b710fc (     0x8) -[SLContentStreamUpdate updateRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71104 (     0x8) -[SLContentStreamUpdate frameSurface] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7110c (     0x8) -[SLContentStreamUpdate displayTime] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71114 (     0x8) -[SLContentStreamUpdate status] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7111c (    0x78) -[SLContentStreamUpdate dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71194 (    0xf0) -[SLContentStreamUpdate boundingRect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71284 (    0xf0) -[SLContentStreamUpdate screenRect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71374 (    0xf0) -[SLContentStreamUpdate contentRect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71464 (    0x58) -[SLContentStreamUpdate contentScale] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b714bc (    0x58) -[SLContentStreamUpdate displayResolution] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71514 (    0x34) -[SLContentStreamUpdate dropCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71548 (    0x40) -[SLContentStreamUpdate dirtyRects] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71588 (   0x148) -[SLContentStreamUpdate copyRects:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b716d0 (    0xbc) -[SLContentStreamUpdate initWithStatus:displayTime:frameSurface:updateRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7178c (     0x8) -[SLContentStream bridgingHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71794 (     0x8) -[SLContentStream zeroWeakSelf] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7179c (     0x8) -[SLContentStream setRunning:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717a4 (     0x8) -[SLContentStream running] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717ac (     0x8) -[SLContentStream setStream:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717b4 (     0x8) -[SLContentStream stream] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717bc (     0x8) -[SLContentStream setHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717c4 (     0x8) -[SLContentStream handler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717cc (     0x8) -[SLContentStream setQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717d4 (     0x8) -[SLContentStream queue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717dc (     0x8) -[SLContentStream setProperties:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717e4 (     0x8) -[SLContentStream properties] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717ec (     0x8) -[SLContentStream setFilter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717f4 (     0x8) -[SLContentStream filter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b717fc (     0x8) -[SLContentStream setSession:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71804 (     0x8) -[SLContentStream session] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7180c (   0x16c) -[SLContentStream dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71978 (   0x138) -[SLContentStream stop:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71ab0 (   0x108) kSLContentStreamError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71bb8 (   0x138) -[SLContentStream start:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b71cf0 (   0x454) -[SLContentStream updateProperties:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72144 (   0x518) -[SLContentStream updateFilter:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7265c (     0x8) -[SLContentStream initWithFilter:properties:queue:handler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72664 (   0x55c) -[SLContentStream initWithFilter:properties:queue:handler:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72bc0 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72bd0 (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72bdc (    0x48) __65-[SLContentStream initWithFilter:properties:queue:handler:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72c24 (   0x124) __65-[SLContentStream initWithFilter:properties:queue:handler:error:]_block_invoke.348 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72d48 (    0x44) __destroy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72d8c (    0x50) __copy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b72ddc (   0x6e4) -[SLContentStream createStreamWithFilter:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b734c0 (   0x874) -[SLContentStream createStreamWithSession:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b73d34 (    0x2c) __49-[SLContentStream createStreamWithSession:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b73d60 (    0x44) __destroy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b73da4 (    0x50) __copy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b73df4 (   0x5d4) -[SLContentStream populateDisplayStreamProperties:with:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b743c8 (   0x104) +[SLContentStream createScreenshot:properties:queue:handler:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744cc (     0x8) -[SLWindowFilter setHide_menu_bar:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744d4 (     0xc) -[SLWindowFilter hide_menu_bar] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744e0 (     0x8) -[SLWindowFilter setFilterPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744e8 (     0xc) -[SLWindowFilter filterPolicy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744f4 (     0x8) -[SLWindowFilter setExcludedPIDS:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b744fc (     0xc) -[SLWindowFilter excludedPIDS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74508 (     0x8) -[SLWindowFilter setIncludedPIDS:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74510 (     0xc) -[SLWindowFilter includedPIDS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7451c (     0x8) -[SLWindowFilter setExcludedApplications:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74524 (     0xc) -[SLWindowFilter excludedApplications] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74530 (     0x8) -[SLWindowFilter setIncludedApplications:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74538 (     0xc) -[SLWindowFilter includedApplications] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74544 (     0x8) -[SLWindowFilter setExcludedWindows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7454c (     0xc) -[SLWindowFilter excludedWindows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74558 (     0x8) -[SLWindowFilter setIncludedWindows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74560 (     0xc) -[SLWindowFilter includedWindows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7456c (    0xa8) -[SLWindowFilter dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74614 (   0x140) -[SLWindowFilter isEqualToWindowFilter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74754 (    0xb0) -[SLWindowFilter hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74804 (    0x7c) -[SLWindowFilter isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74880 (   0x154) -[SLWindowFilter dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b749d4 (   0x2c8) -[SLWindowFilter initFromDictionaryRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74c9c (   0x130) __51-[SLWindowFilter initFromDictionaryRepresentation:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74dcc (    0xe0) -[SLWindowFilter init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74eac (     0x8) -[SLSharingSessionContent setMetaData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74eb4 (     0xc) -[SLSharingSessionContent metaData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74ec0 (     0x8) -[SLSharingSessionContent setDisplayID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74ec8 (     0xc) -[SLSharingSessionContent displayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74ed4 (     0x8) -[SLSharingSessionContent setFilter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74edc (     0xc) -[SLSharingSessionContent filter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74ee8 (    0x88) -[SLSharingSessionContent dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74f70 (    0x78) -[SLSharingSessionContent initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b74fe8 (    0x5c) -[SLSharingSessionContent initWithDisplayID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75044 (     0xc) -[SLSharingSessionContent init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75050 (    0xa0) -[SLSharingSessionContent initInternal:display:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b750f0 (     0x8) -[SLSharingSession setLifetimePort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b750f8 (     0x8) -[SLSharingSession lifetimePort] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75100 (     0x8) -[SLSharingSession setUuid_internal:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75108 (     0x8) -[SLSharingSession uuid_internal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75110 (     0x8) -[SLSharingSession title] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75118 (     0x8) -[SLSharingSession setType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75120 (     0x8) -[SLSharingSession type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75128 (    0xdc) -[SLSharingSession dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75204 (     0x8) -[SLSharingSessionManager setClientContexts:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7520c (     0x8) -[SLSharingSessionManager clientContexts] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75214 (     0x8) -[SLSharingSessionManager setDelegateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7521c (     0x8) -[SLSharingSessionManager delegateBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75224 (     0x8) -[SLSharingSessionManager systemDelegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7522c (     0x8) -[SLSharingSessionManager setDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75234 (     0x8) -[SLSharingSessionManager delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7523c (    0x38) -[SLSharingSessionManager setSystemDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75274 (    0x84) has_entitlement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b752f8 (    0xd8) __has_entitlement_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b753d0 (   0x398) -[SLSharingSessionManager dispatchToClientDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75768 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b75780 (   0x1b8) -[SLSharingSessionManager contextForPayload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75938 (    0xd8) -[SLSharingSessionManager unregisterNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75a10 (   0x124) -[SLSharingSessionManager registerNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75b34 (   0x108) __47-[SLSharingSessionManager registerNotification]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75c3c (    0x88) -[SLSharingSessionManager notificationDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75cc4 (    0xb0) -[SLSharingSessionManager endSharingSession:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75d74 (    0x78) -[SLSharingSessionManager beginSharingSessionWithTitle:suppressWindowSharingIndicator:suppressMenuBarSharingIndicatorNotifications:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75dec (    0x64) -[SLSharingSessionManager beginNoPillSharingSessionWithTitle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75e50 (    0x64) -[SLSharingSessionManager beginSharingSessionWithTitle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75eb4 (    0x84) -[SLSharingSessionManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75f38 (    0x8c) -[SLSharingSessionManager initPrivate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75fc4 (     0x8) -[SLSharingSessionManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b75fcc (    0x44) +[SLSharingSessionManager shared] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76010 (    0x3c) __33+[SLSharingSessionManager shared]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7604c (    0x5c) -[SLSharingSession getUUIDBytes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b760a8 (    0x48) -[SLSharingSession isEqualToSharingSession:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b760f0 (    0x28) -[SLSharingSession hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76118 (    0x7c) -[SLSharingSession isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76194 (    0xac) -[SLSharingSession showPicker] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76240 (   0x2e0) -[SLSharingSession initWithTitle:suppressWindowSharingIndicator:suppressMenuBarSharingIndicatorNotifications:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76520 (   0x218) __110-[SLSharingSession initWithTitle:suppressWindowSharingIndicator:suppressMenuBarSharingIndicatorNotifications:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76738 (     0x8) -[SLSharingSession init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76740 (   0x124) -[SLSharingSession(System) initWithUUID:title:type:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76864 (   0x388) -[SLSharingSession(System) initFromUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76bec (   0x2bc) -[SLSharingSession(System) setPresentationDisplay:enable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b76ea8 (   0x184) -[SLSharingSession(System) setContent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7702c (   0x198) __39-[SLSharingSession(System) setContent:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b771c4 (   0x3a0) -[SLSharingSession(System) content] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77564 (    0x64) -[SLSharingSession(System) uuid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b775c8 (    0xb0) -[SLSharingSessionManager(System) pickerCanceledSession:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77678 (   0x2e0) -[SLSharingSessionManager(System) copyAllSessions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77958 (    0x94) SLSDisplayStreamPropertiesGetSelectiveSharingUUID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b779ec (   0x208) WSWindowFilterCreateCFDictionaryRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77bf4 (    0xcc) WSWindowFilterAppListCreateCFArrayRepresentation(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77cc0 (    0xec) WSWindowFilterWindowIDListCreateCFArrayRepresentation(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77dac (    0xec) WSWindowFilterPIDListCreateCFArrayRepresentation(std::__1::vector<int, std::__1::allocator<int>> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77e98 (    0x70) WSWindowFilterIncludesApplication [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b77f08 (   0x164) WSWindowFilterAppListContainsBundleID(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7806c (    0x70) WSWindowFilterExcludesApplication [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b780dc (   0x2d8) WSWindowFilterCreateFromCFDictionaryRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b783b4 (    0x74) WSWindowFilterWindowIDListCreateFromCFArray(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78428 (   0x108) void std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::assign<unsigned int*, 0>(unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78530 (    0x8c) void vector_deduplicate<unsigned int>(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b785bc (   0x28c) WSWindowFilterAppListCreateFromCFArray(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78848 (   0x188) void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, 0>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b789d0 (   0x194) void vector_deduplicate<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78b64 (    0x54) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78bb8 (    0x74) WSWindowFilterPIDListCreateFromCFArray(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78c2c (   0x108) void std::__1::vector<int, std::__1::allocator<int>>::assign<int*, 0>(int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78d34 (    0xd8) void vector_deduplicate<int>(std::__1::vector<int, std::__1::allocator<int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78e0c (    0x40) std::__1::vector<int, std::__1::allocator<int>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78e4c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<int>>(std::__1::allocator<int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78e84 (    0x10) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78e94 (    0xb4) bool validate_list_type<&CFNumberGetTypeID>(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b78f48 (   0x11c) WSWindowFilterPIDListCreateFromCFArray(__CFArray const*)::$_1::__invoke(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b79064 (    0x3c) void validate_list_type_callback<&CFNumberGetTypeID>(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b790a0 (    0x58) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b790f8 (   0x900) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b799f8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b79a10 (    0xb4) bool std::__1::__equal_to::operator()[abi:v160006]<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b79ac4 (    0x94) _ZNSt3__1ssB7v160006IcNS_11char_traitsIcEENS_9allocatorIcEEEEDaRKNS_12basic_stringIT_T0_T1_EESC_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b79b58 (   0x12c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b79c84 (    0xec) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, Function...
                0x0000000185b79d70 (   0x128) unsigned int std::__1::__sort5<std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, NameNLi...
                0x0000000185b79e98 (   0x240) bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a0d8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b7a0f0 (    0x4c) std::__1::basic_string_view<char, std::__1::char_traits<char>>::compare(std::__1::basic_string_view<char, std::__1::char_traits<char>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a13c (    0x60) std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, 0>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a19c (    0x94) void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__construct_at_end<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, 0>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a230 (    0x3c) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a26c (    0x50) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a2bc (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a304 (    0x8c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a390 (    0x9c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a42c (    0x38) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a464 (    0x58) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a4bc (    0x3c) void validate_list_type_callback<&CFStringGetTypeID>(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a4f8 (    0x78) std::__1::pair<std::__1::__wrap_iter<unsigned int*>, std::__1::__wrap_iter<unsigned int*>> std::__1::__unique[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__wrap_iter<unsigned int*>, std::__1::__wrap_iter<unsigned int*>, std::__1::__equal_to&>(std::__1::__wrap_iter<unsigned int*>, std::__1::__wrap_iter<unsigned int*>, std::__1::__equal_to&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a570 (    0x40) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a5b0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned int>>(std::__1::allocator<unsigned int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a5e8 (   0x11c) WSWindowFilterWindowIDListCreateFromCFArray(__CFArray const*)::$_0::__invoke(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a704 (   0x244) std::__1::__wrap_iter<CGRect*> std::__1::vector<CGRect, std::__1::allocator<CGRect>>::emplace<CGRect&>(std::__1::__wrap_iter<CGRect const*>, CGRect&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a948 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGRect>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGRect>>(std::__1::allocator<CGRect>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7a980 (   0x108) void std::__1::__split_buffer<CGRect, std::__1::allocator<CGRect>&>::emplace_back<CGRect&>(CGRect&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7aa88 (    0x74) std::__1::__shared_weak_count::__release_shared[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7aafc (   0x2c0) WSSelectiveSharingPostStateChangeNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7adbc (   0x254) WSSelectiveSharingDumpState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7b010 (   0x638) DumpSelectiveSharingContext(WSSelectiveSharingContext*, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7b648 (    0x4c) WS::CFRef<__CFString const*>::operator=(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7b694 (    0x94) WSSelectiveSharingMetaDataChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7b728 (   0x20c) WSSelectiveSharingCreateMetaDataDict [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7b934 (   0x57c) WSSelectiveSharingSetMetaDataForDisplayStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7beb0 (   0xd34) WSSelectiveSharingUpdateDisplayStreamSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7cbe4 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<unsigned int, void*>*> std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::find<unsigned int>(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7cc98 (   0x29c) populate_selective_sharing_surface_with_windows(WS::Surface*, std::__1::shared_ptr<WS::Displays::Display>, CGXWindowArray, CGSRegionObject*, float vector[4], bool, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7cf34 (    0xd8) WSSelectiveSharingReleaseSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d00c (    0x38) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d044 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d0a0 (    0x78) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<WS::Surface>>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d118 (   0x134) std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<int, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d24c (   0x188) WSSelectiveSharingSetMainWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7d3d4 (   0x654) WSSelectiveSharingCheckSharedWindowsChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7da28 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGXWindow*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGXWindow*>>(std::__1::allocator<CGXWindow*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7da60 (    0xbc) connection_death_handler(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7db1c (   0x128) std::__1::__hash_table<std::__1::__hash_value_type<int, ConnectionCount>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ConnectionCount>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ConnectionCount>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, ConnectionCount>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, ConnectionCount>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7dc44 (   0x100) remove_pid_from_context_filter(int, WSSelectiveSharingContext&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7dd44 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<int, void*>*>, bool> std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>>::__emplace_unique_key_args<int, int const&>(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7df58 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, DisplayScheduleInfo>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, DisplayScheduleInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, DisplayScheduleInfo>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, DisplayScheduleInfo>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, DisplayScheduleInfo>>>::find<int>(int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e00c (    0x38) unsigned long std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>>::__erase_unique<int>(int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e044 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, int>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, int>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e090 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, ConnectionCount>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, ConnectionCount>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ConnectionCount>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ConnectionCount>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, ConnectionCount>>>::find<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e144 (    0x70) std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<unsigned int, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e1b4 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, int>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, int>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e2a4 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, int>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, int>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e400 (    0x68) WS::Displays::WSHIDDisplayEventListener::get_instance() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e468 (   0x2b0) invocation function for block in WS::Displays::WSHIDDisplayEventListener::start_iohid_event_system_client() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e718 (    0xf4) WS::Displays::WSHIDDisplayEventListener::create_rotation_matching_dictionary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e80c (    0x9c) invocation function for block in WS::Displays::WSHIDDisplayEventListener::start_iohid_event_system_client() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e8a8 (    0x2c) invocation function for block in WS::Displays::WSHIDDisplayEventListener::start_iohid_event_system_client() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7e8d4 (   0x404) WS::Displays::WSHIDDisplayEventListener::rotation_callback_handler(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7ecd8 (   0x218) WS::Displays::WSHIDDisplayEventListener::new_connection_callback_handler(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7eef0 (    0xec) invocation function for block in WS::Displays::WSHIDDisplayEventListener::new_connection_callback_handler(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7efdc (   0x15c) invocation function for block in WS::Displays::WSHIDDisplayEventListener::rotation_callback_handler(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f138 (   0x470) WS::Displays::WSHIDDisplayEventListener::hid_event_callback(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f5a8 (    0xf0) invocation function for block in WS::Displays::WSHIDDisplayEventListener::luminance_callback_handler(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f698 (    0x98) std::__1::__function::__value_func<void ()>::__value_func[abi:v160006](std::__1::__function::__value_func<void ()> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f730 (    0x84) std::__1::__function::__value_func<void ()>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f7b4 (    0x64) WS::ScopeCleaner::~ScopeCleaner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f818 (    0x10) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f828 (     0xc) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f834 (     0x4) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f838 (     0x4) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f83c (    0x24) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f860 (    0x48) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f8a8 (     0x4) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f8ac (     0x4) std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7f8b0 (   0x2b0) invocation function for block in WS::Displays::WSHIDDisplayEventListener::get_luminance_for_container(__CFUUID const*, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7fb60 (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7fb6c (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7fb7c (    0x98) WS::Displays::policy_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7fc14 (    0x54) WS::Displays::core_brightness_policy_engine::is_shielding_policy_inactive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7fc68 (   0x248) WS::Displays::core_brightness_policy_engine::register_deferred_notifier(CGError, unsigned long long, SLSDisplayControl, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7feb0 (    0x54) std::__1::unique_ptr<WS::Displays::core_brightness_notifier_entry, std::__1::default_delete<WS::Displays::core_brightness_notifier_entry>>::reset[abi:v160006](WS::Displays::core_brightness_notifier_entry*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b7ff04 (   0x214) WS::Displays::core_brightness_policy_engine::reset_config_set() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80118 (   0x494) WS::Displays::core_brightness_policy_engine::apply_policy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b805ac (   0x11c) WS::Displays::core_brightness_policy_engine::reset_policy_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b806c8 (    0xb8) WS::Displays::policy_timeout_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80780 (   0x100) WS::Displays::core_brightness_policy_engine::lower_display_shield(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80880 (    0x4c) WS::Displays::core_brightness_policy_engine::single_transition_completed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b808cc (    0x48) WS::Displays::core_brightness_policy_engine::all_transitions_completed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80914 (    0xc8) invocation function for block in WS::Displays::core_brightness_policy_engine::lower_display_shield(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b809dc (   0x100) WS::Displays::core_brightness_policy_engine::disable_display(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80adc (    0xc0) invocation function for block in WS::Displays::core_brightness_policy_engine::disable_display(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80b9c (   0x188) WS::Displays::core_brightness_policy_engine::signal_disconnected(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80d24 (   0x15c) WSSetConsistentEventDelivery [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80e80 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185b80e94 (   0x11c) event_interpolator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b80fb0 (    0xbc) std::__1::__unique_if<(anonymous namespace)::ServerInterpolationHarness>::__unique_single std::__1::make_unique[abi:v160006]<(anonymous namespace)::ServerInterpolationHarness>() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8106c (    0x48) std::__1::unique_ptr<(anonymous namespace)::ServerInterpolationHarness, std::__1::default_delete<(anonymous namespace)::ServerInterpolationHarness>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b810b4 (    0x30) std::__1::shared_ptr<EventInterpolator>::~shared_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b810e4 (     0x4) invocation function for block in (anonymous namespace)::ServerInterpolationHarness::ServerInterpolationHarness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b810e8 (   0x230) (anonymous namespace)::ServerInterpolationHarness::logEDDispatchedCursorStepInfo(double, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81318 (    0xb4) (anonymous namespace)::ServerInterpolationHarness::eventDeliveryLogForEventType(CEDEventType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b813cc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGPoint>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGPoint>>(std::__1::allocator<CGPoint>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81404 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<double>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<double>>(std::__1::allocator<double>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8143c (   0x158) EventDeliveryLog::EventDeliveryLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81594 (   0x230) (anonymous namespace)::ServerInterpolationHarness::logEDReceivedCursorStepInfo(double, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b817c4 (   0x23c) (anonymous namespace)::ServerInterpolationHarness::logEDDispatchAtTimeInfo(double, bool, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81a00 (    0x90) EventHelper::get_pointer_child_event(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81a90 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<EventDeliveryLog::dispatch_at_time_info>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<EventDeliveryLog::dispatch_at_time_info>>(std::__1::allocator<EventDeliveryLog::dispatch_at_time_info>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81adc (   0x1b4) (anonymous namespace)::ServerInterpolationHarness::logEDDispatchAtTimeInfo(unsigned long long, double, bool, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81c90 (   0x1d4) (anonymous namespace)::ServerInterpolationHarness::logEDEventInfo(unsigned long long, double, double, double, unsigned int, bool, unsigned int, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81e64 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<EventDeliveryLog::event_info>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<EventDeliveryLog::event_info>>(std::__1::allocator<EventDeliveryLog::event_info>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81eac (   0x124) (anonymous namespace)::ServerInterpolationHarness::logEDVBLInfo(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81fd0 (    0x2c) (anonymous namespace)::ServerInterpolationHarness::logEDStop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b81ffc (  0x3838) EventDeliveryLog::generate_event_delivery_report() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b85834 (    0x78) std::__1::vector<CGPoint, std::__1::allocator<CGPoint>>::vector(std::__1::vector<CGPoint, std::__1::allocator<CGPoint>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b858ac (   0x134) EventHelper::HTMLGenerator::createData(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::vector<CGPoint, std::__1::allocator<CGPoint>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b859e0 (    0xec) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> std::__1::operator+[abi:v160006]<char, std::__1::char_traits<char>, std::__1::allocator<char>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b85acc (   0x1fc) EventHelper::HTMLGenerator::createDatasets(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b85cc8 (   0xb10) EventHelper::HTMLGenerator::createChartOptions(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b867d8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSize>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSize>>(std::__1::allocator<CGSize>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86810 (    0x70) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::vector(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86880 (   0x164) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_ostringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b869e4 (   0x178) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::__put_character_sequence[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86b5c (   0x1a4) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base&, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86d00 (    0x98) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](unsigned long, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86d98 (    0x74) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](std::__1::__uninitialized_size_tag, unsigned long, std::__1::allocator<char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86e0c (    0x9c) (anonymous namespace)::ServerInterpolationHarness::logEDStart() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86ea8 (    0x54) (anonymous namespace)::ServerInterpolationHarness::logForceStop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b86efc (   0x57c) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b87478 (   0x71c) ConsistentEventLog::stop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b87b94 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185b87bb0 (   0x57c) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8812c (     0x4) (anonymous namespace)::ServerInterpolationHarness::logEventSet(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88130 (    0x2c) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedStopEvent(CEDEventType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8815c (    0xb8) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedContinueEvent(CEDEventType, double, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88214 (   0x12c) ConsistentEventLog::add_log(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, double const&, double const&, CGPoint const&, CGPoint const&, CGPoint const&, CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88340 (   0x278) ConsistentEventLog::event_info& std::__1::vector<ConsistentEventLog::event_info, std::__1::allocator<ConsistentEventLog::event_info>>::emplace_back<ConsistentEventLog::event_info&>(ConsistentEventLog::event_info&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b885b8 (    0xc4) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedSTREvent(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8867c (   0x59c) EventHelper::log_str_event(ConsistentEventLog&, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88c18 (    0x58) std::__1::vector<ConsistentEventLog::event_info, std::__1::allocator<ConsistentEventLog::event_info>>::resize(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88c70 (    0xa4) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedPointer2Event(unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88d14 (   0x168) EventHelper::log_pointer2_event(ConsistentEventLog&, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88e7c (    0xac) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedPointerEvent(PointerMoveState, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b88f28 (   0x1c4) EventHelper::log_pointer_event(ConsistentEventLog&, PointerMoveState, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b890ec (   0x150) (anonymous namespace)::ServerInterpolationHarness::logInterpolatedHIDPhaseEvent(CEDEventType, unsigned short, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8923c (   0x264) EventHelper::log_scroll_event(ConsistentEventLog&, unsigned short, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b894a0 (   0x1bc) EventHelper::log_dockswipe_event(ConsistentEventLog&, unsigned short, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8965c (   0x264) EventHelper::log_digitizerscroll_event(ConsistentEventLog&, unsigned short, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b898c0 (    0xc4) (anonymous namespace)::ServerInterpolationHarness::logRawSTREvent(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89984 (    0xa4) (anonymous namespace)::ServerInterpolationHarness::logRawPointer2Event(unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89a28 (    0xac) (anonymous namespace)::ServerInterpolationHarness::logRawPointerEvent(PointerMoveState, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89ad4 (   0x150) (anonymous namespace)::ServerInterpolationHarness::logRawHIDPhaseEvent(CEDEventType, unsigned short, unsigned long long, double, CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89c24 (     0x4) (anonymous namespace)::ServerInterpolationHarness::logEventTiming(__IOHIDEvent*, double) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89c28 (   0x11c) (anonymous namespace)::ServerInterpolationHarness::logAddedEvent(__IOHIDService*, __IOHIDEvent*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89d44 (    0x6c) hid_event_record_array() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89db0 (   0x158) std::__1::vector<HIDEventRecordItem, std::__1::allocator<HIDEventRecordItem>>::push_back[abi:v160006](HIDEventRecordItem const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89f08 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<HIDEventRecordItem>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<HIDEventRecordItem>>(std::__1::allocator<HIDEventRecordItem>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89f50 (    0x64) std::__1::vector<HIDEventRecordItem, std::__1::allocator<HIDEventRecordItem>>::__swap_out_circular_buffer(std::__1::__split_buffer<HIDEventRecordItem, std::__1::allocator<HIDEventRecordItem>&>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b89fb4 (    0x60) std::__1::__split_buffer<HIDEventRecordItem, std::__1::allocator<HIDEventRecordItem>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a014 (     0x4) std::__1::__shared_ptr_pointer<unsigned char*, std::__1::default_delete<unsigned char []>, std::__1::allocator<unsigned char>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a018 (    0x10) std::__1::__shared_ptr_pointer<unsigned char*, std::__1::default_delete<unsigned char []>, std::__1::allocator<unsigned char>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a028 (    0x28) std::__1::__shared_ptr_pointer<unsigned char*, std::__1::default_delete<unsigned char []>, std::__1::allocator<unsigned char>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a050 (     0x4) std::__1::__shared_ptr_pointer<unsigned char*, std::__1::default_delete<unsigned char []>, std::__1::allocator<unsigned char>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a054 (    0x64) (anonymous namespace)::ServerInterpolationHarness::scheduleNextCallback(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a0b8 (    0x98) (anonymous namespace)::ServerInterpolationHarness::latencyForEvent(__IOHIDEvent*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a150 (    0x88) (anonymous namespace)::ServerInterpolationHarness::cursorDisplayVBLDelta(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a1d8 (    0x88) (anonymous namespace)::ServerInterpolationHarness::cursorDisplayNextVBL() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a260 (     0x4) (anonymous namespace)::ServerInterpolationHarness::currentRealTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a264 (   0x110) (anonymous namespace)::ServerInterpolationHarness::processEvent(__IOHIDEvent*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a374 (    0x68) EventTranslator::instance() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8a3dc (  0x3194) EventTranslator::hidevent_to_nxevent_translation(__IOHIDEvent*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d570 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185b8d584 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185b8d5a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185b8d5b8 (   0x250) WSEventQueueItemAddToQueue(std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d808 (    0x70) std::__1::unique_ptr<hid_translation_state_t, std::__1::default_delete<hid_translation_state_t>>::reset[abi:v160006](hid_translation_state_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d878 (    0x88) std::__1::vector<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>, std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d900 (    0x40) std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>::reset[abi:v160006](WSEventQueueItem*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d940 (    0x84) event_lock_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8d9c4 (    0x70) eventQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8da34 (    0xa4) WSEventQueueItemCoalesce(WSEventQueueItem*, WSEventQueueItem*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8dad8 (   0x4d4) std::__1::deque<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>, std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>>>::push_back(std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8dfac (    0xf4) CGXHIDEventNotificationPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e0a0 (    0x40) invocation function for block in WSEventQueueItemAddToQueue(std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e0e0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>*>>(std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e118 (    0xc8) WSEventQueueItemAddBlock(WSEventQueueItem*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e1e0 (    0x4c) invocation function for block in WSEventQueueItemAddBlock(WSEventQueueItem*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e22c (    0x44) __destroy_helper_block_8_32b40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e270 (    0x50) __copy_helper_block_8_32b40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e2c0 (    0x84) last_used_keyboard_lock_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e344 (   0x1b4) EventTranslator::updateModifiers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e4f8 (    0x80) _CFSetRefWrap<__CFSet*>::Apply(std::__1::function<void (void const*)>) const::'lambda'(void const*, void*)::__invoke(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e578 (    0xd8) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::operator()(void const*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e650 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e654 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e658 (    0x24) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::__clone(std::__1::__function::__base<void (void const*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e67c (    0x48) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e6c4 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e6c8 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e6cc (    0x84) CFMutableDictionaryRefWrap::Apply(std::__1::function<void (void const*, void const*)>) const::'lambda'(void const*, void const*, void*)::__invoke(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e750 (    0xe0) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::operator()(void const*&&, void const*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e830 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e834 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e838 (    0x24) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::__clone(std::__1::__function::__base<void (void const*, void const*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e85c (    0x48) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e8a4 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e8a8 (     0x4) std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e8ac (    0x5c) CFBooleanRefWrap::~CFBooleanRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e908 (    0x4c) CFBooleanRefWrap::~CFBooleanRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e954 (    0x5c) CFRefWrap<__CFBoolean const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e9b0 (    0x4c) CFRefWrap<__CFBoolean const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8e9fc (    0x5c) CFNumberRefWrap::~CFNumberRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ea58 (    0x4c) CFNumberRefWrap::~CFNumberRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eaa4 (    0x5c) CFRefWrap<__CFNumber const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eb00 (    0x4c) CFRefWrap<__CFNumber const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eb4c (    0x5c) CFArrayRefWrap::~CFArrayRefWrap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eba8 (    0x4c) CFArrayRefWrap::~CFArrayRefWrap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ebf4 (    0x5c) CFRefWrap<__CFArray const*>::~CFRefWrap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ec50 (    0x4c) CFRefWrap<__CFArray const*>::~CFRefWrap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ec9c (   0x150) EventTranslator::EventTranslator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8edec (    0x5c) CFMutableSetRefWrap::~CFMutableSetRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ee48 (    0x5c) CFRefWrap<__CFSet*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eea4 (    0x4c) CFRefWrap<__CFSet*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eef0 (    0x4c) CFMutableSetRefWrap::~CFMutableSetRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ef3c (    0x5c) CFMutableDictionaryRefWrap::~CFMutableDictionaryRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8ef98 (    0x5c) CFRefWrap<__CFDictionary*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8eff4 (    0x4c) CFRefWrap<__CFDictionary*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f040 (    0x4c) CFMutableDictionaryRefWrap::~CFMutableDictionaryRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f08c (    0xc8) (anonymous namespace)::ServerInterpolationHarness::interpolateMouseDragForDevice(__IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f154 (     0x8) EventInterpolationHarness::pointerButtonMode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f15c (     0x8) EventInterpolationHarness::eventDispatchTiemAdjustment() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f164 (     0x8) EventInterpolationHarness::eventDeltaAdjustment() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f16c (     0xc) (anonymous namespace)::ServerInterpolationHarness::eventBufferingTimeFactor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f178 (     0x8) EventInterpolationHarness::eventInterpolationOption() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f180 (     0xc) (anonymous namespace)::ServerInterpolationHarness::eventDeliveryType() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f18c (    0xe4) (anonymous namespace)::ServerInterpolationHarness::setInterpolator(std::__1::shared_ptr<EventInterpolator>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b8f270 (  0x1a40) invocation function for block in (anonymous namespace)::ServerInterpolationHarness::setInterpolator(std::__1::shared_ptr<EventInterpolator>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90cb0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b90cc8 (    0x10) __destroy_helper_block_8_40c42_ZTSNSt3__18weak_ptrI17EventInterpolatorEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90cd8 (    0x1c) __copy_helper_block_8_40c42_ZTSNSt3__18weak_ptrI17EventInterpolatorEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90cf4 (    0x44) (anonymous namespace)::ServerInterpolationHarness::~ServerInterpolationHarness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90d38 (    0x38) (anonymous namespace)::ServerInterpolationHarness::~ServerInterpolationHarness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90d70 (   0x174) SLSSetEventInterpolation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b90ee4 (   0x180) WSSetEventDeliveryOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91064 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185b91074 (    0x40) WSHIDGetLastUsedKeyboardID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b910b4 (    0xfc) SLUpdateScrollMomentumDispatchRateAfterDisplayDidReconfigure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b911b0 (    0x3c) __SLUpdateScrollMomentumDispatchRateAfterDisplayDidReconfigure_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b911ec (   0x140) EventTranslator::updateScrollMomentumDispatchRate(float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9132c (    0x84) pointer_service_lock_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b913b0 (     0x4) invocation function for block in WSEventQueueItem::WSEventQueueItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b913b4 (    0x68) (anonymous namespace)::sHIDCursorInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9141c (    0x98) CursorTrackingInfo::CursorTrackingInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b914b4 (    0xf8) cgrect_get_unscaled_point(CGRect, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b915ac (    0x68) WSHIDUpdateCursorLocationToAbsolutePoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91614 (    0xec) WSHIDUpdateCursorLocationToDeviceScaledPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91700 (    0xc8) WSHIDUpdateCursorLocationByRelativeDelta [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b917c8 (   0x12c) WSHIDTouchUpMouseMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b918f4 (   0x24c) WSHIDCreateEventRecordsFromSystemAuxMouseButtonsChanged(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91b40 (    0x24) __Block_byref_object_copy_.507 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91b64 (    0x18) __Block_byref_object_dispose_.508 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91b7c (   0x170) invocation function for block in WSHIDCreateEventRecordsFromSystemAuxMouseButtonsChanged(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91cec (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SLSEventRecord*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SLSEventRecord*>>(std::__1::allocator<SLSEventRecord*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b91d24 (   0x354) EventHelper::log_hid_event(__IOHIDEvent*, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92078 (    0x70) EventTranslator::isAltSender(__IOHIDService*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b920e8 (    0xa8) EventHelper::get_scroll_child_event(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92190 (   0x14c) EventHelper::get_dockswipe_child_event(__IOHIDEvent*, __IOHIDEvent*&, __IOHIDEvent*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b922dc (   0x18c) EventHelper::get_STR_child_event(__IOHIDEvent*, __IOHIDEvent*&, __IOHIDEvent*&, __IOHIDEvent*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92468 (   0x18c) EventHelper::get_digitizer_scroll_child_event(__IOHIDEvent*, __IOHIDEvent*&, __IOHIDEvent*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b925f4 (    0x6c) __WSHIDRegisterDisplayRects_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92660 (    0x78) __WSHIDSetCursorRestrictionShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b926d8 (    0xe8) WSHIDSetCurrentCursorLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b927c0 (    0x70) __WSHIDSetCurrentCursorLocation_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92830 (    0xd8) __WSHIDSetZoomTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92908 (   0x140) __WSHIDSetZoomOnDisplayTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92a48 (   0x110) SLSetUnifiedKeyMapping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92b58 (   0x11c) update_unified_key_mapping(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92c74 (    0x84) keyboard_service_lock_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92cf8 (    0x34) invocation function for block in EventTranslator::setKeyboardUnifiedKeyMapping(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92d2c (    0x1c) apply_block_to_dictionary(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92d48 (   0x110) CGXHIDEventCallback(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92e58 (    0x58) invocation function for block in CGXHIDEventCallback(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b92eb0 (  0x1ff4) event_system_callback(void*, void*, __IOHIDService*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b94ea4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b94ebc (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b94ed4 (   0x4a0) invocation function for block in setup_event_sources(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b95374 (   0x844) invocation function for block in setup_event_sources(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b95bb8 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185b95bdc (    0x58) (null) [FUNC, FunctionStarts] 
                0x0000000185b95c34 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000185b95c6c (    0xdc) CGXHIDServicesAddCallback(void*, void*, void*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b95d48 (   0xb7c) invocation function for block in CGXHIDServicesAddCallback(void*, void*, void*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b968c4 (    0x70) match_device_set() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b96934 (    0xe4) device_usage_pair_dictionary_create(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b96a18 (    0xbc) invocation function for block in CGXHIDServicesAddCallback(void*, void*, void*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b96ad4 (   0x50c) announce_device_set(__CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b96fe0 (    0x60) invocation function for block in device_set_create_dictionary(__CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97040 (   0x514) invocation function for block in device_set_create_dictionary(__CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97554 (   0x29c) invocation function for block in announce_device_set(__CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b977f0 (    0x44) __destroy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97834 (    0x50) __copy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97884 (    0xac) string_create_from_unsigned_cf_number(__CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97930 (    0xec) invocation function for block in usage_dictionary_create_from_device_usage_pair_array(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97a1c (    0x1c) value_pair_block_applier(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97a38 (    0x58) invocation function for block in usage_dictionary_create_from_device_usage_pair_array(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97a90 (   0x110) invocation function for block in device_create_dictionary(__IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97ba0 (    0x18) value_block_applier(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97bb8 (     0x4) invocation function for block in EventTranslator::addPointerEventTranslatorForService(__IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97bbc (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97d54 (    0xe0) CGXHIDServiceRemovalCallback(void*, void*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b97e34 (   0x3d4) invocation function for block in CGXHIDServiceRemovalCallback(void*, void*, __IOHIDService*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98208 (    0x5c) CFRefWrap<void const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98264 (    0x4c) CFRefWrap<void const*>::~CFRefWrap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b982b0 (   0x384) void std::__1::__tree_remove[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98634 (    0xb8) invocation function for block in setup_event_sources(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b986ec (    0xb8) hidPropertyCallback(void*, void*, __CFString const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b987a4 (    0x40) invocation function for block in get_next_event() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b987e4 (    0x88) std::__1::deque<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>, std::__1::allocator<std::__1::unique_ptr<WSEventQueueItem, std::__1::default_delete<WSEventQueueItem>>>>::pop_front() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9886c (    0x5c) CGXHIDCurrentEventFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b988c8 (    0x50) WSSetHIDEventRecordState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98918 (    0x54) std::__1::vector<HIDEventRecordItem, std::__1::allocator<HIDEventRecordItem>>::__clear[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9896c (    0x40) WSClearHIDEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b989ac (    0x94) __WSHIDEventRecordReplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98a40 (    0x2c) __WSEventDataSetAllowCursorCrossDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98a6c (    0x2c) __WSEventDataSetCursorDisplayBoundaryLock_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98a98 (    0x28) __IOHIDKeyboardEventTranslatorGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98ac0 (    0x44) __IOHIDKeyboardEventTranslatorCopyDebugDescription(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98b04 (     0x4) __IOHIDKeyboardEventTranslatorFree(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98b08 (    0x40) __IOHIDKeyboardEventTranslatorIsISOKeyboard(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98b48 (    0xe0) __IOHIDKeyboardEventTranslatorAddSysdefinedEventWithSubtype(__IOHIDKeyboardEventTranslator*, EVENT_TRANSLATOR_CONTEXT*, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98c28 (   0x140) __IOHIDKeyboardEventTranslatorAddKeyboardEvent(__IOHIDKeyboardEventTranslator*, bool, EVENT_TRANSLATOR_CONTEXT*, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98d68 (    0xe0) __IOHIDKeyboardEventTranslatorGetKeyboardKeyCode(unsigned int, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98e48 (    0xc8) IOHIDKeyboardEventTranslatorUpdateWithCompanionModifiers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98f10 (    0xb4) IOHIDKeyboardEventTranslatorSetProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b98fc4 (    0xe8) should_emit_tailspins() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b990ac (    0x88) invocation function for block in are_tailspins_pdse_enabled() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99134 (    0x88) invocation function for block in are_tailspins_force_enabled() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b991bc (    0xd0) DiagnosticRequestLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9928c (    0xfc) getDRTailspinRequestSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99388 (   0x110) invocation function for block in emit_tailspin(NSString*, unsigned int, unsigned int, int, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99498 (    0x44) __destroy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b994dc (    0x50) __copy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9952c (    0x2c) invocation function for block in ws_hitches_tailspin_request_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99558 (    0xb8) invocation function for block in getDRTailspinRequestSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99610 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9961c (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9962c (    0x74) invocation function for block in DiagnosticRequestLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b996a0 (    0x38) WSHitchesUpdateEarliestTailspinEmissionTime(WSHitchesTailspinTimestampUpdateEvent) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b996d8 (     0x8) -[SLSSigningKey .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b996e0 (    0x18) -[SLSSigningKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b996f8 (    0x44) -[SLSSigningKey createSignatureForMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9973c (   0x108) -[SLSSigningKey signingContext] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99844 (     0x8) -[SLSCCHmacContext .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9984c (    0x18) -[SLSCCHmacContext .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99864 (    0xd4) -[SLSCCHmacContext finalizedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99938 (    0x5c) -[SLSCCHmacContext updateSigningContextWithBytes:length:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99994 (    0x5c) -[SLSCCHmacContext updateSigningContextWithData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b999f0 (    0x10) -[SLSCCHmacContext updateSigningContextWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99a00 (    0xdc) +[SLSCCHmacContext contextWithImplementingDigester:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99adc (    0x7c) -[SLSSigningKey encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99b58 (    0x80) -[SLSSigningKey initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99bd8 (    0xec) -[SLSSigningKey initWithData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99cc4 (    0xa0) -[SLSSigningKey initWithImplementingKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99d64 (    0xc4) -[SLSSigningKey init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99e28 (     0x8) +[SLSSigningKey supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99e30 (    0x40) +[SLSSigningKey keyWithData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99e70 (    0x2c) +[SLSSigningKey key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99e9c (     0x8) -[SLSEventAuthenticationMessageVersionedPID version] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99ea4 (     0x8) -[SLSEventAuthenticationMessageVersionedPID pid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99eac (    0x6c) -[SLSEventAuthenticationMessageVersionedPID copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99f18 (    0x8c) -[SLSEventAuthenticationMessageVersionedPID addToSigningContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b99fa4 (    0x74) -[SLSEventAuthenticationMessageVersionedPID encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a018 (    0x6c) -[SLSEventAuthenticationMessageVersionedPID initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a084 (    0x7c) -[SLSEventAuthenticationMessageVersionedPID initWithPID:version:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a100 (     0x8) +[SLSEventAuthenticationMessageVersionedPID supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a108 (     0x8) -[SLSEventAuthenticationMessageEventType cgSubType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a110 (     0x8) -[SLSEventAuthenticationMessageEventType cgType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a118 (     0x8) -[SLSEventAuthenticationMessageEventType hidType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a120 (    0x80) -[SLSEventAuthenticationMessageEventType copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a1a0 (    0xa8) -[SLSEventAuthenticationMessageEventType addToSigningContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a248 (    0x94) -[SLSEventAuthenticationMessageEventType encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a2dc (    0x84) -[SLSEventAuthenticationMessageEventType initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a360 (    0xa4) -[SLSEventAuthenticationMessageEventType initWithEventRecord:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a404 (    0x8c) -[SLSEventAuthenticationMessageEventType initWithHIDType:cgType:cgSubType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a490 (     0x8) -[SLSEventAuthenticationMessageEventType isCGType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a498 (     0x8) +[SLSEventAuthenticationMessageEventType supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4a0 (     0x8) -[SLSEventAuthenticationMessage signature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4a8 (     0x8) -[SLSEventAuthenticationMessage capabilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4b0 (     0x8) -[SLSEventAuthenticationMessage eventType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4b8 (     0x8) -[SLSEventAuthenticationMessage proxyTargetProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4c0 (     0x8) -[SLSEventAuthenticationMessage context] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4c8 (     0x8) -[SLSEventAuthenticationMessage targetProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4d0 (     0x8) -[SLSEventAuthenticationMessage originIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4d8 (     0x8) -[SLSEventAuthenticationMessage timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a4e0 (    0xc8) -[SLSEventAuthenticationMessage validateWithOptions:andResultBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a5a8 (   0x188) SLSVerifyEventAuthenticationMessageSignature [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a730 (   0x1ec) __SLSVerifyEventAuthenticationMessageSignature_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a91c (    0xd8) -[SLSEventAuthenticationMessage copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9a9f4 (   0x114) -[SLSEventAuthenticationMessage addToSigningContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ab08 (   0x174) -[SLSEventAuthenticationMessage encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ac7c (   0x18c) -[SLSEventAuthenticationMessage initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ae08 (    0xb4) -[SLSEventAuthenticationMessage initWithEventRecord:capabilities:pid:version:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9aebc (    0xf0) -[SLSEventAuthenticationMessage initWithTimestamp:originIdentifier:context:capabilities:eventType:targetProcess:proxyTargetProcess:signature:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9afac (    0x90) -[SLSEventAuthenticationMessage dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b03c (     0x8) +[SLSEventAuthenticationMessage supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b044 (   0x12c) +[SLSEventAuthenticationMessage basisMessage:signedByKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b170 (    0x3c) SLSSigningKeyCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b1ac (    0x40) SLSSigningKeyCreateWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b1ec (    0x48) SLSSigningKeyCreateData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b234 (    0xa4) SLSSigningKeyCreateAuthenticationMessageForEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b2d8 (    0x70) SLSSigningKeyValidateEventAuthenticationMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b348 (    0x68) SLEventAuthenticationMessageCreateWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b3b0 (    0x48) SLSEventAuthenticationMessageCreateData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b3f8 (     0x4) SLSEventAuthenticationMessageCreateCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b3fc (   0x23c) SLSCopyEventSigningKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b638 (   0x250) WS::Displays::make_link_description(CADisplayMode const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9b888 (   0xff0) WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9c878 (    0x68) std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>::vector(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9c8e0 (   0x6e4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, std::__1::iterator_traits<CADisplayMode**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9cfc4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b9cfdc (   0x10c) WS::Displays::Mode::set_ca_link_mode(SLSLinkDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d0e8 (   0x19c) WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1::operator()(CADisplayMode const*, CADisplayMode const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d284 (    0xf0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d374 (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d444 (   0x108) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d54c (   0x1b0) bool std::__1::__insertion_sort_incomplete<WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d6fc (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b9d714 (    0xe4) WS::Displays::prefer_ycbcr_link_description_pixel_encoding_with_depth_score(SLSLinkDescriptionPixelEncoding, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d7f8 (   0x12c) WS::Displays::prefer_rgb_link_description_pixel_encoding_with_depth_score(SLSLinkDescriptionPixelEncoding, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d924 (    0x40) std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d964 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CADisplayMode*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CADisplayMode*>>(std::__1::allocator<CADisplayMode*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9d99c (   0x214) WS::Displays::Mode::Mode(WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9dbb0 (   0x318) WS::Displays::Mode::operator=(WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9dec8 (   0x194) WS::Displays::operator==(WS::Displays::Mode const&, WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9e05c (    0x5c) WS::Displays::operator<(WS::Displays::Mode const&, WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9e0b8 (   0x384) WS::Displays::AspectRatio::get_aspect_ratio(unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9e43c (    0x74) std::__1::vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>::vector(std::__1::vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9e4b0 (   0x57c) WS::Displays::AspectRatio::AspectRatio(unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ea2c (    0x74) std::__1::__split_buffer<WS::Displays::AspectRatio, std::__1::allocator<WS::Displays::AspectRatio>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9eaa0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>(std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ead8 (   0x8b4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::iterator_traits<std::__1::pair<unsigned int, unsigned int>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9f38c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b9f3a4 (    0xf4) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9f498 (   0x180) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9f618 (   0x130) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9f748 (   0x18c) unsigned int std::__1::__sort5<std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9f8d4 (   0x1e4) bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::__less<std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9fab8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185b9fad0 (   0x510) WS::Displays::Mode::mirror_copy(std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>> const&, int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185b9ffe0 (   0x14c) WS::Displays::Mode& std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::emplace_back<>() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba012c (   0x144) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::push_back[abi:v160006](WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0270 (    0x94) WS::Displays::Mode::~Mode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0304 (    0x84) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0388 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::Mode>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::Mode>>(std::__1::allocator<WS::Displays::Mode>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba03d0 (    0x88) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__swap_out_circular_buffer(std::__1::__split_buffer<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0458 (    0x50) std::__1::__split_buffer<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba04a8 (    0xd8) WS::Displays::Mode::Mode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0580 (   0x314) WS::Displays::Mode::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0894 (    0x98) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<char*, void>(char*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba092c (   0x164) WS::Displays::PartialMode::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0a90 (    0x84) WS::Displays::Mode::flags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba0b14 (  0x2c58) WS::Displays::GenerateModeListForDisplay(WS::Displays::SLCADisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba376c (   0x6e4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, std::__1::iterator_traits<CADisplayMode**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba3e50 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba3e68 (   0x27c) auto WS::Displays::get_modes_for_next_refresh_rate<std::__1::__wrap_iter<CADisplayMode**>, std::__1::__wrap_iter<CADisplayMode**>>(std::__1::__wrap_iter<CADisplayMode**>, std::__1::__wrap_iter<CADisplayMode**>, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba40e4 (   0x330) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<WS::Displays::Mode, void*>*>, bool> std::__1::__hash_table<WS::Displays::Mode, WS::Displays::ModeHasher, std::__1::equal_to<WS::Displays::Mode>, std::__1::allocator<WS::Displays::Mode>>::__emplace_unique_impl<unsigned long, unsigned long const&, unsigned long const&, unsigned int const&, int, float const&, float const&, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, WS::Displays::SLCADisplay*&, float const&>(unsigned long&&, unsigned long const&, unsigned long const&, unsigned int const&, int&&, float const&, float const&, bool&&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, WS::Displays::SLCADisplay*&, float const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba4414 (   0x288) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<WS::Displays::Mode, void*>*>, bool> std::__1::__hash_table<WS::Displays::Mode, WS::Displays::ModeHasher, std::__1::equal_to<WS::Displays::Mode>, std::__1::allocator<WS::Displays::Mode>>::__emplace_unique_key_args<WS::Displays::Mode, WS::Displays::Mode&>(WS::Displays::Mode const&, WS::Displays::Mode&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba469c (    0x88) WS::Displays::find_if_mode_match(WS::Displays::Mode const&, WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba4724 (   0x288) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<WS::Displays::Mode, void*>*>, bool> std::__1::__hash_table<WS::Displays::Mode, WS::Displays::ModeHasher, std::__1::equal_to<WS::Displays::Mode>, std::__1::allocator<WS::Displays::Mode>>::__emplace_unique_key_args<WS::Displays::Mode, WS::Displays::Mode const&>(WS::Displays::Mode const&, WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba49ac (    0x60) std::__1::pair<WS::Displays::Mode*, WS::Displays::Mode*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__move_loop<std::__1::_ClassicAlgPolicy>, std::__1::__move_trivial>, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, 0>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba4a0c (   0x934) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, std::__1::iterator_traits<WS::Displays::Mode*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba5340 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba5358 (    0x44) WS::Displays::AspectRatio::~AspectRatio() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba539c (  0x1104) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, std::__1::iterator_traits<WS::Displays::Mode*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba64a0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba64b8 (    0xa4) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::vector(std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba655c (    0x60) std::__1::__hash_table<WS::Displays::Mode, WS::Displays::ModeHasher, std::__1::equal_to<WS::Displays::Mode>, std::__1::allocator<WS::Displays::Mode>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba65bc (    0x50) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba660c (    0xc8) void std::__1::_IterOps<std::__1::_ClassicAlgPolicy>::iter_swap[abi:v160006]<WS::Displays::Mode*&, WS::Displays::Mode*&>(WS::Displays::Mode*&, WS::Displays::Mode*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba66d4 (   0x294) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba6968 (   0x1c4) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba6b2c (   0x248) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba6d74 (   0x374) bool std::__1::__insertion_sort_incomplete<WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::post_process_resolved_modes(WS::Displays::SLCADisplay*, bool, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&)::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba70e8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba7100 (    0x38) invocation function for block in WS::Displays::ca_supports_safe_aperture_offset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7138 (    0xc4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba71fc (    0xb0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba72ac (    0xd8) unsigned int std::__1::__sort5<std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7384 (   0x240) bool std::__1::__insertion_sort_incomplete<std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&, WS::Displays::Mode*>(WS::Displays::Mode*, WS::Displays::Mode*, std::__1::__less<WS::Displays::Mode, WS::Displays::Mode>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba75c4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba75dc (    0x34) WS::Displays::ModeHasher::operator()(WS::Displays::Mode const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7610 (   0x1fc) void std::__1::__hash_table<WS::Displays::Mode, WS::Displays::ModeHasher, std::__1::equal_to<WS::Displays::Mode>, std::__1::allocator<WS::Displays::Mode>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba780c (    0x58) std::__1::unique_ptr<std::__1::__hash_node<WS::Displays::Mode, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<WS::Displays::Mode, void*>>>>::reset[abi:v160006](std::__1::__hash_node<WS::Displays::Mode, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7864 (   0x170) auto WS::Displays::get_modes_for_next_refresh_rate<std::__1::__wrap_iter<CADisplayMode**>, std::__1::__wrap_iter<CADisplayMode**>>(std::__1::__wrap_iter<CADisplayMode**>, std::__1::__wrap_iter<CADisplayMode**>, bool)::'lambda'(CADisplayMode const*)::operator()('lambda'(CADisplayMode const*)) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba79d4 (   0x158) WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8::operator()(CADisplayMode const*, CADisplayMode const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7b2c (    0xf0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7c1c (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7cec (   0x108) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, CADisplayMode**, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7df4 (   0x1b0) bool std::__1::__insertion_sort_incomplete<WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&, CADisplayMode**>(CADisplayMode**, CADisplayMode**, WS::Displays::sort_trimmed_ca_mode_list(std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&, bool)::$_8&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7fa4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ba7fbc (    0x28) __IOHIDPointerEventTranslatorGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba7fe4 (    0x34) __IOHIDPointerEventTranslatorCopyDebugDescription(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8018 (    0x10) __IOHIDPointerEventTranslatorFree(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8028 (   0x148) IOHIDPointerEventTranslatorCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8170 (    0x98) __IOHIDEventTranslatorGetIntegerProperty(void const*, __CFString const*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8208 (   0x138) __IOHIDEventTranslatorCopyServiceProperty(void const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8340 (   0x5bc) IOHIDPointerEventTranslatorRegisterService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba88fc (   0x10c) __IOHIDEventTranslatorGetServiceIDForObject(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8a08 (    0x64) __IOHIDEventTranslatorGetBooleanProperty(void const*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8a6c (   0x11c) IOHIDPointerEventTranslatorSetProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8b88 (    0x34) __IOHIDEventTranslatorGetServiceRecordForServiceID(__IOHIDPointerEventTranslator*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8bbc (    0x34) __IOHIDEventTranslatorGetProximityRecordForServiceID(__IOHIDPointerEventTranslator*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8bf0 (    0xb0) __IOHIDPointerEventTranslatorGetNxMouseEvents(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8ca0 (    0x48) __IOHIDPointerEventTranslatorRemapButtons(__IOHIDPointerEventTranslator*, EVENT_TRANSLATOR_CONTEXT*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8ce8 (    0x38) __ButtonsApplierFunction(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8d20 (   0x1b8) WS::FourCC::name(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba8ed8 (   0x258) SLSHMDCopyMetalDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9130 (    0x6c) __WSCDInitializeVtable_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba919c (     0x4) WSShaderProgramDisable_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91a0 (     0x8) CGXGLCreateDebugDescription_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91a8 (     0x8) CGXGLDisplayContextGetAccelerator_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91b0 (     0x8) CGXGLDisplayContextGetPixelFormat_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91b8 (     0x8) CGXGLDisplayContextGetCGLContext_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91c0 (     0x8) CGXGLDisplayDeviceGetDisplayContext_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91c8 (     0x4) CGXGLDisplayDeviceInitializeContextInformation_DEAD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91cc (    0x28) __SLSHMDGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba91f4 (    0xc0) hmd_reclaim(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba92b4 (    0x58) hmd_teardown_drawable_queue(_SLSHMD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba930c (     0x4) hmd_copy_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9310 (   0x12c) hmd_copy_format_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba943c (    0xfc) SLSUnpackQueueConfigurationDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9538 (   0x260) SLSGetTouchBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9798 (   0x3a0) HMDClientSession::HMDList() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9b38 (   0x3f4) HMDClientSession::HMDCreateWithDictionary(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9f2c (    0x48) WS::CFRef<_SLSHMD*>::operator=(_SLSHMD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ba9f74 (   0x228) tb_copy_display_info_dictionary(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa19c (   0x1a0) hmd_copy_display_info_dictionary(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa33c (   0x424) get_current_hmd_session(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa760 (    0x38) HMDClientSession::cleanupServerPortRef() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa798 (   0x228) HMDClientSession::SetupNotificationPort(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa9c0 (    0x20) invocation function for block in HMDClientSession::HMDClientSession(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baa9e0 (    0x6c) invocation function for block in HMDClientSession::HMDClientSession(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baaa4c (   0x25c) invocation function for block in HMDClientSession::setupWSDeathNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baaca8 (   0x504) HMDClientSession::ProcessNotification(SLSHMDNotification, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab1ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185bab1bc (    0x8c) HMDClientSession::HMDFindByID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab248 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, void (_SLSHMD*, SLSHMDNotification) block_pointer>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, void (_SLSHMD*, SLSHMDNotification) block_pointer>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, void (_SLSHMD*, SLSHMDNotification) block_pointer>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, void (_SLSHMD*, SLSHMDNotification) block_pointer>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, void (_SLSHMD*, SLSHMDNotification) block_pointer>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab2fc (    0x74) HMDClientSession::HMDIndexFindByID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab370 (    0x2c) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab39c (     0x4) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab3a0 (     0x4) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab3a4 (    0x28) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab3cc (    0x4c) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab418 (     0x4) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab41c (     0x4) std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab420 (   0x210) SLSHMDRelinquish [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab630 (    0x14) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab644 (     0x4) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab648 (     0x4) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab64c (    0x24) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab670 (    0x48) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab6b8 (     0x4) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab6bc (     0x4) std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab6c0 (    0x78) SLSCopyAvailableHMDList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bab738 (   0x384) SLSHMDAcquire [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bababc (   0x2d4) SLSQueueConfigurationIsValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185babd90 (    0x20) __SLSHMDAcquire_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185babdb0 (    0x20) __SLSHMDAcquire_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185babdd0 (   0x1b0) hmd_rebuild_drawable_queue(unsigned int, _SLSHMD*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185babf80 (   0x170) hmd_build_drawable_queue(unsigned int, _SLSHMD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac0f0 (    0xa4) drawable_create(__IOSurface*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac194 (    0x28) invocation function for block in SLSHMDDrawableGetTypeID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac1bc (    0x10) drawable_reclaim(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac1cc (     0x4) drawable_copy_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac1d0 (    0x84) drawable_copy_format_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac254 (    0x14) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac268 (     0x4) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac26c (     0x4) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac270 (    0x24) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac294 (    0x48) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac2dc (     0x4) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac2e0 (     0x4) std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac2e4 (   0x390) SLSHMDGetRefreshTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac674 (    0x14) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac688 (     0x4) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac68c (     0x4) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac690 (    0x24) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac6b4 (    0x48) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac6fc (     0x4) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac700 (     0x4) std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac704 (   0x11c) SLSHMDCopyAudioSelector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac820 (    0x14) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac834 (     0x4) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac838 (     0x4) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac83c (    0x24) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac860 (    0x48) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac8a8 (     0x4) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac8ac (     0x4) std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac8b0 (   0x12c) SLSHMDCopyDisplayInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac9dc (    0x14) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac9f0 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac9f4 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bac9f8 (    0x24) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baca1c (    0x48) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baca64 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baca68 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baca6c (   0x45c) SLSHMDAddNotificationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bacec8 (   0x19c) HMDClientSession::RemoveNotificationHandler(SLSHMDNotification, void (_SLSHMD*, SLSHMDNotification) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad064 (    0x74) SLSHMDRemoveNotificationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad0d8 (   0x1d8) SLSHMDConfigureDisplayQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad2b0 (   0x24c) __SLSHMDConfigureDisplayQueue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad4fc (    0x14) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad510 (     0x4) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad514 (     0x4) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad518 (    0x24) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad53c (    0x48) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad584 (     0x4) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad588 (     0x4) std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad58c (   0x128) SLSHMDCopyDisplayQueueConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad6b4 (    0x14) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad6c8 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad6cc (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad6d0 (    0x24) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad6f4 (    0x48) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad73c (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad740 (     0x4) std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bad744 (   0x494) SLSHMDCopyCapabilities [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badbd8 (     0xc) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badbe4 (     0x4) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badbe8 (     0x4) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badbec (    0x24) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc10 (    0x48) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc58 (     0x4) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc5c (     0x4) std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc60 (    0x14) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc74 (     0x4) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc78 (     0x4) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badc7c (    0x24) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badca0 (    0x48) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badce8 (     0x4) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badcec (     0x4) std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badcf0 (   0x108) SLSHMDGetAcceleratorPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baddf8 (    0x14) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade0c (     0x4) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade10 (     0x4) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade14 (    0x24) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade38 (    0x48) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade80 (     0x4) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade84 (     0x4) std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bade88 (   0x124) SLSHMDSetWorkInterval [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badfac (    0x14) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badfc0 (     0x4) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badfc4 (     0x4) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badfc8 (    0x24) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185badfec (    0x48) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae034 (     0x4) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae038 (     0x4) std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae03c (   0x3a0) SLSHMDGetDrawable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae3dc (    0x14) msg_port_for_hmd(_SLSHMD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae3f0 (    0x14) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae404 (     0x4) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae408 (     0x4) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae40c (    0x24) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae430 (    0x48) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae478 (     0x4) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae47c (     0x4) std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae480 (   0x368) SLSHMDDrawablePresentWithTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae7e8 (    0x58) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae840 (     0x4) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae844 (     0x4) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae848 (    0x28) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae870 (    0x4c) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae8bc (     0x4) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae8c0 (     0x4) std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae8c4 (   0x108) SLSHMDDrawableGetIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae9cc (    0x14) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae9e0 (     0x4) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae9e4 (     0x4) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bae9e8 (    0x24) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baea0c (    0x48) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baea54 (     0x4) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baea58 (     0x4) std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baea5c (   0x250) SLSHMDSetEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baecac (    0x14) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baecc0 (     0x4) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baecc4 (     0x4) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baecc8 (    0x24) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baecec (    0x48) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baed34 (     0x4) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baed38 (     0x4) std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baed3c (   0x278) SLSHMDEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baefb4 (    0x14) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baefc8 (     0x4) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baefcc (     0x4) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baefd0 (    0x24) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baeff4 (    0x48) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf03c (     0x4) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf040 (     0x4) std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf044 (   0x198) SLSHMDModeConfigurationCopyCurrentCGSDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf1dc (    0x14) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf1f0 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf1f4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf1f8 (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf21c (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf264 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf268 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf26c (   0x188) SLSHMDModeConfigurationTransactionInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf3f4 (    0x58) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf44c (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf450 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf454 (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf478 (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf4c0 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf4c4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf4c8 (   0x1b4) SLSHMDModeConfigurationTransactionSetCGSDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf67c (    0x58) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf6d4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf6d8 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf6dc (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf700 (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf748 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf74c (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf750 (   0x198) SLSHMDModeConfigurationTransactionValidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf8e8 (    0x58) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf940 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf944 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf948 (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf96c (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf9b4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf9b8 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185baf9bc (   0x1b0) SLSHMDModeConfigurationTransactionCommit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafb6c (    0x74) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafbe0 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafbe4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafbe8 (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafc0c (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafc54 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafc58 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafc5c (   0x130) SLSHMDModeConfigurationTransactionAbort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafd8c (    0x14) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafda0 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafda4 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafda8 (    0x24) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafdcc (    0x48) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafe14 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafe18 (     0x4) std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bafe1c (   0x280) SLSHMDGetTotalUpdateCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb009c (   0x128) SLSHMDIsAvailable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb01c4 (   0x248) hmd_query_status_from_server(unsigned int, SLSHMDStatus, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb040c (    0x14) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0420 (     0x4) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0424 (     0x4) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0428 (    0x24) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb044c (    0x48) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0494 (     0x4) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0498 (     0x4) std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb049c (   0x128) SLSHMDIsAwake [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb05c4 (    0x14) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb05d8 (     0x4) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb05dc (     0x4) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb05e0 (    0x24) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0604 (    0x48) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb064c (     0x4) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0650 (     0x4) std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0654 (    0x84) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::vector(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb06d8 (    0x54) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb072c (    0x54) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0780 (    0x40) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb07c0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>(std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb07f8 (    0xe8) WS::Displays::DisplaySet::DisplaySet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb08e0 (    0xc8) WS::Displays::DisplaySet::filtered_displays(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>, std::__1::function<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb09a8 (   0x144) void std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__push_back_slow_path<std::__1::shared_ptr<WS::Displays::Display> const&>(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0aec (    0x34) std::__1::__split_buffer<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0b20 (    0x54) std::__1::__split_buffer<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>&>::clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0b74 (    0x6c) WS::Displays::DisplaySet::reset_filters() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0be0 (    0x90) WS::Displays::DisplaySet::set_master_list(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0c70 (   0x1a4) void std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::assign<std::__1::shared_ptr<WS::Displays::Display>*, 0>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0e14 (    0x7c) std::__1::pair<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0e90 (    0x3c) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0ecc (    0xac) WS::Displays::DisplaySet::add_display(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb0f78 (    0x94) WS::Displays::DisplaySet::remove_display(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb100c (    0xa4) std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*> std::__1::remove[abi:v160006]<std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::shared_ptr<WS::Displays::Display>>(std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb10b0 (    0xb4) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::erase(std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1164 (    0x70) std::__1::pair<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb11d4 (    0xf0) WS::Displays::DisplaySet::active_displays(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb12c4 (    0x84) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1348 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb13b8 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb13bc (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb13c0 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb13e0 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1418 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb141c (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1420 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1490 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1494 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1498 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb14b8 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb14f0 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb14f4 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb14f8 (    0xf0) WS::Displays::DisplaySet::online_displays(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb15e8 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1658 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb165c (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1660 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1680 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb16b8 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb16bc (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb16c0 (    0xf0) WS::Displays::DisplaySet::live_displays(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb17b0 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1820 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1824 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1828 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1848 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1880 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1884 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1888 (    0xf8) WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1980 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb19f0 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb19f4 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb19f8 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1a18 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1a50 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1a54 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1a58 (    0x70) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::operator()(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1ac8 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1acc (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1ad0 (    0x20) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1af0 (    0x38) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1b28 (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1b2c (     0x4) std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1b30 (   0x178) WS::Displays::DisplaySet::create_debugging_dictionary() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1ca8 (   0x10c) PolyDeviceBlitBufferSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1db4 (   0x150) PolyDeviceBlitBuffer::CleanupResources() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1f04 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, id<MTLSharedEvent>>, std::__1::__unordered_map_hasher<unsigned int, id<MTLSharedEvent>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, id<MTLSharedEvent>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLSharedEvent>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1f50 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, id<MTLBuffer>>, std::__1::__unordered_map_hasher<unsigned int, id<MTLBuffer>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, id<MTLBuffer>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLBuffer>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb1f9c (   0x77c) PolyDeviceBlitBuffer::Copy(id<MTLTexture>, objc_object<MTLTexture>, MetalContext*, MetalContext, id<MTLSharedEvent>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb2718 (   0x4d0) PolyDeviceBlitBuffer::EnsureBuffer(MetalContext*, unsigned long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb2be8 (   0x538) PolyDeviceBlitBuffer::SharedEvent(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3120 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<id<MTLBuffer>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, id<MTLBuffer>>, std::__1::__unordered_map_hasher<unsigned int, id<MTLBuffer>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, id<MTLBuffer>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLBuffer>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb31d4 (   0x168) SLXPCDictionarySetCFPropertyList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb333c (     0x8) __SLXPCDictionarySetCFPropertyList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3344 (    0xe8) SLXPCDictionaryCopyCFPropertyList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb342c (   0x2d0) Payload::add_debug_description_to_file(__sFILE*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb36fc (    0x4c) Payload::ensure_seed_dependent_state() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3748 (   0x250) Payload::average_color(CGRect) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3998 (   0x124) Payload::resize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3abc (    0x70) Payload::~Payload() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3b2c (    0x5c) desktop_window_modified_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb3b88 (   0xae8) desktop_window_effects_update(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4670 (    0xe8) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, Payload>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, Payload>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, Payload>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, Payload>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, Payload>>>::find<CGXWindow*>(CGXWindow* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4758 (   0x2bc) WSChameleonOrMenubarVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4a14 (    0x94) invocation function for block in rebuild_menubar_piggyback_begin(menubar_piggyback_t&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4aa8 (   0x14c) DesktopEffectsGetDesktopAverageInRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4bf4 (   0x150) color_is_dark(float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4d44 (    0xd0) invocation function for block in rebuild_menubar_piggyback_end(menubar_piggyback_t&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb4e14 (   0x27c) DesktopEffectsSessionData::DesktopWindowDidUpdate(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5090 (   0x1c8) Payload::invalidate_affected_content() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5258 (    0x7c) Payload::update_change_tracking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb52d4 (   0x160) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5434 (     0x4) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5438 (     0x4) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb543c (    0x38) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5474 (    0x5c) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb54d0 (     0x4) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb54d4 (     0x4) std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb54d8 (    0x50) display_wake_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5528 (    0x14) window_lifecycle_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb553c (   0x19c) DesktopEffectsSessionData::UntrackDesktopWindow(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb56d8 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, Payload>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, Payload>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, Payload>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5730 (    0xb8) did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb57e8 (    0x98) will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5880 (   0x50c) DesktopEffectsGetAverageColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5d8c (   0x1e8) WSDumpDesktopEffects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb5f74 (    0xe4) DesktopEffectsSetCalculationIsPausedByClient [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6058 (   0x164) DesktopEffectsSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb61bc (    0x4c) DesktopEffectsSetMinimumUpdateInterval [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6208 (     0x8) SLSDesktopTagBitModificationIsSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6210 (    0x28) SLRegisterScreenRefreshCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6238 (   0x16c) register_callback(CallbackSet*, CallbackType, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb63a4 (    0x1c) invocation function for block in init_remote_operation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb63c0 (   0x374) display_refresh_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6734 (    0xfc) region_to_rects(CGSRegionObject*, CGRect**, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6830 (    0x10) SLUnregisterScreenRefreshCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6840 (   0x150) unregister_callback(CallbackSet*, CallbackType, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6990 (    0x8c) SLWaitForScreenRefreshRects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6a1c (   0x44c) SLWaitForScreenUpdateRects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6e68 (    0x28) SLScreenRegisterMoveCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6e90 (    0x10) SLScreenUnregisterMoveCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6ea0 (     0xc) SLReleaseScreenRefreshRects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6eac (    0x4c) SLCursorIsVisible [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6ef8 (    0x30) SLCursorIsDrawnInFramebuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6f28 (    0xa4) SLPostMouseEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb6fcc (   0x1c0) SLPostScrollWheelEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb718c (    0x48) SLPostKeyboardEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb71d4 (    0x40) SLWarpMouseCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7214 (    0x40) SLInhibitLocalEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7254 (    0x38) SLSetLocalEventsSuppressionInterval [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb728c (    0xa4) SLEnableEventStateCombining [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7330 (    0x38) SLSetLocalEventsFilterDuringSuppressionState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7368 (    0x3c) SLAssociateMouseAndMouseCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb73a4 (     0x4) SLWindowServerCFMachPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb73a8 (    0x4c) SLWindowServerCreateServerPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb73f4 (    0x38) SLSetLocalEventsFilterDuringSupressionState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb742c (     0x4) std::__1::__shared_ptr_emplace<WS::Surface, std::__1::allocator<WS::Surface>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7430 (    0x48) std::__1::__shared_ptr_emplace<WS::Surface, std::__1::allocator<WS::Surface>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7478 (    0x44) std::__1::__shared_ptr_emplace<WS::Surface, std::__1::allocator<WS::Surface>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb74bc (    0x20) std::__1::__shared_ptr_emplace<WS::Surface, std::__1::allocator<WS::Surface>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb74dc (   0x140) WS::Surface::AcquireAtSize(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb761c (    0xd0) WS::Surface::SetVolatile(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb76ec (   0x134) WS::Surface::AddDebugInfoToFile(__sFILE*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7820 (    0x54) std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb7874 (    0x54) std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb78c8 (   0x760) WS::SurfacePool::Acquire(unsigned int, unsigned int, MTLPixelFormat, unsigned long, unsigned long long, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8028 (    0x64) std::__1::pair<std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb808c (   0x148) void std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>::__push_back_slow_path<std::__1::shared_ptr<WS::Surface> const&>(std::__1::shared_ptr<WS::Surface> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb81d4 (   0x74c) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::iterator_traits<std::__1::shared_ptr<WS::Surface>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8920 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bb8938 (    0xf4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8a2c (    0xdc) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8b08 (   0x120) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8c28 (   0x1d0) bool std::__1::__insertion_sort_incomplete<WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&, std::__1::shared_ptr<WS::Surface>*>(std::__1::shared_ptr<WS::Surface>*, std::__1::shared_ptr<WS::Surface>*, WS::SurfacePool::limited_ready_migrate(std::__1::shared_ptr<WS::Surface> const&)::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb8df8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bb8e10 (   0x288) WS::SurfacePool::Release(std::__1::shared_ptr<WS::Surface>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9098 (    0x30) std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>::push_back[abi:v160006](std::__1::shared_ptr<WS::Surface> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb90c8 (    0x64) WS::SurfacePool::update_memory_footprints() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb912c (   0x288) WS::migrate(std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>&, std::__1::vector<std::__1::shared_ptr<WS::Surface>, std::__1::allocator<std::__1::shared_ptr<WS::Surface>>>&, std::__1::function<bool (std::__1::shared_ptr<WS::Surface> const&)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb93b4 (    0x84) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Surface> const&)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9438 (    0x98) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Surface> const&)>::__value_func[abi:v160006](std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Surface> const&)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb94d0 (    0x30) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::operator()(std::__1::shared_ptr<WS::Surface> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9500 (     0x4) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9504 (     0x4) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9508 (    0x20) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Surface> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9528 (    0x38) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9560 (     0x4) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9564 (     0x4) std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9568 (    0x24) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::operator()(std::__1::shared_ptr<WS::Surface> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb958c (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9590 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9594 (    0x24) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Surface> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb95b8 (    0x48) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9600 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9604 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9608 (    0x24) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::operator()(std::__1::shared_ptr<WS::Surface> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb962c (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9630 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9634 (    0x24) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Surface> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9658 (    0x48) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb96a0 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb96a4 (     0x4) std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb96a8 (   0x194) WSSurfacePoolSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb983c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185bb9858 (    0xf8) WSMainThreadBlockHoistCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9950 (    0x24) block_hoist_notification_handler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9974 (   0x130) block_hoist_invoke_blocks(WSMainThreadBlockHoist*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bb9aa4 (   0x5cc) WSMainThreadBlockHoistEnqueueBlock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bba070 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void () block_pointer*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void () block_pointer*>>(std::__1::allocator<void () block_pointer*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bba0a8 (    0xdc) get_transform_entry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bba184 (   0x2cc) window_set_transform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bba450 (   0x6f8) window_update_transform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbab48 (   0x930) concatenate_all_transforms [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbb478 (    0x10) __add_transform_entry_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbb488 (    0xec) WSSetWindowTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbb574 (    0xd8) __WSSetWindowTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbb64c (   0x2ac) accumulate_window_display_updates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbb8f8 (   0x1dc) CGXSetWindowTransformList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbbad4 (   0x158) __CGXSetWindowTransformList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbbc2c (   0x1ac) CGXSetWindowTransform3DList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbbdd8 (   0x14c) __CGXSetWindowTransform3DList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbbf24 (    0xb4) __CGXRemoveWindowTransformsForConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbbfd8 (    0xfc) __CGXRemoveWindowTransformsForConnection_block_invoke.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbc0d4 (   0x144) window_list_set_locked_bounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbc218 (   0x198) __window_list_set_locked_bounds_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbc3b0 (    0xd8) CGXIsTransformedWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbc488 (   0x31c) create_transform_placement_string_for_value [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbc7a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185bbc7b4 (   0x5c8) dump_transform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbcd7c (    0x9c) dump_placement_and_options_and_details [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbce18 (   0x6f8) layer_blit_float [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbd510 (   0x268) layer_blit_float_S8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbd778 (   0x540) layer_blit_float_RGB8_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbdcb8 (   0x4a8) layer_blit_float_RGB16_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbe160 (   0x3e0) layer_blit_float_RGBF_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbe540 (    0xac) layer_blit_float_sample [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbe5ec (   0x36c) layer_blit_float_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbe958 (   0x384) layer_blit_float_RGB16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbecdc (   0x2d0) layer_blit_float_RGB5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbefac (   0x708) layer_blit_float_ARGB8_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbf6b4 (   0x61c) layer_blit_float_S8_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bbfcd0 (   0x934) layer_blit_float_ARGB8_S8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc0604 (   0x7cc) layer_blit_float_RGBA_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc0dd0 (   0xd08) layer_blit_float_ARGB8_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc1ad8 (   0xa3c) layer_blit_float_S8_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc2514 (   0x3e8) layer_blit_float_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc28fc (   0x7ac) layer_blit_float_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc30a8 (   0x5a8) layer_blit_float_S8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc3650 (    0x64) _f32_load_f32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc36b4 (   0x1bc) _f32_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bc3870 (  0x9114) layer_blit_float_ANY [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcc984 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185bcca24 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185bcca38 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185bccad8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185bccaec (    0x60) (null) [FUNC, FunctionStarts] 
                0x0000000185bccb4c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185bccb60 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185bccb74 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185bccc14 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185bccc28 (   0x218) _f32a_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcce40 (     0xc) SLSSetAccessibilityAdjustments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcce4c (    0xbc) __SLSSetAccessibilityAdjustments_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bccf08 (    0xac) SLSSetPhotosensitivityProcessingEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bccfb4 (    0x50) CGXReleaseCIFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd004 (    0x58) CGXReleaseWindowCIFilters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd05c (    0x88) updateWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd0e4 (   0x118) extract_ci_vector2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd1fc (    0x58) __set_ci_filter_values_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd254 (     0x8) SLSReleaseWindowAnimation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd25c (     0x8) SLSSetWindowAnimationProgress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd264 (     0x8) SLSCreateGenieWindowAnimation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd26c (     0x8) SLSCreateSheetWindowAnimation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd274 (     0x8) SLSCreateSheetWindowAnimationWithParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd27c (     0x4) SLSUpdateWindowAnimationOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd280 (     0x8) SLSCreateMetalSheetWindowAnimationWithParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd288 (     0x8) SLSCreateMetalSheetWindowAnimationWithParentAndShift [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd290 (     0x4) SLSUpdateWindowAnimationEdges [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd294 (     0x4) SLSWindowAnimationHideSlot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd298 (     0x4) SLSWindowAnimationChangeLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd29c (     0x4) SLSWindowAnimationChangeSubLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd2a0 (     0x8) SLSWindowAnimationSetParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd2a8 (     0x8) SLSWindowAnimationChangeShiftPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd2b0 (     0x8) invocation function for block in CGSUpdateManager::CGSUpdateManager(_CGSConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd2b8 (    0x54) invocation function for block in CGSUpdateManager::CGSUpdateManager(_CGSConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd30c (   0x398) CGSUpdateManager::unbalanced_disabled_updates(CGSNotificationType, void*, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd6a4 (    0xc0) (anonymous namespace)::InterprocessSerialSemaphore::dispose(dispatch_queue_s*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd764 (    0x5c) std::__1::__tree<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd7c0 (    0x18) invocation function for block in (anonymous namespace)::InterprocessSerialSemaphore::dispose(dispatch_queue_s*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd7d8 (    0x58) std::__1::__tree<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd830 (    0x50) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, void*>>>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcd880 (   0x52c) CGSUpdateManager::enable_updates_common() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcddac (    0x24) invocation function for block in CGSUpdateManager::enable_updates_common() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcddd0 (    0x10) std::__1::__throw_bad_weak_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdde0 (    0x5c) invocation function for block in (anonymous namespace)::InterprocessSerialSemaphore::asyncWait(void (int) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcde3c (    0x44) __destroy_helper_block_8_32b40c71_ZTSNSt3__110shared_ptrIN12_GLOBAL__N_127InterprocessSerialSemaphoreEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcde80 (    0x4c) __copy_helper_block_8_32b40c71_ZTSNSt3__110shared_ptrIN12_GLOBAL__N_127InterprocessSerialSemaphoreEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdecc (    0x10) __destroy_helper_block_8_32c80_ZTSNSt3__110shared_ptrINS_6atomicIN12_GLOBAL__N_123SemaphoreSignalProgressEEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdedc (    0x1c) __copy_helper_block_8_32c80_ZTSNSt3__110shared_ptrINS_6atomicIN12_GLOBAL__N_123SemaphoreSignalProgressEEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdef8 (     0x4) std::__1::__shared_ptr_emplace<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>, std::__1::allocator<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdefc (     0x4) std::__1::__shared_ptr_emplace<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>, std::__1::allocator<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdf00 (    0x44) std::__1::__shared_ptr_emplace<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>, std::__1::allocator<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdf44 (    0x20) std::__1::__shared_ptr_emplace<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>, std::__1::allocator<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdf64 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::InterprocessSerialSemaphore, std::__1::allocator<(anonymous namespace)::InterprocessSerialSemaphore>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdf68 (    0x68) std::__1::__shared_ptr_emplace<(anonymous namespace)::InterprocessSerialSemaphore, std::__1::allocator<(anonymous namespace)::InterprocessSerialSemaphore>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcdfd0 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::InterprocessSerialSemaphore, std::__1::allocator<(anonymous namespace)::InterprocessSerialSemaphore>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce014 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::InterprocessSerialSemaphore, std::__1::allocator<(anonymous namespace)::InterprocessSerialSemaphore>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce034 (    0x94) std::__1::__tree<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, std::__1::__tree_node<std::__1::__value_type<unsigned long long, (anonymous namespace)::Backtrace>, void*>*, long>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce0c8 (   0x19c) SLSDisableUpdateToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce264 (    0x84) SLSReenableUpdateToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce2e8 (    0x84) SLSReenableUpdateTokenWithSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce36c (   0x18c) SLSDisableUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce4f8 (   0x12c) SLSReenableUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce624 (    0xdc) WS::Displays::BuiltinPresetInterface::reset_custom_presets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce700 (   0x130) WS::Displays::DefaultInvalidPreset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce830 (   0x118) WS::Displays::PresetDataDescription(WS::Displays::Preset const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce948 (    0x3c) WS::Displays::Preset::~Preset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bce984 (   0x19c) WS::Displays::BuiltinPresetInterface::chromatic_adaptation_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bceb20 (   0x33c) (anonymous namespace)::ChromaticAdaptationTransform<float>::ChromaticAdaptationTransform((anonymous namespace)::RGBColorPrimaries<float>, (anonymous namespace)::xyY<float>, (anonymous namespace)::xyY<float>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcee5c (   0x120) WS::Displays::BuiltinPresetInterface::update_preset(NSData*, WS::Displays::Preset const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcef7c (    0x7c) std::__1::function<void (NSDictionary*)>::operator()(NSDictionary*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bceff8 (   0x24c) WS::Displays::BuiltinPresetInterface::set_active_preset(NSData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf244 (    0x44) WS::NSRef<NSData*>::operator=(NSData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf288 (   0x1f0) WS::Displays::ParsePresetDataDescription(NSDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf478 (     0xc) WS::Displays::BuiltinPresetInterface::active_preset_uid() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf484 (   0x4d0) WS::Displays::BuiltinPresetInterface::presets() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf954 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::Preset>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::Preset>>(std::__1::allocator<WS::Displays::Preset>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcf9a0 (    0xe0) std::__1::vector<WS::Displays::Preset, std::__1::allocator<WS::Displays::Preset>>::__swap_out_circular_buffer(std::__1::__split_buffer<WS::Displays::Preset, std::__1::allocator<WS::Displays::Preset>&>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfa80 (    0x50) std::__1::__split_buffer<WS::Displays::Preset, std::__1::allocator<WS::Displays::Preset>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfad0 (    0x84) std::__1::vector<WS::Displays::Preset, std::__1::allocator<WS::Displays::Preset>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfb54 (    0x44) void std::__1::__destroy_at[abi:v160006]<WS::Displays::Preset, 0>(WS::Displays::Preset*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfb98 (    0x38) WS::Displays::BuiltinPresetInterface::preset_capacity() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfbd0 (    0x88) WS::Displays::BuiltinPresetInterface::~BuiltinPresetInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfc58 (    0x84) std::__1::__function::__value_func<void (NSDictionary*)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfcdc (    0x78) WS::Displays::BuiltinPresetInterface::~BuiltinPresetInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfd54 (   0x120) WS::Displays::BuiltinUserAdjustmentInterface::set_user_adjustment(WS::Displays::UserAdjustment const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfe74 (    0x4c) WS::Displays::BuiltinUserAdjustmentInterface::user_adjustment() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcfec0 (    0x60) WS::Displays::BuiltinUserAdjustmentInterface::~BuiltinUserAdjustmentInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcff20 (    0x50) WS::Displays::BuiltinUserAdjustmentInterface::~BuiltinUserAdjustmentInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bcff70 (   0x7c4) WS::Displays::PresetDictionary(WS::Displays::Preset const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0734 (    0x98) std::__1::__function::__value_func<void (NSDictionary*)>::__value_func[abi:v160006](std::__1::__function::__value_func<void (NSDictionary*)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd07cc (   0x134) WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0900 (    0xc4) WS::Displays::PresetController::active_preset() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd09c4 (    0x88) WS::Displays::PresetController::active_preset_index() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0a4c (    0x9c) WS::Displays::PresetController::set_active_preset(NSData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0ae8 (   0x16c) WS::Displays::PresetController::update_preset(unsigned long, WS::Displays::Preset const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0c54 (    0x68) std::__1::vector<WS::Displays::Preset, std::__1::allocator<WS::Displays::Preset>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0cbc (    0xf8) WS::Displays::PresetController::reset_custom_presets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0db4 (    0x84) WS::Displays::UserAdjustmentController::set_user_adjustment(WS::Displays::UserAdjustment const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0e38 (    0x28) __CGXCursorInstanceGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0e60 (     0x8) cursor_instance_copy_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0e68 (    0x54) cursor_instance_copy_format_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0ebc (    0xbc) CGXCursorInstanceEqualToCursorInstance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0f78 (    0x18) CGXCursorInstanceCopyCursorBitmap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd0f90 (    0xbc) SLSLogBreak [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd104c (    0xa4) __SLSLogBreak_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd10f0 (   0x178) __SLSLogInit_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1268 (    0x54) SLSLogBacktrace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd12bc (    0x60) SLSLoggingCurrentRPCName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd131c (    0x58) SLSLoggingCurrentRPCConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1374 (   0x21c) SLSCursorInfoStringCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1590 (   0x258) SLSOrderPanelIfActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd17e8 (   0x308) SLSSetHideOnDeact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1af0 (    0xac) SLSReorderWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1b9c (   0x124) SLSDeactivateCurrContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1cc0 (   0x120) createXWindowsForVector(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1de0 (   0x150) testXWindowsNTimes(unsigned int, unsigned int, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1f30 (    0x68) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::vector(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd1f98 (    0x6c) leakedWindows() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2004 (    0x90) CGXWindowPerformance::CGXUnLeakWindows() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2094 (   0x1b8) CGXWindowPerformance::CGXWindowPerformancePerformTest() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd224c (    0xa8) SLSGLCompositorSettings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd22f4 (     0x8) SLSDeferredUpdates [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd22fc (    0x68) SLSScreenWatcherNotificationForEach [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2364 (    0x58) SLSScreenWatcherNotificationItemGetPID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd23bc (     0xc) SLSScreenWatcherNotificationItemGetAuditToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd23c8 (     0x8) SLSScreenWatcherNotificationItemGetCaptureCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd23d0 (   0x100) PKGSystemStatusIndicatorsUpdateExistingIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd24d0 (   0x294) __PKGSystemStatusIndicatorsUpdateExistingIfNeeded_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2764 (   0x2bc) invocation function for block in status_indicators_update_existing_position_for_display(CGXSessionPackageData*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2a20 (    0x2c) invocation function for block in status_indicators_for_each_on_display(CGXSessionPackageData*, PKGDisplay*, void (PKGSystemStatusIndicator_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2a4c (    0x2c) invocation function for block in status_indicators_for_each_on_display(CGXSessionPackageData*, PKGDisplay*, void (PKGSystemStatusIndicator_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2a78 (   0x1c0) status_indicator_set_target_attachment_offset(PKGDisplay*, PKGSystemStatusIndicator_t*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2c38 (   0x284) system_status_indicator_set_position_for_display(PKGSystemStatusIndicator_t*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd2ebc (   0x41c) system_status_indicator_set_shape(PKGSystemStatusIndicator_t*, PKGDisplay*, CGRect, CGPoint, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd32d8 (   0x468) system_status_indicator_get_window(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3740 (   0x410) system_status_indicator_update_kind(PKGSystemStatusIndicator_t*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3b50 (    0x14) invocation function for block in status_indicator_has_sibling(PKGSystemStatusIndicator_t*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3b64 (   0x138) status_indicators_for_each_sibling(CGXSessionPackageData*, PKGSystemStatusIndicator_t*, bool, void (PKGSystemStatusIndicator_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3c9c (    0x10) invocation function for block in system_status_indicator_run_enter_animation(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3cac (   0x15c) system_status_indicator_run_enter_animation_phase_1(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3e08 (   0x118) invocation function for block in system_status_indicator_run_enter_animation_phase_1(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd3f20 (   0x114) invocation function for block in system_status_indicator_run_enter_animation_phase_1(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4034 (   0x190) system_status_indicator_run_animation(PKGSystemStatusIndicator_t*, double, PKGTimingFunction, void (double) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd41c4 (    0x10) invocation function for block in system_status_indicator_run_animation(PKGSystemStatusIndicator_t*, double, PKGTimingFunction, void (double) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd41d4 (    0x88) invocation function for block in system_status_indicator_run_animation(PKGSystemStatusIndicator_t*, double, PKGTimingFunction, void (double) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd425c (     0xc) __destroy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4268 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4278 (    0xb0) invocation function for block in system_status_indicator_run_enter_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4328 (    0xe0) invocation function for block in system_status_indicator_run_enter_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4408 (   0x120) invocation function for block in system_status_indicator_run_enter_animation_phase_3(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4528 (   0x114) invocation function for block in system_status_indicator_run_enter_animation_phase_4(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd463c (    0xac) invocation function for block in system_status_indicator_run_enter_animation_phase_4(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd46e8 (    0x18) invocation function for block in system_status_indicator_run_enter_animation_phase_4(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4700 (    0xd8) system_status_indicator_perform_invalidating_window(PKGSystemStatusIndicator_t*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd47d8 (    0x44) system_status_indicator_invalidate_window(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd481c (   0x180) system_status_indicator_set_animation_properties(PKGSystemStatusIndicator_t*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd499c (    0x28) invocation function for block in system_status_indicator_set_animation_properties(PKGSystemStatusIndicator_t*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd49c4 (    0xf4) invocation function for block in system_status_indicator_run_enter_animation_phase_4(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4ab8 (    0x9c) invocation function for block in system_status_indicator_set_sibling_scale_factor(PKGSystemStatusIndicator_t*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4b54 (     0xc) invocation function for block in system_status_indicator_set_sibling_scale_factor(PKGSystemStatusIndicator_t*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4b60 (    0x28) invocation function for block in system_status_indicator_run_enter_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4b88 (    0x28) invocation function for block in system_status_indicator_run_enter_animation_phase_1(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4bb0 (    0x48) invocation function for block in status_indicators_for_each_sibling(CGXSessionPackageData*, PKGSystemStatusIndicator_t*, bool, void (PKGSystemStatusIndicator_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4bf8 (    0x48) invocation function for block in status_indicators_for_each_sibling(CGXSessionPackageData*, PKGSystemStatusIndicator_t*, bool, void (PKGSystemStatusIndicator_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4c40 (    0x58) system_status_indicator_appearance_theme(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4c98 (   0x180) system_status_indicator_cgcolor(SLSAppearanceTheme, PKGSystemStatusIndicatorColor) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4e18 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bd4e30 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bd4e48 (    0x64) invocation function for block in status_indicator_set_target_attachment_offset(PKGDisplay*, PKGSystemStatusIndicator_t*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4eac (    0x64) invocation function for block in status_indicator_set_target_attachment_offset(PKGDisplay*, PKGSystemStatusIndicator_t*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4f10 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4f54 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd4fa4 (   0x334) invocation function for block in system_status_indicator_update_attachment_rect(PKGSystemStatusIndicator_t*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd52d8 (    0x58) invocation function for block in item_eligible_for_indicator_attachment(PKGSystemStatusIndicator_t*, CGXWindow*, CGRect, bool, CGRect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5330 (    0xd0) SystemStatusLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5400 (    0x10) __Block_byref_object_copy_.1645 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5410 (     0xc) __Block_byref_object_dispose_.1646 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd541c (    0x70) invocation function for block in getSTMediaStatusDomainClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd548c (    0x70) invocation function for block in getSTLocationStatusDomainClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd54fc (   0x120) system_status_indicator_enqueue_update_active_indicator_with_media_data(STMediaStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd561c (   0x194) system_status_indicator_enqueue_update_active_indicator_with_location_data(STLocationStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd57b0 (   0x2a4) invocation function for block in system_status_indicators_reload_allow_privacy_indicator_suppression() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5a54 (    0x54) invocation function for block in getSystemOverrideClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5aa8 (    0xd0) SystemOverrideLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5b78 (    0xb8) invocation function for block in getkSOSuppressSWCameraIndicationOnExternalDisplaysSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5c30 (    0xe4) invocation function for block in system_status_indicators_reload_allow_privacy_indicator_suppression() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5d14 (    0x38) invocation function for block in system_status_indicators_reload_allow_privacy_indicator_suppression() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5d4c (    0x74) invocation function for block in SystemOverrideLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5dc0 (    0xe4) invocation function for block in system_status_indicator_enqueue_update_active_indicator_with_location_data(STLocationStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5ea4 (     0xc) invocation function for block in system_status_indicator_enqueue_update_active_indicator_with_location_data(STLocationStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd5eb0 (   0x2b0) system_status_indicator_update_active_indicator_kind(int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6160 (   0x260) PKGSystemStatusIndicatorsRebuild [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd63c0 (   0x26c) __PKGSystemStatusIndicatorsRebuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd662c (    0xd4) __PKGSystemStatusIndicatorsRebuild_block_invoke.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6700 (   0x1c4) __PKGSystemStatusIndicatorsRebuild_block_invoke.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd68c4 (   0x13c) system_status_indicator_free(PKGSystemStatusIndicator_t*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6a00 (   0x144) invocation function for block in system_status_indicator_run_exit_animation(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6b44 (   0x110) invocation function for block in system_status_indicator_run_exit_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6c54 (    0x70) invocation function for block in system_status_indicator_run_exit_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6cc4 (    0x28) invocation function for block in system_status_indicator_run_exit_animation_phase_2(PKGSystemStatusIndicator_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6cec (    0x48) invocation function for block in system_status_indicator_for_display(CGXSessionPackageData*, PKGDisplay*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6d34 (    0x8c) invocation function for block in system_status_indicators_free_exiting_of_kind(CGXSessionPackageData*, PKGDisplay*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6dc0 (    0xe4) invocation function for block in system_status_indicator_enqueue_update_active_indicator_with_media_data(STMediaStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6ea4 (     0xc) invocation function for block in system_status_indicator_enqueue_update_active_indicator_with_media_data(STMediaStatusDomainData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6eb0 (     0x8) invocation function for block in system_status_indicator_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6eb8 (    0x7c) SystemStatusLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd6f34 (    0xdc) invocation function for block in system_status_indicator_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7010 (    0x44) invocation function for block in system_status_indicator_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7054 (    0x14) invocation function for block in system_status_indicator_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7068 (    0x74) invocation function for block in SystemStatusLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd70dc (     0xc) __PKGSystemStatusIndicatorsFreeSessionData_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd70e8 (     0xc) __PKGSystemStatusIndicatorsFreeSessionData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd70f4 (   0x188) DeathWatcher::initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd727c (   0x110) invocation function for block in DeathWatcher::initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd738c (    0x64) invocation function for block in death_watcher() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd73f0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void () block_pointer>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void () block_pointer>>(std::__1::allocator<void () block_pointer>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7428 (   0x160) WSDeathWatcherRegisterBlock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7588 (   0x32c) SLSPostEventRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd78b4 (   0x210) encode_event_record_for_posting(void const*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7ac4 (    0x2c) __SLSPostEventRecord_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7af0 (    0x20) SLSPostEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7b10 (   0x398) SLSPostMouseEventsVButtons [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7ea8 (    0x50) __SLSPostMouseEventsVButtons_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7ef8 (    0x60) SLSPostMouseEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7f58 (    0x40) SLSPostMouseEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd7f98 (   0x1a8) SLSWarpCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd8140 (   0x21c) SLSPostKeyboardEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd835c (    0x50) SLSInhibitLocalEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd83ac (    0x68) SLSSetLocalEventsSuppressionInterval [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd8414 (    0x98) SLSSetLocalEventsFilterDuringSuppressionState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd84ac (   0x180) SLSAssociateMouseAndMouseCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bd862c (  0x1ad4) WSIOSurfaceDebugTallyAndAbort(int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda100 (    0xe4) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::endl[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda1e4 (   0x1f0) process_name_for_pid(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda3d4 (    0x90) std::__1::vector<SurfaceCountInfo, std::__1::allocator<SurfaceCountInfo>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda464 (    0xd8) std::__1::list<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::list(std::initializer_list<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda53c (   0x128) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>...
                0x0000000185bda664 (    0x7c) std::__1::__list_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::clear() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bda6e0 (  0x19e8) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, SurfaceCountInfo*>(SurfaceCountInfo*, SurfaceCountInfo*, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, std::__1::iterator_traits<SurfaceCountInfo*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdc0c8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bdc0e0 (    0xe8) void std::__1::_IterOps<std::__1::_ClassicAlgPolicy>::iter_swap[abi:v160006]<SurfaceCountInfo*&, SurfaceCountInfo*&>(SurfaceCountInfo*&, SurfaceCountInfo*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdc1c8 (   0x45c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, SurfaceCountInfo*>(SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdc624 (   0x2f0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, SurfaceCountInfo*>(SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdc914 (   0x3bc) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, SurfaceCountInfo*>(SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, SurfaceCountInfo*, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdccd0 (   0x510) bool std::__1::__insertion_sort_incomplete<WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&, SurfaceCountInfo*>(SurfaceCountInfo*, SurfaceCountInfo*, WSIOSurfaceDebugTallyAndAbort(int, int)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdd1e0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bdd1f8 (    0x64) std::__1::__split_buffer<SurfaceCountInfo, std::__1::allocator<SurfaceCountInfo>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdd25c (    0xb4) WSIOSurfaceWriteToFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdd310 (   0xa04) iosurface_write_to_file_common(__IOSurface*, __CFDictionary const*, __CFString const*, char const*, char*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bddd14 (    0xc4) WSIOSurfaceWriteToFileWithPayloadForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdddd8 (    0xa0) WSCaptureStreamDump [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdde78 (    0x90) stream_dump_common(__IOSurface*, __CFDictionary const*, char const*, cgdebug::IOSurfaceWriteCounter&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bddf08 (    0xa0) WSDisplayStreamDump [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bddfa8 (   0x2a4) WSCreateDebugPayloadForStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde24c (    0x20) invocation function for block in UpdateInformationHandler::add_handler(void (__CFDictionary const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde26c (    0x20) invocation function for block in UpdateInformationHandler::add_handler(void (__CFDictionary const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde28c (    0x84) get_mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde310 (   0x2fc) SLSRegisterUpdateInformationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde60c (    0xe0) SLSUnregisterUpdateInformationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde6ec (    0xe4) dictionary_add_interval(__CFDictionary*, __CFString const*, unsigned long long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bde7d0 (   0x254) -[PKGCoreUIRenderer renderer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdea24 (    0x50) invocation function for block in getCUICreateRendererSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdea74 (   0x110) CoreUILibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdeb84 (    0x74) invocation function for block in CoreUILibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdebf8 (     0x8) -[PKGCoreUIRenderer rendererName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdec00 (    0x88) -[PKGCoreUIRenderer initWithRendererName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdec88 (    0x84) -[PKGCoreUIRenderer dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bded0c (    0xb8) +[PKGCoreUIRenderer rendererForTheme:useAX:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdedc4 (     0x8) -[PKGCoreUIWork setMainThreadWork:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdedcc (     0xc) -[PKGCoreUIWork mainThreadWork] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdedd8 (     0x8) -[PKGCoreUIWork setRendererWork:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdede0 (     0xc) -[PKGCoreUIWork rendererWork] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdedec (    0x80) -[PKGCoreUIWork dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdee6c (    0xf4) -[PKGCoreUITransaction commit] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdef60 (   0x1e4) __30-[PKGCoreUITransaction commit]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf144 (     0xc) __30-[PKGCoreUITransaction commit]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf150 (   0x1a8) __30-[PKGCoreUITransaction commit]_block_invoke_2.89 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf2f8 (    0x44) __30-[PKGCoreUITransaction commit]_block_invoke.85 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf33c (   0x210) invocation function for block in pkg_coreui_system_symbol_catalog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf54c (    0x10) __Block_byref_object_copy_.1962 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf55c (     0xc) __Block_byref_object_dispose_.1963 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf568 (    0x70) invocation function for block in getCUICatalogClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf5d8 (    0x38) invocation function for block in pkg_coreui_renderer_thread() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf610 (   0x2c0) -[PKGCoreUITransaction updateLayer:key:rendererWork:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf8d0 (    0x3c) __53-[PKGCoreUITransaction updateLayer:key:rendererWork:]_block_invoke.78 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdf90c (   0x1f4) __53-[PKGCoreUITransaction updateLayer:key:rendererWork:]_block_invoke.80 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfb00 (    0x50) __destroy_helper_block_e8_32o40o48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfb50 (    0x60) __copy_helper_block_e8_32o40o48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfbb0 (    0x28) __53-[PKGCoreUITransaction updateLayer:key:rendererWork:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfbd8 (    0x90) -[PKGCoreUITransaction _layerUpdateKeyForOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfc68 (    0x74) -[PKGCoreUITransaction _scheduleRendererWork:mainThreadWork:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfcdc (    0xb4) -[PKGCoreUITransaction initWithTheme:useAX:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfd90 (    0x80) -[PKGCoreUITransaction dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfe10 (    0x10) -[CALayer(PKGCoreUI) PKG_setMaterialLayer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfe20 (     0xc) -[CALayer(PKGCoreUI) PKG_materialLayer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfe2c (    0x10) -[CALayer(PKGCoreUI) PKG_setUpdateLayerKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfe3c (     0xc) -[CALayer(PKGCoreUI) PKG_updateLayerKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bdfe48 (   0x1d8) __PKGCoreUIUpdateLayer_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0020 (    0x50) invocation function for block in getCUICreateOrUpdateLayerSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0070 (   0x14c) PKGCoreUIUpdateLayerSymbolImage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be01bc (   0x18c) __PKGCoreUIUpdateLayerSymbolImage_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0348 (    0xdc) __PKGCoreUIUpdateLayerSymbolImage_block_invoke.125 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0424 (    0xd0) FuseBoardServicesLibraryCore [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be04f4 (    0x50) __getFUSBInitializeSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0544 (    0x88) FuseBoardServicesLibrary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be05cc (   0x1b8) _PKGSystemShellWindowScreenStateChangeHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0784 (   0x148) soft_FUSBGetProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be08cc (   0x150) soft_FUSBProcessGetWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0a1c (    0x94) ___PKGSystemShellWindowScreenStateChangeHandler_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0ab0 (   0x12c) _PKGSystemShellUpdateContentState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0bdc (   0x150) soft_FUSBWindowSetContentState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0d2c (    0x50) __getFUSBWindowSetContentStateSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0d7c (    0x50) __getFUSBProcessGetWindowSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0dcc (    0x50) __getFUSBGetProcessSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0e1c (   0x184) _PKGSystemShellWindowWillDestroyHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0fa0 (    0x50) __getFUSBProcessRemoveWindowSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be0ff0 (    0x94) _PKGSystemShellWindowDidCreateHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1084 (   0x150) soft_FUSBProcessAddWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be11d4 (    0x50) __getFUSBProcessAddWindowSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1224 (   0x274) _PKGSystemShellWindowConnectionsChangeHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1498 (    0x50) __getFUSBGetWindowSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be14e8 (    0x50) __getFUSBWindowSetOwnerSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1538 (   0x184) _PKGSystemShellProcessFrontmostChangeHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be16bc (    0x50) __getFUSBProcessSetFrontmostSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be170c (   0x154) _PKGSystemShellClientDisconnectedHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1860 (    0x50) __getFUSBEndTrackingProcessSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be18b0 (   0x154) _PKGSystemShellClientConnectedHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1a04 (    0x50) __getFUSBBeginTrackingProcessSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1a54 (   0x100) _PKGSystemShellCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1b54 (    0x74) __FuseBoardServicesLibraryCore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1bc8 (    0x74) CGXCreateCombinedWindowClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be1c3c (   0x408) CGXCopyScreenOpaqueShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2044 (    0xd4) create_window_opaque_shape_including_surfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2118 (   0x39c) CGXCopyScreenFrameShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be24b4 (   0x110) CGXCopyScreenContentShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be25c4 (    0xcc) CGXCreateScreenContentShapeForContentShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2690 (   0x178) create_screen_region_with_window_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2808 (    0x94) CGXCreateScreenVisibleOpaqueShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be289c (   0x2fc) create_opaque_shape_above_for_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2b98 (    0x94) CGXCreateScreenVisibleFrameShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2c2c (    0x94) CGXCreateScreenVisibleContentShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2cc0 (    0x98) CGXCreateScreenUnobscuredOpaqueShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be2d58 (   0x358) create_frame_shape_above_for_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be30b0 (    0x98) CGXCreateScreenUnobscuredFrameShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3148 (    0xd8) CGXCreateScreenTrustedUnobscuredFrameShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3220 (    0x98) CGXCreateScreenUnobscuredContentShapeForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be32b8 (   0x144) CGXCreateScreenOpaqueShapeForOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be33fc (    0x5c) WSWindowFrameCopyFrameShapeAboveExcludingTrusted [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3458 (     0x8) SLPaletteCreateDefaultColorPalette [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3460 (    0xe4) SLPaletteCreateWithCapacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3544 (     0x8) SLPaletteCreateWithDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be354c (    0x84) SLPaletteCreateWithSamples [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be35d0 (    0xe8) SLPaletteCreateWithByteSamples [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be36b8 (    0x48) SLPaletteRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3700 (    0x5c) getPalettePtr [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be375c (    0x5c) SLPaletteGetColorAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be37b8 (   0x134) SLPaletteGetIndexForColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be38ec (    0x20) SLPaletteGetNumberOfSamples [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be390c (    0x60) SLPaletteSetColorAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be396c (    0x38) SLPaletteCreateCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be39a4 (    0xb0) SLPaletteIsEqualToPalette [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3a54 (    0xe0) SLPaletteCreateFromPaletteBlendedWithColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3b34 (    0xa0) __SLTypeRegister [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3bd4 (     0x8) copy_debug_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3bdc (    0x70) copy_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3c4c (    0xa8) SLTypeCreateInstance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3cf4 (    0x60) SLCFStringGetCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3d54 (    0x4c) SLCFDictionaryGetValueWithType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3da0 (    0x84) SLCFDictionaryGetSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3e24 (   0x128) SLCFDictionarySetRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3f4c (    0x88) SLCFArrayAppendCGFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be3fd4 (    0x88) SLCFArrayAppendInteger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be405c (    0x18) call_array_block [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4074 (    0x1c) call_dict_block [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4090 (    0x84) SLCFDictionaryGetBoolean [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4114 (    0xc0) SLCFDictionaryGetFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be41d4 (    0xa4) SLCFDictionaryGetSystemFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4278 (   0x148) SLCFDictionaryGetInteger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be43c0 (    0xa4) SLCFDictionaryGetIOGPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4464 (    0xdc) SLCFDictionaryGetIOGBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4540 (    0x70) SLCFDictionaryGetIntegerWithDefault [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be45b0 (    0xa8) SLCFDictionaryGetUInt64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4658 (    0xc4) SLCFDictionaryGetUInt32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be471c (    0x84) SLCFDictionaryGetNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be47a0 (    0x84) SLCFDictionarySetCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4824 (    0x9c) SLCFDictionarySetFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be48c0 (    0x9c) SLCFDictionarySetInteger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be495c (    0xac) SLCFDictionarySetCGPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4a08 (    0xa0) SLCFDictionarySetIOGPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4aa8 (    0xcc) SLCFDictionarySetIOGBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4b74 (    0x84) SLCFDictionarySetNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4bf8 (    0xa0) SLCFDictionarySetRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4c98 (    0x9c) SLCFDictionarySetSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4d34 (    0x94) SLCFStringCopyCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4dc8 (    0x68) SLCFUUIDCopyCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4e30 (   0x15c) ComputeProcAttributes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be4f8c (   0x124) PostEventNotificationToConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be50b0 (    0xe8) CPXInitNotificationEvent(SLSEventRecord*, CGXSessionProcessData*, unsigned int, int, CPSNotificationCodes, unsigned short, CPSProcessSerNum, int, int, int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5198 (   0x198) SendNotificationToEveryConnectionOfPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5330 (    0xb4) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__assign_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be53e4 (    0x4c) __cursor_asset_data_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5430 (    0x50) WSDisplayStreamForPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5480 (    0x20) WSDisplayStreamsRunning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be54a0 (    0xe0) WSDisplayStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5580 (    0x40) WSDisplayStreamPortDeath(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be55c0 (    0x28) WSDisplayStreamRemoveFromSession(WSDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be55e8 (   0x11c) WSDisplayStreamDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5704 (    0xec) WSDisplayStreamSetRunning(WSDisplayStream*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be57f0 (    0x6c) WSDisplayStreamUpdateSoftwareCursor(WSDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be585c (     0x8) WSDisplayStreamConnectionDeath(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5864 (   0x75c) CGXDisplayStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be5fc0 (    0x78) displaystream_parse_property_number(CGXDisplayStream*, __CFString const*, void*, CFNumberType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be6038 (    0x80) displaystream_parse_property_rect(CGXDisplayStream*, __CFString const*, CGRect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be60b8 (    0x70) displaystream_parse_property_bool(CGXDisplayStream*, __CFString const*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be6128 (   0x124) displaystream_parse_property_simd_float4(CGXDisplayStream*, __CFString const*, float vector[4]*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be624c (   0x1ec) get_hw_mirror_master_display_unit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be6438 (   0x114) WSDisplayStreamGetDisplay(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be654c (   0x328) WSDisplayStreamGetDisplayForUnit(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be6874 (   0x160) displaystream_get_airplay_mirror_master(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be69d4 (   0x10c) CGXDisplayStreamWillUpdate(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be6ae0 (   0x7bc) CGXDisplayStreamUpdate(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>, unsigned long long, CGSRegionObject*, CGSRegionObject*, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be729c (    0xe4) displaystream_get_next_wakeup(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be7380 (  0x1178) displaystream_update(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be84f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185be8508 (   0x134) WSDisplayStreamGetColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be863c (   0x1a4) displaystream_send_flags(CGXDisplayStream*, unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be87e0 (   0x158) displaystream_update_timer_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be8938 (    0x78) CGXDisplayStreamReleaseAccelerator(CGXDisplayStream*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be89b0 (    0x70) CGXDisplayStreamStop(CGXDisplayStream*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be8a20 (   0x244) CGXDisplayStreamStart(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be8c64 (    0xac) CGXDisplayStreamDealloc(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be8d10 (   0x834) CGXContentStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9544 (   0x134) display_stream_filters_windows(WSDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9678 (   0x494) WSDisplayStreamDisplayDidUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9b0c (    0xb0) displaystream_monitor_added(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9bbc (    0xd8) displaystream_monitor_removed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9c94 (    0x5c) displaystream_did_wake(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9cf0 (    0x5c) displaystream_will_sleep(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9d4c (    0x74) displaystream_did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9dc0 (    0x54) WSDisplayStreamReleaseTouchBarSessionData(CGXSessionDisplayStreamData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9e14 (     0x4) displaystream_will_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9e18 (    0x30) displaystream_will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9e48 (    0x20) __WSDisplayStreamReleaseResourcesForAccelerator_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185be9e68 (   0x874) CGXDumpDisplayStreamInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bea6dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185bea6ec (    0xd0) __CGXDumpDisplayStreamInfo_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bea7bc (    0xc0) get_rect_formatted_string(CGRect*, char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bea87c (    0x1c) apply_block_to_dictionary(void const*, void const*, void*) (.2272) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bea898 (   0x43c) get_display_stream_property_string(CGXDisplayStream*, __CFString const*, char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beacd4 (   0x828) WSAddDisplayStreamsInfoToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb4fc (    0xb4) __WSAddDisplayStreamsInfoToExternalDebuggingDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb5b0 (    0x44) displaystream_touchbar_owner_died(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb5f4 (   0x184) WSDisplayStreamSetTouchBarSurfacePort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb778 (   0x1b0) CGXInkEventFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb928 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned long long, id<MTLBuffer>>, std::__1::__map_value_compare<unsigned long long, id<MTLBuffer>, std::__1::less<unsigned long long>, true>, std::__1::allocator<id<MTLBuffer>>>::destroy(std::__1::__tree_node<id<MTLBuffer>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beb974 (    0xcc) ManagedBufferPool::RetireActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beba40 (   0x298) ManagedBufferPool::Flush(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bebcd8 (    0xa4) std::__1::__tree<std::__1::__value_type<unsigned long long, id<MTLBuffer>>, std::__1::__map_value_compare<unsigned long long, id<MTLBuffer>, std::__1::less<unsigned long long>, true>, std::__1::allocator<id<MTLBuffer>>>::erase(std::__1::__tree_const_iterator<id<MTLBuffer>, std::__1::__tree_node<id<MTLBuffer>, void*>*, long>, std::__1::__tree_node<id<MTLBuffer>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bebd7c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<id<MTLBuffer>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<id<MTLBuffer>>>(std::__1::allocator_traits&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bebdb4 (   0x158) ManagedBufferPool::EncodeVertexData(void*, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bebf0c (    0xec) XPCServiceClient::encodeNotification(SLSDisplayControlNotificationType, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bebff8 (    0x60) XPCServiceClient::sendErrorCodeAsync(CGError, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec058 (    0x74) XPCServiceClient::getXPCServiceClientMap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec0cc (    0xe8) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::__unordered_map_hasher<_xpc_connection_s*, std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::hash<_xpc_connection_s*>, std::__1::equal_to<_xpc_connection_s*>, true>, std::__1::__unordered_map_equal<_xpc_connection_s*, std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::equal_to<_xpc_connection_s*>, std::__1::hash<_xpc_connection_s*>, true>, std::__1::allocator<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>>>::find<_xpc_connection_s*>(_xpc_connection_s* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec1b4 (    0x84) deferredClientLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec238 (    0x74) deferredCallbackMap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec2ac (   0x2f0) _ZL25deferredCompletionHandler_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec59c (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<XPCServiceClient>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<XPCServiceClient>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<XPCServiceClient>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<XPCServiceClient>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<XPCServiceClient>>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec64c (   0x140) XPCServiceClient::sendRequestCompleted(unsigned long long, SLSDisplayControl) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec78c (    0xf8) XPCServiceClient::createXPCError(void*, CGError, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec884 (    0x10) XPCServiceClient::sendErrorCode(CGError, unsigned long long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bec894 (   0x2d0) invocation function for block in XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becb64 (    0x14) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becb78 (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becb7c (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becb80 (    0x24) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becba4 (    0x48) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becbec (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becbf0 (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becbf4 (   0x250) invocation function for block in XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bece44 (    0x54) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bece98 (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bece9c (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becea0 (    0x30) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beced0 (    0x54) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becf24 (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becf28 (     0x4) std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becf2c (    0x84) XPCServiceClient::clientLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185becfb0 (   0x1d8) XPCServiceClient::buildAndSerializeXPCMessage(void const*, SLXPCClientType, SLSDisplayControlNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed188 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void*>>(std::__1::allocator<void*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed1c0 (    0x98) invocation function for block in XPCServiceClient::sendInitialEDRState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed258 (    0x74) std::__1::vector<void*, std::__1::allocator<void*>>::vector(std::__1::vector<void*, std::__1::allocator<void*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed2cc (    0x44) invocation function for block in XPCServiceClient::sendInitialEDRState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed310 (     0xc) __destroy_helper_block_8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed31c (    0x10) __copy_helper_block_8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed32c (    0x18) __destroy_helper_block_8_32c42_ZTSNSt3__16vectorIPvNS_9allocatorIS1_EEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed344 (     0xc) __copy_helper_block_8_32c42_ZTSNSt3__16vectorIPvNS_9allocatorIS1_EEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed350 (    0x14) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed364 (     0x4) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed368 (     0x4) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed36c (    0x24) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed390 (    0x48) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed3d8 (     0x4) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed3dc (     0x4) std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed3e0 (   0x5a8) XPCServiceClient::XPCServiceClient(_xpc_connection_s*, SLXPCClientType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bed988 (  0x11b8) invocation function for block in XPCServiceClient::XPCServiceClient(_xpc_connection_s*, SLXPCClientType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beeb40 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185beeb64 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185beeb98 (    0x7c) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<createXPCServiceSelectiveSharing()::$_6&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beec14 (   0x124) invocation function for block in createXPCServiceSelectiveSharing()::$_6::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185beed38 (   0x410) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::__unordered_map_hasher<_xpc_connection_s*, std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::hash<_xpc_connection_s*>, std::__1::equal_to<_xpc_connection_s*>, true>, std::__1::__unordered_map_equal<_xpc_connection_s*, std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>, std::__1::equal_to<_xpc_connection_s*>, std::__1::hash<_xpc_connection_s*>, true>, std::__1::allocator<std::__1::__hash_value_type<_xpc_connection_s*, std::__1::shared_ptr<XPCServiceClient>>>>::__emplace_unique_key_args<_xpc_connection_s*, _xpc_connection_s*&, std::__1::shared_ptr<XPCServiceClient>>(_x...
                0x0000000185bef148 (     0x4) std::__1::__shared_ptr_emplace<XPCServiceClient, std::__1::allocator<XPCServiceClient>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef14c (    0x64) std::__1::__shared_ptr_emplace<XPCServiceClient, std::__1::allocator<XPCServiceClient>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef1b0 (    0x44) std::__1::__shared_ptr_emplace<XPCServiceClient, std::__1::allocator<XPCServiceClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef1f4 (    0x20) std::__1::__shared_ptr_emplace<XPCServiceClient, std::__1::allocator<XPCServiceClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef214 (    0x7c) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<createXPCServiceDisplayGUIControl()::$_5&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef290 (   0x124) invocation function for block in createXPCServiceDisplayGUIControl()::$_5::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef3b4 (    0x7c) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<createXPCServiceDisplayBrightnessControl()::$_4&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef430 (   0x124) invocation function for block in createXPCServiceDisplayBrightnessControl()::$_4::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef554 (    0x7c) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<createXPCServiceDisplayPowerControl()::$_3&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef5d0 (   0x124) invocation function for block in createXPCServiceDisplayPowerControl()::$_3::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef6f4 (    0xd4) XPCServiceClient::serializeAndBroadcastXPCNotification(void const*, SLXPCClientType, SLSDisplayControlNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef7c8 (    0x94) XPCServiceClient::broadcastXPCNotification(SLDisplayStateDataType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef85c (    0xfc) XPCServiceClient::broadcastXPCNotification(SLSDisplayControlNotificationType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef958 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185bef970 (    0x78) IsValidConnectionForPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bef9e8 (    0x38) sysHotKeyChangedProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185befa20 (   0xc48) _CGXCreateApplication [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf0668 (   0x214) InstallLSNotificationIfNecessary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf087c (   0xa28) SetFrontProcessInternal(CGXSessionProcessData*, CPSProcessRec*, SLSEventRecord const*, unsigned int, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf12a4 (   0x420) WhackProcess(CGXSessionProcessData*, CPSProcessRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf16c4 (    0x8c) _BringNextApplicationToFrontInternal(CGXSessionProcessData*, CPSProcessRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf1750 (   0x200) _CGXRegisterForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf1950 (   0x4c8) special_hot_key_func(CGXConnection*, unsigned long long, SLSEventRecord const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf1e18 (   0x114) TerminateCurrentSpecialKeyModeAction(CGXSessionProcessData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf1f2c (   0x1b8) post_hot_key_event_to_owning_connection(CGXSessionProcessData*, unsigned int, CPSSpecialKeyID, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf20e4 (    0xc8) forceLogoutCallbackFunc(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf21ac (   0x158) killProcessCallbackFunc(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf2304 (    0x14) invocation function for block in killProcessCallbackFunc(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf2318 (    0xa8) getMenuBarOwnerProcessRec(CGXSessionProcessData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf23c0 (   0x9b0) bringNextProcessToFront [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf2d70 (    0x64) _FetchProcessRecFromWindow(CGXSessionProcessData*, unsigned int, CGXConnection* (*)(CGXWindow const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf2dd4 (    0xa4) CPXIsProcessPermittedToBeFrontmost [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf2e78 (   0x234) PostCGSEventToProcess(CPSProcessRec*, CGSEventType, unsigned short, unsigned short, unsigned int, int, CPSProcessSerNum, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf30ac (   0x324) showProcess(CGXSessionProcessData*, CPSProcessRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf33d0 (   0x1b0) sendServiceRequestToProcess(CGXSessionProcessData*, CPSProcessRec*, CPSServiceReqType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf3580 (    0xf0) CPXPostEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf3670 (  0x1174) CPXDispatchEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf47e4 (    0x84) FetchWindowTargetEventReceiverFromEvent(CGXSessionProcessData*, SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf4868 (    0xe8) DriveInternalForegroundSwitch(CGXSessionProcessData*, CPSProcessRec*, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf4950 (   0x1c8) hideOthers(CGXSessionProcessData*, CPSProcessRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf4b18 (   0x674) hideProcess(CGXSessionProcessData*, CPSProcessRec*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf518c (    0x40) __CPXDispatchEvent_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf51cc (   0x244) NormalDeathNotify(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5410 (    0xd8) __InstallLSNotificationIfNecessary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf54e8 (   0x130) __InstallLSNotificationIfNecessary_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5618 (    0x2c) invocation function for block in _LSNotificationQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5644 (    0x78) CPXGetFrontProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf56bc (   0x170) CPXSetFrontProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf582c (    0x94) CPXIsProcessPermittedToReorderFrontWhileInactive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf58c0 (    0x70) _CGXSetFrontProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5930 (   0x4dc) isProcessEligibleForSetFront(unsigned int, CPSProcessSerNum, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5e0c (    0x7c) CPXCopyConnectionApplicationInformationItem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5e88 (    0x68) isInformationItemTrue(unsigned int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5ef0 (    0x8c) isProcessInPermittedFrontApplications(CPSProcessRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5f7c (    0x74) doesFrontProcessOrCurrentKeyThiefHaveSecureTextEnabled() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf5ff0 (    0xec) CPXGetFrontProcessesConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf60dc (   0x104) numberOfWindowsPresentedByConnection(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf61e0 (    0x40) isAncestorFrontmost(int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6220 (    0xa8) CFStringLongestCommonPrefix(__CFString const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf62c8 (    0x78) getParentPID(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6340 (    0x2c) invocation function for block in numberOfWindowsPresentedByConnection(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf636c (    0x54) CPXGetConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf63c0 (    0x78) SLCFMoveValueForKeyIfExists(__CFDictionary const*, __CFDictionary*, __CFString const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6438 (    0x44) CPXGetProcessPid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf647c (    0x7c) decodeEventRecordForPostTo(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf64f8 (   0x170) CPXPostEventToProcessOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6668 (    0x64) CPXGetWindowEventReceiver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf66cc (    0x64) CPXGetWindowPresenter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6730 (    0x98) CPXFilterEventOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf67c8 (    0xb8) CPXGetProcessName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6880 (    0x54) CPXGetConnectionPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf68d4 (    0x58) processDidDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf692c (    0x88) processWillDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf69b4 (   0x188) processDidCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6b3c (    0x30) processWillCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6b6c (    0xb4) CPXIsProcessPermittedInFSSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6c20 (    0x90) CPXIsForegroundAppConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6cb0 (   0x1a8) DetermineHomogenousCoordinates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf6e58 (   0x2e8) evaluate_for_detached_only_render(CGXWindow*, WS::Updater::UpdateState&, WSCALayerBacking*, WS::CAWindowContent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf7140 (   0x27c) std::__1::__wrap_iter<WS::Updater::PerDisplayPrepData*> std::__1::vector<WS::Updater::PerDisplayPrepData, std::__1::allocator<WS::Updater::PerDisplayPrepData>>::emplace<std::__1::shared_ptr<WS::Displays::Display>>(std::__1::__wrap_iter<WS::Updater::PerDisplayPrepData const*>, std::__1::shared_ptr<WS::Displays::Display>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf73bc (    0x84) WS::Updater::PerDisplayPrepData* std::__1::construct_at[abi:v160006]<WS::Updater::PerDisplayPrepData, std::__1::shared_ptr<WS::Displays::Display>, WS::Updater::PerDisplayPrepData*>(WS::Updater::PerDisplayPrepData*, std::__1::shared_ptr<WS::Displays::Display>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf7440 (    0x90) std::__1::vector<WS::Updater::PerDisplayPrepData, std::__1::allocator<WS::Updater::PerDisplayPrepData>>::__move_range(WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf74d0 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Updater::PerDisplayPrepData>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Updater::PerDisplayPrepData>>(std::__1::allocator<WS::Updater::PerDisplayPrepData>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf751c (    0xdc) std::__1::vector<WS::Updater::PerDisplayPrepData, std::__1::allocator<WS::Updater::PerDisplayPrepData>>::__swap_out_circular_buffer(std::__1::__split_buffer<WS::Updater::PerDisplayPrepData, std::__1::allocator<WS::Updater::PerDisplayPrepData>&>&, WS::Updater::PerDisplayPrepData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf75f8 (    0x50) std::__1::__split_buffer<WS::Updater::PerDisplayPrepData, std::__1::allocator<WS::Updater::PerDisplayPrepData>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf7648 (    0x60) std::__1::pair<WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__move_loop<std::__1::_ClassicAlgPolicy>, std::__1::__move_trivial>, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, 0>(WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf76a8 (    0x60) std::__1::pair<WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>, std::__1::__move_backward_trivial>, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, 0>(WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*, WS::Updater::PerDisplayPrepData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf7708 (   0x124) WSWindowCanDetach(CGXWindow*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf782c (   0x7ac) MetalCompositeCoreAnimation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf7fd8 (    0x44) -[PKGSpaceWindowManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf801c (   0x1a0) -[PKGSpaceWindowManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf81bc (   0x2d0) _notifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf848c (    0x58) -[PKGSpaceWindowManager beginTransaction] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf84e4 (    0xdc) -[PKGSpaceWindowManager commitTransaction] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf85c0 (    0x94) PKGSpaceWindowManagerBeginBatchReassociateWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8654 (    0x8c) PKGSpaceWindowManagerFinishBatchReassociateWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf86e0 (   0x210) __54-[PKGSpaceWindowManager finishBatchReassociateWindows]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf88f0 (     0x8) -[CGXConnectionBox setConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf88f8 (     0x8) -[CGXConnectionBox connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8900 (     0x8) -[CGXConnectionBox invalidateBackreference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8908 (    0x78) -[CGXConnectionBox initWithCGXConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8980 (   0x104) CGXWindowIsShadowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8a84 (    0x48) WSInvalidateWindowShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8acc (   0x264) _PKGFindCursorEventObserver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8d30 (   0x20c) _PKGScaleCursorGestureDetect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf8f3c (   0x124) _PKGScaleCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9060 (    0x70) _PKGScaleCursorCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90d0 (     0x8) CaptureSurface::SetIOSurfacePurgeOnRelease(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90d8 (     0x4) CaptureSurfaceSW::SetPurgeable(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90dc (     0x8) CaptureSurfaceSW::IsPurgeable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90e4 (    0x10) CaptureSurfaceSW::WorksWithCompositor(Compositor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90f4 (     0x4) CaptureSurface::PerformAcceleratorCleanup(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf90f8 (    0x1c) CaptureSurfaceSW::Height() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9114 (    0x1c) CaptureSurfaceSW::Width() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9130 (     0x8) CaptureSurfaceSW::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9138 (    0x7c) CaptureSurfaceSW::CompositorNativeBacking(WSCompositorType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf91b4 (     0x8) CaptureSurfaceSW::NativeBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf91bc (   0x130) CaptureSurfaceSW::Populate(CGXWindowSubArray, CGSRegionObject*, CGSRegionObject**, CGXRedrawOption, WSWindowTagBitMask, WSWindowTagBitMask, bool, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf92ec (     0x4) CaptureSurfaceSW::Populate(CGXWindow*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf92f0 (   0x130) CaptureSurfaceSW::Populate(WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9420 (    0x78) CaptureSurfaceSW::PrepareForPopulation(CGRect, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9498 (    0x5c) CaptureSurfaceSW::ReleaseResources() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf94f4 (    0x3c) CaptureSurfaceSW::~CaptureSurfaceSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9530 (    0x38) CaptureSurfaceSW::~CaptureSurfaceSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9568 (     0x8) CaptureSurfaceSW::UseIOSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9570 (     0x4) CaptureSurface::AddNativeBackingDebugDescriptionToFile(__sFILE*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9574 (    0x78) PKGWindowAnimationDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf95ec (    0x54) _PKGWindowAnimationList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9640 (     0x8) _PKGWindowAnimationWindowDidTerminate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9648 (    0x44) PKGWindowAnimationPop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf968c (    0xcc) PKGWindowAnimationCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9758 (   0x154) _SLSTransactionDecode_CGSSpaceIDArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf98ac (   0x360) PKGTransactionCommit(CGXConnection*, unsigned int, unsigned char*, unsigned int, void const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9c0c (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9c18 (    0x80) PKGTransactionSetDesktopEffectsCalculationIsEnabled(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9c98 (   0x118) PKGTransactionSetPluginRenderingIsUnrestrictedForWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9db0 (    0xf0) _PKGTransactionCheckWindowAccess(_PKGTransactionContext const*, unsigned int, int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bf9ea0 (   0x198) PKGTransactionDragWindowRelativeToMouse(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa038 (    0xec) PKGTransactionSetMenuBarOverrideMaximumReveal(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa124 (   0x260) PKGTransactionSystemStatusBarResetLayout(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa384 (   0x1e4) PKGTransactionSystemStatusBarSetLayoutIndex(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa568 (   0x18c) PKGTransactionRemoveWindowFromCaptureGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa6f4 (   0x290) PKGTransactionAddWindowToCaptureGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfa984 (   0x168) PKGTransactionSetWindowBoundsPath(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfaaec (   0x154) PKGTransactionSetWindowIsActiveOffscreen(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfac40 (   0x1f0) PKGTransactionBatchReassociateWindowsToSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfae30 (   0x154) PKGTransactionSetWindowShouldIgnoreHDR(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfaf84 (    0xec) PKGTransactionSetSystemSuppressOnAllWorkspaces(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb070 (   0x464) PKGTransactionSetWindowTags(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb4d4 (    0x30) PKGTransactionEnsureSpaceSwitchToActiveProcess(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb504 (   0x13c) PKGTransactionSpaceRebuildMenuBar(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb640 (   0x134) PKGTransactionSetWindowCreatesOverlayCompositingGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb774 (    0xfc) PKGTransactionSetWindowDesiredFilteringLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfb870 (   0x6d8) PKGTransactionSetWindowSystemShadowProperties(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfbf48 (   0x190) PKGTransactionSetWindowOverlayContext(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc0d8 (   0x120) PKGTransactionClearWindowSystemCornerRadius(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc1f8 (   0x1f0) PKGTransactionSetWindowSystemCornerRadius(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc3e8 (    0xdc) PKGTransactionClearWindowCornerRadius(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc4c4 (   0x194) PKGTransactionSetWindowCornerRadius(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc658 (   0x11c) PKGTransactionSafeOrderWindowGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc774 (   0x27c) PKGTransactionMoveWindowForServerSideDrag(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfc9f0 (   0x14c) PKGTransactionSetGlobalVisibleWindowList(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfcb3c (   0x570) PKGTransactionSetWindowResizeEventShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfd0ac (   0x2c4) PKGTransactionSystemStatusBarSetItemPrivacyIndicator(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfd370 (   0xb10) PKGTransactionSetMenuBars(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfde80 (   0x1d4) PKGTransactionSetMenuBarCompanionWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe054 (   0x248) PKGTransactionSpaceFinishedResizeForRect(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe29c (    0xcc) PKGTransactionRemoveSurface(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe368 (    0xf4) PKGTransactionSetSurfaceColorSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe45c (   0x140) PKGTransactionOrderWindowGroupFrontConditionally(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe59c (    0x20) PKGTransactionReorderWindows(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe5bc (    0x9c) PKGTransactionClearWindowOrderingGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe658 (    0xb0) PKGTransactionRemoveWindowFromWindowOrderingGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe708 (   0x120) PKGTransactionAddWindowToWindowOrderingGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe828 (    0x98) PKGTransactionClearWindowMovementGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe8c0 (    0xec) PKGTransactionRemoveWindowFromWindowMovementGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfe9ac (    0xf0) PKGTransactionAddWindowToWindowMovementGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfea9c (   0x1fc) PKGTransactionSetSurfaceLayerBackingOptions(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfec98 (    0x9c) PKGTransactionInvalidateWindowShadow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfed34 (   0x284) PKGTransactionSetChameleonOverrideColor(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bfefb8 (    0xd4) PKGTransactionSetWindowHasMainAppearance(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff08c (    0xd4) PKGTransactionSetWindowHasKeyAppearance(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff160 (   0x168) PKGTransactionSetWindowCursorRestrictionShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff2c8 (   0x12c) PKGTransactionSetWindowSpecialCommandRegion(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff3f4 (   0x12c) PKGTransactionSetWindowButtonRegion(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff520 (   0x12c) PKGTransactionSetWindowActivationRegion(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff64c (   0x12c) PKGTransactionSetWindowDragRegion(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bff778 (   0x3bc) PKGTransactionSetWindowCornerMask(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bffb34 (    0xd0) PKGTransactionSetWindowActiveShadowLegacy(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bffc04 (    0xdc) PKGTransactionSetWindowShadowProperties(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bffce0 (    0xd0) PKGTransactionSetWindowPrefersCurrentSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bffdb0 (   0x120) PKGTransactionSetWindowEventShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185bffed0 (   0x1c8) PKGTransactionMoveWindowOnMatchingDisplayChangedSeed(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00098 (   0x1f0) PKGTransactionSetWindowOriginRelativeToWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00288 (    0xdc) PKGTransactionSetSafeApertureOverride(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00364 (   0x448) PKGTransactionSetSafeApertureSpaceReveal(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c007ac (   0x120) PKGTransactionSystemStatusBarSetDropPriority(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c008cc (   0x25c) PKGTransactionSystemStatusBarSetSelectedContentFrame(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00b28 (    0x98) PKGTransactionSystemStatusBarUnregisterWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00bc0 (   0x170) PKGTransactionSystemStatusBarRegisterReplicantWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00d30 (   0x1d4) PKGTransactionSystemStatusBarRegisterSortedWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00f04 (     0x8) PKGTransactionSetBackdropChameleonContribution(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c00f0c (   0x15c) PKGTransactionSetChameleonUpdatesEnabled(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01068 (   0x13c) PKGTransactionSetSurfaceResolution(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c011a4 (    0xfc) PKGTransactionSetSurfaceOpacity(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c012a0 (   0x280) PKGTransactionSetSurfaceBounds(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01520 (   0x118) PKGTransactionOrderSurface(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01638 (   0x138) PKGTransactionBindSurface(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01770 (   0x160) PKGTransactionSetClientAdvisory(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c018d0 (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000185c018f8 (   0x10c) PKGTransactionPostNotification(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01a04 (    0x90) PKGTransactionOverrideAppSleepNotifications(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01a94 (   0x134) PKGTransactionSetWindowClipShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01bc8 (    0xe8) PKGTransactionUpdateRegion(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01cb0 (    0x50) PKGTransactionDeferWindowMoveEvents(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01d00 (    0xcc) PKGTransactionSetEventCapture(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01dcc (    0x68) PKGTransactionSetManagedDisplayIsAnimating(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01e34 (    0x9c) PKGTransactionSetManagedDisplayCurrentSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01ed0 (    0xcc) PKGTransactionSpaceTileMoveToSpaceAtIndex(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c01f9c (   0x1e0) PKGTransactionMoveWindowsToManagedSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0217c (    0x94) PKGTransactionDestroySpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02210 (    0x74) PKGTransactionResetSpaceMenuBar(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02284 (   0x2dc) PKGTransactionSetMenuBarBounds(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02560 (    0x2c) PKGTransactionClearMenuBarSystemOverrideAlphas(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0258c (    0xf0) PKGTransactionSetMenuBarSystemOverrideAlpha(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0267c (    0xa8) PKGTransactionWillSwitchSpaces(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02724 (    0xa0) PKGTransactionHideSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c027c4 (    0xa0) PKGTransactionShowSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02864 (   0x114) PKGTransactionSetSpaceAlpha(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02978 (   0x10c) PKGTransactionSetSpaceOrderingWeight(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02a84 (    0xa0) PKGTransactionSetSpaceAbsoluteLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02b24 (   0x11c) PKGTransactionSetSpaceShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02c40 (   0x35c) PKGTransactionSetSpaceTransform(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c02f9c (   0x118) PKGTransactionAddWindowToSpaceAndRemoveFromSpaces(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c030b4 (   0x108) PKGTransactionRemoveWindowFromSpaces(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c031bc (    0xd0) PKGTransactionRemoveWindowFromSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0328c (   0x108) PKGTransactionAddWindowToSpace(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03394 (   0x10c) PKGTransactionResetWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c034a0 (    0x60) invocation function for block in PKGTransactionResetWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03500 (   0x1a4) PKGTransactionMoveWindowWithGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c036a4 (    0xb0) PKGTransactionClearWindowSystemLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03754 (    0xec) PKGTransactionSetWindowSystemLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03840 (    0xf0) PKGTransactionClearWindowLockedBounds(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03930 (   0x2b4) PKGTransactionSetWindowLockedBounds(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03be4 (   0x1c4) PKGTransactionSetWindowWarp(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c03da8 (   0x828) PKGTransactionSetWindowTransform3D(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c045d0 (   0x3b0) PKGTransactionSetWindowTransform(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04980 (   0x13c) PKGTransactionSetWindowSystemAlpha(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04abc (    0xc4) PKGTransactionResetWindowSubLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04b80 (    0xcc) PKGTransactionSetWindowSubLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04c4c (   0x154) PKGTransactionSetWindowShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04da0 (   0x120) PKGTransactionSetWindowResolution(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04ec0 (    0xd0) PKGTransactionSetWindowReleasesBackingOnOrderOut(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c04f90 (   0x1f0) PKGTransactionSetWindowProperty(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05180 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c05190 (   0x124) PKGTransactionSetWindowOpaqueShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c052b4 (    0xcc) PKGTransactionSetWindowLevel(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05380 (   0x134) PKGTransactionSetWindowGlobalClipShape(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c054b4 (   0x138) PKGTransactionSetWindowBrightness(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c055ec (   0x198) PKGTransactionSetWindowAlpha(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05784 (   0x10c) PKGTransactionOrderWindowGroup(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05890 (   0x10c) PKGTransactionOrderWindow(_PKGTransactionContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0599c (     0x8) ___CGXTransactionSetCompletionSemaphore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c059a4 (    0xfc) PKGTransactionDecodeCAPayload [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05aa0 (    0xec) SLSSpinControlSetNotificationPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05b8c (   0x154) SLSSpinControlDecodeMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05ce0 (   0x1a8) SLSessionOwnerCreateNewSessionWithAuditSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c05e88 (   0x210) __SLSessionOwnerCreateNewSessionWithAuditSessionID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06098 (   0x17c) SLSFindSessionAuditSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06214 (     0xc) SLSSessionCreateSessionIDWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06220 (    0x18) SLSSessionCreateLoginSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06238 (     0x4) SLSSessionReleaseSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0623c (     0x4) SLSSessionSwitchToSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06240 (   0x15c) SLSSessionSwitchToAuditSessionIDWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0639c (     0x8) SLSSessionSwitchToAuditSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c063a4 (   0x210) SLSSessionSetCurrentSessionProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c065b4 (     0x4) SLSSessionCopyCurrentSessionProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c065b8 (     0x4) SLSSessionCopyAllSessionProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c065bc (   0x1cc) SLSSessionCopyCurrentSessionReadOnceData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06788 (   0x120) SLSSessionSetCurrentSessionWorkspaceLaunchPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c068a8 (   0x174) __SLSSessionSetCurrentSessionWorkspaceLaunchPath_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06a1c (    0xb0) SLSSessionSetCurrentSessionWorkspaceApplicationBindings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06acc (   0x174) __SLSSessionSetCurrentSessionWorkspaceApplicationBindings_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06c40 (    0xb0) SLSSessionSetCurrentSessionWorkspacePreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06cf0 (   0x174) __SLSSessionSetCurrentSessionWorkspacePreferences_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c06e64 (   0x1c0) SLSSessionSetCurrentSessionWorkspaceNotificationConnectionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07024 (    0xa0) SLSSessionIDGetFullScreenAppPid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c070c4 (   0x108) SLSSessionIDSetScreenLockWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c071cc (   0x110) SLSSessionIDSetSleepWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c072dc (   0x2f4) SLSCreateCinematicBootWindowArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c075d0 (   0x19c) SLSWasBootApplePreserved [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0776c (   0x190) SLSSessionHasExcludeShapes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c078fc (    0x88) SLSCreateSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07984 (   0x118) SLSCreateSessionWithDataAndOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07a9c (    0xf8) SLSCreateSessionWithDataAndVisibility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07b94 (    0x6c) SLSCreateLoginSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07c00 (    0xcc) SLSCreateLoginSessionWithDataAndVisibility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07ccc (    0x1c) SLSReleaseSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07ce8 (    0x1c) SLSSwitchConsoleToSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d04 (    0x1c) SLSSetDictionaryForCurrentSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d20 (     0x4) SLSCopyCurrentSessionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d24 (     0x4) SLSCopySessionList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d28 (    0x40) SLSUpdateCurrentSessionWorkspaceData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d68 (    0x1c) SLSSessionSetApplicationBindingsForWorkspaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07d84 (    0x1c) SLSSessionSetPreferencesForWorkspaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07da0 (    0x24) SLSSessionSetNotificationConnectionForWorkspaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07dc4 (    0x70) SLSSessionFullScreenAppPid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07e34 (   0x100) SLSSetSessionSwitchCubeAnimation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c07f34 (   0x23c) SLSConsoleSetUpdatesAllowed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08170 (   0x218) SLSInitialConfigurationWasDeferred [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08388 (   0x190) SLSPerformDeferredConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08518 (   0x190) SLSGetSessionUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086a8 (     0x8) -[SLDataTimelineConfig sampleIntervals] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086b0 (     0x8) -[SLDataTimelineConfig reportIntervals] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086b8 (     0x8) -[SLDataTimelineConfig infoOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086c0 (     0x8) -[SLDataTimelineConfig connectionQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086c8 (     0x8) -[SLDataTimelineConfig setUpdateBlockQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086d0 (     0x8) -[SLDataTimelineConfig updateBlockQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086d8 (     0x8) -[SLDataTimelineConfig updateBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086e0 (     0x8) -[SLDataTimelineConfig name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c086e8 (   0x220) -[SLDataTimelineConfig establishConnectionWithResultBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08908 (    0xa0) __59-[SLDataTimelineConfig establishConnectionWithResultBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c089a8 (   0x124) __59-[SLDataTimelineConfig establishConnectionWithResultBlock:]_block_invoke.34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08acc (    0x44) __destroy_helper_block_e8_32o40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b10 (    0x50) __copy_helper_block_e8_32o40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b60 (     0x8) -[SLDataTimelineConnection setUpdateBlockEnqueued:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b68 (     0x8) -[SLDataTimelineConnection updateBlockEnqueued] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b70 (     0x8) -[SLDataTimelineConnection updateBlockQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b78 (     0x8) -[SLDataTimelineConnection updateBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b80 (     0x8) -[SLDataTimelineConnection setErrorHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b88 (     0x8) -[SLDataTimelineConnection errorHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b90 (     0x8) -[SLDataTimelineConnection connectionQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08b98 (     0x8) -[SLDataTimelineConnection setConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08ba0 (     0x8) -[SLDataTimelineConnection connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08ba8 (     0x8) -[SLDataTimelineConnection setConnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08bb0 (     0x8) -[SLDataTimelineConnection connected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08bb8 (     0x8) -[SLDataTimelineConnection setCollection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08bc0 (     0x8) -[SLDataTimelineConnection collection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08bc8 (     0x8) -[SLDataTimelineConnection name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08bd0 (   0x124) -[SLDataTimelineConnection addSnapshots:forAction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08cf4 (    0x10) __51-[SLDataTimelineConnection addSnapshots:forAction:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08d04 (   0x118) -[SLDataTimelineConnection announceSnapshotsForAction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e1c (     0x8) -[SLDataTimelineUpdate setCollectionClaimed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e24 (     0x8) -[SLDataTimelineUpdate collectionClaimed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e2c (     0x8) -[SLDataTimelineUpdate collection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e34 (     0x8) -[SLDataTimelineUpdate connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e3c (     0x8) -[SLDataTimelineUpdate action] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08e44 (    0x5c) -[SLDataTimelineUpdate claimSnapshotCollection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08ea0 (    0x80) -[SLDataTimelineUpdate dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08f20 (    0xac) -[SLDataTimelineUpdate initWithConnection:collection:action:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08fcc (     0x8) -[SLDataTimelineUpdate newestSnapshotTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08fd4 (     0x8) -[SLDataTimelineUpdate oldestSnapshotTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08fdc (     0x8) -[SLDataTimelineUpdate newestSnapshotIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08fe4 (     0x8) -[SLDataTimelineUpdate oldestSnapshotIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08fec (     0x8) -[SLDataTimelineUpdate snapshotCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c08ff4 (    0x54) +[SLDataTimelineUpdate updateWithConnection:collection:action:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09048 (     0x8) -[SLDataTimelineSnapshotCollection snapshotsArray] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09050 (    0xa8) -[SLDataTimelineSnapshotCollection snapshotsApplyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c090f8 (    0x10) __56-[SLDataTimelineSnapshotCollection snapshotsApplyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09108 (    0xc0) -[SLDataTimelineSnapshotCollection createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c091c8 (    0x5c) __51-[SLDataTimelineSnapshotCollection createXPCObject]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09224 (    0x78) -[SLDataTimelineSnapshotCollection dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0929c (    0x88) -[SLDataTimelineSnapshotCollection init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09324 (    0x6c) -[SLDataTimelineSnapshotCollection mergeInNewSnapshots:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09390 (    0x44) __56-[SLDataTimelineSnapshotCollection mergeInNewSnapshots:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c093d4 (    0x2c) -[SLDataTimelineSnapshotCollection newestSnapshotTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09400 (    0x2c) -[SLDataTimelineSnapshotCollection oldestSnapshotTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0942c (    0x2c) -[SLDataTimelineSnapshotCollection newestSnapshotIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09458 (    0x2c) -[SLDataTimelineSnapshotCollection oldestSnapshotIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09484 (    0x28) -[SLDataTimelineSnapshotCollection snapshotCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c094ac (     0x4) -[SLDataTimelineSnapshotCollection snapshots] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c094b0 (    0xe0) +[SLDataTimelineSnapshotCollection snapshotArrayFromXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09590 (    0x40) __63+[SLDataTimelineSnapshotCollection snapshotArrayFromXPCObject:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c095d0 (     0x8) -[SLDataTimelineServerSnapshotEntry sessionsArray] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c095d8 (     0x8) -[SLDataTimelineServerSnapshotEntry index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c095e0 (     0x8) -[SLDataTimelineServerSnapshotEntry timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c095e8 (    0xa8) -[SLDataTimelineServerSnapshotEntry sessionsApplyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09690 (    0x10) __56-[SLDataTimelineServerSnapshotEntry sessionsApplyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c096a0 (   0x12c) -[SLDataTimelineServerSnapshotEntry createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c097cc (    0x5c) __52-[SLDataTimelineServerSnapshotEntry createXPCObject]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09828 (    0x78) -[SLDataTimelineServerSnapshotEntry dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c098a0 (   0x168) -[SLDataTimelineServerSnapshotEntry initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09a08 (    0x40) __55-[SLDataTimelineServerSnapshotEntry initWithXPCObject:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09a48 (     0x8) -[SLDataTimelineSessionEntry auditID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09a50 (     0x8) -[SLDataTimelineSessionEntry cgID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09a58 (    0x70) -[SLDataTimelineSessionEntry createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09ac8 (   0x174) -[SLDataTimelineSessionEntry initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09c3c (    0x64) -[SLDataTimelineSessionPlaceholderEntry createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09ca0 (    0x64) -[SLDataTimelineSessionPlaceholderEntry initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d04 (     0x8) -[SLDataTimelineSessionPlaceholderEntry processData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d0c (     0x8) -[SLDataTimelineSessionPlaceholderEntry currentSnapshotMember] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d14 (    0x3c) +[SLDataTimelineSessionPlaceholderEntry entryWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d50 (    0x3c) +[SLDataTimelineSessionEntry entryWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d8c (    0x10) -[SLDataTimelineSessionSnapshotEntry processesArray] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09d9c (    0x10) -[SLDataTimelineSessionSnapshotEntry foregroundAppPID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09dac (    0x10) -[SLDataTimelineSessionSnapshotEntry sessionSnapshotIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09dbc (    0x10) -[SLDataTimelineSessionSnapshotEntry sessionSnapshotTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09dcc (    0xa8) -[SLDataTimelineSessionSnapshotEntry processesApplyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09e74 (    0x10) __58-[SLDataTimelineSessionSnapshotEntry processesApplyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09e84 (   0x154) -[SLDataTimelineSessionSnapshotEntry createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c09fd8 (    0x5c) __53-[SLDataTimelineSessionSnapshotEntry createXPCObject]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a034 (    0x80) -[SLDataTimelineSessionSnapshotEntry dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a0b4 (   0x19c) -[SLDataTimelineSessionSnapshotEntry initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a250 (    0x40) __56-[SLDataTimelineSessionSnapshotEntry initWithXPCObject:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a290 (     0x8) -[SLDataTimelineProcessEntry pid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a298 (    0xc4) -[SLDataTimelineProcessEntry createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a35c (   0x124) -[SLDataTimelineProcessEntry initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a480 (    0x6c) __48-[SLDataTimelineProcessEntry initWithXPCObject:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a4ec (     0x8) -[SLDataTimelineProcessEntry onScreenVisible] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a4f4 (     0x8) -[SLDataTimelineProcessEntry onScreenOccluded] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a4fc (     0x8) -[SLDataTimelineProcessEntry offScreen] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a504 (     0x8) -[SLDataTimelineProcessEntry orderedOut] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a50c (     0x4) -[SLDataTimelineProcessEntry windowData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a510 (    0x3c) +[SLDataTimelineProcessEntry entryWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a54c (     0x4) -[SLDataTimelineSessionSnapshotEntry processData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a550 (     0x8) -[SLDataTimelineSessionSnapshotEntry currentSnapshotMember] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a558 (     0x4) -[SLDataTimelineSessionSnapshotEntry processes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a55c (    0x3c) +[SLDataTimelineSessionSnapshotEntry entryWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a598 (     0x8) -[SLDataTimelineSessionEntry processData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a5a0 (    0x38) -[SLDataTimelineSessionEntry currentSnapshotMember] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a5d8 (     0x4) -[SLDataTimelineServerSnapshotEntry sessions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a5dc (    0x3c) +[SLDataTimelineServerSnapshotEntry entryWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a618 (    0xf0) -[SLDataTimelineConnection close] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a708 (     0xc) __33-[SLDataTimelineConnection close]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a714 (   0x21c) -[SLDataTimelineConnection handleMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a930 (    0xb0) -[SLDataTimelineConnection dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0a9e0 (   0x188) -[SLDataTimelineConnection initWithConnection:config:andErrorHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ab68 (     0xc) __70-[SLDataTimelineConnection initWithConnection:config:andErrorHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ab74 (    0x54) +[SLDataTimelineConnection connectionWithConnection:config:andErrorHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0abc8 (    0x14) __59-[SLDataTimelineConfig establishConnectionWithResultBlock:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0abdc (   0x3f8) -[SLDataTimelineConfig createXPCObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0afd4 (   0x4e4) -[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b4b8 (    0x10) __Block_byref_object_copy_.2837 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b4c8 (     0xc) __Block_byref_object_dispose_.2838 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b4d4 (    0x58) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b52c (    0x18) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b544 (    0x58) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke.22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b59c (    0x50) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_2.23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b5ec (    0x4c) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b638 (    0x10) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b648 (    0x6c) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b6b4 (    0x58) __82-[SLDataTimelineConfig createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b70c (    0x50) __destroy_helper_block_e8_32b40b48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b75c (    0x60) __copy_helper_block_e8_32b40b48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b7bc (   0x1a8) -[SLDataTimelineConfig createCancellableMachRecvSourceWithQueue:cancelAction:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b964 (    0x74) __84-[SLDataTimelineConfig createCancellableMachRecvSourceWithQueue:cancelAction:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0b9d8 (    0xfc) -[SLDataTimelineConfig requestSampleIntervalValue:forKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bad4 (    0x48) __getValidDataTimelineSampleIntervalKeySet_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bb1c (    0xfc) -[SLDataTimelineConfig requestReportIntervalValue:forKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bc18 (    0x54) __getValidDataTimelineReportIntervalKeySet_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bc6c (    0xa8) -[SLDataTimelineConfig addInfoOption:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bd14 (    0x40) __getValidDataTimelineInfoOptionSet_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bd54 (     0x4) -[SLDataTimelineConfig setTargetQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bd58 (    0xac) -[SLDataTimelineConfig dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0be04 (   0x11c) -[SLDataTimelineConfig initWithName:andUpdateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bf20 (    0x44) +[SLDataTimelineConfig configWithName:andUpdateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0bf64 (   0x448) PKGDidDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0c3ac (     0x4) PKGWillDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0c3b0 (   0x54c) PKGWillCreateSessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0c8fc (    0x7c) CGSWindowInvalidateCacheByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0c978 (    0x88) SLSGetSharedWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ca00 (    0xd0) SLSNewWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0cad0 (   0x74c) SLSNewWindowWithOpaqueShapeAndContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d21c (    0xe8) SLSSetWindowOpaqueShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d304 (    0x24) SLSNewWindowWithOpaqueShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d328 (   0x134) SLSSetWindowLayerContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d45c (    0x4c) SLSReleaseWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d4a8 (    0x3c) SLSReleaseWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d4e4 (   0x194) SLSReleaseConnectionWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d678 (    0x24) __SLSReleaseConnectionWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d69c (     0x8) __SLSReleaseConnectionWindows_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d6a4 (   0x2a8) SLSMoveWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0d94c (   0x2b8) SLSMoveWindowListOnMatchingDisplayChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0dc04 (   0x168) SLSMoveWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0dd6c (   0x188) SLSMoveWindowOnMatchingDisplayChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0def4 (   0x2e8) SLSOrderWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e1dc (    0x64) SLSOrderWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e240 (   0x268) SLSOrderWindowListWithOperation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e4a8 (    0x60) SLSFlushWindowContentRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e508 (   0x170) SLSFlushWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e678 (    0x64) SLSGetWindowFlushSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e6dc (   0x11c) SLSSetWindowLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e7f8 (    0xf0) SLSGetWindowLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e8e8 (    0xec) SLSSetWindowSubLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0e9d4 (   0x1ac) SLSGetWindowSubLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0eb80 (   0x21c) SLSSetWindowListSystemLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ed9c (   0x12c) SLSFindWindowAndOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0eec8 (   0x100) SLSFindWindowByGeometry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0efc8 (    0x18) SLSFindWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0efe0 (   0x208) SLSGetSystemWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f1e8 (     0x8) SLSGetSystemBackgroundWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f1f0 (   0x128) SLSGetWindowListWithTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f318 (   0x1b8) SLSGetWindowCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f4d0 (   0x1e8) SLSGetWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f6b8 (   0x184) SLSGetOnScreenWindowCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f83c (    0xc4) SLSGetOnScreenWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0f900 (   0x210) SLSGetParentWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fb10 (    0x80) SLSWindowIsOrderedIn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fb90 (    0xdc) SLSWindowIsVisible [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fc6c (    0xf0) SLSSetWindowToReleaseBackingOnOrderOut [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fd5c (     0xc) SLSGetWindowAutofill [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fd68 (     0x8) SLSSetWindowAutofill [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0fd70 (   0x1cc) SLSSetWindowAutofillColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ff3c (    0x84) SLSGetWindowOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c0ffc0 (    0x84) SLSGetWindowEventReceiver [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10044 (    0x84) SLSGetWindowPresenter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c100c8 (   0x164) SLSSetWindowType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1022c (   0x1b8) SLSGetWindowType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c103e4 (   0x124) SLSSetWindowDepth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10508 (    0x78) SLSGetWindowDepth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10580 (    0x64) SLSGetWindowLayerContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c105e4 (    0xa4) SLSInvalidateWindowShadow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10688 (    0xa4) SLSWindowSetShadowProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1072c (    0xcc) __SLSWindowSetShadowProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c107f8 (    0xb4) SLSWindowSetActiveShadowLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c108ac (    0xe0) SLSSetWindowShadowParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1098c (    0xe0) SLSSetWindowShadowAndRimParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10a6c (    0xe8) SLSSetWindowShadowAndRimParametersWithStretch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10b54 (   0x1f4) SLSGetWindowShadowAndRimParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10d48 (     0x8) SLSSetWindowAlphaShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10d50 (     0x8) SLSCopyWindowAlphaShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10d58 (   0x1f0) SLSSetWindowCornerMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c10f48 (   0x1c4) __SLSSetWindowCornerMask_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1110c (   0x2b8) SLSCopyWindowCornerMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c113c4 (   0x1f0) SLSGetScreenRectForWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c115b4 (   0x100) SLSSetWindowClipShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c116b4 (   0x1f0) SLSCopyWindowClipShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c118a4 (   0x1a4) SLSSetWindowWarp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11a48 (     0x4) SLSSetWindowFiltering [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11a4c (   0x134) SLSSetWindowListBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11b80 (    0x84) SLSInitialEnableOfDisplayUpdates [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11c04 (    0x84) SLSSetWindowListAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11c88 (    0x60) SLSSetWindowAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11ce8 (    0xdc) SLSGetWindowAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11dc4 (   0x134) SLSSetWindowListSystemAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c11ef8 (   0x120) SLSSetWindowOpacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12018 (    0x60) SLSGetWindowOpacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12078 (   0x118) SLSSetWindowTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12190 (   0x118) SLSClearWindowTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c122a8 (    0x70) SLSSetWindowListTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12318 (    0x70) SLSClearWindowListTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12388 (   0x1e8) SLSGetWindowTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12570 (   0x250) SLSSetWindowProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c127c0 (   0x128) __SLSSetWindowProperty_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c128e8 (   0x2ac) SLSCopyWindowProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12b94 (    0x1c) SLSShapeWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12bb0 (   0x15c) shape_window_internal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12d0c (    0x24) SLSShapeWindowInWindowCoordinates [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12d30 (    0x1c) SLSSetWindowShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12d4c (    0x24) SLSSetWindowShapeInWindowCoordinates [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12d70 (    0x1c) SLSSetWindowShapeWithWeighting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12d8c (    0x24) SLSSetWindowShapeInWindowCoordinatesWithWeighting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12db0 (    0x9c) SLSSetWindowEventShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12e4c (    0xd0) __SLSSetWindowEventShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c12f1c (   0x114) SLSCopyWindowShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13030 (   0x1f4) SLSCopySpecifiedWindowShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13224 (     0x8) SLSGetWindowBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1322c (   0x3f0) GetWindowBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1361c (    0xb8) SLSGetWindowSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c136d4 (   0x214) SLSGetWindowFrameBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c138e8 (     0x8) SLSGetOnscreenWindowBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c138f0 (   0x160) SLSSetWindowSharingState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13a50 (    0x8c) SLSGetWindowSharingState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13adc (    0x18) SLSAddStructuralRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13af4 (   0x314) add_structural_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13e08 (    0xd8) __add_structural_region_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13ee0 (    0x18) SLSAddTrackingRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13ef8 (    0x20) SLSRemoteContextAddStructuralRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13f18 (    0x20) SLSRemoteContextAddTrackingRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13f38 (    0x20) SLSRemoteContextAddNativeSpaceTrackingRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13f58 (    0xa0) SLSRemoveStructuralRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c13ff8 (    0xa0) SLSStructuralRegionSetShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14098 (    0xd4) __SLSStructuralRegionSetShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1416c (    0xbc) SLSStructuralRegionMove [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14228 (    0xa8) SLSStructuralRegionSetLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c142d0 (    0xa8) SLSStructuralRegionSetEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14378 (    0xb0) SLSStructuralRegionSetClippedByWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14428 (    0xf4) SLSStructuralRegionSetChildRegionTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1451c (    0xb0) SLSTrackingRegionSetIsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c145cc (    0xb0) SLSTrackingRegionSetRespectsSystemAlphaThreshold [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1467c (   0x12c) SLSTrackingRegionSetForceConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c147a8 (   0x1ac) __SLSTrackingRegionSetForceConfig_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14954 (   0x120) SLSSetGlobalForceConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14a74 (   0x1a4) __SLSSetGlobalForceConfig_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14c18 (   0x104) SLSSetTrackingAreaShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14d1c (   0x1b0) __SLSSetTrackingAreaShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c14ecc (   0x150) SLSAddTrackingArea [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1501c (    0xec) __SLSAddTrackingArea_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15108 (   0x19c) SLSAddTrackingAreas [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c152a4 (   0x12c) __SLSAddTrackingAreas_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c153d0 (   0x120) __SLSAddTrackingAreas_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c154f0 (    0xe0) __SLSAddTrackingAreas_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c155d0 (    0xd8) __SLSAddTrackingAreas_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c156a8 (   0x1e0) __SLSAddTrackingAreas_block_invoke_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15888 (    0x80) SLSAddTrackingRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15908 (    0x78) SLSSetTrackingAreaRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15980 (   0x1c8) SLSMoveTrackingArea [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15b48 (    0xf4) SLSRemoveTrackingArea [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15c3c (    0xe8) SLSRemoveAllTrackingAreas [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15d24 (   0x10c) SLSSetTrackingAreaEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15e30 (   0x10c) SLSSetTrackingAreaClip [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c15f3c (   0x158) SLSSetTrackingAreasEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16094 (   0x1f4) SLSRemoveTrackingAreas [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16288 (   0x234) SLSSetTrackingAreaOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c164bc (     0xc) SLSUniqueSurfaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c164c8 (   0x2f0) SLSAddSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c167b8 (   0x1d0) SLSSetSurfaceProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16988 (   0x1f8) __SLSSetSurfaceProperty_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16b80 (   0x1bc) SLSRemoveSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16d3c (   0x288) SLSRemoveAllSurfaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c16fc4 (   0x264) SLSBindSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c17228 (    0x6c) CGSWindowIsShimmed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c17294 (   0x2bc) SLSGetSurfaceBinding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c17550 (    0x80) surface_is_shimmable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c175d0 (   0x160) SLSMoveSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c17730 (   0x8b8) SLSOrderSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c17fe8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c17ff8 (     0x8) SLSFlushSurfaceWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18000 (   0x294) SLSFlushSurfaceWithOptionsAndIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18294 (   0x184) __SLSFlushSurfaceWithOptionsAndIndex_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18418 (     0xc) SLSFlushSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18424 (     0x4) SLSShapeSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18428 (   0x10c) SLSSetSurfaceBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18534 (   0x294) SLSGetSurfaceBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c187c8 (   0x1ec) SLSSetSurfaceShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c189b4 (    0xd0) __SLSSetSurfaceShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18a84 (   0x1b8) SLSGetSurfaceCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18c3c (   0x230) SLSGetSurfaceList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18e6c (    0xc0) SLSSetSurfaceOpacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c18f2c (   0x1c0) SLSGetSurfaceOpacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c190ec (    0xcc) SLSSetSurfaceLayerBackingOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c191b8 (   0x1c0) SLSGetSurfaceFrontBufferID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19378 (    0xac) SLSLockWindowVisibleRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19424 (    0x6c) check_connection_and_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19490 (    0x20) __get_empty_region_singleton_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c194b0 (    0x98) __deprecated_window_type_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19548 (    0x64) SLSUnlockWindowVisibleRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c195ac (    0x74) SLSWindowVisibleRegionSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19620 (    0x74) SLSWindowDirtyRegionSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19694 (    0xfc) SLSLockWindowBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19790 (   0x1d8) SLSAccessWindowBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19968 (    0xb4) SLSUnlockWindowBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19a1c (    0x7c) SLSUnlockWindowRectBits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19a98 (   0x108) SLSLockWindowRectBits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19ba0 (   0x100) SLSUnlockWindowBits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19ca0 (    0x18) SLSLockWindowBits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19cb8 (    0xc4) SLSGetWindowGeometry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19d7c (   0x1d8) SLSRequestNotificationsForWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19f54 (    0x48) SLSIsZoomed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19f9c (    0x10) SLSZoomPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c19fac (   0x1b0) doZoomTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a15c (   0x1f8) SLSGetZoomParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a354 (   0x210) SLSGetZoomParametersForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a564 (   0x1b4) SLSSetZoomParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a718 (   0x1d4) SLSSetZoomParametersForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a8ec (   0x104) SLSSetWindowParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1a9f0 (   0x1a0) SLSGetWorkspace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ab90 (    0x10) SLSGetWindowWorkspaceIgnoringVisibility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1aba0 (   0x1c0) SLSGetWindowWorkspace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ad60 (   0x1fc) SLSSetWindowListWorkspace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1af5c (    0x58) SLSMoveWorkspaceWindowListWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1afb4 (    0x54) SLSMoveWorkspaceWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b008 (    0x90) SLSGetWorkspaceWindowCountWithOptionsAndTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b098 (    0x78) create_logic_pro_9_window_id_array [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b110 (   0x130) SLSGetWorkspaceWindowListWithOptionsAndTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b240 (   0x24c) SLSGetWorkspaceWindowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b48c (   0x21c) SLSWindowScrollRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b6a8 (   0x1d8) SLSNewTransition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1b880 (   0x188) SLSInvokeTransition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ba08 (   0x178) SLSReleaseTransition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1bb80 (   0x144) SLSSetWindowTransformAtPlacement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1bcc4 (   0x2b0) SLSSetWindowTransformsAtPlacement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1bf74 (   0x110) SLSGetWindowTransformAtPlacement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c084 (   0x14c) SLSWindowListSetLockedBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c1d0 (    0xa4) SLSReleaseCIFilter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c274 (    0x9c) SLSNewCIFilter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c310 (    0x9c) SLSSetCIFilterValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c3ac (    0xb4) SLSNewCIFilterByName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c460 (   0x1cc) __SLSNewCIFilterByName_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c62c (    0xa8) SLSSetCIFilterValuesFromDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c6d4 (    0xd0) __SLSSetCIFilterValuesFromDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c7a4 (    0xc4) SLSAddWindowFilter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c868 (    0xac) SLSRemoveWindowFilter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c914 (    0xb8) SLSSetWindowBackgroundBlurRadius [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1c9cc (    0x54) SLSSetWindowBackgroundBlurRadiusStyle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ca20 (    0xc8) SLSSetWindowBackgroundBlurRadiusWithOpacityHint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1cae8 (     0x8) SLSCreateShadowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1caf0 (     0x8) SLSSetWindowShadowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1caf8 (     0x8) SLSInvalidateGroupedWindowShadow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1cb00 (   0x1d4) SLSSetWindowListGlobalClipShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ccd4 (   0x134) __SLSSetWindowListGlobalClipShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ce08 (    0x94) SLSTranslatePointForWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ce9c (   0x128) SLSGetCatenatedWindowTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1cfc4 (     0x8) SLSSetWindowAccelerationState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1cfcc (    0x10) SLSGetWindowAccelerationCapability [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1cfdc (   0x1f4) SLSCreateLayerContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d1d0 (    0xc0) SLSSetMagicZoom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d290 (   0x248) __SLSSetMagicZoom_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d4d8 (   0x310) SLSGetMagicZoomState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d7e8 (     0x4) SLSToggleDisplayZoom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d7ec (   0x18c) SLSSetZoomDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1d978 (   0x190) SLSGetZoomDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1db08 (   0x178) SLSIsZoomDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1dc80 (     0x4) SLSIsAccessibilityDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1dc84 (   0x1b0) SLSGetMagicZoomWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1de34 (   0x12c) SLSSetWindowColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1df60 (    0x68) SLSCopyWindowColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1dfc8 (   0x118) SLSSetSurfaceColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e0e0 (   0x210) SLSCopySurfaceColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e2f0 (    0x84) SLSSetWindowResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e374 (    0x68) SLSGetWindowResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e3dc (   0x1ac) SLSSetSurfaceResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e588 (   0x2f0) SLSGetSurfaceResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e878 (     0x8) SLSSetSurfaceBackgroundBlur [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1e880 (   0x218) SLSSetSurfaceListAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ea98 (    0xa0) SLSSetWindowListFadeProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1eb38 (   0x148) __SLSSetWindowListFadeProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ec80 (     0x4) SLSWindowSetKeepsExcessBackingAllocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ec84 (     0x8) SLSServerMightHaveAcceleration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ec8c (     0x4) SLSSetWindowActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ec90 (    0xec) SLSSetWindowEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ed7c (   0x1c4) SLSGetWindowEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ef40 (    0xa8) SLSSetMouseEventEnableFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1efe8 (    0xa4) SLSSetMouseFocusWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f08c (    0x9c) SLSGetWindowMouseLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f128 (    0x14) SLSSetWindowTransforms [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f13c (    0x68) SLSSetWindowTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f1a4 (    0x10) SLSGetWindowTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f1b4 (   0x1d4) SLSCopyWindowRoutingRecordsForScreenLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f388 (    0xe4) SLSInstallRemoteContextNotificationHandlerV2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f46c (    0x70) __SLSInstallRemoteContextNotificationHandlerV2_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f4dc (   0x198) remote_context_notify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f674 (    0x90) __remote_context_notify_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f704 (    0x18) __remote_context_notify_block_invoke.137 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f71c (     0x8) cf_block_release_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f724 (    0x98) SLSInstallRemoteContextNotificationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f7bc (    0x20) __SLSInstallRemoteContextNotificationHandler_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f7dc (    0xdc) SLSRemoveRemoteContextNotificationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f8b8 (    0x6c) __SLSRemoveRemoteContextNotificationHandler_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f924 (     0x4) SLSWindowSetResizeRegionShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1f928 (   0x12c) SLSWindowIsOnCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fa54 (    0xac) SLSWindowGetBestSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fb00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c1fb10 (    0x80) SLSGetSpaceBindings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fb90 (    0xa0) SLSSetWindowCursorRestrictionShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fc30 (    0xcc) __SLSSetWindowCursorRestrictionShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fcfc (   0x1c4) SLSValidateUnobscuredLayerSecurityToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1fec0 (    0xb4) SLSWindowSetTrustedForObscuring [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c1ff74 (    0xb4) SLSSetWindowPrefersCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20028 (   0x190) SLSChameleonOverrideColorGetSRGBColorComponents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c201b8 (   0x1b0) SLSSetChameleonOverrideColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20368 (   0x128) SLSSetChameleonParentWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20490 (     0x4) SLSWindowSetBackdropBackgroundBleed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20494 (   0x1d4) SLSGetWindowBackingStoreOverrideResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20668 (   0x18c) SLSSetWindowBackingStoreOverrideResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c207f4 (   0x218) SLSGetWindowBackingStorePixelDimensionsHint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20a0c (   0x184) SLSSetWindowBackingStorePixelDimensionsHint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20b90 (   0x104) clear_capture_state(CGXCaptureState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20c94 (    0x2c) release_capture_surface(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20cc0 (    0x60) capturePortDeathHandler(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20d20 (    0xc4) performCapturePass(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c20de4 (   0x27c) runCapturePass(CGXCaptureState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c21060 (   0x2bc) do_finish_and_clear_capture_state(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2131c (  0x16dc) capture_stream_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c229f8 (   0x1dc) unsigned long std::__1::__hash_table<WSCaptureStream*, std::__1::hash<WSCaptureStream*>, std::__1::equal_to<WSCaptureStream*>, std::__1::allocator<WSCaptureStream*>>::__erase_unique<WSCaptureStream*>(WSCaptureStream* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c22bd4 (   0x3fc) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<WSCaptureStream*, void*>*>, bool> std::__1::__hash_table<WSCaptureStream*, std::__1::hash<WSCaptureStream*>, std::__1::equal_to<WSCaptureStream*>, std::__1::allocator<WSCaptureStream*>>::__emplace_unique_key_args<WSCaptureStream*, WSCaptureStream* const&>(WSCaptureStream* const&, WSCaptureStream* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c22fd0 (    0xa4) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c23074 (   0x870) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, capture_stream_update()::$_2&, unsigned int*>(unsigned int*, unsigned int*, capture_stream_update()::$_2&, std::__1::iterator_traits<unsigned int*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c238e4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c238fc (   0x314) WS::Capture::best_display_for_capture(unsigned int const*, unsigned int, CGRect const&, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c23c10 (   0x414) WSCaptureCreateIOSurfaceMachPortForWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c24024 (   0x1cc) WSCaptureStreamStatusUpdate(WSCaptureStream*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c241f0 (     0xc) invocation function for block in capture_stream_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c241fc (  0x144c) WS::Capture::create_iosurface_for_window_list(CGXConnection*, unsigned int*, unsigned int, unsigned int, unsigned int, CGRect const&, CGColorSpace*, bool, bool, bool*, int, WSMatrix, CGSize, float vector[4], bool, CGRect, CGRect, WS::Capture::SurfacePool*, double*, CGRect*, double*, WSCaptureStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25648 (    0x38) WSWindowIsDefaultScreenCapturableByConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25680 (    0x68) std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>::vector(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c256e8 (    0xf8) WSWindowCreateCaptureShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c257e0 (   0x3b8) invocation function for block in WS::Capture::create_iosurface_for_window_list(CGXConnection*, unsigned int*, unsigned int, unsigned int, unsigned int, CGRect const&, CGColorSpace*, bool, bool, bool*, int, WSMatrix, CGSize, float vector[4], bool, CGRect, CGRect, WS::Capture::SurfacePool*, double*, CGRect*, double*, WSCaptureStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25b98 (    0xa0) invocation function for block in WS::Capture::create_iosurface_for_window_list(CGXConnection*, unsigned int*, unsigned int, unsigned int, unsigned int, CGRect const&, CGColorSpace*, bool, bool, bool*, int, WSMatrix, CGSize, float vector[4], bool, CGRect, CGRect, WS::Capture::SurfacePool*, double*, CGRect*, double*, WSCaptureStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25c38 (    0x58) WS::Capture::SurfacePool::next_available_surface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25c90 (   0x1b0) WS::Capture::create_iosurface_for_capture_stream(CGSize const&, int, CGColorSpace*, WSMatrix) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25e40 (    0x44) __destroy_helper_block_8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25e84 (    0x50) __copy_helper_block_8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25ed4 (    0x40) std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c25f14 (   0x154) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, capture_stream_update()::$_2&, unsigned int*>(unsigned int*, unsigned int*, unsigned int*, capture_stream_update()::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26068 (   0x118) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, capture_stream_update()::$_2&, unsigned int*>(unsigned int*, unsigned int*, unsigned int*, unsigned int*, capture_stream_update()::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26180 (   0x160) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, capture_stream_update()::$_2&, unsigned int*>(unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, capture_stream_update()::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c262e0 (   0x1ec) bool std::__1::__insertion_sort_incomplete<capture_stream_update()::$_2&, unsigned int*>(unsigned int*, unsigned int*, capture_stream_update()::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c264cc (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c264e4 (    0x54) capture_stream_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26538 (    0x54) WSScheduleCaptureStreamUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2658c (   0x288) WSCaptureSetWindowExcludeShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26814 (   0x564) _CGXWindowListCreateImageFromArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26d78 (   0x1a0) WSWindowListCopyScreenCapturableByAuditToken(x_list_struct*, audit_token_t, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26f18 (    0x50) ___CGXWindowListCreateImageFromArray_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c26f68 (   0xacc) captureWindowList(CGRect, unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, CGXCaptureState**, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27a34 (    0x2c) WSCreateSessionCaptureData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27a60 (    0x64) invocation function for block in WSWindowListCopyScreenCapturableByAuditToken(x_list_struct*, audit_token_t, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27ac4 (    0x40) ___CGXWindowListCreateImage_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27b04 (    0x34) WSDidDestroyCaptureSessionData(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27b38 (    0x64) captureWillTerminateWindowProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27b9c (    0x54) captureWillDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c27bf0 (   0x9f0) CGXHWCaptureStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c285e0 (   0x14c) WSWindowIDArrayTrimToScreenCapturableByAuditToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2872c (    0xb8) std::__1::__tree_iterator<std::__1::__value_type<unsigned int, float>, std::__1::__tree_node<std::__1::__value_type<unsigned int, float>, void*>*, long> std::__1::__tree<std::__1::__value_type<unsigned int, float>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, float>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, float>>>::__emplace_multi<std::__1::pair<unsigned int, float>>(std::__1::pair<unsigned int, float>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c287e4 (    0xd8) unsigned long std::__1::__tree<std::__1::__value_type<unsigned int, CGSize>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGSize>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGSize>>>::__count_multi<unsigned int>(unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c288bc (    0xfc) get_window_max_area_size_hint(std::__1::multimap<unsigned int, CGSize, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, CGSize>>> const&, unsigned int, CGSize&, double&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c289b8 (    0xb4) std::__1::__tree_iterator<std::__1::__value_type<unsigned int, CGSize>, std::__1::__tree_node<std::__1::__value_type<unsigned int, CGSize>, void*>*, long> std::__1::__tree<std::__1::__value_type<unsigned int, CGSize>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGSize>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGSize>>>::__emplace_multi<std::__1::pair<unsigned int, CGSize>>(std::__1::pair<unsigned int, CGSize>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c28a6c (   0x188) WS::Capture::create_surface_pool(unsigned long, CGSize, int, CGColorSpace*, WSMatrix) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c28bf4 (   0x5c0) WSCaptureStreamStop(WSCaptureStream*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c291b4 (   0x23c) WSCaptureStreamStart(WSCaptureStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c293f0 (    0xc0) WSCaptureStreamDealloc(WSCaptureStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c294b0 (    0x40) __WSWindowIDArrayTrimToScreenCapturableByAuditToken_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c294f0 (    0xb4) _CGXHWCaptureStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c295a4 (   0x5e8) WSWindowUpdateCaptureStreamFlushShapes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29b8c (    0xc8) std::__1::pair<double*, double*> std::__1::__minmax_element_impl[abi:v160006]<double*, double*, std::__1::__identity, std::__1::__less<double, double>>(double*, double*, std::__1::__less<double, double>&, std::__1::__identity&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29c54 (   0x104) windowListIsDefaultScreenCapturableByAuditToken(x_list_struct*, audit_token_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29d58 (    0x38) invocation function for block in windowListIsDefaultScreenCapturableByAuditToken(x_list_struct*, audit_token_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29d90 (    0x5c) WSTranslateMoveDebug [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29dec (    0xa4) WSSessionWindowDataCleanupTranslateMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29e90 (    0x50) invalidate_cached_translate_move_shapes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29ee0 (    0xe8) WSTranslateMoveInvalidateShapeForSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c29fc8 (    0x98) WSTranslateMoveGetOverallMoveSourceRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a060 (    0x68) WSTranslateMoveGetOverallMoveDestinationRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a0c8 (    0xdc) SLSWindowRightForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a1a4 (    0x78) SLSWindowRightKeyForMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a21c (   0x1d4) SLSConnectionGetHeldWindowRights [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a3f0 (   0x144) SLSConnectionRelinquishWindowRights [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a534 (   0x2c8) SLSGrantWindowRightsReservingWithTimeoutAndToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a7fc (    0x98) SLSWindowRightsSetGrantOfferedBlockForToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2a894 (   0x208) SLSCompleteWindowRightsGrant [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2aa9c (    0x98) SLSWindowRightsSetGrantCompletedBlockForToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ab34 (     0x4) SLBeginDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ab38 (     0x4) SLConfigureDisplayOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ab3c (   0x16c) SLConfigureDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2aca8 (   0x1c0) SLConfigureDisplayWithDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae68 (     0x4) SLConfigureDisplayMirrorOfDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae6c (    0x14) SLConfigureDisplayStereoOperation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae80 (     0x4) SLConfigureDisplayFadeEffect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae84 (     0x4) SLCancelDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae88 (     0x4) SLCompleteDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ae8c (    0xe4) SLRestorePermanentDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2af70 (    0xe8) SLDisplaySetStereoOperation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b058 (     0x8) SLDisplayIsActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b060 (     0x8) SLDisplayIsAsleep [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b068 (     0x8) SLDisplayIsOnline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b070 (     0x8) SLDisplayIsMain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b078 (     0x8) SLDisplayIsBuiltin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b080 (     0x8) SLDisplayIsInMirrorSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b088 (     0x8) SLDisplayIsAlwaysInMirrorSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b090 (     0x8) SLDisplayIsInHWMirrorSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b098 (     0x8) SLDisplayMirrorsDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b0a0 (     0x8) SLDisplayUsesOpenGLAcceleration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b0a8 (     0x8) SLDisplayIsStereo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b0b0 (     0x8) SLDisplayDoesNotDim [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b0b8 (    0x54) SLDisplayPrimaryDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b10c (     0x8) SLDisplayUnitNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b114 (     0x8) SLDisplayVendorNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b11c (     0x8) SLDisplayModelNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b124 (     0x8) SLDisplaySerialNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b12c (    0x64) SLDisplayIOServicePort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b190 (    0xd4) SLDisplayScreenSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b264 (    0x28) SLDisplayRotation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b28c (    0x58) SLDisplayCopyColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b2e4 (    0xa4) post_global_front_connection_to_window_manager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b388 (    0x20) _displayDidWake [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b3a8 (    0x44) _handleWindowOcclusionEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b3ec (    0x78) _handleDFROcclusionEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b464 (    0x3c) _handleSessionConnect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b4a0 (    0x5c) _handleSessionDisconnect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b4fc (   0x178) _handleWindowLifecycle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b674 (   0x16c) pkgForegroundSwitchNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b7e0 (     0x8) ensureSpaceSwitchToActiveProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b7e8 (   0x15c) receive_notification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b944 (    0x30) __getSLCPSFrontTrackingLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b974 (    0x40) WSShadowObjectRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2b9b4 (    0x88) WSShadowGetCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ba3c (    0x58) std::__1::__tree<std::__1::__value_type<long long, std::__1::shared_ptr<WSShadow>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::shared_ptr<WSShadow>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::shared_ptr<WSShadow>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<long long, std::__1::shared_ptr<WSShadow>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ba94 (    0xbc) WSShadow::WSShadow(__IOSurface*, WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bb50 (    0xb4) WSShadow::getMetalBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bc04 (    0x58) WSShadow::getData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bc5c (   0x10c) WSShadowCalculateShadowMaskSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bd68 (    0xc4) WSShadowIsMaskTooBigForContentRectWithScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2be2c (   0x12c) WSShadowCalculateShadowMaskCenterRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bf58 (     0x8) Compositor::CopyIOSurfaceToIOSurface(__IOSurface*, __IOSurface*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bf60 (     0x8) Compositor::GetScratchpadIsDeep() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bf68 (     0x4) Compositor::SetScratchpadIsDeep(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2bf6c (   0x384) CompositorSW::CopySurface(__IOSurface*, CGColorSpace*, CGRect, __IOSurface*, CGColorSpace*, CGRect, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c2f0 (     0x4) Compositor::ClearSurfaceRegion444(__IOSurface*, CGSRegionObject*, float vector[4]) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c2f4 (     0x4) Compositor::ClearSurfaceRegion420(__IOSurface*, CGSRegionObject*, float vector[4]) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c2f8 (   0x2c0) CompositorSW::FillSurface(__IOSurface*, CGRect, WSPixelFormat, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c5b8 (     0x4) Compositor::PerformAcceleratorCleanup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c5bc (     0x8) CompositorSW::GetTextureForShadow(std::__1::shared_ptr<WSShadow>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c5c4 (   0x3c8) CompositorSW::CreateShadowFromLayers(WSShadowDescription, WSCompositeSourceLayer*, CGXRedrawState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2c98c (   0x58c) CompositorSW::CreateShadowFromMask(WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2cf18 (   0x330) CompositorSW::CreateDisplayStreamState(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d248 (   0x134) CompositorSW::CreateCaptureSurface(CGRect, unsigned int, unsigned int, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d37c (   0x4e0) CompositorSW::CompositeLayersToDestination(WSCompositeSourceLayer*, WSCompositeDestination*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d85c (     0x4) Compositor::SetContextSharedEventDest(WSCompositeDestination*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d860 (     0x4) Compositor::EndUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d864 (     0x4) Compositor::BeginUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d868 (     0x4) Compositor::Finish() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d86c (     0x4) CompositorSW::Flush() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d870 (     0x4) CompositorSW::Reset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d874 (     0x4) Compositor::TextureLimits(unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d878 (     0x8) Compositor::SupportsYCbCrRenderTargets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d880 (     0x8) Compositor::SupportsPriority() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d888 (     0x8) Compositor::IsRemovable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d890 (     0x8) Compositor::HasAcceleration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d898 (     0x8) Compositor::GPURegistryID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d8a0 (     0x4) CompositorSW::~CompositorSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d8a4 (     0x4) CompositorSW::~CompositorSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d8a8 (     0x8) Compositor::SupportsSurfaceSize(CGSize) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2d8b0 (   0xa78) WSMetalCompositorDumpInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e328 (   0x204) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<unsigned int, void*>*>, bool> std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int, unsigned int const&>(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e52c (    0x44) WSWatchdogCheckRunning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e570 (    0x3c) WSWatchdogActivate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e5ac (    0xf0) __WSWatchdogActivate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e69c (    0x7c) main_thread_checker [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e718 (    0x5c) main_thread_run_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e774 (   0x244) WSWatchdogSetStuck [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9b8 (     0x8) -[SLSDisplayController setDisplayAttachmentSeed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9c0 (     0x8) -[SLSDisplayController displayAttachmentSeed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9c8 (     0x8) -[SLSDisplayController setSerialNumber:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9d0 (     0x8) -[SLSDisplayController serialNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9d8 (     0x8) -[SLSDisplayController setBrightnessCapabilities:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9e0 (     0x8) -[SLSDisplayController brightnessCapabilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9e8 (     0x8) -[SLSDisplayController setDisplayType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9f0 (     0x8) -[SLSDisplayController displayType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2e9f8 (     0x8) -[SLSDisplayController setOnline:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea00 (     0x8) -[SLSDisplayController isOnline] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea08 (     0x8) -[SLSDisplayController setWhitePointD50XYZ:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea10 (     0x8) -[SLSDisplayController whitePointD50XYZ] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea18 (     0x8) -[SLSDisplayController setWhitePointAvailable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea20 (     0x8) -[SLSDisplayController whitePointAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea28 (     0x8) -[SLSDisplayController setBrightnessAvailable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea30 (     0x8) -[SLSDisplayController brightnessAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea38 (     0x8) -[SLSDisplayController setNativeWhitePoint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea40 (     0x8) -[SLSDisplayController nativeWhitePoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea48 (     0x8) -[SLSDisplayController setMaximumLuminance:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea50 (     0x8) -[SLSDisplayController maximumLuminance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea58 (     0x8) -[SLSDisplayController setContainerId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea60 (     0x8) -[SLSDisplayController containerId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea68 (     0x8) -[SLSDisplayController setUuid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea70 (     0x8) -[SLSDisplayController uuid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea78 (     0x8) -[SLSDisplayController setVendorId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea80 (     0x8) -[SLSDisplayController vendorId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea88 (     0x8) -[SLSDisplayController setProductId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea90 (     0x8) -[SLSDisplayController productId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ea98 (     0x8) -[SLSDisplayController setDisplayId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2eaa0 (     0x8) -[SLSDisplayController displayId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2eaa8 (   0x138) -[SLSDisplayController commitBrightnessTimeouts:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ebe0 (    0x14) -[SLSDisplayController setSleepMessagingTimeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ebf4 (    0x14) -[SLSDisplayController setDimMessagingTimeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ec08 (    0x14) -[SLSDisplayController setShieldingTimeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ec1c (   0x2b4) -[SLSDisplayController commitBrightness:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2eed0 (    0x10) -[SLSDisplayController setApplyPolicy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2eee0 (    0x18) -[SLSDisplayController setFilteredAmbient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2eef8 (    0x14) -[SLSDisplayController setAmbient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef0c (    0x18) -[SLSDisplayController setReferenceHeadroom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef24 (    0x18) -[SLSDisplayController setPotentialHeadroom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef3c (    0x14) -[SLSDisplayController setHeadroom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef50 (    0x18) -[SLSDisplayController setBrightnessLimit:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef68 (    0x14) -[SLSDisplayController setSDRBrightness:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ef7c (    0x24) -[SLSDisplayController setLinearBrightness:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2efa0 (    0x28) -[SLSDisplayController getLinearBrightness:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2efc8 (    0x60) -[SLSDisplayController abortContrastEnhancerRamp:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f028 (    0x30) -[SLSDisplayController setContrastEnhancer:rampDuration:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f058 (    0x60) -[SLSDisplayController abortWhitePointRamp:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f0b8 (    0x30) -[SLSDisplayController setWhitePoint:rampDuration:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f0e8 (    0x6c) -[SLSDisplayController getNits:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f154 (    0xd8) -[SLSDisplayController postNotification:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f22c (    0x18) __49-[SLSDisplayController postNotification:payload:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f244 (    0x50) __destroy_helper_block_e8_32o40o48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f294 (    0x60) __copy_helper_block_e8_32o40o48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f2f4 (    0x38) -[SLSDisplayController setNotificationQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f32c (    0x3c) -[SLSDisplayController notificationQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f368 (    0xf4) -[SLSDisplayController unregisterNotificationBlocks] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f45c (   0x11c) -[SLSDisplayController registerForNotifications:withBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f578 (     0x4) -[SLSDisplayController displayInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f57c (    0xa8) -[SLSDisplayController dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f624 (    0xbc) -[SLSDisplayController initWithDisplayId:capabilities:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f6e0 (     0xc) -[SLSBrightnessControlClient setDisplays:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f6ec (    0x10) -[SLSBrightnessControlClient displays] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f6fc (     0xc) -[SLSBrightnessControlClient setNotifyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f708 (    0x10) -[SLSBrightnessControlClient notifyBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f718 (     0xc) -[SLSBrightnessControlClient setService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f724 (    0x10) -[SLSBrightnessControlClient service] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f734 (    0xac) -[SLSBrightnessControlClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f7e0 (     0x4) -[SLSBrightnessControlClient init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f7e4 (   0x110) -[SLSBrightnessControlClient commitBrightnessPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f8f4 (    0x20) -[SLSBrightnessControlClient setSleepMessagingPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f914 (    0x20) -[SLSBrightnessControlClient setDimMessagingPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f934 (    0x20) -[SLSBrightnessControlClient setShieldingPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f954 (    0x94) -[SLSBrightnessControlClient requestBrightnessTimeouts:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2f9e8 (    0x94) -[SLSBrightnessControlClient requestBrightnessPolicy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2fa7c (    0x94) -[SLSBrightnessControlClient requestBulkBrightnessChange:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2fb10 (   0x130) -[SLSBrightnessControlClient requestSetContrastEnhancer:duration:display:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2fc40 (   0x134) -[SLSBrightnessControlClient requestSetWhitePoint:duration:display:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2fd74 (   0x1c8) -[SLSBrightnessControlClient requestAbortRamp:command:display:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c2ff3c (   0x148) -[SLSBrightnessControlClient requestGetValue:command:display:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30084 (    0x44) -[SLSBrightnessControlClient getWhitePointMatrix:withKey:fromReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c300c8 (    0x4c) -[SLSBrightnessControlClient getFloat:withKey:fromReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30114 (    0xd0) -[SLSBrightnessControlClient sendRequest:command:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c301e4 (    0xa0) -[SLSBrightnessControlClient sendSynchronousRequest:command:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30284 (    0x70) -[SLSBrightnessControlClient brightnessControls:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c302f4 (    0x48) -[SLSBrightnessControlClient terminateConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3033c (     0x8) -[SLSBrightnessControlClient initBrightnessControlClient:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30344 (   0x12c) -[SLSBrightnessControlClient initBrightnessControlClient:notifyQueue:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30470 (     0xc) __88-[SLSBrightnessControlClient initBrightnessControlClient:notifyQueue:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3047c (   0x9bc) -[SLSBrightnessControlClient handleServerMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30e38 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c30e58 (   0x104) -[SLSBrightnessControlClient controllerWithId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30f5c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<SLSEventRecord, std::__1::default_delete<SLSEventRecord>>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<SLSEventRecord, std::__1::default_delete<SLSEventRecord>>*>>(std::__1::allocator<std::__1::unique_ptr<SLSEventRecord, std::__1::default_delete<SLSEventRecord>>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30f94 (    0x68) std::__1::vector<int, std::__1::allocator<int>>::vector(std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c30ffc (    0xe8) WSSelectiveSharingContextWithDeletionInfo::noSenderCallback(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c310e4 (   0x460) WSWindowSessionSelectiveSharingContextDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c31544 (    0xfc) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<__CFUUID const*, std::__1::unique_ptr<WSSelectiveSharingContextWithDeletionInfo, std::__1::default_delete<WSSelectiveSharingContextWithDeletionInfo>>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<__CFUUID const*, std::__1::unique_ptr<WSSelectiveSharingContextWithDeletionInfo, std::__1::default_delete<WSSelectiveSharingContextWithDeletionInfo>>>, std::__1::__unordered_map_hasher<__CFUUID const*, std::__1::__hash_value_type<__CFUUID const*, std::__1::unique_ptr<WSSelectiveSharingContextWithDeletionInfo, std::__1::default_delete<WSSelectiveSharingContextWithDeletionInfo>>>, CFUUIDKeyFunctor, CFUUIDKeyFunctor, true>, std::__1::__unordered_map_equal<__CFUUID const*, std::__1::__hash_value_type<__CFUUID const*, std::__1::unique_ptr<WSSelectiveSharingContextWithDeletionInfo, std::__1::default_delete<WSSelectiveSharingContextWithDeletionInfo>>>, CFUUIDK...
                0x0000000185c31640 (   0x14c) std::__1::__hash_table<std::__1::__hash_value_type<int, WSSelectiveSharingContext*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, WSSelectiveSharingContext*>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, WSSelectiveSharingContext*>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, WSSelectiveSharingContext*>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, WSSelectiveSharingContext*>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3178c (   0x14c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c318d8 (    0x40) std::__1::unique_ptr<WSSelectiveSharingContextWithDeletionInfo, std::__1::default_delete<WSSelectiveSharingContextWithDeletionInfo>>::reset[abi:v160006](WSSelectiveSharingContextWithDeletionInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c31918 (   0x180) WSSelectiveSharingContextWithDeletionInfo::~WSSelectiveSharingContextWithDeletionInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c31a98 (   0x16c) CGXWindowSessionMap::add(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c31c04 (   0x200) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGXWindow*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c31e04 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32000 (    0x90) WSWindowSessionCreateCurrentDisabledShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32090 (    0xe8) WSWindowSessionSetExposeAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32178 (    0x10) __WSWindowSessionSetExposeAnimating_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32188 (    0x10) __WSWindowSessionSetExposeAnimating_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32198 (    0xc8) WSWindowSessionSetSqueegeeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32260 (    0x48) __WSWindowSessionSetSqueegeeState_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c322a8 (    0x48) __WSWindowSessionSetSqueegeeState_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c322f0 (    0xfc) WSWindowSessionSetSqueegeePileAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c323ec (     0xc) __WSWindowSessionSetSqueegeePileAnimating_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c323f8 (   0x3c0) selective_sharing_cgs_notification_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c327b8 (   0x594) WSWindowSessionDisplaySetSelectiveSharingContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c32d4c (   0xb5c) WSWindowSessionSelectiveSharingContextSetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c338a8 (   0x108) void std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>::assign<CGXWindow**, 0>(CGXWindow**, CGXWindow**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c339b0 (   0x5a4) WSWindowSessionSelectiveSharingContextUpdateForDisplayStream(CGXSessionWindowData*, __CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c33f54 (    0xa4) WSWindowSessionClearContexts [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c33ff8 (    0x40) std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>::reset[abi:v160006](CGXSessionWindowFrameContextInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34038 (    0x3c) CGXSessionWindowFrameContextInfo::~CGXSessionWindowFrameContextInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34074 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c340c0 (    0x54) std::__1::__tree<DisplayScheduleEntry, std::__1::less<DisplayScheduleEntry>, std::__1::allocator<DisplayScheduleEntry>>::destroy(std::__1::__tree_node<DisplayScheduleEntry, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34114 (    0x88) std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3419c (    0x4c) std::__1::__tree<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::d...
                0x0000000185c341e8 (    0x7c) WSWindowSessionIsSelectiveSharingEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34264 (   0x14c) WSGetCanonicalDisplayID(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c343b0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSSelectiveSharingContext*>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34464 (   0x36c) WSWindowIsVisibleInFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c347d0 (    0x90) bool std::__1::operator==[abi:v160006]<char, std::__1::char_traits<char>, std::__1::allocator<char>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c34860 (    0x9c) WSWindowSessionWindowIsGloballyVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c348fc (   0x760) WSWindowSessionSelectiveSharingContextCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3505c (   0x4e4) WSWindowSessionDisplayStreamSetSelectiveSharingContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35540 (   0x1d4) WSWindowSessionDisplayStreamSetSelectiveSharingMetaData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35714 (    0xe0) WSWindowSessionDisplaySetUpdateShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c357f4 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>>>::find<int>(int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c358a8 (   0x3dc) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>>>::__emplace_unique_key_args<int, int&, SelectiveSharingUpdateShapes>(int const&, int&, SelectiveSharingUpdateShapes&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35c84 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SelectiveSharingUpdateShapes>>>::find<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35d38 (    0xe0) WSWindowSessionDisplaySetFlushShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35e18 (    0xfc) WSWindowSessionDisplayGetUpdateShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c35f14 (    0xfc) WSWindowSessionDisplayGetFlushShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36010 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGXWindow*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c360c4 (    0x90) WSWindowSessionRemovePluginWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36154 (    0x74) WSWindowSessionRemoveVisibleTrustedForObscuringWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c361c8 (   0x128) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGXWindow*>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c362f0 (   0x120) WSWindowSessionForEachWindowInSessionMap(void (CGXWindow*, bool*) block_pointer, CGXWindowSessionMap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36410 (    0x94) WSWindowSessionGetWindowByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c364a4 (   0x200) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGXWindow*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGXWindow*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGXWindow*>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, Funct...
                0x0000000185c366a4 (    0x7c) WSWindowSessionGetWindowForSessionByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36720 (   0x208) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merg...
                0x0000000185c36928 (   0x188) WSWindowSessionDeleteWidContextIDPair [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36ab0 (   0x12c) WSWindowSessionInvalidateConnectionMoveShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36bdc (    0x68) WSWindowSessionAddToUpdateContributors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36c44 (   0x130) ws_dispatch_io_printf(CGXSessionWindowData*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c36d74 (   0x400) __WSWindowSessionLogUpdateContributors_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37174 (    0x24) invocation function for block in ws_dispatch_io_printf(CGXSessionWindowData*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37198 (    0xb4) ws_invalidate_update_clients_channel(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3724c (   0x2d8) WSWindowSessionUpdateFrameData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37524 (    0xac) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, unsigned long long>, std::__1::__tree_node<std::__1::__value_type<int, unsigned long long>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, unsigned long long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long long>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c375d0 (    0xc4) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1:...
                0x0000000185c37694 (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>>>*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::default_delete<CGXSessionWindowFrameContextInfo>>, std::__1::allocator<std::__1::unique_ptr<CGXSessionWindowFrameContextInfo, std::__1::d...
                0x0000000185c376ec (   0x630) CGXPostScreenWatcherNotificationForAuditToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37d1c (   0x220) CGXPostScreenWatcherNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37f3c (     0x4) screen_watcher_timer_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37f40 (    0x5c) CGXPostScreenWatcherNotificationForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c37f9c (    0xf0) SLSDeviceCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3808c (    0x98) SLSDeviceDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38124 (    0x4c) SLSDeviceGetProfile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38170 (     0x8) SLSDeviceCopyColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38178 (    0x3c) SLSDeviceGetResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c381b4 (    0x60) SLSDeviceGetGeometry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38214 (    0xf4) SLSDeviceLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38308 (   0x28c) SLSDeviceScroll [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38594 (    0x58) SLSDeviceUnlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c385ec (    0x68) SLSDeviceInvalidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38654 (   0x158) SLSDeviceSynchronize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387ac (     0x8) SLSDeviceFinish [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387b4 (     0x8) -[SLSDisplayManager setLastPowerStateNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387bc (     0x8) -[SLSDisplayManager lastPowerStateNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387c4 (     0x8) -[SLSDisplayManager setRunningInServer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387cc (     0xc) -[SLSDisplayManager runningInServer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387d8 (     0x8) -[SLSDisplayManager setRegisteredNotifiers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387e0 (     0x8) -[SLSDisplayManager registeredNotifiers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387e8 (     0x8) -[SLSDisplayManager setEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387f0 (     0xc) -[SLSDisplayManager enabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c387fc (     0x8) -[SLSDisplayManager setSemaphore:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38804 (     0xc) -[SLSDisplayManager semaphore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38810 (     0x8) -[SLSDisplayManager setClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38818 (     0x8) -[SLSDisplayManager client] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38820 (     0x8) -[SLSDisplayManager setConnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38828 (     0xc) -[SLSDisplayManager connected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38834 (   0x1f0) -[SLSDisplayManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38a24 (   0x100) __28-[SLSDisplayManager dealloc]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38b24 (    0x40) std::__1::unique_ptr<SLSDisplayManagerRegistrationID, std::__1::default_delete<SLSDisplayManagerRegistrationID>>::reset[abi:v160006](SLSDisplayManagerRegistrationID*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38b64 (    0x88) std::__1::vector<std::__1::unique_ptr<SLSDisplayManagerRegistrationID, std::__1::default_delete<SLSDisplayManagerRegistrationID>>, std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerRegistrationID, std::__1::default_delete<SLSDisplayManagerRegistrationID>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38bec (    0xc8) SLSDisplayManagerRegistrationID::~SLSDisplayManagerRegistrationID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38cb4 (    0x40) std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>::reset[abi:v160006](SLSDisplayManagerNotifier*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38cf4 (    0x5c) SLSDisplayManagerNotifier::~SLSDisplayManagerNotifier() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38d50 (    0x80) invocation function for block in get_display_manager_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38dd0 (     0x4) -[SLSDisplayManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38dd4 (    0xf0) -[SLSDisplayManager dispatchPowerStateNotification:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38ec4 (    0x78) __60-[SLSDisplayManager dispatchPowerStateNotification:payload:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38f3c (    0x60) SLSDisplayManagerRegistrationID::executeCallbacks(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c38f9c (   0x2f8) SLSDisplayManagerNotifier::executeCallback(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39294 (    0x4c) invocation function for block in SLSDisplayManagerNotifier::executeCallback(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c392e0 (    0x18) invocation function for block in SLSDisplayManagerNotifier::executeCallback(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c392f8 (    0x4c) invocation function for block in SLSDisplayManagerNotifier::executeCallback(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39344 (    0x1c) invocation function for block in SLSDisplayManagerNotifier::executeCallback(SLSDisplayPowerStateNotificationType, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39360 (    0x84) -[SLSDisplayManager deliverPowerStateNotification:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c393e4 (   0x2a0) -[SLSDisplayManager unregisterPowerStateNotification:registrationID:notificationOption:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39684 (    0x10) __Block_byref_object_copy_.3564 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39694 (     0xc) __Block_byref_object_dispose_.3565 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c396a0 (   0x464) __88-[SLSDisplayManager unregisterPowerStateNotification:registrationID:notificationOption:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39b04 (    0x5c) __destroy_helper_block_e8_32o40o48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39b60 (    0x70) __copy_helper_block_e8_32o40o48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39bd0 (    0x74) SLSDisplayManagerRegistrationID::registeredIDMatchesID(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39c44 (    0x58) std::__1::pair<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__move_loop<std::__1::_ClassicAlgPolicy>, std::__1::__move_trivial>, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, 0>(std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>*, std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default...
                0x0000000185c39c9c (   0x2c4) -[SLSDisplayManager registerPowerStateNotification:registrationID:sendInitialState:queue:refcon:notificationOption:notificationBlock:notificationPayloadBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c39f60 (   0x564) __159-[SLSDisplayManager registerPowerStateNotification:registrationID:sendInitialState:queue:refcon:notificationOption:notificationBlock:notificationPayloadBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a4c4 (    0x80) __destroy_helper_block_e8_32o40o48o56b64b72r80r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a544 (    0xa0) __copy_helper_block_e8_32o40o48o56b64b72r80r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a5e4 (   0x28c) SLSDisplayManagerRegistrationID::setNotifier(bool, SLSDisplayPowerStateNotificationType, unsigned int, NSObject<OS_dispatch_queue>*, void*, void (SLSDisplayPowerStateNotificationType, void*) block_pointer, void (SLSDisplayPowerStateNotificationType, __CFDictionary const*, void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a870 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>>>(std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a8a8 (    0x54) std::__1::__split_buffer<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>, std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerNotifier, std::__1::default_delete<SLSDisplayManagerNotifier>>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3a8fc (   0x61c) -[SLSDisplayManager idleDisplays:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3af18 (   0x520) -[SLSDisplayManager initWith:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3b438 (   0x3c4) __30-[SLSDisplayManager initWith:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3b7fc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c3b810 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c3b844 (    0xa4) +[SLSDisplayManager broadcastPowerStateChangeEvent:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3b8e8 (   0x1c0) get_display_manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3baa8 (    0x88) SLSDisplayManagerRequestDisplaysIdle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bb30 (   0x110) SLSDisplayManagerRegisterPowerStateNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bc40 (    0xec) SLSDisplayManagerRegisterPowerStateNotificationOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bd2c (     0x8) SLSDisplayManagerRegisterPowerStateNotificationDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bd34 (   0x120) register_psnd_impl(NSObject<OS_dispatch_queue>*, void*, __CFDictionary const*, void (SLSDisplayPowerStateNotificationType, void*) block_pointer, void (SLSDisplayPowerStateNotificationType, __CFDictionary const*, void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3be54 (    0xbc) get_notification_dictionary_options(__CFDictionary const*, unsigned int&, __CFString const*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bf10 (     0xc) SLSDisplayManagerRegisterPowerStateNotificationWithPayloadDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bf1c (    0xcc) SLSDisplayManagerUnregisterPowerStateNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3bfe8 (    0xac) SLSDisplayManagerUnregisterPowerStateNotificationOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c094 (     0x4) SLSDisplayManagerUnregisterPowerStateNotificationDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c098 (    0xac) unregister_psnd_impl(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c144 (     0x4) SLSDisplayManagerUnregisterPowerStateNotificationWithPayloadDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c148 (   0x4e4) WS::Scaler::Scaler() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c62c (    0xd8) invocation function for block in war_78493674_iosa_is_present() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c704 (   0x1f8) WS::Scaler::copy_iosurface_(__IOSurface*, __IOSurface*, CGRect const&, CGRect const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c8fc (    0x60) WSScalerSupported [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c95c (    0x68) WS::system_scaler() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3c9c4 (   0x228) WSScalerCopyIOSurfaceWithRects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3cbec (   0x354) SLSCopyWindowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3cf40 (    0x6c) SLSMoveWindowWithGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3cfac (   0x104) SLSOrderWindowListWithGroups [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d0b0 (    0x64) SLSOrderWindowWithGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d114 (    0xf0) SLSSetWindowLevelForGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d204 (   0x164) add_subregion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d368 (   0x304) _set_window_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d66c (   0x124) ___set_window_region_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d790 (    0x60) SLSGetDragRegionLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d7f0 (    0x70) get_window_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d860 (    0x60) SLSGetActivationRegionLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d8c0 (    0x60) SLSGetButtonRegionLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d920 (    0x60) SLSGetSpecialCommandRegionLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3d980 (    0xf8) SLSSetWindowRegionsLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3da78 (    0x10) SLSClearDragRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3da88 (    0x9c) set_window_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3db24 (    0x10) SLSAddDragRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3db34 (   0x164) remove_subregion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3dc98 (    0x10) SLSRemoveDragSubregionForCommandModifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3dca8 (    0x10) SLSClearActivationRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3dcb8 (    0x10) SLSAddActivationRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3dcc8 (    0xf0) SLSClearWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ddb8 (   0x130) SLSAddWindowToWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3dee8 (   0x118) SLSRemoveWindowFromWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e000 (    0x6c) SLSSetWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e06c (   0x130) SLSSetAvoidsActivation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e19c (   0x148) set_or_clear_tag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e2e4 (     0xc) SLSSetIgnoresOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e2f0 (     0xc) SLSSetPreventsActivation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e2fc (     0xc) SLSSetDeferOrdering [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e308 (     0xc) SLSSetDeferActivation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e314 (    0xa8) SLSSetFrontWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e3bc (     0xc) SLSSetIgnoreAsFrontWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e3c8 (    0xb8) SLSSetWindowHasKeyAppearance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e480 (    0xb8) SLSSetWindowHasMainAppearance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e538 (   0x104) SLSClearWindowOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e63c (   0x154) SLSAddWindowToWindowOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e790 (   0x104) SLSRemoveFromOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e894 (     0x8) SLSSetWindowResizeState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e89c (     0x8) SLSGetWindowResizeState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e8a4 (   0x124) SLSPackagesDragWindowRelativeToMouse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e9c8 (     0x8) SLSDragWindowRelativeToMouse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3e9d0 (    0xa8) SLSPackagesAddWindowToDraggingSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ea78 (    0xa8) SLSPackagesRemoveWindowFromDraggingSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3eb20 (    0xd4) SLSPackagesAssignDraggedWindowToDestinationSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ebf4 (   0x168) SLSSetWindowOriginRelativeToWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ed5c (     0xc) SLSSetIgnoresCycle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ed68 (    0xac) SLSCycleWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ee14 (    0x10) SLSSetWindowTitle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3ee24 (   0x210) SLSSetWindowLevelsForActivation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f034 (    0xb0) SLSDeferWindowMoveEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f0e4 (   0x14c) SLSGetDisplayReconfigureTimeWhenWindowsLastMoved [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f230 (   0x1e8) SLSPackagesCopyWorkspaceIdentifierForWorkspace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f418 (   0x25c) SLSPackagesGetWorkspaceForWorkspaceIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f674 (   0x1d0) SLSPackagesEnableConnectionOcclusionNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3f844 (   0x1d8) SLSPackagesEnableWindowOcclusionNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fa1c (   0x1d0) SLSPackagesEnableConnectionWindowModificationNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fbec (    0x10) SLSOverrideAppSleepNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fbfc (    0x10) SLSClearButtonRegionInWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fc0c (    0x10) SLSAddButtonRegionInWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fc1c (    0x78) SLSAddDragRegionInWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fc94 (    0x78) SLSRemoveDragSubregionInWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c3fd0c (   0x594) create_shadow_texture_from_vImage_with_description(vImage_Buffer, CGRect, WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c402a0 (   0x30c) symmetric_convolve(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned char*, unsigned int, double const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c405ac (     0x4) std::__1::__shared_ptr_emplace<WSShadow, std::__1::allocator<WSShadow>>::__on_zero_shared_weak() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c405b0 (    0x70) std::__1::__shared_ptr_emplace<WSShadow, std::__1::allocator<WSShadow>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40620 (    0x44) std::__1::__shared_ptr_emplace<WSShadow, std::__1::allocator<WSShadow>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40664 (    0x20) std::__1::__shared_ptr_emplace<WSShadow, std::__1::allocator<WSShadow>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40684 (   0x18c) PKG2DVelocityFilterAddPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40810 (    0xc4) SLSCreateKeyboardEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c408d4 (   0x1a4) SLSGetScoreboardFlagsAndUnifiedKeyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40a78 (   0x258) SLSCreateKeyboardEventWithFlagsAndStateOfLength [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40cd0 (   0x328) invocation function for block in do_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c40ff8 (    0x94) SLSCreateKeyboardEventOfLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4108c (    0xd8) CGSCharCodeForKeyAndFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41164 (    0xd0) CGSKeyCodeToCharCode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41234 (   0x108) CGSMouseStateCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4133c (   0x36c) CGSMouseStatePostMouseButtonsChangedEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416a8 (     0x4) SLDirectDisplayCopyCurrentMetalDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416ac (     0x4) PKGDisplay::~PKGDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416b0 (     0x4) PKGDisplay::~PKGDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416b4 (     0x4) PKGDisplayOperationGroup::~PKGDisplayOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416b8 (     0x4) PKGDisplayOperationGroup::~PKGDisplayOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c416bc (   0x178) PKGDisplay::~PKGDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41834 (   0x170) PKGDisplay::corner_layer(PKGDisplayCorner) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c419a4 (    0x38) PKGDisplay::set_corner_layer(PKGDisplayCorner, CALayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c419dc (    0x54) PKGDisplay::uuid_string() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41a30 (    0x64) PKGDisplay::bounds_string() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41a94 (    0xf0) PKGDisplay::attributes_string() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41b84 (   0x128) PKGDisplayOperationGroup::~PKGDisplayOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41cac (    0x4c) std::__1::__tree<std::__1::__value_type<CFUUIDBytes, PKGDisplayOperation*>, std::__1::__map_value_compare<CFUUIDBytes, std::__1::__value_type<CFUUIDBytes, PKGDisplayOperation*>, (anonymous namespace)::DisplayComparator, false>, std::__1::allocator<std::__1::__value_type<CFUUIDBytes, PKGDisplayOperation*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CFUUIDBytes, PKGDisplayOperation*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41cf8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<PKGDisplayOperation*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<PKGDisplayOperation*>>(std::__1::allocator<PKGDisplayOperation*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41d30 (    0xe8) PKGDisplayOperationGroup::build_op_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41e18 (    0xc8) std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>::mapped_type (anonymous namespace)::map_find_with_default<std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>>(std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>> const&, std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>::key_type const&, std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>::mapped_type const&...
                0x0000000185c41ee0 (    0x88) PKGDisplayOperationGroup::op_with_old_display(PKGDisplay const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41f68 (    0x88) PKGDisplayOperationGroup::op_with_new_display(PKGDisplay const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c41ff0 (   0x108) PKGDisplayOperationGroup::remove_operation(PKGDisplayOperation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c420f8 (   0x154) std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>::erase[abi:v160006](CFUUIDBytes const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4224c (   0x27c) PKGDisplayOperationGroup::add_change(PKGDisplay*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c424c8 (   0x150) std::__1::map<CFUUIDBytes, PKGDisplayOperation*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplayOperation*>>>::operator[](CFUUIDBytes&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c42618 (   0x728) (anonymous namespace)::DisplaySet::create() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c42d40 (   0x174) PKGSessionDisplayData::add_update_handler_block(void (PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c42eb4 (    0x58) std::__1::__tree<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, std::__1::__map_value_compare<CFUUIDBytes, std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, (anonymous namespace)::DisplayComparator, false>, std::__1::allocator<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c42f0c (   0x3c4) (anonymous namespace)::DisplayCallbackCenter::add_callback(std::__1::shared_ptr<(anonymous namespace)::DisplayCallback>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c432d0 (    0xc8) std::__1::__tree_iterator<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, std::__1::__tree_node<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, void*>*, long> std::__1::__tree<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, std::__1::__map_value_compare<CFUUIDBytes, std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>, (anonymous namespace)::DisplayComparator, false>, std::__1::allocator<std::__1::__value_type<CFUUIDBytes, std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>>>::find<CFUUIDBytes>(CFUUIDBytes const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43398 (    0x3c) (anonymous namespace)::DisplayCallbackByBlock::~DisplayCallbackByBlock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c433d4 (    0x2c) (anonymous namespace)::DisplayCallbackByBlock::~DisplayCallbackByBlock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43400 (    0x10) (anonymous namespace)::DisplayCallbackByBlock::invoke(PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43410 (     0xc) (anonymous namespace)::DisplayCallbackByBlock::identifier() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4341c (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByBlock, std::__1::allocator<(anonymous namespace)::DisplayCallbackByBlock>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43420 (     0x8) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByBlock, std::__1::allocator<(anonymous namespace)::DisplayCallbackByBlock>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43428 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByBlock, std::__1::allocator<(anonymous namespace)::DisplayCallbackByBlock>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4346c (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByBlock, std::__1::allocator<(anonymous namespace)::DisplayCallbackByBlock>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4348c (   0x1a4) invocation function for block in PKGSessionDisplayData::PKGSessionDisplayData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43630 (   0x324) (anonymous namespace)::WSDisplayWrapper::filtered_online_displays(std::__1::function<bool (std::__1::shared_ptr<WS::Displays::Display>)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43954 (    0x84) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Displays::Display>)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c439d8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<(anonymous namespace)::MasterDisplay*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<(anonymous namespace)::MasterDisplay*>>(std::__1::allocator<(anonymous namespace)::MasterDisplay*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c43a10 (   0x63c) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MasterDisplay**>((anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::DisplayComparator&, std::__1::iterator_traits<(anonymous namespace)::MasterDisplay**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4404c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c44064 (   0x4c8) PKGDisplay::PKGDisplay((anonymous namespace)::WSDisplayWrapper const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4452c (   0x150) std::__1::map<CFUUIDBytes, PKGDisplay*, (anonymous namespace)::DisplayComparator, std::__1::allocator<std::__1::pair<CFUUIDBytes const, PKGDisplay*>>>::operator[](CFUUIDBytes&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4467c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<(anonymous namespace)::MirrorDisplay*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<(anonymous namespace)::MirrorDisplay*>>(std::__1::allocator<(anonymous namespace)::MirrorDisplay*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c446b4 (   0x63c) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MirrorDisplay**>((anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::DisplayComparator&, std::__1::iterator_traits<(anonymous namespace)::MirrorDisplay**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44cf0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c44d08 (    0x6c) std::__1::vector<(anonymous namespace)::WSDisplayWrapper, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44d74 (    0x4c) std::__1::__tree<std::__1::__value_type<int, (anonymous namespace)::MasterDisplay*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, (anonymous namespace)::MasterDisplay*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, (anonymous namespace)::MasterDisplay*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, (anonymous namespace)::MasterDisplay*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44dc0 (    0x4c) std::__1::__tree<std::__1::__value_type<CFUUIDBytes, PKGDisplay*>, std::__1::__map_value_compare<CFUUIDBytes, std::__1::__value_type<CFUUIDBytes, PKGDisplay*>, (anonymous namespace)::DisplayComparator, false>, std::__1::allocator<std::__1::__value_type<CFUUIDBytes, PKGDisplay*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CFUUIDBytes, PKGDisplay*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44e0c (    0x78) (anonymous namespace)::MirrorDisplay::verbose_debug_description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44e84 (    0x60) (anonymous namespace)::MirrorDisplay::description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c44ee4 (   0x134) (anonymous namespace)::MasterDisplay::debug_description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45018 (    0x60) (anonymous namespace)::MasterDisplay::description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45078 (    0x78) (anonymous namespace)::MirrorDisplay::debug_description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c450f0 (     0x8) (anonymous namespace)::MirrorDisplay::get_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c450f8 (     0x8) (anonymous namespace)::MirrorDisplay::is_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45100 (    0x28) (anonymous namespace)::MirrorDisplay::~MirrorDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45128 (    0xc0) (anonymous namespace)::MirrorDisplay::~MirrorDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c451e8 (    0xf4) (anonymous namespace)::DisplayComparator::less_than(PKGDisplay const*, PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c452dc (    0xd4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MirrorDisplay**>((anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c453b0 (    0xbc) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MirrorDisplay**>((anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4546c (    0xe8) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MirrorDisplay**>((anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45554 (   0x190) bool std::__1::__insertion_sort_incomplete<(anonymous namespace)::DisplayComparator&, (anonymous namespace)::MirrorDisplay**>((anonymous namespace)::MirrorDisplay**, (anonymous namespace)::MirrorDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c456e4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c456fc (    0x7c) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::operator()(std::__1::shared_ptr<WS::Displays::Display>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45778 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4577c (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45780 (    0x20) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display>)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c457a0 (    0x38) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c457d8 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c457dc (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c457e0 (   0x134) (anonymous namespace)::MasterDisplay::verbose_debug_description() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45914 (     0x4) (anonymous namespace)::MasterDisplay::get_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45918 (     0x8) (anonymous namespace)::MasterDisplay::is_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45920 (    0x28) (anonymous namespace)::MasterDisplay::~MasterDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45948 (    0xb4) (anonymous namespace)::MasterDisplay::~MasterDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c459fc (   0x54c) create_corner_window(CGRect, PKGDisplayCorner) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c45f48 (    0xe0) compute_corner_region(CGRect, PKGDisplayCorner, double*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46028 (    0xd4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MasterDisplay**>((anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c460fc (    0xbc) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MasterDisplay**>((anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c461b8 (    0xe8) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, (anonymous namespace)::DisplayComparator&, (anonymous namespace)::MasterDisplay**>((anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c462a0 (   0x190) bool std::__1::__insertion_sort_incomplete<(anonymous namespace)::DisplayComparator&, (anonymous namespace)::MasterDisplay**>((anonymous namespace)::MasterDisplay**, (anonymous namespace)::MasterDisplay**, (anonymous namespace)::DisplayComparator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46430 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c46448 (    0x7c) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::operator()(std::__1::shared_ptr<WS::Displays::Display>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c464c4 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c464c8 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c464cc (    0x20) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display>)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c464ec (    0x38) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46524 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46528 (     0x4) std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4652c (   0x2bc) (anonymous namespace)::DisplayCallbackCenter::remove_callback(CFUUIDBytes const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c467e8 (    0xc8) (anonymous namespace)::DisplaySet::~DisplaySet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c468b0 (   0x258) (anonymous namespace)::DisplaySet::displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46b08 (    0xe0) (anonymous namespace)::DisplaySet::display_with_uuid_bytes(CFUUIDBytes const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46be8 (    0x70) (anonymous namespace)::DisplaySet::masters() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46c58 (    0x60) std::__1::vector<PKGDisplay*, std::__1::allocator<PKGDisplay*>> (anonymous namespace)::vector_convert<PKGDisplay*, (anonymous namespace)::MasterDisplay*>(std::__1::vector<(anonymous namespace)::MasterDisplay*, std::__1::allocator<(anonymous namespace)::MasterDisplay*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46cb8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<PKGDisplay*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<PKGDisplay*>>(std::__1::allocator<PKGDisplay*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46cf0 (    0x74) std::__1::vector<(anonymous namespace)::MirrorDisplay*, std::__1::allocator<(anonymous namespace)::MirrorDisplay*>>::vector(std::__1::vector<(anonymous namespace)::MirrorDisplay*, std::__1::allocator<(anonymous namespace)::MirrorDisplay*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46d64 (    0x60) std::__1::vector<PKGDisplay*, std::__1::allocator<PKGDisplay*>> (anonymous namespace)::vector_convert<PKGDisplay*, (anonymous namespace)::MirrorDisplay*>(std::__1::vector<(anonymous namespace)::MirrorDisplay*, std::__1::allocator<(anonymous namespace)::MirrorDisplay*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46dc4 (    0x6c) std::__1::vector<std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::DisplayCallback>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46e30 (    0x40) std::__1::vector<PKGDisplay*, std::__1::allocator<PKGDisplay*>>::__vallocate[abi:v160006](unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46e70 (     0x8) (anonymous namespace)::LogicalOperationGroup::type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46e78 (    0x28) (anonymous namespace)::LogicalOperationGroup::~LogicalOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ea0 (     0x4) (anonymous namespace)::LogicalOperationGroup::~LogicalOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ea4 (     0x8) (anonymous namespace)::PhysicalOperationGroup::type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46eac (    0x28) (anonymous namespace)::PhysicalOperationGroup::~PhysicalOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ed4 (     0x4) (anonymous namespace)::PhysicalOperationGroup::~PhysicalOperationGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ed8 (     0x4) (anonymous namespace)::DisplayCallbackByFunction::~DisplayCallbackByFunction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46edc (     0x4) (anonymous namespace)::DisplayCallbackByFunction::~DisplayCallbackByFunction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ee0 (    0x14) (anonymous namespace)::DisplayCallbackByFunction::invoke(PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46ef4 (     0xc) (anonymous namespace)::DisplayCallbackByFunction::identifier() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46f00 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByFunction, std::__1::allocator<(anonymous namespace)::DisplayCallbackByFunction>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46f04 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByFunction, std::__1::allocator<(anonymous namespace)::DisplayCallbackByFunction>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46f08 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByFunction, std::__1::allocator<(anonymous namespace)::DisplayCallbackByFunction>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46f4c (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByFunction, std::__1::allocator<(anonymous namespace)::DisplayCallbackByFunction>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c46f6c (   0x278) PKGSessionDisplayData::best_display_for_point(CGPoint) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c471e4 (    0x44) PKGDisplayGetMain [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47228 (    0x5c) (anonymous namespace)::current_session_display_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47284 (   0x13c) PKGDisplayWithIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c473c0 (    0xa4) PKGDisplayWithUUIDBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47464 (   0x1b4) PKGDisplayBestMatchingRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47618 (   0x1a4) PKGDisplayCreateList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c477bc (    0x40) PKGDisplayGetBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c477fc (    0x44) PKGDisplayGetUUIDBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47840 (    0x70) PKGDisplayCopyIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c478b0 (   0x1c4) PKGDisplaySetCornerScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47a74 (    0x14) __Block_byref_object_copy_.3923 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47a88 (     0x4) __Block_byref_object_dispose_.3924 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47a8c (   0x20c) __PKGDisplaySetCornerScale_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47c98 (   0x120) rebuild_corner_windows(PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47db8 (   0x158) set_corner_scale_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c47f10 (   0x2e4) update_corner_windows(PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c481f4 (    0x40) PKGDisplayGetSarlaccRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c48234 (    0x60) PKGDisplayGetSpaceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c48294 (    0x68) PKGDisplayGetDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c482fc (    0x54) PKGDisplayOperationGetType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c48350 (    0x4c) PKGDisplayOperationGroupCopyOperationList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4839c (    0x5c) PKGDisplayAddUpdateHandlerBlock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c483f8 (    0x60) PKGDisplayRemoveUpdateHandlerBlock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c48458 (    0xb4) (anonymous namespace)::PKGDisplay_window_will_terminate(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4850c (   0xf60) (anonymous namespace)::PKGDisplay_display_config_changed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4946c (   0x448) CGXCreateBundleInfoForPid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c498b4 (    0x58) cache_value_release_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4990c (     0x4) cache_key_release_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49910 (   0x4dc) session_data_update_display_use_info_dictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49dec (    0xbc) copy_cf_dictionary_items_to_xpc_dictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49ea8 (   0x10c) send_event [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49fb4 (     0x8) __send_event_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49fbc (    0x20) __copy_cf_dictionary_items_to_xpc_dictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c49fdc (   0x104) __pkg_display_list_is_horizontal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a0e0 (   0x104) __pkg_display_list_is_vertical_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a1e4 (   0x130) pkg_display_count_type_filtered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a314 (    0x20) __using_built_in_display_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a334 (    0x48) __pkg_display_count_type_filtered_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a37c (    0x10) __physical_display_count_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a38c (    0x64) pkg_display_get_midpoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a3f0 (   0x1e0) rect_midpoint_line_segment_to_point_intersects_edge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a5d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c4a5e0 (    0xa4) pkg_display_less_vertically [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a684 (    0xa4) pkg_display_less_horizontally [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a728 (    0x70) cfstring_create_utf8_string [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a798 (    0x44) WSActiveUserSpaceChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a7dc (    0xb0) message_trace_user_space_change_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a88c (    0xfc) WSReportMenuBarUsage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4a988 (   0x2ac) message_trace_report_menu_bar_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4ac34 (    0x74) message_trace_xpc_dictionary_set_cfstring [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4aca8 (   0x4dc) message_trace_session_universal_owner_set_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b184 (   0x1f0) session_data_update_display_hardware_info_dictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b374 (     0x8) __airplay_display_count_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b37c (     0x8) __television_display_count_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b384 (     0x8) __projector_display_count_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b38c (   0x130) message_trace_space_did_terminate_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b4bc (   0x104) message_trace_console_changed_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b5c0 (   0x1c4) asl_message_add_cftype_pair_dictionary_applier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b784 (    0x68) message_trace_did_destroy_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b7ec (    0xbc) message_trace_will_destroy_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b8a8 (    0x44) message_trace_display_update_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b8ec (    0xd8) message_trace_display_update_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4b9c4 (   0x12c) message_trace_did_create_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4baf0 (    0x30) message_trace_will_create_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bb20 (    0x8c) WSMessageTraceFlushDisplayArrangementState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bbac (   0x170) per_arrangement_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bd1c (    0xb8) set_xpc_int64_for_array_index [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bdd4 (    0x60) message_trace_report_display_arrangement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4be34 (    0x8c) message_trace_collect_display_arrangement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bec0 (    0x5c) Warp::~Warp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bf1c (    0x4c) Warp::~Warp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bf68 (    0x80) MeshWarp::~MeshWarp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4bfe8 (    0x70) MeshWarp::~MeshWarp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c058 (    0x88) Warp::Warp(Warp const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c0e0 (    0x98) MeshWarp::MeshWarp(Mesh*, CGSRegionObject*, int, int, int, int, WarpConversionType, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c178 (    0x5c) AffineWarp::~AffineWarp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c1d4 (    0x4c) AffineWarp::~AffineWarp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c220 (   0x100) AffineWarp::AffineWarp(CGAffineTransform, CGSRegionObject*, int, int, int, int, WarpConversionType, CGPoint, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c320 (    0x5c) Warp3D::~Warp3D() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c37c (    0x4c) Warp3D::~Warp3D() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c3c8 (   0x3e0) CGXDumpAppMenuBars [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c7a8 (    0xb8) CGXDumpMenuBars [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c860 (    0x7c) get_active_display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4c8dc (   0x4f8) __CGXDumpMenuBars_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4cdd4 (   0x21c) get_app_bar_info(unsigned int, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4cff0 (    0x10) __Block_byref_object_copy_.4137 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d000 (    0x10) __Block_byref_object_dispose_.4138 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d010 (   0x16c) invocation function for block in get_app_bar_info(unsigned int, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d17c (    0xc8) walk_bar_infos_until(unsigned int, bool (AppMenuBarInfo_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d244 (    0x68) __destroy_helper_block_e8_32r40r48r56r64r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d2ac (    0x80) __copy_helper_block_e8_32r40r48r56r64r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d32c (    0xcc) logical_display_for_space(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d3f8 (   0x118) set_active_display(PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d510 (    0x7c) invocation function for block in set_active_display(PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d58c (   0x180) rebuild_menu_bars_passing_test(PKGMenuBarRebuildType, bool (PKGManagedSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d70c (   0x174) update_active_display_space_shmem(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d880 (   0x124) invocation function for block in rebuild_menu_bars_passing_test(PKGMenuBarRebuildType, bool (PKGManagedSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4d9a4 (  0x23e4) rebuild_one_menu_bar(PKGManagedMenuSpace*, CGSRegionObject**, bool, PKGMenuBarRebuildType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4fd88 (    0x80) get_front_connection_on_space(PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4fe08 (   0x118) menu_bar_bounds_for_space(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4ff20 (    0xb0) update_menu_bar_opaque_shape(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c4ffd0 (    0x8c) WSCaptureMenuInvalidate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5005c (    0x7c) menu_has_desktop_background(AppMenuBarInfo_t const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c500d8 (    0xb8) invocation function for block in menu_has_dark_background(AppMenuBarInfo_t const*, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c50190 (   0x114) copy_menu_space_flush_region(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c502a4 (   0x19c) effective_reveal(PKGManagedMenuSpace*, unsigned int, AppMenuBarInfo_t const*, bool, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c50440 (   0x6c8) reposition_one_menu_bar(PKGManagedMenuSpace*, unsigned int, double, bool, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c50b08 (   0x22c) update_menu_status_on_space(unsigned int, PKGManagedMenuSpace*, AppMenuBarInfo_t*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c50d34 (   0xb94) update_menu_bar_layers(PKGManagedMenuSpace*, unsigned int, AppMenuBarInfo_t const*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c518c8 (   0x140) update_menu_bar_alpha_on_space(PKGManagedMenuSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51a08 (    0x34) WSCurrentUntransformedWindowBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51a3c (    0xbc) text_group_frame(unsigned int, CGRect, __IOSurface*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51af8 (    0x64) get_connection_bool_property(unsigned int, __CFString const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51b5c (   0x138) getkCUIWidgetKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51c94 (    0x50) invocation function for block in getkCUIWidgetVisualEffectViewSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51ce4 (   0x110) CoreUILibrary() (.4167) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51df4 (    0x50) invocation function for block in getkCUIVariantKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51e44 (    0x50) invocation function for block in getkCUIVariantMenuBarMaterialSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51e94 (   0x138) getkCUIBezelTintColor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c51fcc (   0x138) getkCUIPresentationStateKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52104 (   0x138) getkCUIPresentationStateActiveKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5223c (   0x138) getkCUIBackdropCompatibleKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52374 (   0x138) getkCUIScaleKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c524ac (   0x758) resize_one_pill(PKGManagedMenuSpace*, PKGMenuBarContext*, CALayer*, CGRect, __PKGCoreUITransactionRef const*, CGColor*, float, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52c04 (    0x50) invocation function for block in getkCUIWidgetMenuTitleSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52c54 (    0x50) invocation function for block in getkCUIStateKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52ca4 (    0x50) invocation function for block in getkCUIStatePressedSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52cf4 (    0x50) invocation function for block in getkCUIIndicatorOnlyKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52d44 (    0x50) invocation function for block in getkCUIIsFlippedKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52d94 (    0x50) invocation function for block in getkCUIPresentationStateInactiveSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52de4 (    0x50) invocation function for block in getkCUIScaleKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52e34 (    0x50) invocation function for block in getkCUIBackdropCompatibleKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52e84 (    0x50) invocation function for block in getkCUIPresentationStateActiveKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52ed4 (    0x50) invocation function for block in getkCUIPresentationStateKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52f24 (    0x50) invocation function for block in getkCUIBezelTintColorSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52f74 (    0x74) invocation function for block in CoreUILibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c52fe8 (    0x50) invocation function for block in getkCUIWidgetKeySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c53038 (    0xd0) calculate_menu_bar_max_companion_height(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c53108 (    0x14) invocation function for block in reposition_one_menu_bar(PKGManagedMenuSpace*, unsigned int, double, bool, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5311c (   0x1a0) invocation function for block in reposition_one_menu_bar(PKGManagedMenuSpace*, unsigned int, double, bool, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c532bc (   0x100) WSMoveWindowWithGroupByOffset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c533bc (   0x140) countMovementGroup_recursive(CGXWindow const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c534fc (   0x160) accumulateMovementGroup_recursive(CGXWindow const*, unsigned int*, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5365c (    0xcc) get_window_group(CGXWindow const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c53728 (    0x5c) invocation function for block in calculate_menu_bar_max_companion_height(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c53784 (     0x4) capture_menu_resolve(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c53788 (   0x128) WSCaptureMenuResolveDesktopChanges [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c538b0 (   0xed4) __WSCaptureMenuResolveDesktopChanges_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54784 (   0x188) destroy_offscreen_window_and_capture(PKGManagedMenuSpace*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5490c (    0xa4) invocation function for block in capture_menu_desktops(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c549b0 (    0x88) __CGXDumpAppMenuBars_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54a38 (    0x80) WSCurrentWindowBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54ab8 (    0xe8) _CGXSetWindowRegionInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54ba0 (    0x9c) ___CGXSetAppearanceTheme_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54c3c (    0x98) rebuild_space_menu_bar(PKGMenuBarRebuildType, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54cd4 (    0x10) invocation function for block in rebuild_space_menu_bar(PKGMenuBarRebuildType, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54ce4 (    0x94) PKGMenuBarContext::~PKGMenuBarContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54d78 (   0x10c) WSCaptureMenuVisibleDesktopChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54e84 (    0x8c) __WSCaptureMenuVisibleDesktopChanged_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54f10 (    0x70) get_current_space_menu_bar_windows(CGXWindow**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c54f80 (   0x100) CGXUpdateMenuBarLayers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55080 (   0x218) ___CGXCopySessionSpaceState_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55298 (    0xb0) PKGWindowClearForcedInactiveMenuBarIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55348 (    0xd4) CGXPackagesRebuildMenuBarForManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5541c (     0x8) pkgWindowForceResignActiveAppChanged(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55424 (   0x6f0) PKGAcquireMenuBarsAfterAppActivation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55b14 (    0x68) invocation function for block in copy_preferred_spaces_to_acquire(CGXConnection const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55b7c (    0x64) invocation function for block in copy_preferred_spaces_to_acquire(CGXConnection const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55be0 (    0x7c) invocation function for block in copy_preferred_spaces_to_acquire(CGXConnection const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55c5c (   0x184) __PKGAcquireMenuBarsAfterAppActivation_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55de0 (    0x7c) __PKGAcquireMenuBarsAfterAppActivation_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c55e5c (   0x1ac) ensure_installer_user_space() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56008 (     0x8) invocation function for block in rebuild_all_menu_bars() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56010 (    0x5c) invocation function for block in ensure_installer_user_space() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5606c (    0x10) invocation function for block in walk_managed_spaces_until(bool (PKGManagedSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5607c (   0x12c) PKGSetDisplayContainingActiveMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c561a8 (    0x70) set_active_display_timestamp(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56218 (   0x200) PKGMenuBarDivestFrontmostConnectionOnSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56418 (    0x68) __PKGMenuBarDivestFrontmostConnectionOnSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56480 (    0x9c) PKGMenuBarDivestConnectionAsFrontmost [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5651c (    0x78) __PKGMenuBarDivestConnectionAsFrontmost_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56594 (   0x164) PKGWindowAcquireMenuBarIfAllowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c566f8 (    0x10) __PKGWindowAcquireMenuBarIfAllowed_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56708 (    0x6c) __CGXPackagesMenuBarSwapConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56774 (    0x64) CGXSetProcessListWantsToHideMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c567d8 (   0x150) _CGXSetMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c56928 (   0x940) set_menu_bars(CGXConnection*, CGSPerMenuBarData const*, unsigned long, unsigned int, unsigned int, CGSMenuBarFilterType, float vector[4], bool, bool, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57268 (    0x20) invocation function for block in set_menu_bars(CGXConnection*, CGSPerMenuBarData const*, unsigned long, unsigned int, unsigned int, CGSMenuBarFilterType, float vector[4], bool, bool, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57288 (    0x40) invocation function for block in app_menu_bar_is_revealed_or_revealing_on_space(unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c572c8 (    0x90) invocation function for block in store_menu_bar_materials(unsigned int, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57358 (    0x88) invocation function for block in get_app_bar_info_with_creation(unsigned int, unsigned long long, int, CGSPackagesWorkspaceType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c573e0 (    0xb4) rebuild_app_menu_bars(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57494 (    0x6c) invocation function for block in rebuild_app_menu_bars(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57500 (    0x34) ___CGXSetMenuBar_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57534 (    0x5c) display_from_displayID_data(char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57590 (    0x64) does_connection_prevent_menu_bar_hiding_on_display(unsigned int, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c575f4 (   0x230) update_menu_bar_visibility_override(PKGDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57824 (    0x58) invocation function for block in update_menu_bar_visibility_override(PKGDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5787c (    0x38) PKGMenuBarTrackingDidEndOnDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c578b4 (    0x70) ___CGXInterruptMenuBarReveal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57924 (    0x34) ___CGXInterruptMenuBarReveal_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57958 (   0x1d8) _CGXSetMenuBarSystemOverrideAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57b30 (    0x4c) ___CGXSetMenuBarSystemOverrideAlpha_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57b7c (    0x58) ___CGXSetMenuBarSystemOverrideAlpha_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57bd4 (    0x54) invocation function for block in update_menu_bar_alpha_passing_test(bool (PKGManagedMenuSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57c28 (    0x10) ___CGXSetMenuBarSystemOverrideAlpha_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57c38 (    0x10) ___CGXSetMenuBarSystemOverrideAlpha_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57c48 (    0x68) ___CGXGetProcessMenuBarWindowList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57cb0 (    0x5c) CGXDisplayConfigurationChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57d0c (    0xd4) hide_shield_windows(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c57de0 (   0x29c) show_shield_windows(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5807c (    0x24) WSWindowIsMenuBarWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c580a0 (   0x13c) CGXFullMenuBarRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c581dc (   0x1a4) WSSetFrontWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58380 (    0xa8) PKGWindowResignActiveAppearanceOnManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58428 (   0x194) window_send_resign_key_main_appearance_event(CGXWindow const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c585bc (   0x398) WSSetWindowHasActiveAppearance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58954 (   0x35c) __WSSetWindowHasActiveAppearance_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58cb0 (    0x80) __WSSetWindowHasActiveAppearance_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58d30 (   0x16c) get_window_group_list(CGXWindow const*, __CFString const*, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58e9c (    0x68) WSWindowCreateOrderingGroupWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58f04 (    0xd8) window_create_reversed_immediate_group_window_list(CGXWindow const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c58fdc (    0x64) WSWindowCreateMovementGroupWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59040 (   0x1ac) window_create_recursive_group_window_list_at_depth(CGXWindow*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c591ec (    0x78) invocation function for block in window_create_recursive_group_window_list_at_depth(CGXWindow*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59264 (    0xac) PKGCreateWindowListFromIDArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59310 (   0x124) PKGCreateWindowMovementGroupListFromIDArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59434 (    0xb8) __PKGCreateWindowMovementGroupListFromIDArray_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c594ec (   0x1a4) WSMoveWindowsForSpaceDisplayChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59690 (   0x278) __WSMoveWindowsForSpaceDisplayChange_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59908 (    0x68) map_window_dimension_to_new_display_rect(double, double, double, double, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59970 (   0x250) WSTransformWindowsForSpaceRelayout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59bc0 (    0x84) __WSTransformWindowsForSpaceRelayout_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59c44 (    0xbc) _CGXOrderWindowListWithGroups [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c59d00 (   0x454) CGXOrderWindowListWithGroups(CGXConnection*, unsigned int const*, CGSOrderOp const*, unsigned int const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a154 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c5a164 (   0x178) PKGWindowSpacesAreExplicitlyManaged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a2dc (    0x74) ordering_list_free(_CGXOrderingList*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a350 (   0x124) window_copy_sorted_ordering_group(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a474 (    0xa4) check_windows_in_same_group(CGXWindow const*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a518 (    0x9c) ordering_list_append(_CGXOrderingList*, unsigned int, CGSOrderOp, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a5b4 (   0x258) ordering_list_repair_group(_CGXOrderingList*, CGXWindow*, __CFArray const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a80c (    0xfc) highest_window_in_ordering_group(CGXWindow*, __CFArray const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a908 (    0xec) lowest_window_in_ordering_group(CGXWindow*, __CFArray const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5a9f4 (    0xe0) ordering_list_append_group_above_lowest(_CGXOrderingList*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5aad4 (    0xe8) ordering_list_append_group_below_highest(_CGXOrderingList*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5abbc (    0xa0) get_group_index_of_window(__CFArray const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ac5c (    0x8c) _ordering_list_grow(_CGXOrderingList*, void*, void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ace8 (    0xe0) invocation function for block in window_copy_sorted_ordering_group(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5adc8 (    0x28) __PKGWindowSpacesAreExplicitlyManaged_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5adf0 (    0x64) WSWindowGetPackagesData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ae54 (    0x1c) PKGGetOriginalWindowForSystemLevelPlaceholder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ae70 (   0x9ec) CGXSetWindowListSystemLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5b85c (    0x90) _PKGWindowSetPlaceholder(CGXWindow*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5b8ec (    0x88) PKGWindowSetAbsoluteSubLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5b974 (    0xa4) PKGWindowGetMovementParent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ba18 (   0x124) PKGWindowClearMovementGroup(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bb3c (   0x214) PKGWindowSetMovementParent(CGXWindow*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bd50 (    0x10) release_value(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bd60 (    0x30) retain_value(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bd90 (   0x134) PKGWindowRemoveWindowFromMovementGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bec4 (    0x74) validate_movement_rights_window(CGXConnection*, char const*, unsigned int, CGXWindow**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5bf38 (   0x124) PKGWindowClearOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c05c (   0x1f8) PKGWindowUpdateEffectiveSubLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c254 (   0x10c) invocation function for block in window_space_relative_sublevel(CGXWindow*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c360 (    0xfc) pkg_window_repair_group_ordering(CGXConnection*, CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c45c (   0x330) PKGWindowAddToOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c78c (   0x1c4) CGXSetWindowLevelForGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5c950 (   0x12c) remove_window_from_ordering_group(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ca7c (    0x90) PKGWindowSetOriginRelativeToWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cb0c (    0x50) CGXInvalidateWindowCycleCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cb5c (   0x174) __CGXPackagesCopyPersistentSpaceProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ccd0 (    0xc0) __CGXPackagesCopyPersistentSpaceProperties_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cd90 (     0xc) __CGXPackagesSpacesWillSwitch_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cd9c (   0x188) CGXPackagesUpdateMenuBarForManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cf24 (    0x70) __CGXPackagesRebuildMenuBarForVisibleSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5cf94 (   0x230) PKGWindowDidMakeSpaceCurrent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d1c4 (    0xbc) create_connection_set_for_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d280 (    0x60) __CGXPackagesWindowRightGrantDidComplete_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d2e0 (    0x60) __CGXPackagesWindowRightGrantDidComplete_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d340 (   0x294) CGXPackagesConnectionAddVisibleWindowCount(CGXConnection*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d5d4 (    0x50) invocation function for block in getrbs_set_appnap_windowserver_visibleSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d624 (   0x110) RunningBoardServicesLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d734 (    0x74) invocation function for block in RunningBoardServicesLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d7a8 (    0x34) invocation function for block in check_runningboard_version() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d7dc (    0x18) cfset_block_applier(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d7f4 (   0x170) CGXPackagesNoteWindowIsVisible(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5d964 (   0x1a4) invocation function for block in CGXPackagesNoteWindowIsVisible(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5db08 (   0x16c) updateConnectionIdleState(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5dc74 (   0x150) soft_rbs_set_appnap_windowserver_drawing(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ddc4 (   0x3d4) WSPackagesPerformOcclusionPass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e198 (    0xf0) _WindowCanOcclude(CGXWindow*, char const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e288 (    0x48) CGXPackagesNoteModificationActivityForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e2d0 (    0xa4) scheduleConnectionModificationActivityTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e374 (   0x100) checkConnectionModificationActivity(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e474 (    0xa4) invocation function for block in idleConnectionDelay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e518 (    0x50) invocation function for block in getrbs_set_appnap_windowserver_drawingSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e568 (     0xc) __CGXPackagesUpdateOcclusionForDisconnectedSession_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e574 (    0x78) CGXPackagesNoteGeometryChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e5ec (    0x94) WSPackagesEnsureAllWindowsVisible() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e680 (    0xa4) PKGSetAppSleepNotificationsSuspended [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e724 (     0xc) __PKGSetAppSleepNotificationsSuspended_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e730 (    0xfc) PKGSetAllWindowsVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e82c (     0xc) __PKGSetAllWindowsVisible_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5e838 (   0x2fc) CGXDumpWindowOcclusionInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5eb34 (    0xc8) WSPackagesSetWorkspaceUpdatesAreDeferred [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ebfc (    0x64) __WSPackagesSetWorkspaceUpdatesAreDeferred_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ec60 (    0x4c) __WSPackagesSetWorkspaceUpdatesAreDeferred_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ecac (   0x138) window_post_move_event(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ede4 (    0x4c) window_move_events_are_deferred(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ee30 (     0xc) __WSPackagesSetWorkspaceUpdatesAreDeferred_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ee3c (   0x10c) WSPackagesScheduleCoalescedWindowMoveEventIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ef48 (    0x28) window_id_post_coalesced_move_event_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5ef70 (    0x4c) _CGXDeferWindowMoveEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5efbc (   0x1e8) WSWindowFreePackagesData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f1a4 (   0x24c) pkg_window_synchronize_space_shmem_values_if_allowed(CGXWindow*, PKGWindowData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f3f0 (   0x124) PKGWindowSetAssessmentMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f514 (   0x104) invocation function for block in pkg_window_synchronize_space_shmem_values_if_allowed(CGXWindow*, PKGWindowData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f618 (    0x70) PKGWindowClearSpacesAreInitialized [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f688 (    0x74) PKGWindowJoinedCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f6fc (    0x50) PKGWindowSpaceMembershipChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f74c (    0x7c) PKGWindowPartedCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f7c8 (    0xb0) PKGWindowSetDeferCurrentSpaceCountSynchronization [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f878 (    0x64) PKGWindowSetLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f8dc (    0xf4) PKGWindowIgnoredForScreenTimeSuppression [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5f9d0 (    0x58) individual_window_ignored_for_screen_time_suppression(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fa28 (    0xe0) __PKGWindowUpdateAppearanceForDisplayWake_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fb08 (    0x38) __PKGWindowUpdateAppearanceForDisplayWake_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fb40 (    0x78) PKGWindowSetPrefersCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fbb8 (   0x210) PKGWindowMoveOnMatchingDisplayChangedSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fdc8 (   0x110) invocation function for block in packages_warn_failed_move_on_display_seed(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c5fed8 (   0x210) RenderMeshSW [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c600e8 (   0x610) DrawMesh(MeshWarp*, int, int, int, int, float, void*, long, void*, long, float, float, float, float, WarpConversionType, void const*, long, void const*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c606f8 (   0x1c0) clip_segment(double, double, double, double, double*, double*, double*, unsigned int, double*, double*, double*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c608b8 (   0xdd0) affine_scanline(WarpConversionType, void const*, long, void const*, long, double, double, double, double, double, double, int, int, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61688 (    0x54) (null) [FUNC, FunctionStarts] 
                0x0000000185c616dc (    0x54) (null) [FUNC, FunctionStarts] 
                0x0000000185c61730 (   0x210) RenderAffineSW [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61940 (   0x370) DrawAffine(AffineWarp*, WSCompositeSourceLayer const*, int, int, int, int, float, void*, long, void*, long, float, float, float, float, WarpConversionType, void const*, long, void const*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61cb0 (     0x8) -[SLSecureCursorAssertionManager weakAssertionMap] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61cb8 (     0x8) -[SLSecureCursorAssertionManager strongAssertionUUIDs] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61cc0 (    0x90) -[SLSecureCursorAssertionManager unmapUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61d50 (   0x188) -[SLSecureCursorAssertionManager invalidateUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c61ed8 (   0x238) -[SLSecureCursorAssertionManager invalidateAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62110 (   0x240) -[SLSecureCursorAssertionManager takeAssertion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62350 (     0x8) -[SLSecureCursorAssertion setUuid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62358 (     0xc) -[SLSecureCursorAssertion uuid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62364 (    0x64) -[SLSecureCursorAssertion invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c623c8 (    0x20) -[SLSecureCursorAssertion isValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c623e8 (    0x94) -[SLSecureCursorAssertion dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6247c (    0x30) +[SLSecureCursorAssertion invalidateAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c624ac (    0x30) +[SLSecureCursorAssertion assertion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c624dc (    0xa4) -[SLSecureCursorAssertionManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62580 (   0x16c) -[SLSecureCursorAssertionManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c626ec (    0xbc) +[SLSecureCursorAssertionManager sharedManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c627a8 (    0x24) __47+[SLSecureCursorAssertionManager sharedManager]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c627cc (    0x3c) SLSecureCursorAssertionCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62808 (     0x4) SLSecureCursorAssertionIsValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6280c (     0x4) SLSecureCursorAssertionInvalidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62810 (    0xc0) WSGetFullscreenDisplayZoomData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c628d0 (    0xb8) CGXGetZoomParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62988 (    0x7c) get_session_zoom_display_bounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62a04 (   0x164) SLSSetZoomAllowCursorCrossDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62b68 (    0xe8) WSSetZoomAllowCursorCrossDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62c50 (   0x164) SLSSetZoomForceLockCursorInDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62db4 (    0xac) CGXSetZoomParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c62e60 (   0x698) set_zoom_parameters_on_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c634f8 (   0x13c) derive_anim_duration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c63634 (   0x278) set_zoom_state_on_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c638ac (    0x94) CGXUnzoomPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c63940 (    0x24) postZoomStateChangedNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c63964 (   0x194) async_zoom_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c63af8 (   0x590) CGXSetDisplayZoomParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64088 (   0x178) async_display_zoom_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64200 (    0x74) CGXSetZoomState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64274 (    0x4c) CGXIsZoomed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c642c0 (    0x50) CGXIsDisplayZoomed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64310 (    0x40) CGXZoomShouldInterpolate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64350 (   0x424) CGXGetDisplayDeviceZoomedRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64774 (   0x1c8) get_zoom_transform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6493c (   0x2c0) displayDidReconfigureCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64bfc (    0x24) displayWillReconfigureCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64c20 (    0x28) displayZoomDidDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64c48 (    0x34) displayZoomWillDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64c7c (    0x6c) displayZoomWillCreateSessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64ce8 (    0xac) zoomWillDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64d94 (   0x1d4) zoomWillCreateSessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64f68 (    0x24) slglsQueryRendererInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64f8c (    0x24) slglsDestroyRendererInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c64fb0 (   0x2c0) slglsCreateContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65270 (    0x20) slglsSetInteger [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65290 (   0x32c) slglsDestroyContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c655bc (    0x20) slglsGetPixelFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c655dc (   0x1a4) slglsAttachDrawable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65780 (    0x14) slglsGetVirtualScreen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65794 (    0x20) slglsGetInteger [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c657b4 (    0xe0) cglsAttachSurfaceUnflipped [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65894 (    0x68) slglsGetSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c658fc (   0x110) slglsAttachState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65a0c (    0x58) slglsGetState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65a64 (   0x13c) slglsCreatePBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65ba0 (    0x64) slglsDestroyPBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65c04 (    0xa4) slglsTexImagePBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65ca8 (   0x224) slglsAttachPBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65ecc (    0x84) slglsTexImageIOSurface2D [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65f50 (    0x88) slglsTexImagePBuffer2D [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c65fd8 (    0x74) __WSCoreDisplayVTable_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6604c (   0x11c) SLDisplaySetInvertedPolarity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66168 (    0x54) SLDisplayUsesInvertedPolarity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c661bc (    0x68) get_bool_user_preference_for_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66224 (   0x11c) SLDisplayForceToGray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66340 (    0x54) SLDisplayUsesForceToGray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66394 (    0xe0) SLDisplayVisualBell [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66474 (    0xb0) SLDisplayDefaultVisualBell [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66524 (     0x8) WSGetDisplaySerializationSystemStateVersion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6652c (    0x84) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c665b0 (    0x58) void std::__1::__destroy_at[abi:v160006]<CGSDisplayMode, 0>(CGSDisplayMode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66608 (    0x50) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66658 (    0x84) CGSDisplayMode* std::__1::construct_at[abi:v160006]<CGSDisplayMode, CGSDisplayMode&, CGSDisplayMode*>(CGSDisplayMode*, CGSDisplayMode&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c666dc (    0x68) std::__1::vector<SLSLinkDescription, std::__1::allocator<SLSLinkDescription>>::vector(std::__1::vector<SLSLinkDescription, std::__1::allocator<SLSLinkDescription>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66744 (    0x40) std::__1::vector<SLSLinkDescription, std::__1::allocator<SLSLinkDescription>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66784 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SLSLinkDescription>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SLSLinkDescription>>(std::__1::allocator<SLSLinkDescription>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c667bc (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSDisplayMode>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSDisplayMode>>(std::__1::allocator<CGSDisplayMode>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66804 (    0x90) CGSDisplaySystemStateGetDisplayOutputModeCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66894 (   0x138) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c669cc (   0x12c) SLWindowListCopyWindowInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66af8 (   0x130) SLDefaultCapturableWindowListCopyWindowInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66c28 (   0x128) SLWindowListCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66d50 (   0x154) SLWindowListCreateArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c66ea4 (   0x35c) SLWindowListCreateDescriptionFromArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c67200 (   0x498) SLWindowListCreateImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c67698 (   0x104) copy_empty_image [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6779c (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c677bc (    0x5c) CGSCaptureImageProviderGetBytesAtPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c67818 (   0x43c) SLWindowListCreateImageFromArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c67c54 (     0xc) SLSCaptureWindowsContentsToRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c67c60 (   0x3a0) SLSCaptureWindowsContentsToRectWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c68000 (     0x4) SLPreflightScreenCaptureAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c68004 (    0x28) SLRequestScreenCaptureAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6802c (    0xcc) DetachmentDetails::evaluate_detach_code(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c680f8 (   0x190) DetachmentDetails::evaluate_greed_code(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c68288 (   0xfc0) DetachmentDetails::evaluate_detachment_details_for_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69248 (    0x68) DetachmentDetails::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c692b0 (    0x74) DetachmentDetails::note_window_content_is_invalid(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69324 (    0x98) __system_booted_in_safe_mode_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c693bc (    0x40) PKGSpaceTransformAnimationDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c693fc (    0xec) __PKGSpaceTransformAnimationCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c694e8 (   0x1d4) SLSDisplayRegisterReconfigurationCallbackWithUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c696bc (   0x280) uuid_callback_master [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6993c (    0x5c) connectionDied [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69998 (    0x34) windowPluginGetProtectionOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c699cc (    0x5c) windowPluginGetUpdateFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69a28 (   0x3b4) windowPluginRenderMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69ddc (    0x10) windowPluginCanRenderMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69dec (    0x10) windowPluginRenderBitmap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c69dfc (   0x2e0) windowPluginRender [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a0dc (    0x10) windowPluginCanRenderBitmap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a0ec (     0xc) windowPluginRenderCGL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a0f8 (     0x8) windowPluginCanRenderCGL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a100 (   0x104) windowPluginHitTest [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a204 (   0x2f8) windowPluginGetBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a4fc (     0x4) sw_context_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a500 (   0x220) CGLayerKitFetch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a720 (    0xe8) CGXWindowPluginLayerInvalidate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a808 (   0x144) WSAddLayerTreeToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a94c (    0xac) SLSUpdateSystemActivityWithLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6a9f8 (    0x4c) SLSUpdateSystemActivity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6aa44 (    0x4c) CGSTickleActivityMonitor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6aa90 (    0xb0) SLPixelAccessCreateWithWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ab40 (    0x28) __SLPixelAccessGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ab68 (    0x44) SLPixelAccessGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6abac (   0x1ac) SLPixelAccessCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ad58 (   0x160) __CGPixelAccessAccessBitmapData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6aeb8 (     0xc) SLPixelAccessRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6aec4 (   0x234) SLPixelAccessLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b0f8 (   0x150) SLPixelAccessUnlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b248 (    0x30) SLPixelAccessGetWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b278 (    0x30) SLPixelAccessGetHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b2a8 (    0x50) SLPixelAccessGetTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b2f8 (    0x80) SLPixelAccessTransformRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b378 (   0x2c0) SLPixelAccessCreateImageFromRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b638 (     0x8) __CGPixelAccessDataGetAlphaPointer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b640 (    0x1c) SLPixelAccessGetColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b65c (    0x1c) SLPixelAccessGetBitmapInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b678 (    0x1c) SLPixelAccessGetBitsPerComponent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b694 (    0x1c) SLPixelAccessGetBitsPerPixel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b6b0 (    0x68) SLPixelAccessGetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b718 (    0xd8) __SLPixelAccessLockWindowData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b7f0 (    0x1c) SLPixelAccessGetAlphaBitsPerComponent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b80c (    0x1c) SLPixelAccessGetAlphaBitsPerPixel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b828 (    0x68) SLPixelAccessGetAlphaData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b890 (    0xc4) SLPixelAccessRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b954 (    0x80) CGXConnectionForPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6b9d4 (    0x74) port_to_connection_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ba48 (    0x84) sleepNotifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6bacc (    0x28) connectionSpinControlCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6baf4 (   0x140) connection_started_spinning_internal(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6bc34 (    0x48) connectionIsUnresponsiveCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6bc7c (   0x158) post_app_unresponsive_notification(CGXConnection*, CGSNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6bdd4 (   0x290) specialKeyNotifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c064 (   0x130) CGXSuppressLocalEventsForInterval [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c194 (    0x3c) CGXForegroundConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c1d0 (    0x44) CGXConnectionForConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c214 (    0x18) end_event_suppression(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c22c (    0x1c) loginNotifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c248 (    0x88) firstWindowAfterLoginNotifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c2d0 (   0x338) foregroundSwitchNotifyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c608 (   0x240) CGXSetConnectionCursorEnvironment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c848 (   0x118) WSConnectionGetCursorRestrictionShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6c960 (   0x2a4) __WSConnectionGetCursorRestrictionShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cc04 (   0x110) CGXSetCursorFromConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cd14 (    0x24) end_cursor_and_mouse_decoupling(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cd38 (    0x38) CGXEnableWindowServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cd70 (    0x9c) rendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ce0c (     0x8) invocation function for block in rendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ce14 (   0x140) invocation function for block in rendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cf54 (    0x60) CGXEnableRootWindowServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6cfb4 (   0x180) CGXRootWindowServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d134 (   0x14c) CGXActiveWindowServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d280 (    0xd4) rootRendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d354 (     0x8) invocation function for block in rootRendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d35c (    0x28) invocation function for block in rootRendezvousHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d384 (    0x94) terminate_connection(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6d418 (   0x644) connectionInvalidate(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6da5c (   0xedc) connectionDeallocate(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6e938 (   0x148) update_screen_watchers(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ea80 (   0x1d4) screentime_suppress_connection(CGXConnection*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ec54 (    0x90) assessment_mode_disable_all() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ece4 (    0x6c) post_connection_death_notification(CGXConnection*, CGXConnectionNotificationContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ed50 (    0xb0) CGXUpdateInhibitLocalEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ee00 (    0x5c) connection_reenable_cursor_obscure_unconditional(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ee5c (    0xfc) invocation function for block in connectionDeallocate(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6ef58 (    0x88) invocation function for block in connectionDeallocate(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6efe0 (    0x44) notify_interest_set_free(WSNotifyInterestSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f024 (    0x60) dirty_screen_state_dispose(CGXDirtyScreenState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f084 (    0xd8) invocation function for block in connectionDeallocate(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f15c (   0x170) postponeMessageNotifyTimerCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f2cc (    0xec) postponeMessageNotifyCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f3b8 (   0x114) postponeMessageTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f4cc (   0x108) complete_coordinated_distributed_notification(CGXCoordinatedDistributedNotificationState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f5d4 (    0xe4) timeout_coordinated_distributed_notification(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f6b8 (    0xd8) invocation function for block in timeout_coordinated_distributed_notification(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f790 (   0x1c4) CGXGetConnectionAppName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f954 (    0x10) connectionReenableCursorObscureCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6f964 (    0xd0) connection_disable_assessment_mode(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fa34 (    0x84) invocation function for block in connection_disable_assessment_mode(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fab8 (     0xc) invocation function for block in connection_disable_assessment_mode(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fac4 (    0xe8) invocation function for block in screentime_suppress_connection(CGXConnection*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fbac (    0xc4) CGXConnectionPostCoordinatedDistributedNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fc70 (   0x264) post_coordinated_distributed_notification(SLSCoordinatedDistributedNotificationType, double, unsigned int, x_list_struct*, x_list_struct*, __CFData const*, unsigned long long*, void (unsigned long long, CGXConnection*) block_pointer, void (unsigned long long, bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fed4 (    0x10) invocation function for block in post_coordinated_distributed_notification(SLSCoordinatedDistributedNotificationType, double, unsigned int, x_list_struct*, x_list_struct*, __CFData const*, unsigned long long*, void (unsigned long long, CGXConnection*) block_pointer, void (unsigned long long, bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c6fee4 (   0x130) invocation function for block in screentime_suppress_connection(CGXConnection*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70014 (   0x12c) CGXUpdateScreenWatcherStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70140 (   0x314) dirty_region_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70454 (     0x4) delayed_dirty_screen_state_dispose(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70458 (     0xc) waitCursorActivateCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70464 (    0x44) connection_show_wait_cursor_internal(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c704a8 (    0x90) process_connection_event_ping_port_death(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70538 (    0x44) notePortDeathCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7057c (   0x1a0) connectionHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7071c (   0x288) invocation function for block in connectionHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c709a4 (    0xbc) invocation function for block in connectionHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70a60 (   0x200) invocation function for block in connectionHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70c60 (    0x20) CGXNextConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70c80 (    0x3c) CGXForegroundAppConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70cbc (    0x6c) getBooleanForKey(__CFDictionary const*, __CFString const*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70d28 (    0xa4) connection_stopped_spinning_internal(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70dcc (    0x34) connection_hide_wait_cursor_internal(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70e00 (   0x130) WSConnectionWriteNotifyDatagram [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c70f30 (   0x378) write_datagram(CGXConnection*, bool, CGSDatagramType, void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c712a8 (   0x300) send_datagram_available_ping(CGXConnection*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c715a8 (   0x110) CGXConnectionsExist [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c716b8 (    0x34) __CGXConnectionsExist_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c716ec (   0x1b0) connection_set_windows_default_to_sticky(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7189c (   0x160) connection_update_default_space_property(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c719fc (   0x1a4) connection_set_default_space(CGXConnection*, PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c71ba0 (  0x1160) _CGXNewConnectionPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c72d00 (    0xd0) caller_holds_entitlement(char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c72dd0 (   0x10c) ___CGXNewConnectionPort_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c72edc (    0x5c) notify_interest_set_create_from_sorted_array(unsigned int const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c72f38 (    0xb8) connection_set_bundle_id(CGXConnection*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c72ff0 (    0x80) CGXSetConnectionCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73070 (    0xbc) connection_enable_assessment_mode(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7312c (    0x6c) invocation function for block in connection_enable_assessment_mode(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73198 (    0x84) CGXPopConnectionSetCursorIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7321c (    0x3c) __CGXPopConnectionSetCursorIfNeeded_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73258 (   0x108) connection_set_default_space_value(CGXConnection*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73360 (   0x754) CGXSetConnectionProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73ab4 (    0xcc) connection_set_default_space_compat_value(CGXConnection*, __CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73b80 (    0x8c) connection_invalidate_cursor_restriction_shape(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73c0c (    0x70) update_menubar_tracking_display_rect(CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73c7c (   0x11c) connection_set_safe_aperture_compatibility(CGXConnection*, __CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73d98 (    0x6c) connection_set_needs_safe_area_inset_shield(CGXConnection*, __CFBoolean const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73e04 (    0x58) invocation function for block in connection_set_safe_aperture_compatibility(CGXConnection*, __CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73e5c (    0x84) menubar_tracking_display_update_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73ee0 (    0x6c) menubar_tracking_display_rect() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c73f4c (   0x1b4) _CGXSetLoginNameAndParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74100 (    0xa4) remove_connection_death_notification(CGXConnectionNotificationContext*, void (*)(CGXConnection*, void*), void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c741a4 (    0x10) CGXRemoveConnectionDeathNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c741b4 (    0xc4) register_connection_death_notification(CGXConnectionNotificationContext*, void (*)(CGXConnection*, void*), void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74278 (    0x14) CGXRegisterForConnectionDeathNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7428c (    0x70) CGXSetConnectionUntrustedProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c742fc (    0x5c) CGXCopyConnectionProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74358 (   0x1cc) get_connection_property(unsigned int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74524 (   0x15c) _CGXSetConnectionProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74680 (   0x7b8) CGXDumpConnections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74e38 (    0xac) get_connection_psn_string(unsigned int, char*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c74ee4 (   0x348) WSConnectionAddConnectionsToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7522c (    0x40) is_force_quit_inhibited() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7526c (   0x150) _CGXConnectionsForPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c753bc (    0x58) connWillDestroySpaceProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75414 (    0xf0) connDidDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75504 (    0xa8) std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>::~deque[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c755ac (    0x50) std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c755fc (    0x6c) connWillDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75668 (    0xec) connWillCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75754 (    0x68) invocation function for block in connWillCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c757bc (    0xb4) CGXCallerIsUniversalOwnerProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75870 (    0xb4) _CGXPostBroadcastNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75924 (    0xb0) _CGXPostNotificationToConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c759d4 (   0x1d4) sync_process_notify_interests(CGXConnection*, unsigned int const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75ba8 (   0x158) diff_sorted_interest_types_arrays(WSNotifyInterestSet const*, unsigned int const*, unsigned int, unsigned int*, unsigned long, unsigned long*, unsigned int*, unsigned long, unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75d00 (    0x80) notify_interest_set_equate_to_sorted_interest_types_array(WSNotifyInterestSet*, unsigned int const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75d80 (    0x18) invocation function for block in sort_interest_types_array(unsigned int*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75d98 (    0x54) WSSymbolicHotKeyBitMaskSetBit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75dec (    0x4c) WSSymbolicHotKeyBitMaskIsBitSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75e38 (    0x3c) WSPrimaryConnectionForVersionedPidToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75e74 (    0x28) WSDatagramPingSetShouldBoost [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75e9c (    0x3c) WSPrimaryConnectionForPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75ed8 (    0x50) WSForegroundProcessConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c75f28 (   0x228) _CGXPostCoordinatedDistributedNotificationFenced [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76150 (    0x68) ___CGXPostCoordinatedDistributedNotificationFenced_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c761b8 (     0x8) loginWindowCoordinatedDistributedNotificationWaitFilter(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c761c0 (    0x1c) loginWindowCoordinatedDistributedNotificationPostFilter(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c761dc (    0x94) defaultCoordinatedDistributedNotificationPostFilter(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76270 (    0xf0) defaultCoordinatedDistributedNotificationWaitFilter(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76360 (    0x28) ___CGXCoordinatedDistributedNotificationMarkCompletion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76388 (    0x28) ___CGXCopyCoordinatedDistributedNotificationFencePort_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c763b0 (    0x68) WSSessionConnectionDataPushPluginOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76418 (    0x84) std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>::push_back(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7649c (   0x34c) std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>::__add_back_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c767e8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned int*>>(std::__1::allocator<unsigned int*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76820 (   0x108) std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>>::push_back(unsigned int*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76928 (   0x120) std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>>::push_front(unsigned int*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76a48 (   0x108) std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>&>::push_back(unsigned int*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76b50 (   0x11c) std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>&>::push_front(unsigned int* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76c6c (    0xe0) WSSessionConnectionDataPopPluginOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76d4c (    0xc8) WSConnectionAllowsPluginAccess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76e14 (   0x10c) CGXConnectionCopyBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76f20 (    0x84) WSSemaphoreRegister [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c76fa4 (    0x84) global_semaphore_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77028 (    0x74) global_semaphore_set() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7709c (    0xbc) std::__1::pair<std::__1::__tree_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, bool> std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int, unsigned int const&>(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77158 (    0xf0) WSSemaphoreFinish [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77248 (    0x7c) unsigned long std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c772c4 (    0x74) std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__remove_node_pointer(std::__1::__tree_node<unsigned int, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77338 (    0xd8) WSSemaphoreFinishAll [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77410 (   0x1b8) WSConnectionTrackOverrideImpl [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c775c8 (    0xf4) WSConnectionInvalidateTrackedOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c776bc (     0x8) WSControlCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c776c4 (    0x48) _EVGIsSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7770c (    0x5c) _EVGEventsAvailable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77768 (   0x13c) _EVGSetMouseLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c778a4 (    0xac) _EVGSetCursorFrames [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77950 (    0x88) _EVGLockCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c779d8 (    0x48) _EVGUnlockCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77a20 (   0x458) CGXGetNextEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77e78 (    0x40) __CGXGetNextEvent_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77eb8 (     0xc) CGXEventDriverPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c77ec4 (   0x160) CGXCloseEventDriver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78024 (    0xec) CGXNeXTGetCurrentCursorLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78110 (   0x120) CGXNeXTSetCurrentCursorLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78230 (   0x3b0) CGXWarpCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c785e0 (    0x54) CGXDecoupleCursorAndMouse [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78634 (    0x84) CGXCoalesceHIDEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c786b8 (     0xc) CGXAreCursorAndMouseDecoupled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c786c4 (   0x510) sHIDContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78bd4 (    0x40) invocation function for block in sHIDContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78c14 (    0x1c) SLSCanCoalesceEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78c30 (    0x1c) SLSCoalesceEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78c4c (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c78c6c (     0x8) SLSEventRecordLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78c74 (   0x134) SLSSetIOHIDEventSystemClientProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78da8 (   0x138) __SLSSetIOHIDEventSystemClientProperty_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78ee0 (    0xb4) SLSActuateDeviceWithPattern [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c78f94 (   0x100) SLSSetPressureConfigurationOverride [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79094 (    0xe8) __SLSSetPressureConfigurationOverride_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7917c (    0x60) SLSInputButtonState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c791dc (    0xd0) SLSInputKeyState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c792ac (    0x8c) SLSGetCurrentMouseButtonState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79338 (    0xf4) SLSInputModifierKeyState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7942c (    0x2c) SLSGetCurrentCursorLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79458 (    0x3c) SLSCurrentInputPointerPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79494 (   0x178) SLSSetSecureEventInput [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7960c (    0x2c) SLSIsSecureEventInputSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79638 (    0x2c) SLSIsScreenWatcherPresent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79664 (   0x144) SLSGetKeys [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c797a8 (    0x24) SLSCurrentKeyboardEventSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c797cc (    0xf0) SLSServerOperationState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c798bc (    0x3c) SLSClearEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c798f8 (    0x54) SLSCurrentEventTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7994c (    0x28) __SLSCurrentEventTimestamp_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79974 (    0x14) SLSRealTimeStampFromEventRecordTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79988 (    0x70) SLSSecondsSinceLastInputEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c799f8 (    0x80) SLSSecondsSinceMostRecentEventInMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79a78 (    0x48) SLSEventCounter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79ac0 (    0x78) SLSAreEventsCaptured [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79b38 (    0x90) SLSAreEventsCapturedReturningMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79bc8 (    0xb8) SLSSetEventCapture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79c80 (    0xb4) SLSSetEventCaptureWindowAndMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79d34 (    0xb0) SLSEventSetAppIsUnresponsiveNotificationTimeout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79de4 (   0x1d0) SLSEventAppUnresponsiveStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c79fb4 (    0x70) SLSEventIsAppUnresponsive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a024 (    0xc4) SLSGetUnflippedWindowEventLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a0e8 (    0x94) SLSGetUnflippedEventLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a17c (    0x5c) SLSEventRecordSetContextOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a1d8 (    0x30) SLSEventRecordGetContextOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a208 (    0x3c) SLSEventRecordSetUnmodifiedTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a244 (    0x1c) SLSEventRecordGetUnmodifiedTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a260 (    0x3c) SLSEventRecordSetDFRTouchTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a29c (    0x18) SLSEventRecordGetDFRTouchTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a2b4 (    0x3c) SLSEventRecordSetUnacceleratedPointerMoveX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a2f0 (    0x3c) SLSEventRecordSetUnacceleratedPointerMoveY [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a32c (    0x18) SLSEventRecordGetUnacceleratedPointerMoveX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a344 (    0x18) SLSEventRecordGetUnacceleratedPointerMoveY [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a35c (    0x54) SLSEventRecordSetAuditToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a3b0 (    0x24) SLSEventRecordGetTransitionProgress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a3d4 (    0x24) SLSEventRecordGetStagePressure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a3f8 (    0x90) SLSEventRecordGetCompoundInt [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a488 (    0x90) SLSEventRecordSetCompoundInt [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a518 (   0x104) SLSCopyDevicesDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a61c (   0x304) __SLSCopyDevicesDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a920 (    0x7c) update_devices_from_data_internal(void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a99c (    0x50) invocation function for block in update_devices_from_console_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7a9ec (    0x18) invocation function for block in update_devices_from_console_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7aa04 (    0x2c) invocation function for block in get_devices_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7aa30 (   0x108) SLSDefaultKeyboardID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ab38 (   0x188) SLSGetLastUsedKeyboardID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7acc0 (    0xec) devices_changed_notify_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7adac (    0x10) invocation function for block in devices_changed_notify_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7adbc (    0xd4) devices_connection_change_handler(unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ae90 (   0x1b8) invocation function for block in devices_connection_change_handler(unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b048 (    0xac) SLSSetCursorDragLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b0f4 (    0xa0) SLSSetCursorRegionLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b194 (    0xc0) __SLSSetCursorRegionLock_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b254 (    0xa4) SLSUpdateLastEventTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b2f8 (    0x50) SLSPreflightPostEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b348 (    0x78) tccPostEventService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b3c0 (   0x1d8) (anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b598 (    0x70) invocation function for block in (anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b608 (   0x150) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<(anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*)::$_0&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b758 (    0x44) (anonymous namespace)::SLSTCCService::SLSTCCService(__CFString const*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b79c (     0x4) invocation function for block in tccPostEventService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b7a0 (    0x28) SLSRequestPostEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b7c8 (    0x9c) (anonymous namespace)::SLSTCCService::requestAccess() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b864 (    0x58) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<(anonymous namespace)::SLSTCCService::requestAccess()::$_1&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b8bc (    0x50) SLSPreflightListenEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b90c (    0x78) tccListenEventService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b984 (    0x68) SLSRequestListenEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7b9ec (    0x9c) __SLSRequestListenEventAccess_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ba88 (    0x50) SLSPreflightScreenCaptureAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bad8 (    0x78) tccScreenCaptureService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bb50 (    0x90) invocation function for block in tccScreenCaptureService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bbe0 (    0x28) SLSRequestScreenCaptureAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bc08 (   0x1bc) SLSPreflightScreenCaptureWithWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bdc4 (   0x1e0) SLSPreflightScreenCaptureWithWindowIDArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7bfa4 (   0x284) get_high_priority_radius_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7c228 (   0x284) get_shadow_shader_supported_high_priority_radius_array [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7c4ac (    0x74) hp_radius_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7c520 (    0x6c) hp_radius_vec() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7c58c (    0x8c) sort_and_remove_duplicates(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7c618 (   0x424) get_shadow_shader_supported_low_priority_radiuses() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ca3c (    0x6c) lp_radius_vec() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7caa8 (    0x5c) get_index_of_nearest_supported_radius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cb04 (    0x38) get_nearest_supported_radius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cb3c (     0x8) get_nearest_supported_rim_radius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cb44 (   0x11c) __monitorRBProcessState_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cc60 (    0xd4) __setupMonitor_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cd34 (   0x104) __setupMonitor_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ce38 (    0x44) SLDisplayStreamUpdateGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ce7c (    0x28) __SLDisplayStreamUpdateGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cea4 (    0x88) displaystreamupdate_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cf2c (    0x3c) SLSDisplayStreamUpdateCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7cf68 (   0x1a0) SLSCaptureStreamUpdateCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d108 (   0x18c) SLDisplayStreamUpdateCreateMergedUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d294 (   0x170) SLDisplayStreamUpdateGetRects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d404 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c7d418 (   0x10c) displaystreamupdate_build_refresh_rects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d524 (   0x128) displaystreamupdate_build_move_rects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d64c (   0x184) displaystreamupdate_build_dirty_rects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d7d0 (    0xe0) displaystreamupdate_build_window_rects [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d8b0 (    0x90) SLDisplayStreamUpdateGetMovedRectsDelta [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d940 (    0x70) SLDisplayStreamUpdateGetDropCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d9b0 (    0x44) SLDisplayStreamGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7d9f4 (    0x28) __SLDisplayStreamGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7da1c (    0x14) displayStreamFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7da30 (   0x12c) SLDisplayStreamSupportsPixelFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7db5c (   0x1cc) SLDisplayStreamCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7dd28 (   0x29c) SLDisplayStreamCreateCommon [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7dfc4 (    0x74) SLSDisplayStreamCreateCustom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e038 (    0xc4) displayStreamGetRunLoopSource [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e0fc (    0xc0) displayStreamRunLoopPerform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e1bc (   0x214) displayStreamDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e3d0 (   0x180) displayStreamStop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e550 (   0x180) displayStreamStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e6d0 (    0xe8) SLDisplayStreamCreateWithDispatchQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e7b8 (    0x20) __SLDisplayStreamCreateWithDispatchQueue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e7d8 (    0x94) SLSDFRDisplayStreamCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e86c (    0x40) __SLSDFRDisplayStreamCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e8ac (   0x140) SLDisplayStreamStart [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7e9ec (   0x140) SLDisplayStreamStop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7eb2c (    0x90) SLDisplayStreamGetRunLoopSource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ebbc (   0x19c) SLSHWCaptureStreamCreateWithWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ed58 (   0x1cc) __SLSHWCaptureStreamCreateWithWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ef24 (    0x20) __SLSHWCaptureStreamCreateWithWindow_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7ef44 (   0x2b4) SLContentStreamCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f1f8 (   0x1c0) __SLContentStreamCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f3b8 (    0x20) __SLContentStreamCreate_block_invoke.27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f3d8 (   0x1d4) SLContentStreamUpdateProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f5ac (   0x1c0) __SLContentStreamUpdateProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f76c (     0x4) Compositor::CopySurface(__IOSurface*, CGColorSpace*, CGRect, __IOSurface*, CGColorSpace*, CGRect, CGSRegionObject*, float vector[4]) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f770 (     0x4) Compositor::FillSurface(__IOSurface*, CGRect, WSPixelFormat, float vector[4]) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f774 (    0x28) Compositor::CompositeLayersToDestination(WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7f79c (   0x414) Compositor::prepare_layers(WSCompositeSourceLayer*, WSCompositeDestination*, int**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7fbb0 (   0x15c) WSGetCompositorMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7fd0c (    0x74) metal_compositor_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7fd80 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, Compositor*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, Compositor*>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c7fe34 (   0x3dc) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, Compositor*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, Compositor*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, Compositor*>>>::__emplace_unique_key_args<unsigned int, std::__1::pair<unsigned int, Compositor*>>(unsigned int const&, std::__1::pair<unsigned int, Compositor*>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80210 (    0x74) HaveMetalCompositorForAccelerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80284 (    0x7c) invocation function for block in initialize_compositors() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80300 (    0x6c) WSCompositorMaxWidth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8036c (    0x6c) WSCompositorMaxHeight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c803d8 (    0xcc) debug_set_acceleration(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c804a4 (   0x34c) WSCompositorSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c807f0 (    0xa4) activate_compositor_metal(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80894 (    0xa8) activate_compositor_sw(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8093c (    0x54) __WSCompositorSetDebugOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80990 (    0xa8) __WSCompositorDestroyAllTextures_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80a38 (    0xc8) WSCompositorSetLayerDetachment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80b00 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c80b20 (    0x28) WSCompositeSourceLayerCreateCombinedDrawShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80b48 (    0xa0) WSCompositorActivateDefault [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80be8 (    0x54) invocation function for block in activate_compositor_default() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80c3c (    0x58) WSMetalCompositorEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80c94 (   0x1f0) WSCompositorSetMipmapDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80e84 (    0x54) __WSCompositorSetMipmapDebugOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80ed8 (    0x68) compositor_debug_should_skip(WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c80f40 (   0x210) WSCompositorDebuggingRemoveAccelerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81150 (    0xc8) WSCompositorDebuggingCleanupShadowResources [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81218 (    0x78) __WSCompositorDebuggingCleanupShadowResources_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81290 (    0x44) __WSCompositorDebuggingCleanupShadowResources_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c812d4 (   0x2c0) WSCompositorFillSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81594 (   0x150) WSCompositorCopySurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c816e4 (    0xc8) WSGetCompositorForAccelerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c817ac (    0x64) get_current_session_sym_key_table [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81810 (    0x84) get_current_session_mutable_sym_key_table [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81894 (    0xec) CGXGetSymbolicHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81980 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c81990 (    0xf4) WSHotKeyRepresentationIsCanonical [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81a84 (   0x1f4) mesh_cell_initialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81c78 (    0x8c) MeshCreateCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81d04 (   0x190) CGRegionCreateByApplyingMesh [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c81e94 (   0xba4) MeshTransformPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c82a38 (    0x7c) recontextualizeAngles [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c82ab4 (  0x19b0) MatchRectToMeshWithTextureRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84464 (   0x148) shortenCellEdges [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c845ac (    0xac) MeshGetBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84658 (    0xd0) AmbientDisplayLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84728 (    0x50) invocation function for block in getAMBDCreateIntentionContextSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84778 (    0x88) AmbientDisplayLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84800 (    0x50) invocation function for block in getAMBDWarpLUTbasedOnIntentionInContextSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84850 (    0x74) invocation function for block in AmbientDisplayLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c848c4 (    0x50) invocation function for block in getAMBDDestroyIntentionContextSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84914 (   0x14c) WS::Displays::AmbientDisplayEngine::~AmbientDisplayEngine() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84a60 (   0x15c) invocation function for block in WS::Displays::AmbientDisplayEngine::load_preferences(int, bool, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84bbc (    0x50) invocation function for block in getAMBDapplyIntentionFromPreferencesForDisplayIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84c0c (    0x50) invocation function for block in getAMBDcontextSetDisplayIntentionSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84c5c (    0x50) invocation function for block in getAMBDLerpLUTinContextSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84cac (    0x50) invocation function for block in getAMBDcopyDesiredPipelineState2SymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84cfc (    0x20) CGXGlobalCursorRegistryAddCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84d1c (   0x25c) update_session_cursor_window(CGXSession*, CGPoint const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c84f78 (   0x144) broadcast_to_online_displays(std::__1::function<void (WS::Displays::Display*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c850bc (    0x84) std::__1::__function::__value_func<void (WS::Displays::Display*)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c85140 (   0x150) CGXReloadWaitCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c85290 (   0x4b4) update_cursor_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c85744 (    0x3c) active_cursor_frame_changed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c85780 (   0x7dc) CGXReloadCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c85f5c (   0x124) CGXSystemDefinedCursorRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86080 (    0xb4) CGXHardwareCursorActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86134 (   0x12c) CGXHWCursorIsAllowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86260 (    0xe8) set_cursor_window(CGXSession*, CGXWindow*, CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86348 (    0xb8) CGXCursorInFrameBuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86400 (    0xb4) anim_cursor_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c864b4 (   0x120) CGXFindCursorRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c865d4 (    0x34) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::operator()(WS::Displays::Display*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86608 (     0x4) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8660c (     0x4) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86610 (    0x20) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::__clone(std::__1::__function::__base<void (WS::Displays::Display*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86630 (    0x38) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86668 (     0x4) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8666c (     0x4) std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86670 (    0x60) CGXDisableAllDevicesForWindowedCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c866d0 (    0x30) CGXGlobalWaitCursorEnable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86700 (    0x10) CGXSetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86710 (   0x1b0) set_cursor(CGXCursor*, WSCursorFrameNumber, bool, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c868c0 (    0x80) CGXSetStaticCursors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86940 (   0x188) CGXUpdateHardwareColorCursors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86ac8 (   0x170) CGXHideCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86c38 (   0x17c) CGXShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86db4 (   0x1e0) CGXForceShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c86f94 (   0x184) CGXRevealCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87118 (    0x34) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::operator()(WS::Displays::Display*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8714c (     0x4) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87150 (     0x4) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87154 (    0x20) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::__clone(std::__1::__function::__base<void (WS::Displays::Display*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87174 (    0x38) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c871ac (     0x4) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c871b0 (     0x4) std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c871b4 (    0x90) rebuild_cursor(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87244 (    0x38) CGXSetBaseCursorScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8727c (    0xa4) CGXRequestSoftwareCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87320 (    0x54) CGXRelinquishSoftwareCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87374 (   0x170) CGXPinCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c874e4 (    0xa0) window_will_terminate_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87584 (    0x78) cursor_did_destroy_session_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c875fc (    0x80) cursor_will_destroy_session_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8767c (    0x74) cursor_will_create_session_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c876f0 (   0x49c) CGXDumpCursorInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87b8c (    0x90) WSBroadcastCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c87c1c (   0x7d4) CGXDumpCursorManagerInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c883f0 (   0x734) WSAddCursorInfoToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c88b24 (   0x7f0) WSAddCursorManagerInfoToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89314 (    0x68) CGXWindowRightsRecordFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8937c (   0x120) _ConnectionRelinquishWindowRights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8949c (   0x4c0) _WindowCompleteGrantWithResult [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8995c (    0x84) CGXWindowGetConnectionHeldRights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c899e0 (    0x48) _RightsRecordApplyGrant [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89a28 (    0x7c) _WindowClearRightsGrant [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89aa4 (    0xc8) _WindowRightsGrantExpirationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89b6c (    0xbc) _RightsRecordExtendRightsToRecipient [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89c28 (   0x164) _ConnectionHoldsSingleRightOnWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89d8c (    0xc0) _ConnectionHoldsExclusiveRightOnWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89e4c (    0x70) window_grant_masked_rights_for_connection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89ebc (    0x3c) _ConnectionsEquivalent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89ef8 (    0x84) _ConnectionRelinquishDirectNonExclusiveRight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c89f7c (    0x88) _ConnectionCheckUniversalOwnerAccess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a004 (    0x84) _RightsMaskGetDescriptionCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a088 (    0xcc) connection_holds_rights_on_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a154 (    0xb0) _ConnectionHoldsRightsOnWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a204 (   0x280) WSCheckWindowRights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a484 (   0x118) _WindowCreateRightsGrant [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8a59c (   0x4dc) _WindowSendRightsGrantOfferedNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8aa78 (    0x58) ___RightsRecordCreateDescriptionDictionary_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8aad0 (    0xcc) ___RightsRecordCreateDescriptionDictionary_block_invoke.62 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ab9c (    0x90) ___RightsRecordCreateDescriptionDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ac2c (    0xd0) determine_required_pixel_format(WSCALayerBacking*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8acfc (    0xe4) is_valid_flattening_request(CGRect, unsigned int, unsigned int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ade0 (   0x2b0) create_source_layer_for_flatten(WSCALayerBacking*, CaptureSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b090 (    0x54) release_composite_layer(WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b0e4 (    0x54) WSFlattenedRepresentation::InvalidateRegion(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b138 (    0x84) WSFlattenedRepresentation::GetSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b1bc (   0x148) WSFlattenedRepresentation::IsValidForUpdate(double, unsigned int, bool, bool, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b304 (   0x1f8) WSWindowIsUsuallyExcludedFromFlattening [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b4fc (   0x430) WSWindowOrSurfaceMustFlatten [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8b92c (   0x318) WSFlatteningSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8bc44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c8bc54 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x0000000185c8bc90 (    0x54) __WSFlatteningSetDebugOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8bce4 (    0xd0) WSWindowFilteringType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8bdb4 (    0xa8) data_timeline_did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8be5c (   0x17c) invocation function for block in data_timeline_did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8bfd8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SessionStats>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, SessionStats>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SessionStats>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SessionStats>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SessionStats>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c08c (    0xa0) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SessionStats>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SessionStats>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c12c (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c184 (    0xa8) data_timeline_will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c22c (   0x40c) invocation function for block in data_timeline_will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c638 (    0xa8) WSDataTimelineProcessAddConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c6e0 (    0x80) __WSDataTimelineProcessAddConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c760 (    0xd0) perform_block_on_session_stats_async(unsigned int, void (SessionStats&) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c830 (    0x60) invocation function for block in perform_block_on_session_stats_async(unsigned int, void (SessionStats&) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8c890 (   0x23c) SessionStats::operator[](int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cacc (    0x60) std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::unordered_set(std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cb2c (    0xcc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>>>::__emplace_unique_key_args<int, int&, std::__1::shared_ptr<ProcessStats>&>(int const&, int&, std::__1::shared_ptr<ProcessStats>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cbf8 (    0xe4) unsigned long std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>>>::__erase_unique<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ccdc (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cd34 (     0x4) std::__1::__shared_ptr_emplace<ProcessStats, std::__1::allocator<ProcessStats>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cd38 (     0x8) std::__1::__shared_ptr_emplace<ProcessStats, std::__1::allocator<ProcessStats>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cd40 (    0x44) std::__1::__shared_ptr_emplace<ProcessStats, std::__1::allocator<ProcessStats>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cd84 (    0x20) std::__1::__shared_ptr_emplace<ProcessStats, std::__1::allocator<ProcessStats>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cda4 (    0xa0) __WSDataTimelineProcessRemoveConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ce44 (    0x38) unsigned long std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ce7c (    0xb4) WSDataTimelineProcessSetForeground [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cf30 (    0xb0) __WSDataTimelineProcessSetForeground_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8cfe0 (    0xb4) WSDataTimelineProcessChangeWindowState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d094 (   0x118) __WSDataTimelineProcessChangeWindowState_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d1ac (   0x62c) __WSDataTimelinePushWindowStateForCurrentTime_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d7d8 (    0x68) TimelineClient::getLastSnapshotIndexTimestamp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d840 (    0x74) TimelineClient::getClientMap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d8b4 (    0x6c) TimelineClient::createServerSnapshotTaggedXPCDict() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d920 (    0x5c) SessionStats::createPlaceholderXPCObject() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8d97c (   0x1d4) SessionStats::createXPCObject() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8db50 (   0x1e8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>>>::__emplace_hint_unique_key_args<int, std::__1::pair<int const, std::__1::shared_ptr<ProcessStats>> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<ProcessStats>>, void*>*, long>, int const&, std::__1::pair<int const, std::__1::shared_ptr<ProcessStats>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList...
                0x0000000185c8dd38 (   0x14c) WSDataTimelineDebug [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8de84 (    0x10) invocation function for block in data_timeline_remove_all_processes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8de94 (    0x60) invocation function for block in data_timeline_remove_all_processes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8def4 (    0x94) invocation function for block in data_timeline_add_all_processes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8df88 (    0x50) invocation function for block in data_timeline_add_all_processes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8dfd8 (    0xa8) WSDumpDataTimeline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8e080 (   0x140) __WSDumpDataTimeline_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8e1c0 (   0x790) __WSDumpDataTimeline_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8e950 (    0xfc) ProcessStats::Equals(ProcessStats*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ea4c (    0xc8) SessionStats::AddDebugDescriptionHeaderToFile(__sFILE*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8eb14 (   0x3a4) ProcessStats::AddDebugDescriptionToFile(__sFILE*, unsigned int, bool, ProcessStats*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8eeb8 (   0x220) _ZNSt3__116__set_differenceB7v160006INS_17_ClassicAlgPolicyERNS_3mapIiNS_10shared_ptrI12ProcessStatsEENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEE13value_compareERNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeIiS5_EEPNS_11__tree_nodeISJ_PvEElEEEESQ_SQ_SQ_RNS_15insert_iteratorISD_EEEENS9_Iu14__remove_cvrefIT1_Eu14__remove_cvrefIT5_EEEOSU_OT2_OT3_OT4_OSW_OT0_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8f0d8 (    0x6c) std::__1::insert_iterator<std::__1::map<int, std::__1::shared_ptr<ProcessStats>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<ProcessStats>>>>>::operator=[abi:v160006](std::__1::pair<int const, std::__1::shared_ptr<ProcessStats>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8f144 (    0x94) TimelineClient::createRootConnectionEndpoint() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8f1d8 (    0x54) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<TimelineClient::createRootConnectionEndpoint()::'lambda'()&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8f22c (   0x530) invocation function for block in TimelineClient::createRootConnectionEndpoint()::'lambda'()::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8f75c (   0x528) invocation function for block in TimelineClient::TimelineClient(_xpc_connection_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fc84 (     0x4) std::__1::__shared_ptr_emplace<TimelineClient, std::__1::allocator<TimelineClient>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fc88 (    0x50) std::__1::__shared_ptr_emplace<TimelineClient, std::__1::allocator<TimelineClient>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fcd8 (    0x44) std::__1::__shared_ptr_emplace<TimelineClient, std::__1::allocator<TimelineClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fd1c (    0x20) std::__1::__shared_ptr_emplace<TimelineClient, std::__1::allocator<TimelineClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fd3c (    0xc8) SLSCopyRegionSerializedBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8fe04 (   0x134) SLSRegionPerformWithSerializedBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c8ff38 (   0x114) _CGXSelectiveSharingContextCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9004c (    0xb0) is_valid_display(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c900fc (    0x88) WSWindowFilter::operator=(WSWindowFilter const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90184 (    0xb4) WSWindowFilter::~WSWindowFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90238 (    0x74) SLSessionCopyCurrentDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c902ac (   0x13c) WS::Displays::LockShmem::write_lock_try() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c903e8 (    0x90) WS::Displays::LockShmem::reader_count() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90478 (   0x124) environApplierFunction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9059c (    0x4c) CGXFreeEnvironment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c905e8 (   0x25c) __CGXWorkspaceLauncher_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90844 (     0x8) DisplayStreamState::Accelerator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9084c (     0x4) DisplayStreamStateSW::WillUpdate(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90850 (   0x330) DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90b80 (    0x34) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90bb4 (     0x4) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90bb8 (     0x4) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90bbc (    0x24) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90be0 (    0x48) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90c28 (     0x4) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90c2c (     0x4) std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90c30 (    0x78) DisplayStreamStateSW::~DisplayStreamStateSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90ca8 (    0x84) std::__1::vector<QueueEntrySW, std::__1::allocator<QueueEntrySW>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90d2c (    0x68) DisplayStreamStateSW::~DisplayStreamStateSW() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90d94 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<QueueEntrySW>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<QueueEntrySW>>(std::__1::allocator<QueueEntrySW>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90dcc (    0x54) std::__1::__split_buffer<QueueEntrySW, std::__1::allocator<QueueEntrySW>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90e20 (    0x50) CGSBltBitmapRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90e70 (    0xe4) premultiply_ARGB32_bitmap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90f54 (    0x3c) get_premultiplied_pixel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c90f90 (   0x1b0) SLSWindowFreezeWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91140 (    0xa4) SLSWindowThaw [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c911e4 (    0x44) SkyLightConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91228 (   0x1d8) __SkyLightConfiguration_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91400 (    0x70) WSServerWidePreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91470 (   0x118) create_server_preferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91588 (    0x54) invocation function for block in create_server_preferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c915dc (    0x34) WSUserPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91610 (    0x3c) WSSetUserPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9164c (    0x48) WSPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91694 (    0x70) WSPreferenceIsSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91704 (    0xd4) WSIntegerPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c917d8 (    0xdc) WSBooleanPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c918b4 (    0xa8) WSSetPreferenceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9195c (   0x1ec) WSSaveServerWidePreferences [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91b48 (     0x8) __WSSaveServerWidePreferences_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91b50 (    0x78) invocation function for block in set_dictionary_in_preferences(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91bc8 (    0x70) configuration_did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91c38 (    0x30) configuration_will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91c68 (    0x84) ___CGXSavePerUserConfigurationData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91cec (    0x84) ___CGXSetPerUserConfigurationData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91d70 (    0xa8) __SLSLogInvalidEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91e18 (   0x128) SLEventCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91f40 (    0x8c) _SLEventCreate(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91fcc (    0x28) __SLEventGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c91ff4 (    0x54) event_finalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92048 (    0x24) invocation function for block in _SLSEventSourceGetDefault() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9206c (   0x138) SLEventCreateMouseEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c921a4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185c921c0 (   0x178) SLEventCreateKeyboardEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92338 (    0xc4) SLEventCreateScrollWheelEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c923fc (   0x1a4) create_scroll_wheel_event(__CGEventSource*, CGScrollEventUnit, int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c925a0 (    0x34) SLEventCreateScrollWheelEvent2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c925d4 (    0x84) SLEventCreateCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92658 (    0x90) SLEventCreateSourceFromEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c926e8 (    0x68) SLEventSetSource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92750 (    0x44) SLEventGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92794 (    0x2c) SLEventSetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c927c0 (    0x44) SLEventGetTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92804 (    0x2c) SLEventSetTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92830 (    0x58) SLEventGetLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92888 (    0x50) SLEventGetUnflippedLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c928d8 (    0xb0) SLEventSetLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92988 (    0x44) SLEventGetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c929cc (    0x2c) SLEventSetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c929f8 (    0x70) SLEventKeyboardGetUnicodeString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92a68 (   0x128) SLEventKeyboardSetUnicodeString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92b90 (    0x58) SLEventGetWindowLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92be8 (    0x50) SLEventGetUnflippedWindowLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92c38 (    0x2c) SLEventSetWindowLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c92c64 (   0x894) SLEventGetIntegerValueField [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c934f8 (    0x54) (null) [FUNC, FunctionStarts] 
                0x0000000185c9354c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185c93568 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185c935e4 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c93618 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x0000000185c936a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c936b4 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c936e8 (    0x30) (null) [FUNC, FunctionStarts] 
                0x0000000185c93718 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c93730 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c93740 (    0x9c) (null) [FUNC, FunctionStarts] 
                0x0000000185c937dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c937ec (    0x70) (null) [FUNC, FunctionStarts] 
                0x0000000185c9385c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c9386c (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c9388c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c9389c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000185c938c8 (   0x2bc) SLEventGetDoubleValueField [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c93b84 (    0x90) (null) [FUNC, FunctionStarts] 
                0x0000000185c93c14 (    0x90) (null) [FUNC, FunctionStarts] 
                0x0000000185c93ca4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c93cb8 (    0x2c) SLEventSetIntegerValueField [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c93ce4 (   0x760) SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94444 (    0x54) (null) [FUNC, FunctionStarts] 
                0x0000000185c94498 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185c944b4 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185c94530 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x0000000185c945bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c945cc (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c94600 (    0x30) (null) [FUNC, FunctionStarts] 
                0x0000000185c94630 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185c94648 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c94658 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185c94678 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185c94688 (    0x94) setTabletPointIntegerValue(_CGSTabletPointData&, CGEventField, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9471c (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c94750 (    0x84) setTabletProximityIntegerValue(_CGSTabletProximityData&, CGEventField, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c947d4 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000185c94800 (    0x2c) SLEventSetDoubleValueField [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9482c (   0x2a4) SLEventRecordSetDoubleValue(SLSEventRecord*, CGEventField, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94ad0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c94ae4 (    0x90) (null) [FUNC, FunctionStarts] 
                0x0000000185c94b74 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c94b88 (    0xac) SLEventSetIOHIDEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94c34 (    0x5c) SLEventCopyIOHIDEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94c90 (    0xa4) SLEventSetAuthenticationMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94d34 (    0x5c) SLEventCopyAuthenticationMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94d90 (    0x48) SLEventAuthenticationMessageCopyData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94dd8 (    0x90) SLEventCreateWithEventRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94e68 (    0xb0) SLEventGetEventRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94f18 (    0x40) SLEventCreateNextEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94f58 (    0x44) SLEventCopyNextEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94f9c (    0x44) SLEventRecordPointer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c94fe0 (    0x64) SLEventCreateFromData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95044 (    0x94) SLEventCreateFromDataAndSource [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c950d8 (   0x360) SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95438 (   0x440) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_21::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95878 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c9588c (    0x54) SLEventData::decode_u32() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c958e0 (    0xa4) SLEventData::decode_u64() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95984 (    0xb0) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95a34 (    0x9c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_19::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95ad0 (    0x70) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95b40 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_17::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95b6c (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_16::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95b98 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_15::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95bc4 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_14::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95bf0 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_13::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95c1c (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_12::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95c48 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_11::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95c74 (    0x48) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_10::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95cbc (    0xd4) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_9::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95d90 (    0x80) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_8::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95e10 (    0x80) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_7::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95e90 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_6::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95ebc (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_5::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95ee8 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_4::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95f14 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_3::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95f40 (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_2::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95f6c (    0x2c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_1::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95f98 (    0x3c) SLEventGetFieldDecodeDescriptor(SLEventToken)::$_0::__invoke(SLSEventRecord*, SLEventToken, SLEventData&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c95fd4 (    0xe8) SLEventCreateData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c960bc (   0xcd0) _SLEventRecordCreateData(SLSEventRecord const*, SLEventCreateDataOptions, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c96d8c (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185c96e08 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185c96e3c (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000185c96e64 (   0x124) SLEventMutableData::allocate(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c96f88 (    0x80) SLEventMutableData::encode_u32(CGEventField, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97008 (    0xac) SLEventMutableData::encode_point(CGEventField, CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c970b4 (    0x88) SLEventMutableData::encode_u64(CGEventField, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9713c (    0x7c) SLEventMutableData::encode_f32(CGEventField, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c971b8 (     0x8) invocation function for block in _SLEventRecordCreateData(SLSEventRecord const*, SLEventCreateDataOptions, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c971c0 (    0x98) SLEventMutableData::encode_data_in_bytes(CGEventField, void const*, unsigned long, void (void*, unsigned long) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97258 (    0x10) invocation function for block in _SLEventRecordCreateData(SLSEventRecord const*, SLEventCreateDataOptions, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97268 (    0xfc) encodeTabletPoint(SLEventMutableData&, _CGSTabletPointData const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97364 (    0xdc) encodeTabletProximity(SLEventMutableData&, _CGSTabletProximityData const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97440 (    0x50) encodeCompoundEvent(SLEventMutableData&, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97490 (    0x9c) SLEventMutableData::encode_array_u32(CGEventField, unsigned int const*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9752c (    0xdc) encodeHIDSwipe(SLEventMutableData&, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97608 (    0x10) __destroy_helper_block_8_32c28_ZTSN2WS5CFRefIPK8__CFDataEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97618 (    0x18) __copy_helper_block_8_32c28_ZTSN2WS5CFRefIPK8__CFDataEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97630 (    0xb4) CGSEncodeEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c976e4 (    0x44) SLEventGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97728 (     0x4) SLPreflightListenEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9772c (     0x4) SLRequestListenEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97730 (     0x4) SLPreflightPostEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97734 (    0x28) SLRequestPostEventAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9775c (    0x90) int_for_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c977ec (   0x138) create_filtered_array [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97924 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185c97938 (    0x90) compare_resolutions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c979c8 (   0x2c0) compare_modes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97c88 (    0x5c) WSDisplayUpdateQueueGetDisplayUpdateTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97ce4 (    0x5c) find_display_by_id(int, std::__1::set<DisplayScheduleEntry, std::__1::less<DisplayScheduleEntry>, std::__1::allocator<DisplayScheduleEntry>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97d40 (   0x140) WSDisplayUpdateQueueGetAllScheduledDisplayIDs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97e80 (   0x11c) WSDisplayUpdateQueueSchedule(int, double, WSTimerReschedulePolicy) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97f9c (    0x54) std::__1::__tree<DisplayScheduleEntry, std::__1::less<DisplayScheduleEntry>, std::__1::allocator<DisplayScheduleEntry>>::__remove_node_pointer(std::__1::__tree_node<DisplayScheduleEntry, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c97ff0 (    0xfc) std::__1::pair<std::__1::__tree_iterator<DisplayScheduleEntry, std::__1::__tree_node<DisplayScheduleEntry, void*>*, long>, bool> std::__1::__tree<DisplayScheduleEntry, std::__1::less<DisplayScheduleEntry>, std::__1::allocator<DisplayScheduleEntry>>::__emplace_unique_key_args<DisplayScheduleEntry, DisplayScheduleEntry const&>(DisplayScheduleEntry const&, DisplayScheduleEntry const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c980ec (   0x148) add_displays_from_list(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&, ScheduleUpdateType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98234 (    0x90) WSDisplayUpdateQueueRemoveDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c982c4 (   0x16c) WSDisplayQueueAddDisplaysByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98430 (    0xcc) WSDisplayUpdateQueueBackoff [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c984fc (    0x50) WSDisplayUpdateQueueClear [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9854c (    0xdc) _CGXOrderWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98628 (   0x1a0) _CGXSetWindowTransformList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c987c8 (   0x1c8) _CGXWindowListSetLockedBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98990 (    0x90) _CGXSetWindowListBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98a20 (     0x8) ___CGXReenableUpdateForConnectionSync_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98a28 (    0x98) _CGXSetWindowListSystemAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98ac0 (    0xd4) _CGXSetWindowProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98b94 (   0x148) _CGXShapeWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98cdc (    0xec) window_get_owner_and_rights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98dc8 (    0xd4) window_has_write_access [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c98e9c (   0x26c) _CGXAddTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99108 (   0x51c) _CGXFlushSurfaceInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99624 (    0xdc) _CGXShapeSurfaceInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99700 (    0xc8) _CGXSetSurfaceProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c997c8 (    0xd4) _CGXSetWindowListGlobalClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9989c (    0xcc) invalid_window_error [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99968 (    0xbc) _CGXSetWindowListFadeProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99a24 (   0x12c) PipZoomState::CreateCaptureSurfaceOnWindow(CGRect, CGXWindow*, std::__1::shared_ptr<WS::Displays::Display> const&, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99b50 (    0x58) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99ba8 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99bac (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99bb0 (    0x28) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99bd8 (    0x4c) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c24 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c28 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c2c (    0x58) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c84 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c88 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99c8c (    0x28) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99cb4 (    0x4c) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99d00 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99d04 (     0x4) std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99d08 (     0x4) pipzoom_session_will_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99d0c (   0x128) disable_pip_zoom() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99e34 (    0xdc) current_session_magic_zoom_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c99f10 (   0x12c) CGXCreateSystemWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9a03c (   0x8dc) CGXUpdateBackgroundWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9a918 (    0x4c) RenderState::~RenderState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9a964 (   0x27c) MetalContext::~MetalContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9abe0 (    0x84) MetalContext::Finish() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ac64 (    0xb8) std::__1::deque<RenderState, std::__1::allocator<RenderState>>::pop_back() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ad1c (    0xd8) std::__1::unique_ptr<WS::SurfacePool, std::__1::default_delete<WS::SurfacePool>>::reset[abi:v160006](WS::SurfacePool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9adf4 (    0x64) std::__1::__hash_table<std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>, std::__1::__unordered_map_hasher<LUTKey, std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>, LUTKeyHasher, std::__1::equal_to<LUTKey>, false>, std::__1::__unordered_map_equal<LUTKey, std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>, std::__1::equal_to<LUTKey>, LUTKeyHasher, true>, std::__1::allocator<std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ae58 (   0x178) std::__1::deque<RenderState, std::__1::allocator<RenderState>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9afd0 (   0x69c) MetalContext::Flush(bool, unsigned int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b66c (    0x4c) MetalContext::EndEncoders() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b6b8 (   0x21c) invocation function for block in MetalContext::Flush(bool, unsigned int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b8d4 (    0xb4) MetalContext::StopEncoding() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b988 (    0x10) __Block_byref_object_copy_.6373 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b998 (     0xc) __Block_byref_object_dispose_.6374 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9b9a4 (    0x5c) invocation function for block in MetalContext::InitCommandQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ba00 (    0xd0) MetalContext::BeginUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9bad0 (   0x538) RenderState& std::__1::deque<RenderState, std::__1::allocator<RenderState>>::emplace_back<>() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c008 (   0x238) MetalContext::StartCapture() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c240 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<RenderState*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<RenderState*>>(std::__1::allocator<RenderState*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c278 (   0x114) MetalContext::EndUpdate(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c38c (   0x194) MetalContext::StopCapture() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c520 (   0x1ec) make_gputrace_path_world_readable(NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c70c (   0x144) MetalContext::EndCurrentComposite(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c850 (    0x84) MetalContext::BlitEncoder() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9c8d4 (   0x28c) MetalContext::EnsureCurrentProtectionOptions() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9cb60 (   0x118) MetalContext::SetProtectionOptions(id<MTLCommandBuffer>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9cc78 (    0xd4) MetalContext::RenderCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9cd4c (   0x4bc) MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d208 (    0x14) invocation function for block in MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d21c (    0x14) invocation function for block in MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d230 (   0x144) invocation function for block in MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d374 (    0xa0) invocation function for block in MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d414 (    0x90) invocation function for block in MetalContext::PrepareNewCommandBuffer(std::__1::vector<void (id<MTLCommandBuffer>) block_pointer, std::__1::allocator<void (id<MTLCommandBuffer>)>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d4a4 (   0x4f4) MetalContext::StartComposite(WSCompositeDestination*, MTLLoadAction, MTLStoreAction) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9d998 (   0x100) setup_render_pass_descriptor(RenderState&, MTLLoadAction, MTLStoreAction) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9da98 (   0x28c) MetalContext::RenderEncoder() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9dd24 (    0x60) MetalContext::ClearScissor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9dd84 (   0x108) MetalContext::SetScissor(unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9de8c (   0x240) MetalContext::StartCompositeForDisplayStream(id<MTLTexture>, objc_object<MTLTexture>, MTLLoadAction, MTLStoreAction) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e0cc (    0xa0) MetalContext::StartComposite(id<MTLTexture>, MTLLoadAction, MTLStoreAction) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e16c (   0x184) MetalContext::SetPipelineState(id<MTLRenderPipelineState>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e2f0 (    0x78) MetalContext::SetProtectionOptions(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e368 (    0xa8) MetalContext::EncodeWaitForEvent(id<MTLSharedEvent>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e410 (    0xa8) MetalContext::EncodeSignalEvent(id<MTLSharedEvent>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e4b8 (    0xe4) MetalContext::BlitEncoderWithProtectionOptions(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e59c (   0x13c) MetalContext::SetRenderFragmentTexture(id<MTLTexture>, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e6d8 (   0x19c) MetalContext::ValidateResourceProtections(id<MTLResourceSPI>, objc_object<MTLResourceSPI>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e874 (    0xd0) MetalContext::SetOrtho2D(float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9e944 (    0xf0) MetalContext::SetViewport(double, double, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ea34 (   0x330) MetalContext::SetCARenderMTLState(CARenderMTLState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ed64 (    0xcc) MetalContext::GetCARenderMTLState(CARenderMTLState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ee30 (    0x54) flush_shared_ca_state(void*, id<MTLCommandBuffer>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ee84 (   0x998) MetalContext::GetColorConverter(CGColorSpace*, CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f81c (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<LUTKey, std::__1::shared_ptr<ColorConverter>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f878 (     0x4) std::__1::__shared_ptr_emplace<ColorConverter, std::__1::allocator<ColorConverter>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f87c (     0x8) std::__1::__shared_ptr_emplace<ColorConverter, std::__1::allocator<ColorConverter>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f884 (    0x44) std::__1::__shared_ptr_emplace<ColorConverter, std::__1::allocator<ColorConverter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f8c8 (    0x20) std::__1::__shared_ptr_emplace<ColorConverter, std::__1::allocator<ColorConverter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9f8e8 (   0x214) MetalContext::NoiseTexture(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9fafc (   0x220) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<id<MTLTexture>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, id<MTLTexture>>, std::__1::__unordered_map_hasher<unsigned int, id<MTLTexture>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, id<MTLTexture>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLTexture>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::piecewise_construct_t const&<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::piecewise_construct_t const&<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9fd1c (    0x9c) MetalContext::MipmapFriendlyPixelFormatForPixelFormat(MTLPixelFormat) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9fdb8 (    0xb0) MetalContext::GenerateMipmapsForTexture(id<MTLTexture>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9fe68 (   0x184) MetalContext::CopyBufferToTexture(id<MTLBuffer>, id<MTLTexture>, unsigned long, unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185c9ffec (   0x17c) MetalContextSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0168 (    0x5c) WS::Region::Union(WS::Region const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca01c4 (    0x60) WS::Region::Intersection(CGRect const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0224 (    0x60) WS::Region::Translate(float, float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0284 (    0x90) WS::Region::Transform(CGAffineTransform const&, CGRegionAdjustmentDirection) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0314 (   0x1fc) WS::Region::TransformRectwise(CGAffineTransform const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0510 (    0x5c) WS::Region::Scale(float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca056c (   0x40c) WSCompositeDestinationCreateWithMetalTexture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0978 (    0x58) __WSHIDEventDispatchQueue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca09d0 (   0x16c) check_texture_size_limits(CompositorMetal*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca0b3c (  0x10fc) create_shadow_texture_from_alpha_with_description(CompositorMetal*, id<MTLTexture>, CGRect, WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca1c38 (   0x484) determine_shadow_blur_shader_options(bool, unsigned int, int, WSShadowDescription&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca20bc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185ca20d0 (    0x88) radius_to_option_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2158 (   0x218) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long long>>>::__emplace_unique_key_args<unsigned int, unsigned int&, unsigned long long&>(unsigned int const&, unsigned int&, unsigned long long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2370 (    0xac) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long long>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca241c (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long long>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2618 (    0xd8) std::__1::shared_ptr<WSShadow> std::__1::allocate_shared[abi:v160006]<WSShadow, std::__1::allocator<WSShadow>, __IOSurface*&, WSShadowDescription&, void>(std::__1::allocator<WSShadow> const&, __IOSurface*&, WSShadowDescription&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca26f0 (    0x4c) CGSEventLoggingStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca273c (    0xcc) (anonymous namespace)::LogRingBuffer::LogRingBuffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2808 (   0x26c) (anonymous namespace)::get_application_name()::$_2::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2a74 (    0xc8) CGSEventLoggingStop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2b3c (   0x140) (anonymous namespace)::MessageLogger::print_log_entries(std::__1::vector<std::__1::unique_ptr<(anonymous namespace)::Log, std::__1::default_delete<(anonymous namespace)::Log>>, std::__1::allocator<std::__1::unique_ptr<(anonymous namespace)::Log, std::__1::default_delete<(anonymous namespace)::Log>>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2c7c (    0x88) std::__1::vector<std::__1::unique_ptr<(anonymous namespace)::Log, std::__1::default_delete<(anonymous namespace)::Log>>, std::__1::allocator<std::__1::unique_ptr<(anonymous namespace)::Log, std::__1::default_delete<(anonymous namespace)::Log>>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2d04 (   0x18c) (anonymous namespace)::absolute_time_to_human_readable_time(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2e90 (    0x68) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2ef8 (     0x4) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2efc (     0x4) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2f00 (    0x30) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2f30 (    0x54) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2f84 (     0x4) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2f88 (     0x4) std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca2f8c (   0x6c0) CGSEventLogEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca364c (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185ca36c8 (    0xa8) std::__1::__unique_if<(anonymous namespace)::SecureKeyEventLog>::__unique_single std::__1::make_unique[abi:v160006]<(anonymous namespace)::SecureKeyEventLog, char const*&, SLSEventRecord const*&>(char const*&, SLSEventRecord const*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca3770 (    0x98) (anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca3808 (   0x204) (anonymous namespace)::MessageLogger::add_log(std::__1::unique_ptr<(anonymous namespace)::Log, std::__1::default_delete<(anonymous namespace)::Log>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca3a0c (    0x54) (anonymous namespace)::SecureKeyEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca3a60 (   0x208) (anonymous namespace)::EventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca3c68 (   0x3d0) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, char const*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, char const*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, char const*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, char const*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, char const*>>>::__emplace_unique_key_args<unsigned int, std::__1::pair<unsigned int const, char const*> const&>(unsigned int const&, std::__1::pair<unsigned int const, char const*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4038 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, char const*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, char const*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, char const*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, char const*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, char const*>>>::find<unsigned int>(unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca40ec (    0xa8) (anonymous namespace)::EventLog::print(__sFILE*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4194 (     0x4) (anonymous namespace)::SecureKeyEventLog::~SecureKeyEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4198 (     0x4) (anonymous namespace)::SecureKeyEventLog::~SecureKeyEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca419c (     0x4) (anonymous namespace)::FluidTouchEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca41a0 (     0x4) (anonymous namespace)::FluidTouchEventLog::~FluidTouchEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca41a4 (     0x4) (anonymous namespace)::FluidTouchEventLog::~FluidTouchEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca41a8 (   0x114) (anonymous namespace)::GestureEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca42bc (     0x4) (anonymous namespace)::GestureEventLog::~GestureEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca42c0 (     0x4) (anonymous namespace)::GestureEventLog::~GestureEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca42c4 (   0x154) (anonymous namespace)::ZoomEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4418 (   0x490) (anonymous namespace)::get_scroll_phase_log_string(unsigned int, CGSMomentumScrollPhase) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca48a8 (   0x280) std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_stringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4b28 (     0x4) (anonymous namespace)::ZoomEventLog::~ZoomEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4b2c (     0x4) (anonymous namespace)::ZoomEventLog::~ZoomEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4b30 (   0x140) (anonymous namespace)::ScrollWheelEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4c70 (     0x4) (anonymous namespace)::ScrollWheelEventLog::~ScrollWheelEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4c74 (     0x4) (anonymous namespace)::ScrollWheelEventLog::~ScrollWheelEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4c78 (   0x114) (anonymous namespace)::FlagsChangedEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4d8c (     0x4) (anonymous namespace)::FlagsChangedEventLog::~FlagsChangedEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4d90 (     0x4) (anonymous namespace)::FlagsChangedEventLog::~FlagsChangedEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4d94 (   0x114) (anonymous namespace)::MouseTrackingEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4ea8 (     0x4) (anonymous namespace)::MouseTrackingEventLog::~MouseTrackingEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4eac (     0x4) (anonymous namespace)::MouseTrackingEventLog::~MouseTrackingEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4eb0 (   0x140) (anonymous namespace)::KeyEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4ff0 (     0x4) (anonymous namespace)::KeyEventLog::~KeyEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4ff4 (     0x4) (anonymous namespace)::KeyEventLog::~KeyEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca4ff8 (   0x114) (anonymous namespace)::OtherMouseEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca510c (   0x114) (anonymous namespace)::MouseEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5220 (     0x4) (anonymous namespace)::OtherMouseEventLog::~OtherMouseEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5224 (     0x4) (anonymous namespace)::OtherMouseEventLog::~OtherMouseEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5228 (     0x4) (anonymous namespace)::MouseEventLog::~MouseEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca522c (     0x4) (anonymous namespace)::MouseEventLog::~MouseEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5230 (   0x210) (anonymous namespace)::SystemDefinedEventLog::getLogString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5440 (     0x4) (anonymous namespace)::SystemDefinedEventLog::~SystemDefinedEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5444 (     0x4) (anonymous namespace)::SystemDefinedEventLog::~SystemDefinedEventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5448 (     0x4) (anonymous namespace)::EventLog::~EventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca544c (     0x4) (anonymous namespace)::EventLog::~EventLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5450 (    0x4c) CGXDumpEventLogBuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca549c (   0x1b8) (anonymous namespace)::LogRingBuffer::print(__sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5654 (    0xa8) CGSEventTranslationLogMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca56fc (    0x68) (anonymous namespace)::event_translation_logger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5764 (    0x48) CGXDumpEventTranslationLogBuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca57ac (     0x8) -[SLSessionOwner setSessionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca57b4 (     0x8) -[SLSessionOwner setAuditSessionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca57bc (     0x8) -[SLSessionOwner setPort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca57c4 (     0x8) -[SLSessionOwner port] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca57cc (    0x54) -[SLSessionOwner sessionID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5820 (    0x54) -[SLSessionOwner auditSessionID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5874 (    0x54) -[SLSessionOwner isValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca58c8 (   0x11c) -[SLSessionOwner createXPCSerializationAndInvalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca59e4 (    0xac) -[SLSessionOwner initWithXPCSerialization:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5a90 (   0x104) -[SLSessionOwner initWithPort:auditSessionID:cgSessionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5b94 (    0xa0) -[SLSessionOwner dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5c34 (     0x8) +[SLSessionOwner sessionOwnerForNewSessionWithAuditSessionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5c3c (    0x48) +[SLSessionOwner sessionOwnerForNewSessionWithAuditSessionID:launchData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5c84 (    0x40) +[SLSessionOwner sessionOwnerBySettingLoginwindowConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5cc4 (    0x3c) +[SLSessionOwner sessionOwnerWithXPCSerialization:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5d00 (    0x54) +[SLSessionOwner sessionOwnerWithPort:auditSessionID:cgSessionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5d54 (    0x48) SLSessionOwnerCreateWithPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5d9c (    0x40) SLSessionOwnerCreateWithXPCSerialization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5ddc (     0x4) SLSessionOwnerCopyXPCSerializationAndInvalidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5de0 (     0x4) SLSessionOwnerIsValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5de4 (     0x4) SLSessionOwnerGetAuditSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5de8 (     0x4) SLSessionOwnerGetSessionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5dec (    0x70) ordered_callback_record_stack() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5e5c (    0x70) WSPostLocalNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca5ecc (   0x608) ordered_callback_record_stack_push() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca64d4 (    0x78) (anonymous namespace)::get_server_notifier() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca654c (   0x1b4) (anonymous namespace)::ServerNotifier::invoke_callbacks(unsigned int, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6700 (    0xac) ordered_callback_record_stack_pop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca67ac (    0x64) ordered_callback_record_invoke_post_enqueue_callbacks(ordered_callback_record*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6810 (    0x64) ordered_callback_record_invoke_post_response_callbacks(ordered_callback_record*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6874 (    0x94) ordered_callback_record_destroy(ordered_callback_record*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6908 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<(anonymous namespace)::Callout>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<(anonymous namespace)::Callout>>(std::__1::allocator<(anonymous namespace)::Callout>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6940 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<ordered_callback_record**>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<ordered_callback_record**>>(std::__1::allocator<ordered_callback_record**>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca6978 (    0x64) WSPostNotification2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca69dc (   0x768) post_notification(CGSNotificationType, void*, unsigned long, bool, double, int, unsigned int const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7144 (   0xa2c) WSLogStringForNotifyType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7b70 (    0x70) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7be0 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7c04 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7c24 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7c3c (   0x1d4) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7e10 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7e44 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7e58 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7e7c (    0x44) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7ec0 (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7ef4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7f0c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185ca7f20 (    0x60) WSPostSynchronousNotification2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7f80 (    0x18) WSPostNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7f98 (    0x14) WSPostSynchronousNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7fac (    0x18) WSPostNotificationToPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7fc4 (    0x14) WSPostSynchronousNotificationToPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7fd8 (    0x18) WSPostNotificationToConnectionOrLocal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca7ff0 (    0xc4) WSPostNotificationToConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca80b4 (   0x10c) WSPostNotificationToEntitledConnections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca81c0 (   0x568) WSAddNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca8728 (   0x130) WSRemoveNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca8858 (   0x1dc) SLSSetInkingState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca8a34 (   0x210) SLSGetInkingState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca8c44 (   0x1e0) GetBSDProcessList(kinfo_proc**, unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca8e24 (   0x5d0) processEventTapData(void*, unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca93f4 (    0x68) disableEventTap(__CGEventTapProxy*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca945c (    0x78) addEventToProxy(__CGEventTapProxy*, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca94d4 (   0x404) postEventsWithStyle(CGSPostEventStyle, unsigned int, unsigned int, unsigned int, SLSEventRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca98d8 (    0x60) tapProxyClearBuffer(__CGEventTapProxy*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9938 (    0xa0) postEventTapDataCallback(void const*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca99d8 (   0x10c) eventTapMessageHandler(__CFMachPort*, void*, long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9ae4 (    0xc0) releaseTapProxy(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9ba4 (    0x14) retainTapProxy(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9bb8 (    0x1c) SLEventTapCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9bd4 (   0x218) event_tap_create(CGEventTapLocation, unsigned int, CGEventTapPlacement, CGEventTapOptions, unsigned long long, __CGEvent* (*)(__CGEventTapProxy*, CGEventType, __CGEvent*, void*), void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9dec (    0xb8) limit_port_queue(__CFMachPort*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9ea4 (    0xfc) SLSEventTapCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ca9fa0 (    0x98) __SLSEventTapCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa038 (   0x11c) SLEventTapCreateForPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa154 (   0x280) create_event_taps_on_connections(unsigned int*, int, unsigned int, CGEventTapPlacement, CGEventTapOptions, unsigned long long, __CGEvent* (*)(__CGEventTapProxy*, CGEventType, __CGEvent*, void*), void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa3d4 (   0x124) SLEventTapCreateForPid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa4f8 (    0xd8) SLEventTapEnable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa5d0 (    0xcc) SLEventTapIsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa69c (    0xa4) SLEventTapPostEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa740 (    0x84) SLEventPost [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa7c4 (    0x80) SLEventPostToPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa844 (    0x58) SLEventPostToPid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa89c (    0x18) SLGetEventTapList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caa8b4 (   0x1d0) get_event_tap_info(unsigned int, __CGEventTapInformation*, CGSEventTapInformation*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caaa84 (    0x10) SLSGetEventTapList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caaa94 (    0x5c) SLSSetEventTapTimeout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caaaf0 (    0x80) SLSGetEventTapTimeout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caab70 (    0x6c) SLEventTapIDEnable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caabdc (    0x9c) SLEventTapIDIsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caac78 (    0x84) SLSSetEventTapOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caacfc (    0x44) SLSCoordinatedLocalNotificationCenter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caad40 (    0x28) __SLSCoordinatedLocalNotificationCenter_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caad68 (     0xc) SLSSetKitVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caad74 (     0xc) SLSKitVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caad80 (    0x70) SLSGetDockRectWithReason [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caadf0 (   0x190) SLSGetDockRectWithOrientation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caaf80 (    0xdc) SLSSetDockRectWithReason [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab05c (    0xe0) SLSSetDockRectWithOrientation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab13c (   0x300) SLSGetProcessMenuBarWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab43c (   0x248) SLSSetMenuBarBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab684 (   0x1fc) PKGGetGlobalMenuBarDataFromDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab880 (   0x170) get_number_from_dictionary(__CFDictionary const*, __CFString const*, CFNumberType, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cab9f0 (   0x130) parse_filter_settings(void const*, CGSMenuBarFilterType*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cabb20 (   0x380) PKGGetPerMenuBarDataFromDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cabea0 (    0xf0) get_menu_title_from_array(__CFArray const*, long, CGMiGRect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cabf90 (   0x208) SLSSetMenuBars [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac198 (   0x294) SLSSetMenuBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac42c (   0x174) __SLSSetMenuBar_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac5a0 (    0xbc) SLSSetMenuBarCompanionWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac65c (   0x234) SLSGetRevealedMenuBarBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac890 (    0x60) SLSGetActiveSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac8f0 (    0xdc) SLSCopyActiveMenuBarDisplayIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cac9cc (   0x25c) SLSSetActiveMenuBarDisplayIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cacc28 (   0x168) SLSIsMenuBarVisibleOnSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cacd90 (   0x140) SLSSetMenuBarVisibilityOverrideOnDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caced0 (    0xc0) get_displayIDData(unsigned int, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cacf90 (   0x234) SLSGetMenuBarVisibilityOverrideOnDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad1c4 (     0x8) SLSGetMenuBarVarnishAppearanceEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad1cc (   0x30c) SLSGetMenuBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad4d8 (   0x1ec) SLSGetMenuBarUsesRTLLayoutOnDisplayLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad6c4 (    0xa4) SLSInterruptMenuBarReveal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad768 (   0x16c) SLSGetSpaceMenuBarReveal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad8d4 (    0x50) SLSSetMenuBarSystemOverrideAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad924 (    0xac) SLSResetMenuBarSystemOverrideAlphas [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cad9d0 (    0xb4) SLSSetMenuBarInsetAndAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cada84 (   0x154) SLSMenuBarExists [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cadbd8 (   0x138) SLSSetMenuBarDrawingStyle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cadd10 (    0xc8) SLSGetMenuBarDrawingStyle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caddd8 (   0x190) SLSGetActiveMenuBarDrawingStyle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cadf68 (     0x8) SLSSetAppearanceThemeLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cadf70 (    0xec) SLSSetAppearanceThemeOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae05c (    0x74) set_appearance_theme_cf_pref(SLSAppearanceTheme) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae0d0 (    0x58) notifyThemeChange() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae128 (     0x4) SLSSetAppearanceThemeNotifying [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae12c (   0x14c) SLSGetAppearanceThemeLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae278 (    0x8c) SLSSetAppearanceThemeSwitchesAutomatically [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae304 (   0x154) SLSGetAppearanceThemeSwitchesAutomatically [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae458 (    0x38) SLSSetMenuBarAutohideEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae490 (   0x190) SLSGetMenuBarAutohideEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae620 (    0x84) SLSPersistenceSaveSpaceConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae6a4 (   0x1ac) SLSCopyPackagesPersistenceDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae850 (    0x68) SLSPersistenceWillTerminateSession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae8b8 (    0xa0) SLSRestorePackagesManagementPersistenceData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cae958 (    0xc0) __SLSRestorePackagesManagementPersistenceData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caea18 (   0x108) SLSPackagesSetFindCursorPrefs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caeb20 (    0xc0) __SLSPackagesSetFindCursorPrefs_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caebe0 (    0x94) SLSPackagesFindCursorIsDisabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caec74 (    0xa4) SLSPackagesDisableFindCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caed18 (    0xcc) setFindCursorPrefs(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caede4 (    0x28) SLSPackagesInitializeSessionPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caee0c (   0x648) __SLSPackagesInitializeSessionPreferences_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf454 (   0x13c) BooleanPref(__CFString const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf590 (    0xb4) PreferredLanguageIsRTL() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf644 (    0x60) copySpacesConfiguration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf6a4 (    0x84) invocation function for block in copySpacesConfiguration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf728 (     0x4) invocation function for block in setInitialAppearanceTheme(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf72c (     0x4) invocation function for block in setInitialAppearanceThemeSwitchesAutomatically(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf730 (    0x7c) SLSPersistenceGetSessionStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf7ac (    0x8c) SLSPersistenceCopySessionBitmapKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf838 (   0x180) SLSPersistenceSetSessionStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185caf9b8 (   0x16c) SLSPersistenceSetSessionBitmapKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cafb24 (   0x5a0) SLSPersistenceWillLaunchASNsWithCompletionHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb00c4 (   0x158) _sendToTalagent(NSObject<OS_xpc_object>*, bool, void (__CFDictionary const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb021c (    0x88) invocation function for block in _sendToTalagent(NSObject<OS_xpc_object>*, bool, void (__CFDictionary const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb02a4 (    0xec) invocation function for block in _sendToTalagent(NSObject<OS_xpc_object>*, bool, void (__CFDictionary const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0390 (   0x188) translateAppBindingToCG(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0518 (   0x1a4) translateAppBindingFromSnowLeopard(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb06bc (    0xa4) SLSPersistenceRegisterAsReady [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0760 (     0x4) SLSPersistenceAnnounceAllAppsReady [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0764 (    0xd4) SLSPersistenceAnnounceAllAppsReadyWithError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0838 (   0x1d4) SLSGetConnectionIDForPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0a0c (   0x1cc) SLSGetConnectionPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0bd8 (    0x10) SLSSystemStatusBarRegisterWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0be8 (   0x238) SLSSystemStatusBarRegisterSortedWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb0e20 (   0x214) SLSSystemStatusBarRegisterReplicantWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1034 (   0x174) SLSSystemStatusBarGetWindowPreferredPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb11a8 (   0x16c) SLSSystemStatusBarWindowIsDraggedOutOfBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1314 (   0x14c) SLSSystemStatusBarGetCurrentNavigationWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1460 (    0xb8) SLSSystemStatusBarNavigateFromWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1518 (     0xc) SLSStatusItemNavigationRecordGetCurrentNavigationWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1524 (     0xc) SLSStatusItemNavigationRecordGetCurrentNavigationOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1530 (   0x158) SLSUnregisterWindowWithSystemStatusBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1688 (    0x84) SLSAdjustSystemStatusBarWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb170c (    0xd8) SLSSetSystemStatusBarWindowSubitemOffsets [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb17e4 (   0x1ac) SLSCopySystemStatusBarMetrics [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1990 (    0xf0) SLSPackagesSetWindowConstraints [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1a80 (   0x230) SLSPackagesGetWindowConstraints [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1cb0 (    0xdc) SLSPackagesSetWindowDragTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1d8c (    0xc0) SLSPackagesRemoveWindowDragTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1e4c (    0x44) SLSGetSystemUIHasRTLDirectionLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1e90 (   0x16c) __SLSGetSystemUIHasRTLDirectionLegacy_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb1ffc (    0x84) SLSEnsureSpaceSwitchToActiveProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2080 (     0xc) SLSScreenTimeSuppressWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb208c (   0x16c) __SLSScreenTimeSuppressWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb21f8 (     0xc) SLSUpdateAssessmentMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2204 (   0x16c) __SLSUpdateAssessmentMode_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2370 (    0x84) SLSResignActiveAppearanceWhileActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb23f4 (    0x6c) SLSStatusBarGetRequiredSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2460 (   0x1d0) SLSStatusBarCopyItemLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2630 (    0x84) SLSDisconnectWindowManager [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb26b4 (   0x154) SLSAllowPrivacyIndicatorSuppression [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2808 (   0x154) SLSGetSuppressPrivacyIndicatorOnExternalDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb295c (    0x88) SLSSetSuppressPrivacyIndicatorOnExternalDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb29e4 (   0x1cc) SLAcquireDisplayFadeReservation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2bb0 (   0x178) SLReleaseDisplayFadeReservation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2d28 (   0x1b4) SLDisplayFade [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2edc (    0x24) SLDisplayFadeOperationInProgress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2f00 (    0x44) SLSWindowQueryResultGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2f44 (    0x28) __SLSWindowQueryResultGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2f6c (     0x8) copy_result_debug_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb2f74 (    0xa8) copy_result_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb301c (    0x60) top_level_iterator_count [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb307c (    0x9c) copy_description.7191 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3118 (    0x6c) _SLSWindowQueryResultFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3184 (    0x44) SLSWindowQueryGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb31c8 (    0x28) __SLSWindowQueryGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb31f0 (    0x6c) _SLSWindowQueryFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb325c (    0x44) SLSWindowIteratorGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb32a0 (    0x28) __SLSWindowIteratorGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb32c8 (    0x60) copy_iterator_debug_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3328 (    0x60) copy_iterator_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3388 (    0x10) finalize_iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3398 (    0x44) SLSSpaceIteratorGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb33dc (    0x28) __SLSSpaceIteratorGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3404 (    0x44) SLSManagedDisplayIteratorGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3448 (    0x28) __SLSManagedDisplayIteratorGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3470 (   0x118) SLSWindowQueryCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3588 (     0x8) __SLSWindowQueryCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3590 (    0x1c) query_set_values [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb35ac (    0xbc) SLSWindowQuerySetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3668 (    0x34) query_keys_block_invoke_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb369c (    0x18) query_keys_block_invoke_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb36b4 (    0x34) query_keys_block_invoke_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb36e8 (    0x18) query_keys_block_invoke_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3700 (    0x7c) query_keys_block_invoke_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb377c (    0x60) query_keys_block_invoke_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb37dc (    0x7c) query_keys_block_invoke_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3858 (    0x60) query_keys_block_invoke_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb38b8 (    0x34) query_keys_block_invoke_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb38ec (    0x18) query_keys_block_invoke_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3904 (    0x7c) query_keys_block_invoke_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3980 (    0x60) query_keys_block_invoke_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb39e0 (    0x7c) query_keys_block_invoke_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3a5c (    0x60) query_keys_block_invoke_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3abc (    0x7c) query_keys_block_invoke_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3b38 (    0x60) query_keys_block_invoke_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3b98 (    0xb0) SLSWindowQueryCopyValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3c48 (    0xe0) SLSWindowQueryRun [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb3d28 (   0x408) run_query [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4130 (    0x80) __encode_query_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb41b0 (    0x80) __encode_query_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4230 (    0xa8) SLSWindowQueryWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb42d8 (    0x80) __SLSWindowQueryWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4358 (    0x20) SLSWindowQueryResultGetWindowCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4378 (    0x28) SLSWindowQueryResultCopyWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb43a0 (    0x74) _SLSWindowIteratorCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4414 (    0xa8) _SLSQueryIteratorCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb44bc (    0x20) SLSWindowQueryResultGetSpaceCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb44dc (    0x34) SLSWindowQueryResultCopySpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4510 (    0x70) _SLSSpaceIteratorCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4580 (    0x20) SLSWindowQueryResultGetManagedDisplayCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb45a0 (    0x98) SLSWindowQueryResultCopyManagedDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4638 (     0x8) SLSWindowIteratorGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4640 (    0x4c) SLSWindowIteratorGetWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb468c (    0xec) iterator_seek [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb4778 (    0x3c) reset_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb47b4 (   0xb48) decode_window [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb52fc (    0x4c) SLSWindowIteratorGetOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5348 (    0x4c) SLSWindowIteratorGetParentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5394 (    0x4c) SLSWindowIteratorGetPID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb53e0 (    0x4c) SLSWindowIteratorGetPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb542c (    0x4c) SLSWindowIteratorGetTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5478 (    0x50) SLSWindowIteratorGetBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb54c8 (    0x50) SLSWindowIteratorGetFrameBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5518 (   0x154) SLSWindowIteratorCopyTitle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb566c (    0x4c) SLSWindowIteratorGetLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb56b8 (    0x4c) SLSWindowIteratorGetAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5704 (    0x50) SLSWindowIteratorGetScreenRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5754 (    0x7c) SLSWindowIteratorGetConstraints [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb57d0 (   0x13c) SLSWindowIteratorIsInSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb590c (    0x38) decode_space_id [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5944 (   0x190) SLSWindowIteratorGetMatchingSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5ad4 (    0xe4) decode_space [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5bb8 (    0x4c) SLSWindowIteratorGetAttributes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5c04 (    0x4c) SLSWindowIteratorGetSpaceAttributes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5c50 (    0x4c) SLSWindowIteratorGetSpaceTypeMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5c9c (    0x4c) SLSWindowIteratorGetAttachedWindowCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5ce8 (    0x60) SLSWindowIteratorCopyAttachedWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5d48 (    0x4c) SLSWindowIteratorGetSpaceCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5d94 (    0x60) SLSWindowIteratorCopySpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5df4 (     0x8) SLSSpaceIteratorGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5dfc (    0x4c) SLSSpaceIteratorGetSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5e48 (    0x14) reset_space [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5e5c (    0x4c) SLSSpaceIteratorGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5ea8 (    0x4c) SLSSpaceIteratorGetAttributes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5ef4 (    0x4c) SLSSpaceIteratorGetAbsoluteLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5f40 (    0x4c) SLSSpaceIteratorGetParentSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5f8c (     0x8) SLSManagedDisplayIteratorGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5f94 (    0x4c) SLSManagedDisplayIteratorGetAttributes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb5fe0 (    0x20) reset_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6000 (   0x2cc) decode_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb62cc (    0x50) SLSManagedDisplayIteratorGetBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb631c (    0x4c) SLSManagedDisplayIteratorGetUUIDBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6368 (    0x7c) SLSManagedDisplayIteratorCopyRoleWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb63e4 (    0x60) SLSManagedDisplayIteratorCopyManagedSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6444 (    0x28) SLSWindowIteratorAdvance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb646c (    0x28) SLSSpaceIteratorAdvance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6494 (    0x28) SLSManagedDisplayIteratorAdvance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb64bc (    0x50) CGSProcNameFromPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb650c (   0x150) FindProcessRecByPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb665c (    0x50) CGSProcNameFromConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb66ac (    0x5c) FindProcessRecByConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6708 (   0x178) GetFrontProcessRecCheckingEligibility [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6880 (   0x1c4) compareApplicationType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6a44 (   0x25c) fixBadForegroundProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6ca0 (    0x80) SamePSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6d20 (   0x12c) MakeCanonicalPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb6e4c (   0x1d8) SetFrontProcessRec [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb7024 (    0xc8) RemoveFromProcessList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb70ec (   0x14c) GetFrontVisibleProcessRec [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb7238 (   0x51c) GetEligibleFrontProcessRecFromPermittedList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb7754 (    0x74) IsHidden [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb77c8 (    0x2c) __IsProcessInCurrentSpace_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb77f4 (    0x2c) __IsProcessInCurrentSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb7820 (    0xb4) WSShadowPropertiesAreEqual [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb78d4 (   0xa60) WSWindowSetShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8334 (   0x1cc) finalize_shadow_property_change(CGXWindow*, CGXConnection*, WSShadowProperties*, WSShadowProperties*, bool (*)(CGXWindow*, WSShadowProperties*, WSShadowProperties*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8500 (    0xf8) WSWindowShadowResolveProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb85f8 (    0x54) WSWindowShadowCurrentProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb864c (    0x5c) WSWindowShadowCurrentPropertiesPtr [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb86a8 (   0x148) WSWindowShadowSupportsCAInnerRim [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb87f0 (    0x80) WSWindowShadowSupportsGenerationWithMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8870 (   0x17c) is_shadow_mask_nine_partable(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb89ec (    0x6c) WSWindowShadowRadius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8a58 (    0xf4) WSWindowShadowWantsRenderAbove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8b4c (   0x1f4) shadow_properties_dump(WSShadowProperties*, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb8d40 (   0xe38) CGXDumpShadows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9b78 (   0x3dc) generate_shadow_window_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9f54 (    0x3c) __Block_byref_object_copy_.67 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9f90 (     0x8) __Block_byref_object_dispose_.68 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9f98 (    0x10) __Block_byref_object_copy_.64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9fa8 (    0x10) __Block_byref_object_dispose_.65 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cb9fb8 (   0x260) invocation function for block in generate_shadow_info_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba218 (    0xe0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>>>::__emplace_unique_key_args<std::__1::shared_ptr<WSShadow>, std::__1::shared_ptr<WSShadow>&, ShadowInfo&>(std::__1::shared_ptr<WSShadow> const&, std::__1::shared_ptr<WSShadow>&, ShadowInfo&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba2f8 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba350 (    0x90) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, void*>*, long>, std::__1::__tree_iterator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, void*>*, long>> std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>>>::__equal_range_multi<std::__1::shared_ptr<WSShadow>>(std::__1::shared_ptr<WSShadow> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba3e0 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba438 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, ShadowInfo>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba490 (    0x50) __destroy_helper_block_8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba4e0 (    0x60) __copy_helper_block_8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba540 (    0x3c) __Block_byref_object_copy_.7397 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba57c (     0x8) __Block_byref_object_dispose_.7398 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba584 (   0x144) invocation function for block in generate_shadow_window_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba6c8 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba720 (    0xa8) std::__1::__tree_iterator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::__map_value_compare<std::__1::shared_ptr<WSShadow>, std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>, std::__1::less<std::__1::shared_ptr<WSShadow>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<WSShadow>, CGXWindow*>>>::__emplace_multi<std::__1::shared_ptr<WSShadow>&, CGXWindow*&>(std::__1::shared_ptr<WSShadow>&, CGXWindow*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cba7c8 (   0x340) create_external_debugging_dictionary_for_shadow_properties(WSShadowProperties const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbab08 (    0x50) std::__1::unique_ptr<SLSEventRecord, SLSEventRecordDeleter>::reset[abi:v160006](SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbab58 (    0x48) WSEventQueueItem::~WSEventQueueItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbaba0 (    0xbc) CGSMinSchedulerQuantum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbac5c (    0x94) rwlock_is_write_locked [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbacf0 (    0x7c) __timeout_reached_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbad6c (    0x4c) -[SLSSpaceWindowManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadb8 (     0x8) -[SLSSpaceWindowManager setBeganBatch:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadc0 (     0x8) -[SLSSpaceWindowManager beganBatch] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadc8 (     0x8) -[SLSSpaceWindowManager setNestedCalloutCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadd0 (     0x8) -[SLSSpaceWindowManager nestedCalloutCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadd8 (     0xc) -[SLSSpaceWindowManager setDisplayCurrentSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbade4 (     0x8) -[SLSSpaceWindowManager displayCurrentSpaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadec (     0xc) -[SLSSpaceWindowManager setSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbadf8 (     0x8) -[SLSSpaceWindowManager spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae00 (     0xc) -[SLSSpaceWindowManager setDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae0c (    0x2c) -[SLSSpaceWindowManager delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae38 (     0x8) -[SLSSpaceWindowManager setDisplaysHaveSeparateSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae40 (     0x8) -[SLSSpaceWindowManager displaysHaveSeparateSpaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae48 (     0x8) -[SLSSpaceWindowManager setConnectionID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae50 (     0x8) -[SLSSpaceWindowManager connectionID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae58 (     0x8) -[SLSSpaceWindowManager setValid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae60 (     0x8) -[SLSSpaceWindowManager valid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbae68 (   0x154) -[SLSSpaceWindowManager _postActiveDisplayChange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbafbc (    0x78) -[SLSSpaceWindowManager isWindowPresentOnUnmanagedSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb034 (     0x4) -[SLSSpaceWindowManager synchronize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb038 (   0x2f4) -[SLSSpaceWindowManager _fullRebuildSpaceChange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb32c (    0x9c) -[SLSSpaceWindowManager _fullRebuildSpacesChanged] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb3c8 (   0x314) __50-[SLSSpaceWindowManager _fullRebuildSpacesChanged]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb6dc (     0x8) __destroy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb6e4 (     0x8) __copy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb6ec (   0x210) -[SLSSpaceWindowManager _space:removeWindow:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbb8fc (   0x25c) -[SLSSpaceWindowManager _space:addWindow:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbb58 (    0xb8) -[SLSSpaceWindowManager _updateSpaceWithData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbc10 (   0x104) -[SLSSpaceWindowManager _removeSpace:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbd14 (   0x1a0) __38-[SLSSpaceWindowManager _removeSpace:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbeb4 (    0x3c) __destroy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbef0 (    0x3c) __copy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbbf2c (   0x1a0) -[SLSSpaceWindowManager _spaceChangedDisplay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc0cc (    0x70) __46-[SLSSpaceWindowManager _spaceChangedDisplay:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc13c (    0x4c) __destroy_helper_block_ea8_32s40s48s56s [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc188 (    0x4c) __copy_helper_block_ea8_32s40s48s56s [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc1d4 (    0x58) -[SLSSpaceWindowManager _getDisplayUUIDForSpace:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc22c (   0x138) -[SLSSpaceWindowManager _checkDisplayState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc364 (   0x278) __44-[SLSSpaceWindowManager _checkDisplayState:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc5dc (   0x1dc) -[SLSSpaceWindowManager _checkSpaceMovedToDisplay:displayUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc7b8 (     0x8) -[SLSSpaceWindowManager spaceWithID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbc7c0 (   0x34c) -[SLSSpaceWindowManager _spaceWithID:createIfNeeded:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcb0c (    0x4c) -[SLSWindowManagerSpace .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcb58 (     0x8) -[SLSWindowManagerSpace setWindowIDs:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcb60 (     0xc) -[SLSWindowManagerSpace windowIDs] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcb6c (     0xc) -[SLSWindowManagerSpace setManager:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcb78 (    0x2c) -[SLSWindowManagerSpace manager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcba4 (     0x8) -[SLSWindowManagerSpace setDisplayUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbac (     0xc) -[SLSWindowManagerSpace displayUUID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbb8 (     0x8) -[SLSWindowManagerSpace setType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbc0 (     0x8) -[SLSWindowManagerSpace type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbc8 (     0x8) -[SLSWindowManagerSpace setSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbd0 (     0x8) -[SLSWindowManagerSpace spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcbd8 (    0xfc) -[SLSWindowManagerSpace isCurrentSpace] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbccd4 (    0x54) -[SLSWindowManagerSpace _effectiveDisplayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcd28 (    0x10) -[SLSSpaceWindowManager rebuildMenuBarOnSpace:frontConnection:transaction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcd38 (    0x10) -[SLSSpaceWindowManager moveDraggedWindow:toPoint:mouseLocation:timestamp:transaction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcd48 (     0xc) -[SLSSpaceWindowManager setGlobalWindowVisibilityList:transaction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcd54 (    0x8c) -[SLSSpaceWindowManager batchedDelegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcde0 (    0xac) -[SLSSpaceWindowManager _performBatchingCallouts:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbce8c (    0x9c) -[SLSSpaceWindowManager _endBatch] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcf28 (    0x64) -[SLSSpaceWindowManager _beginBatch] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbcf8c (    0xa0) -[SLSSpaceWindowManager invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbd02c (   0x148) _spaceManagerDidCompleteInitializationNotifyProc(CGSNotificationType, void*, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbd174 (    0xa0) _spaceManagerDidUpdateNotifyProc(CGSNotificationType, void*, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbd214 (   0xa94) invocation function for block in _spaceManagerDidUpdateNotifyProc(CGSNotificationType, void*, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdca8 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185cbdd24 (    0x64) -[SLSWindowManagerDragContext setProposedWindowOrigin:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdd88 (    0x64) -[SLSWindowManagerDragContext proposedWindowOrigin] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbddec (     0x8) -[SLSWindowManagerDragContext setTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbddf4 (     0x8) -[SLSWindowManagerDragContext timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbddfc (    0x64) -[SLSWindowManagerDragContext setDragOffset:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbde60 (    0x64) -[SLSWindowManagerDragContext dragOffset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdec4 (    0x64) -[SLSWindowManagerDragContext setMouseLocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdf28 (    0x64) -[SLSWindowManagerDragContext mouseLocation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdf8c (     0x8) -[SLSWindowManagerDragContext setWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdf94 (     0x8) -[SLSWindowManagerDragContext windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdf9c (    0x58) -[SLSWindowManagerDragContext defaultWindowOrigin] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbdff4 (   0x1c8) -[SLSSpaceWindowManager initWithConnectionID:delegate:capabilities:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe1bc (    0xa4) -[SLSSpaceWindowManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe260 (    0xe4) WSConsoleSetUpdatesAllowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe344 (    0x28) WSCurrentSessionIsOnConsole [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe36c (    0x4c) update_displays_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe3b8 (   0x39c) invocation function for block in update_displays_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbe754 (   0xeb4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, display_devices_copy_rects()::$_0&, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, display_devices_copy_rects()::$_0&, std::__1::iterator_traits<std::__1::shared_ptr<WS::Displays::Display>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbf608 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185cbf620 (   0x2bc) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, display_devices_copy_rects()::$_0&, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, display_devices_copy_rects()::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbf8dc (   0x220) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, display_devices_copy_rects()::$_0&, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, display_devices_copy_rects()::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbfafc (   0x2c0) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, display_devices_copy_rects()::$_0&, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, display_devices_copy_rects()::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cbfdbc (   0x2fc) bool std::__1::__insertion_sort_incomplete<display_devices_copy_rects()::$_0&, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, display_devices_copy_rects()::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc00b8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185cc00d0 (    0x28) initial_display_configuration_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc00f8 (    0x48) session_changed_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0140 (   0x170) CGXUpdateExternalSessionList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc02b0 (   0x100) create_session_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc03b0 (    0x44) __CGXUpdateExternalSessionList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc03f4 (    0x68) invocation function for block in create_session_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc045c (    0xd0) CGSessionIsDisclosable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc052c (    0xd0) CGSessionCopyClientDictionary(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc05fc (   0x200) invocation function for block in CGSessionCopyClientDictionary(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc07fc (    0xd4) session_dispatch_sync(CGXSession*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc08d0 (    0x5c) invocation function for block in session_dispatch_sync(CGXSession*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc092c (    0x44) __CGSessionIsDisclosable_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0970 (    0x4c) WSSetCurrentSessionHasWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc09bc (    0x4c) WSSetCurrentSessionProcessGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a08 (     0xc) WSSessionGetProcessGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a14 (    0x24) WSCurrentSessionGetUserCredentials [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a38 (    0x20) __CGSessionIgnoresOtherSpacesOnActivation_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a58 (     0xc) CGSessionGetAuditSessionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a64 (    0x30) __CGSessionSetAuditSessionID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0a94 (    0xd4) session_dispatch_async(CGXSession*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0b68 (    0x5c) invocation function for block in session_dispatch_async(CGXSession*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0bc4 (    0xd0) CGSessionHasWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0c94 (    0x20) __CGSessionHasWorkspace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0cb4 (    0xd0) CGSessionWorkspaceHasConnected [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0d84 (    0x20) __CGSessionWorkspaceHasConnected_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0da4 (    0x18) __CGSessionSetWorkspaceConnected_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0dbc (    0x20) __CGSessionIsDrawingLive_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0ddc (    0xd0) CGSessionGetWindowServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0eac (    0x20) __CGSessionGetWindowServerPort_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0ecc (    0x18) CGSessionIsOnConsole [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0ee4 (     0x8) __CGSessionSetScreenLockWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0eec (    0x40) current_session_set_screen_lock_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0f2c (    0x7c) current_session_update_window_handler(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc0fa8 (   0x184) _SessionWindowWillTerminateHandler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc112c (    0xd0) CGSessionGetScreenLockWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc11fc (    0xd0) CGSessionGetSleepShieldWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc12cc (    0x40) __CGSessionSetSleepShieldWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc130c (    0xd0) CGSessionGetSleepAuthWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc13dc (    0x40) __CGSessionSetSleepAuthWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc141c (    0x20) __CGSessionGetSleepAuthWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc143c (    0x20) __CGSessionGetSleepShieldWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc145c (    0x20) __CGSessionGetScreenLockWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc147c (    0x18) __CGSessionSetWorkspaceData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1494 (    0xd0) CGSessionGetWorkspaceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1564 (    0x20) __CGSessionGetWorkspaceData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1584 (    0xac) CGXSetCurrentSessionWindowData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1630 (    0x18) __CGXSetCurrentSessionWindowData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1648 (    0xd0) CGSessionGetWindowData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1718 (    0x28) __CGSessionGetWindowData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1740 (   0x12c) __CGSessionRetain_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc186c (   0x324) __CGSessionRelease_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1b90 (    0xa4) invocation function for block in notify_all_sessions_of_session_id_async(CGSNotificationType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1c34 (    0x60) current_session_set_workspace_dictionary(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1c94 (    0x60) current_session_set_workspaces_binding_dictionary(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1cf4 (    0x70) invocation function for block in notify_all_sessions_of_session_id_async(CGSNotificationType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1d64 (    0x58) session_owning_port_death_handler(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc1dbc (   0x370) CGXRestartSessionWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc212c (   0x20c) invocation function for block in CGSessionClone(CGXSession*, CGError*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2338 (   0x5fc) CGSessionTakeConsole(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2934 (   0x1cc) invocation function for block in CGConsoleWake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2b00 (   0x150) CGSessionDrawsVirtualFramebuffer(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2c50 (    0x80) invocation function for block in CGSessionPostNotification(CGXSession*, CGSNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2cd0 (   0x244) invocation function for block in CGSessionPrepareToMoveOffConsole(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc2f14 (    0xfc) invocation function for block in CGSessionMovedOnConsole(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3010 (    0x18) invocation function for block in CGSessionSetDrawingLive(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3028 (   0x300) invocation function for block in CGSessionMovedOnConsole(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3328 (   0x150) invocation function for block in CGSessionCreateCoverWindow(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3478 (    0x30) invocation function for block in CGSessionDrawsVirtualFramebuffer(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc34a8 (   0xb00) createSessionWithOwner(__CFDictionary const*, CGXCredentials, void*, unsigned long, bool, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3fa8 (    0x24) invocation function for block in CGSessionSetDisablesTransitions(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc3fcc (    0xb4) CGSessionSetWorkspaceDictionary(CGXSession*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4080 (    0x4c) invocation function for block in CGSessionSetWorkspaceDictionary(CGXSession*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc40cc (   0x28c) invocation function for block in CGSessionCreateWithID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4358 (    0x24) invocation function for block in CGSessionSetShouldSwitchToForeground(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc437c (   0x1f0) update_SIGTERM_handling() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc456c (    0x18) invocation function for block in CGSessionSetOriginalCredentials(CGXSession*, CGXCredentials) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4584 (    0x50) invocation function for block in CGSessionSetUserCredentials(CGXSession*, CGXCredentials) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc45d4 (     0xc) invocation function for block in CGSessionSetCookieData(CGXSession*, void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc45e0 (    0x24) invocation function for block in CGSessionShouldSwitchToForeground(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4604 (    0x18) invocation function for block in CGSessionSetHasDisplayDevice(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc461c (    0xb0) invocation function for block in CGSessionSelectDisplaySet(CGXSession*, CGSScoreboardDisplaySet) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc46cc (    0x18) invocation function for block in CGSessionSetUsesSessionManager(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc46e4 (   0x308) invocation function for block in CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc49ec (     0x4) invocation function for block in CGSessionEnableWindowServerPort(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc49f0 (     0xc) invocation function for block in createSessionWithOwner(__CFDictionary const*, CGXCredentials, void*, unsigned long, bool, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc49fc (    0x20) invocation function for block in createSessionWithOwner(__CFDictionary const*, CGXCredentials, void*, unsigned long, bool, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4a1c (    0x98) invocation function for block in createSessionWithOwner(__CFDictionary const*, CGXCredentials, void*, unsigned long, bool, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4ab4 (   0x128) sessionDeathNotify(int, int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4bdc (    0x58) invocation function for block in sessionDeathNotify(int, int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4c34 (   0x11c) adjustSessionCovers(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4d50 (    0x58) invocation function for block in adjustSessionCovers(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4da8 (    0x9c) invocation function for block in createSessionWithOwner(__CFDictionary const*, CGXCredentials, void*, unsigned long, bool, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4e44 (    0x78) current_session_set_cookie_data(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4ebc (    0x60) invocation function for block in CGSessionSendCreationNotification(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4f1c (    0x10) __Block_byref_object_copy_.7752 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4f2c (     0xc) __Block_byref_object_dispose_.7753 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4f38 (    0x20) invocation function for block in update_SIGTERM_handling() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4f58 (    0x10) invocation function for block in update_SIGTERM_handling() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4f68 (    0x88) current_session_set_death_watch_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc4ff0 (    0x88) current_session_set_window_server_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5078 (   0x108) current_session_set_client_dictionary(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5180 (   0x1d8) sessionDeallocateCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5358 (    0xe4) invocation function for block in CGSessionKillWorkspace(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc543c (    0x44) run_services_modal_until_deadline(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5480 (    0x40) invocation function for block in CGSessionTerminateAllClients(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc54c0 (     0x8) invocation function for block in CGSessionSetProcessGroup(CGXSession*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc54c8 (   0x18c) invocation function for block in sessionDeallocateCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5654 (    0x30) current_session_set_bootstrap_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5684 (   0x13c) invocation function for block in current_session_terminate_all_clients() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc57c0 (     0xc) invocation function for block in current_session_kill_workspace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc57cc (   0x188) _CGXCreateSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5954 (   0x14c) CGSessionScheduleIdleYieldConsoleToSession(CGXSession*, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5aa0 (    0xdc) invocation function for block in CGSessionScheduleIdleYieldConsoleToSession(CGXSession*, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5b7c (   0x414) yieldConsoleCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc5f90 (    0xd0) CGSessionDisablesCosmeticSessionTransition(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6060 (    0x3c) invocation function for block in CGConsoleYieldToSession(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc609c (    0x3c) invocation function for block in CGConsoleYieldToSession(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc60d8 (    0xd0) CGSessionGetOrdering(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc61a8 (    0x9c) invocation function for block in CGSessionStartTransitionToSessionWithFlags(CGXSession*, CGXSession*, CGSTransitionFlags) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6244 (     0x4) invocation function for block in CGSessionSynchronizeSurfaces(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6248 (     0x4) transitionCallback(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc624c (    0xb4) invocation function for block in CGSessionGetOrdering(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6300 (    0x24) invocation function for block in CGSessionDisablesCosmeticSessionTransition(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6324 (    0x84) invocation function for block in CGSessionUnzoomAndSyncDisplays(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc63a8 (    0xe0) caller_has_entitlement(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6488 (    0xd0) WSSessionTakeOwnership [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6558 (    0x7c) session_for_mapping_factors(int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc65d4 (    0xa8) caller_is_session_leader_for_session(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc667c (    0x4c) invocation function for block in CGSessionSetClientDictionary(CGXSession*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc66c8 (    0x20) invocation function for block in CGSessionGetDeathWatchPort(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc66e8 (    0x40) invocation function for block in CGSessionGetCookieData(CGXSession*, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6728 (    0x4c) invocation function for block in CGSessionSetWorkspacesBindingDictionary(CGXSession*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6774 (    0x18) invocation function for block in CGSessionSetIgnoresOtherSpacesOnActivation(CGXSession*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc678c (    0x18) invocation function for block in CGSessionSetWorkspacesNotificationConnectionID(CGXSession*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc67a4 (    0x20) invocation function for block in CGSessionGetCaptureExcludeShapeCount(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc67c4 (     0x8) invocation function for block in CGSessionSetBootstrapPort(CGXSession*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc67cc (    0x1c) CGXSessionDrawsToVirtualFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc67e8 (    0x98) WSCurrentSessionDrawsToFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6880 (    0x4c) WSSetCurrentSessionDisplayConfigData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc68cc (    0x4c) WSSetCurrentSessionDisplayStreamData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6918 (    0x4c) WSSetCurrentSessionWindowOverrideResolutionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6964 (    0x4c) WSSetCurrentSessionWindowPixelDimensionsHintData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc69b0 (    0x4c) WSSetCurrentSessionConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc69fc (    0x4c) WSSetCurrentSessionEventData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6a48 (    0x4c) WSSetCurrentSessionPackageData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6a94 (    0x4c) WSSetCurrentSessionProcessData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6ae0 (   0x148) WSSetCurrentSessionSchedulerData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6c28 (    0x40) SchedulerSessionData::set_preemptive_work(std::__1::queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6c68 (    0x2c) WSCurrentSessionHasDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6c94 (    0x24) WSCurrentSessionBootstrapPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6cb8 (    0x2c) WSCurrentSessionIsLoggedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6ce4 (    0x2c) WSCurrentSessionConsoleUserIsAdmin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6d10 (    0x24) WSCurrentSessionUserEnvironment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6d34 (    0x4c) WSSetCurrentSessionCursorData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6d80 (    0xf0) WSGetSessionFullscreenZoomData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6e70 (    0x9c) WSGetSessionFullscreenDisplayZoomData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6f0c (    0x4c) WSGetCurrentSessionZoomManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6f58 (    0x54) WSIncrementCurrentSessionCaptureExcludeShapeCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc6fac (    0x54) WSDecrementCurrentSessionCaptureExcludeShapeCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7000 (   0x120) WSSessionAddSessionListToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7120 (   0x124) __WSSessionAddSessionListToExternalDebuggingDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7244 (   0x200) invocation function for block in create_external_debugging_dictionary_for_session(CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7444 (    0xcc) WSSessionDispatchMainBlockAsync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7510 (   0x128) __WSSessionDispatchMainBlockAsync_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7638 (    0x78) WSCurrentSessionHasImmediateUpdatesEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc76b0 (    0x84) WSSessionIncrementWantsHDRCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7734 (    0x84) WSSessionDecrementWantsHDRCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc77b8 (    0xdc) WSCurrentSessionAllowsConnectionToWarpCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7894 (    0xf4) WSCurrentSessionAllowsConnectionToOrderItselfFront [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7988 (    0x68) WSSetCurrentSessionDisplayData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc79f0 (    0x14) WS::Displays::SLCADisplay::cancel_pending_swaps_after_hibernation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7a04 (     0x4) WS::Displays::SLCADisplay::set_chromaticities(CAChromaticities) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7a08 (    0x18) WS::Displays::SLCADisplay::chromaticities() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7a20 (     0x8) WS::Displays::SLCADisplay::donor_display_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7a28 (   0x290) WS::Displays::SLCADisplay::create_debug_hud_state() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc7cb8 (   0x7d0) WS::Displays::SLCADisplay::create_debug_hud_brightness() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc8488 (   0x40c) WS::Displays::SLCADisplay::create_debug_hud_mode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc8894 (   0x128) std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_stringstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc89bc (   0x800) WS::Displays::SLCADisplay::create_debug_hud_hardware() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91bc (     0xc) WS::Displays::SLCADisplay::is_config_enabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91c8 (     0x4) WS::Displays::Display::set_dynamic_geometry(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91cc (     0x8) WS::Displays::Display::dynamic_geometry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91d4 (     0x4) WS::Displays::Display::set_supports_dynamic_geometry(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91d8 (     0x8) WS::Displays::Display::supports_dynamic_geometry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc91e0 (    0xb8) WS::Displays::SLCADisplay::set_is_fake_hmd(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9298 (     0xc) WS::Displays::SLCADisplay::is_fake_hmd() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc92a4 (    0x3c) WS::Displays::SLCADisplay::set_hmd_enabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc92e0 (    0xb4) WS::Displays::SLCADisplay::enable_ca_display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9394 (   0x10c) WS::Displays::SLCADisplay::disable_ca_display(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc94a0 (    0x7c) WS::Displays::SLCADisplay::set_ca_display_enabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc951c (   0x360) WS::Displays::SLCADisplay::collect_surfaces(bool, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc987c (     0xc) WS::Displays::SLCADisplay::is_hmd_enabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9888 (    0x28) WS::Displays::SLCADisplay::~SLCADisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc98b0 (   0x3c4) WS::Displays::SLCADisplay::~SLCADisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9c74 (    0x48) std::__1::__optional_destruct_base<WS::Displays::SLCADisplay::CalibrationRestoreState, false>::~__optional_destruct_base[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9cbc (    0x5c) WS::Displays::UserAdjustmentController::~UserAdjustmentController() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9d18 (    0xa8) WS::Displays::PresetController::~PresetController() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9dc0 (     0x4) WS::Displays::SLCADisplay::~SLCADisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cc9dc4 (   0x800) WS::Displays::SLCADisplay::create_debugging_dictionary() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca5c4 (    0x88) WS::Displays::SLCADisplay::modes() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca64c (    0xc0) WS::Displays::SLCADisplay::default_mode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca70c (     0x4) WS::Displays::SLCADisplay::set_acceleration_state(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca710 (     0x8) WS::Displays::SLCADisplay::label() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca718 (    0xf0) WS::Displays::SLCADisplay::reconfig_for_hid_features() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca808 (    0xc8) WS::Displays::SLCADisplay::HIDFeatureTimeoutCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca8d0 (     0xc) WS::Displays::SLCADisplay::is_active_preset_reference() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca8dc (     0x4) WS::Displays::Display::sw_framebuffer_release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca8e0 (     0x4) WS::Displays::Display::sw_framebuffer_acquire(unsigned char**, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca8e4 (     0x8) WS::Displays::SLCADisplay::copy_capabilities_dictionary() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca8ec (    0x28) WS::Displays::SLCADisplay::copy_display_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cca914 (  0x1494) WS::Displays::SLCADisplay::display_info() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccbda8 (    0xd8) WS::Displays::add_localization_info(NSString const*, NSString const*, NSMutableDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccbe80 (     0x8) WS::Displays::SLCADisplay::capture_param() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccbe88 (     0x8) WS::Displays::SLCADisplay::capture_connection_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccbe90 (    0xb0) WS::Displays::SLCADisplay::set_presentation_mode(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccbf40 (   0x194) WS::Displays::SLCADisplay::set_display_rotation(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc0d4 (    0xf4) WS::Displays::SLCADisplay::rotation_preflight(int, bool*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc1c8 (     0x8) WS::Displays::SLCADisplay::rotation_angle() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc1d0 (    0x70) WS::Displays::SLCADisplay::deschedule_idle_callback() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc240 (   0x154) WS::Displays::enter_idle_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc394 (   0x100) WS::Displays::SLCADisplay::schedule_idle_callback() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc494 (   0x210) WS::Displays::SLCADisplay::create_edr_request_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc6a4 (    0x7c) WS::Displays::SLCADisplay::add_number_to_dictionary(__CFDictionary*, __CFString const*, void const*, CFNumberType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccc720 (   0x9a0) WS::Displays::SLCADisplay::create_brightness_control_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd0c0 (   0x2bc) WS::Displays::SLCADisplay::create_power_control_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd37c (   0x128) WS::Displays::SLCADisplay::displays_state_commit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd4a4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ccd4bc (   0x180) WS::Displays::SLCADisplay::validate_state_change(SLSDisplayControl) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd63c (    0xa8) WS::Displays::CAWSManager::has_active_external_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd6e4 (    0x7c) WS::Displays::CAWSManager::has_ca_virtual_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd760 (    0x64) WS::Displays::SLCADisplay::set_fade_timer_processed(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd7c4 (    0x64) WS::Displays::SLCADisplay::set_dim_timer_processed(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd828 (    0x24) WS::Displays::SLCADisplay::set_dim_state(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd84c (    0x50) WS::Displays::SLCADisplay::set_power_state(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccd89c (   0x2b8) WS::Displays::SLCADisplay::copy_cursor_state_dict() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdb54 (     0x8) WS::Displays::Display::set_last_update_attempted_cursor_layer_generation(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdb5c (    0x38) WS::Displays::SLCADisplay::force_show_cursor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdb94 (     0x8) WS::Displays::SLCADisplay::set_cursor_disabled_for_windowed_cursor(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdb9c (   0x16c) WS::Displays::SLCADisplay::update_cursor_visibility() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdd08 (    0x54) WS::Displays::SLCADisplay::cursor_in_bounds() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdd5c (    0x40) WS::Displays::SLCADisplay::set_cursor_obscured(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccdd9c (    0x24) WS::Displays::SLCADisplay::set_cursor_hidden(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccddc0 (   0x268) WS::Displays::SLCADisplay::set_cursor_position(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce028 (    0x30) WS::Displays::SLCADisplay::set_cursor_position(CGPoint)::$_20::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce058 (   0x3a4) WS::Displays::SLCADisplay::set_cursor(CGXCursor*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce3fc (     0x8) WS::Displays::SLCADisplay::maximum_cursor_frames() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce404 (    0xe0) WS::Displays::SLCADisplay::maximum_cursor_size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce4e4 (    0x7c) WS::Displays::SLCADisplay::supports_hardware_cursor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce560 (     0x8) WS::Displays::SLCADisplay::cursor_in_framebuffer() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce568 (     0x8) WS::Displays::SLCADisplay::cursor_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce570 (     0x8) WS::Displays::Display::present_ioaccel_surface(IOAccelConnectStruct*, unsigned int, IOAccelSurfaceInformation*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cce578 (   0x78c) WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cced04 (    0x90) WS::Displays::SLCADisplay::get_hmd_swap_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cced94 (   0x140) WS::Displays::SLCADisplay::set_swapped_iosurface(__IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cceed4 (    0xf8) WS::Displays::get_current_surface_with_options(objc_object*, unsigned long long, bool*, bool*, bool, __IOSurfaceSharedEvent**, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccefcc (    0xd4) WS::Displays::SLCADisplay::surfacepool_surface_by_id(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf0a0 (    0x84) std::__1::shared_ptr<WS::Displays::CASurface> std::__1::allocate_shared[abi:v160006]<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>, WS::Displays::SLCADisplay*, __IOSurface*&, void>(std::__1::allocator<WS::Displays::CASurface> const&, WS::Displays::SLCADisplay*&&, __IOSurface*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf124 (    0x60) WS::Displays::SLCADisplay::surfacepool_insert(std::__1::shared_ptr<WS::Displays::Surface>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf184 (   0x164) WS::Displays::CASurface::CASurface(WS::Displays::Display*, __IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf2e8 (    0xe0) WS::Displays::CASurface::metal_texture(id<MTLDevice>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf3c8 (   0x138) WS::Displays::CASurface::~CASurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf500 (   0x190) WS::Displays::SLCADisplay::finish_external_update(_CARenderUpdate*, unsigned int, unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf690 (    0x30) WS::Displays::CASurface::protection_options() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf6c0 (     0x8) WS::Displays::CASurface::iosurface_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf6c8 (    0x30) WS::Displays::CASurface::color_space() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf6f8 (     0x8) WS::Displays::CASurface::iosurface() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf700 (    0x28) WS::Displays::CASurface::accelerator() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf728 (    0x28) WS::Displays::CASurface::~CASurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf750 (     0x4) WS::Displays::CASurface::~CASurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf754 (   0x100) WS::Displays::CASurface::init_dirty_shape(unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf854 (     0x4) std::__1::__shared_ptr_emplace<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf858 (    0x24) std::__1::__shared_ptr_emplace<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf87c (    0x44) std::__1::__shared_ptr_emplace<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf8c0 (    0x20) std::__1::__shared_ptr_emplace<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf8e0 (    0x18) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf8f8 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf8fc (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf900 (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf924 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf96c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf970 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf974 (     0x4) WS::Displays::SLCADisplay::render_and_present_debug_overlay(WS::Displays::Update&, WS::Displays::UpdateDebugHelper&, WS::Displays::SyncType, unsigned int, WSCompositeSourceLayer*, WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf978 (     0x8) WS::Displays::SLCADisplay::detaching_display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccf980 (    0xe8) WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccfa68 (   0x288) invocation function for block in WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccfcf0 (    0x44) WS::Displays::SLCADisplay::early_signal_shared_event() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccfd34 (    0x48) WS::Displays::SLCADisplay::needs_update() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ccfd7c (   0x43c) WS::Displays::SLCADisplay::present_empty_update(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd01b8 (    0x54) WS::Displays::SLCADisplay::begin_cursor_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd020c (    0xa4) WS::Displays::SLCADisplay::finish_cursor_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd02b0 (    0xd4) WS::Displays::SLCADisplay::commit_ca_empty_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd0384 (   0x10c) WS::Displays::SLCADisplay::process_deferred_empty_update_options() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd0490 (     0xc) WS::Displays::SLCADisplay::finish_cursor_update()::$_14::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd049c (   0x87c) WS::Displays::SLCADisplay::present_update(WS::Displays::Update&, WS::Displays::SyncType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd0d18 (   0x378) WS::Displays::SLCADisplay::copy_forward(WS::Displays::Update&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd1090 (     0xc) WS::Displays::SLCADisplay::present_update(WS::Displays::Update&, WS::Displays::SyncType)::$_15::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd109c (     0x8) WS::Displays::SLCADisplay::detached_iosurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd10a4 (  0x14d0) WS::Displays::SLCADisplay::render_update(WS::Displays::Update&, Compositor*, unsigned int, WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd2574 (  0x2040) WS::Displays::SLCADisplay::begin_update(WS::Displays::Update&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd45b4 (    0xbc) WS::Displays::SLCADisplay::display_stream_surface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4670 (    0x20) WS::Displays::SLCADisplay::swapped_surface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4690 (    0x84) WS::Displays::SLCADisplay::refresh_timing(unsigned long long&, unsigned long long&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4714 (     0x4) WS::Displays::Display::update_refresh_timing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4718 (     0x8) WS::Displays::SLCADisplay::composition_deadline() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4720 (    0x7c) WS::Displays::SLCADisplay::next_wakeup_time(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd479c (    0x74) WS::Displays::SLCADisplay::is_ready(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4810 (    0x48) WS::Displays::SLCADisplay::compositor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4858 (     0x4) WS::Displays::SLCADisplay::update_shield() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd485c (    0x7c) WS::Displays::SLCADisplay::lower_shield() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd48d8 (    0x4c) WS::Displays::SLCADisplay::clear_deferred_empty_update_options() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4924 (   0x30c) WS::Displays::SLCADisplay::raise_shield(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4c30 (     0xc) WS::Displays::SLCADisplay::is_hw_mirror() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4c3c (    0x10) WS::Displays::SLCADisplay::is_canonical_mirror_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4c4c (    0x10) WS::Displays::SLCADisplay::is_own_mirror_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4c5c (    0xd0) WS::Displays::SLCADisplay::canonical_mirror_master() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4d2c (     0x8) WS::Displays::SLCADisplay::mirror_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd4d34 (   0xb64) WS::Displays::SLCADisplay::copy_frame_to_display_zoom_surface(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5898 (    0xa0) WS::Displays::SLCADisplay::set_accessibility_display(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5938 (     0xc) WS::Displays::SLCADisplay::is_accessibility_display() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5944 (   0x160) WS::Displays::SLCADisplay::set_accessibility_matrix(float const*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5aa4 (    0x14) WS::Displays::SLCADisplay::invalidate_display_attachment_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5ab8 (    0x3c) WS::Displays::SLCADisplay::is_hdr_10() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5af4 (     0x8) WS::Displays::Display::contrast_ratio() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5afc (     0xc) WS::Displays::SLCADisplay::has_brightness_policy_control() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5b08 (   0x110) WS::Displays::SLCADisplay::set_luminance_limit(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5c18 (    0x58) WS::Displays::SLCADisplay::commit_brightness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5c70 (    0x90) WS::Displays::SLCADisplay::set_filtered_ambient_lux(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5d00 (    0x50) WS::Displays::SLCADisplay::set_ambient_lux(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5d50 (    0x20) WS::Displays::SLCADisplay::set_requested_headroom(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5d70 (     0xc) WS::Displays::SLCADisplay::requested_headroom() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5d7c (    0x2c) WS::Displays::SLCADisplay::set_reference_headroom(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5da8 (    0x1c) WS::Displays::SLCADisplay::reference_headroom() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5dc4 (    0x50) WS::Displays::SLCADisplay::set_current_headroom(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5e14 (    0x50) WS::Displays::SLCADisplay::set_potential_headroom(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5e64 (    0x1c) WS::Displays::SLCADisplay::potential_headroom() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5e80 (   0x104) WS::Displays::SLCADisplay::set_brightness_limit(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5f84 (     0x8) WS::Displays::SLCADisplay::brightness_limit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5f8c (    0x50) WS::Displays::SLCADisplay::set_sdr_nits(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5fdc (     0x8) WS::Displays::SLCADisplay::is_calibration_in_progress() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd5fe4 (    0x78) WS::Displays::SLCADisplay::abort_contrast_enhancer_ramp(float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd605c (    0x80) WS::Displays::SLCADisplay::set_contrast_enhancer_strength(float, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd60dc (    0x68) WS::Displays::SLCADisplay::contrast_enhancer_strength() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6144 (    0x7c) WS::Displays::SLCADisplay::abort_white_point_ramp(float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd61c0 (   0x1cc) WS::Displays::SLCADisplay::set_white_point(float const*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd638c (     0x4) WS::Displays::Display::update_render_attributes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6390 (    0x4c) WS::Displays::SLCADisplay::color_space() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd63dc (     0x8) WS::Displays::SLCADisplay::set_hdr_scale(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd63e4 (     0x8) WS::Displays::SLCADisplay::hdr_scale() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd63ec (    0x2c) WS::Displays::SLCADisplay::current_protection_options() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6418 (    0x4c) WS::Displays::SLCADisplay::supported_protection_options() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6464 (    0x20) WS::Displays::SLCADisplay::set_is_boot(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6484 (    0x30) WS::Displays::SLCADisplay::set_is_lid_closed(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd64b4 (    0x20) WS::Displays::SLCADisplay::set_is_slvd_exclusive(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd64d4 (     0xc) WS::Displays::SLCADisplay::is_slvd_exclusive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd64e0 (     0x8) WS::Displays::Display::last_update_attempted_cursor_layer_generation() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd64e8 (     0x8) WS::Displays::Display::last_frame_greedy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd64f0 (    0x1c) WS::Displays::SLCADisplay::evaluate_vrr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd650c (     0x8) WS::Displays::SLCADisplay::last_frame_apt_padded() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6514 (    0x24) WS::Displays::SLCADisplay::is_apt() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6538 (     0x8) WS::Displays::Display::is_vrr() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6540 (     0xc) WS::Displays::SLCADisplay::is_AS_J290() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd654c (     0x8) WS::Displays::SLCADisplay::is_triple_buffered() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6554 (     0x8) WS::Displays::SLCADisplay::supports_hw_blit() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd655c (    0x2c) WS::Displays::SLCADisplay::has_clamshell() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6588 (     0xc) WS::Displays::SLCADisplay::is_lid_closed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6594 (     0x8) WS::Displays::SLCADisplay::is_zoom_exempt() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd659c (     0xc) WS::Displays::SLCADisplay::is_faded() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65a8 (     0xc) WS::Displays::SLCADisplay::is_dim() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65b4 (     0xc) WS::Displays::SLCADisplay::is_paravirtualized() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65c0 (     0xc) WS::Displays::SLCADisplay::is_virtual() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65cc (     0xc) WS::Displays::SLCADisplay::is_tv() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65d8 (     0x8) WS::Displays::SLCADisplay::is_presentation_mode_enabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65e0 (     0x8) WS::Displays::SLCADisplay::is_sw_mirror() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65e8 (    0x10) WS::Displays::SLCADisplay::is_rotated() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd65f8 (     0xc) WS::Displays::SLCADisplay::is_projector() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6604 (    0xb8) WS::Displays::SLCADisplay::is_potentially_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd66bc (    0xa4) WS::Displays::SLCADisplay::is_live() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6760 (     0xc) WS::Displays::SLCADisplay::is_online() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd676c (    0x10) WS::Displays::SLCADisplay::is_mirror_slave() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd677c (     0xc) WS::Displays::SLCADisplay::is_main() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6788 (    0x60) WS::Displays::SLCADisplay::is_in_mirror_set() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd67e8 (     0xc) WS::Displays::SLCADisplay::is_hmd() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd67f4 (     0x8) WS::Displays::SLCADisplay::is_grayscale() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd67fc (     0x8) WS::Displays::SLCADisplay::is_full_screen_opengl() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6804 (     0xc) WS::Displays::SLCADisplay::is_external() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6810 (     0xc) WS::Displays::SLCADisplay::is_extended_range() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd681c (     0xc) WS::Displays::SLCADisplay::is_enabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6828 (    0x4c) WS::Displays::SLCADisplay::is_edr_capable() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6874 (     0x8) WS::Displays::Display::is_do_not_dim() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd687c (     0x8) WS::Displays::SLCADisplay::is_deep() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6884 (     0xc) WS::Displays::SLCADisplay::is_dfr() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6890 (    0x44) WS::Displays::SLCADisplay::is_content_zoomed_pre_scanout() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd68d4 (     0xc) WS::Displays::SLCADisplay::is_captured() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd68e0 (     0xc) WS::Displays::SLCADisplay::is_builtin() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd68ec (     0xc) WS::Displays::SLCADisplay::is_boot() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd68f8 (     0xc) WS::Displays::SLCADisplay::is_asleep() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6904 (     0xc) WS::Displays::SLCADisplay::is_helios() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6910 (     0xc) WS::Displays::SLCADisplay::is_sidecar() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd691c (     0xc) WS::Displays::SLCADisplay::is_airplay() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6928 (    0xf4) WS::Displays::SLCADisplay::is_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6a1c (    0x40) WS::Displays::SLCADisplay::is_accelerated() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6a5c (   0x370) WS::Displays::SLCADisplay::update_realtime_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6dcc (   0x108) WS::Displays::SLCADisplay::request_to_remove_privacy_indicator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd6ed4 (   0x18c) WS::Displays::SLCADisplay::set_ca_indicator(__IOSurface*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7060 (    0xe0) WS::Displays::SLCADisplay::supports_ca_indicator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7140 (    0x44) invocation function for block in WS::Displays::SLCADisplay::supports_ca_indicator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7184 (     0xc) WS::Displays::SLCADisplay::is_ca_indicator_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7190 (    0x60) WS::Displays::SLCADisplay::is_ca_ready_for_hw_indicator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd71f0 (   0x1a4) WS::Displays::SLCADisplay::is_safe_aperture_implicitly() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7394 (    0x10) WS::Displays::SLCADisplay::is_safe_aperture_via_direct() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd73a4 (    0xf0) WS::Displays::SLCADisplay::is_safe_aperture() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7494 (     0xc) WS::Displays::SLCADisplay::get_safe_aperture_mode_direct() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd74a0 (   0x28c) WS::Displays::SLCADisplay::set_safe_aperture_mode_direct(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd772c (   0x10c) WS::Displays::sarlacc_avoidance_direct_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7838 (    0x90) WS::Displays::CAManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd78c8 (   0x1b8) WS::Displays::SLCADisplay::resolve_safe_aperture_offset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7a80 (   0x3f0) WS::Displays::CAWSManager::CAWSManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7e70 (    0x74) WS::Displays::Manager::Manager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7ee4 (    0x4c) std::__1::__tree<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7f30 (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd7f88 (   0x110) WS::Displays::configuration_engine::~configuration_engine() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8098 (    0xe0) WS::Displays::DisplaySet::~DisplaySet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8178 (    0xd8) WS::Displays::Manager::~Manager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8250 (    0x64) WS::Displays::change_summary::~change_summary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd82b4 (    0x84) std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8338 (    0x84) void std::__1::__destroy_at[abi:v160006]<WS::Displays::config_set_entry, 0>(WS::Displays::config_set_entry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd83bc (    0x28) WS::Displays::WSDisplayNotification::post_system_event(CGXConnection*, CGSEventSystemDefinedSubtype, int, int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd83e4 (    0x20) WS::Displays::WSDisplayNotification::notify_pid_sync(CGSNotificationType, double, int, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8404 (    0x24) WS::Displays::WSDisplayNotification::notify_pid(CGSNotificationType, int, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8428 (    0x14) WS::Displays::WSDisplayNotification::notify_conn_or_local(CGXConnection*, CGSNotificationType, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd843c (    0x10) WS::Displays::WSDisplayNotification::notify_local(CGSNotificationType, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd844c (    0x70) WS::Displays::WSDisplayNotification::notify_with_exclusion(CGSNotificationType, void*, unsigned long, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd84bc (    0x20) WS::Displays::WSDisplayNotification::notify_sync(CGSNotificationType, double, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd84dc (    0x24) WS::Displays::WSDisplayNotification::notify(CGSNotificationType, void*, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8500 (     0xc) WS::Displays::WSDisplayNotification::set_server_state(CGSServerOperation, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd850c (     0x4) WS::Displays::WSDisplayNotification::~WSDisplayNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8510 (     0x4) WS::Displays::WSDisplayNotification::~WSDisplayNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8514 (    0x58) WS::Configuration::WSConfigurationRegisterSessionHandler() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd856c (     0x4) WS::Configuration::WSSaveServerWidePreferences() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8570 (     0xc) WS::Configuration::WSSetUserPreferenceForKey(__CFString const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd857c (     0x8) WS::Configuration::WSUserPreferenceForKey(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8584 (     0x8) WS::Configuration::WSServerWidePreferenceForKey(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd858c (     0xc) WS::Configuration::WSSetPreferenceForKey(__CFString const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8598 (     0xc) WS::Configuration::WSBooleanPreferenceForKey(__CFString const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd85a4 (     0xc) WS::Configuration::WSIntegerPreferenceForKey(__CFString const*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd85b0 (     0x8) WS::Configuration::WSPreferenceIsSet(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd85b8 (    0x4c) WS::Configuration::WSPreferenceForKey(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8604 (    0x44) WS::Configuration::SkyLightConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8648 (     0x4) WS::Configuration::~Configuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd864c (     0x4) WS::Configuration::~Configuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8650 (    0x24) WS::Displays::configuration_engine_dependencies::WSGetCurrentSessionDisplayData() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8674 (     0x8) WS::Displays::configuration_engine_dependencies::CGXUpdateBackgroundWindows(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd867c (     0x4) WS::Displays::configuration_engine_dependencies::CGXReloadCursor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8680 (    0x20) WS::Displays::configuration_engine_dependencies::CGXNextConnection(CGXConnection const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd86a0 (    0x10) WS::Displays::configuration_engine_dependencies::CGXInvalidateDisplayShape(CGXConnection*, CGXWindow*, CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd86b0 (     0x4) WS::Displays::configuration_engine_dependencies::~configuration_engine_dependencies() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd86b4 (     0x4) WS::Displays::configuration_engine_dependencies::~configuration_engine_dependencies() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd86b8 (    0x24) WS::Displays::CAWSManager::current_session_data() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd86dc (    0x84) WS::Displays::CAWSManager::invalidate_mapping_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8760 (   0x104) WS::Displays::CAWSManager::current_display_set() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8864 (    0x84) WS::Displays::CAWSManager::invalidate_changed_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd88e8 (   0x11c) WS::Displays::CAWSManager::unlock_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8a04 (   0x130) WS::Displays::CAWSManager::latch_last_layout_changed_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8b34 (    0x28) WS::Displays::CAWSManager::~CAWSManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8b5c (   0x360) WS::Displays::CAWSManager::~CAWSManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8ebc (    0x40) invocation function for block in WS::Displays::CAWSManager::~CAWSManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8efc (    0x98) WS::Displays::CAWSManager::deferred_hot_plugs_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd8f94 (   0x348) invocation function for block in WS::Displays::CAWSManager::dim_timer_cancel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd92dc (   0x7c8) WS::Displays::CAWSManager::send_power_state_notification(SLSDisplayPowerStateNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9aa4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185cd9abc (   0x100) WS::Displays::CAWSManager::update_displays_logical_power_state(SLSDisplayControl) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9bbc (   0x198) std::__1::map<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>>>::map[abi:v160006](std::__1::map<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9d54 (    0xe4) unsigned long std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>>>::__erase_unique<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9e38 (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<WS::Displays::CAWSManager::DimTimerDisplay>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9e90 (    0x6c) WS::Displays::CAWSManager::validate_power_state_notification(SLSDisplayPowerStateNotificationType, SLSDisplayPowerStateNotificationType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9efc (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185cd9f18 (    0x98) WS::Displays::CAWSManager::brightness_policy_engine() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9fb0 (     0x4) WS::Displays::CAWSManager::~CAWSManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cd9fb4 (    0xcc) WS::Displays::CAWSManager::deschedule_update_power_assertions_callback(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda080 (    0xdc) WS::Displays::update_power_assertions_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda15c (    0x54) WS::Displays::CAWSManager::copy_and_reset_display_arrangement_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda1b0 (   0x690) WS::Displays::CAWSManager::update_display_arrangement_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda840 (    0x94) WS::Displays::SLCADisplay::is_mvd_display() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda8d4 (     0x4) WS::Displays::CAWSManager::pv_save_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda8d8 (     0x8) WS::Displays::CAWSManager::set_slvd_exclusive_mode_active(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda8e0 (    0xd0) WS::Displays::CAWSManager::is_slvd_exclusive_display(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda9b0 (     0x8) WS::Displays::CAWSManager::is_slvd_exclusive_mode_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda9b8 (     0x8) WS::Displays::CAWSManager::set_sidecar_exclusive_display(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda9c0 (    0x10) WS::Displays::CAWSManager::is_sidecar_exclusive_display(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda9d0 (    0x10) WS::Displays::CAWSManager::is_sidecar_exclusive_mode_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cda9e0 (    0xc0) WS::Displays::CAWSManager::invalidate_display_attachment_seed(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdaaa0 (   0xa3c) WS::Displays::CAWSManager::mig_Invoke74155833(unsigned int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdb4dc (  0x2464) WS::Displays::CAWSManager::mig_Invoke77298158(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdd940 (   0x45c) WS::Displays::CAWSManager::rdar_war_loss_of_main(SLSClamshellState) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cddd9c (   0x210) WS::Displays::CAWSManager::xr_fc_set_active_type(SLXRType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cddfac (   0x200) std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*> std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::insert<std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, 0>(std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde1ac (    0x98) WS::Displays::SLCADisplay::xr_fc_set_active_type(SLXRType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde244 (    0x90) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__move_range(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde2d4 (    0xa4) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>&>&, std::__1::shared_ptr<WS::Displays::Display>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde378 (    0x68) std::__1::pair<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*, std::__1::shared_ptr<WS::Displays::Display>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde3e0 (   0x164) WS::Displays::CAWSManager::xr_fc_note_captured(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde544 (   0x22c) WS::Displays::CAWSManager::xr_fc_is_enabled(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde770 (   0x228) WS::Displays::CAWSManager::src_zoom_rect(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cde998 (   0x884) WS::Displays::CAWSManager::mig_display_calibration_toolbox_command(unsigned int, int, unsigned int, void const*, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf21c (    0x60) WS::Displays::SLCADisplay::refresh() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf27c (   0x130) WS::Displays::SLCADisplay::set_toolbox_command(unsigned int, NSData*, NSData**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf3ac (   0x150) WS::Displays::SLCADisplay::clear_user_adjustment() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf4fc (   0x32c) WS::Displays::SLCADisplay::user_adjustment_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf828 (   0x1c4) WS::Displays::CAWSManager::mig_display_calibration_end(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdf9ec (   0x56c) WS::Displays::SLCADisplay::calibration_end() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cdff58 (    0xec) WS::Displays::calibration_display_connection_death(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce0044 (   0x4cc) WS::Displays::SLCADisplay::set_current_mode(WS::Displays::Mode, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce0510 (   0x138) WS::Displays::find_link_mode_match(WS::Displays::Mode, std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>, unsigned int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce0648 (   0xb14) WS::Displays::SLCADisplay::evaluate_geometry() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce115c (   0x1b0) WS::Displays::SLCADisplay::resolve_cadisplay_scale(WS::Displays::Mode) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce130c (   0x210) WS::Displays::SLCADisplay::get_calibrated_backlight_scale_factor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce151c (   0xccc) WS::Displays::CAWSManager::mig_display_calibration_begin(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce21e8 (    0x40) WS::Displays::SLCADisplay::CalibrationRestoreState::~CalibrationRestoreState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2228 (   0x148) WS::Displays::ColorSyncMakeProfileFunc(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2370 (   0x14c) WS::Displays::ColorSyncProfileCopyDataFunc(ColorSyncProfile const*, __CFError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce24bc (    0x4c) WS::CFRef<CGColorSpace*>::operator=(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2508 (    0x50) invocation function for block in WS::Displays::getColorSyncProfileCopyDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2558 (   0x110) WS::Displays::ColorSyncLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2668 (    0x74) invocation function for block in WS::Displays::ColorSyncLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce26dc (    0x50) invocation function for block in WS::Displays::getColorSyncMakeProfileSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce272c (   0x120) WS::Displays::CAWSManager::mig_display_copy_calibration_info(unsigned int, int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce284c (    0xd0) WS::Displays::CAWSManager::mig_display_get_prefer_hdr_10(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce291c (    0xfc) WS::Displays::CAWSManager::mig_display_set_dynamic_geometry_enabled(unsigned int, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2a18 (    0xfc) WS::Displays::CAWSManager::mig_display_is_dynamic_geometry_enabled(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2b14 (    0xfc) WS::Displays::CAWSManager::mig_display_supports_dynamic_geometry(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2c10 (    0x94) WS::Displays::CAWSManager::mig_get_underscan_value_for_display(unsigned int, int, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce2ca4 (   0x364) WS::Displays::CAWSManager::mig_set_underscan_value_for_display(unsigned int, int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce3008 (   0x150) WS::Displays::CAWSManager::mig_display_factory_reset(unsigned int, int, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce3158 (   0x148) WS::Displays::CAWSManager::mig_display_invalidate_user_adjustment(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce32a0 (    0xec) WS::Displays::CAWSManager::mig_display_is_user_adjustment_valid(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce338c (    0x84) WS::Displays::CAWSManager::mig_display_is_user_adjustment_supported(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce3410 (   0x3e0) WS::Displays::CAWSManager::mig_display_set_user_adjustment_data(unsigned int, int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce37f0 (   0x394) WS::Displays::CAWSManager::mig_display_copy_user_adjustment_data(unsigned int, int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce3b84 (   0x2b0) WS::Displays::CAWSManager::mig_display_set_user_adjustment(unsigned int, int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce3e34 (   0x2cc) WS::Displays::CAWSManager::mig_display_copy_user_adjustment(unsigned int, int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4100 (    0xec) WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce41ec (    0x14) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4200 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4204 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4208 (    0x24) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce422c (    0x48) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4274 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4278 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce427c (    0xec) WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4368 (    0x14) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce437c (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4380 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4384 (    0x24) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce43a8 (    0x48) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce43f0 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce43f4 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce43f8 (   0x19c) WS::Displays::CAWSManager::mig_display_reset_preset(unsigned int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce4594 (   0xa6c) WS::Displays::CAWSManager::mig_display_set_preset_data(unsigned int, int, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5000 (   0x258) WS::Displays::CAWSManager::mig_display_copy_preset_data(unsigned int, int, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5258 (   0x9bc) WS::Displays::CAWSManager::mig_display_set_preset(unsigned int, int, unsigned int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5c14 (    0xe4) WS::Displays::CAWSManager::mig_display_is_preset_writable(unsigned int, int, unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5cf8 (    0xe4) WS::Displays::CAWSManager::mig_display_is_preset_valid(unsigned int, int, unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5ddc (   0x164) WS::Displays::CAWSManager::mig_display_copy_preset_unique_id(unsigned int, int, unsigned int, CFUUIDBytes*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce5f40 (    0xd0) WS::Displays::CAWSManager::mig_display_get_preset_count(unsigned int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6010 (    0xa8) WS::Displays::CAWSManager::mig_display_get_factory_default_preset_index(unsigned int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce60b8 (   0x188) WS::Displays::CAWSManager::mig_display_set_active_preset_index(unsigned int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6240 (    0xb0) WS::Displays::CAWSManager::mig_display_get_active_preset_index(unsigned int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce62f0 (   0x74c) WS::Displays::CAWSManager::mig_display_copy_preset(unsigned int, int, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6a3c (    0xc8) WS::Displays::CAWSManager::mig_display_is_thermally_limited(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6b04 (     0x8) WS::Displays::CAWSManager::mig_display_set_hdr_mode_enabled(unsigned int, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6b0c (     0x8) WS::Displays::CAWSManager::mig_display_is_hdr_mode_enabled(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6b14 (     0x8) WS::Displays::CAWSManager::mig_display_supports_hdr_mode(unsigned int, int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce6b1c (   0xf5c) WS::Displays::CAWSManager::mig_displays_request_state_with_notifier(unsigned long long, int, double, SLSClamshellState, unsigned long long, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce7a78 (   0x1e0) WS::Displays::CAWSManager::validate_display_id(SLSDisplayControl, int, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce7c58 (   0x120) WS::Displays::CAWSManager::process_deferred_hotplug_events() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce7d78 (  0x11dc) invocation function for block in WS::Displays::CAWSManager::process_deferred_hotplug_events() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce8f54 (    0x68) std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce8fbc (    0xe0) WS::Displays::CAWSManager::process_deferred_hotplug_unplug(WS::Displays::_hot_plug_element*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce909c (   0x36c) WS::Displays::CAWSManager::process_hotplug_event(int, CAWindowServerDisplayHotPlugState, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9408 (   0x268) WS::Displays::CAWSManager::hardware_helios_display_by_id(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9670 (   0x764) WS::Displays::SLCADisplay::process_display_disconnect(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9dd4 (    0xc8) WS::Displays::SLCADisplay::copy_ioav_display_attributes(CADisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9e9c (    0x7c) WS::Displays::SLCADisplay::copy_ioav_product_attributes(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f18 (     0xc) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f24 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f28 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f2c (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f50 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f98 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9f9c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ce9fa0 (  0x1c50) WS::Displays::SLCADisplay::process_display_connect(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cebbf0 (    0x58) (null) [FUNC, FunctionStarts] 
                0x0000000185cebc48 (   0xe58) WS::Displays::SLCADisplay::update_preset_support() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cecaa0 (   0x118) WS::Displays::SLCADisplay::update_system_gamma() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cecbb8 (   0x1d8) WS::Displays::get_gestalt_model() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cecd90 (   0x100) WS::Displays::SLCADisplay::read_pv_preferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cece90 (    0x50) WS::Displays::SLCADisplay::set_label(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cecee0 (   0xee8) WS::Displays::SLCADisplay::reevaluate_modes(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceddc8 (   0x3b0) WS::Displays::is_display_tv_or_projector(WS::Displays::SLCADisplay const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cee178 (     0xc) invocation function for block in WS::Displays::SLCADisplay::process_display_connect(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cee184 (   0x3ec) WS::Displays::SLCADisplay::set_mirroring_modes(std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cee570 (    0xc8) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__move_range(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cee638 (    0xdc) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__swap_out_circular_buffer(std::__1::__split_buffer<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>&>&, WS::Displays::Mode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cee714 (   0x368) WS::Displays::SLCADisplay::get_hid_orientation(int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceea7c (     0xc) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceea88 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceea8c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceea90 (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceeab4 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceeafc (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceeb00 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceeb04 (    0x84) std::__1::__function::__value_func<NSDictionary* ()>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceeb88 (   0x540) WS::Displays::SLCADisplay::preset_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef0c8 (    0xac) WS::Displays::SLCADisplay::update_active_preset_reference() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef174 (    0xe0) std::__1::__function::__value_func<void ()>::operator=[abi:v160006](std::__1::__function::__value_func<void ()>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef254 (     0x8) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef25c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef260 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef264 (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef288 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef2d0 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef2d4 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef2d8 (   0x14c) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::operator()(NSDictionary*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef424 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef428 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef42c (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::__clone(std::__1::__function::__base<void (NSDictionary*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef450 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef498 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef49c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef4a0 (    0xcc) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef56c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef570 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef574 (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::__clone(std::__1::__function::__base<NSDictionary* ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef598 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef5e0 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef5e4 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef5e8 (    0x3c) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef624 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef628 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef62c (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef650 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef698 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef69c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef6a0 (   0x14c) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::operator()(NSDictionary*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef7ec (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef7f0 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef7f4 (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::__clone(std::__1::__function::__base<void (NSDictionary*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef818 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef860 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef864 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef868 (    0xcc) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef934 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef938 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef93c (    0x24) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::__clone(std::__1::__function::__base<NSDictionary* ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef960 (    0x48) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef9a8 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef9ac (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cef9b0 (    0x74) invocation function for block in WS::Displays::SLCADisplay::update_preset_support() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefa24 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefa70 (    0x50) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefac0 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefac4 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefac8 (    0x30) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefaf8 (    0x54) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefb4c (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefb50 (     0x4) std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefb54 (   0x350) std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>>::__node_insert_multi_prepare(unsigned long, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cefea4 (    0xe8) std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>>::__node_insert_multi_perform(std::__1::__hash_node<int, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<int, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceff8c (    0x54) std::__1::__tree<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>>>::_DetachedTreeCache::__detach_next(std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ceffe0 (    0x58) std::__1::__tree<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::_hot_plug_element*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::_hot_plug_element*>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0038 (    0x40) WS::Displays::retry_hotplug_processing_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0078 (   0x45c) invocation function for block in WS::Displays::CAWSManager::dim_timer_start(double, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf04d4 (   0x158) invocation function for block in WS::Displays::CAWSManager::dim_timer_start(double, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf062c (     0xc) invocation function for block in WS::Displays::CAWSManager::dim_timer_start(double, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0638 (   0x494) WS::Displays::CAWSManager::dim_timer_handler(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0acc (     0x4) std::__1::__shared_ptr_emplace<WS::Displays::CAWSManager::DimTimerDisplay, std::__1::allocator<WS::Displays::CAWSManager::DimTimerDisplay>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0ad0 (    0x6c) std::__1::__shared_ptr_emplace<WS::Displays::CAWSManager::DimTimerDisplay, std::__1::allocator<WS::Displays::CAWSManager::DimTimerDisplay>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0b3c (    0x44) std::__1::__shared_ptr_emplace<WS::Displays::CAWSManager::DimTimerDisplay, std::__1::allocator<WS::Displays::CAWSManager::DimTimerDisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0b80 (    0x20) std::__1::__shared_ptr_emplace<WS::Displays::CAWSManager::DimTimerDisplay, std::__1::allocator<WS::Displays::CAWSManager::DimTimerDisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0ba0 (    0xb0) WS::Displays::CAWSManager::display_request_notify(SLSDisplayControl, unsigned long long, CGError, SLSDisplayPowerStateNotificationType, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0c50 (    0xa0) invocation function for block in WS::Displays::CAWSManager::process_clamshell_request_with_notifier(SLSDisplayControl, int, double, SLSClamshellState, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0cf0 (    0x14) WS::Displays::CAWSManager::mig_displays_state(unsigned int, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0d04 (   0x128) WS::Displays::CAWSManager::mig_set_transfer_by_table_for_display(unsigned int, int, float*, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0e2c (   0x174) WS::Displays::SLCADisplay::set_gamma_lut(float*, unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf0fa0 (    0xfc) WS::Displays::CAWSManager::mig_set_transfer_by_formula_for_display(unsigned int, int, gamma_formula_t, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf109c (   0x2fc) WS::Displays::SLCADisplay::set_gamma_formula(gamma_formula_t const&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf1398 (    0xf4) WS::Displays::CAWSManager::mig_set_rotation_for_display(unsigned int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf148c (    0xb4) WS::Displays::CAWSManager::mig_set_option_for_display(unsigned int, int, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf1540 (   0x454) WS::Displays::CAWSManager::mig_set_intention_wiper_for_display(unsigned int, int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf1994 (   0x1c4) WS::Displays::CAWSManager::mig_set_intention_for_display(unsigned int, int, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf1b58 (    0xa4) WS::Displays::CAWSManager::mig_set_contrast(unsigned int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf1bfc (   0x9e8) WS::Displays::CAWSManager::mig_set_color_profile_and_transfer_for_display(unsigned int, int, unsigned int, unsigned int, unsigned int, float*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf25e4 (    0x54) WS::CFRef<CGColorSpace*>::operator=(WS::CFRef<CGColorSpace*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2638 (   0x14c) WS::Displays::ColorSyncProfileCreateFunc(__CFData const*, __CFError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2784 (   0x150) WS::Displays::ColorSyncProfileCopyTagFunc(ColorSyncProfile const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf28d4 (    0x50) invocation function for block in WS::Displays::getColorSyncProfileCreateMutableCopySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2924 (   0x17c) WS::Displays::ColorSyncProfileSetParametricTRCTagFunc(ColorSyncProfile const*, __CFString const*, unsigned short, double, double, double, double, double, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2aa0 (    0x50) invocation function for block in WS::Displays::getColorSyncProfileSetParametricTRCTagSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2af0 (    0x74) invocation function for block in WS::Displays::SLCADisplay::set_color_space(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2b64 (    0x50) invocation function for block in WS::Displays::getColorSyncProfileCopyTagSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2bb4 (    0x50) invocation function for block in WS::Displays::getColorSyncProfileCreateSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2c04 (    0x3c) WS::Displays::CAWSManager::mig_set_display_color_profile(unsigned int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2c40 (     0x8) WS::Displays::CAWSManager::mig_set_display_brightness(unsigned int, int, float, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2c48 (   0x128) WS::Displays::CAWSManager::mig_service_for_display(unsigned int, int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2d70 (   0x1bc) invocation function for block in WS::Displays::CAWSManager::mig_service_for_display(unsigned int, int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2f2c (     0x8) WS::Displays::CAWSManager::mig_release_fade_reservation(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf2f34 (   0x18c) WS::Displays::CAWSManager::mig_main_display_bounds_ignoring_capture(unsigned int, float*, float*, float*, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf30c0 (    0x14) WS::Displays::CAWSManager::mig_lpv_supported(unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf30d4 (    0x14) WS::Displays::CAWSManager::mig_hdr_supported(unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf30e8 (    0x5c) WS::Displays::CAWSManager::mig_hdr_enabled(unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3144 (     0x8) WS::Displays::CAWSManager::mig_ambient_display_enabled(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf314c (     0x8) WS::Displays::CAWSManager::mig_initialize_gamma(unsigned int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3154 (    0x94) WS::Displays::CAWSManager::mig_sizeof_transfer_for_display(unsigned int, int, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf31e8 (    0xb4) WS::Displays::CAWSManager::mig_transfer_by_table_for_display(unsigned int, int, float**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf329c (    0xac) WS::Displays::CAWSManager::mig_transfer_table_by_formula_for_display(unsigned int, int, gamma_formula_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3348 (   0x154) WS::Displays::CAWSManager::mig_display_shmem(unsigned int, unsigned int*, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf349c (     0x8) WS::Displays::CAWSManager::mig_maximum_hdr_value_for_display(unsigned int, int, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf34a4 (     0x8) WS::Displays::CAWSManager::mig_brightness_for_display(unsigned int, int, float, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf34ac (     0x8) WS::Displays::CAWSManager::mig_enable_hdr(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf34b4 (     0x8) WS::Displays::CAWSManager::mig_enable_ambient_display(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf34bc (   0x194) WS::Displays::CAWSManager::mig_visual_bell(unsigned int, float, float, float, float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3650 (     0x4) WS::Displays::CAWSManager::mig_visual_bell(unsigned int, float, float, float, float, float, float, float)::$_28::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3654 (   0x228) WS::Displays::CAWSManager::perform_visual_bell(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf387c (    0x70) WS::Displays::SLCADisplay::schedule_visual_bell(float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf38ec (     0x4) WS::Displays::CAWSManager::perform_visual_bell(double)::$_26::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf38f0 (   0x178) WS::Displays::CAWSManager::mig_refresh_timing_for_display(unsigned int, int, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3a68 (     0x8) WS::Displays::CAWSManager::mig_fade(unsigned int, int, float, float, float, float, float, float, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3a70 (    0xa0) WS::Displays::CAWSManager::mig_copy_info_dictionary_for_display(unsigned int, int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3b10 (   0x124) WS::Displays::copy_info_dictionary(std::__1::shared_ptr<WS::Displays::Display>, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3c34 (   0x100) WS::Displays::CAWSManager::mig_copy_info_dictionary_for_hmd(unsigned int, int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3d34 (   0x17c) WS::Displays::CAWSManager::mig_complete_configuration(unsigned int, int, CGSDisplayConfig*, unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3eb0 (    0xf0) WS::Displays::CAWSManager::mig_accelerator_for_display(unsigned int, int, int, unsigned int*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf3fa0 (   0x19c) WS::Displays::CAWSManager::mig_accelerator_for_hmd(unsigned int, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf413c (     0x8) WS::Displays::CAWSManager::mig_acquire_fade_reservation(unsigned int, float, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf4144 (   0x920) WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf4a64 (   0x168) WS::Displays::verify_airplay_entitlements(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf4bcc (   0x3e0) WS::Displays::CAWSManager::take_airplay_offline(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf4fac (   0x258) WS::Displays::Mode& std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::emplace_back<unsigned int, int, int, unsigned int const&, int, float const&, float const&, bool, bool, bool, bool const&, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double>(unsigned int&&, int&&, int&&, unsigned int const&, int&&, float const&, float const&, bool&&, bool&&, bool&&, bool const&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5204 (   0x258) WS::Displays::Mode& std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::emplace_back<unsigned int, int, int, unsigned int const&, int, float const&, float const&, bool const&, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double>(unsigned int&&, int&&, int&&, unsigned int const&, int&&, float const&, float const&, bool const&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf545c (   0x270) WS::Displays::Mode& std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::emplace_back<unsigned int, unsigned int const&, unsigned int const&, unsigned int const&, int const&, int, int, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double>(unsigned int&&, unsigned int const&, unsigned int const&, unsigned int const&, int const&, int&&, int&&, bool&&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf56cc (   0x400) WS::Displays::CAVirtualDisplay::make_display(std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>&, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5acc (    0x8c) WS::Displays::CAWSManager::add_cursor_display(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5b58 (    0xac) std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::vector(std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5c04 (    0x14) WS::Displays::airplay_display_connection_death(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5c18 (    0x54) std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5c6c (   0x13c) WS::Displays::config_set_entry* std::__1::construct_at[abi:v160006]<WS::Displays::config_set_entry, WS::Displays::config_set_entry&, WS::Displays::config_set_entry*>(WS::Displays::config_set_entry*, WS::Displays::config_set_entry&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5da8 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::config_set_entry>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::config_set_entry>>(std::__1::allocator<WS::Displays::config_set_entry>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5df4 (    0xbc) std::__1::shared_ptr<WS::Displays::CAVirtualDisplay> std::__1::allocate_shared[abi:v160006]<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>, void>(std::__1::allocator<WS::Displays::CAVirtualDisplay> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf5eb0 (   0x1a0) void std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::assign<WS::Displays::Mode*, 0>(WS::Displays::Mode*, WS::Displays::Mode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6050 (    0x60) std::__1::pair<WS::Displays::Mode*, WS::Displays::Mode*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*, 0>(WS::Displays::Mode*, WS::Displays::Mode*, WS::Displays::Mode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf60b0 (    0x60) std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6110 (   0x7d4) WS::Displays::SLCADisplay::SLCADisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf68e4 (     0x4) WS::Displays::CAVirtualDisplay::cancel_pending_swaps_after_hibernation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf68e8 (    0x10) WS::Displays::CAVirtualDisplay::set_chromaticities(CAChromaticities) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf68f8 (    0x10) WS::Displays::CAVirtualDisplay::chromaticities() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6908 (     0x8) WS::Displays::CAVirtualDisplay::donor_display_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6910 (    0x48) WS::Displays::CAVirtualDisplay::set_dynamic_geometry(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6958 (     0x8) WS::Displays::CAVirtualDisplay::dynamic_geometry() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6960 (     0x8) WS::Displays::CAVirtualDisplay::set_supports_dynamic_geometry(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6968 (     0x8) WS::Displays::CAVirtualDisplay::supports_dynamic_geometry() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6970 (    0x28) WS::Displays::CAVirtualDisplay::~CAVirtualDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6998 (    0x78) WS::Displays::CAVirtualDisplay::~CAVirtualDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6a10 (    0x40) WS::Displays::CAVirtualDisplay::set_color_modes(NSArray*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6a50 (    0x40) WS::Displays::CAVirtualDisplay::set_timings(NSArray*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6a90 (     0x4) WS::Displays::CAVirtualDisplay::~CAVirtualDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6a94 (    0xf8) WS::Displays::CAVirtualDisplay::update_refresh_timing() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6b8c (   0x1cc) WS::Displays::SLCADisplay::override_safe_aperture_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6d58 (   0x10c) WS::Displays::sarlacc_resolve_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6e64 (    0x24) WS::Displays::SLCADisplay::supports_safe_aperture_mode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6e88 (    0x18) WS::Displays::SLCADisplay::transform_scanout_to_logical() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6ea0 (    0x18) WS::Displays::SLCADisplay::transform_physical_to_scanout() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6eb8 (    0x18) WS::Displays::SLCADisplay::transform_display_to_global() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6ed0 (    0x18) WS::Displays::SLCADisplay::transform_pixels_to_points() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6ee8 (     0x8) WS::Displays::SLCADisplay::mode_scanout_pixels_high() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6ef0 (     0x8) WS::Displays::SLCADisplay::mode_scanout_pixels_wide() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6ef8 (     0x8) WS::Displays::SLCADisplay::mode_display_pipe_y_scale() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f00 (     0x8) WS::Displays::SLCADisplay::mode_display_pipe_x_scale() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f08 (    0x6c) WS::Displays::SLCADisplay::fullscreen_content_bounds() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f74 (     0xc) WS::Displays::SLCADisplay::physical_size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f80 (     0xc) WS::Displays::SLCADisplay::native_size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f8c (    0x10) WS::Displays::SLCADisplay::set_origin(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6f9c (     0x8) WS::Displays::SLCADisplay::region() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fa4 (     0xc) WS::Displays::SLCADisplay::limits() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fb0 (    0x10) WS::Displays::SLCADisplay::extent() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fc0 (     0xc) WS::Displays::SLCADisplay::bounds() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fcc (     0x8) WS::Displays::SLCADisplay::resolution() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fd4 (     0x8) WS::Displays::SLCADisplay::bit_depth() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf6fdc (    0x38) WS::Displays::SLCADisplay::pixel_encoding() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7014 (     0x8) WS::Displays::SLCADisplay::depth() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf701c (     0x8) WS::Displays::SLCADisplay::row_bytes() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7024 (     0x8) WS::Displays::SLCADisplay::flags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf702c (    0x5c) WS::Displays::SLCADisplay::accelerator() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7088 (    0x50) WS::Displays::SLCADisplay::copy_container_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf70d8 (    0x10) WS::Displays::SLCADisplay::uuid_bytes() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf70e8 (     0x8) WS::Displays::SLCADisplay::unit() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf70f0 (     0x8) WS::Displays::SLCADisplay::alias_mask() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf70f8 (     0x8) WS::Displays::SLCADisplay::alias() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7100 (    0x24) WS::Displays::SLCADisplay::display_number() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7124 (     0x8) WS::Displays::SLCADisplay::display_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf712c (     0x8) WS::Displays::Display::present_time() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7134 (     0x8) WS::Displays::SLCADisplay::transport_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf713c (     0x8) WS::Displays::SLCADisplay::serial_number() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7144 (     0x8) WS::Displays::SLCADisplay::model() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf714c (     0x8) WS::Displays::SLCADisplay::vendor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7154 (     0x4) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7158 (     0x4) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf715c (     0x4) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7160 (    0x20) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7180 (    0x38) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf71b8 (     0x4) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf71bc (     0x4) std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf71c0 (     0x8) WS::Displays::DefaultUserAdjustmentInterface::set_user_adjustment(WS::Displays::UserAdjustment const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf71c8 (    0x74) WS::Displays::DefaultUserAdjustmentInterface::user_adjustment() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf723c (     0x4) WS::Displays::DefaultUserAdjustmentInterface::~DefaultUserAdjustmentInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7240 (     0x4) WS::Displays::DefaultUserAdjustmentInterface::~DefaultUserAdjustmentInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7244 (     0x4) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7248 (     0x4) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf724c (     0x4) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7250 (    0x20) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7270 (    0x38) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72a8 (     0x4) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72ac (     0x4) std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72b0 (     0x8) WS::Displays::DefaultPresetInterface::reset_custom_presets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72b8 (    0x14) WS::Displays::DefaultPresetInterface::chromatic_adaptation_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72cc (     0x8) WS::Displays::DefaultPresetInterface::update_preset(NSData*, WS::Displays::Preset const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72d4 (     0x8) WS::Displays::DefaultPresetInterface::set_active_preset(NSData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72dc (     0x8) WS::Displays::DefaultPresetInterface::active_preset_uid() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72e4 (     0xc) WS::Displays::DefaultPresetInterface::presets() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72f0 (     0x8) WS::Displays::DefaultPresetInterface::preset_capacity() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72f8 (     0x4) WS::Displays::DefaultPresetInterface::~DefaultPresetInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf72fc (     0x4) WS::Displays::DefaultPresetInterface::~DefaultPresetInterface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7300 (     0x4) std::__1::__shared_ptr_emplace<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7304 (    0x2c) std::__1::__shared_ptr_emplace<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7330 (    0x44) std::__1::__shared_ptr_emplace<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7374 (    0x20) std::__1::__shared_ptr_emplace<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7394 (    0x80) WS::Displays::Mode* std::__1::construct_at[abi:v160006]<WS::Displays::Mode, unsigned int, unsigned int const&, unsigned int const&, unsigned int const&, int const&, int, int, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double, WS::Displays::Mode*>(WS::Displays::Mode*, unsigned int&&, unsigned int const&, unsigned int const&, unsigned int const&, int const&, int&&, int&&, bool&&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7414 (    0x78) WS::Displays::Mode* std::__1::construct_at[abi:v160006]<WS::Displays::Mode, unsigned int, int, int, unsigned int const&, int, float const&, float const&, bool const&, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double, WS::Displays::Mode*>(WS::Displays::Mode*, unsigned int&&, int&&, int&&, unsigned int const&, int&&, float const&, float const&, bool const&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf748c (    0x78) WS::Displays::Mode* std::__1::construct_at[abi:v160006]<WS::Displays::Mode, unsigned int, int, int, unsigned int const&, int, float const&, float const&, bool, bool, bool, bool const&, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double, WS::Displays::Mode*>(WS::Displays::Mode*, unsigned int&&, int&&, int&&, unsigned int const&, int&&, float const&, float const&, bool&&, bool&&, bool&&, bool const&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7504 (    0x70) WS::Displays::CAWSManager::remove_cursor_display(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7574 (    0x14) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7588 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf758c (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7590 (    0x24) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf75b4 (    0x48) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf75fc (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7600 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7604 (    0x58) WS::Displays::CAWSManager::mig_airplay_display_offline(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf765c (   0x4ec) WS::Displays::CAWSManager::mig_display_system_state(unsigned int, unsigned long long, unsigned char**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf7b48 (  0x1b50) WS::Displays::CAWSManager::encode_display(CGSEncoder&, WS::Displays::SLCADisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf9698 (    0x68) void CGSEncoder::encode<SLSLinkDescription>(SLSLinkDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf9700 (     0x8) WS::Displays::CAWSManager::get_last_power_state_delivered() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf9708 (     0x8) WS::Displays::Manager::iop_supported() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cf9710 (   0xff8) WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfa708 (   0x150) WS::Displays::CAWSManager::set_display_digital_modes(int, NSArray*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfa858 (   0x160) WS::Displays::CAWSManager::set_display_digital_colors_and_timings(int, NSArray*, NSArray*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfa9b8 (    0x74) invocation function for block in WS::Displays::CAWSManager::virtualDisplayCreateColorModes(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfaa2c (    0x64) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfaa90 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfaa94 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfaa98 (    0x30) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfaac8 (    0x54) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfab1c (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfab20 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfab24 (   0x680) WS::Displays::CAWSManager::virtualDisplayDestroy(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfb1a4 (    0xb0) invocation function for block in WS::Displays::CAWSManager::virtualDisplayDestroy(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfb254 (   0xbe4) WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbe38 (     0xc) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbe44 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbe48 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbe4c (    0x24) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbe70 (    0x48) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbeb8 (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbebc (     0x4) std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbec0 (   0x118) WS::Displays::CAWSManager::unregister_for_iosurface_ready(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfbfd8 (    0x98) WS::Displays::get_iosurface_ready_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc070 (    0x88) WS::Displays::get_iosurface_ready_callback_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc0f8 (   0x2cc) WS::Displays::CAWSManager::register_for_iosurface_ready(void (*)(void*, unsigned int), void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc3c4 (    0xc8) WS::Displays::transaction_completion_handler(DisplayPresentInfo) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc48c (     0x8) WS::Displays::Manager::get_manager_hoist() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc494 (    0x10) WS::Displays::CAWSManager::config_desktop_color() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4a4 (     0x8) WS::Displays::CAWSManager::mux_boot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4ac (     0x4) WS::Displays::CAWSManager::select_virtual_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4b0 (     0x4) WS::Displays::CAWSManager::toggle_virtual_online_state(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4b4 (     0x4) WS::Displays::CAWSManager::move_virtual_cursor(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4b8 (     0x4) WS::Displays::CAWSManager::set_cursor_switch_session() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc4bc (    0x90) WS::Displays::CAWSManager::disable_hardware_cursor(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc54c (    0xf0) WS::Displays::CAWSManager::force_show_cursor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc63c (   0x104) WS::Displays::CAWSManager::set_cursor_obscured(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc740 (   0x104) WS::Displays::CAWSManager::set_cursor_hidden(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc844 (    0xa0) WS::Displays::CAWSManager::set_cursor(CGXCursor*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfc8e4 (   0x3bc) WS::Displays::CAWSManager::move_cursor(CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfcca0 (     0x8) WS::Displays::CAWSManager::force_hard_reset_on_termination() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfcca8 (     0x4) WS::Displays::CAWSManager::synchronize_display_drivers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfccac (     0x8) WS::Displays::CAWSManager::realtime_display_info_shmem_port(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfccb4 (   0x134) WS::Displays::CAWSManager::is_fullscreen_app_running() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfcde8 (     0x8) WS::Displays::CAWSManager::dither_enabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfcdf0 (    0x88) WS::Displays::CAWSManager::adjust_for_watcher(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfce78 (   0x210) WS::Displays::CAWSManager::get_capture_pid_and_update_online_active_displays(WSSessionDisplayConfigData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfd088 (    0x10) WS::Displays::CAWSManager::display_updates_are_disabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfd098 (     0x4) WS::Displays::CAWSManager::readiness_failure() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfd09c (   0xca0) WS::Displays::CAWSManager::set_display_option(CGXConnection*, int, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfdd3c (    0x34) (null) [FUNC, FunctionStarts] 
                0x0000000185cfdd70 (   0x130) WS::Displays::CAWSManager::latch_session_last_notified_config_set() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfdea0 (   0x1ec) void std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::assign<WS::Displays::config_set_entry*, 0>(WS::Displays::config_set_entry*, WS::Displays::config_set_entry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe08c (   0x110) std::__1::pair<WS::Displays::config_set_entry*, WS::Displays::config_set_entry*> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<WS::Displays::config_set_entry*, WS::Displays::config_set_entry*, WS::Displays::config_set_entry*>(WS::Displays::config_set_entry*, WS::Displays::config_set_entry*, WS::Displays::config_set_entry*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe19c (    0x68) std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe204 (     0x8) WS::Displays::CAWSManager::perform_deferred_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe20c (     0xc) WS::Displays::CAWSManager::initial_configuration_was_deferred() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe218 (   0x394) WS::Displays::CAWSManager::resolve_scoreboard_and_reconfig(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe5ac (     0x8) WS::Displays::CAWSManager::last_reconfiguration_time() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe5b4 (     0x8) WS::Displays::CAWSManager::save_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe5bc (     0x4) WS::Displays::CAWSManager::broadcast_change_notifications_as_needed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe5c0 (   0x1f0) WS::Displays::CAWSManager::broadcast_change_notifications() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe7b0 (   0x200) WS::Displays::CAWSManager::tell_connection_display_did_reconfigure(CGXConnection*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfe9b0 (    0xe8) WS::Displays::CAWSManager::tell_connection_display_will_reconfigure(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cfea98 (   0xaf0) WS::Displays::CAWSManager::restore_color_preferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff588 (    0x10) __Block_byref_object_copy_.8290 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff598 (     0xc) __Block_byref_object_dispose_.8291 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff5a4 (   0x1cc) invocation function for block in WS::Displays::CAWSManager::restore_color_preferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff770 (    0x50) invocation function for block in WS::Displays::getColorSyncGetDisplayTransferFormulaFromVCGTSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff7c0 (    0x50) invocation function for block in WS::Displays::getColorSyncCreateGammaTablesFromVCGTSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff810 (    0x2c) WS::Displays::CAWSManager::restore_color_preferences()::$_31::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff83c (    0x50) __destroy_helper_block_e8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff88c (    0x60) __copy_helper_block_e8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff8ec (    0x50) invocation function for block in WS::Displays::getColorSyncDisplayServicesUpdateProfilesSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff93c (    0x6c) WS::Displays::CAWSManager::restore_gamma() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cff9a8 (   0x13c) WS::Displays::CAWSManager::restore_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cffae4 (   0x118) WS::Displays::CAWSManager::brightness_timeouts_request(int, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cffbfc (   0x1a8) invocation function for block in WS::Displays::CAWSManager::brightness_timeouts_request(int, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cffda4 (   0x110) WS::Displays::CAWSManager::brightness_policy_request(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185cffeb4 (   0x19c) invocation function for block in WS::Displays::CAWSManager::brightness_policy_request(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00050 (   0x10c) WS::Displays::CAWSManager::bulk_brightness_request(int, __CFDictionary const*, unsigned long long, unsigned long long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0015c (   0x724) invocation function for block in WS::Displays::CAWSManager::bulk_brightness_request(int, __CFDictionary const*, unsigned long long, unsigned long long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00880 (   0x188) WS::Displays::CAWSManager::set_edr_present(bool, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00a08 (     0x4) WS::Displays::CAWSManager::update_hdr_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00a0c (     0x8) WS::Displays::CAWSManager::hdr_enabled() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00a14 (   0x30c) WS::Displays::CAWSManager::populate_external_debug_dictionary(__CFDictionary*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00d20 (   0x1d8) invocation function for block in WS::Displays::CAWSManager::populate_external_debug_dictionary(__CFDictionary*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d00ef8 (   0xec4) WS::Displays::CAWSManager::set_debug_options(unsigned int, void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d01dbc (    0xd8) (null) [FUNC, FunctionStarts] 
                0x0000000185d01e94 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185d01eb0 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x0000000185d01efc (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000185d01f34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d01f44 (    0x34) std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::push_back[abi:v160006](std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d01f78 (   0x200) std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*> std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>::insert<std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>, 0>(std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display> const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02178 (    0xc0) WS::Displays::CAWSManager::set_xr_state(signed char, signed char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02238 (    0xe8) WS::Displays::CAWSManager::inject_hotplug(bool, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02320 (   0x114) WS::Displays::SLCADisplay::set_forced_unreadiness(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02434 (    0xc8) WS::Displays::CAWSManager::deferred_virtual_display_removal_reschedule_cleanup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d024fc (   0x1ec) WS::Displays::CAWSManager::deferred_virtual_display_removal_remove_expired() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d026e8 (    0x5c) WS::Displays::deferred_virtual_display_removal_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02744 (   0x304) WS::Displays::reconfigure_callback_process_hotplug_event(int, CAWindowServerDisplayHotPlugState, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02a48 (   0x334) WS::Displays::CAWSManager::xr_fc_initialize_state(__CFNumber const*, __CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02d7c (    0x7c) std::__1::pair<std::__1::shared_ptr<WS::Displays::Display> const*, std::__1::shared_ptr<WS::Displays::Display>*> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<WS::Displays::Display> const*, std::__1::shared_ptr<WS::Displays::Display> const*, std::__1::shared_ptr<WS::Displays::Display>*>(std::__1::shared_ptr<WS::Displays::Display> const*, std::__1::shared_ptr<WS::Displays::Display> const*, std::__1::shared_ptr<WS::Displays::Display>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02df8 (     0x4) WS::Displays::CAWSManager::set_metal_protection(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02dfc (     0x8) WS::Displays::CAWSManager::cinematic_boot_apple_preserved() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02e04 (     0x4) WS::Displays::CAWSManager::cinematic_boot_update_windows() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02e08 (   0x170) WS::Displays::CAWSManager::cinematic_boot_transfer_windows(unsigned int, unsigned int*, int*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d02f78 (    0x9c) WS::Displays::CAWSManager::any_display_is_captured() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03014 (     0x8) WS::Displays::CAWSManager::is_xg_present() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0301c (   0x39c) WS::Displays::CAWSManager::set_full_screen_zoom(ZoomManager*, float, CGPoint, bool, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d033b8 (    0xf0) WS::Displays::CAWSManager::continue_display_freeze() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d034a8 (   0x130) WS::Displays::CAWSManager::set_updates_are_allowed(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d035d8 (    0x10) WS::Displays::CAWSManager::updates_are_allowed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d035e8 (   0x1cc) WS::Displays::CAWSManager::send_change_event_to_display_manager(SLSDisplayPowerStateNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d037b4 (     0x4) WS::Displays::CAWSManager::update_do_not_dim(CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d037b8 (   0x1c0) WS::Displays::CAWSManager::note_will_sleep(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03978 (   0x178) WS::Displays::CAWSManager::note_did_wake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03af0 (   0x100) WS::Displays::CAWSManager::all_hardware_displays_are_asleep() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03bf0 (    0x9c) WS::Displays::CAWSManager::any_hardware_display_is_asleep() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03c8c (    0x44) WS::Displays::CAWSManager::last_layout_changed_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03cd0 (    0x20) WS::Displays::CAWSManager::changed_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03cf0 (    0xe4) WS::Displays::CAWSManager::synchronize_seed_test(unsigned int*, void const*, bool (*)(void const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03dd4 (    0x20) WS::Displays::CAWSManager::synchronize_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03df4 (    0x44) WS::Displays::CAWSManager::last_synchronize_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03e38 (    0x50) WS::Displays::CAWSManager::next_synchronize_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03e88 (    0x78) WS::Displays::CAWSManager::update_synchronize_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03f00 (    0x38) WS::Displays::CAWSManager::invalidate_geometry_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03f38 (    0x20) WS::Displays::CAWSManager::geometry_seed() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d03f58 (    0xb0) WS::Displays::CAWSManager::invalidate_state_seed(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d04008 (   0xaf4) WS::Displays::CAWSManager::create_watchdog_triage_string() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d04afc (    0xf4) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::operator<<[abi:v160006]<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, std::__1::__iom_t4<char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d04bf0 (   0x200) WS::Displays::CAWSManager::set_display_set(CGSScoreboardDisplaySet, CGSScoreboardDisplaySet) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d04df0 (  0x1e84) WS::Displays::CAWSManager::select_display_set(CGSScoreboardDisplaySet, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d06c74 (   0x150) WS::Displays::CAWSManager::lock_displays_with_timeout(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d06dc4 (    0xfc) WS::Displays::CAWSManager::set_session_config_set(WS::Displays::config_set) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d06ec0 (   0x254) WS::Displays::Mode& std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>>::emplace_back<int, unsigned int&, unsigned int&, unsigned int&, float&, int, int, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double>(int&&, unsigned int&, unsigned int&, unsigned int&, float&, int&&, int&&, bool&&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07114 (    0x78) WS::Displays::Mode* std::__1::construct_at[abi:v160006]<WS::Displays::Mode, int, unsigned int&, unsigned int&, unsigned int&, float&, int, int, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>, std::nullptr_t, double, WS::Displays::Mode*>(WS::Displays::Mode*, int&&, unsigned int&, unsigned int&, unsigned int&, float&, int&&, int&&, bool&&, bool&&, bool&&, bool&&, bool&&, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>>&&, std::nullptr_t&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0718c (    0x38) WS::Displays::CAWSManager::current_scoreboard_set() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d071c4 (   0x128) WS::Displays::CAWSManager::create_windowed_region() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d072ec (    0xec) WS::Displays::CAWSManager::create_overall_region() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d073d8 (   0x144) WS::Displays::CAWSManager::displays_with_rect(CGRect const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0751c (   0x140) WS::Displays::CAWSManager::displays_with_point(CGPoint const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0765c (   0x1ec) WS::Displays::CAWSManager::remove_virtual_display_by_id(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07848 (   0x158) WS::Displays::CAWSManager::deferred_virtual_display_removal_defer(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d079a0 (   0x12c) WS::Displays::CAWSManager::cursor_display_refresh_rate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07acc (   0x21c) WS::Displays::CAWSManager::cursor_display_refresh_time(double&, double&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07ce8 (   0x134) WS::Displays::CAWSManager::cursor_display_id() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07e1c (    0xa8) WS::Displays::CAWSManager::cursor_display_rect() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d07ec4 (   0x23c) WS::Displays::CAWSManager::main_display() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08100 (     0x8) WS::Displays::CAWSManager::dfr_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08108 (    0xf0) WS::Displays::CAWSManager::head_mounted_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d081f8 (     0x8) WS::Displays::CAWSManager::hardware_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08200 (    0x38) WS::Displays::CAWSManager::live_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08238 (    0x38) WS::Displays::CAWSManager::online_enabled_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08270 (    0x38) WS::Displays::CAWSManager::online_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d082a8 (    0xf8) WS::Displays::CAWSManager::potentially_active_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d083a0 (    0x38) WS::Displays::CAWSManager::active_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d083d8 (     0x4) WS::Displays::CAWSManager::all_displays() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d083dc (     0x4) WS::Displays::CAWSManager::shutdown() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d083e0 (     0x4) WS::Displays::CAWSManager::register_xg_handlers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d083e4 (    0x30) WS::Displays::CAWSManager::destroy_session_data(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08414 (    0x44) WS::Displays::CAWSManager::create_session_data(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08458 (   0x1c8) WS::Displays::CASessionData::CASessionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08620 (     0xc) WS::Displays::CASessionData::virtual_cursor_location() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0862c (    0x28) WS::Displays::CASessionData::~CASessionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08654 (   0x134) WS::Displays::CASessionData::~CASessionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08788 (     0x4) WS::Displays::CASessionData::~CASessionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0878c (    0xb4) WS::Displays::CAWSManager::register_session_handler() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08840 (     0x4) WS::Displays::server_login_notification_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08844 (   0x218) WS::Displays::session_notification_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08a5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d08a6c (   0x13c) WS::Displays::string_for_session_note_type(CGSNotificationType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08ba8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000185d08bd4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185d08bf0 (   0x2d8) WS::Displays::CAWSManager::perform_initial_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08ec8 (    0x14) WS::Displays::CAWSManager::activate_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08edc (     0xc) WS::Displays::CAWSManager::is_initalized() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d08ee8 (  0x1070) WS::Displays::CAWSManager::initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d09f58 (    0x88) invocation function for block in WS::Displays::init_is_virtual_machine() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d09fe0 (    0xf0) invocation function for block in WS::Displays::CAWSManager::initialize_preset_manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a0d0 (   0x188) invocation function for block in WS::Displays::CAWSManager::initialize_preset_manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a258 (    0x70) invocation function for block in WS::Displays::enable_display_presets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a2c8 (   0x1cc) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a494 (    0xa4) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a538 (    0x6c) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a5a4 (     0xc) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a5b0 (   0x1cc) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a77c (    0xc4) invocation function for block in WS::Displays::SLCADisplay::make_display(CAWindowServerDisplay*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a840 (     0x4) std::__1::__shared_ptr_emplace<WS::Displays::SLCADisplay, std::__1::allocator<WS::Displays::SLCADisplay>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a844 (    0x2c) std::__1::__shared_ptr_emplace<WS::Displays::SLCADisplay, std::__1::allocator<WS::Displays::SLCADisplay>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a870 (    0x44) std::__1::__shared_ptr_emplace<WS::Displays::SLCADisplay, std::__1::allocator<WS::Displays::SLCADisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a8b4 (    0x20) std::__1::__shared_ptr_emplace<WS::Displays::SLCADisplay, std::__1::allocator<WS::Displays::SLCADisplay>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a8d4 (     0x8) WS::Displays::CAWSManager::initialize_event_support() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a8dc (    0x28) WS::Displays::CAWSManager::initialize_accelerated_compositing() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a904 (    0xc4) invocation function for block in WS::Displays::CAWSManager::initialize_accelerated_compositing() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0a9c8 (    0x40) WS::Displays::CASessionData::set_persistent_display_sets(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0aa08 (    0x58) WS::Displays::SLCADisplay::set_deferred_empty_update_options(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0aa60 (   0x12c) WS::Displays::CAWSManager::reenable_updates_for_wake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ab8c (    0x14) invocation function for block in WS::Displays::CAWSManager::inject_client_api_softplug(bool, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0aba0 (    0x38) WS::Displays::CAWSManager::restore_color_prefs_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0abd8 (    0xac) __WSCAWindowServerInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ac84 (    0xe4) SLSRunningOnInstallerDisk [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ad68 (    0x28) __SLSSystemIsInternalBuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ad90 (    0xe4) display_present_clear_all() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ae74 (    0x58) DisplayPresentUpdate::end() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0aecc (    0xa0) display_present_skipped_present_check(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0af6c (    0xa8) invocation function for block in display_present_skipped_present_check(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b014 (    0x70) std::__1::pair<DisplayPresent*, DisplayPresent*> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<DisplayPresent*, DisplayPresent*, DisplayPresent*>(DisplayPresent*, DisplayPresent*, DisplayPresent*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b084 (    0x8c) DisplayPresent::~DisplayPresent() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b110 (    0x54) std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>::reset[abi:v160006](WSCAPresent*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b164 (   0x1f0) invocation function for block in display_present_clear_all() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b354 (   0x168) display_present_handler(DisplayPresentInfo) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b4bc (   0x494) invocation function for block in display_present_handler(DisplayPresentInfo) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0b950 (   0xf98) invocation function for block in display_present_handler(DisplayPresentInfo) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0c8e8 (   0x128) clear_old_frame_data(unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ca10 (   0x114) WSDisplayPresentUpdateAddBacking(WSCALayerBacking*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0cb24 (   0x794) invocation function for block in display_present_swap(int, unsigned int, CGXSessionWindowFrameData*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0d2b8 (    0x2c) display_present_clear_console_presents(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0d2e4 (    0x9c) WSDisplayPresentDebug [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0d380 (   0x6a8) QueueEntryMetal::EnsureMetalResourcesForContext(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0da28 (    0x60) WSMTLTexture::~WSMTLTexture() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0da88 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLTexture>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLTexture>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLTexture>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLTexture>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0dad4 (    0x40) WSMTLTexture::Get(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0db14 (    0xa4) WSMTLTexture::Set(MetalContext*, id<MTLTexture>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0dbb8 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<id<MTLTexture>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLTexture>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLTexture>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLTexture>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLTexture>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0dc68 (   0x3e8) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<id<MTLTexture>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLTexture>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLTexture>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLTexture>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLTexture>>>::__emplace_unique_key_args<unsigned long long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long&&>, std::__1::piecewise_construct_t const&<>>(unsigned long long const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long&&>&&, std::__1::piecewise_construct_t const&<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e050 (    0xc4) QueueEntryMetal::QueueEntryMetal(MetalContext*, __IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e114 (    0x6c) QueueEntryMetal::~QueueEntryMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e180 (   0x110) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLTexture>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLTexture>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLTexture>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLTexture>>>::swap(std::__1::allocator<id<MTLTexture>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e290 (   0x1e0) QueueEntryMetal::QueueEntryMetal(QueueEntryMetal&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e470 (   0x210) QueueEntryMetal::IsComplete(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e680 (    0xb4) MatrixTranslate3D [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e734 (   0x194) MatrixRotate3D [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0e8c8 (   0x18c) FillOrtho2DFromCoords [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ea54 (    0xd8) FillOrtho2DFromBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0eb2c (    0x80) MakeTexture2DDescriptor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ebac (   0x19c) SimpleTexSetQuadRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ed48 (   0x208) debug_options_changed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ef50 (   0x1c0) CGSLogOpen [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0f110 (   0x900) CGSPrintVirtualMemoryToFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fa10 (    0xf8) (null) [FUNC, FunctionStarts] 
                0x0000000185d0fb08 (    0x6c) CGSLogClose [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fb74 (    0x5c) SLSSetDebugOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fbd0 (    0x6c) SLSSetDebugOptionsData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fc3c (    0x6c) SLSSetDebugOptionsPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fca8 (    0x3c) SLSGetDebugOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fce4 (   0x1e0) SLSGetDebugInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0fec4 (    0x84) SLSSaveConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d0ff48 (   0x220) SLSSetDebugOptionsWithDataObtainingResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d10168 (   0x1d8) SLSSetDebugOptionsWithDataObtainingPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d10340 (   0x1cc) SLSGetHIDEventRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1050c (   0x1cc) SLSHIDEventRecordReplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d106d8 (   0x93c) CGSPrintObjectToFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11014 (   0x240) SLSCreateWindowDebugInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11254 (   0x224) SLSCreateShadowCacheDebugInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11478 (   0x1c8) SLSGetUpdateClientPipe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11640 (   0x1f0) SLSOpenClone [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11830 (    0x88) (anonymous namespace)::EventSourceManager::sharedManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d118b8 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::CGXEventSourceState*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::CGXEventSourceState*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, (anonymous namespace)::CGXEventSourceState*>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, (anonymous namespace)::CGXEventSourceState*>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::CGXEventSourceState*>>>::find<unsigned int>(unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1196c (   0x500) (anonymous namespace)::EventSourceManager::createSourceStateWithID(unsigned int, unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d11e6c (   0x4a8) (anonymous namespace)::EventSourceManager::createProcessDataForPidToken(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d12314 (    0xb4) (anonymous namespace)::EventSourceManager::processDataForPidToken(unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d123c8 (    0x18) invocation function for block in (anonymous namespace)::ProcessEventSourceData::ProcessEventSourceData(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d123e0 (   0x4e4) (anonymous namespace)::taskDeathHandler(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d128c4 (   0x218) WSEventSourceCreateGraphShmemForAuditToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d12adc (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<unsigned long, void*>*> std::__1::__hash_table<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long>>::find<unsigned long>(unsigned long const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d12b90 (    0x50) (anonymous namespace)::EventSourceManager::sourceStateTrackerForID(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d12be0 (   0x5f0) CGXUpdateScoreboard [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d131d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d131e0 (   0x16c) CGXAdjustForRedundantState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1334c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000185d13378 (    0xf8) CGXFixupKeyEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13470 (   0x208) WSEventStateTrackerSetSecureInput [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13678 (   0x434) (anonymous namespace)::foregroundChangedProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13aac (   0x200) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<unsigned long, void*>*>, bool> std::__1::__hash_table<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long>>::__emplace_unique_key_args<unsigned long, unsigned long const&>(unsigned long const&, unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13cac (   0x13c) (anonymous namespace)::ProcessEventSourceData::setIsInForeground(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13de8 (    0xb4) hidSourceUpdateProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d13e9c (   0x3dc) __SLSInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14278 (    0x28) SLSInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d142a0 (   0x128) WSTelemetryScreenStatisticsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d143c8 (    0x6c) (anonymous namespace)::TelemetryClient::TelemetryQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14434 (   0x1ac) invocation function for block in (anonymous namespace)::TelemetryClient::ProcessProtectedUpdate(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d145e0 (    0x78) create_result_buffer(id<MTLDeviceSPI>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14658 (   0x26c) __WSTelemetryUpdateScreenStatistics_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d148c4 (   0x120) invocation function for block in (anonymous namespace)::TelemetryClient::ProcessUpdateData(NSObject<OS_xpc_object>*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d149e4 (    0x7c) (anonymous namespace)::TelemetryClient::SharedClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14a60 (   0x174) WSTelemetrySetScreenStatisticParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14bd4 (   0x194) WSTelemetrySetScreenStatisticsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14d68 (    0x58) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>>>::clear() [FUNC, NameNList, MangledNameNList, Merged, NList, Fu...
                0x0000000185d14dc0 (    0x7c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<TelemetryMetalContext, std::__1::default_delete<TelemetryMetalContext>>>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash...
                0x0000000185d14e3c (   0x1a8) WSTelemetrySetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d14fe4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d14ff4 (    0x54) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<(anonymous namespace)::TelemetryClient::createRootConnectionEndpoint()::'lambda'()&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15048 (    0xe4) invocation function for block in (anonymous namespace)::TelemetryClient::createRootConnectionEndpoint()::'lambda'()::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1512c (    0xac) std::__1::unique_ptr<(anonymous namespace)::TelemetryClient, std::__1::default_delete<(anonymous namespace)::TelemetryClient>>::reset[abi:v160006]((anonymous namespace)::TelemetryClient*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d151d8 (   0x240) invocation function for block in (anonymous namespace)::TelemetryClient::TelemetryClient(NSObject<OS_xpc_object>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15418 (    0xcc) invocation function for block in (anonymous namespace)::TelemetryClient::setConfig(NSObject<OS_xpc_object>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d154e4 (    0xac) invocation function for block in (anonymous namespace)::TelemetryClient::setConfig(NSObject<OS_xpc_object>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15590 (     0x8) invocation function for block in (anonymous namespace)::TelemetryClient::~TelemetryClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15598 (    0xa4) CGSEncoder::encode(CGSize const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1563c (    0xbc) CGSEncoder::encode(CGRect const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d156f8 (   0x1c8) SLSAAHUpdateAutoAppearanceTheme [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d158c0 (   0x14c) __SLSAAHUpdateAutoAppearanceTheme_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15a0c (    0x54) invocation function for block in perform_with_connection(void (dispatch_queue_s*, _xpc_connection_s*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15a60 (    0xc0) invocation function for block in perform_with_connection(void (dispatch_queue_s*, _xpc_connection_s*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15b20 (    0x2c) invocation function for block in perform_with_connection(void (dispatch_queue_s*, _xpc_connection_s*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15b4c (   0x174) __SLSAAHUpdateAutoAppearanceTheme_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d15cc0 (   0x6e4) WSMemoryPressureSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d163a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d163b4 (    0xa4) summarize_amount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16458 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<Allocation, std::__1::default_delete<Allocation>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<Allocation, std::__1::default_delete<Allocation>>>>(std::__1::allocator<std::__1::unique_ptr<Allocation, std::__1::default_delete<Allocation>>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16490 (    0x7c) std::__1::__split_buffer<std::__1::unique_ptr<Allocation, std::__1::default_delete<Allocation>>, std::__1::allocator<std::__1::unique_ptr<Allocation, std::__1::default_delete<Allocation>>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1650c (    0x80) StdlibAllocation::utilize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1658c (     0xc) Allocation::valid() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16598 (     0x8) Allocation::size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d165a0 (    0x28) StdlibAllocation::~StdlibAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d165c8 (    0xe0) StdlibAllocation::~StdlibAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d166a8 (     0x4) StdlibAllocation::~StdlibAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d166ac (    0x80) VMAllocation::utilize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1672c (    0x28) VMAllocation::~VMAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16754 (    0x60) VMAllocation::~VMAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d167b4 (     0x4) VMAllocation::~VMAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d167b8 (   0x150) utilize_memory_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16908 (    0x2c) invocation function for block in allocations() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16934 (   0x5e4) PKGReconcileAutomaticAppearanceTheme [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d16f18 (   0x1b0) user_is_idle_for_appearance_switch(double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d170c8 (   0x284) invocation function for block in pm_display_sleep_blocked() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1734c (   0x1a8) complete_appearance_transition_on_session(unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d174f4 (    0x18) __PKGReconcileAutomaticAppearanceTheme_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1750c (    0xa8) __PKGReconcileAutomaticAppearanceTheme_block_invoke.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d175b4 (   0x100) __PKGReconcileAutomaticAppearanceTheme_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d176b4 (    0xdc) timeout_active_appearance_transition_timer(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17790 (    0x18) user_idle_reconcile_automatic_appearance_timer(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d177a8 (    0x58) __PKGInitializeAppearanceTransitions_block_invoke_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17800 (    0xa0) __PKGInitializeAppearanceTransitions_block_invoke_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d178a0 (    0x18) __PKGInitializeAppearanceTransitions_block_invoke_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d178b8 (    0x5c) __PKGInitializeAppearanceTransitions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17914 (    0xd0) __PKGInitializeAppearanceTransitions_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d179e4 (   0x134) __PKGInitializeAppearanceTransitions_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17b18 (    0x30) __PKGInitializeAppearanceTransitions_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17b48 (   0x12c) invocation function for block in get_shared_blue_light_client() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17c74 (    0x10) __Block_byref_object_copy_.8711 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17c84 (     0xc) __Block_byref_object_dispose_.8712 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17c90 (   0x154) invocation function for block in getCBBlueLightClientClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17de4 (    0x74) invocation function for block in CoreBrightnessLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17e58 (    0x38) invocation function for block in get_transition_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17e90 (    0x14) TransitionMetal::UpdateRect(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d17ea4 (   0x464) TransitionMetal::Draw(int, void*, TransitionSnapshotIndex) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18308 (   0x3c4) TransitionMetal::DrawBackground(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d186cc (    0xb4) TransitionFlipMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18780 (     0x8) TransitionFlipMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18788 (    0xf0) TransitionFlipMetal::UpdateRect(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18878 (     0x4) TransitionFlipMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1887c (   0x17c) TransitionFlipMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d189f8 (   0x4fc) TransitionMetal::DrawMesh(int, void*, int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18ef4 (    0x14) TransitionFlipMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18f08 (    0x28) TransitionFlipMetal::~TransitionFlipMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18f30 (     0x4) TransitionFlipMetal::~TransitionFlipMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18f34 (     0x4) TransitionCubeMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18f38 (     0x8) TransitionCubeMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d18f40 (   0x1e4) TransitionCubeMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19124 (   0x268) TransitionCubeMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1938c (   0x44c) TransitionCubeMetal::DrawBackground(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d197d8 (    0x2c) TransitionCubeMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19804 (    0x28) TransitionCubeMetal::~TransitionCubeMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1982c (     0x4) TransitionCubeMetal::~TransitionCubeMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19830 (    0xd0) TransitionSpiralMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19900 (    0x18) TransitionSpiralMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19918 (    0x48) TransitionSpiralMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19960 (   0x12c) TransitionSpiralMetal::DrawSpiral(int, void*, TransitionSnapshotIndex, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19a8c (    0x58) TransitionSpiralMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19ae4 (    0x14) TransitionSpiralMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19af8 (    0x28) TransitionSpiralMetal::~TransitionSpiralMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19b20 (     0x4) TransitionSpiralMetal::~TransitionSpiralMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19b24 (     0x4) TransitionSlideMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19b28 (     0x8) TransitionSlideMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19b30 (     0x4) TransitionSlideMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19b34 (   0x2b0) TransitionMetal::DropFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d19de4 (   0x2c0) TransitionSlideMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0a4 (     0x4) TransitionSlideMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0a8 (    0x28) TransitionSlideMetal::~TransitionSlideMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0d0 (     0x4) TransitionSlideMetal::~TransitionSlideMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0d4 (     0x4) TransitionRadialBlurMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0d8 (     0x8) TransitionRadialBlurMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a0e0 (   0x3cc) TransitionRadialBlurMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a4ac (    0x20) TransitionRadialBlurMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a4cc (    0x14) TransitionRadialBlurMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a4e0 (    0x28) TransitionRadialBlurMetal::~TransitionRadialBlurMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a508 (     0x4) TransitionRadialBlurMetal::~TransitionRadialBlurMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a50c (     0x4) TransitionShrinkMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a510 (     0x8) TransitionShrinkMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a518 (    0x68) TransitionShrinkMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a580 (   0x360) TransitionShrinkMetal::DrawShrink(int, void*, TransitionSnapshotIndex, float, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a8e0 (    0x58) TransitionShrinkMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a938 (    0x14) TransitionShrinkMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a94c (    0x28) TransitionShrinkMetal::~TransitionShrinkMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a974 (     0x4) TransitionShrinkMetal::~TransitionShrinkMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a978 (     0x4) TransitionBlendMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a97c (     0x8) TransitionBlendMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a984 (    0x1c) TransitionBlendMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9a0 (    0x20) TransitionBlendMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9c0 (     0x4) TransitionBlendMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9c4 (    0x28) TransitionBlendMetal::~TransitionBlendMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9ec (     0x4) TransitionBlendMetal::~TransitionBlendMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9f0 (     0x4) TransitionDropMetal::DrawMeshHook(int, float*, float*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9f4 (     0x8) TransitionDropMetal::Style() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1a9fc (     0x4) TransitionDropMetal::DrawFrom(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aa00 (    0x20) TransitionDropMetal::DrawTo(int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aa20 (     0x4) TransitionDropMetal::PreInit(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aa24 (    0x28) TransitionDropMetal::~TransitionDropMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aa4c (     0x4) TransitionDropMetal::~TransitionDropMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aa50 (    0x7c) CGSBackingROStateCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aacc (     0x8) WSGetDisplaySerializationDisplayStateVersion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1aad4 (   0x7d8) CGSDisplayState::rdar_74155833_dump() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1b2ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d1b2bc (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185d1b2dc (    0x84) CGSDisplayMode* std::__1::construct_at[abi:v160006]<CGSDisplayMode, CGSDisplayMode const&, CGSDisplayMode*>(CGSDisplayMode*, CGSDisplayMode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1b360 (    0x90) CGSGetDisplayStateNull() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1b3f0 (   0x29c) _compareTimesAndApps(CGXWindow const*, unsigned long long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1b68c (   0x2cc) _safeTestAndOrder(CGXConnection*, CPSProcessSerNum, CGXWindow*, unsigned long long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1b958 (    0xac) _CGXOrderFrontConditionally [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ba04 (    0xa4) _safeFrontWithClick(CPSProcessSerNum, unsigned long long, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1baa8 (    0xe4) _orderingAllowed(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1bb8c (    0x88) postWindowManagerActivatingClickOrderingNotification(unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1bc14 (   0x578) _addDraggedWindowToDragSpaceAndUpdateFadeEffectAsNecessary(CGXWindow*, CGPoint, bool, CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c18c (    0x78) invocation function for block in _determineWindowDragHomeLocation(CGXWindow*, CGRect, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c204 (    0x98) invocation function for block in _isWindowDraggedIntoOtherSpaceSufficientlyFarToShow(CGXWindow*, CGRect, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c29c (    0xac) invocation function for block in _addDraggedWindowToDragSpace(CGXWindow*, CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c348 (    0xd8) _destinationSpaceForDraggedWindow(CGXWindow*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c420 (    0xe0) _displayIDForManagedSpace(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c500 (   0x3b4) _assignDraggedWindowToDestinationSpace(CGXWindow*, PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c8b4 (    0xd4) _windowDragFadeDidEndHandler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1c988 (   0x178) _removeWindowFromDragSpace(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1cb00 (    0x74) invocation function for block in _removeWindowFromDragSpace(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1cb74 (    0xc4) _distanceTowardsSpaceCenter(CGPoint, CGPoint, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1cc38 (   0x20c) _CGXPackagesDragWindowRelativeToMouse [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ce44 (    0x98) _windowToDrag(unsigned int, CGPoint*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1cedc (    0xb4) _forciblyEndWindowDrag() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1cf90 (   0x15c) tryTiledSpaceDragForWindow(CGXSessionPackageData*, CGXWindow*, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1d0ec (    0xa4) _PKGSynthesizeLeftMouseDraggedEvent(SLSEventRecord*, CGXConnection const*, CGXWindow const*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1d190 (   0x454) _prepareToDragWindow(CPSProcessSerNum, SLSEventRecord const*, CGPoint, CGXWindow*, bool, bool, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1d5e4 (   0xef0) dragWindowMoveToProposedOrigin(CGPoint, unsigned int, unsigned long long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e4d4 (     0xc) __Block_byref_object_copy_.8858 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e4e0 (     0x4) __Block_byref_object_dispose_.8859 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e4e4 (    0x88) invocation function for block in _PKGAnimateWindowPositionAndDragOffset(CGXWindow*, CGXSessionPackageData*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e56c (    0x28) invocation function for block in windowDragCreateAllowedAndMenuBarRegions(CGXWindow const*, CGSRegionObject**, CGSRegionObject**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e594 (    0x98) invocation function for block in windowDragCreateAllowedAndMenuBarRegions(CGXWindow const*, CGSRegionObject**, CGSRegionObject**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e62c (   0x144) invocation function for block in windowDragCreateAllowedAndMenuBarRegions(CGXWindow const*, CGSRegionObject**, CGSRegionObject**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1e770 (   0x2b0) ejectMotionFromInteriorOfRect(CGRect, CGRect, CGRect, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ea20 (    0xc4) rectDistanceSquared(CGRect, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1eae4 (    0xc4) postWindowManagerDragNotification(CGPackagesNotification, unsigned int, CGPoint, CGPoint, unsigned long long, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1eba8 (   0x248) dragWindowMoveWindow(CGXWindow*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1edf0 (    0x9c) _setPressureConfigurationOverrideForWindowDrag() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ee8c (    0x10) invocation function for block in windowIsOnOrderedInUnmanagedSpace(CGXWindow*, CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ee9c (    0x50) invocation function for block in _PKGAnimateWindowPositionAndDragOffset(CGXWindow*, CGXSessionPackageData*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1eeec (    0x68) _completeDeferredDragWindowUpIfNeeded(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ef54 (    0x38) _clearDeferredMouseUpEvent(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1ef8c (   0x190) _postWorkspaceDragNotification(CGSNotificationType, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f11c (    0x1c) _PKGDragWindowDidTerminate(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f138 (   0x3a0) lmupWinDragEvProcFinish(CPSProcessSerNum, SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f4d8 (    0xb8) _pkgsDeferredOrdering(CPSProcessSerNum, unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f590 (   0x118) _transmitLmup(CPSProcessSerNum, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f6a8 (   0x208) _removeDraggedWindowFadeEffect(CGXWindow*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f8b0 (    0x88) postSpaceNotification(CGSWorkspacePrivateNotificationType, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1f938 (   0x160) remove_drag_transform(CGXSessionPackageData*, CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fa98 (    0x9c) apply_window_group(CGXWindow*, void (CGXWindow*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fb34 (    0x88) window_has_movement_group(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fbbc (    0xcc) invocation function for block in remove_drag_transform(CGXSessionPackageData*, CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fc88 (   0x138) _CGXPackagesAssignDraggedWindowToDestinationSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fdc0 (    0x90) PKGDragWindowCommitWindowManagerMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d1fe50 (   0x330) CGXPackageFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20180 (    0xb0) postEvent(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20230 (    0x80) drag_transform_death(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d202b0 (   0x7ec) lmdragTiledSpaceDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20a9c (    0xd8) terminateTiledSpaceDrag(CGXSessionPackageData*, PKGSpace*, PKGSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20b74 (   0x134) invocation function for block in _SetupTileDragSpaceIfNecessary(PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20ca8 (    0x5c) invocation function for block in _SetupTileDragSpaceIfNecessary(PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d20d04 (   0x300) animate_tile_to_index(PKGSpace*, unsigned int, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21004 (    0x80) invocation function for block in animate_tile_to_index(PKGSpace*, unsigned int, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21084 (    0x88) resetSpaceTransform(PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2110c (   0x128) lmupTiledSpaceDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21234 (    0xbc) invocation function for block in lmupTiledSpaceDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d212f0 (   0x198) lmdragWinTransformedDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21488 (    0xb8) translate_window_group(CGXWindow*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21540 (   0x14c) invocation function for block in translate_window_group(CGXWindow*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2168c (    0xb4) lmupWinTransformedDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21740 (    0x14) lmdragWinDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21754 (    0x60) lmupWinDragEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d217b4 (   0x16c) gestureEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21920 (   0x224) directTouchEvProc(CPSProcessSerNum, SLSEventRecord*, bool*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d21b44 (   0x508) lmdownEvProc(CPSProcessSerNum, SLSEventRecord*, bool*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2204c (   0x148) lmupEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22194 (    0x7c) _windowActivationRegion(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22210 (   0x2b8) _lmdownForActivation(CPSProcessSerNum, SLSEventRecord const*, bool*, bool*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d224c8 (   0x110) _testDragRegion(SLSEventRecord const*, CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d225d8 (    0xac) resumeEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22684 (    0xa8) _handleSuspendResume(CPSProcessSerNum) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2272c (   0x218) suspendEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22944 (    0x30) sysDefEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22974 (     0x4) flagsChEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22978 (     0x4) keyUpEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2297c (    0x24) mExitEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d229a0 (    0x24) mEnterEvProc(CPSProcessSerNum, SLSEventRecord*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d229c4 (    0xd4) CGXIsDragEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22a98 (   0x144) ___CGXPackagesSetWindowDragTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22bdc (   0x248) animate_drag_transform(CGXSessionPackageData*, CGXConnection*, CGXWindow*, CGSAffineTransformPlacement, long long, double, bool, void (CGXWindow*, CGXWindow*, WSWindowTransform*, WSWindowTransform*) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d22e24 (   0x2b8) invocation function for block in animate_drag_transform(CGXSessionPackageData*, CGXConnection*, CGXWindow*, CGSAffineTransformPlacement, long long, double, bool, void (CGXWindow*, CGXWindow*, WSWindowTransform*, WSWindowTransform*) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d230dc (   0x260) reposition_window(CGXConnection*, CGXWindow*, WSWindowTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2333c (    0x74) invocation function for block in animate_drag_transform(CGXSessionPackageData*, CGXConnection*, CGXWindow*, CGSAffineTransformPlacement, long long, double, bool, void (CGXWindow*, CGXWindow*, WSWindowTransform*, WSWindowTransform*) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d233b0 (    0xd8) invocation function for block in animate_drag_transform(CGXSessionPackageData*, CGXConnection*, CGXWindow*, CGSAffineTransformPlacement, long long, double, bool, void (CGXWindow*, CGXWindow*, WSWindowTransform*, WSWindowTransform*) block_pointer, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23488 (    0x68) invocation function for block in stop_drag_animations(CGXSessionPackageData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d234f0 (    0x98) ___CGXPackagesRemoveWindowDragTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23588 (    0x78) ___CGXPackagesRemoveWindowDragTransform_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23600 (    0x34) window_by_id(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23634 (    0x90) CGXWindow::synchronize_rights_shmem_values() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d236c4 (    0x90) CGXWindow::set_clip_shape_internal(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23754 (   0x5e4) CGXWindow::~CGXWindow() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23d38 (    0xe8) CGXWindow::set_has_backing_store_alpha(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d23e20 (   0x680) CGXWindow::evaluate_tag_bit_change(WSWindowTagBitMask const&, WSWindowTagBitMask const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d244a0 (   0x1e0) CGXWindow::resolve_shadow_properties() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24680 (    0x88) CGXWindow::cleanup_windowserver_aware_blurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24708 (    0x7c) CGXWindow::release_shadow_resources() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24784 (    0x4c) std::__1::__tree<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, std::__1::__map_value_compare<CGXConnection*, std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, std::__1::less<CGXConnection*>, true>, std::__1::allocator<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d247d0 (    0x10) invocation function for block in CGXWindow::~CGXWindow() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d247e0 (    0xc4) CGXWindow::invalidate_screen_cursor_restriction_shape_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d248a4 (   0x27c) CGXWindow::release_window(CGXConnection*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24b20 (    0x84) CGXWindow::set_owner(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24ba4 (   0x19c) CGXWindow::set_is_trusted_for_obscuring(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24d40 (    0xbc) CGXWindow::dominant_display_id() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24dfc (    0x9c) CGXWindow::set_cursor_restriction_shape(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d24e98 (   0x9b4) CGXOrderWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2584c (   0x110) CGXWindow::set_is_suppressed_for_screentime(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2595c (   0x2c0) CGXWindow::set_property(__CFString const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d25c1c (    0x88) highest_window_at_effective_level(long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d25ca4 (   0x564) start_order_window(CGXConnection*, CGXOrderWindowState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26208 (   0x1e4) finish_order_windows(CGXConnection*, CGXOrderWindowState*, unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d263ec (     0x8) __CGXOrderWindowList_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d263f4 (     0x8) __CGXOrderWindowList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d263fc (   0x15c) CGXUpdateDoNotDimStateForWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26558 (    0xe8) CGXWindow::fade_finish(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26640 (    0x88) invocation function for block in start_order_window(CGXConnection*, CGXOrderWindowState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d266c8 (   0x14c) CGXWindow::fade_begin(CGXConnection*, float, float, void (CGXWindow*, bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26814 (   0x100) order_out_oneshot_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26914 (    0x6c) set_window_alphas(CGXConnection*, CGXWindow*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26980 (   0x158) CGXWindow::update_alphas(CGXConnection*, float, float, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26ad8 (    0x8c) schedule_window_fade_timer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26b64 (   0x204) window_fade_timer_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26d68 (    0x14) __Block_byref_object_copy_.119 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26d7c (     0x4) __Block_byref_object_dispose_.120 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26d80 (   0x1dc) invocation function for block in window_fade_timer_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26f5c (    0x5c) __destroy_helper_block_8_32r40r48r56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d26fb8 (    0x70) __copy_helper_block_8_32r40r48r56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27028 (    0x4c) invocation function for block in CGXWindow::fade_finish(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27074 (     0x8) invocation function for block in CGXWindow::release_display_alpha_tuples() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2707c (   0x278) CGXWindow::update_capture_group_property() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d272f4 (    0x50) CGXWindow::get_property(__CFString const*, void const**, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27344 (   0x270) CGXWindow::reevaluate_dominant_display_id() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d275b4 (   0x100) CGXWindow::set_level_internal(CGXConnection*, int, short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d276b4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGXOrderWindowState>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGXOrderWindowState>>(std::__1::allocator<CGXOrderWindowState>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d276ec (    0x60) invocation function for block in CGXWindow::set_window_list_system_level(CGXConnection*, CGXWindow**, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2774c (   0x1cc) CGXWindow::clear_window_list_system_level(CGXConnection*, CGXWindow**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27918 (   0x11c) CGXWindow::has_modifiable_chameleons() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27a34 (    0xd8) CGXWindow::has_chameleon_content() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27b0c (   0x124) CGXWindow::wants_software_rendering() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27c30 (   0x18c) CGXWindow::is_abyssal() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27dbc (    0x98) CGXWindow::reevaluate_screen_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27e54 (    0xac) CGXWindow::reevaluate_hdr_request() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d27f00 (   0x130) CGXWindow::update_ca_visibility() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28030 (     0x8) invocation function for block in CGXWindow::update_ca_visibility() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28038 (   0x4f8) CGXWindow::initialize_ca_content_for_context(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28530 (   0x15c) CGXWindow::resolve_activation_dependent_ownership(CGXConnection*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2868c (    0x54) invocation function for block in CGXWindow::resolve_activation_dependent_ownership(CGXConnection*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d286e0 (    0x30) invocation function for block in CGXWindow::set_is_ignoring_hdr(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28710 (    0x30) invocation function for block in CGXWindow::set_is_active_offscreen(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28740 (    0x68) CGXWindow::set_shape(CGSRegionObject*&, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d287a8 (    0xcc) CGXWindow::update_global_clip_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28874 (   0x2c8) CGXWindow::invalidate_layer_opaque_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28b3c (    0xf0) CGXWindow::layer_to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28c2c (    0xa4) invocation function for block in logging_null_check_break() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28cd0 (   0x2b0) CGXWindow::set_shape_internal(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d28f80 (   0x340) CGXWindow::set_window_list_global_clip_shape(CGXConnection*, CGSRegionObject*, unsigned int const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d292c0 (    0x54) create_clipped_screen_visible_frame_shape(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29314 (    0x68) invocation function for block in CGXWindow::set_window_list_global_clip_shape(CGXConnection*, CGSRegionObject*, unsigned int const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2937c (    0xe0) WSWindowGetID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2945c (   0x198) CGXWindow::clipped_frame_bounds() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d295f4 (   0x17c) CGXWindow::frame_bounds() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29770 (    0x44) CGXWindow::screen_rect() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d297b4 (    0x88) CGXWindow::screen_rect_from_rect(CGRect) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2983c (   0x488) CGXWindow::shape_window(CGSRegionObject*, CGSRegionObject*, CGSWindowSaveWeighting) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29cc4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d29cd4 (    0xa8) CGXWindow::shape_window_with_rect(CGRect, CGSWindowSaveWeighting) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29d7c (    0x4c) CGXWindow::ca_client_context_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29dc8 (    0x7c) CGXWindow::update_layer_bindings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d29e44 (   0x41c) CGXWindow::update_windowserver_aware_blurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a260 (   0x214) CGXWindow::finish_layer_update(CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a474 (    0x2c) invocation function for block in CGXWindow::set_has_chameleon_updates_enabled(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a4a0 (    0x68) CGXWindow::mask() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a508 (   0x480) CGXWindow::derived_mask() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a988 (    0x64) CGXWindow::resolved_corner_radius() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2a9ec (    0x8c) CGXWindow::scale_for_legacy_shadow_generation() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2aa78 (    0xb0) CGXWindow::corner_radius() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ab28 (    0x90) CGXWindow::mask_debug_color() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2abb8 (   0x190) CGXWindow::invalidate_shadow_frame(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ad48 (    0x68) CGXWindow::invalidate_shadow_and_schedule_update(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2adb0 (    0x8c) CGXWindow::supports_shadow_path_is_bounds() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ae3c (    0x6c) invocation function for block in CGXWindow::set_sfx_corner_radius(CGXConnection*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2aea8 (    0x64) invocation function for block in CGXWindow::set_sfx_overlay_context(CGXConnection*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2af0c (    0xe0) WSWindowGetROTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2afec (    0xe4) WSWindowIsStickySystemSuppressed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b0d0 (    0xe4) CGXWindowIsVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b1b4 (    0xe0) CGXWindowGetOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b294 (    0x64) invocation function for block in CGXWindow::set_or_clear_tags(CGXConnection*, WSWindowTagBitMask, bool, bool*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b2f8 (    0xe0) CGXWindowGeometryInvalidate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b3d8 (   0x114) WSWindowSetROTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b4ec (   0x50c) CGXWindow::set_window_list_tags(CGXConnection*, CGXWindow* const*, unsigned long, WSWindowTagBitMask, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2b9f8 (    0xe4) invocation function for block in CGXWindow::add_window_to_capture_group(CGXConnection*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2badc (    0x54) std::__1::__tree<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, std::__1::__map_value_compare<CGXConnection*, std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, std::__1::less<CGXConnection*>, true>, std::__1::allocator<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<CGXConnection*, CGXWindow::_connection_capture_group_context*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bb30 (    0x80) CGXWindow::resolved_chameleon_color() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bbb0 (    0x10) invocation function for block in CGXWindow::finish_drag_fade() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bbc0 (   0x1d4) CGXWindow::alpha_at_point(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bd94 (   0x18c) CGXWindow::set_window_list_system_alpha(CGXConnection*, unsigned int const*, float const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bf20 (    0x6c) invocation function for block in CGXWindow::set_window_list_system_alpha(CGXConnection*, unsigned int const*, float const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2bf8c (    0x94) invocation function for block in CGXWindow::copy_sorted_descendants() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c020 (    0x2c) invocation function for block in CGXWindow::copy_sorted_descendants() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c04c (    0x50) CGXWindow::copy_sorted_descendants() const::$_7::__invoke(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c09c (    0x64) WSWindowFreezeSizeIsValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c100 (    0x60) frozen_backing_cleanup_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c160 (   0x41c) CGXWindow::set_mesh_warp(CGXConnection*, unsigned int, unsigned int, float const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c57c (    0x18) invocation function for block in CGXWindow::set_mesh_warp(CGXConnection*, unsigned int, unsigned int, float const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c594 (   0x108) CGXWindow::frame_mesh() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2c69c (   0x45c) CGXWindow::intersecting_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2caf8 (    0x44) CGXWindow::resolution() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2cb3c (   0x260) CGXWindow::set_resolution(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2cd9c (    0x9c) CGXWindow::clear_debug_corner_radius() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ce38 (    0xb4) CGXWindow::wants_efficient_ca_shadow() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ceec (    0x58) CGXWindow::wants_inefficient_ca_shadow() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2cf44 (    0xa4) CGXWindow::protection_options() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2cfe8 (   0x230) CGXWindow::is_debug_target() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d218 (    0xbc) callbacks::session_did_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d2d4 (   0x594) callbacks::session_will_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d868 (     0x8) invocation function for block in callbacks::session_will_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d870 (    0x3c) invocation function for block in callbacks::session_will_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d8ac (     0x4) callbacks::session_did_create(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2d8b0 (   0x298) callbacks::session_will_create(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2db48 (    0x84) WSCheckWindowReadAccess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2dbcc (    0xe0) WSGetSharedWindowState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2dcac (   0xdc0) WSWindowSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ea6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d2ea7c (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185d2ea9c (    0x24) __Block_byref_object_copy_.9111 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2eac0 (    0x18) __Block_byref_object_dispose_.9112 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ead8 (    0xb0) invocation function for block in log_targeted_window_debug_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2eb88 (   0x10c) invocation function for block in log_targeted_window_debug_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ec94 (     0x8) invocation function for block in clear_all_debug_corner_radii() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ec9c (  0x1080) WSWindowCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fd1c (    0x58) CGXReleaseWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fd74 (    0x48) WSSystemWindowRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fdbc (    0xa8) __CGXReleaseConnectionWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fe64 (    0x2c) invocation function for block in CGXReleaseConnectionWindows::$_8::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fe90 (    0x4c) CGXWindow::set_backing_store_override_resolution(float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2fedc (    0x38) CGXWindow::set_backing_store_pixel_dimensions_hint(CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d2ff14 (   0x164) CGXOrderWindowListWithOperation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30078 (    0x60) WSWindowCompareOrderingTiers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d300d8 (    0xac) CGXSetWindowListAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30184 (   0x140) __WSWindowsAddInterimOffset_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d302c4 (   0x29c) window_list_modify_transforms(CGXConnection*, x_list_struct*, void (CGXWindow*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30560 (    0x54) invocation function for block in window_list_modify_transforms(CGXConnection*, x_list_struct*, void (CGXWindow*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d305b4 (    0x54) copy_clipped_screen_visible_frame_shape(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30608 (    0xb0) WSWindowsClearInterimPositioning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d306b8 (    0xe8) __WSWindowsClearInterimPositioning_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d307a0 (    0xcc) __WSWindowsClearInterimPositioning_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3086c (   0x1d4) WSGetWindowIDListWithTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30a40 (    0xb8) __WSGetWindowIDListWithTags_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30af8 (   0x1f4) CGXSetWindowListBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30cec (    0x30) __CGXGetWindowCount_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30d1c (    0x9c) CGXGetOnScreenWindowCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30db8 (    0x64) __CGXGetWindowList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d30e1c (   0x300) WSWindowListCreateWithListOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3111c (    0xd4) __WSWindowListCreateWithListOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d311f0 (    0x60) __WSWindowListCreateWithListOptions_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d31250 (    0x84) WSWindowListCreateFromWindowIDArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d312d4 (    0xfc) CGXWindowIDArrayCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d313d0 (     0xc) __CGXWindowIDArrayCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d313dc (    0xcc) WSGetSharedWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d314a8 (   0x574) CGXInvalidateWindowRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d31a1c (   0x348) WSFlushWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d31d64 (   0x8e4) CGXMoveWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d32648 (    0x74) __CGXMoveWindowList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d326bc (    0x70) zWinCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3272c (    0xa0) WSWindowMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d327cc (    0x4c) WSWindowIsInForegroundProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d32818 (   0x344) CGXFinalizeGeometryChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d32b5c (   0x280) WSWindowHitTest [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d32ddc (   0x260) CGXTransformPointToWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3303c (   0x180) WSFindWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d331bc (     0x4) CGXChangeAllSessionWindowAcceleration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d331c0 (   0x354) CGXWindowBackingGet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33514 (    0x6c) CGXSetWindowMipmapping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33580 (    0xb4) WSPaddedRowbytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33634 (    0xe0) WSWindowGetType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33714 (    0xe0) WSWindowGetLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d337f4 (    0xd8) WSWindowSetLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d338cc (   0x108) WSWindowSetSubLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d339d4 (   0x16c) WSWindowSetColorProfileID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33b40 (    0xe0) WSWindowGetColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33c20 (   0x218) WSWindowSetDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33e38 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185d33e4c (    0xe8) WSWindowHasDragFade [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d33f34 (    0xe8) WSWindowHasMesh [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3401c (    0xe8) WSWindowHasSurfaceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34104 (   0x188) WSWindowIsProbablySqueegeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3428c (    0xe4) WSWindowIsInvalid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34370 (    0x4c) CGXWindowWantsTrackingOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d343bc (   0x108) WSWindowSetHasAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d344c4 (    0xe8) WSWindowHasSystemLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d345ac (    0xe4) WSWindowHasPluginLayerReferences [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34690 (   0x124) WSWindowSetPluginLayerReferences [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d347b4 (    0xe4) WSWindowIsAlive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34898 (    0xe4) WSWindowIsBackgroundWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3497c (    0xe4) WSWindowIsContentVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34a60 (    0xf8) WSWindowSetDitherDisabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34b58 (    0xe4) WSWindowIsExplicitSticky [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34c3c (    0xf8) WSWindowSetExplicitSticky [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34d34 (    0xe4) WSWindowIsFiltered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34e18 (   0x11c) WSWindowIsFrozen [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d34f34 (    0xe4) WSWindowIsMoveEventPending [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35018 (   0x10c) WSWindowSetMoveEventPending [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35124 (   0x174) WSWindowSetIsOneShot [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35298 (    0xe4) CGXWindowIsOrderedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3537c (    0xe4) WSWindowIsPluginLayerRendering [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35460 (    0xe4) WSWindowShadowIsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35544 (    0xe0) WSWindowSetShadowEnable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35624 (    0xe4) WSWindowIsSystemWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35708 (    0xfc) WSWindowSetSystemWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35804 (   0x108) WSWindowSetTrustedForObscuring [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3590c (    0xe4) WSWindowIsWindowManagerAware [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d359f0 (    0xe4) WSWindowSurfaceNeedsActivation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35ad4 (   0x110) WSWindowSetSurfaceNeedsActivation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35be4 (   0x110) WSWindowSetSurfaceNeedsSynchronize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35cf4 (    0xe4) WSWindowGetForceFlatteningIfDeformed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35dd8 (   0x110) WSWindowSetForceFlushForCaptureUpdateFlag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35ee8 (    0xe0) WSWindowGetClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d35fc8 (   0x1a4) WSWindowSetClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3616c (   0x150) WSWindowSetEventShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d362bc (    0xe0) WSWindowGetGlobalClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3639c (    0xe0) WSWindowGetLayerClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3647c (   0x150) WSWindowSetOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d365cc (    0xe0) WSWindowGetShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d366ac (   0x138) WSWindowSetSurfaceExcludeShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d367e4 (   0x138) WSWindowSetSurfaceShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3691c (   0x108) WSWindowInvalidateLayerOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d36a24 (   0x338) WSCreateSpecifiedWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d36d5c (    0x30) (null) [FUNC, FunctionStarts] 
                0x0000000185d36d8c (    0xe0) WSWindowGetShapeData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d36e6c (    0xe8) WSWindowGetScreenRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d36f54 (    0xe8) WSWindowGetScreenRectFromRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3703c (   0x108) WSShapeWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37144 (   0x108) WSShapeWindowWithRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3724c (    0xe0) WSWindowGetScreenGeometrySeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3732c (   0x100) WSWindowGetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3742c (   0x164) WSWindowSetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37590 (   0x11c) WSWindowGetSystemTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d376ac (   0x164) WSWindowSetSystemTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37810 (   0x11c) WSWindowGetDeformationTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3792c (   0x164) WSWindowSetDeformationTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37a90 (    0xe0) WSWindowGetTransformStack [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37b70 (    0x40) WSWindowSetWindowMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37bb0 (   0x10c) WSWindowGetWindowMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37cbc (    0xe0) WSWindowGetSurfaceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37d9c (    0xd8) WSWindowSetSurfaceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37e74 (    0xe0) WSWindowGetSurfaceListPtr [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d37f54 (    0xe0) WSWindowGetCABacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38034 (   0x10c) WSWindowGetCAClientContextID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38140 (    0xfc) WSWindowHostsContextID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3823c (   0x108) WSWindowUpdateCAVisibility [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38344 (    0xe4) WSWindowHasActiveShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38428 (    0xb4) WSWindowSetHasActiveShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d384dc (    0xfc) WSWindowSetShadowsAreDirty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d385d8 (    0xe0) WSWindowGetActiveShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d386b8 (    0xe0) WSWindowGetInactiveShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38798 (   0x108) WSWindowReleaseShadowResources [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d388a0 (    0x84) WSWindowReleaseShadowResourcesCurrent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38924 (   0x158) WSWindowSetAppKitShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38a7c (   0x158) WSWindowSetWindowManagerShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38bd4 (   0x110) WSWindowInvalidateShadowFrame [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38ce4 (    0xe0) WSWindowGetShadowMesh [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38dc4 (    0xe0) WSWindowGetPackageData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38ea4 (   0x108) WSWindowGetProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d38fac (   0x108) WSWindowSetProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d390b4 (    0x98) WSWindowSetUntrustedProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3914c (    0xf8) WSWindowGetPropertyBoolValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39244 (   0x110) WSWindowGetValueForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39354 (   0x114) WSWindowSetTitle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39468 (   0x104) WSWindowIsTagBitSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3956c (    0xe0) WSWindowGetShmem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3964c (    0xe0) WSWindowSynchronizeSpaceBindingShmemValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3972c (    0xe0) WSWindowGetRightsRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3980c (    0xec) CGXWindowGetEventReceiver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d398f8 (    0x30) WSWindowGetEventReceiver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39928 (    0xec) CGXWindowGetPresenter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39a14 (   0x120) WSWindowGetOwningPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39b34 (    0xec) WSWindowOwnerID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39c20 (   0x110) CGXWindowPtrConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39d30 (   0x118) CGXWindowPtrEventReceiver [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39e48 (   0x118) CGXWindowPtrPresenter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d39f60 (   0x304) WSInvalidateWindowRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a264 (    0xe0) WSWindowGetBackingStore [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a344 (    0xec) WSWindowGetBackingFillColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a430 (    0xe0) WSWindowSetBackingFillColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a510 (    0xdc) WSWindowGetBackingStoreResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a5ec (    0xe0) WSWindowGetCaptureStreams [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a6cc (    0xd8) WSWindowInternalSetSharedState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a7a4 (    0xe0) WSWindowGetCapturedContent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a884 (    0xd8) WSWindowSetCapturedContent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3a95c (   0x108) WSWindowReleaseCapturedContent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3aa64 (    0xe0) WSWindowGetDragFadeList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ab44 (    0xe0) WSWindowGetDragFadeEffect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ac24 (   0x100) WSWindowGetEffectiveAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ad24 (    0xe0) WSWindowGetParentID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ae04 (   0x200) WSWindowSetParent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b004 (   0x14c) WSWindowCopyDescendants [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b150 (    0xfc) WSWindowRecursiveParent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b24c (   0x1d4) WSWindowFreezeContent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b420 (   0x230) WSWindowThawContent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b650 (    0xe0) WSWindowGetFrozenBacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b730 (   0x10c) WSWindowGetDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b83c (    0xe0) WSWindowGetBackgroundBlurRadius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b91c (    0xe0) WSWindowGetFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3b9fc (    0xd8) WSWindowSetFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3bad4 (    0xd8) WSWindowSetFlatteningDelay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3bbac (    0xe0) WSWindowGetMesh [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3bc8c (    0xe0) WSWindowGetScreenState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3bd6c (    0xdc) WSWindowGetBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3be48 (   0x128) WSWindowGetCanonicalResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3bf70 (   0x10c) WSWindowGetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c07c (   0x10c) WSWindowSetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c188 (   0x10c) WSWindowGetProtectionOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c294 (    0xa8) __SLSLogInvalidEventSource [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c33c (    0x44) SLEventSourceGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c380 (    0x28) __SLEventSourceGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c3a8 (   0x2bc) SLEventSourceCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c664 (    0x3c) SLEventSourceGetSourceStateID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c6a0 (    0x7c) SLEventSourceGetKeyboardType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c71c (    0x24) SLEventSourceSetKeyboardType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c740 (    0x24) SLEventSourceSetPixelsPerLine [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c764 (    0x3c) SLEventSourceGetPixelsPerLine [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c7a0 (    0x50) SLEventSourceButtonState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c7f0 (    0xc4) SLEventSourceKeyState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c8b4 (    0x28) SLEventSourceFlagsState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c8dc (    0x6c) SLEventSourceSecondsSinceLastEventType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c948 (    0x6c) SLEventSourceCounterForEventType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c9b4 (    0x24) SLEventSourceSetUserData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3c9d8 (    0x3c) SLEventSourceGetUserData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ca14 (    0x38) SLEventSourceSetLocalEventsFilterDuringSuppressionState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ca4c (    0x50) SLEventSourceGetLocalEventsFilterDuringSuppressionState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ca9c (    0xcc) SLEventSourceSetLocalEventsSuppressionInterval [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cb68 (    0x3c) SLEventSourceGetLocalEventsSuppressionInterval [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cba4 (    0x24) ShaderComposer::shader_template(MetalTemplateType, std::__1::unordered_map<unsigned long long, MetalShader*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long const, MetalShader*>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cbc8 (    0x20) ShaderComposer::shader_template(MetalTemplateType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cbe8 (     0x4) ShaderComposer::conditional_cache_dump() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cbec (     0x8) ShaderComposer::Library() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cbf4 (    0x28) ShaderComposer::~ShaderComposer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cc1c (   0x194) ShaderComposer::~ShaderComposer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cdb0 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MetalShader*>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cdfc (    0xf4) ShaderComposer::empty_cache(std::__1::unordered_map<unsigned long long, MetalShader*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long const, MetalShader*>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cef0 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLRenderPipelineState>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLRenderPipelineState>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLRenderPipelineState>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLRenderPipelineState>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cf3c (     0x4) ShaderComposer::~ShaderComposer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3cf40 (   0x108) WSSetShadowComposerDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3d048 (    0x78) MetalShader::MetalShader(id<MTLDevice>, id<MTLFunction>, objc_object, MTLVertexDescriptor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3d0c0 (   0x904) MetalShader::CopyPipelineState(MetalContext*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3d9c4 (    0xb4) ShaderComposer::create_shader(id<MTLLibrary>, NSString*, NSString, MTLVertexDescriptor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3da78 (   0x1a8) ShaderComposer::create_specialized_shader(id<MTLLibrary>, NSString*, NSString, MTLFunctionConstantValues* (*)(unsigned long long), unsigned long long, MTLVertexDescriptor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3dc20 (   0x11c) ShaderComposer::precompiled_shader(unsigned int, NSString*, NSString*, MTLVertexDescriptor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3dd3c (   0x20c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, MetalShader*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MetalShader*>>>::__emplace_unique_key_args<unsigned long long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long&&>, std::__1::tuple<>>(unsigned long long const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned lon...
                0x0000000185d3df48 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MetalShader*>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3e144 (    0xc8) invocation function for block in get_basic_vertex_descriptor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3e20c (   0x20c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, MetalShader*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MetalShader*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MetalShader*>>>::__emplace_unique_key_args<unsigned long long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long const&>, std::__1::tuple<>>(unsigned long long const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigne...
                0x0000000185d3e418 (   0x140) shadow_options_to_constant_values(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3e558 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3e608 (   0x3e8) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, MTLFunctionConstantValues*>>>::__emplace_unique_key_args<unsigned long long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long const&>, std::__1::tuple<>>(unsigned long long c...
                0x0000000185d3e9f0 (    0x78) ShaderComposer::SimpleColor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ea68 (    0xc8) invocation function for block in get_basic_color_vertex_descriptor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3eb30 (    0x78) ShaderComposer::SimpleTexture() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3eba8 (    0x78) ShaderComposer::SimpleTextureTint() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ec20 (   0x154) ShaderComposer::UberComposite(MTLPixelFormat, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ed74 (   0x140) ubershader_options_to_constant_values(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3eeb4 (    0xf8) invocation function for block in get_uber_composite_vertex_descriptor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3efac (   0x138) shadow_blur_options_to_constant_values(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f0e4 (   0x244) ShaderComposer::HorizontalBackgroundBlur(int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f328 (   0x244) ShaderComposer::VerticalBackgroundBlurComposite(int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f56c (    0x90) WSDebugGetExternalKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f5fc (    0x8c) __get_external_keys_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f688 (   0x238) curve_args_from_color_space(CGDisplayColorCurve* (&) [3]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f8c0 (    0x54) LUTKey::operator==(LUTKey const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f914 (     0x4) display_do_anticipated_space_switch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3f918 (   0x164) PKGSpaceSwitchPerformAnticipatedSwitch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3fa7c (   0x2f4) window_post_notification_for_space [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3fd70 (   0x110) window_get_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3fe80 (    0xf8) window_on_space [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d3ff78 (    0xa4) count_ordered_offscreen_windows_with_same_presenter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4001c (    0x8c) __window_on_space_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d400a8 (    0x48) __window_get_display_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d400f0 (    0xac) render_context_will_destroy_handler(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4019c (    0x38) invocation function for block in render_context_will_destroy_handler(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d401d4 (    0x74) (anonymous namespace)::ca_context_id_mapper::shared_mapper() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40248 (   0x168) (anonymous namespace)::ca_context_id_mapper::remove_context_id(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d403b0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::ca_context_id_mapping_record>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::ca_context_id_mapping_record>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, (anonymous namespace)::ca_context_id_mapping_record>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, (anonymous namespace)::ca_context_id_mapping_record>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, (anonymous namespace)::ca_context_id_mapping_record>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40464 (    0xac) render_context_did_zombify_handler(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40510 (   0x138) invocation function for block in render_context_did_zombify_handler(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40648 (    0x50) surface_will_terminate_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40698 (   0x438) surface_type_did_change_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40ad0 (    0x50) surface_will_unbind_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40b20 (   0x154) __setup_ca_local_display_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40c74 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, CALocalDisplay*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CALocalDisplay*>>>::find<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40d28 (   0x1cc) SLSGetCALocalDisplay(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d40ef4 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, CALocalDisplay*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CALocalDisplay*>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41104 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CALocalDisplay*>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41300 (   0x4b0) invocation function for block in SLSGetCALocalDisplay(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d417b0 (    0xd8) invocation function for block in SLSGetCALocalDisplay(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41888 (     0xc) SLSGetCALocalDisplay(int)::'block-literal'::$_0::__invoke(unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41894 (    0x54) invocation function for block in notification_register_ca_local_display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d418e8 (    0x90) ca_local_display_wakeup(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41978 (   0x2b8) ca_local_display_reconfig(unsigned int, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41c30 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, CALocalDisplay*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CALocalDisplay*>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CALocalDisplay*>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int&&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int&&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41e40 (   0x184) SLSGetDisplayLink [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d41fc4 (   0x120) WSRequestPrebootUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d420e4 (   0x420) invocation function for block in request_preboot_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42504 (    0x64) invocation function for block in request_preboot_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42568 (     0x4) invocation function for block in request_preboot_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4256c (    0x10) __Block_byref_object_copy_.10036 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4257c (     0xc) __Block_byref_object_dispose_.10037 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42588 (    0x70) invocation function for block in getDMAPFSClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d425f8 (    0x7c) DiskManagementLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42674 (    0xd0) DiskManagementLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42744 (    0x74) invocation function for block in DiskManagementLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d427b8 (    0x70) invocation function for block in getDMManagerClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42828 (    0x50) invocation function for block in getDASessionCreateSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42878 (    0x88) DiskArbitrationLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42900 (    0xd0) DiskArbitrationLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d429d0 (    0x74) invocation function for block in DiskArbitrationLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42a44 (    0x10) request_preboot_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42a54 (    0x40) invocation function for block in da_dm_exist() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42a94 (   0x258) WSPerformBlockOnMainThreadAfterVnodeRebirth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42cec (    0xf0) __WSPerformBlockOnMainThreadAfterVnodeRebirth_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42ddc (    0x3c) __WSPerformBlockOnMainThreadAfterVnodeRebirth_block_invoke.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42e18 (    0x5c) __WSPerformBlockOnMainThreadAfterVnodeRebirth_block_invoke.7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42e74 (    0x34) invocation function for block in watcher_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42ea8 (     0x8) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42eb0 (    0x10) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42ec0 (    0x1c) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper data] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42edc (    0x6c) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper rawData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42f48 (    0x70) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper totalPixelCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d42fb8 (    0x70) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper avgB] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43028 (    0x70) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper avgG] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43098 (    0x70) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper avgR] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43108 (    0xa0) -[SLSScreenTelemetryResultsSnapshotPanelDataWrapper initWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d431a8 (    0xa8) +[SLSScreenTelemetryResultsSnapshotPanelDataWrapper wrapperWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43250 (     0x8) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43258 (    0x10) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43268 (    0x1c) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper data] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43284 (    0x7c) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper column] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43300 (    0x6c) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper row] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4336c (    0x7c) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper rawData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d433e8 (    0x84) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper count] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4346c (    0x84) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper zMax] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d434f0 (    0x84) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper zMin] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43574 (    0x84) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper zAverage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d435f8 (    0xa0) -[SLSScreenTelemetryResultsSnapshotZoneDataWrapper initWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43698 (    0xa8) +[SLSScreenTelemetryResultsSnapshotZoneDataWrapper wrapperWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43740 (     0x8) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43748 (    0x10) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43758 (    0x1c) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper data] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43774 (    0x7c) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper columnCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d437f0 (    0x6c) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper row] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4385c (   0x1a8) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper objectAtIndexedSubscript:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43a04 (     0x4) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneData>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43a08 (    0x10) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneData>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43a18 (    0x44) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43a5c (    0x20) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43a7c (    0x7c) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper rawData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43af8 (    0xa0) -[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper initWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43b98 (    0xa8) +[SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper wrapperWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43c40 (     0x8) -[SLSScreenTelemetryResultsSnapshotDataWrapper .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43c48 (    0x10) -[SLSScreenTelemetryResultsSnapshotDataWrapper .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43c58 (    0x1c) -[SLSScreenTelemetryResultsSnapshotDataWrapper data] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43c74 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper columnCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43cf0 (    0x6c) -[SLSScreenTelemetryResultsSnapshotDataWrapper rowCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43d5c (   0x1b0) -[SLSScreenTelemetryResultsSnapshotDataWrapper objectAtIndexedSubscript:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43f0c (     0x4) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneRowData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneRowData>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43f10 (    0x10) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneRowData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneRowData>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43f20 (    0x44) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneRowData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneRowData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43f64 (    0x20) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneRowData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneRowData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d43f84 (   0x158) -[SLSScreenTelemetryResultsSnapshotDataWrapper panel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d440dc (     0x4) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotPanelData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotPanelData>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d440e0 (    0x10) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotPanelData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotPanelData>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d440f0 (    0x44) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotPanelData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotPanelData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44134 (    0x20) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotPanelData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotPanelData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44154 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper rawData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d441d0 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper EDR_headroom] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4424c (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper AZL_max] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d442c8 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper AZL_min] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44344 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper AZL_mean] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d443c0 (    0x7c) -[SLSScreenTelemetryResultsSnapshotDataWrapper timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4443c (   0x260) -[SLSScreenTelemetryResultsSnapshotDataWrapper initWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4469c (   0x188) SLSScreenTelemetryResultsSnapshotData::SLSScreenTelemetryResultsSnapshotData(unsigned long, unsigned long, double, NSObject<OS_xpc_object>*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44824 (     0x4) std::__1::__shared_ptr_pointer<float const*, SLSScreenTelemetryResultsSnapshotData::sharedPointerFromXPCData(NSObject<OS_xpc_object>*)::$_0, std::__1::allocator<float const>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44828 (     0x8) std::__1::__shared_ptr_pointer<float const*, SLSScreenTelemetryResultsSnapshotData::sharedPointerFromXPCData(NSObject<OS_xpc_object>*)::$_0, std::__1::allocator<float const>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44830 (    0x28) std::__1::__shared_ptr_pointer<float const*, SLSScreenTelemetryResultsSnapshotData::sharedPointerFromXPCData(NSObject<OS_xpc_object>*)::$_0, std::__1::allocator<float const>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44858 (     0x4) std::__1::__shared_ptr_pointer<float const*, SLSScreenTelemetryResultsSnapshotData::sharedPointerFromXPCData(NSObject<OS_xpc_object>*)::$_0, std::__1::allocator<float const>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4485c (     0x4) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotData>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44860 (    0x10) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotData>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44870 (    0x44) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d448b4 (    0x20) std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotData>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d448d4 (    0xa0) -[SLSScreenTelemetryResultsSnapshotDataWrapper initWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44974 (    0x3c) +[SLSScreenTelemetryResultsSnapshotDataWrapper wrapperWithXPCObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d449b0 (    0xa8) +[SLSScreenTelemetryResultsSnapshotDataWrapper wrapperWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44a58 (     0x8) -[SLSScreenTelemetryUpdate snapshot] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44a60 (     0x8) -[SLSScreenTelemetryUpdate error] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44a68 (     0x8) -[SLSScreenTelemetryUpdate connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44a70 (     0x8) -[SLSScreenTelemetryUpdate action] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44a78 (    0xc0) -[SLSScreenTelemetryUpdate initWithAction:connection:error:andSnapshot:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44b38 (    0x88) -[SLSScreenTelemetryUpdate dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44bc0 (    0x5c) +[SLSScreenTelemetryUpdate updateWithAction:connection:error:andSnapshot:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44c1c (     0x8) -[SLSZeroingWeakContainer setReference:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44c24 (     0x8) -[SLSZeroingWeakContainer reference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44c2c (    0x2c) -[SLSZeroingWeakContainer object] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44c58 (     0x8) -[SLSZeroingWeakContainer invalidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44c60 (    0x88) -[SLSZeroingWeakContainer initWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44ce8 (    0x3c) +[SLSZeroingWeakContainer containerWithObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d24 (     0x8) -[SLScreenTelemetryConnection zeroingContainer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d2c (     0x8) -[SLScreenTelemetryConnection updateBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d34 (     0x8) -[SLScreenTelemetryConnection queue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d3c (     0x8) -[SLScreenTelemetryConnection setConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d44 (     0x8) -[SLScreenTelemetryConnection connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d4c (     0x8) -[SLScreenTelemetryConnection setClosed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d54 (     0x8) -[SLScreenTelemetryConnection closed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44d5c (   0x270) -[SLScreenTelemetryConnection handleMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d44fcc (   0x108) -[SLScreenTelemetryConnection connectUsingXPCConnection:andConfigMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d450d4 (    0x4c) __74-[SLScreenTelemetryConnection connectUsingXPCConnection:andConfigMessage:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45120 (    0xb4) -[SLScreenTelemetryConnection close] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d451d4 (    0x3c) __36-[SLScreenTelemetryConnection close]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45210 (    0xbc) -[SLScreenTelemetryConnection closedWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d452cc (   0x70c) -[SLScreenTelemetryConnection initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d459d8 (    0xbc) __119-[SLScreenTelemetryConnection initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45a94 (   0x190) __119-[SLScreenTelemetryConnection initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:]_block_invoke.134 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45c24 (    0x10) __Block_byref_object_copy_.10207 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45c34 (     0xc) __Block_byref_object_dispose_.10208 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45c40 (    0x58) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45c98 (    0x18) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45cb0 (   0x1a8) createCancellableMachRecvSource(NSObject<OS_dispatch_queue>*, void () block_pointer, NSError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45e58 (    0x58) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45eb0 (    0x50) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45f00 (    0x4c) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45f4c (    0x10) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45f5c (    0x6c) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d45fc8 (    0x58) invocation function for block in createNoSenderRecvPair(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46020 (    0x74) invocation function for block in createCancellableMachRecvSource(NSObject<OS_dispatch_queue>*, void () block_pointer, NSError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46094 (    0xb4) __119-[SLScreenTelemetryConnection initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:]_block_invoke_2.137 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46148 (     0xc) __119-[SLScreenTelemetryConnection initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46154 (    0xb4) -[SLScreenTelemetryConnection dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46208 (    0x84) +[SLScreenTelemetryConnection connectionWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4628c (    0x9c) SLSScreenTelemetryResultsSnapshotData::createXPCObject() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46328 (    0xd0) CGXTransitionSynchronizeSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d463f8 (   0x234) CGXStartTransition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4662c (   0x998) new_transition(CGXConnection*, CGSTransitionStyle, CGSTransitionFlags, CGXWindow const*, CGXSession*, float const*, Transition**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d46fc4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d46fd4 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185d46ff8 (   0x1a4) CGXMarkTransitionStart(Transition*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4719c (    0xec) transitionByID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d47288 (   0x14c) CGXMarkTransitionEnd(Transition*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d473d4 (   0x1f0) CGXInvokeTransition(Transition*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d475c4 (   0x248) transitionFinished(Transition*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4780c (     0xc) transitionConnectionDiedCallback(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d47818 (   0x1b0) transitionMetalCallback(void*, std::__1::shared_ptr<WS::Displays::Display>, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d479c8 (   0x6b4) transitionTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4807c (    0x50) background_updater_predicate(CGXWindow const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d480cc (     0x4) transitionTimeoutCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d480d0 (    0x1c) invocation function for block in CGXInvokeTransition(Transition*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d480ec (    0x20) invocation function for block in transitionByID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4810c (    0x74) transitionDisplayWillReconfigureCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48180 (     0x8) invocation function for block in transitionDisplayWillReconfigureCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48188 (    0x10) transition_has_nonzero_devices(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48198 (    0x88) transitionWillDestroySessionCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48220 (     0x8) invocation function for block in transitionWillDestroySessionCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48228 (    0x10) transition_matches_session(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48238 (   0x364) _CGXSetEventCapture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4859c (   0x234) decodeEventRecordForPost(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d487d0 (    0xc4) mouseDownEventMaskingDeadSwitch(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48894 (   0x1d8) _CGXSetIOHIDEventSystemClientProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a6c (     0x8) -[SLSDisplayControlClient setSemaphore:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a74 (     0xc) -[SLSDisplayControlClient semaphore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a80 (     0x8) -[SLSDisplayControlClient setNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a88 (     0x8) -[SLSDisplayControlClient notification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a90 (     0x8) -[SLSDisplayControlClient setEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48a98 (     0xc) -[SLSDisplayControlClient enabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48aa4 (     0x8) -[SLSDisplayControlClient setConfigured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48aac (     0xc) -[SLSDisplayControlClient configured] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48ab8 (    0xa8) -[SLSDisplayControlClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48b60 (    0x5c) -[SLSDisplayControlClient semaphoreWait:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48bbc (    0x4c) -[SLSDisplayControlClient semaphoreSignal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48c08 (    0x10) -[SLSDisplayControlClient cfStringToCStringPtr:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48c18 (    0x5c) -[SLSDisplayControlClient isTypeOfClass:aClass:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48c74 (    0x70) -[SLSDisplayControlClient createNSError:withCGError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48ce4 (    0x90) -[SLSDisplayControlClient registerClient:port:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48d74 (    0xd0) -[SLSDisplayControlClient xpcEventToNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48e44 (    0x90) -[SLSDisplayControlClient addPayload:ofType:to:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48ed4 (    0x74) -[SLSDisplayControlClient addUUID:to:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48f48 (    0x74) -[SLSDisplayControlClient addNotificationType:to:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d48fbc (    0x58) -[SLSDisplayControlClient payloadTypeToCFType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49014 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185d49038 (    0xd4) -[SLSDisplayControlClient decodeNotification:notifyType:uuid:payloadType:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4910c (   0x104) -[SLSDisplayControlClient encodeCommand:withUUID:payloadType:payload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49210 (     0x8) -[SLSDisplayControlClient terminateConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49218 (   0x17c) -[SLSDisplayControlClient registerDaemonClient:withAutoreconnect:error:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49394 (   0x148) __119-[SLSDisplayControlClient registerDaemonClient:withAutoreconnect:error:notifyQueue:notificationType:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d494dc (    0xc4) __119-[SLSDisplayControlClient registerDaemonClient:withAutoreconnect:error:notifyQueue:notificationType:notificationBlock:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d495a0 (   0x190) -[SLSDisplayControlClient registerGUIClient:connectionPort:error:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49730 (   0x148) __113-[SLSDisplayControlClient registerGUIClient:connectionPort:error:notifyQueue:notificationType:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49878 (    0xc4) __113-[SLSDisplayControlClient registerGUIClient:connectionPort:error:notifyQueue:notificationType:notificationBlock:]_block_invoke.49 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4993c (   0x104) WSWindowIsStickyByBinding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49a40 (    0x54) window_is_simple_sticky(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49a94 (   0x10c) window_is_sticky(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49ba0 (    0xe0) PKGSpaceEvaluateSafeApertureForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49c80 (    0xe8) PKGCopyManagedSpacesForWindowsAndOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49d68 (    0x90) __PKGSpaceEvaluateSafeApertureForWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d49df8 (   0x268) evaluate_safe_aperture_for_window_on_managed_space(CGXWindow*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a060 (    0x78) managed_space_get_needs_windowed_safe_aperture(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a0d8 (   0x240) managed_space_add_needs_safe_aperture_for_window(PKGManagedSpace*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a318 (   0x164) managed_space_remove_needs_safe_aperture_for_window(PKGManagedSpace*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a47c (    0xd0) managed_space_safe_aperture_did_change(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a54c (    0x5c) managed_space_get_active_managed_display(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a5a8 (   0x23c) evaluate_safe_aperture_for_managed_display(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a7e4 (   0x17c) managed_display_get_sarlacc_display(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4a960 (   0x228) managed_display_set_target_safe_aperture_amount(PKGDisplaySpaceData*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ab88 (    0x84) managed_display_for_pkg_display(PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ac0c (    0x40) PKGDisplayCopyManagedSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ac4c (    0x60) invocation function for block in evaluate_safe_aperture_for_managed_display(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4acac (   0x108) PKGManagedSpaceNeedsSafeAperture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4adb4 (    0x2c) __PKGManagedSpaceNeedsSafeAperture_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ade0 (    0xb8) managed_tiled_space_foreach_tile_entry(PKGManagedTiledSpace*, void (PKGTileEntry*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ae98 (    0x10) invocation function for block in pkg_tile_manager_foreach_tile_entry(PKGTileManager const*, void (PKGTileEntry*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4aea8 (    0x5c) managed_space_get_safe_aperture_space_reveal(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4af04 (    0x54) managed_display_set_safe_aperture_amount(PKGDisplaySpaceData*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4af58 (    0x14) invocation function for block in managed_display_set_target_safe_aperture_amount(PKGDisplaySpaceData*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4af6c (    0x88) invocation function for block in managed_display_set_target_safe_aperture_amount(PKGDisplaySpaceData*, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4aff4 (    0xdc) pkg_display_set_safe_aperture_amount(PKGDisplay*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b0d0 (    0x54) invocation function for block in managed_display_get_sarlacc_display(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b124 (   0x128) safe_aperture_poisoning_connection_death_notification(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b24c (    0x44) PKGManagedSpaceCopyManagedShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b290 (   0x1e0) PKGManagedMenuSpaceGetSarlaccRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b470 (     0xc) __Block_byref_object_copy_.10491 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b47c (     0x4) __Block_byref_object_dispose_.10492 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b480 (    0x64) __PKGManagedMenuSpaceGetSarlaccRect_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b4e4 (    0x40) PKGManagedSpaceGetDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b524 (   0x1ec) __PKGCopyManagedSpacesForWindowsAndOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b710 (   0x108) packages_spaces_copy_managed_spaces(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b818 (    0x64) __PKGCopyManagedSpacesForWindowsAndOptions_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b87c (    0x98) invocation function for block in managed_space_list_filter_with_options(x_list_struct*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b914 (    0x4c) PKGSpaceIsOrderedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b960 (    0x6c) invocation function for block in packages_spaces_copy_managed_spaces(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4b9cc (    0x4c) window_lookup_best_active_managed_display(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ba18 (   0x540) window_copy_preferred_spaces_for_managed_display(CGXWindow*, PKGDisplaySpaceData const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4bf58 (    0x34) copy_managed_space_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4bf8c (   0x104) window_is_soft_bound_to_managed_space(CGXWindow*, PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c090 (   0x170) managed_space_allows_window(PKGManagedSpace const*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c200 (   0x128) managed_space_contains_window(PKGManagedSpace*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c328 (    0xf0) managed_space_allows_window_implicitly(PKGManagedSpace const*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c418 (    0xac) invocation function for block in window_copy_unfiltered_preferred_managed_spaces_for_managed_display(CGXWindow*, PKGDisplaySpaceData const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c4c4 (    0x20) invocation function for block in get_managed_space_of_last_resort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c4e4 (    0xe4) managed_spaces_copy_canonical_packages_spaces(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c5c8 (    0x70) invocation function for block in window_filter_space_list_to_allowable(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c638 (    0xfc) PKGSpaceContainsWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c734 (    0x5c) packages_space_allows_window(PKGSpace const*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c790 (    0x60) __PKGSpaceContainsWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c7f0 (    0xfc) packages_space_foreach_workspace(PKGSpace const*, void (WSWorkspace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c8ec (    0x1c) invocation function for block in managed_space_foreach_workspace(PKGManagedSpace*, void (WSWorkspace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c908 (    0xec) managed_space_foreach_packages_space(PKGManagedSpace*, void (PKGSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4c9f4 (    0x1c) invocation function for block in managed_tiled_space_foreach_tile(PKGManagedTiledSpace*, void (PKGSpace*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ca10 (    0x48) invocation function for block in managed_spaces_copy_canonical_packages_spaces(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ca58 (    0x54) window_can_join_fullscreen_spaces_implicitly(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4caac (    0x60) invocation function for block in managed_space_contains_window(PKGManagedSpace*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cb0c (    0x10) invocation function for block in managed_space_allows_window(PKGManagedSpace const*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cb1c (   0x200) managed_space_owners_apply_until_b(PKGManagedSpace const*, bool (int) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cd1c (    0x24) invocation function for block in pkg_tile_manager_owners_apply_until_b(PKGTileManager const*, bool (int) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cd40 (    0x10) invocation function for block in pkg_tile_manager_tile_entries_apply_until_b(PKGTileManager const*, bool (PKGTileEntry*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cd50 (    0x10) invocation function for block in managed_space_owners_apply_until_b(PKGManagedSpace const*, bool (int) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cd60 (   0x150) PKGCopyWindowsOnManagedSpacesWithOptionsAndTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ceb0 (    0x4c) __PKGCopyWindowsOnManagedSpacesWithOptionsAndTags_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4cefc (   0x4e4) PKGCopyWindowsOnSpacesWithOptionsAndTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d3e0 (    0x48) invocation function for block in window_list_create_for_space_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d428 (    0xec) packages_space_list_copy_workspace_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d514 (    0x78) invocation function for block in window_list_create_for_space_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d58c (    0xa4) invocation function for block in packages_space_list_copy_workspace_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d630 (    0x48) invocation function for block in packages_space_list_copy_workspace_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d678 (   0x140) window_lookup_first_active_managed_space_display(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d7b8 (    0x44) window_lookup_best_pkg_display_for_geometry(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d7fc (    0x44) invocation function for block in window_lookup_first_active_managed_space_display(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d840 (    0x58) __PKGManagedSpaceEvaluateSafeApertureForSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d898 (    0xe8) PKGSpaceForEachWindowWithOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4d980 (   0x120) packages_space_copy_unfiltered_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4daa0 (   0x104) packages_space_copy_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dba4 (    0x10) __PKGSpaceForEachWindowWithOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dbb4 (    0x28) invocation function for block in packages_space_copy_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dbdc (    0xe0) invocation function for block in packages_space_copy_unfiltered_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dcbc (    0x48) invocation function for block in packages_space_copy_unfiltered_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dd04 (    0xd0) PKGCopyManagedSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ddd4 (    0x5c) __PKGCopyManagedSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4de30 (    0xd0) current_session_foreach_packages_space_unsafe(void (PKGSpace const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4df00 (    0x10) invocation function for block in current_session_foreach_packages_space_unsafe(void (PKGSpace const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4df10 (    0xd4) PKGForEachManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dfe4 (    0x10) __PKGForEachManagedSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4dff4 (    0x7c) __PKGCopyManagedMenuSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e070 (   0x148) PKGForEachManagedMenuSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e1b8 (    0x10) __PKGForEachManagedMenuSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e1c8 (    0xd0) PKGCreateSpaceListFromIDArrayFilteredByManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e298 (    0x4c) PKGSpaceForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e2e4 (    0x4c) PKGSpaceManagedByConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e330 (   0x150) PKGSpaceForName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e480 (    0x54) __PKGSpaceForName_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e4d4 (   0x154) PKGSpaceForCompatID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e628 (    0x28) __PKGSpaceForCompatID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e650 (    0x6c) dictionary_get_number_value(__CFDictionary const*, void const*, CFNumberType, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e6bc (    0x44) pkg_space_dictionary_contains_identifier(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e700 (    0x48) pkg_space_dictionary_get_identifier(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e748 (   0x204) PKGWillSwitchSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e94c (    0x28) __PKGWillSwitchSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e974 (    0x78) PKGCopySpacesWithOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4e9ec (   0x174) space_list_filter_with_options(x_list_struct*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4eb60 (   0x18c) invocation function for block in space_list_filter_with_options(x_list_struct*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ecec (    0xe8) PKGCopySpacesForWindowsAndOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4edd4 (   0x138) __PKGCopySpacesForWindowsAndOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ef0c (    0x3c) __PKGCopySpacesForWindowsAndOptions_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ef48 (   0xa9c) PKGSpaceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4f9e4 (   0x1f0) pkg_space_dictionary_create_clean_copy(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4fbd4 (    0x68) managed_basic_space_initialize(PKGManagedBasicSpace*, PKGSpace*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4fc3c (    0x60) packages_space_set_name(PKGSpace*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4fc9c (   0x1bc) pkg_reserved_area_make_from_dictionary_representation(__CFDictionary const*, PKGReservedArea*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4fe58 (    0x98) pkg_tile_manager_dictionary_contains_max_tiles(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4fef0 (    0x9c) pkg_tile_manager_dictionary_get_max_tiles(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d4ff8c (    0x98) pkg_tile_manager_dictionary_contains_inter_tile_spacing(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50024 (    0x9c) pkg_tile_manager_dictionary_get_inter_tile_spacing(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d500c0 (    0x70) invocation function for block in pkg_tile_manager_dictionary_unpack_tiles(PKGTileManager*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50130 (   0x160) invocation function for block in pkg_preferred_layout_records_create_with_array(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50290 (   0x19c) managed_display_append_managed_spaces_binding(PKGDisplaySpaceData*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5042c (    0xe4) post_managed_space_lifecycle_notification(PKGManagedSpace*, PKGSpace*, CGPackagesNotification) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50510 (   0x15c) managed_space_update_membership(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5066c (    0x5c) managed_space_set_needs_membership_update(PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d506c8 (   0x218) invocation function for block in managed_space_update_membership(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d508e0 (    0x48) invocation function for block in managed_space_copy_packages_spaces(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50928 (    0xdc) PKGSpacesRemoveWindowsWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50a04 (    0xcc) managed_space_add_window(PKGManagedSpace*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50ad0 (    0x54) managed_space_activate_for_logging(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50b24 (    0x5c) managed_space_is_activated_for_logging(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50b80 (    0x64) invocation function for block in managed_display_append_managed_spaces_binding(PKGDisplaySpaceData*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50be4 (    0x5c) invocation function for block in managed_display_append_managed_spaces_binding(PKGDisplaySpaceData*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50c40 (    0x5c) managed_space_get_preferred_managed_display(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50c9c (   0x328) managed_space_move_to_active_managed_display(PKGManagedSpace*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d50fc4 (    0x84) managed_space_update_preferred_managed_display(PKGManagedSpace*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d51048 (    0x68) managed_display_remove_preferred_managed_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d510b0 (    0x5c) managed_space_set_connection_overridden_during_animation(PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5110c (    0xd8) managed_space_remove_non_following_windows(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d511e4 (    0xa0) managed_display_remove_active_managed_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d51284 (    0x5c) managed_space_set_active_managed_display(PKGManagedSpace*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d512e0 (   0x22c) managed_space_set_transform_with_connection(PKGManagedSpace*, CGAffineTransform, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5150c (    0xf4) managed_space_move_windows_from_managed_display_to_managed_display(PKGManagedSpace*, PKGDisplaySpaceData*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d51600 (   0x1c4) window_list_move_from_managed_display_to_managed_display(x_list_struct*, PKGDisplaySpaceData*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d517c4 (    0x8c) managed_display_get_bounds(PKGDisplaySpaceData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d51850 (   0x8bc) pkg_tile_manager_relayout_with_spacer(PKGTileManager*, CGXConnection*, unsigned long long, CGPoint, unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5210c (   0x458) pkg_tile_manager_solve_for_relayout_with_spacer(PKGTileManager const*, unsigned long long, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52564 (   0x3dc) pkg_tile_entry_set_rect_with_connection(PKGTileEntry*, CGRect, CGXConnection*, unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52940 (   0x1a8) pkg_tile_manager_arrange_active_tile(PKGTileManager*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52ae8 (    0x3c) invocation function for block in pkg_tile_manager_set_preferred_first_tile_size(PKGTileManager*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52b24 (    0xac) pkg_preferred_layout_record_create(CGSize, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52bd0 (   0x1a8) pkg_tile_manager_get_active_entry(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52d78 (    0xd4) pkg_tile_manager_set_active_tile_entry(PKGTileManager*, PKGTileEntry*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52e4c (    0xec) pkg_tile_entry_get_tile_divider_rect(PKGTileEntry*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52f38 (     0x8) invocation function for block in pkg_tile_manager_arrange_active_tile(PKGTileManager*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52f40 (    0x5c) managed_space_get_main_window(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52f9c (    0x2c) invocation function for block in pkg_tile_manager_get_active_entry(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d52fc8 (   0x1dc) pkg_tile_entry_set_shape_with_connection(PKGTileEntry*, CGSRegionObject*, CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d531a4 (    0x18) invocation function for block in pkg_tile_manager_get_driving_tile_entry(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d531bc (    0xbc) PKGSpaceGetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53278 (    0x10) invocation function for block in packages_space_set_shape_with_connection(PKGSpace*, CGSRegionObject*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53288 (    0x68) pkg_tile_manager_get_layout_data_for_tile_count(PKGTileManager const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d532f0 (    0x98) invocation function for block in pkg_tile_manager_get_preferred_first_tile_size_for_display_size(PKGTileManager const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53388 (   0x49c) pkg_solver_basis_data_make(PKGTileManagerLayoutData, bool, PKGWindowDataConstraints, double, PKGWindowDataConstraints, double, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53824 (   0x2a0) pkg_tiled_space_solve_basis_data(PKGTiledSpaceLayoutSolverBasisData) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53ac4 (   0x39c) realized_dimensional_constraints_split_allocation(PKGRealizedDimensionalConstraint, PKGRealizedDimensionalConstraint, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53e60 (   0x154) pkg_tile_entry_layout_data_make_with_preferred_width(PKGWindowDataConstraints, CGSize, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d53fb4 (   0x10c) realized_dimensional_constraint_make(double, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d540c0 (   0x148) dimensional_constraint_make(double, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54208 (    0x58) invocation function for block in window_list_move_from_managed_display_to_managed_display(x_list_struct*, PKGDisplaySpaceData*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54260 (    0x4c) window_move_to_managed_display(CGXWindow*, PKGDisplaySpaceData*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d542ac (   0x178) window_move_to_spaces(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54424 (    0xd8) invocation function for block in window_move_to_spaces(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d544fc (   0x184) PKGSpacesAddWindowsWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54680 (    0x84) invocation function for block in packages_space_list_copy_best_workspace_list(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54704 (    0x10) invocation function for block in window_move_to_spaces(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54714 (    0x14) invocation function for block in window_move_to_spaces(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54728 (   0x6f4) invocation function for block in packages_space_set_transform_with_connection(PKGSpace*, CGAffineTransform, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54e1c (    0x6c) invocation function for block in pkg_tile_manager_set_transform_with_connection(PKGTileManager*, CGAffineTransform, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54e88 (    0xc0) invocation function for block in managed_space_set_transform_with_connection(PKGManagedSpace*, CGAffineTransform, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54f48 (    0xb4) pkg_tile_entry_set_transform_with_connection(PKGTileEntry*, CGAffineTransform, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d54ffc (    0x10) invocation function for block in managed_space_move_to_active_managed_display(PKGManagedSpace*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5500c (   0x104) managed_display_get_first_user_space(PKGDisplaySpaceData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55110 (   0x134) managed_display_set_current_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55244 (   0x120) managed_space_order_in(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55364 (    0xa4) invocation function for block in managed_spaces_show(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55408 (    0x54) PKGSpacesShow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5545c (    0x48) invocation function for block in managed_spaces_show(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d554a4 (    0x3c) invocation function for block in managed_display_set_current_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d554e0 (    0x3c) invocation function for block in managed_display_set_current_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5551c (    0x20) invocation function for block in managed_display_get_first_user_space(PKGDisplaySpaceData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5553c (   0x124) invocation function for block in managed_space_remove_non_following_windows(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55660 (    0x5c) invocation function for block in managed_space_remove_non_following_windows(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d556bc (   0x120) managed_spaces_remove_windows(x_list_struct*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d557dc (    0xa4) invocation function for block in managed_spaces_remove_windows(x_list_struct*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55880 (    0x48) invocation function for block in managed_spaces_remove_windows(x_list_struct*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d558c8 (    0x1c) pkg_preferred_layout_record_less(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d558e4 (    0x18) array_block_applier_function(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d558fc (   0x360) pkg_tile_manager_create_tile_entry(PKGTileManager*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55c5c (    0x98) pkg_tile_entry_dictionary_contains_tile_rect(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55cf4 (    0xa0) pkg_tile_entry_dictionary_get_tile_rect(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55d94 (   0x110) pkg_window_data_constraints_make_with_dictionary_representation(__CFDictionary const*, PKGWindowDataConstraints*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55ea4 (    0x70) pkg_tile_entry_set_constraints(PKGTileEntry*, PKGWindowDataConstraints) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55f14 (    0x68) pkg_tile_entry_dictionary_contains_limited_clipping(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55f7c (    0x7c) pkg_tile_entry_dictionary_get_limited_clipping(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d55ff8 (    0xac) pkg_tile_entry_dictionary_contains_owner(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d560a4 (    0x9c) pkg_tile_entry_dictionary_get_owner(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56140 (   0x1c8) pkg_tile_entry_set_owner(PKGTileEntry*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56308 (    0xac) pkg_tile_entry_dictionary_contains_tile_window(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d563b4 (    0x9c) pkg_tile_entry_dictionary_get_tile_window(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56450 (   0x228) pkg_tile_entry_set_tile_window(PKGTileEntry*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56678 (     0x8) invocation function for block in pkg_tile_manager_clear_preferred_layout_preferences(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56680 (    0x98) pkg_tile_entry_window_did_update_constraints(PKGTileEntry*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56718 (    0x3c) deferred_release_window(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56754 (    0x5c) managed_space_get_front_connection(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d567b0 (   0x1ac) PKGManagedSpaceSetFrontConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5695c (   0x380) managed_space_set_front_connection(PKGManagedSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56cdc (    0xb0) post_window_manager_space_front_connection_changed(unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56d8c (    0x80) front_connection_death_notification(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56e0c (    0x20) pkg_tile_entry_owner_died(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d56e2c (   0x658) pkg_tile_entry_replace_with_snapshot_for_connection(PKGTileEntry*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57484 (     0x8) invocation function for block in pkg_tile_entry_replace_with_snapshot_for_connection(PKGTileEntry*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5748c (    0x74) dictionary_get_size_value_for_key(__CFDictionary const*, void const*, CGSize*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57500 (    0x58) pkg_space_dictionary_contains_owner_list(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57558 (   0x174) pkg_space_dictionary_copy_owner_list(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d576cc (    0x20) packages_space_owner_died(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d576ec (   0x490) PKGSpaceDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57b7c (   0x104) pkg_tile_manager_get_entry_for_tile(PKGTileManager const*, PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57c80 (   0x180) pkg_tile_manager_remove_tile_entry(PKGTileManager*, PKGTileEntry*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57e00 (    0x6c) pkg_tile_entry_destroy(PKGTileEntry*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d57e6c (   0x194) managed_space_destroy(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58000 (    0x58) managed_display_add_autospace_and_set_current_if_needed(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58058 (    0xb4) managed_display_add_autospace_if_needed(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5810c (    0x5c) managed_space_set_was_autocreated(PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58168 (   0x194) pkg_tile_manager_set_live_resizing(CGXConnection*, PKGTileManager*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d582fc (   0x1a8) managed_menu_space_clear_menu_data(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d584a4 (   0x160) managed_basic_space_finalize(PKGManagedBasicSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58604 (    0x24) invocation function for block in managed_basic_space_clear_needs_safe_aperture_for_windows(PKGManagedBasicSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58628 (     0xc) invocation function for block in pkg_tile_manager_destroy(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58634 (    0x10) invocation function for block in pkg_tile_manager_set_live_resizing(CGXConnection*, PKGTileManager*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d58644 (    0x84) invocation function for block in pkg_tile_manager_set_live_resizing(CGXConnection*, PKGTileManager*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d586c8 (    0x28) invocation function for block in pkg_tile_manager_get_entry_for_tile(PKGTileManager const*, PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d586f0 (   0x2f0) pkg_tile_entry_create_dictionary(PKGTileEntry const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d589e0 (   0x6ac) packages_space_create_dictionary(PKGSpace const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5908c (    0x54) managed_menu_space_add_values_to_dictionary(PKGManagedMenuSpace*, __CFDictionary*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d590e0 (    0x10) invocation function for block in pkg_tile_manager_dictionary_set_tiles(__CFDictionary*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d590f0 (   0x108) x_list_create_cf_type_array(x_list_struct*, void const* (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d591f8 (    0xe8) invocation function for block in pkg_preferred_layout_records_create_array(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d592e0 (    0xe8) managed_basic_space_add_values_to_dictionary(PKGManagedBasicSpace*, __CFDictionary*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d593c8 (    0x80) pkg_space_dictionary_set_owner_list(__CFDictionary*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59448 (    0xb8) managed_display_copy_identifier(PKGDisplaySpaceData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59500 (    0x5c) invocation function for block in pkg_space_dictionary_set_owner_list(__CFDictionary*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5955c (    0x54) invocation function for block in x_list_create_cf_type_array(x_list_struct*, void const* (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d595b0 (    0x8c) pkg_space_dictionary_set_principal_fs_window_id(__CFDictionary*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5963c (   0x460) PKGSpaceSetValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59a9c (    0x88) managed_space_set_owner_list(PKGManagedSpace*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59b24 (    0x58) pkg_tile_manager_set_reserved_area(PKGTileManager*, PKGReservedArea) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59b7c (    0x3c) pkg_tile_manager_set_inter_tile_spacing(PKGTileManager*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59bb8 (   0x2e0) managed_menu_space_set_principal_full_screen_window(PKGManagedMenuSpace*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59e98 (     0x8) __PKGSpaceSetValues_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59ea0 (    0x1c) dictionary_block_applier_function(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59ebc (    0xac) session_space_data_schedule_lifecycle_reporting(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d59f68 (   0x2f8) session_space_data_lifecycle_reporting_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a260 (    0xc8) invocation function for block in session_space_data_report_lifecycle_stats(PKGSessionSpaceData*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a328 (    0xb8) invocation function for block in session_space_data_report_lifecycle_stats(PKGSessionSpaceData*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a3e0 (     0x8) __PKGSpaceRemoveValuesForKeys_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a3e8 (    0x94) PKGSpaceCopyOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a47c (   0x10c) managed_space_copy_owner_list(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a588 (    0x68) invocation function for block in managed_space_copy_owner_list(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a5f0 (    0xbc) PKGSpaceSetOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a6ac (    0x54) PKGSpaceOrderIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a700 (    0xe8) packages_space_copy_workspaces(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a7e8 (    0x48) invocation function for block in packages_space_copy_workspaces(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a830 (    0x64) PKGSpaceAddWindowWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a894 (    0x64) PKGSpaceRemoveWindowWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a8f8 (    0xc4) PKGSpaceAddWindowsAndRemoveFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5a9bc (   0x2d0) PKGSpaceSetShapeWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ac8c (    0x1c) invocation function for block in pkg_tile_manager_update_shape_with_connection(PKGTileManager*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5aca8 (    0xa4) invocation function for block in managed_space_set_shape_with_connection(PKGManagedSpace*, CGSRegionObject*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ad4c (   0x1c4) PKGSpaceSetTransformWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5af10 (    0xfc) PKGSpaceSetAlphaWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b00c (   0x134) managed_space_set_alpha_with_connection(PKGManagedSpace*, float, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b140 (   0x108) invocation function for block in packages_space_set_alpha_with_connection(PKGSpace*, float, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b248 (    0x10) invocation function for block in managed_basic_space_set_alpha_overriding_connection(PKGManagedBasicSpace*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b258 (    0xac) invocation function for block in managed_space_set_alpha_with_connection(PKGManagedSpace*, float, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b304 (    0x7c) PKGSpaceGetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b380 (   0x11c) PKGSpaceSetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b49c (    0xa4) invocation function for block in managed_space_set_absolute_level(PKGManagedSpace*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b540 (    0x10) invocation function for block in packages_space_set_absolute_level(PKGSpace*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b550 (    0x9c) PKGSpaceSetOrderingWeight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b5ec (    0xd0) __PKGSpaceSetOrderingWeight_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b6bc (    0x98) invocation function for block in packages_space_copy_window_list_with_tag(PKGSpace const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b754 (    0x10) __PKGSpaceForEachWindowWithTagBit_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b764 (    0x54) PKGSpacesHide [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b7b8 (    0x5c) managed_space_get_key_window(PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b814 (    0x74) managed_space_set_key_window(PKGManagedSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b888 (    0xe4) managed_space_set_main_window(PKGManagedSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5b96c (    0xe4) PKGManagedSpaceAcceptsFrontConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ba50 (   0x160) PKGManagedSpaceContainsTileOwnedBy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bbb0 (    0x4c) __PKGManagedSpaceContainsTileOwnedBy_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bbfc (    0x5c) __PKGManagedSpaceInitializeFrontConnectionForWindowManager_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bc58 (    0x9c) PKGManagedMenuSpaceSetSafeAreaInsetShieldWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bcf4 (    0x60) PKGManagedMenuSpaceSetOffScreenWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bd54 (    0x40) PKGManagedMenuSpaceGetMenuBarReveal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5bd94 (   0x51c) managed_menu_space_synchronized_set_menu_bar_reveal(PKGManagedMenuSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c2b0 (   0x21c) invocation function for block in managed_menu_space_set_menu_bar_reveal(PKGManagedMenuSpace*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c4cc (   0x128) invocation function for block in managed_menu_space_set_menu_bar_reveal(PKGManagedMenuSpace*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c5f4 (    0x58) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c64c (    0xac) PKGManagedMenuSpaceWalkMenuBarCompanionWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c6f8 (    0x44) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c73c (    0x30) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c76c (   0x168) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c8d4 (    0x9c) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c970 (    0x60) managed_tiled_space_move_menu_bar(unsigned long long, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5c9d0 (    0x5c) managed_tiled_space_complete_coordinated_reveal(unsigned long long, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ca2c (    0x44) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ca70 (    0x5c) __destroy_helper_block_e8_32b40r48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cacc (    0x70) __copy_helper_block_e8_32b40r48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cb3c (    0x70) invocation function for block in managed_tiled_space_coordinate_menu_bar_reveal(PKGManagedTiledSpace*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cbac (    0x20) __PKGManagedMenuSpaceWalkMenuBarCompanionWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cbcc (    0x98) PKGSpaceSetMenuBarOverrideMaximumReveal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cc64 (    0x60) __PKGSpaceSetMenuBarOverrideMaximumReveal_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ccc4 (     0xc) __PKGSpaceSetMenuBarOverrideMaximumReveal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ccd0 (    0x9c) PKGManagedMenuSpaceUsesStationaryMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cd6c (    0xa0) PKGManagedMenuSpaceGetMenuBarDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ce0c (    0x34) PKGGetSpaceManagementMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ce40 (    0x98) PKGSpaceSetSafeApertureOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ced8 (    0x64) __PKGSpaceSetSafeApertureOverride_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cf3c (     0xc) __PKGSpaceSetSafeApertureOverride_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cf48 (    0x28) __PKGManagedMenuSpaceGetCompanionWindowOffset_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5cf70 (    0xe8) PKGManagedMenuSpaceGetMaximumCompanionWindowOffset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d058 (    0x20) __PKGManagedMenuSpaceGetMaximumCompanionWindowOffset_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d078 (   0x13c) PKGManagedSpaceSetFrontPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d1b4 (    0x70) PKGProcessSetDefaultManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d224 (    0x64) PKGProcessSetSticky [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d288 (   0x4b8) PKGSetSpaceManagementMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5d740 (   0x41c) managed_display_set_pkg_display(PKGDisplaySpaceData*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5db5c (     0x8) invocation function for block in session_data_set_management_mode_per_desktop(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5db64 (    0x90) invocation function for block in session_data_set_management_mode_per_display(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5dbf4 (     0x8) invocation function for block in session_data_set_management_mode_per_display(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5dbfc (   0x370) session_data_activate_pkg_display(PKGSessionSpaceData*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5df6c (   0x134) managed_display_list_find_pkg_display(x_list_struct*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e0a0 (   0x18c) managed_space_restore_from_persistence_dictionary(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e22c (    0x64) managed_display_make_managed_space_preferred_after(PKGDisplaySpaceData*, PKGManagedSpace*, PKGManagedSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e290 (   0x334) PKGWindowsMoveToManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e5c4 (   0x114) managed_spaces_hide(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e6d8 (    0x3c) invocation function for block in managed_display_get_space_matching_id(PKGDisplaySpaceData const*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e714 (    0xa4) invocation function for block in managed_spaces_hide(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e7b8 (    0x48) invocation function for block in managed_spaces_hide(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e800 (    0x74) __PKGWindowsMoveToManagedSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5e874 (   0x194) __PKGWindowsMoveToManagedSpace_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ea08 (    0x7c) managed_display_remove_collapsed_window(PKGDisplaySpaceData*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ea84 (    0x6c) invocation function for block in window_filter_managed_space_list_to_allowable(CGXWindow*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5eaf0 (    0xec) x_list_insert_after(x_list_struct*, void*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ebdc (    0x9c) managed_displays_less_than(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ec78 (    0x38) invocation function for block in managed_display_list_find_pkg_display(x_list_struct*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ecb0 (     0x8) invocation function for block in session_data_set_management_mode_per_display(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ecb8 (    0x38) invocation function for block in session_data_set_management_mode_per_display(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ecf0 (   0x1ec) session_data_deactivate_managed_display(PKGSessionSpaceData*, PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5eedc (   0x37c) managed_display_collapse_to_target_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f258 (   0x194) managed_space_create_dictionary(PKGManagedSpace const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f3ec (    0xe8) packages_space_copy_primary_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f4d4 (    0x5c) invocation function for block in managed_spaces_add_windows(x_list_struct*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f530 (    0x6c) invocation function for block in managed_display_collapse_to_target_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f59c (    0x50) invocation function for block in window_list_create_collapsing_spaces(PKGManagedSpace*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f5ec (    0xa4) invocation function for block in packages_space_copy_primary_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f690 (    0x48) invocation function for block in packages_space_copy_primary_window_list(PKGSpace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f6d8 (   0x130) managed_display_set_is_animating(CGXConnection*, PKGDisplaySpaceData*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5f808 (   0x308) invocation function for block in managed_display_set_pkg_display(PKGDisplaySpaceData*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fb10 (    0x10) invocation function for block in managed_space_update_active_managed_display_bounds(PKGManagedSpace*, CGRect, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fb20 (    0x40) invocation function for block in managed_display_set_is_animating(CGXConnection*, PKGDisplaySpaceData*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fb60 (    0xdc) PKGDisplaySetIsAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fc3c (     0xc) __PKGDisplaySetIsAnimating_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fc48 (     0x8) invocation function for block in session_data_set_management_mode_per_desktop(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fc50 (    0x40) invocation function for block in session_data_set_management_mode_per_desktop(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fc90 (   0x100) managed_display_list_create_array(x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5fd90 (   0x1e4) invocation function for block in managed_display_list_create_array(x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d5ff74 (   0x100) managed_space_list_create_array(x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60074 (    0x88) invocation function for block in managed_space_list_create_id_array(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d600fc (    0x64) invocation function for block in managed_space_list_create_array(x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60160 (    0xc0) managed_display_move_space_to_index(PKGDisplaySpaceData*, PKGManagedSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60220 (    0xc8) x_list_insert_at_index(x_list_struct*, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d602e8 (    0x74) managed_space_bind_to_active_display(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6035c (   0x104) managed_display_find_preferred_managed_space_before_active_managed_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60460 (    0x7c) invocation function for block in managed_display_find_preferred_managed_space_before_active_managed_space(PKGDisplaySpaceData*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d604dc (    0x50) PKGDisplaySetCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6052c (    0x68) __PKGResetMenuBarVisibilityOverrideForAllDisplays_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60594 (    0x30) PKGDisplayAnticipatedSwitchSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d605c4 (    0x60) PKGDisplaySetAnticipatedSwitch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60624 (     0x8) invocation function for block in session_space_data_destroy(PKGSessionSpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6062c (   0x204) managed_display_destroy(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60830 (    0x54) invocation function for block in managed_display_destroy(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60884 (    0x28) invocation function for block in managed_display_destroy(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d608ac (    0x50) invocation function for block in managed_display_destroy(PKGDisplaySpaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d608fc (   0x1c8) invocation function for block in managed_display_list_create_persistence_array(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60ac4 (   0x1b8) lifetime_stats_data_create_dictionary(PKGLifetimeStatsData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60c7c (    0x10) invocation function for block in managed_display_create_persistence_dictionary_with_identifier(PKGDisplaySpaceData*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60c8c (    0x9c) invocation function for block in managed_display_list_restore_from_persistence_array(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60d28 (    0x74) invocation function for block in managed_display_list_restore_from_persistence_array(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60d9c (    0xb4) invocation function for block in session_data_restore_persistence_dictionary(PKGSessionSpaceData*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60e50 (   0x11c) lifetime_stats_data_restore_from_dictionary(PKGLifetimeStatsData*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d60f6c (    0x98) invocation function for block in session_data_restore_persistence_dictionary(PKGSessionSpaceData*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61004 (   0x108) PKGInitializeWindowSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6110c (    0x54) window_should_follow_user(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61160 (   0x38c) window_follow_user(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d614ec (    0x5c) window_preferred_spaces_changed(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61548 (   0x2cc) invocation function for block in window_follow_user(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61814 (     0x8) invocation function for block in session_data_restore_persistence_dictionary(PKGSessionSpaceData*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6181c (     0x8) invocation function for block in session_data_restore_persistence_dictionary(PKGSessionSpaceData*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61824 (    0x54) PKGWindowGetDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61878 (    0x74) __PKGWindowsAssignToDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d618ec (    0x14) __PKGWindowsAssignToDisplay_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61900 (   0x204) PKGWindowsReassociateSpacesByGeometry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61b04 (    0x8c) __PKGWindowsReassociateSpacesByGeometry_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61b90 (    0x14) __PKGWindowsReassociateSpacesByGeometry_block_invoke.50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61ba4 (   0x10c) PKGWindowReassociateSpacesByGeometryIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61cb0 (    0x54) window_wants_automatic_space_reassociation(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61d04 (    0xe0) __PKGWindowReassociateSpacesByGeometryIfNeeded_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61de4 (    0x8c) PKGUpdateWindowSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61e70 (     0x8) __PKGUpdateWindowSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61e78 (    0xac) WSWindowUpdateStickyByBinding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d61f24 (    0xfc) window_list_update_sticky_by_binding(x_list_struct*, bool, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d62020 (    0xcc) invocation function for block in window_list_update_sticky_by_binding(x_list_struct*, bool, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d620ec (   0x148) window_list_update_default_space(x_list_struct*, PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d62234 (   0x128) invocation function for block in window_list_update_default_space(x_list_struct*, PKGManagedSpace*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6235c (    0x60) __WSConnectionChangedWindowsDefaultToSticky_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d623bc (    0x80) __WSConnectionChangedDefaultSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6243c (   0x130) PKGFollowUser [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6256c (    0x40) PKGSpace_global_first_window_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d625ac (   0x180) PKGSessionSpaceDataInit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6272c (   0x3d8) invocation function for block in PKGSessionSpaceDataInit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d62b04 (   0x1fc) session_data_create_active_managed_displays_debug_description(PKGSessionSpaceData*, __CFString const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d62d00 (   0x418) invocation function for block in session_data_handle_display_config_change(PKGSessionSpaceData*, PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63118 (    0x94) invocation function for block in session_data_handle_display_config_change(PKGSessionSpaceData*, PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d631ac (   0x4ac) abort_for_bad_display_update(PKGSessionSpaceData*, __CFString const*, PKGDisplayOperationGroup const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63658 (    0xb0) invocation function for block in pkg_display_operation_group_copy_old_displays(PKGDisplayOperationGroup const*, PKGDisplayListType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63708 (   0x164) pkg_display_list_copy_debug_description(x_list_struct*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6386c (   0x1b8) invocation function for block in pkg_display_operation_group_copy_description(PKGDisplayOperationGroup const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63a24 (   0x110) invocation function for block in pkg_display_list_copy_debug_description(x_list_struct*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63b34 (     0x4) pkg_displays_less_than(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63b38 (   0x1e4) invocation function for block in session_data_create_active_managed_displays_debug_description(PKGSessionSpaceData*, __CFString const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63d1c (    0x94) invocation function for block in session_data_handle_display_config_change(PKGSessionSpaceData*, PKGDisplayOperationGroup const*, PKGDisplayOperationGroup const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63db0 (    0x38) PKGSpace_did_create_session_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63de8 (   0x100) PKGSpace_window_will_terminate_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d63ee8 (   0x134) invocation function for block in PKGSpace_window_will_terminate_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6401c (    0x20) invocation function for block in PKGSpace_window_will_terminate_handler(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6403c (    0xa0) PKGSpace_ordered_in_spaces_changed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d640dc (   0x174) __PKGSpaceNotificationDictionaryAddInfoForSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64250 (    0xf4) PKGDumpSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64344 (   0x214) fprint_cfobject_with_label(__sFILE*, void const*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64558 (    0xcc) __PKGActiveUserSpacesExceedDisplays_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64624 (    0x48) __PKGActiveUserSpacesExceedDisplays_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6466c (    0x8c) __PKGSpacesWindowDidUpdateConstraints_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d646f8 (   0x108) post_managed_space_window_membership_notification(PKGManagedSpace*, bool, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64800 (    0x80) PKGSpaceGetRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64880 (   0x214) managed_tiled_space_did_attach_subspace(PKGManagedTiledSpace const*, PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64a94 (    0x10) invocation function for block in managed_tiled_space_did_attach_subspace(PKGManagedTiledSpace const*, PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64aa4 (   0x3d4) PKGTileSpaceMoveToSpaceAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64e78 (    0x20) invocation function for block in pkg_tile_manager_flip_preferred_layout_preferences(PKGTileManager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64e98 (    0x4c) invocation function for block in pkg_tile_entry_moved_to_managed_space(PKGTileEntry*, PKGManagedSpace*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64ee4 (    0x4c) invocation function for block in pkg_tile_entry_moved_to_managed_space(PKGTileEntry*, PKGManagedSpace*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64f30 (     0x8) invocation function for block in pkg_tile_entry_moved_to_managed_space(PKGTileEntry*, PKGManagedSpace*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64f38 (    0x60) PKGManagedSpaceGetTileSpaceAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64f98 (    0x50) PKGTileSpaceGetPrimaryWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d64fe8 (   0x120) PKGTileSpaceSetMenuBarCompanionWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65108 (   0x184) pkg_tile_manager_get_vertical_spacer_index_for_coordinate(PKGTileManager*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6528c (    0x58) invocation function for block in pkg_tile_manager_get_vertical_spacer_index_for_coordinate(PKGTileManager*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d652e4 (    0xac) PKGManagedSpaceSetDividerWindowAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65390 (    0xd8) __PKGManagedSpaceSetDividerWindowAlpha_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65468 (    0x10) __PKGManagedSpaceSetDividerWindowAlpha_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65478 (   0x254) pkg_tile_manager_can_create_tile(PKGTileManager*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d656cc (    0x6c) invocation function for block in pkg_tile_manager_can_create_tile(PKGTileManager*, CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65738 (     0x8) __PKGManagedSpaceMoveSpacersToPoint_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65740 (     0x8) __PKGTileSpaceMoveSpacersForSize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65748 (     0x8) __PKGManagedSpaceCopyTileSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65750 (   0x11c) PKGSpaceFinishedResizeForRectWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6586c (   0x550) post_event_tap_data(CGXEventTap*, unsigned int, SLSEventRecord*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65dbc (    0x84) release_event_buffer(CGXEventTap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65e40 (    0xc0) traceTapEvent(SLSEventRecord const*, unsigned int, CGXEventTap const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65f00 (    0x8c) encode_event_tap_data_callback(void const*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d65f8c (    0x7c) CGXFilterEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66008 (    0x78) head_pointer_for_tap_type(CGEventTapLocation) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66080 (   0x5b0) add_events_to_tap(CGXEventTap*, SLSEventRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66630 (    0x58) flush_to_next_tap(CGXEventTap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66688 (   0x1c8) post_events_after_tap_id(unsigned int, unsigned int, SLSEventRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66850 (    0x30) send_encoded_event(void const*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66880 (   0x13c) invocation function for block in secure_event_permitted() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d669bc (   0x158) CGXFilterEventToConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66b14 (   0x2a8) WSEventTapAddTapsToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d66dbc (   0x498) post_filtered_event_tap_data(unsigned int, CGSPostEventStyle, unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67254 (    0xe8) unlink_and_free_tap(CGXEventTap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6733c (     0x4) tap_port_died(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67340 (   0x138) release_all_taps_matching_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67478 (   0x10c) fetch_tap_owner_flags() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67584 (    0x44) generate_new_tap_id() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d675c8 (    0xd8) foreground_versioned_pid_token_set() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d676a0 (    0x88) tap_update_foreground_state(CGXEventTap*, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67728 (   0x198) enable_tap(CGXEventTap*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d678c0 (    0x4c) enable_end_of_chain(CGXEventTap*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6790c (    0xd4) foregroundChangedProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d679e0 (     0x4) WS::Displays::Display::set_is_fake_hmd(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d679e4 (     0x8) WS::Displays::Display::is_fake_hmd() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d679ec (     0x4) WS::Displays::Display::set_hmd_enabled(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d679f0 (     0x8) WS::Displays::Display::is_hmd_enabled() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d679f8 (     0xc) WS::Displays::Display::label() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a04 (     0x4) WS::Displays::Display::reconfig_for_hid_features() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a08 (     0x4) WS::Displays::Display::deschedule_idle_callback() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a0c (     0x4) WS::Displays::Display::schedule_idle_callback() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a10 (     0x8) WS::Displays::Display::detaching_display() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a18 (     0x4) WS::Displays::Display::early_signal_shared_event() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a1c (     0x4) WS::Displays::Display::update_shield() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a20 (     0x4) WS::Displays::Display::lower_shield() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a24 (     0x4) WS::Displays::Display::raise_shield(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a28 (     0x4) WS::Displays::Display::invalidate_display_attachment_seed() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a2c (     0x4) WS::Displays::Display::commit_brightness() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a30 (     0x4) WS::Displays::Display::set_requested_headroom(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a34 (     0x8) WS::Displays::Display::requested_headroom() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a3c (     0x8) WS::Displays::Display::set_reference_headroom(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a44 (     0x8) WS::Displays::Display::set_potential_headroom(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a4c (     0x8) WS::Displays::Display::set_brightness_limit(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a54 (     0x8) WS::Displays::Display::brightness_limit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a5c (     0x8) WS::Displays::Display::is_calibration_in_progress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a64 (     0x4) WS::Displays::Display::abort_contrast_enhancer_ramp(float*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a68 (     0x4) WS::Displays::Display::set_contrast_enhancer_strength(float, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a6c (     0x8) WS::Displays::Display::contrast_enhancer_strength() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a74 (     0x4) WS::Displays::Display::abort_white_point_ramp(float*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a78 (     0x4) WS::Displays::Display::set_white_point(float const*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a7c (     0x8) WS::Displays::Display::last_frame_apt_padded() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a84 (     0x8) WS::Displays::Display::is_apt() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a8c (     0x8) WS::Displays::Display::is_AS_J290() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a94 (     0x4) WS::Displays::Display::request_to_remove_privacy_indicator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67a98 (     0x8) WS::Displays::Display::set_ca_indicator(__IOSurface*, CGPoint) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67aa0 (     0x8) WS::Displays::Display::supports_ca_indicator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67aa8 (     0x8) WS::Displays::Display::is_ca_indicator_active() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ab0 (     0x8) WS::Displays::Display::is_ca_ready_for_hw_indicator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ab8 (     0x8) WS::Displays::Display::is_safe_aperture_implicitly() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ac0 (     0x8) WS::Displays::Display::is_safe_aperture_via_direct() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ac8 (     0x8) WS::Displays::Display::is_safe_aperture() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ad0 (     0x8) WS::Displays::Display::get_safe_aperture_mode_direct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ad8 (     0x8) WS::Displays::Display::set_safe_aperture_mode_direct(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ae0 (     0x4) WS::Displays::Display::override_safe_aperture_mode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67ae4 (     0x8) WS::Displays::Display::supports_safe_aperture_mode() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67aec (    0x24) WS::Displays::Display::fullscreen_content_bounds() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b10 (     0x4) WS::Displays::Display::set_origin(CGPoint const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b14 (    0x2c) WS::Displays::Manager::deschedule_update_power_assertions_callback(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b40 (     0x4) WS::Displays::Manager::pv_save_state() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b44 (     0x4) WS::Displays::Manager::invalidate_display_attachment_seed(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b48 (     0x8) WS::Displays::Manager::mig_Invoke74155833(unsigned int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b50 (     0x8) WS::Displays::Manager::mig_Invoke77298158(unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b58 (     0x4) WS::Displays::Manager::perform_deferred_configuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b5c (     0x8) WS::Displays::Manager::initial_configuration_was_deferred() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b64 (     0x4) WS::Displays::Manager::brightness_timeouts_request(int, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b68 (     0x4) WS::Displays::Manager::brightness_policy_request(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b6c (     0x4) WS::Displays::Manager::bulk_brightness_request(int, __CFDictionary const*, unsigned long long, unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b70 (    0x14) apply_boot_record_is_for_display(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67b84 (    0x78) cinematic_boot_end_coredisplay_only [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67bfc (    0x8c) apply_display_boot_record_free(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67c88 (     0x4) WS::Displays::Manager::continue_display_freeze() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67c8c (     0x4) WS::Displays::Manager::invalidate_state_seed(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67c90 (    0x4c) WSShieldDisplayForSleepIfNotAlreadyShielded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67cdc (   0x304) shield_display_if_not_already_shielded(CGXDisplayDevice*, int, bool, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d67fe0 (    0x2c) WSSelectiveSharingEnabledForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6800c (     0xc) WSShieldDisplayForReconfigureIfNotAlreadyShielded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d68018 (   0x660) WSUnshieldDisplayNoMatterWhoShieldedIt [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d68678 (    0x60) WSRefreshDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d686d8 (    0xf4) WSRenderScaledIOSurfaceToDest [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d687cc (    0x90) WSSetCurrentSessionDisplayData_CoreDisplayOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6885c (     0xc) WSGetSessionDisplayData_CoreDisplayOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d68868 (    0x24) WSGetCurrentSessionDisplayData_CoreDisplayOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6888c (    0x3c) CGXUpdateDesktopOnDisplay_CoreDisplayOnly [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d688c8 (   0x1d0) cinematic_boot_register_display_coredisplay_only [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d68a98 (   0x344) device_generate_desktop_screenshot_coredisplay_only [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d68ddc (   0x390) device_composite_windows(CGXDisplayDevice*, CGXWindowSubArray, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6916c (   0x100) image_info_for_device(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6926c (    0x74) vm_allocate_buffer_for_image_info(device_image_info, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d692e0 (   0x2b4) device_generate_lock_screen_screenshot_coredisplay_only [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d69594 (   0x278) window_array_append_visible_group(CGXWindowArray*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6980c (    0x10) invocation function for block in window_list_sort_by_visibility(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6981c (   0x2c8) _CGXRegisterCursorWithData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d69ae4 (   0x22c) _CGXRegisterCursorImages [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d69d10 (   0x168) _CGXDisplayStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d69e78 (   0x10c) _CGXContentStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d69f84 (   0x390) _CGXContentStreamUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a314 (     0x8) virtual_display_connection_death [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a31c (    0x60) SLSSnappingInfoRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a37c (     0xc) SLSSnappingInfoGetSnappedEdges [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a388 (     0xc) SLSSnappingInfoSetSnappedEdges [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a394 (   0x160) SLSSnappingInfoEnumerateSnappingRects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a4f4 (    0x20) __SLSSnappingInfoEnumerateSnappingRects_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a514 (   0x19c) SLSSnappingInfoGetCurrentSnappedEdgesForRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a6b0 (    0x48) __SLSSnappingInfoGetCurrentSnappedEdgesForRect_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6a6f8 (   0x340) CGGetSnappedEdgesForRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6aa38 (   0x6cc) _NSIsWithinSnappingDistance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b104 (    0x38) SLSSnappingInfoGetCurrentVelocity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b13c (     0xc) SLSSnappingInfoSetIsForResizing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b148 (     0x8) SLSSnappingInfoSnapOriginWithFrame [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b150 (   0x658) _CGSnappingInfoSnapOriginWithFrameOnEdges [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b7a8 (   0x24c) CGSnappingInfoCheckIfCanResnap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6b9f4 (   0x264) ___CGSnappingInfoSnapOriginWithFrameOnEdges_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6bc58 (   0xc68) _CGSnappingInfoEvaluateGuide [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6c8c0 (    0x98) SLSSnappingInfoAddMovement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6c958 (    0x2c) SLSSnappingInfoResetMovement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6c984 (   0x1ac) SLSSnappingInfoSnapFrameForResizing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6cb30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d6cb40 (   0x218) SLSSnappingInfoGetSizeSnapRectForFrame [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6cd58 (    0x68) __SLSSnappingInfoGetSizeSnapRectForFrame_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6cdc0 (     0xc) SLSSnappingInfoGetLastSnappedRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6cdcc (    0xb4) SLSSnappingInfoSetPrefs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ce80 (    0xc0) __SLSSnappingInfoSetPrefs_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6cf40 (   0x578) SLSSnappingInfoCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d4b8 (    0xe4) CGXRequestNotificationsForWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d59c (   0x19c) CGXPostWindowNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d738 (    0x78) windowGeometryHousekeeping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d7b0 (   0x174) SLPerformWithVMAllocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d924 (    0xc8) CGSKeyCodeToCharCodeViaKeyMap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6d9ec (    0x78) NextNum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6da64 (    0x58) x_list_free_b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6dabc (    0x90) x_list_filter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6db4c (   0x468) MetalCompositeSimpleColorLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6dfb4 (    0xb4) CGXCursorCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e068 (    0x28) __CGXCursorGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e090 (     0x8) cursor_copy_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e098 (    0x9c) cursor_copy_format_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e134 (    0x50) cursor_finalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e184 (   0x138) CGXCursorAddCursorBitmap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e2bc (    0x20) compare_cursor_instances_by_area [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e2dc (    0x6c) CGXCursorGetSourceCursorInstanceAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e348 (   0x698) CGXCursorCreateCursorInstance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6e9e0 (    0x60) WS::set_layer_defaults(CALayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ea40 (    0x64) WS::CAWindowContentUpdateState::~CAWindowContentUpdateState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6eaa4 (    0x60) std::__1::__tree<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6eb04 (    0x50) WS::CAWindowContentUpdateState::release_allocated_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6eb54 (    0xf4) WS::CAWindowContentUpdateState::reset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ec48 (    0x44) WS::CAWindowContent::release_background_blur_layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ec8c (    0x44) WS::CAWindowContent::release_background_blur_mask_layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ecd0 (    0x44) WS::CAWindowContent::release_client_content_portal_layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ed14 (   0x228) WS::CAWindowContent::~CAWindowContent() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6ef3c (    0xfc) WS::CAWindowContent::set_is_context_visible(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6f038 (    0xa4) WS::CAWindowContent::disable_context_background_blur() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6f0dc (   0x488) invocation function for block in WS::CAWindowContent::persist_context_drag_fade() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6f564 (   0x828) WS::CAWindowContent::finish_binding_layer_host_shapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6fd8c (   0x144) invocation function for block in WS::CAWindowContent::finish_binding_layer_host_shapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d6fed0 (   0x28c) WS::CAWindowContent::update_layer_host_bindings_values() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7015c (   0x7fc) invocation function for block in WS::CAWindowContent::finish_binding_layer_host_shapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d70958 (    0x4c) invocation function for block in WS::CAWindowContent::finish_binding_layer_host_shapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d709a4 (    0xc8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned long long>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long long>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, unsigned long long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long long>>>::__emplace_unique_key_args<unsigned int, unsigned int const&, unsigned int>(unsigned int const&, unsigned int const&, unsigned int&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d70a6c (    0xcc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, std::__1::__tree_node<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WS::CFRef<CGSRegionObject*>>>>::__emplace_unique_key_args<unsigned int, unsigned int const&, WS::CFRef<CGSRegionObject*>>(unsigned int const&, unsigned int const&, WS::CFRef<CGSRegionObject*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d70b38 (    0xcc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, CGRect>, std::__1::__tree_node<std::__1::__value_type<unsigned int, CGRect>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, CGRect>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGRect>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGRect>>>::__emplace_unique_key_args<unsigned int, unsigned int&, CGRect&>(unsigned int const&, unsigned int&, CGRect&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d70c04 (   0x6a4) WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d712a8 (    0x58) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d71300 (   0xb68) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, WS::CALayerHostBindingInfo*>(WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, std::__1::iterator_traits<WS::CALayerHostBindingInfo*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d71e68 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d71e80 (    0xd0) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d71f50 (    0x64) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d71fb4 (    0xac) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72060 (    0xa8) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72108 (    0x98) invocation function for block in WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d721a0 (   0x304) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, WS::CALayerHostBindingInfo*>(WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d724a4 (   0x218) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, WS::CALayerHostBindingInfo*>(WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d726bc (   0x2b4) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, WS::CALayerHostBindingInfo*>(WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72970 (   0x2a8) bool std::__1::__insertion_sort_incomplete<WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&, WS::CALayerHostBindingInfo*>(WS::CALayerHostBindingInfo*, WS::CALayerHostBindingInfo*, WS::CAWindowContent::update_layer_host_bindings_tree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72c18 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d72c30 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::CALayerHostBindingInfo>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::CALayerHostBindingInfo>>(std::__1::allocator<WS::CALayerHostBindingInfo>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72c7c (    0x2c) bool std::__1::__equal_to::operator()[abi:v160006]<std::__1::pair<unsigned int const, CGRect>, std::__1::pair<unsigned int const, CGRect>>(std::__1::pair<unsigned int const, CGRect> const&, std::__1::pair<unsigned int const, CGRect> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72ca8 (    0x64) std::__1::__tree<std::__1::__value_type<unsigned int, CGRect>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGRect>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGRect>>>::swap(std::__1::__tree<std::__1::__value_type<unsigned int, CGRect>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGRect>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGRect>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72d0c (    0xc8) WS::CAWindowContent::hit_test(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72dd4 (   0x154) WS::CAWindowContent::clip_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72f28 (    0x40) WS::set_cfstring(__CFString const*&, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d72f68 (    0xd0) QuartzCoreLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73038 (    0xfc) getCARenderUpdateSetIsSnapshotSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73134 (    0xb8) invocation function for block in getCARenderUpdateSetIsSnapshotSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d731ec (    0x74) invocation function for block in QuartzCoreLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73260 (    0x90) WS::CAWindowContent::finish_render_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d732f0 (    0xa8) WS::CAWindowContent::copy_windowserver_aware_blurs(_CARenderUpdateBackdropLayerEntry**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73398 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>>(std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d733d0 (    0x54) std::__1::__split_buffer<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>, std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73424 (    0xc8) CAWindowContentSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d734ec (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d73504 (   0x704) WindowFreeze::Update(CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73c08 (    0x84) WindowFreeze::~WindowFreeze() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73c8c (    0xfc) WindowFreeze::UpdateTextureScale() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d73d88 (   0x2e8) WSWindowFreezeCopyOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74070 (     0xc) SLSDisplayGetPresetInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7407c (     0xc) SLSDisplayGetCalibrationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74088 (   0x118) SLSDisplayGetCalibrationInfoWithLuminanceScale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d741a0 (   0x1cc) invocation function for block in (anonymous namespace)::Registry::add_color_space(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7436c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGColorSpace*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGColorSpace*>>(std::__1::allocator<CGColorSpace*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d743a4 (    0x10) SLSSetWindowDidOrderInOnNonCurrentManagedSpacesOnlyNotificationBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d743b4 (    0x10) SLSSetWindowDidOrderOutOnNonCurrentManagedSpacesNotificationBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d743c4 (    0xa4) SLSResetWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74468 (   0x100) SLSWindowServerClientResetWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74568 (    0xb4) __SLSWindowServerClientResetWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7461c (    0xbc) SLSAddWindowsToSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d746d8 (   0x108) SLSWindowServerClientAddWindowsToSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d747e0 (    0xf8) __SLSWindowServerClientAddWindowsToSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d748d8 (    0xc8) __SLSWindowServerClientAddWindowsToSpaces_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d749a0 (    0xbc) SLSRemoveWindowsFromSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74a5c (   0x108) SLSWindowServerClientRemoveWindowsFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74b64 (    0xf8) __SLSWindowServerClientRemoveWindowsFromSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74c5c (    0xc8) __SLSWindowServerClientRemoveWindowsFromSpaces_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74d24 (    0xc8) SLSSpaceAddWindowsAndRemoveFromSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74dec (   0x114) SLSWindowServerClientSpaceAddWindowsAndRemoveFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d74f00 (   0x118) __SLSWindowServerClientSpaceAddWindowsAndRemoveFromSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75018 (    0xa4) SLSWillSwitchSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d750bc (   0x100) SLSWindowServerClientWillSwitchSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d751bc (    0xb0) __SLSWindowServerClientWillSwitchSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7526c (    0xa4) SLSShowSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75310 (   0x100) SLSWindowServerClientShowSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75410 (    0xbc) __SLSWindowServerClientShowSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d754cc (    0xa4) SLSHideSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75570 (   0x100) SLSWindowServerClientHideSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75670 (    0xbc) __SLSWindowServerClientHideSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7572c (     0x8) SLSSetDefaultSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75734 (    0xdc) SLSCopySpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75810 (   0x248) SLSWindowServerClientCopySpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75a58 (   0x23c) get_space_state_snapshot [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75c94 (    0xe8) SLSCopySpacesForWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75d7c (   0x138) SLSWindowServerClientCopySpacesForWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d75eb4 (   0x1dc) __SLSWindowServerClientCopySpacesForWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76090 (   0x120) SLSCopyWindowsWithOptionsAndTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d761b0 (   0x16c) SLSWindowServerClientCopyWindowsWithOptionsAndTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7631c (   0x1e0) __SLSWindowServerClientCopyWindowsWithOptionsAndTags_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d764fc (   0x120) SLSCopyWindowsWithOptionsAndTagsAndSpaceOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7661c (   0x204) SLSWindowServerClientCopyWindowsWithOptionsAndTagsAndSpaceOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76820 (    0xdc) SLSCopyAssociatedWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d768fc (   0x1c8) SLSWindowServerClientCopyAssociatedWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76ac4 (    0xe0) SLSSpaceCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76ba4 (    0xf4) SLSWindowServerClientSpaceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76c98 (   0x1b8) __SLSWindowServerClientSpaceCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76e50 (   0x13c) SLSSpaceDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d76f8c (    0xdc) SLSSpaceCopyValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77068 (   0x1c4) SLSWindowServerClientSpaceCopyValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7722c (    0xd8) SLSSpaceSetValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77304 (    0xe8) SLSWindowServerClientSpaceSetValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d773ec (    0xb4) __SLSWindowServerClientSpaceSetValues_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d774a0 (    0xd8) SLSSpaceRemoveValuesForKeys [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77578 (    0xe8) SLSWindowServerClientSpaceRemoveValuesForKeys [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77660 (    0xb4) __SLSWindowServerClientSpaceRemoveValuesForKeys_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77714 (    0xdc) SLSSpaceCopyName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d777f0 (   0x1d8) SLSWindowServerClientSpaceCopyName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d779c8 (    0xbc) SLSSpaceSetName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77a84 (   0x18c) SLSWindowServerClientSpaceSetName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77c10 (    0xd4) SLSSpaceGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77ce4 (   0x1c8) SLSWindowServerClientSpaceGetType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77eac (     0x4) SLSSpaceSetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77eb0 (   0x110) SLSSpaceGetCompatID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d77fc0 (   0x14c) SLSSpaceSetCompatID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7810c (    0xdc) SLSSpaceCopyOwners [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d781e8 (   0x1c4) SLSWindowServerClientSpaceCopyOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d783ac (    0xbc) SLSSpaceSetOwners [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78468 (   0x108) SLSWindowServerClientSpaceSetOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78570 (    0xb8) __SLSWindowServerClientSpaceSetOwners_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78628 (    0x10) __array_call_as_process_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78638 (   0x14c) SLSSpaceAddOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78784 (   0x14c) SLSSpaceRemoveOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d788d0 (   0x134) SLSTileSpaceTakeOwnership [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78a04 (    0xd4) SLSSpaceCopyShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78ad8 (   0x1d4) SLSWindowServerClientSpaceCopyShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78cac (   0x148) SLSSpaceSetShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78df4 (    0xdc) __SLSWindowServerClientSpaceSetShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78ed0 (   0x11c) SLSSpaceGetTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d78fec (   0x1c8) SLSWindowServerClientSpaceGetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d791b4 (   0x130) SLSSpaceSetTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d792e4 (    0xd8) SLSWindowServerClientSpaceSetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d793bc (   0x11c) SLSSpaceGetAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d794d8 (   0x14c) SLSSpaceSetAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79624 (   0x110) SLSSpaceGetAbsoluteLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79734 (   0x14c) SLSSpaceSetAbsoluteLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79880 (    0xd4) SLSSpaceWithName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79954 (   0x118) SLSWindowServerClientSpaceWithName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79a6c (   0x1b8) __SLSWindowServerClientSpaceWithName_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79c24 (   0x134) SLSSpaceResetMenuBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79d58 (   0x14c) SLSSpaceSetFrontPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79ea4 (   0x150) SLSProcessAssignToSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d79ff4 (   0x138) SLSProcessAssignToAllSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a12c (    0xb0) SLSSetSpaceManagementMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a1dc (    0xc4) SLSGetSpaceManagementMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a2a0 (    0x50) SLSWindowServerClientGetSpaceManagementMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a2f0 (    0xcc) SLSCopyManagedDisplaySpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a3bc (   0x1b0) SLSWindowServerClientCopyManagedDisplaySpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a56c (    0xc8) SLSMoveManagedSpaceToDisplayIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a634 (   0x180) SLSWindowServerClientMoveManagedSpaceToDisplayIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a7b4 (    0xd8) SLSCopyCachedManagedDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a88c (    0xcc) SLSCopyManagedDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7a958 (   0x220) SLSWindowServerClientCopyManagedDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ab78 (    0xf4) SLSCopyBestManagedDisplayForPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ac6c (   0x1a8) SLSWindowServerClientCopyBestManagedDisplayForPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ae14 (   0x118) SLSCopyBestManagedDisplayForRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7af2c (   0x214) SLSWindowServerClientCopyBestManagedDisplayForRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b140 (    0xdc) SLSCopyManagedDisplayForWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b21c (   0x1ac) SLSWindowServerClientCopyManagedDisplayForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b3c8 (    0xdc) SLSCopyManagedDisplayForSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b4a4 (   0x238) SLSWindowServerClientCopyManagedDisplayForSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b6dc (    0xd4) SLSManagedDisplayGetCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b7b0 (   0x1b0) SLSWindowServerClientManagedDisplayGetCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7b960 (    0xbc) SLSManagedDisplaySetCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ba1c (    0xcc) SLSWindowServerClientManagedDisplaySetCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bae8 (    0xd4) SLSManagedDisplayIsAnimating [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bbbc (   0x180) SLSWindowServerClientManagedDisplayIsAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bd3c (    0xbc) SLSManagedDisplaySetIsAnimating [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bdf8 (    0xd8) SLSWindowServerClientManagedDisplaySetIsAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bed0 (    0xe8) SLSManagedDisplaysCopyRoleWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7bfb8 (    0xf4) SLSWindowServerClientManagedDisplaysCopyRoleWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c0ac (   0x210) __SLSWindowServerClientManagedDisplaysCopyRoleWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c2bc (     0x4) SLSManagedDisplaysGetRoleWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c2c0 (    0xc8) SLSManagedDisplaySetRoleWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c388 (   0x17c) SLSWindowServerClientManagedDisplaySetRoleWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c504 (    0xd4) SLSSpaceCopyManagedShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c5d8 (   0x1d4) SLSWindowServerClientSpaceCopyManagedShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c7ac (   0x134) SLSSpacePreferCurrentDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c8e0 (    0xe0) SLSManagedDisplayCurrentSpaceAllowsWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7c9c0 (   0x1c8) SLSWindowServerClientManagedDisplayCurrentSpaceAllowsWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7cb88 (    0xbc) SLSMoveWindowsToManagedSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7cc44 (   0x108) SLSWindowServerClientMoveWindowsToManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7cd4c (    0xb8) __SLSWindowServerClientMoveWindowsToManagedSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ce04 (    0xa4) SLSReassociateWindowsSpacesByGeometry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7cea8 (   0x100) SLSWindowServerClientReassociateWindowsSpacesByGeometry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7cfa8 (    0xb0) __SLSWindowServerClientReassociateWindowsSpacesByGeometry_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d058 (     0x4) SLSSpaceSetRelativeLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d05c (   0x14c) SLSSpaceSetOrderingWeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d1a8 (    0xf8) SLSGetTileSpaceDividerDirections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d2a0 (   0x120) SLSTileSpaceSetDividerWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d3c0 (    0xe0) SLSSpaceCreateTile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d4a0 (    0xf4) SLSWindowServerClientSpaceCreateTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d594 (   0x1c0) __SLSWindowServerClientSpaceCreateTile_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d754 (    0xf4) SLSSpaceGetRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7d848 (   0x250) SLSWindowServerClientSpaceGetRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7da98 (    0xf4) SLSWindowGetTileRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7db8c (   0x254) SLSWindowServerClientWindowGetTileRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7dde0 (   0x154) SLSSpaceTileMoveToSpaceAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7df34 (   0x19c) SLSSpaceSetEdgeReservation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e0d0 (    0xd4) SLSSpaceGetInterTileSpacing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e1a4 (   0x174) SLSWindowServerClientSpaceGetInterTileSpacing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e318 (   0x15c) SLSSpaceSetInterTileSpacing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e474 (    0xf8) SLSSpaceCanCreateTile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e56c (   0x1c0) SLSWindowServerClientSpaceCanCreateTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e72c (    0xe0) SLSSpaceGetSizeForProposedTile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e80c (   0x10c) SLSWindowServerClientSpaceGetSizeForProposedTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7e918 (   0x1ec) __SLSWindowServerClientSpaceGetSizeForProposedTile_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7eb04 (   0x150) SLSSpaceGetSpacersAtPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ec54 (   0x2f8) SLSWindowServerClientSpaceGetSpacersAtPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7ef4c (    0x7c) SLSSpaceMoveSpacersToPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7efc8 (   0x114) SLSSpaceClientDrivenMoveSpacersToPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f0dc (    0xc8) SLSTileSpaceMoveSpacersForSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f1a4 (   0x11c) SLSSpaceClientDrivenMoveSpacersToPointFenced [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f2c0 (    0xdc) SLSTileSpaceMoveSpacersForSizeFenced [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f39c (    0xec) SLSSpaceFinishedResizeForRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f488 (   0x13c) SLSWindowServerClientSpaceFinishedResizeForRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f5c4 (   0x120) SLSGetSpacePermittedResizeDirections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f6e4 (     0xc) SLSTileSpaceResizeRecordGetSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f6f0 (     0xc) SLSTileSpaceResizeRecordGetParentSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f6fc (    0x14) SLSTileSpaceResizeRecordIsLiveResizing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f710 (    0xdc) SLSSpaceCopyTileSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f7ec (   0x1c4) SLSWindowServerClientSpaceCopyTileSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7f9b0 (   0x110) SLSTileSpaceReplaceWithSnapshotWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fac0 (     0xc) SLSTileOwnerChangeRecordGetTileID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7facc (     0xc) SLSTileOwnerChangeRecordGetManagedSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fad8 (     0xc) SLSTileOwnerChangeRecordGetNewOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fae4 (     0xc) SLSTileOwnerChangeRecordGetOldOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7faf0 (     0xc) SLSTileEvictionRecordGetTileID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fafc (     0xc) SLSTileEvictionRecordGetManagedSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fb08 (     0xc) SLSMenuBarHideShowRecordGetSpaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fb14 (    0x14) SLSMenuBarHideShowRecordGetAnimationStartTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fb28 (    0x14) SLSMenuBarHideShowRecordGetAnimationDuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fb3c (    0xd4) SLSGetSpaceNeedsSafeAperture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fc10 (   0x1d0) SLSWindowServerClientGetSpaceNeedsSafeAperture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fde0 (    0x30) __CGSBacktraceCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d7fe10 (   0x234) CGSBacktraceLog [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80044 (    0x28) WSCAWindowBacking::AddLayerContentSublayerToRootVisibleLayer(CALayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8006c (    0x28) WSCAWindowBacking::HitTest(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80094 (    0x10) WSCAWindowBacking::AddUpdateFlags(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d800a4 (   0x100) WSCAWindowBacking::AddDebugDescriptionToFile(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d801a4 (    0x88) WSCAWindowBacking::GetBindingsRootBeginHostTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8022c (    0x88) WSCAWindowBacking::GetBindingsRootInputHostTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d802b4 (    0x18) WSCAWindowBacking::GetBindingsRootContextID() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d802cc (   0x124) WSCAWindowBacking::SetWindowOwnerInfo(unsigned int, unsigned int, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d803f0 (    0x28) WSCAWindowBacking::GetFlattenedPixelFormat() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80418 (    0x2c) WSCAWindowBacking::SetForcedPixelFormat(WSPixelFormat) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80444 (    0x2c) WSCAWindowBacking::SetChameleonColor(float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80470 (    0x40) WSCAWindowBacking::HasChameleonLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d804b0 (    0x38) WSCAWindowBacking::HasWSAwareBlurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d804e8 (    0x2c) WSCAWindowBacking::SetResolution(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80514 (    0x7c) WSCAWindowBacking::SetDefaultColorSpace(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80590 (    0x60) WSCAWindowBacking::SetDisplay(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d805f0 (   0x258) WSCAWindowBacking::UpdateFlatteningIfNeeded(float, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80848 (    0xac) WSCAWindowBacking::UnFlattenWindow(WSUnflattenReason) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d808f4 (   0x138) WSCAWindowBacking::Flatten(double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80a2c (    0x58) WSCAWindowBacking::release_blur_mask_portal_layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80a84 (    0x28) WSCAWindowBacking::GetFlattenedRepresentation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80aac (    0x60) WSCAWindowBacking::SetVisible(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80b0c (   0x15c) WSCAWindowBacking::CopyOpaqueRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80c68 (   0x180) WSCAWindowBacking::CopyClipRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80de8 (    0x34) WSCAWindowBacking::ClaimPresent(std::__1::vector<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>, std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>>&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80e1c (    0x54) WSCAWindowBacking::UpdateCopyBlurs(_CARenderUpdateBackdropLayerEntry**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d80e70 (   0x3f0) WSCAWindowBacking::BeginUpdate(LayerUpdateParams) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81260 (    0x3c) WSCARenderContextScope::~WSCARenderContextScope() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8129c (    0xe4) flattened_representation_exist(WSCALayerBacking*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81380 (    0x28) WSCAWindowBacking::~WSCAWindowBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d813a8 (   0x17c) WSCAWindowBacking::~WSCAWindowBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81524 (    0x54) WSCAWindowBacking::'unnamed'::~() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81578 (     0x4) WSCAWindowBacking::~WSCAWindowBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8157c (   0x4dc) WSCAWindowBacking::UpdateBindingsValues() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81a58 (   0x210) WSCAWindowBacking::UpdateBindings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81c68 (    0xb0) WSCAWindowBacking::UpdateInternalRegions(_CARenderContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81d18 (    0x60) init_layer(CALayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81d78 (    0x54) WSCAWindowBacking::FlattenedSurfaceSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d81dcc (   0x518) WSCAWindowBacking::PrepareFlattenedTree(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d822e4 (   0x140) WSCAWindowBacking::UpdateContextColorSpace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82424 (    0x98) WSCAWindowBacking::GetCAFilter(sFilterType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d824bc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185d824d0 (   0x7b0) WSCAWindowBacking::PopulateFlattenedContent(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82c80 (    0x5c) has_valid_clip_shape(WSCALayerBacking*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82cdc (   0x114) WSCAWindowBacking::create_blur_mask_layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82df0 (    0x50) WSCAWindowBacking::release_blur_related_layers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82e40 (    0xa0) WSCAWindowBacking::DumpBlurMask() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82ee0 (    0x40) invocation function for block in WSCAWindowBacking::SetRasterizing(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82f20 (    0x8c) invocation function for block in WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82fac (    0x38) invocation function for block in ca_supports_window_shadows() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d82fe4 (    0x28) invocation function for block in WSCAWindowBacking::SetContextInnerRim(WSShadowProperties const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8300c (    0xa8) WSCAWindowBacking::IsAssociatedWithContextID(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d830b4 (   0x56c) WSCALayerBackingInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83620 (    0x84) WSCAWindowBackingGetPortForFlattenBacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d836a4 (    0xc8) WSWindowBackingDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8376c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d83784 (    0x2c) __CGXColorSpaceRegistryGetDefaultColorSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d837b0 (    0x6c) CGXColorSpaceRegistryGetExtendedSRGBSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8381c (    0xbc) CGXColorSpaceRegistryCopyRegisteredColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d838d8 (    0x6c) color_spaces() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83944 (   0x14c) register_color_space(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83a90 (    0x3c) SLSRegisterColorSpaceFromICCData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83acc (   0x324) CGXColorSpaceRegistryPrintColorSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83df0 (   0x120) WSDebugHUDCursorTrailDump [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83f10 (    0x48) get_hud_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d83f58 (    0xd0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, WSDebugHUD*>, std::__1::__tree_node<std::__1::__value_type<int, WSDebugHUD*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, WSDebugHUD*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WSDebugHUD*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WSDebugHUD*>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d84028 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d840dc (   0x3f0) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>...
                0x0000000185d844cc (    0xe0) WSDebugHUDGetCurrentFrameIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d845ac (   0x244) WSDebugHUDScopeTimer::~WSDebugHUDScopeTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d847f0 (   0x384) WSDebugHUDAttributionDump [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d84b74 (   0x134) connectionID_to_name(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d84ca8 (   0x37c) prep_perf_graph(WSDebugHUD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d85024 (   0x3d0) prep_at_perf_graph(WSDebugHUD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d853f4 (   0x4d0) CursorTrail::prepare_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d858c4 (   0x978) update_inspector_hud(WSDebugHUD*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8623c (   0x87c) update_cursor_hud(WSDebugHUD*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d86ab8 (   0x5c8) update_display_hud(WSDebugHUD*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87080 (   0x1d0) WSDebugHUDFinishUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87250 (    0xe0) get_clip_region(WSDebugHUD*, _CARenderContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87330 (    0xb4) copy_dirty_region(WSDebugHUD*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d873e4 (   0x110) CursorTrail::finish_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d874f4 (     0xc) debug_hud_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87500 (    0x98) CursorTrail::invalidate_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87598 (    0xb0) CursorTrail::ca_flip_you_region_create(CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87648 (    0xb0) create_path_from_region(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d876f8 (    0x78) CursorTrail::generate_composite_layer(CGXRedrawState*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87770 (   0x1c0) create_hud_layer(_CARenderUpdate*, CGSRegionObject*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87930 (   0x144) CursorTrail::hide(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87a74 (    0x70) destroy_hud_list() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d87ae4 (   0x7e4) WSDebugHUDSetOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d882c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d882d8 (   0x798) enable_overlay(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d88a70 (   0x2e4) disable_overlay(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d88d54 (   0xc2c) CursorTrail::CursorTrail(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d89980 (   0x110) makeTextLayer(NSString*, CGColor*, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d89a90 (   0x304) update_perf_hud_layer(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d89d94 (  0x33ac) create_hud() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d140 (    0x64) make_hud_list(std::__1::shared_ptr<WSDebugHUDList>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d1a4 (    0xc4) apply_perf_hud_style(CALayer*, CGColor*, CGColor*, float, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d268 (   0x204) create_contribution_label(WSDebugHUD*, float, CATextLayer*&, int, int, int, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d46c (   0x1c4) WSDebugHUDList::~WSDebugHUDList() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d630 (    0x4c) std::__1::__tree<std::__1::__value_type<int, WSDebugHUD*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WSDebugHUD*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WSDebugHUD*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, WSDebugHUD*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d67c (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d6c8 (     0x4) std::__1::__shared_ptr_pointer<WSDebugHUDList*, std::__1::shared_ptr<WSDebugHUDList>::__shared_ptr_default_delete<WSDebugHUDList, WSDebugHUDList>, std::__1::allocator<WSDebugHUDList>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d6cc (    0x38) std::__1::__shared_ptr_pointer<WSDebugHUDList*, std::__1::shared_ptr<WSDebugHUDList>::__shared_ptr_default_delete<WSDebugHUDList, WSDebugHUDList>, std::__1::allocator<WSDebugHUDList>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d704 (    0x28) std::__1::__shared_ptr_pointer<WSDebugHUDList*, std::__1::shared_ptr<WSDebugHUDList>::__shared_ptr_default_delete<WSDebugHUDList, WSDebugHUDList>, std::__1::allocator<WSDebugHUDList>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d72c (     0x4) std::__1::__shared_ptr_pointer<WSDebugHUDList*, std::__1::shared_ptr<WSDebugHUDList>::__shared_ptr_default_delete<WSDebugHUDList, WSDebugHUDList>, std::__1::allocator<WSDebugHUDList>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d730 (   0x120) reconfigure_hud_on_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d850 (    0xbc) WSDebugHUDSetCompositingDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8d90c (   0x6e0) add_perf_sample(WSDebugHUD*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8dfec (    0x68) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::clear() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8e054 (   0x114) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::__assign_multi<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*>>(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*>, std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>...
                0x0000000185d8e168 (   0x7bc) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::pair<unsigned int, float>*>(std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::iterator_traits<std::__1::pair<unsigned int, float>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8e924 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d8e93c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned int, float>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned int, float>>>(std::__1::allocator<std::__1::pair<unsigned int, float>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8e974 (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::pair<unsigned int, float>*>(std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8eab8 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::pair<unsigned int, float>*>(std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8ebb8 (   0x148) unsigned int std::__1::__sort5<bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::pair<unsigned int, float>*>(std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8ed00 (   0x1d8) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>), std::__1::pair<unsigned int, float>*>(std::__1::pair<unsigned int, float>*, std::__1::pair<unsigned int, float>*, bool (*&)(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8eed8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d8eef0 (    0x1c) greatest_sort_pair(std::__1::pair<unsigned int, float>, std::__1::pair<unsigned int, float>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8ef0c (   0x350) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::__node_insert_multi_prepare(unsigned long, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f25c (    0xe8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>>>::__node_insert_multi_perform(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, WSDebugHUD::CPUGPUTime>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f344 (    0x3c) __Block_byref_object_copy_.12436 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f380 (     0x8) __Block_byref_object_dispose_.12437 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f388 (    0xc0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<int, unsigned int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, unsigned int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned int>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f448 (    0x10) __Block_byref_object_copy_.12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f458 (    0x10) __Block_byref_object_dispose_.13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f468 (    0x10) __Block_byref_object_copy_.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f478 (     0xc) __Block_byref_object_dispose_.16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f484 (   0x194) __WSDebugHUDGetCompletionHandlerForCurrentDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f618 (    0x4c) std::__1::__tree<std::__1::__value_type<int, unsigned int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, unsigned int>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f664 (    0xa4) sarlacc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8f708 (   0x694) SarlaccDebugWindow::initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d8fd9c (   0x384) WS::Displays::Prefs::copy_update_display_sets_version(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90120 (   0xae4) WS::Displays::Prefs::display_plist_is_valid(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90c04 (     0x8) invocation function for block in WS::Displays::Prefs::copy_merged_display_sets(__CFDictionary const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90c0c (    0x68) invocation function for block in WS::Displays::Prefs::copy_merged_display_sets(__CFDictionary const*, __CFDictionary const*)::$_0::operator()(__CFString const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90c74 (    0x3c) WS::Displays::Prefs::selection_helper::~selection_helper() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90cb0 (    0x10) __destroy_helper_block_e8_32c34_ZTSN2WS5CFRefIP14__CFDictionaryEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90cc0 (    0x18) __copy_helper_block_e8_32c34_ZTSN2WS5CFRefIP14__CFDictionaryEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90cd8 (   0x14c) WS::Displays::Prefs::display_set_selection_applier(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90e24 (    0xc0) WS::Displays::Prefs::create_uuid_set_from_display_set(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90ee4 (    0x10) __destroy_helper_block_e8_32c28_ZTSN2WS5CFRefIP9__CFArrayEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90ef4 (    0x18) __copy_helper_block_e8_32c28_ZTSN2WS5CFRefIP9__CFArrayEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90f0c (    0x7c) WS::Displays::Prefs::cfstring_is_non_empty_uuid(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d90f88 (   0x168) WS::Displays::Prefs::v1::display_plist_mode_match_data_is_valid(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d910f0 (    0xe0) WS::Displays::Prefs::v1::display_plist_link_description_is_valid(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d911d0 (   0x128) WS::Displays::Prefs::key_contains_nonempty_uuid_to_number_dict(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d912f8 (    0x68) WS::Displays::Prefs::v1::display_plist_underscans_are_valid(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91360 (   0x150) WS::Displays::Prefs::v2::display_plist_mode_match_data_is_valid(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d914b0 (    0x38) WS::Displays::Prefs::cftype_is_cfnumber(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d914e8 (    0x38) WS::Displays::Prefs::cftype_is_cfboolean(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91520 (    0x78) invocation function for block in WS::Displays::Prefs::key_contains_nonempty_uuid_to_number_dict(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91598 (    0xe4) WS::Displays::Prefs::copy_stored_display_sets(WS::ConfigurationInterface const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9167c (    0xc4) WS::Displays::Prefs::persistent_display_sets_from_prefs_data(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91740 (   0x258) invocation function for block in WS::Displays::Prefs::prefs_from_preboot(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91998 (    0x68) CopyStoredUnderscanFactors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91a00 (    0xb4) CopyStoredPresets [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91ab4 (    0xb4) CopyStoredUserAdjustments [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d91b68 (   0x718) GenerateInternalUUIDForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92280 (    0xd4) WS::Displays::Prefs::get_uuid_bytes_from_cfstring(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92354 (    0xd0) WS::Displays::Prefs::v1::generate_uuid_bytes_from_display_info(WS::Displays::Prefs::display_uuid_info&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92424 (   0x144) invocation function for block in WS::Displays::Prefs::system_uuid_version() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92568 (   0x734) GenerateClientUUIDForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92c9c (   0x198) WS::Displays::Prefs::load_uuid_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92e34 (    0xc8) WS::Displays::Prefs::v3::create_empty_uuid_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d92efc (   0x22c) WS::Displays::Prefs::get_verified_random_display_uuid_bytes(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93128 (   0x45c) WS::Displays::Prefs::create_required_and_optional_strings_from_uuid_bytes(CFUUIDBytes const&, __CFString const*&, __CFString const*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93584 (   0x530) WS::Displays::Prefs::v3::uuid_map_insert(__CFDictionary*, __CFString const*, __CFString const*, __CFString const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93ab4 (    0xe4) WS::Displays::Prefs::persist_and_retain_uuid_map(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93b98 (    0x88) WS::Displays::Prefs::v3::entry_with_optional_key(__CFArray const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93c20 (   0x160) WS::Displays::Prefs::v3::append_uuid_entry(__CFArray*, __CFArray*, __CFString const*, __CFString const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93d80 (    0x5c) invocation function for block in WS::Displays::Prefs::get_verified_random_display_uuid_bytes(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d93ddc (   0x4fc) invocation function for block in WS::Displays::Prefs::load_uuid_map() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d942d8 (    0x58) invocation function for block in WS::Displays::Prefs::v3::uuid_map_plist_is_valid(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d94330 (   0x18c) invocation function for block in WS::Displays::Prefs::v3::uuid_map_plist_is_valid(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d944bc (   0x1d4) invocation function for block in WS::Displays::Prefs::v3::ensure_valid_versioned_uuid_map(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d94690 (     0x8) __UpdatePrebootAfterPreferencesChange_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d94698 (    0x94) WS::Displays::Prefs::v3::version_from_uuid_entry(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9472c (   0x4bc) EnsureVersionedInternalUUID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d94be8 (     0x8) CGXDumpVisibleWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d94bf0 (   0x458) cgdebug::dump_windows(__sFILE*, unsigned int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d95048 (    0x24) invocation function for block in cgdebug::dump_windows(__sFILE*, unsigned int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9506c (  0x1778) cgdebug::dump_window_to_file_or_plist(CGXWindow*, __sFILE*, __CFArray*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d967e4 (    0xd0) invocation function for block in cgdebug::dump_window_to_file_or_plist(CGXWindow*, __sFILE*, __CFArray*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d968b4 (    0x9c) invocation function for block in get_winfo_orderedout_sort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96950 (     0x8) CGXDumpWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96958 (   0x324) CGXDumpWindowMemoryInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96c7c (   0x240) invocation function for block in cgdebug::dump_window_memory_info(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96ebc (    0x8c) __destroy_helper_block_8_32r40r48r56r64r72r80r88r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96f48 (    0xb0) __copy_helper_block_8_32r40r48r56r64r72r80r88r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d96ff8 (    0xb4) WSDumpWindowShapes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d970ac (   0x714) invocation function for block in cgdebug::dump_window_shapes(__sFILE*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d977c0 (   0x2ac) CGXDumpWindowTransforms [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d97a6c (    0x24) invocation function for block in cgdebug::dump_window_transforms(__sFILE*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d97a90 (   0x4bc) cgdebug::dump_window_transforms_to_file(CGXWindow*, __sFILE*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d97f4c (   0x278) CGXSetDefaultWindowResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d981c4 (   0x2a4) CGXSetDefaultWindowDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d98468 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185d98478 (   0x168) CGXSetDefaultWindowColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d985e0 (   0x2a8) WSWindowAddWindowListToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d98888 (    0x24) invocation function for block in wsinfo::add_window_list_to_external_debugging_dictionary(__CFDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d988ac (  0x1290) wsinfo::create_external_debugging_dictionary_for_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d99b3c (    0x90) CGXWindowListCreateDescriptionFromArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d99bcc (   0x49c) quartzdebug::build_window_description_array(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a068 (    0x34) CGSSurfaceListCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a09c (   0x418) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGSSurface>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGSSurface>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, Funct...
                0x0000000185d9a4b4 (    0x80) remove_surface(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a534 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGSSurface>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGSSurface>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGSSurface>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a5e8 (    0x58) std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::set[abi:v160006](std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a640 (    0x88) void std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::insert[abi:v160006]<std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>>(std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a6c8 (    0xbc) std::__1::pair<std::__1::__tree_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, bool> std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__emplace_hint_unique_key_args<unsigned int, unsigned int const&>(std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a784 (   0x1ac) std::__1::__tree_node_base<void*>*& std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__find_equal<unsigned int>(std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9a930 (    0xe4) surface_is_cacheable(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9aa14 (   0x238) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::insert(std::__1::__wrap_iter<unsigned int const*>, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9ac4c (    0xb0) SLSSetEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9acfc (    0x5c) SLSCurrentEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9ad58 (    0x24) SLSCurrentEventFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9ad7c (   0x174) SLSBlockWindowOrdering [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9aef0 (   0x100) SLSDoDeferredOrdering [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9aff0 (   0x130) SLSOrderFrontConditionally [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b120 (    0xe0) CGSPropertyListPerformWithSerializedBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b200 (    0x18) _apply_predicate_block(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b218 (    0x90) x_list_map_b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b2a8 (    0x18) _apply_foreach_block(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b2c0 (    0xd0) x_list_insert_sorted [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b390 (     0xc) _less_by_uintptr_value(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b39c (    0x54) x_list_prepend_unique [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b3f0 (    0xc4) x_list_unstable_unique [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b4b4 (    0xd8) spaces_did_terminate_window_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b58c (   0x104) invocation function for block in window_destroy_workspace_data(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9b690 (   0xb08) WSWindowActionGroupPerformWithConnection(CGXConnection*, void (WSWindowActionGroup*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c198 (    0x14) __Block_byref_object_copy_.13004 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c1ac (     0x4) __Block_byref_object_dispose_.13005 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c1b0 (    0x78) reset_window_visible_order_indices() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c228 (   0x168) invocation function for block in rebuild_visible_window_array_wmonly(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c390 (    0xd4) invalidate_out_of_order_windows_with_group(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c464 (   0x13c) invocation function for block in rebuild_visible_window_array_merging(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9c5a0 (   0x7dc) invocation function for block in rebuild_visible_window_array_merging(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9cd7c (   0x2e0) invocation function for block in rebuild_visible_window_array_merging(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d05c (   0x2c8) walk_visible_window_array_workspace_tier(x_list_struct*, x_list_struct*, void (bool) block_pointer, void (CGXWindow*, WSWorkspace*) block_pointer, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d324 (    0x54) invocation function for block in WSWindowActionGroupExecute(WSWindowActionGroup*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d378 (    0x44) invocation function for block in WSWindowActionGroupRelease(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d3bc (    0x5c) __destroy_helper_block_e8_32r40r48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d418 (    0x70) __copy_helper_block_e8_32r40r48r56r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d488 (    0x28) invocation function for block in rebuild_visible_window_array_merging(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9d4b0 (   0x6f4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(void const*, void const*), CGXWindow**>(CGXWindow**, CGXWindow**, bool (*&)(void const*, void const*), std::__1::iterator_traits<CGXWindow**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9dba4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d9dbbc (    0xf0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(void const*, void const*), CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, bool (*&)(void const*, void const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9dcac (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(void const*, void const*), CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, bool (*&)(void const*, void const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9dd7c (   0x108) unsigned int std::__1::__sort5<bool (*&)(void const*, void const*), CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, bool (*&)(void const*, void const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9de84 (   0x1b0) bool std::__1::__insertion_sort_incomplete<bool (*&)(void const*, void const*), CGXWindow**>(CGXWindow**, CGXWindow**, bool (*&)(void const*, void const*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9e034 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d9e04c (    0x68) _less_by_window_order(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9e0b4 (    0x50) compare_windows_by_order(CGXWindow const*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9e104 (   0xf38) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, std::__1::iterator_traits<SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f03c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185d9f054 (   0x360) SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_findInsertionPointer(long, std::__1::vector<long, std::__1::allocator<long>>&, std::__1::vector<long, std::__1::allocator<long>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f3b4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<long>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<long>>(std::__1::allocator<long>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f3ec (    0xe8) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, unsigned long>>>::find<CGXWindow*>(CGXWindow* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f4d4 (    0x68) std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, unsigned long>>>::clear() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f53c (   0x41c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, unsigned long>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, unsigned long>>>::__emplace_unique_key_args<CGXWindow*, std::__1::piecewise_construct_t const&, std::__1::tuple<CGXWindow* const&>, std::__1::tuple<>>(CGXWindow* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<CGXWindow* const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9f958 (   0x254) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, int>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, int>>>::__emplace_unique_key_args<CGXWindow*, std::__1::piecewise_construct_t const&, std::__1::tuple<CGXWindow* const&>, std::__1::tuple<>>(CGXWindow* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<CGXWindow* const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9fbac (   0x36c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185d9ff18 (   0x258) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da0170 (   0x2f4) unsigned int std::__1::__sort5<SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da0464 (   0x358) bool std::__1::__insertion_sort_incomplete<SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**>(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space**, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::_resortSpacesByNextWindowPriority()::'lambda'(SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*)&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da07bc (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185da07d4 (    0xe8) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<WSWorkspace*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<WSWorkspace*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*>, std::__1::__unordered_map_hasher<WSWorkspace*, std::__1::__hash_value_type<WSWorkspace*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*>, std::__1::hash<WSWorkspace*>, std::__1::equal_to<WSWorkspace*>, true>, std::__1::__unordered_map_equal<WSWorkspace*, std::__1::__hash_value_type<WSWorkspace*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*>, std::__1::equal_to<WSWorkspace*>, std::__1::hash<WSWorkspace*>, true>, std::__1::allocator<std::__1::__hash_value_type<WSWorkspace*, SpaceZOrderMerger<WSWorkspace*, CGXWindow*>::Space*>>>::find<WSWorkspace*>(WSWorkspace* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da08bc (    0xf8) WSWindowActionGroupAddWindowAction(WSWindowActionGroup*, CGXWindow*, void (WSWindowActionContext*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da09b4 (     0xc) invocation function for block in invalidate_out_of_order_windows_with_group(WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da09c0 (    0x10) invocation function for block in window_destroy_workspace_data(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da09d0 (   0x444) workspace_remove_window_with_group(WSWorkspace*, CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da0e14 (   0x104) session_filters_out_window(WSSessionWorkspaceData*, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da0f18 (   0x364) invocation function for block in window_update_visibility_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da127c (    0xcc) window_update_space_clip_shape_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1348 (    0xcc) window_apply_primary_space_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1414 (   0x298) invocation function for block in window_apply_primary_space_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da16ac (   0x320) invocation function for block in window_update_space_clip_shape_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da19cc (    0xa0) invocation function for block in window_create_space_clip_shape(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1a6c (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1b20 (    0x38) spaces_will_change_window_order_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1b58 (    0x54) spaces_did_change_window_order_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1bac (    0xf0) update_window_order_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1c9c (     0xc) invocation function for block in spaces_did_change_window_order_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1ca8 (     0x8) invocation function for block in update_window_order_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1cb0 (   0x120) workspace_window_list_resort_windows(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da1dd0 (   0x6e4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, CGXWindow**>(CGXWindow**, CGXWindow**, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, std::__1::iterator_traits<CGXWindow**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da24b4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185da24cc (   0x150) session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0::operator()(CGXWindow*, CGXWindow*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da261c (    0xf0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da270c (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da27dc (   0x108) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, CGXWindow**>(CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, CGXWindow**, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da28e4 (   0x1b0) bool std::__1::__insertion_sort_incomplete<session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&, CGXWindow**>(CGXWindow**, CGXWindow**, session_workspace_window_sort(std::__1::vector<CGXWindow*, std::__1::allocator<CGXWindow*>>*, WSSessionWorkspaceData*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2a94 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185da2aac (    0x10) invocation function for block in update_window_order_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2abc (    0x48) spaces_did_create_window_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2b04 (   0x124) spaces_did_destroy_session_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2c28 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2c74 (    0x64) spaces_will_destroy_session_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2cd8 (    0x18) invocation function for block in session_workspace_data_finalize(WSSessionWorkspaceData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2cf0 (   0x138) free_workspace(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2e28 (    0xe0) invocation function for block in workspace_finalize(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da2f08 (   0x124) workspace_order_out_with_group(WSWorkspace*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da302c (   0x134) update_visible_workspace_ordering_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3160 (   0x130) invocation function for block in workspace_order_out_with_group(WSWorkspace*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3290 (    0x98) _less_by_workspace_order(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3328 (    0x1c) invocation function for block in update_visible_workspace_ordering_info() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3344 (    0x7c) _less_by_workspace_level(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da33c0 (   0x140) spaces_will_create_session_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3500 (    0xb4) new_workspace(PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da35b4 (    0xf0) WSWorkspaceSetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da36a4 (    0xf0) WSWorkspacesShow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3794 (    0xb4) __WSWorkspacesShow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3848 (   0x154) notify_spaces_changed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da399c (    0x3c) invocation function for block in notify_spaces_changed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da39d8 (   0x148) __WSWorkspacesShow_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3b20 (   0x130) invocation function for block in workspace_order_in_with_group(WSWorkspace*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3c50 (    0xe8) __WSWorkspaceSetAbsoluteLevel_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3d38 (    0x10) __WSWorkspaceSetAbsoluteLevel_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3d48 (    0xa8) window_workspace_order_changed(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3df0 (   0x150) workspace_window_list_copy_x_list(WSWorkspace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3f40 (    0xb4) __WSWorkspacesRemoveWindowsWithConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da3ff4 (    0xb8) __WSWorkspacesRemoveWindowsWithConnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da40ac (     0xc) __WSWorkspacesRemoveWindowsWithConnection_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da40b8 (    0x48) invocation function for block in workspace_window_list_copy_x_list(WSWorkspace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4100 (    0x88) WSWorkspaceSetShapeWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4188 (   0x200) workspace_update_shape(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4388 (    0xd8) invocation function for block in workspace_update_shape(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4460 (    0x10) invocation function for block in workspace_update_shape(WSWorkspace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4470 (    0xac) __WSWorkspaceSetTransformWithConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da451c (    0x10) __WSWorkspaceSetTransformWithConnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da452c (    0xdc) WSWorkspaceForEachPrimaryWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4608 (    0x30) __WSWorkspaceForEachPrimaryWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4638 (    0xac) __WSWorkspaceSetAlphaWithConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da46e4 (    0x10) __WSWorkspaceSetAlphaWithConnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da46f4 (    0xe8) __WSWorkspaceSetOrderingWeight_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da47dc (    0x10) __WSWorkspaceSetOrderingWeight_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da47ec (    0xf0) WSWorkspacesHide [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da48dc (    0xb4) __WSWorkspacesHide_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4990 (    0x50) __WSWorkspacesHide_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da49e0 (    0xb4) __WSWorkspacesAddWindowsWithConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4a94 (    0xb8) __WSWorkspacesAddWindowsWithConnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da4b4c (   0x630) __WSWorkspacesAddWindowsWithConnection_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da517c (   0x1d0) WSWorkspaceSetWindowVisibilityOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da534c (   0x410) invocation function for block in create_workspace_visibility_override_map(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da575c (   0x1ac) __WSWorkspaceSetWindowVisibilityOverride_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5908 (     0x8) __WSWorkspaceSetWindowVisibilityOverride_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5910 (     0xc) __WSWorkspaceSetWindowVisibilityOverride_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da591c (    0x4c) invocation function for block in workspace_list_copy_exportable(x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5968 (   0x114) WSWindowGetPrimarySpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5a7c (    0x28) invocation function for block in window_get_primary_exportable_space(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5aa4 (   0x118) WSWindowCopySpaceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5bbc (   0x408) WSWindowDidOrderIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da5fc4 (    0xb8) WSWindowResetSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da607c (   0x174) __WSWindowResetSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da61f0 (    0xf0) invocation function for block in window_reset_workspaces_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da62e0 (    0x10) invocation function for block in window_reset_workspaces_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da62f0 (    0x20) invocation function for block in window_reset_workspaces_with_group(CGXWindow*, WSWindowActionGroup*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6310 (    0x54) WSBackgroundWorkspaceObscureDesktop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6364 (    0xe0) WSDisplayShieldWorkspaceAddWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6444 (    0xe0) WSCursorWorkspaceAddWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6524 (   0x240) WSWindowUpdateOrderedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6764 (   0x118) invocation function for block in window_set_is_ordered_in(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da687c (    0x80) WSWindowSortByOrder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da68fc (    0x78) WSWindowSortByVisibility [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6974 (    0xa8) _less_by_window_visibility(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6a1c (    0x6c) WSGetWindowOrderingIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6a88 (    0xac) __WSWindowCreateWorkspaceListDescription_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6b34 (   0x21c) workspace_create_description(WSWorkspace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6d50 (    0x90) invocation function for block in workspace_create_description_verbose(WSWorkspace const*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da6de0 (   0x5a0) __WSAllWorkspacesCreateDescription_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7380 (    0x94) _less_by_space_id(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7414 (   0x1dc) WSDumpWorkspaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da75f0 (   0x26c) WSWorkspaceAddWorkspacesToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da785c (   0x450) __WSWorkspaceAddWorkspacesToExternalDebuggingDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7cac (    0x40) invocation function for block in create_external_debugging_dictionary_for_workspace(WSWorkspace const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7cec (     0xc) -[SLSDisplayPowerControlClient setService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7cf8 (    0x10) -[SLSDisplayPowerControlClient service] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7d08 (    0x88) -[SLSDisplayPowerControlClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7d90 (     0x4) -[SLSDisplayPowerControlClient init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7d94 (   0x110) -[SLSDisplayPowerControlClient sendStateChangeRequest:uuid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7ea4 (    0xd0) -[SLSDisplayPowerControlClient requestStateChange:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7f74 (    0x50) -[SLSDisplayPowerControlClient terminateConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da7fc4 (    0xc8) -[SLSDisplayPowerControlClient initPowerControlClient:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da808c (   0x158) -[SLSDisplayPowerControlClient initAsyncPowerControlClient:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da81e4 (   0x19c) __107-[SLSDisplayPowerControlClient initAsyncPowerControlClient:notifyQueue:notificationType:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8380 (    0x5c) __destroy_helper_block_e8_32o40o48o56b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da83dc (    0x70) __copy_helper_block_e8_32o40o48o56b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da844c (   0x10c) (anonymous namespace)::structural_region_container::event_location_matches_apply_until(SLSEventRecord const*, CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8558 (    0x98) std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::function(std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da85f0 (    0x84) std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8674 (    0xec) (anonymous namespace)::structural_region_container::event_location_matches_apply(SLSEventRecord const*, CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8760 (    0x98) std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::function(std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da87f8 (    0x84) std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da887c (   0x104) (anonymous namespace)::structural_region_container::location_matches_apply_until(CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8980 (    0xdc) (anonymous namespace)::structural_region_container::location_matches_apply(CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8a5c (     0x8) (anonymous namespace)::structural_region_container::event_routing_context_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8a64 (     0x8) (anonymous namespace)::structural_region_container::event_routing_should_hide_from_taps(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8a6c (     0x8) (anonymous namespace)::structural_region_container::event_routing_location(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8a74 (     0x8) (anonymous namespace)::structural_region_container::event_routing_region_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8a7c (    0x24) WSWindowStructuralRegionData::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8aa0 (    0x30) (anonymous namespace)::structural_region_container::create_shape_transforming_child_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8ad0 (    0x30) (anonymous namespace)::structural_region_container::create_shape_transforming_local_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8b00 (    0x2c) (anonymous namespace)::structural_region_container::child_from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8b2c (    0x2c) (anonymous namespace)::structural_region_container::child_to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8b58 (    0x2c) (anonymous namespace)::structural_region_container::from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8b84 (    0x2c) (anonymous namespace)::structural_region_container::to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8bb0 (     0x8) WSWindowStructuralRegionData::set_aggregated_child_event_mask(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8bb8 (    0x64) (anonymous namespace)::structural_region_container::detach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8c1c (     0x8) (anonymous namespace)::structural_region_container::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8c24 (    0x28) WSWindowStructuralRegionData::~WSWindowStructuralRegionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8c4c (    0xc4) WSWindowStructuralRegionData::~WSWindowStructuralRegionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8d10 (    0x74) (anonymous namespace)::structural_region_container::~structural_region_container() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8d84 (    0x6c) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::structural_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::structural_region>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8df0 (     0x8) (anonymous namespace)::structural_region_container::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8df8 (     0x8) (anonymous namespace)::structural_region_container::set_aggregated_child_event_mask(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8e00 (     0x4) (anonymous namespace)::structural_region_container::~structural_region_container() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8e04 (     0x4) (anonymous namespace)::structural_region_container::~structural_region_container() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8e08 (    0x50) (anonymous namespace)::structural_region_container::opaque_container_for_tracking((anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8e58 (    0x50) (anonymous namespace)::structural_region_container::opaque_container_for_event(SLSEventRecord const*, (anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8ea8 (     0x8) (anonymous namespace)::structural_region_container::opaque_for_tracking() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8eb0 (     0x8) (anonymous namespace)::structural_region_container::opaque_for_event(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8eb8 (     0x8) (anonymous namespace)::structural_region_container::shared_structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8ec0 (     0x4) (anonymous namespace)::structural_region_container::recalculate_hierarchy_type_level() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8ec4 (   0x134) (anonymous namespace)::structural_region_container::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da8ff8 (    0x74) (anonymous namespace)::structural_region_container::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da906c (     0x4) WSWindowStructuralRegionData::~WSWindowStructuralRegionData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9070 (     0x8) WSWindowStructuralRegionData::opaque_for_tracking() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9078 (    0x1c) WSWindowStructuralRegionData::opaque_for_event(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9094 (     0x4) WSWindowStructuralRegionData::renumber_after_end(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9098 (     0x8) WSWindowStructuralRegionData::renumber_self(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da90a0 (     0xc) WSWindowStructuralRegionData::renumber_from_start() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da90ac (    0x8c) (anonymous namespace)::structural_region_container::renumber_children_from(std::__1::__wrap_iter<std::__1::shared_ptr<(anonymous namespace)::structural_region> const*>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9138 (    0x2c) WSWindowStructuralRegionData::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9164 (    0x60) WSWindowStructuralRegionData::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da91c4 (    0x5c) std::__1::vector<(anonymous namespace)::force_config_type, std::__1::allocator<(anonymous namespace)::force_config_type>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9220 (    0x3c) (anonymous namespace)::force_config_type::~force_config_type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da925c (    0x3c) std::__1::vector<std::__1::weak_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::tracking_region>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9298 (    0x54) std::__1::vector<std::__1::weak_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::tracking_region>>>::__clear[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da92ec (    0x40) invocation function for block in WSSessionStructuralRegionData::toss_event(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da932c (   0x180) WSSessionStructuralRegionData::post_events(CGSEventQueue*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da94ac (    0xb4) WSSessionStructuralRegionData::handle_changes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9560 (    0xe0) WSSessionStructuralRegionData::simple_update_inside_regions() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9640 (   0x4a8) WSSessionStructuralRegionData::rebuild_force_config_stack() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9ae8 (   0x1d8) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>> (anonymous namespace)::lock_weak_ptr_vector<(anonymous namespace)::tracking_region>(std::__1::vector<std::__1::weak_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::tracking_region>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9cc0 (    0x50) std::__1::__split_buffer<(anonymous namespace)::force_config_type, std::__1::allocator<(anonymous namespace)::force_config_type>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9d10 (    0x48) (anonymous namespace)::force_config_type::force_config_type((anonymous namespace)::force_config_type const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9d58 (    0x7c) std::__1::__split_buffer<(anonymous namespace)::force_config_type, std::__1::allocator<(anonymous namespace)::force_config_type>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<(anonymous namespace)::force_config_type>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9dd4 (    0x6c) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9e40 (    0x60) std::__1::__split_buffer<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185da9ea0 (   0x3c4) WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daa264 (   0x624) WSSessionStructuralRegionData::update_inside_regions(std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>>, SLSEventRecord const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daa888 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185daa898 (   0x8b4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::iterator_traits<std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab14c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dab164 (   0x1cc) std::__1::vector<std::__1::weak_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::tracking_region>>> (anonymous namespace)::weak_ptr_vector<(anonymous namespace)::tracking_region>(std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab330 (    0x58) bool (anonymous namespace)::less_by_z_index<std::__1::shared_ptr<(anonymous namespace)::tracking_region>&>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>& const&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>& const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab388 (   0x168) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>>::push_back[abi:v160006](std::__1::shared_ptr<(anonymous namespace)::tracking_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab4f0 (    0xa4) (anonymous namespace)::tracking_region::activate_with_event(SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab594 (   0x1b8) WSSessionStructuralRegionData::update_inside_regions(std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region>>>, SLSEventRecord const*, bool)::$_5::operator()(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab74c (   0x1b0) (anonymous namespace)::structural_region_container::tag_event_for_routing(SLSEventRecord*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab8fc (    0x70) (anonymous namespace)::get_session_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab96c (    0x84) (anonymous namespace)::structural_region::event_matches(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dab9f0 (    0x60) std::__1::__split_buffer<std::__1::weak_ptr<(anonymous namespace)::tracking_region>, std::__1::allocator<std::__1::weak_ptr<(anonymous namespace)::tracking_region>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daba50 (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dabb94 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dabc94 (   0x148) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dabddc (   0x230) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&), std::__1::shared_ptr<(anonymous namespace)::tracking_region>*>(std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, std::__1::shared_ptr<(anonymous namespace)::tracking_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::tracking_region>&, std::__1::shared_ptr<(anonymous namespace)::tracking_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac00c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dac024 (    0xb0) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::operator()(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac0d4 (     0x4) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac0d8 (     0x4) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac0dc (    0x28) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone(std::__1::__function::__base<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac104 (    0x4c) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac150 (     0x4) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac154 (     0x4) std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac158 (    0x58) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::operator()(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac1b0 (     0x4) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac1b4 (     0x4) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac1b8 (    0x24) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac1dc (    0x48) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac224 (     0x4) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac228 (     0x4) std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac22c (    0xa0) (anonymous namespace)::force_config_type::operator=(void const* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac2cc (    0x9c) WSStructuralRegionForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac368 (    0x90) WSSessionStructuralRegionData::region_for_id(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac3f8 (   0x15c) (anonymous namespace)::proxy_shared_from_this<(anonymous namespace)::structural_region, WSStructuralRegion>::get_proxy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac554 (    0x40) std::__1::enable_shared_from_this<(anonymous namespace)::structural_region>::shared_from_this[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac594 (    0x5c) WSStructuralRegion::~WSStructuralRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac5f0 (    0x4c) WSStructuralRegion::~WSStructuralRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac63c (    0x5c) (anonymous namespace)::refcounted_proxy<(anonymous namespace)::structural_region>::~refcounted_proxy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac698 (    0x4c) (anonymous namespace)::refcounted_proxy<(anonymous namespace)::structural_region>::~refcounted_proxy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac6e4 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>>>::find<unsigned long lo...
                0x0000000185dac794 (   0x180) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>*>) [FUNC, N...
                0x0000000185dac914 (    0x4c) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>>>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dac960 (    0xec) WSTrackingRegionForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daca4c (   0x220) WSGetNewStructuralRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dacc6c (    0xec) (anonymous namespace)::structural_region::structural_region((anonymous namespace)::structural_region::protected_scoper const&, unsigned long long, CGXWindow*, std::__1::shared_ptr<(anonymous namespace)::structural_region_container>, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dacd58 (    0x64) (anonymous namespace)::region_type::region_type(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dacdbc (   0x100) (anonymous namespace)::structural_region::set_shape(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dacebc (   0x184) (anonymous namespace)::structural_region::set_shape_and_transform_internal(CGSRegionObject*, WSWindowTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad040 (    0x7c) (anonymous namespace)::region_type::operator=(CGSRegionObject* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad0bc (    0x4c) (anonymous namespace)::structural_region_container::geometry_changed_if_visible() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad108 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::event_location_matches_apply_until(SLSEventRecord const*, CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad110 (   0x1d4) (anonymous namespace)::structural_region::event_location_matches_apply_until(SLSEventRecord const*, CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad2e4 (    0x9c) (anonymous namespace)::structural_region::location_matches_hierarchy(CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad380 (    0x9c) (anonymous namespace)::structural_region::location_matches(CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad41c (    0x80) (anonymous namespace)::region_type::hit_test(CGPoint) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad49c (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::event_location_matches_apply(SLSEventRecord const*, CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad4a4 (   0x1b4) (anonymous namespace)::structural_region::event_location_matches_apply(SLSEventRecord const*, CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad658 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::location_matches_apply_until(CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad660 (   0x1a0) (anonymous namespace)::structural_region::location_matches_apply_until(CGPoint, bool, std::__1::function<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad800 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::location_matches_apply(CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad808 (   0x180) (anonymous namespace)::structural_region::location_matches_apply(CGPoint, bool, std::__1::function<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad988 (    0x5c) non-virtual thunk to (anonymous namespace)::structural_region::event_routing_context_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dad9e4 (    0x80) (anonymous namespace)::structural_region::get_parent_ptr() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dada64 (    0x5c) non-virtual thunk to (anonymous namespace)::structural_region::event_routing_should_hide_from_taps(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadac0 (    0x5c) non-virtual thunk to (anonymous namespace)::structural_region::event_routing_location(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadb1c (    0x5c) non-virtual thunk to (anonymous namespace)::structural_region::event_routing_region_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadb78 (    0x4c) non-virtual thunk to (anonymous namespace)::structural_region::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadbc4 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::create_shape_transforming_child_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadbcc (    0xd4) (anonymous namespace)::structural_region::create_shape_transforming_child_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadca0 (   0x114) (anonymous namespace)::structural_region::create_shape_transforming_local_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daddb4 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::create_shape_transforming_local_shape_to_window(CGSRegionObject*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daddbc (    0xd0) non-virtual thunk to (anonymous namespace)::structural_region::child_from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dade8c (   0x104) (anonymous namespace)::structural_region::from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadf90 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::child_to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dadf98 (   0x110) (anonymous namespace)::structural_region::child_to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae0a8 (   0x144) (anonymous namespace)::structural_region::to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae1ec (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae1f4 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::to_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae1fc (    0x20) non-virtual thunk to (anonymous namespace)::structural_region::set_aggregated_child_event_mask(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae21c (    0xa8) (anonymous namespace)::structural_region::updated_aggregate_event_mask_component(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae2c4 (    0xc4) (anonymous namespace)::structural_region_container::recalculate_child_mask() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae388 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::detach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae390 (    0x8c) (anonymous namespace)::structural_region::detach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae41c (     0xc) non-virtual thunk to (anonymous namespace)::structural_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae428 (    0x2c) non-virtual thunk to (anonymous namespace)::structural_region::~structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae454 (    0x90) (anonymous namespace)::structural_region::~structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae4e4 (    0xe4) (anonymous namespace)::proxy_shared_from_this<(anonymous namespace)::structural_region, WSStructuralRegion>::~proxy_shared_from_this() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae5c8 (    0x28) (anonymous namespace)::proxy_shared_from_this<(anonymous namespace)::structural_region, WSStructuralRegion>::~proxy_shared_from_this() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae5f0 (     0x4) (anonymous namespace)::proxy_shared_from_this<(anonymous namespace)::structural_region, WSStructuralRegion>::~proxy_shared_from_this() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae5f4 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::~structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae5fc (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::opaque_container_for_tracking((anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae604 (    0xac) (anonymous namespace)::structural_region::opaque_container_for_tracking((anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae6b0 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::opaque_container_for_event(SLSEventRecord const*, (anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae6b8 (    0xac) (anonymous namespace)::structural_region::opaque_container_for_event(SLSEventRecord const*, (anonymous namespace)::structural_region_container*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae764 (    0x14) non-virtual thunk to (anonymous namespace)::structural_region::opaque_for_event(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae778 (     0xc) non-virtual thunk to (anonymous namespace)::structural_region::shared_structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae784 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::recalculate_hierarchy_type_level() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae78c (   0x120) (anonymous namespace)::structural_region::recalculate_hierarchy_type_level() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dae8ac (   0x22c) (anonymous namespace)::structural_region_container::child_level_changed(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daead8 (   0x8b4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::shared_ptr<(anonymous namespace)::structural_region>*>(std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::iterator_traits<std::__1::shared_ptr<(anonymous namespace)::structural_region>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf38c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185daf3a4 (   0x1d4) (anonymous namespace)::structural_region_container::renumber_from_misnumbered_child(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf578 (    0x7c) (anonymous namespace)::structural_region_container::renumber_children_after(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf5f4 (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::shared_ptr<(anonymous namespace)::structural_region>*>(std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf738 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::shared_ptr<(anonymous namespace)::structural_region>*>(std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf838 (   0x148) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::shared_ptr<(anonymous namespace)::structural_region>*>(std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185daf980 (   0x230) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&), std::__1::shared_ptr<(anonymous namespace)::structural_region>*>(std::__1::shared_ptr<(anonymous namespace)::structural_region>*, std::__1::shared_ptr<(anonymous namespace)::structural_region>*, bool (*&)(std::__1::shared_ptr<(anonymous namespace)::structural_region>&, std::__1::shared_ptr<(anonymous namespace)::structural_region>&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafbb0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dafbc8 (    0x44) bool (anonymous namespace)::higher_by_level_sub_id<std::__1::shared_ptr<(anonymous namespace)::structural_region>&>(std::__1::shared_ptr<(anonymous namespace)::structural_region>& const&, std::__1::shared_ptr<(anonymous namespace)::structural_region>& const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafc0c (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::renumber_after_end(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafc14 (    0xc8) (anonymous namespace)::structural_region::renumber_after_end(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafcdc (     0xc) non-virtual thunk to (anonymous namespace)::structural_region::renumber_self(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafce8 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::renumber_from_start() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafcf0 (    0xb4) (anonymous namespace)::structural_region::renumber_from_start() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafda4 (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dafdac (   0x290) (anonymous namespace)::structural_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db003c (     0x8) non-virtual thunk to (anonymous namespace)::structural_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0044 (   0x8d4) (anonymous namespace)::structural_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0918 (    0x60) std::__1::__split_buffer<std::__1::shared_ptr<(anonymous namespace)::structural_region>, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::structural_region>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0978 (    0x18) (anonymous namespace)::structural_region::set_aggregated_child_event_mask(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0990 (     0x4) (anonymous namespace)::structural_region::finalize_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0994 (    0x54) (anonymous namespace)::structural_region::invalidate_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db09e8 (    0x58) (anonymous namespace)::structural_region::event_routing_context_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0a40 (    0x58) (anonymous namespace)::structural_region::event_routing_should_hide_from_taps(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0a98 (    0x58) (anonymous namespace)::structural_region::event_routing_location(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0af0 (    0x58) (anonymous namespace)::structural_region::event_routing_region_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0b48 (    0x48) (anonymous namespace)::structural_region::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0b90 (    0xcc) (anonymous namespace)::structural_region::child_from_window_transform() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0c5c (    0x78) (anonymous namespace)::structural_region::set_transform(WSWindowTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0cd4 (     0x8) (anonymous namespace)::structural_region::type_level() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0cdc (     0xc) (anonymous namespace)::structural_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0ce8 (    0x14) (anonymous namespace)::structural_region::opaque_for_event(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0cfc (     0xc) (anonymous namespace)::structural_region::shared_structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d08 (     0xc) (anonymous namespace)::structural_region::renumber_self(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d14 (    0x28) (anonymous namespace)::structural_region::~structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d3c (     0x4) (anonymous namespace)::structural_region::~structural_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d40 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::structural_region, std::__1::allocator<(anonymous namespace)::structural_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d44 (    0x24) std::__1::__shared_ptr_emplace<(anonymous namespace)::structural_region, std::__1::allocator<(anonymous namespace)::structural_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0d68 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::structural_region, std::__1::allocator<(anonymous namespace)::structural_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0dac (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::structural_region, std::__1::allocator<(anonymous namespace)::structural_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db0dcc (   0x2dc) WSGetNewTrackingRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db10a8 (     0xc) non-virtual thunk to (anonymous namespace)::tracking_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db10b4 (    0x2c) non-virtual thunk to (anonymous namespace)::tracking_region::~tracking_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db10e0 (    0x88) (anonymous namespace)::tracking_region::~tracking_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1168 (     0x8) non-virtual thunk to (anonymous namespace)::tracking_region::~tracking_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1170 (     0x8) non-virtual thunk to (anonymous namespace)::tracking_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1178 (    0xfc) (anonymous namespace)::tracking_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1274 (   0x4f4) (anonymous namespace)::tracking_region::set_compat_id(long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1768 (    0x94) WSWindowStructuralRegionData::region_for_compat_id(long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db17fc (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::hash<long long>, std::__1::equal_to<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::equal_to<long long>, std::__1::hash<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>>>::find<long long>(long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db18ac (   0x180) std::__1::__hash_table<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::hash<long long>, std::__1::equal_to<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, std::__1::equal_to<long long>, std::__1::hash<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1a2c (    0x4c) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::weak_ptr<(anonymous namespace)::structural_region>>, void*>>>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1a78 (    0x4c) (anonymous namespace)::tracking_region::finalize_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1ac4 (   0x188) (anonymous namespace)::tracking_region::invalidate_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1c4c (    0xf8) (anonymous namespace)::structural_region::create_window_shape() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1d44 (     0xc) (anonymous namespace)::tracking_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1d50 (    0x28) (anonymous namespace)::tracking_region::~tracking_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1d78 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::tracking_region, std::__1::allocator<(anonymous namespace)::tracking_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1d7c (     0x8) std::__1::__shared_ptr_emplace<(anonymous namespace)::tracking_region, std::__1::allocator<(anonymous namespace)::tracking_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1d84 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::tracking_region, std::__1::allocator<(anonymous namespace)::tracking_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1dc8 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::tracking_region, std::__1::allocator<(anonymous namespace)::tracking_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1de8 (    0x54) WSStructuralRegionGetID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1e3c (    0x54) WSStructuralRegionGetWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1e90 (    0x60) WSStructuralRegionCopyWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1ef0 (    0xc0) WSStructuralRegionCanBeModifiedByConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db1fb0 (    0x90) WSTrackingRegionIsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2040 (    0xb8) std::__1::shared_ptr<(anonymous namespace)::tracking_region> (anonymous namespace)::region_pointer_cast<(anonymous namespace)::tracking_region>(WSStructuralRegion const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db20f8 (    0x34) WSStructuralRegionIsInForegroundProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db212c (    0x74) WSRemoveStructuralRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db21a0 (    0x9c) WSStructuralRegionSetShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db223c (   0x110) WSStructuralRegionMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db234c (    0x88) WSStructuralRegionSetEventMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db23d4 (    0x90) WSStructuralRegionSetClippedByWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2464 (   0x140) WSTrackingRegionSetEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db25a4 (   0x180) WSTrackingRegionSetForceConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2724 (    0x7c) WSSetGlobalForceConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db27a0 (    0xd4) WSWindowCopyTrackingRegions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2874 (   0x23c) void (anonymous namespace)::structural_region_container::subtree_apply_routine<std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region> const>> (anonymous namespace)::structural_region_container::ordered_regions_of_type<(anonymous namespace)::tracking_region>()::'lambda'(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>((anonymous namespace)::tracking_region) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2ab0 (    0x6c) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::tracking_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::tracking_region> const>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2b1c (   0x128) WSDumpTrackingRegions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2c44 (   0x318) __WSDumpTrackingRegions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db2f5c (   0x308) (anonymous namespace)::structural_region_surface_change_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3264 (    0xa4) (anonymous namespace)::structural_region_did_terminate_window_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3308 (    0x9c) (anonymous namespace)::structural_region_did_create_window_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db33a4 (   0x100) (anonymous namespace)::structural_region_did_destroy_session_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db34a4 (   0x12c) (anonymous namespace)::structural_region_will_create_session_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db35d0 (    0x9c) WSTrackingRegionForWindowAndCompatID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db366c (    0x90) (anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db36fc (    0x40) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::operator()(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db373c (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3740 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3744 (    0x24) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3768 (    0x48) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db37b0 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db37b4 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db37b8 (   0x130) WSEventFindRoutingRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db38e8 (    0xac) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::operator()(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3994 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3998 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db399c (    0x28) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db39c4 (    0x4c) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3a10 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3a14 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3a18 (    0x84) WSStructuralRegionGetEventConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3a9c (   0x110) WSStructuralRegionTagEventRouting [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3bac (    0x98) WSCAContextRegionForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3c44 (    0x90) WSSessionStructuralRegionData::region_for_context_id(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3cd4 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NLi...
                0x0000000185db3d88 (   0x180) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3f08 (    0x4c) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::weak_ptr<(anonymous namespace)::ca_context_region>>, void*>>>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db3f54 (    0xbc) WSRemoveCAContextRegionByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4010 (    0x88) WSCAContextRegionGetContextID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4098 (    0xb8) std::__1::shared_ptr<(anonymous namespace)::ca_context_region> (anonymous namespace)::region_pointer_cast<(anonymous namespace)::ca_context_region>(WSStructuralRegion const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4150 (    0xbc) (anonymous namespace)::structural_region::parent_region() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db420c (   0x17c) WSCAContextRegionGetParentCAContextRegionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4388 (   0x138) WSCAContextRegionCopyCAContextRegionDescendents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db44c0 (   0x23c) void (anonymous namespace)::structural_region_container::subtree_apply_routine<std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::ca_context_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::ca_context_region> const>> (anonymous namespace)::structural_region_container::ordered_regions_of_type<(anonymous namespace)::ca_context_region>()::'lambda'(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>((anonymous namespace)::ca_context_region) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db46fc (    0xfc) WSCAContextRegionCopyRemoteRegionDescendents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db47f8 (   0x23c) void (anonymous namespace)::structural_region_container::subtree_apply_routine<std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::remote_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::remote_region> const>> (anonymous namespace)::structural_region_container::ordered_regions_of_type<(anonymous namespace)::remote_region>()::'lambda'(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>((anonymous namespace)::remote_region) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4a34 (    0x6c) std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::remote_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::remote_region> const>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4aa0 (   0x200) WSCAContextRegionCopyRemoteRegionDescendentContextIDs [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4ca0 (   0x108) WSCAContextRegionGetRenderToAttachingContextTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4da8 (   0x108) WSCAContextRegionGetAttachingContextToWindowTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4eb0 (    0xc4) WSCAContextRegionSetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db4f74 (   0x108) WSCAContextRegionSetROIRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db507c (    0xdc) WSCAContextRegionInvalidateDirtiedAccumulatedShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5158 (   0x18c) WSCAContextRegionAccumulateFlushedShapeWithUnoccludedShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db52e4 (   0x100) (anonymous namespace)::ca_context_region::recalculate_unobscured_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db53e4 (    0xa4) WSCAContextRegionRecalculateUnobscuredState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5488 (    0xd0) WSCAContextRegionResetUnobscuredState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5558 (   0x26c) WSCASurfaceRegionForSurfaceCreatingIfNecessary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db57c4 (    0x90) (anonymous namespace)::ca_render_attaching_region::ca_render_attaching_region((anonymous namespace)::structural_region::protected_scoper const&, unsigned long long, CGXWindow*, std::__1::shared_ptr<(anonymous namespace)::structural_region_container>, CGSRegionObject*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5854 (   0x49c) (anonymous namespace)::ca_context_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5cf0 (    0x1c) non-virtual thunk to (anonymous namespace)::ca_surface_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5d0c (     0x8) non-virtual thunk to (anonymous namespace)::ca_surface_region::~ca_surface_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5d14 (    0x80) (anonymous namespace)::ca_surface_region::~ca_surface_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5d94 (     0xc) non-virtual thunk to (anonymous namespace)::ca_context_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5da0 (     0x4) non-virtual thunk to (anonymous namespace)::ca_context_region::~ca_context_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5da4 (     0x4) non-virtual thunk to (anonymous namespace)::ca_context_region::~ca_context_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5da8 (     0x8) non-virtual thunk to (anonymous namespace)::ca_context_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5db0 (    0xf8) (anonymous namespace)::ca_context_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5ea8 (     0x8) non-virtual thunk to (anonymous namespace)::ca_context_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5eb0 (     0xc) (anonymous namespace)::ca_context_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5ebc (     0x4) (anonymous namespace)::ca_context_region::~ca_context_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5ec0 (     0x4) (anonymous namespace)::ca_context_region::~ca_context_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5ec4 (    0x78) non-virtual thunk to (anonymous namespace)::ca_surface_region::~ca_surface_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db5f3c (   0x18c) (anonymous namespace)::ca_surface_region::attaching_context_to_window_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db60c8 (    0x2c) (anonymous namespace)::ca_surface_region::render_to_attaching_context_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db60f4 (    0xb0) (anonymous namespace)::ca_render_attaching_region::render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db61a4 (    0x1c) (anonymous namespace)::ca_surface_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db61c0 (    0x7c) (anonymous namespace)::ca_surface_region::~ca_surface_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db623c (   0x10c) (anonymous namespace)::ca_context_region::ca_context_region((anonymous namespace)::structural_region::protected_scoper const&, unsigned long long, CGXWindow*, std::__1::shared_ptr<(anonymous namespace)::structural_region_container>, CGSRegionObject*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6348 (    0x10) non-virtual thunk to (anonymous namespace)::ca_render_attaching_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6358 (     0x4) non-virtual thunk to (anonymous namespace)::ca_render_attaching_region::~ca_render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db635c (     0x4) non-virtual thunk to (anonymous namespace)::ca_render_attaching_region::~ca_render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6360 (    0x10) (anonymous namespace)::ca_render_attaching_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6370 (     0x4) (anonymous namespace)::ca_render_attaching_region::~ca_render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6374 (     0x4) (anonymous namespace)::ca_render_attaching_region::~ca_render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6378 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_surface_region, std::__1::allocator<(anonymous namespace)::ca_surface_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db637c (    0x7c) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_surface_region, std::__1::allocator<(anonymous namespace)::ca_surface_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db63f8 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_surface_region, std::__1::allocator<(anonymous namespace)::ca_surface_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db643c (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_surface_region, std::__1::allocator<(anonymous namespace)::ca_surface_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db645c (    0x88) WSCASurfaceRegionGetSurfaceID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db64e4 (    0xb8) std::__1::shared_ptr<(anonymous namespace)::ca_surface_region> (anonymous namespace)::region_pointer_cast<(anonymous namespace)::ca_surface_region>(WSStructuralRegion const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db659c (   0x250) WSCAWindowRegionForWindowCreatingIfNecessary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db67ec (    0x1c) non-virtual thunk to (anonymous namespace)::ca_window_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6808 (     0x8) non-virtual thunk to (anonymous namespace)::ca_window_region::~ca_window_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6810 (    0x80) (anonymous namespace)::ca_window_region::~ca_window_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6890 (    0x78) non-virtual thunk to (anonymous namespace)::ca_window_region::~ca_window_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6908 (    0x3c) (anonymous namespace)::ca_window_region::attaching_context_to_window_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6944 (   0x184) (anonymous namespace)::ca_window_region::render_to_attaching_context_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6ac8 (    0x1c) (anonymous namespace)::ca_window_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6ae4 (    0x7c) (anonymous namespace)::ca_window_region::~ca_window_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6b60 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_window_region, std::__1::allocator<(anonymous namespace)::ca_window_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6b64 (    0x7c) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_window_region, std::__1::allocator<(anonymous namespace)::ca_window_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6be0 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_window_region, std::__1::allocator<(anonymous namespace)::ca_window_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6c24 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_window_region, std::__1::allocator<(anonymous namespace)::ca_window_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6c44 (    0xec) WSRemoteRegionForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db6d30 (   0x338) WSGetNewRemoteRegionInCAContextRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7068 (    0x7c) (anonymous namespace)::remote_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db70e4 (   0x11c) (anonymous namespace)::remote_region::handle_connection_death(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7200 (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::event_routing_context_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7208 (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::event_routing_should_hide_from_taps(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7210 (    0x8c) non-virtual thunk to (anonymous namespace)::remote_region::event_routing_location(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db729c (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::event_routing_region_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db72a4 (    0x78) (anonymous namespace)::remote_region::event_routing_region_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db731c (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7324 (    0x5c) (anonymous namespace)::remote_region::event_routing_connection() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7380 (    0x1c) non-virtual thunk to (anonymous namespace)::remote_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db739c (    0x2c) non-virtual thunk to (anonymous namespace)::remote_region::~remote_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db73c8 (    0x58) (anonymous namespace)::remote_region::~remote_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7420 (    0xc0) (anonymous namespace)::ca_render_subregion::~ca_render_subregion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db74e0 (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::~remote_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db74e8 (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db74f0 (    0x7c) (anonymous namespace)::remote_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db756c (     0x8) non-virtual thunk to (anonymous namespace)::remote_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7574 (    0xf0) (anonymous namespace)::ca_render_subregion::attaching_context_to_window_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7664 (    0xf0) (anonymous namespace)::ca_render_subregion::render_to_attaching_context_transform() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7754 (    0x44) (anonymous namespace)::ca_render_subregion::render_attaching_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7798 (     0x8) (anonymous namespace)::remote_region::event_routing_context_id(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db77a0 (     0x8) (anonymous namespace)::remote_region::event_routing_should_hide_from_taps(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db77a8 (    0x88) (anonymous namespace)::remote_region::event_routing_location(SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7830 (   0x254) (anonymous namespace)::ca_render_subregion::set_transform(WSWindowTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7a84 (    0xbc) (anonymous namespace)::remote_region::set_shape(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7b40 (   0x1cc) (anonymous namespace)::ca_render_subregion::set_shape(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d0c (     0x8) (anonymous namespace)::remote_region::type_level() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d14 (    0x1c) (anonymous namespace)::remote_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d30 (    0x28) (anonymous namespace)::remote_region::~remote_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d58 (    0x10) non-virtual thunk to (anonymous namespace)::ca_render_subregion::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d68 (    0x2c) non-virtual thunk to (anonymous namespace)::ca_render_subregion::~ca_render_subregion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d94 (     0x8) non-virtual thunk to (anonymous namespace)::ca_render_subregion::~ca_render_subregion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7d9c (    0x10) (anonymous namespace)::ca_render_subregion::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7dac (    0x28) (anonymous namespace)::ca_render_subregion::~ca_render_subregion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7dd4 (     0x4) (anonymous namespace)::ca_render_subregion::~ca_render_subregion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7dd8 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::remote_region, std::__1::allocator<(anonymous namespace)::remote_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7ddc (     0x8) std::__1::__shared_ptr_emplace<(anonymous namespace)::remote_region, std::__1::allocator<(anonymous namespace)::remote_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7de4 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::remote_region, std::__1::allocator<(anonymous namespace)::remote_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7e28 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::remote_region, std::__1::allocator<(anonymous namespace)::remote_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7e48 (    0xdc) WSRemoteRegionNoteModificationActivity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db7f24 (    0xe4) WSConnectionForRemoteRegionContextID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8008 (   0x128) WSDumpRemoteRegions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8130 (   0x278) __WSDumpRemoteRegions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db83a8 (   0x128) WSDumpStructuralRegions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db84d0 (   0x33c) __WSDumpStructuralRegions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db880c (   0x23c) void (anonymous namespace)::structural_region_container::subtree_apply_routine<std::__1::vector<std::__1::shared_ptr<(anonymous namespace)::structural_region> const, std::__1::allocator<std::__1::shared_ptr<(anonymous namespace)::structural_region> const>> (anonymous namespace)::structural_region_container::ordered_regions_of_type<(anonymous namespace)::structural_region>()::'lambda'(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>((anonymous namespace)::structural_region) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8a48 (    0x78) std::__1::enable_if<std::is_base_of<(anonymous namespace)::structural_region_container, (anonymous namespace)::structural_region>::value, std::__1::shared_ptr<(anonymous namespace)::remote_region>>::type (anonymous namespace)::region_pointer_cast<(anonymous namespace)::remote_region, (anonymous namespace)::structural_region>(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8ac0 (    0x70) WSStructrualRegionIsCASurfaceRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8b30 (    0x98) WSStructrualRegionIsCAWindowRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8bc8 (   0x11c) (anonymous namespace)::create_routing_record_dictionary(unsigned int, unsigned int, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8ce4 (   0x1f0) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::operator()(std::__1::shared_ptr<(anonymous namespace)::structural_region> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8ed4 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8ed8 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8edc (    0x24) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone(std::__1::__function::__base<void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8f00 (    0x48) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8f48 (     0x4) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8f4c (     0x4) std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db8f50 (   0x10c) (anonymous namespace)::resize_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db905c (     0xc) non-virtual thunk to (anonymous namespace)::resize_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9068 (    0x2c) non-virtual thunk to (anonymous namespace)::resize_region::~resize_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9094 (     0x8) non-virtual thunk to (anonymous namespace)::resize_region::~resize_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db909c (     0x8) non-virtual thunk to (anonymous namespace)::resize_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db90a4 (    0x58) (anonymous namespace)::resize_region::detach_from_window_internal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db90fc (     0x8) non-virtual thunk to (anonymous namespace)::resize_region::attach() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9104 (     0x8) (anonymous namespace)::resize_region::type_level() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db910c (     0xc) (anonymous namespace)::resize_region::matches_region_type(CGSStructuralRegionType) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9118 (    0x28) (anonymous namespace)::resize_region::~resize_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9140 (     0x4) (anonymous namespace)::resize_region::~resize_region() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9144 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::resize_region, std::__1::allocator<(anonymous namespace)::resize_region>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9148 (     0x8) std::__1::__shared_ptr_emplace<(anonymous namespace)::resize_region, std::__1::allocator<(anonymous namespace)::resize_region>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9150 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::resize_region, std::__1::allocator<(anonymous namespace)::resize_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9194 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::resize_region, std::__1::allocator<(anonymous namespace)::resize_region>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db91b4 (   0x158) WSAddTrackingRegionsToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db930c (   0x30c) __WSAddTrackingRegionsToExternalDebuggingDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9618 (    0x94) CGXWindowArraySubArrayBetween [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db96ac (    0x94) window_array_offset_relative_to [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9740 (   0x104) CGXWindowArrayPutAfter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9844 (    0xc4) change_capacity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9908 (    0x6c) CGXWindowArrayAppend [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9974 (    0x80) CGXWindowArrayRemove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db99f4 (   0x1a0) WSDebuggingPathForPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9b94 (   0x13c) debug_connection_permitted() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9cd0 (    0x78) debug_options_require_apple_internal(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185db9d48 (  0x1b18) set_debug_options(unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbb860 (   0xc18) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc478 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc488 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc4a0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc4b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc4c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185dbc4d8 (    0xd0) append_dump_command(char const*, unsigned int, unsigned int, void (*)(__sFILE*, unsigned int), void (*)(__sFILE*, unsigned int, unsigned int), bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbc5a8 (    0x94) set_internal_custom_debugging_value(char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbc63c (   0x238) DumpWSCDIOPWSAA(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbc874 (     0x4) empty_log(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbc878 (    0x10) WSGetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbc888 (   0x220) WSDumpRegionWithName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbcaa8 (   0x3bc) CGXInitializeGL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbce64 (   0x320) __initialize_cgls_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbd184 (   0x110) CGXGLDisplayDeviceAccelerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbd294 (    0x34) CGXDisplayDeviceHasAccelerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbd2c8 (  0x2c1c) WSInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbfee4 (    0x78) PKGSpaceAnimationDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbff5c (    0x54) _PKGSpaceAnimationList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbffb0 (     0x8) _PKGSpaceAnimationSpaceWillTerminate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbffb8 (    0x44) PKGSpaceAnimationPop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dbfffc (    0x8c) WSCALayerBacking::HitTest(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0088 (    0x50) WSCALayerBacking::RenderContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc00d8 (     0x4) WSCALayerBacking::AddUpdateFlags(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc00dc (   0x750) WSCALayerBacking::AddDebugDescriptionToFile(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc082c (    0x58) WSCALayerBacking::GetBindingsRootBeginHostTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0884 (    0x58) WSCALayerBacking::GetBindingsRootInputHostTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc08dc (     0x8) WSCALayerBacking::GetBindingsRootContextID() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc08e4 (    0x14) WSCALayerBacking::SetWindowOwnerInfo(unsigned int, unsigned int, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc08f8 (    0x20) WSCALayerBacking::GetFlattenedPixelFormat() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0918 (     0x8) WSCALayerBacking::SetForcedPixelFormat(WSPixelFormat) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0920 (     0x8) WSCALayerBacking::SetChameleonColor(float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0928 (     0x8) WSCALayerBacking::HasChameleonLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0930 (     0x8) WSCALayerBacking::HasWSAwareBlurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0938 (     0x8) WSCALayerBacking::SetResolution(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0940 (    0x44) WSCALayerBacking::SetColorSpace(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0984 (    0x44) WSCALayerBacking::SetDefaultColorSpace(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc09c8 (   0x158) WSCALayerBacking::SetDisplay(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0b20 (    0xc0) WSCALayerBacking::DestroyFlattenedRepresentation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0be0 (   0x164) WSCALayerBacking::UpdateFlatteningIfNeeded(float, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0d44 (     0x8) WSCALayerBacking::GetFlattenedRepresentation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0d4c (    0x68) WSCALayerBacking::SetVisible(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0db4 (    0x30) WSCALayerBacking::CopyOpaqueRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0de4 (    0x30) WSCALayerBacking::CopyClipRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0e14 (   0x168) WSCALayerBacking::ClaimPresent(std::__1::vector<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>, std::__1::allocator<std::__1::unique_ptr<WSCAPresent, std::__1::default_delete<WSCAPresent>>>>&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0f7c (    0x70) WSCALayerBacking::UpdateCopyBlurs(_CARenderUpdateBackdropLayerEntry**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc0fec (   0x480) WSCALayerBacking::BeginUpdate(LayerUpdateParams) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc146c (   0x3f0) WSCALayerBacking::InitUpdate(LayerUpdateParams, WSCARenderContextScope&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc185c (    0x6c) WSCALayerBacking::InitializeUpdateParameters(LayerUpdateParams) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc18c8 (   0x4e0) WSCALayerBacking::RunUpdate(WSCARenderContextScope&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc1da8 (   0x4d0) WSCALayerBacking::ResolveUpdate(double, unsigned int, bool, WSCARenderContextScope&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2278 (    0xd0) QuartzCoreLibraryCore(char**) (.13647) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2348 (    0xfc) getCARenderUpdateSetIsSnapshotSymbolLoc() (.13648) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2444 (    0xb8) invocation function for block in getCARenderUpdateSetIsSnapshotSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc24fc (    0x74) invocation function for block in QuartzCoreLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2570 (    0xe0) WSCALayerBacking::GetAccelerator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2650 (    0x58) WSCALayerBacking::CloseCAUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc26a8 (    0x28) WSCALayerBacking::~WSCALayerBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc26d0 (   0x17c) WSCALayerBacking::~WSCALayerBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc284c (    0x48) WSCALayerBacking::WSCALayerBackingBindingsAssociatedValues::~WSCALayerBackingBindingsAssociatedValues() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2894 (     0x4) WSCALayerBacking::~WSCALayerBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2898 (   0x30c) WSCALayerBacking::UpdateBindingsValues() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2ba4 (   0x2a0) WSCALayerBacking::ReplaceBindingsValues(std::__1::map<unsigned int, unsigned long long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, unsigned long long>>>&&, std::__1::map<unsigned int, WS::CFRef<CGSRegionObject*>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, WS::CFRef<CGSRegionObject*>>>>&&, std::__1::map<unsigned int, CGRect, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, CGRect>>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc2e44 (   0x364) WSCALayerBacking::UpdateBindings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc31a8 (   0x1a0) WSCALayerBacking::ReplaceBindings(std::__1::vector<WSCABindingInfo, std::__1::allocator<WSCABindingInfo>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3348 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WSCABindingInfo>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WSCABindingInfo>>(std::__1::allocator<WSCABindingInfo>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3394 (   0x960) WSCALayerBacking::Flatten(double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3cf4 (    0xac) WSCALayerBacking::UpdateInternalRegions(_CARenderContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3da0 (   0x160) WSCALayerBacking::WSCALayerBacking(unsigned int, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3f00 (    0xc8) std::__1::vector<WSCABindingInfo, std::__1::allocator<WSCABindingInfo>>::vector(std::__1::vector<WSCABindingInfo, std::__1::allocator<WSCABindingInfo>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc3fc8 (    0x68) WSCALayerBacking::GetEventMask(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc4030 (    0xc4) WSCALayerBacking::CopyUnobscuredHostedRegion(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc40f4 (    0xd8) WSCALayerBacking::GetUnobscuredRectOfInterest(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc41cc (   0x654) WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc4820 (    0x58) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc4878 (   0xb68) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, WSCABindingInfo*>(WSCABindingInfo*, WSCABindingInfo*, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, std::__1::iterator_traits<WSCABindingInfo*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc53e0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dc53f8 (    0xd0) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc54c8 (    0x64) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc552c (    0xac) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc55d8 (    0xa8) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc5680 (    0x98) invocation function for block in WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc5718 (   0x304) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, WSCABindingInfo*>(WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc5a1c (   0x218) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, WSCABindingInfo*>(WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc5c34 (   0x2b4) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, WSCABindingInfo*>(WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCABindingInfo*, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc5ee8 (   0x2a8) bool std::__1::__insertion_sort_incomplete<WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&, WSCABindingInfo*>(WSCABindingInfo*, WSCABindingInfo*, WSCALayerBacking::UpdateBindingsTree(WSStructuralRegion*)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc6190 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185dc61a8 (   0x8cc) WSCALayerBacking::FinishBindingShapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc6a74 (    0xb4) invocation function for block in WSCALayerBacking::FinishBindingShapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc6b28 (   0x76c) invocation function for block in WSCALayerBacking::FinishBindingShapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc7294 (    0x4c) invocation function for block in WSCALayerBacking::FinishBindingShapes(WSStructuralRegion*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc72e0 (    0x4c) WSCALayerBacking::GetLastContextCommitSeed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc732c (    0x98) WSCALayerBacking::UpdateBoundsExceedIOSurfaceLimits() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc73c4 (    0x84) WSCALayerBackingGetFlattenedMetalBacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc7448 (    0x78) WSCALayerBackingIsFlattenedCopyPurgeable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc74c0 (    0x5c) WSCALayerBackingIsFlattenedCopyValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc751c (    0x60) WSCALayerBackingGetInputHostTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc757c (   0x590) WSCALayerBackingCreateExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc7b0c (    0x60) WSCALayerDetachRemoveCurrentLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc7b6c (   0x3e0) CGLoadSnappingPrefsFromDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc7f4c (   0x180) _CGGetGlobalBoolValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc80cc (    0xa8) _CGGetGlobalFloatValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8174 (    0x4c) _CGCopyValueFromFileOrFromPrefs [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc81c0 (    0x9c) active_display_notification(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc825c (    0xc0) key_focus_notification(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc831c (    0x9c) performSessionBlock(int, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc83b8 (    0xa0) invocation function for block in performSessionBlock(int, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8458 (    0x7c) performBlock(void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc84d4 (    0x58) setVisible(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc852c (    0x68) setHIDEvent(SLSEventRecord*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8594 (     0xc) getHIDEvent(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc85a0 (   0x18c) postEvent(SLSEventRecord*, WSTouchBarEventPostStyle, int, unsigned int, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc872c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185dc873c (    0x38) freeEvent(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8774 (    0x40) copyEvent(SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc87b4 (    0xb4) createEvent(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8868 (    0x90) WSTouchBarEventHIDTranslationHook [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc88f8 (    0xc0) WSTouchBarSetFrontmostOnManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc89b8 (   0x1b0) SLSHideCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8b68 (    0xfc) SLSShowCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8c64 (    0xb8) SLSInitCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8d1c (    0x80) SLSSetSystemDefinedCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8d9c (   0x108) SLSForceShowCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc8ea4 (   0x318) SLSSetRegisteredCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc91bc (    0x1c) __is_cursor_registered_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc91d8 (    0x58) cstring_copy_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9230 (     0x4) SLSUnshieldCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9234 (    0xac) SLSForceWaitCursorActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc92e0 (   0x1ac) SLSObscureCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc948c (    0xf8) SLSRevealCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9584 (     0x4) SLSShieldCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9588 (     0x4) SLSCosmeticShieldCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc958c (    0x3c) SLSHardwareCursorActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc95c8 (    0x38) SLSSetSystemDefinedCursorWithSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9600 (    0x38) SLSCursorNameForSystemCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9638 (    0x24) SLSCurrentCursorSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc965c (   0x16c) SLSSetCursorFromData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc97c8 (   0x5d0) SLSRegisterCursorWithData2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9d98 (    0xd0) SLSRegisterCursorWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9e68 (    0xec) SLSSetCursorFromPremultipliedDataWithSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dc9f54 (   0x210) SLSRegisterCursorWithImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca164 (   0x320) SLSRegisterCursorWithImages [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca484 (    0x10) SLSGetCursorDataSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca494 (   0x230) SLSGetRegisteredCursorDataSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca6c4 (    0x10) SLSGetGlobalCursorDataSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca6d4 (    0x38) SLSGetSystemDefinedCursorDataSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca70c (    0xac) SLSGetCursorData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dca7b8 (   0x37c) SLSGetRegisteredCursorData2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcab34 (    0x34) SLSGetRegisteredCursorData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcab68 (    0xac) SLSGetGlobalCursorData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcac14 (    0xcc) SLSGetSystemDefinedCursorData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcace0 (   0x16c) SLSCreateRegisteredCursorImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcae4c (     0x8) release_cursor_data [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcae54 (   0x23c) SLSRemoveRegisteredCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcb090 (    0xb8) SLSSetCursorScale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcb148 (   0x19c) SLSGetCursorScale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcb2e4 (   0x520) SLSCopyRegisteredCursorImages [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcb804 (   0x788) DisplayStreamState::CreateIOSurfaceProperties(int, int, int, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcbf8c (   0x248) WSDisplayStreamGetOutputSourceRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc1d4 (    0xe0) calculate_gaussian_weights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc2b4 (   0x1d0) get_bilinear_gaussian_weight_and_steps [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc484 (    0x54) calculate_bilinear_weights(unsigned int, float*, float*, float*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc4d8 (   0x1c4) get_tap_trim_radius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc69c (    0xc0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc75c (    0xb4) addStringToString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcc810 (   0x4fc) compose_gaussian_metal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dccd0c (   0x1dc) compose_max_metal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dccee8 (   0x28c) compose_max_2d_metal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd174 (   0x1bc) SLSPostBroadcastNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd330 (    0xb4) std::__1::unordered_map<unsigned int, std::__1::vector<(anonymous namespace)::Callout, std::__1::allocator<(anonymous namespace)::Callout>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<(anonymous namespace)::Callout, std::__1::allocator<(anonymous namespace)::Callout>>>>>::find[abi:v160006](unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd3e4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<(anonymous namespace)::Callout>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<(anonymous namespace)::Callout>>(std::__1::allocator<(anonymous namespace)::Callout>&, unsigned long) (.13976) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd41c (   0x1f4) SLSRegisterNotifyProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd610 (   0x224) SLSRemoveNotifyProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd834 (    0x68) WSIDTreeNodeTraversePreOrder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd89c (    0xd0) WSIDTreeInitializeNextNode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcd96c (   0x2ac) WSIDTreeConnectInitializedNodes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcdc18 (    0x3c) __WSIDTreeConnectInitializedNodes_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcdc54 (   0x27c) SLSCreateDefaultMetalDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcded0 (   0x158) SLSDisplayCopyCurrentMetalDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce028 (    0x58) __enable_mux_behavior_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce080 (    0xf8) SLSGetCAMetalDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce178 (    0x10) WS::Displays::config_command_origin::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce188 (   0x1c0) WS::Displays::config_command_origin::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce348 (     0x4) WS::Displays::config_command::apply_post_commands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce34c (     0x4) WS::Displays::config_command::apply_pre_commands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce350 (    0x4c) WS::Displays::config_command_origin::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce39c (     0x4) WS::Displays::config_command_origin::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce3a0 (     0x4) WS::Displays::config_command_origin::~config_command_origin() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce3a4 (     0x4) WS::Displays::config_command_origin::~config_command_origin() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce3a8 (    0x10) WS::Displays::config_command_mirror::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce3b8 (   0x1b8) WS::Displays::config_command_mirror::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce570 (     0x4) WS::Displays::config_command_mirror::apply_pre_commands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dce574 (   0x518) WS::Displays::config_command_mirror::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcea8c (   0x3d4) WS::Displays::get_current_relationship_map(WS::Displays::config_set const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcee60 (   0x21c) WS::Displays::associate_secondary_to_primary(WS::Displays::config_set_entry&, WS::Displays::config_set_entry&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf07c (   0x190) std::__1::map<int, std::__1::vector<int, std::__1::allocator<int>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::vector<int, std::__1::allocator<int>>>>>::map[abi:v160006](std::__1::map<int, std::__1::vector<int, std::__1::allocator<int>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::vector<int, std::__1::allocator<int>>>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf20c (   0x138) WS::Displays::has_secondary_id(std::__1::map<int, std::__1::vector<int, std::__1::allocator<int>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::vector<int, std::__1::allocator<int>>>>>, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf344 (    0x5c) std::__1::__tree<std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf3a0 (   0x15c) WS::Displays::unassociate_secondary(int, WS::Displays::config_set&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf4fc (   0x154) WS::Displays::children_of_primary(int, WS::Displays::config_set const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf650 (    0x88) WS::Displays::associate_children_to_primary(std::__1::vector<int, std::__1::allocator<int>>, WS::Displays::config_set_entry&, WS::Displays::config_set&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf6d8 (    0x4c) WS::Displays::unassociate_primary(int, WS::Displays::config_set&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf724 (   0x124) WS::Displays::demote_to_independent(WS::Displays::config_set_entry&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcf848 (   0x258) WS::Displays::config_set_entry::set_modes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfaa0 (    0x58) std::__1::__tree<std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<int, std::__1::allocator<int>>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfaf8 (    0x24) WS::Displays::config_command_mirror::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfb1c (     0x4) WS::Displays::config_command_mirror::~config_command_mirror() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfb20 (     0x4) WS::Displays::config_command_mirror::~config_command_mirror() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfb24 (    0x10) WS::Displays::config_command_unmirror::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfb34 (   0x1b0) WS::Displays::config_command_unmirror::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfce4 (   0x1a4) WS::Displays::config_command_unmirror::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfe88 (    0x30) WS::Displays::config_command_unmirror::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfeb8 (     0x4) WS::Displays::config_command_unmirror::~config_command_unmirror() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfebc (     0x4) WS::Displays::config_command_unmirror::~config_command_unmirror() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfec0 (    0x10) WS::Displays::config_command_softplug::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dcfed0 (   0x1a8) WS::Displays::config_command_softplug::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0078 (   0x104) WS::Displays::config_command_softplug::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd017c (    0x1c) WS::Displays::config_command_softplug::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0198 (     0x4) WS::Displays::config_command_softplug::~config_command_softplug() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd019c (     0x4) WS::Displays::config_command_softplug::~config_command_softplug() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd01a0 (    0x10) WS::Displays::config_command_mode::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd01b0 (   0x1b8) WS::Displays::config_command_mode::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0368 (   0x13c) WS::Displays::config_command_mode::apply_post_commands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd04a4 (    0xf4) WS::Displays::config_command_mirror::make_command(WS::Displays::config_set&, int, int, std::__1::pair<bool, bool>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0598 (   0x23c) WS::Displays::config_command_mode::apply_pre_commands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd07d4 (    0xa0) WS::Displays::config_command_unmirror::make_command(WS::Displays::config_set&, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0874 (   0x5b4) WS::Displays::config_command_mode::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0e28 (    0x98) WS::Displays::config_command_mode::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0ec0 (    0x60) WS::Displays::config_command_mode::~config_command_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0f20 (    0x50) WS::Displays::config_command_mode::~config_command_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0f70 (    0x10) WS::Displays::config_command_output_mode::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd0f80 (   0x1b0) WS::Displays::config_command_output_mode::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd1130 (    0x80) WS::Displays::config_command_output_mode::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd11b0 (     0x4) WS::Displays::config_command_output_mode::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd11b4 (     0x4) WS::Displays::config_command_output_mode::~config_command_output_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd11b8 (     0x4) WS::Displays::config_command_output_mode::~config_command_output_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd11bc (    0x10) WS::Displays::config_command_rotation::name() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd11cc (   0x1b0) WS::Displays::config_command_rotation::debug_description() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd137c (    0x48) WS::Displays::config_command_rotation::apply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd13c4 (     0x4) WS::Displays::config_command_rotation::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd13c8 (     0x4) WS::Displays::config_command_rotation::~config_command_rotation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd13cc (     0x4) WS::Displays::config_command_rotation::~config_command_rotation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd13d0 (   0x994) WS::Displays::config_set::debug_description() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd1d64 (    0x8c) WS::Displays::create_uuid_cstr_from_uuid_bytes(CFUUIDBytes const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd1df0 (    0x88) WS::Displays::config_set_entry::~config_set_entry() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd1e78 (    0xd4) WS::Displays::uuid_bytes_for_key(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd1f4c (   0x1c8) WS::Displays::unpack_origin_and_mode_dict(__CFDictionary const*, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd2114 (   0x148) WS::Displays::pack_origin_and_mode_dict(__CFDictionary*, CGPoint const&, WS::Displays::PartialMode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd225c (   0x148) WS::Displays::pack_origin_and_mode_dict(__CFDictionary*, CGPoint const&, WS::Displays::Mode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd23a4 (   0x1a4) WS::Displays::match_mode(std::__1::vector<WS::Displays::Mode, std::__1::allocator<WS::Displays::Mode>> const&, WS::Displays::PartialMode const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd2548 (    0xdc) WS::Displays::config_set_entry::resolve_mode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd2624 (   0x794) WS::Displays::config_set::create_config_set(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&, bool, WS::Displays::Manager*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd2db8 (   0x30c) std::__1::vector<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>>::push_back[abi:v160006](WS::Displays::config_set_entry const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd30c4 (   0x13c) WS::Displays::config_set_entry* std::__1::construct_at[abi:v160006]<WS::Displays::config_set_entry, WS::Displays::config_set_entry const&, WS::Displays::config_set_entry*>(WS::Displays::config_set_entry*, WS::Displays::config_set_entry const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd3200 (    0x50) std::__1::__split_buffer<WS::Displays::config_set_entry, std::__1::allocator<WS::Displays::config_set_entry>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd3250 (    0x90) std::__1::__optional_destruct_base<WS::Displays::config_set_entry, false>::~__optional_destruct_base[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd32e0 (    0xa4) WS::Displays::config_set::matches_exactly(std::__1::vector<CFUUIDBytes, std::__1::allocator<CFUUIDBytes>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd3384 (   0x2a8) WS::Displays::config_set::matches(std::__1::vector<CFUUIDBytes, std::__1::allocator<CFUUIDBytes>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd362c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CFUUIDBytes>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CFUUIDBytes>>(std::__1::allocator<CFUUIDBytes>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd3664 (   0xccc) WS::Displays::config_set::sanitize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4330 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::config_set_entry*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::config_set_entry*>>(std::__1::allocator<WS::Displays::config_set_entry*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4368 (   0x100) WS::Displays::position_is_ok(std::__1::vector<std::__1::unique_ptr<WS::Displays::(anonymous namespace)::monitor, std::__1::default_delete<WS::Displays::(anonymous namespace)::monitor>>, std::__1::allocator<std::__1::unique_ptr<WS::Displays::(anonymous namespace)::monitor, std::__1::default_delete<WS::Displays::(anonymous namespace)::monitor>>>> const&, WS::Displays::(anonymous namespace)::monitor const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4468 (   0x2a4) WS::Displays::rect_intersects(WS::Displays::(anonymous namespace)::monitor const*, WS::Displays::(anonymous namespace)::monitor const*, WS::Displays::(anonymous namespace)::monitor const*, long&, long&, long&, long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd470c (    0x68) std::__1::vector<std::__1::unique_ptr<WS::Displays::(anonymous namespace)::monitor, std::__1::default_delete<WS::Displays::(anonymous namespace)::monitor>>, std::__1::allocator<std::__1::unique_ptr<WS::Displays::(anonymous namespace)::monitor, std::__1::default_delete<WS::Displays::(anonymous namespace)::monitor>>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4774 (    0x84) WS::Displays::point_on_rect(CGRect const&, CGRect const&, long, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd47f8 (    0x5c) WS::Displays::config_set::main_display() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4854 (    0xb4) WS::Displays::config_set::display_uuids() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4908 (    0xf8) std::__1::back_insert_iterator<std::__1::vector<CFUUIDBytes, std::__1::allocator<CFUUIDBytes>>>::operator=[abi:v160006](CFUUIDBytes&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4a00 (    0xb0) WS::Displays::config_command_mode::make_command(WS::Displays::config_set&, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4ab0 (    0xa8) WS::Displays::config_command_rotation::make_command(WS::Displays::config_set&, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4b58 (    0xfc) WS::Displays::configuration_engine::reset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4c54 (     0x4) WS::Displays::reconfigure_displays_timed_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd4c58 (  0x3170) WS::Displays::configuration_engine::reconfigure_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd7dc8 (  0x1078) WS::Displays::configuration_engine::save_current_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd8e40 (  0x1188) WS::Displays::stored_config_sets(bool, WS::Displays::Manager*, WS::Displays::configuration_engine_dependencies_interface const&, WS::ConfigurationInterface const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dd9fc8 (    0xa0) std::__1::vector<WS::Displays::config_set, std::__1::allocator<WS::Displays::config_set>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda068 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::config_set>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::config_set>>(std::__1::allocator<WS::Displays::config_set>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda0b0 (    0x8c) std::__1::__split_buffer<WS::Displays::config_set, std::__1::allocator<WS::Displays::config_set>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda13c (    0x7c) std::__1::pair<WS::Displays::config_set*, WS::Displays::config_set*> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<WS::Displays::config_set*, WS::Displays::config_set*, WS::Displays::config_set*>(WS::Displays::config_set*, WS::Displays::config_set*, WS::Displays::config_set*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda1b8 (   0x30c) WS::Displays::configuration_engine::remove_clone_for_id(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda4c4 (    0xac) std::__1::pair<std::__1::__tree_iterator<int, std::__1::__tree_node<int, void*>*, long>, bool> std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int>>::__emplace_unique_key_args<int, int>(int const&, int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda570 (    0x4c) std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int>>::destroy(std::__1::__tree_node<int, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda5bc (    0x58) std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dda614 (  0x15b8) WS::Displays::configuration_engine::config_via_client_api(int, CGSDisplayConfig*, unsigned int, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbbcc (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000185ddbbf4 (    0xc8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, bool>, std::__1::__tree_node<std::__1::__value_type<int, bool>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool>>>::__emplace_unique_key_args<int, int const&, int&>(int const&, int const&, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbcbc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, std::__1::pair<bool, bool>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<int, std::__1::pair<bool, bool>>>>(std::__1::allocator<std::__1::pair<int, std::__1::pair<bool, bool>>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbcf4 (    0xbc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, int>, std::__1::__tree_node<std::__1::__value_type<int, int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::__emplace_unique_key_args<int, int const&, int const&>(int const&, int const&, int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbdb0 (    0xb4) WS::Displays::configuration_engine::begin(WS::Displays::config_set const&, WS::Displays::config_set const&, WS::Displays::ConfigPersistenceOptions) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbe64 (   0x120) WS::Displays::configuration_engine::apply_command(std::__1::unique_ptr<WS::Displays::config_command, std::__1::default_delete<WS::Displays::config_command>> const&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddbf84 (   0x3fc) WS::Displays::configuration_engine::commit(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddc380 (    0x4c) std::__1::__tree<std::__1::__value_type<int, SLSLinkDescription>, std::__1::__map_value_compare<int, std::__1::__value_type<int, SLSLinkDescription>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, SLSLinkDescription>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, SLSLinkDescription>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddc3cc (    0x4c) std::__1::__tree<std::__1::__value_type<int, CGPoint>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGPoint>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CGPoint>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, CGPoint>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddc418 (   0x974) WS::Displays::configuration_engine::determine_change_summary_for_config_sets(WS::Displays::config_set const&, WS::Displays::config_set const&, WS::Displays::change_summary&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddcd8c (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000185ddcdb4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, int>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<int, int>>>(std::__1::allocator<std::__1::pair<int, int>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddcdec (   0x190) WS::Displays::configuration_engine::perform_deferred_configuration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddcf7c (   0x9c4) WS::Displays::configuration_engine::config_from_persistent_store(WS::Displays::config_set const&, std::__1::vector<CFUUIDBytes, std::__1::allocator<CFUUIDBytes>> const&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddd940 (   0xdd4) WS::Displays::configuration_engine::config_for_first_boot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dde714 (   0x364) WS::Displays::configuration_engine::find_match_in_persistent_store(std::__1::vector<CFUUIDBytes, std::__1::allocator<CFUUIDBytes>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddea78 (   0x10c) WS::Displays::configuration_engine::perform_default_configuration(WS::Displays::config_set const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddeb84 (    0x8c) invocation function for block in WS::Displays::configuration_engine::determine_startup_logo_display_id() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddec10 (   0x19c) WS::Displays::nested_config_timed_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ddedac (  0x1a08) WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de07b4 (    0xb8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ConnectionWork>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ConnectionWork>>>::__emplace_unique_key_args<int, std::__1::pair<int, WS::Displays::ConnectionWork>>(int const&, std::__1::pair<int, WS::Displays::ConnectionWork>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de086c (   0x1dc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ConnectionWork>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ConnectionWork>>>::__emplace_hint_unique_key_args<int, int const&, WS::Displays::ConnectionWork&>(std::__1::__tree_const_iterator<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ConnectionWork>, void*>*, long>, int const&, int const&, WS::Displays::ConnectionWork&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0a48 (    0x74) std::__1::__tree<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ConnectionWork>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ConnectionWork>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0abc (    0xa8) WS::Displays::configuration_engine::dfr_display_blank(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0b64 (    0x4c) std::__1::__tree<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ConnectionWork>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ConnectionWork>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0bb0 (    0x58) std::__1::__tree<std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ConnectionWork>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ConnectionWork>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c08 (    0x14) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c1c (     0x4) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c20 (     0x4) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c24 (    0x24) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c48 (    0x48) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c90 (     0x4) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c94 (     0x4) std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c98 (     0x4) WS::Displays::display_prefs_apply_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de0c9c (   0x710) WS::Displays::display_prefs_loaded_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de13ac (     0x4) WS::Displays::Manager::~Manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de13b0 (     0x4) WS::Displays::Manager::~Manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de13b4 (    0x84) WS::Displays::Manager::set_is_brightness_attached(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1438 (   0x188) WS::Displays::Manager::display_by_id(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de15c0 (    0x78) WS::Displays::Manager::reset_brightness_state(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1638 (    0xd8) WS::Displays::Manager::post_edr_changed_notification(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1710 (   0x384) WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1a94 (     0xc) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1aa0 (     0x4) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1aa4 (     0x4) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1aa8 (    0x24) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1acc (    0x48) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1b14 (     0x4) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1b18 (     0x4) std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1b1c (   0x10c) WS::Displays::Manager::shutdown() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de1c28 (   0x4fc) WS::Displays::Manager::display_with_options(int, CGRect const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2124 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185de2134 (   0x138) WS::Displays::Manager::display_by_number(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de226c (    0xc4) WS::Displays::Manager::display_by_unit(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2330 (   0x104) WS::Displays::Manager::hardware_display_by_id(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2434 (    0xbc) WS::Displays::Manager::dfr_display_by_id(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de24f0 (   0x154) WS::Displays::Manager::display_by_uuid(CFUUIDBytes) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2644 (    0xfc) WS::Displays::Manager::display_by_container_id(__CFUUID const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2740 (    0xf8) WS::Displays::Manager::display_schedule_empty_update(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2838 (     0x8) invocation function for block in WS::Displays::Manager::display_schedule_empty_update(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2840 (   0x3c8) WS::Displays::Manager::update_power_assertions(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2c08 (    0xd0) IOKitLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2cd8 (    0xe4) getIOPMSetDesktopModeWithOptionsSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2dbc (    0x90) invocation function for block in WS::Displays::Manager::update_power_assertions(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2e4c (    0x10) invocation function for block in WS::Displays::Manager::update_power_assertions(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2e5c (    0x88) invocation function for block in WS::Displays::Manager::update_power_assertions(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2ee4 (    0xb8) invocation function for block in getIOPMSetDesktopModeWithOptionsSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de2f9c (    0x74) invocation function for block in IOKitLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3010 (    0xc0) WS::Displays::Manager::release_prevent_system_sleep_assertion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de30d0 (    0x30) invocation function for block in WS::Displays::Manager::release_prevent_system_sleep_assertion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3100 (    0xec) invocation function for block in WS::Displays::Manager::acquire_prevent_system_sleep_assertion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de31ec (    0x70) WS::Displays::Manager::get_display_request_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de325c (    0x68) WS::Displays::Manager::get_display_request_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de32c4 (   0x67c) WS::Displays::Manager::display_request_enqueue_block(unsigned long long, unsigned long long, SLSDisplayControlRequestType, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3940 (   0x1ac) WS::Displays::Manager::displays_request_dequeue_run_one_pass(SLSDisplayControlRequestType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3aec (   0x194) invocation function for block in WS::Displays::Manager::displays_request_dequeue_run_one_pass(SLSDisplayControlRequestType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3c80 (    0x50) invocation function for block in WS::Displays::Manager::displays_request_dequeue_run_one_pass(SLSDisplayControlRequestType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3cd0 (    0x50) std::__1::deque<WS::Displays::DisplayRequestBlockElement*, std::__1::allocator<WS::Displays::DisplayRequestBlockElement*>>::__maybe_remove_front_spare[abi:v160006](bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3d20 (    0x50) WS::Displays::retry_display_request_processing_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3d70 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Displays::DisplayRequestBlockElement**>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Displays::DisplayRequestBlockElement**>>(std::__1::allocator<WS::Displays::DisplayRequestBlockElement**>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3da8 (   0x1a4) invocation function for block in WS::Displays::Manager::display_request_enqueue(SLSDisplayControl, int, double, SLSClamshellState, bool, unsigned long long, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de3f4c (   0x2a8) WS::Displays::Manager::displays_xpc_request_state(__CFDictionary const*, unsigned long long, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de41f4 (    0x98) WS::Displays::Manager::all_displays_are_captured() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de428c (   0x794) WS::Displays::Manager::display_state_data_for_type(SLDisplayStateDataType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4a20 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185de4a3c (    0xb8) WS::Displays::Manager::checkin_with_iopm(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4af4 (   0x150) invocation function for block in WS::Displays::Manager::checkin_with_iopm(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4c44 (     0x8) WS::Displays::iopm_checkin_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4c4c (     0x4) WS::Displays::session_callback_display_safe_aperture_did_change(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4c50 (    0x84) WS::Displays::session_callback_display_config_did_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4cd4 (    0xc0) WS::Displays::session_callback_display_config_did_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4d94 (    0xc8) WS::Displays::reset_valid_display_changed_seeds_for_pid(WSSessionDisplayConfigData const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4e5c (    0x88) WS::Displays::latch_valid_display_changed_seed(WSSessionDisplayConfigData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4ee4 (     0xc) WS::Displays::dictionary_add_valid_seed_applier(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4ef0 (    0x34) WS::Displays::create_description_from_int(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de4f24 (    0xe4) WS::Displays::session_callback_display_config_will_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5008 (    0x84) WS::Displays::session_callback_display_config_display_changed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de508c (    0x24) WS::Displays::session_callback_display_config_state_changed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de50b0 (    0xec) WS::Displays::session_callback_display_did_reconfigure(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de519c (    0x50) invocation function for block in WS::Displays::Manager::update_cursor_clip_shape() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de51ec (    0xcc) WSDisplayManagerMainDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de52b8 (    0xcc) WSDisplayManagerMainDisplayDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5384 (    0xb0) WSDisplayManagerBoundsForDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5434 (    0xec) WSDisplayManagerBoundsRectForDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5520 (    0x9c) WSDisplayManagerCreateWindowedRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de55bc (    0x50) WSDisplayManagerShutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de560c (    0xa8) WSCountDisplaysContainingPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de56b4 (    0x9c) WSDisplayManagerInvalidateGeometrySeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5750 (    0x6c) WSSessionDisplayConfigIsDisplayChangedSeedValidForPID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de57bc (   0x18c) WSDisplayManagerGetRealtimeDisplayDataShmemPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5948 (   0x120) SLSScreenCaptureAccessCheck [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5a68 (   0x180) __SLSScreenCaptureAccessCheck_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5be8 (    0xf0) invocation function for block in with_credentials_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5cd8 (   0x1e8) invocation function for block in with_credentials_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5ec0 (    0xa0) invocation function for block in with_credentials_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5f60 (    0x7c) invocation function for block in with_credentials_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de5fdc (    0x2c) invocation function for block in get_credentials_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6008 (    0xa0) __SLSScreenCaptureAccessCheck_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de60a8 (    0x5c) SLSCurrentRealTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6104 (    0x7c) __timestamp_scale_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6180 (    0x58) CGSRealTimeToAbsoluteTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de61d8 (    0x68) SLSAbsoluteTimeToNanoseconds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6240 (    0x70) SLSServerAbsoluteTimeToClientAbsoluteTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de62b0 (    0x9c) __SLSServerAbsoluteTimeToClientAbsoluteTime_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de634c (   0x11c) WSDebugLayerInsertColorLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6468 (    0xe0) create_debug_layer_common [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6548 (   0x148) WSDebugLayerInsertWindowLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6690 (   0x168) WSDebugLayerInsertSurfaceLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de67f8 (   0x22c) __WSDebugLayerInsertTrackingLayer_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6a24 (    0x44) create_non_empty_intersecting_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6a68 (   0x178) create_and_insert_tracking_layer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6be0 (    0xec) WSAddTrackingArea [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6ccc (    0x58) WSRemoveAllTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6d24 (    0x10) __WSRemoveAllTrackingAreas_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6d34 (   0x11c) WSAddTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6e50 (     0x4) WS::Displays::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6e54 (     0x4) WS::Displays::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de6e58 (  0x1a98) WS::Displays::Display::create_debugging_dictionary() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de88f0 (     0x8) WS::Displays::Display::is_active_preset_reference() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de88f8 (     0x8) WS::Displays::Display::supports_hardware_cursor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8900 (     0x8) WS::Displays::Display::cursor_in_framebuffer() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8908 (     0x8) WS::Displays::Display::cursor_active() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8910 (     0x8) WS::Displays::Display::register_transaction_complete_callback(void (*)(DisplayPresentInfo)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8918 (    0x44) WS::Displays::Display::supports_present_handlers() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de895c (    0x38) WS::Displays::Display::render_transition_update(WS::Displays::Update&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8994 (     0x8) WS::Displays::Display::is_hdr_10() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de899c (    0x1c) WS::Displays::Display::set_contrast_ratio(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de89b8 (    0x2c) WS::Displays::Display::set_filtered_ambient_lux(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de89e4 (    0x1c) WS::Displays::Display::filtered_ambient_lux() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8a00 (    0x2c) WS::Displays::Display::set_ambient_lux(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8a2c (    0x1c) WS::Displays::Display::ambient_lux() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8a48 (    0x2c) WS::Displays::Display::set_current_headroom(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8a74 (    0x1c) WS::Displays::Display::current_headroom() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8a90 (    0x2c) WS::Displays::Display::set_sdr_nits(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8abc (    0x24) WS::Displays::Display::sdr_nits() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8ae0 (   0x2e4) WS::Displays::Display::render_attributes() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8dc4 (     0x4) WS::Displays::Display::set_is_slvd_exclusive(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8dc8 (     0x8) WS::Displays::Display::is_slvd_exclusive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8dd0 (    0x9c) WS::Displays::Display::is_exclusive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8e6c (     0x4) WS::Displays::Display::evaluate_vrr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8e70 (     0x8) WS::Displays::Display::is_triple_buffered() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8e78 (     0x4) WS::Displays::Display::update_realtime_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8e7c (    0x8c) WS::Displays::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de8f08 (   0x130) WS::Displays::Display::initialize_realtime_shmem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de9038 (    0x94) WS::Displays::Display::reset_realtime_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de90cc (   0x220) WS::Displays::Display::reset_realtime_brightness_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de92ec (   0x148) WS::Displays::Display::update_common_realtime_data(WSRealtimeDisplayData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de9434 (    0x9c) WS::Displays::Display::native_aspect_ratio() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de94d0 (   0x1b0) WS::Displays::Display::create_transformed_display_path_physical_to_logical(CGPath const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de9680 (   0x8f8) WS::Displays::Display::evaluate_sarlacc_paths() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185de9f78 (   0x228) WS::Displays::Display::create_sarlacc_physical_path(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea1a0 (    0x50) (null) [FUNC, FunctionStarts] 
                0x0000000185dea1f0 (    0x6c) WS::Displays::Display::current_mode_has_sarlacc() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea25c (    0xd0) CoreUILibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea32c (    0xfc) getCUICreateDisplayShapeSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea428 (    0x64) soft_CUICreateDisplayShape(unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea48c (    0xb8) invocation function for block in getCUICreateDisplayShapeSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea544 (    0x74) invocation function for block in CoreUILibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea5b8 (    0xa8) WS::Displays::Display::allows_greedy_video() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea660 (   0x214) WS::Displays::Display::vbl_aligned_time_after(double, unsigned int, double, double, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea874 (    0xd8) WS::Displays::GetDisplayUUIDs(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea94c (    0x9c) WSDisplayGetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dea9e8 (    0x48) WSDisplayRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deaa30 (    0xd8) WSVirtualDisplayCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deab08 (    0x98) WSVirtualDisplayDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deaba0 (    0xcc) WSVirtualDisplayApplyWithDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deac6c (    0xb8) WSDisplaySetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dead24 (   0x154) WSDisplayGetSarlaccRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deae78 (    0xc4) WSDisplayGetMenubarHeight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deaf3c (   0x10c) PKGStatusItemsCopyInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb048 (   0x454) __PKGStatusItemsCopyInfo_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb49c (    0xc0) WalkAllStatusItems(void (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb55c (    0xc4) invocation function for block in WalkAllStatusItems(void (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb620 (    0x80) CFArrayApplyBlock(__CFArray const*, void (void const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb6a0 (    0x18) array_block_applier_function(void const*, void*) (.14855) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb6b8 (    0x10) invocation function for block in WalkAllStatusItems(void (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb6c8 (   0x19c) DesiredSpaceForStatusItem(SystemStatusBarItem_t const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb864 (    0xe8) PKGSpaceGetStatusBarRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb94c (    0x2c) __PKGSystemStatusBarSpaceHasClones_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deb978 (   0x124) WalkAllStatusItemsUntil(bool (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deba9c (    0xe0) invocation function for block in WalkAllStatusItemsUntil(bool (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debb7c (    0x4c) invocation function for block in WalkAllStatusItemsUntil(bool (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debbc8 (    0x6c) __PKGSystemStatusBarGetWindowIDs_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debc34 (    0x60) __PKGSystemStatusBarGetWindowsOnDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debc94 (    0x84) ItemIsAssociatedWithDisplay(SystemStatusBarItem_t const*, PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debd18 (    0x38) __PKGSystemStatusBarSpaceIsTerminating_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185debd50 (  0x1120) RepositionAndClipStatusItemList(PKGManagedMenuSpace*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dece70 (   0x224) UpdateVisibilityOfStatusItemList(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded094 (   0x178) invocation function for block in UpdateVisibilityOfStatusItemList(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded20c (   0x10c) WalkStatusItemsOnSpace(PKGManagedMenuSpace*, void (SystemStatusBarItem_t*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded318 (    0xd8) status_bar_alpha_on_space(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded3f0 (    0x3c) invocation function for block in CopyStatusItemsOnSpace(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded42c (   0x124) invocation function for block in RepositionAndClipStatusItemList(PKGManagedMenuSpace*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded550 (    0x88) status_bar_evaluate_sarlacc_presence(PKGManagedMenuSpace*, CGRect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded5d8 (   0x420) assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ded9f8 (   0x428) reassign_status_items_to_buckets_if_needed(StatusBarBucket*, int, x_list_struct*, SystemStatusBarItem_t*, x_list_struct**, x_list_struct**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dede20 (   0x144) position_status_items_in_buckets(PKGManagedMenuSpace*, bool, CGRect, StatusBarBucket*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dedf64 (    0x68) invocation function for block in RepositionAndClipStatusItemList(PKGManagedMenuSpace*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dedfcc (    0xf0) invocation function for block in update_status_item_preferred_positions(x_list_struct*, x_list_struct*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee0bc (    0xb8) invocation function for block in update_status_item_preferred_positions(x_list_struct*, x_list_struct*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee174 (    0x94) invocation function for block in update_status_item_preferred_positions(x_list_struct*, x_list_struct*, x_list_struct*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee208 (    0x2c) invocation function for block in move_status_item_animated(SystemStatusBarItem_t*, CGRect, CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee234 (   0x130) invocation function for block in move_status_item_animated(SystemStatusBarItem_t*, CGRect, CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee364 (    0x74) invocation function for block in move_clipped_item_windows(x_list_struct*, bool, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee3d8 (    0xac) invocation function for block in move_clipped_item_windows(x_list_struct*, bool, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee484 (    0x48) invocation function for block in note_status_bar_fill_remainder(PKGManagedMenuSpace*, StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee4cc (   0x10c) ResortStatusBarItems(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee5d8 (    0x74) StatusItemSortComparator(SystemStatusBarItem_t const*, SystemStatusBarItem_t const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee64c (    0x64) invocation function for block in reassign_items_to_un_clip_innermost_never_clip(StatusBarBucket*, int, x_list_struct*, SystemStatusBarItem_t*, x_list_struct**, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee6b0 (    0x38) invocation function for block in assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee6e8 (    0x78) invocation function for block in assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee760 (     0xc) invocation function for block in assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee76c (     0xc) invocation function for block in assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee778 (     0x8) invocation function for block in assign_status_items_to_buckets(StatusBarBucket*, int, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee780 (    0xc0) invocation function for block in UpdateAlphaOfStatusItemList(PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee840 (    0x2c) __PKGRemoveStatusItemsForWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee86c (    0x48) invocation function for block in CondemnStatusItemsPassingTest(bool (SystemStatusBarItem_t const*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dee8b4 (   0x150) RemoveCondemnedStatusItems() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deea04 (    0xa8) PKGSetNeedsSystemStatusBarFullRebuild [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deeaac (     0x4) system_status_bar_full_rebuild(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deeab0 (    0x40) PKGSystemStatusBarRebuildIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deeaf0 (   0x168) PKGSystemStatusBarFullRebuild [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deec58 (    0xec) AssignSystemStatusBarWindowsToDesiredSpacesWithCleanup(__CFSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deed44 (    0x5c) __PKGSystemStatusBarFullRebuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deeda0 (   0x178) invocation function for block in AssignSystemStatusBarWindowsToDesiredSpacesWithCleanup(__CFSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deef18 (    0x88) invocation function for block in MoveStatusItemToSpace(SystemStatusBarItem_t*, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deefa0 (    0x2c) MoveStatusItemSelectionIfNeeded(SystemStatusBarItem_t*, PKGManagedMenuSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deefcc (   0x1c4) DeallocateItem(SystemStatusBarItem_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def190 (    0xa8) pkg_set_needs_notify_required_space_changed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def238 (     0x8) invocation function for block in DeallocateItem(SystemStatusBarItem_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def240 (   0x1b8) system_status_bar_notify_required_space_changed(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def3f8 (    0x74) invocation function for block in system_status_bar_notify_required_space_changed(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def46c (   0x1a0) PKGRetargetEventForStatusItems [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def60c (    0xec) StatusItemDisplaySwitchInProgress() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def6f8 (   0x104) GetSystemStatusBarItem(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def7fc (    0xb8) invocation function for block in StatusItemDisplaySwitchInProgress() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def8b4 (     0x8) __PKGSystemStatusBarRemoveAllClones_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def8bc (     0x8) __PKGSystemStatusBarFreeSessionData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185def8c4 (   0x254) PKGCopySystemStatusBarMetrics [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185defb18 (   0x450) __PKGCopySystemStatusBarMetrics_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185deff68 (   0x1f4) __PKGCopySystemStatusBarMetrics_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df015c (    0x50) __PKGCopySystemStatusBarMetrics_block_invoke.36 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df01ac (    0x44) __destroy_helper_block_e8_32r48c48_ZTSNSt3__110shared_ptrIN2WS8Displays7DisplayEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df01f0 (    0x4c) __copy_helper_block_e8_32r48c48_ZTSNSt3__110shared_ptrIN2WS8Displays7DisplayEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df023c (    0xec) PKGSystemStatusBarUpdateSpaceAssignmentAndPositioning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df0328 (   0x118) NotifyMetricsUpdateIfNeeded() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df0440 (    0x5c) __PKGSystemStatusBarUpdateSpaceAssignmentAndPositioning_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df049c (    0x90) invocation function for block in NotifyMetricsUpdateIfNeeded() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df052c (   0x154) __PKGSystemStatusBarCloneItemsForSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df0680 (   0x610) CreateCloneOfWindow(CGXWindow*, CGRect, PKGDisplay const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df0c90 (   0x5c4) SystemStatusBarRegisterWindow(CGXWindow*, int, PKGManagedMenuSpace*, __CFString const*, unsigned int, SystemStatusBarItem_t*, int, float, SLSAppearanceTheme) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1254 (    0x8c) __PKGStatusItemSetLayoutIndex_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df12e0 (    0x8c) __PKGStatusItemSetLayoutIndex_block_invoke.50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df136c (    0xa0) __PKGStatusBarResetLayout_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df140c (    0x50) __PKGStatusBarResetLayout_block_invoke.53 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df145c (    0xe0) PKGSystemStatusBarUnregisterWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df153c (    0x14) __PKGSystemStatusBarUnregisterWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1550 (    0xd8) PKGSystemStatusBarSetSelectedContentFrame [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1628 (    0x70) PKGStatusItemSetPrivacyIndicator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1698 (    0xc0) PKGStatusItemGetPrivacyIndicatorRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1758 (    0x54) __PKGSystemStatusBarGatherAnalytics_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df17ac (    0xec) GetCurrentNavigationLoopWindow(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1898 (    0x48) status_bar_metrics_observer_death_callback(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df18e0 (   0x1b4) ___CGXStatusBarCopyItemLayout_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1a94 (   0x168) ___CGXStatusBarCopyItemLayout_block_invoke.83 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1bfc (    0x74) __destroy_helper_block_e8_32b40r48r56r64r72r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1c70 (    0x90) __copy_helper_block_e8_32b40r48r56r64r72r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1d00 (    0x5c) ___CGXStatusBarCopyItemLayout_block_invoke_2.84 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1d5c (     0x4) ___CGXStatusBarCopyItemLayout_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df1d60 (   0x3b8) PKGDumpSystemStatusBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2118 (   0x258) __PKGDumpSystemStatusBar_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2370 (    0xa4) __PKGDumpSystemStatusBar_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2414 (    0x5c) __PKGDumpSystemStatusBar_block_invoke.145 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2470 (    0x8c) dump_format_space(__CFDictionary*, __CFString const*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df24fc (   0x160) __PKGDumpSystemStatusBar_block_invoke_2.155 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df265c (    0x54) __PKGDumpSystemStatusBar_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df26b0 (   0x48c) dump_status_item(__CFArray*, SystemStatusBarItem_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2b3c (    0x90) dump_format_int(__CFDictionary*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2bcc (    0x44) __PKGDumpSystemStatusBar_block_invoke_3.162 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c10 (    0x4c) __PKGDumpSystemStatusBar_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c5c (     0x8) -[SLSXPCService setClientNotificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c64 (     0x8) -[SLSXPCService clientNotificationBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c6c (     0x8) -[SLSXPCService setClientErrorBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c74 (     0x8) -[SLSXPCService clientErrorBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c7c (     0x8) -[SLSXPCService setAutoreconnect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c84 (     0xc) -[SLSXPCService autoreconnect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c90 (     0x8) -[SLSXPCService setNotificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2c98 (     0x8) -[SLSXPCService notificationBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2ca0 (     0x8) -[SLSXPCService setErrorBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2ca8 (     0x8) -[SLSXPCService errorBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cb0 (     0x8) -[SLSXPCService setNotifyQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cb8 (     0x8) -[SLSXPCService notifyQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cc0 (     0x8) -[SLSXPCService setConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cc8 (     0x8) -[SLSXPCService connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cd0 (     0x8) -[SLSXPCService setSetTarget:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cd8 (     0xc) -[SLSXPCService setTarget] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2ce4 (     0x8) -[SLSXPCService setConnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cec (     0xc) -[SLSXPCService connected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2cf8 (     0x8) -[SLSXPCService setEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2d00 (     0xc) -[SLSXPCService enabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2d0c (    0x40) -[SLSXPCService getConnectionQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2d4c (    0x10) -[SLSXPCService cfStringToCStringPtr:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df2d5c (   0x3c8) -[SLSXPCService handleXPCEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3124 (    0x58) __32-[SLSXPCService handleXPCEvent:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df317c (   0x1a0) -[SLSXPCService initWithConnection:errorHandler:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df331c (     0xc) __67-[SLSXPCService initWithConnection:errorHandler:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3328 (   0x188) -[SLSXPCService createCancellableMachRecvSourceWithQueue:error:cancelAction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df34b0 (    0x74) __77-[SLSXPCService createCancellableMachRecvSourceWithQueue:error:cancelAction:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3524 (   0x5d8) -[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3afc (    0x10) __Block_byref_object_copy_.15343 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3b0c (     0xc) __Block_byref_object_dispose_.15344 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3b18 (    0x5c) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3b74 (    0x70) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke.41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3be4 (    0x70) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke.42 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3c54 (    0x4c) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3ca0 (    0x4c) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke.43 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3cec (    0x40) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_2.44 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3d2c (    0x54) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3d80 (    0x58) __75-[SLSXPCService createNoSenderRecvPairWithQueue:errorHandler:eventHandler:]_block_invoke.45 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3dd8 (    0x50) __destroy_helper_block_e8_32o40b48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3e28 (    0x60) __copy_helper_block_e8_32o40b48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3e88 (    0x44) __destroy_helper_block_e8_32b40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3ecc (    0x50) __copy_helper_block_e8_32b40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3f1c (    0x50) -[SLSXPCService sendNSError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3f6c (    0x50) -[SLSXPCService makeNSErrorForPOSIXError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df3fbc (    0x50) -[SLSXPCService makeNSErrorForOSStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df400c (    0x50) -[SLSXPCService makeNSErrorForCocoaError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df405c (    0x50) -[SLSXPCService makeNSErrorForMachError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df40ac (    0x4c) -[SLSXPCService makeNSErrorForCGError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df40f8 (   0x170) -[SLSXPCService dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4268 (    0x18) __24-[SLSXPCService dealloc]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4280 (     0x4) -[SLSXPCService init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4284 (    0x54) -[SLSXPCService sendXPCConnectionClosed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df42d8 (    0x64) -[SLSXPCService sendXPCDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df433c (    0xa4) -[SLSXPCService sendXPCDictionarySync:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df43e0 (    0x68) -[SLSXPCService createXPCDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4448 (   0x1a4) -[SLSXPCService reinitConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df45ec (   0x134) __33-[SLSXPCService reinitConnection]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4720 (   0x280) -[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df49a0 (    0xb8) __107-[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4a58 (    0xbc) __107-[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:]_block_invoke.33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4b14 (   0x128) __107-[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:]_block_invoke.37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4c3c (    0x50) __destroy_helper_block_e8_32o40b48b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4c8c (    0x60) __copy_helper_block_e8_32o40b48b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4cec (    0x4c) __107-[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:]_block_invoke_2.34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4d38 (    0x48) __107-[SLSXPCService initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4d80 (   0x180) invocation function for block in get_AXSPhotosensitiveMitigationSetEnabledSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4f00 (    0x98) invocation function for block in libAccessibilityLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df4f98 (    0xcc) reset_ax_adjustments(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df5064 (   0x228) apply_ax_matrix(std::__1::shared_ptr<WS::Displays::Display>, float const*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df528c (   0x2a0) WSAccessibilitySetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df552c (   0x21c) context_init(PKGWindowQueryContext*, unsigned long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df5748 (  0x1168) encode_window(CGXWindow*, PKGWindowQueryContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df68b0 (    0xc0) invocation function for block in context_finalize(PKGWindowQueryContext*, void*, unsigned int*, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6970 (   0x18c) encode_index_list(PKGWindowQueryContext*, unsigned int, x_list_struct*, unsigned int (*)(void*, PKGWindowQueryContext*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6afc (    0x64) context_get_display(PKGWindowQueryContext*, PKGDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6b60 (    0x68) context_get_space(PKGWindowQueryContext*, PKGSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6bc8 (    0xa4) invocation function for block in encode_index_list(PKGWindowQueryContext*, unsigned int, x_list_struct*, unsigned int (*)(void*, PKGWindowQueryContext*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6c6c (    0x9c) context_get_window(PKGWindowQueryContext*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6d08 (    0x1c) context_fixup_windows(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df6d24 (   0x5f4) encode_display(PKGDisplay*, PKGWindowQueryContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7318 (   0x1f4) encode_space_list(PKGWindowQueryContext*, x_list_struct*, unsigned long*, unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df750c (    0x5c) context_add_offset_for_key(PKGWindowQueryContext*, __CFDictionary*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7568 (   0x200) invocation function for block in encode_spaces(PKGWindowQueryContext*, x_list_struct*, unsigned long*, unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7768 (    0xdc) invocation function for block in encode_space_list(PKGWindowQueryContext*, x_list_struct*, unsigned long*, unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7844 (    0x14) invocation function for block in encode_display(PKGDisplay*, PKGWindowQueryContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7858 (    0x88) invocation function for block in encode_window(CGXWindow*, PKGWindowQueryContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df78e0 (    0x10) invocation function for block in encode_window(CGXWindow*, PKGWindowQueryContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df78f0 (    0x68) (anonymous namespace)::RunElsewhere::instance() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7958 (   0x1b0) (anonymous namespace)::RunElsewhere::RunElsewhere() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7b08 (   0x184) invocation function for block in (anonymous namespace)::RunElsewhere::create_source() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7c8c (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185df7cb0 (    0x50) invocation function for block in (anonymous namespace)::RunElsewhere::create_source() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7d00 (   0x294) RenderMeshMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df7f94 (   0x700) DrawMesh(MeshWarp*, WSCompositeDestination*, MetalContext*, int, int, int, int, int, int, float, float, float, float, int, int, int, int, float, float, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df8694 (   0xa44) RenderAffineMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df90d8 (   0x5cc) Render3DMetal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df96a4 (    0x60) CaptureSurface::SetAnnotationData(unsigned int, int, char const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9704 (    0x78) CaptureSurface::SetAnnotationData(unsigned int, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df977c (   0x2f0) CaptureSurface::PrepareForPopulation(CGRect, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9a6c (     0x4) CaptureSurface::~CaptureSurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9a70 (     0x4) CaptureSurface::~CaptureSurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9a74 (     0xc) CaptureSurface::UseIOSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9a80 (   0x198) CaptureSurface::CaptureSurface(CGRect, unsigned int, unsigned int, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9c18 (    0x5c) CaptureSurface::~CaptureSurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9c74 (    0x3c) CaptureSurface::Invalidate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9cb0 (    0x84) CaptureSurface::ForcedIOSurfaceSetPurgeable(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185df9d34 (   0x4d0) CaptureSurface::AddDebugDescriptionToFile(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa204 (    0x8c) CaptureSurfacePopulateWithArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa290 (    0x1c) CGSessionControlGetCurrentSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa2ac (    0x5c) CGSessionControlSelectSessionWithID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa308 (    0xe8) CGSessionControlSetConsoleSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa3f0 (    0xe8) __CGSessionControlSetConsoleSession_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa4d8 (    0x70) __CGSessionControlSetConsoleSession_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa548 (    0x54) __CGSessionControlAddSession_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa59c (    0xa8) __CGSessionControlApplyToAllSessions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa644 (    0xd4) CGSessionControlGetSessionWithAuditSessionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa718 (    0xb4) __CGSessionControlGetSessionWithAuditSessionID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa7cc (    0xe0) CGSessionControlGetSessionWithUserID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa8ac (    0xb4) __CGSessionControlGetSessionWithUserID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfa960 (    0xb4) __CGSessionControlGetSessionWithWindowServerPort_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfaa14 (   0x148) __CGSessionControlFinalizeSession_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfab5c (    0x3c) __CGSessionControlGetSessionCount_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfab98 (   0x1a4) __CGSessionControlIsLastSession_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfad3c (    0xf4) CGSessionControlIsSessionDefunct [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfae30 (    0x48) __CGSessionControlIsSessionDefunct_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfae78 (    0xdc) CGSessionControlSessionForAuditTrailer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfaf54 (    0x5c) SLSDisplaySystemStateSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfafb0 (   0xc34) get_current_display_system_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbbe4 (    0xe0) set_cached_display_system_state(CGSDisplaySystemState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbcc4 (    0xa4) release_all_display_mappings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbd68 (    0x94) cleanup_realtime_display_mappings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbdfc (    0x48) WS::RealtimeDisplayDataMapping::~RealtimeDisplayDataMapping() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbe44 (   0x168) initDisplayMappings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfbfac (   0x4e0) initDisplayState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc48c (   0x21c) lockDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc6a8 (    0xb8) SLSDisplayChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc760 (    0xb8) SLSDisplayMappingChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc818 (   0x120) unlockDisplay() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc938 (    0x4c) is_display_shmem_initialized() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfc984 (    0xa4) invocation function for block in initDisplayState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfca28 (   0x5bc) display_notify_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfcfe4 (    0x64) (null) [FUNC, FunctionStarts] 
                0x0000000185dfd048 (    0x54) get_display_logging() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd09c (   0x154) updateAllDisplayInfoAsNeeded() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd1f0 (    0xb0) printConfiguration(char const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd2a0 (   0x178) SLSGetDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd418 (   0x1e0) printDisplay(char const*, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd5f8 (   0x11c) SLSGetCurrentDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd714 (   0x124) SLSGetDisplayBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfd838 (   0x324) SLSDisplayStatusQuery [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfdb5c (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185dfdbd8 (   0x2a8) workaround_rdar_75944597(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfde80 (   0x7b4) workaround_rdar_75944597(int)::$_6::operator()(CGSDisplaySystemState const*, CGSDisplaySystemState const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfe634 (    0xd8) SLSMainDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfe70c (   0x2a0) SLSGetDisplaysWithPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfe9ac (   0x260) SLSGetDisplaysWithRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfec0c (   0x188) SLSGetActiveDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfed94 (   0x1b0) SLSGetPotentiallyActiveDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dfef44 (   0x188) SLSGetOnlineDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff0cc (   0x188) SLSGetEligiblePerAppDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff254 (    0xd8) SLSGetNumberOfDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff32c (     0xc) SLSGetDisplayBaseAddress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff338 (    0xc0) SLSGetDisplayAppleThemeLegacyRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff3f8 (    0xa0) display_system_state_get_apple_theme_legacy_rect(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff498 (   0x3dc) SLSCreateDisplayAppleThemeLegacyPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff874 (   0x140) invocation function for block in getCUICreateDisplayShapeSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dff9b4 (    0x74) invocation function for block in CoreUILibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dffa28 (    0xf0) SLSGetDisplayMenubarHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dffb18 (   0x148) SLSGetDisplayHardwareBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dffc60 (   0x10c) SLSCopyDisplayRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dffd6c (    0x9c) SLSGetDisplayDepth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185dffe08 (   0x228) SLSGetDisplayPixelEncodingOfLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00030 (    0x50) SLSCopyDisplayModePixelEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00080 (     0x8) SLSGetDisplayPixelFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00088 (   0x124) SLSGetDisplayRowBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e001ac (     0xc) SLSGetDisplayAddress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e001b8 (    0xd8) SLSGetNumberOfDisplayModes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00290 (    0x9c) CGSDisplayModeDescriptionHostToTransport [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0032c (   0x1fc) SLSGetDisplayModeDescriptionOfLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00528 (   0x2bc) SLSGetDisplayModeDescriptionsOfLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e007e4 (   0x1e4) SLSIsDisplayModeVRR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e009c8 (   0x1f8) SLSIsDisplayModeLinkMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00bc0 (    0x3c) SLSIsDisplayModeProMotion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00bfc (   0x1f4) SLSGetDisplayModeMinRefreshRate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00df0 (    0x74) SLSBeginDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00e64 (    0x74) get_canonical_display_id(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00ed8 (    0x6c) CGSGetCurrentDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e00f44 (   0x144) SLSConfigureDisplayOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01088 (    0x78) checkCapacity(CGSConfigData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01100 (   0x134) SLSConfigureDisplayEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01234 (    0x74) SLSConfigureDisplayMirrored [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e012a8 (   0x1c8) SLSConfigureDisplayMirrorOfDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01470 (   0x130) SLSConfigureDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e015a0 (   0x104) SLSConfigureDisplayFadeEffect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e016a4 (   0x1b0) SLSConfigureDisplayResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01854 (   0x158) SLSConfigureDisplayStereoOperation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e019ac (    0x58) SLSCancelDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01a04 (    0x64) SLSCompleteDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e01a68 (   0x880) SLSCompleteDisplayConfigurationWithOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e022e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e022fc (   0x308) SLSWaitThroughReconfigurationCycleForcingNotificationHandling [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e02604 (   0x1cc) SLSSetDisplayOption_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e027d0 (    0x54) SLSSetDisplayOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e02824 (    0x14) SLSCaptureDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e02838 (    0xb4) SLSInitializeGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e028ec (    0xfc) SLSGetSizeOfDisplayTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e029e8 (    0x10) SLSSetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e029f8 (   0x334) SLSSetDisplayTransferByFormulaWithOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e02d2c (   0x2f0) SLSGetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0301c (    0xac) SLSEnableAmbientDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e030c8 (   0x184) SLSIsAmbientDisplayEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0324c (   0x120) SLSSetDisplayIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0336c (    0xac) __SLSSetDisplayIntention_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03418 (   0x11c) SLSSetDisplayIntentionWiper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03534 (   0x210) SLSSetDisplayRotation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03744 (   0x27c) SLSDisplayGetUnderscanParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e039c0 (    0x14) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e039d4 (     0x4) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e039d8 (     0x4) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e039dc (    0x24) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03a00 (    0x48) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03a48 (     0x4) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03a4c (     0x4) std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03a50 (   0x140) SLSDisplaySetUnderscan [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03b90 (   0x13c) SLSDisplayGetUnderscan [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03ccc (   0x170) SLSSetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03e3c (   0x170) SLSGetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e03fac (   0x170) SLSGetDisplayMaximumHDRValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0411c (    0xac) SLSEnableHDR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e041c8 (   0x154) SLSIsHDREnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0431c (   0x154) SLSIsHDRSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04470 (   0x170) SLSServiceForDisplayNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e045e0 (   0x1e8) displayService(int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e047c8 (   0x184) SLSServiceForDisplayAlias [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0494c (   0x1ac) SLSAcceleratorForDisplayNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04af8 (   0x228) displayAccelerator(int, int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04d20 (   0x1c0) SLSAcceleratorForDisplayAlias [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04ee0 (     0x4) SLSSetDisplayAcceleratorBoost [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04ee4 (    0xb0) SLSSetDisplayContrast [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04f94 (     0x8) SLSGetDisplayModeDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04f9c (    0x40) SLSDisplayLoadUserPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e04fdc (    0x68) getBooleanPreference(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05044 (    0x34) SLSGeometrySeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05078 (   0x21c) SLSGetDisplayMaxOpenGLSurfaceSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05294 (    0x80) SLSGetDisplayOpenGLDisplayMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05314 (    0x78) SLSGetDisplayOpenGLDisplayAliasMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0538c (   0x25c) SLSGetDisplaysWithOpenGLDisplayMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e055e8 (   0x10c) SLSDisplayConfigurationOrigin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e056f4 (   0x164) SLSGetDisplayAliasList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05858 (   0x1b4) SLSSetDisplayColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05a0c (    0x9c) copy_display_color_space(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05aa8 (    0x5c) SLSCopyDisplayColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05b04 (   0x488) SLSSetDisplayColorSpaceAndTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e05f8c (   0x138) SLSCopyDisplayUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e060c4 (   0x380) SLSGetDisplaysWithUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06444 (    0x60) SLSGetDisplayForUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e064a4 (   0x1cc) __SLSDisplayStreamCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06670 (   0x120) SLSCopyDisplayInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06790 (   0x174) SLSDetectDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06904 (   0x1e4) SLSDisplayGetPreferHDR10 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06ae8 (    0xe0) SLSBringAirDisplayOnline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06bc8 (   0x1ec) __SLSBringAirDisplayOnline_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06db4 (   0x180) SLSBringAirDisplayOffline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e06f34 (   0x154) SLSMachineSupportsLowPowerVideo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07088 (    0x48) SLSDisplayMuxAcquired [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e070d0 (    0x48) SLSDisplayMuxReleased [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07118 (   0x17c) SLSMainDisplayBoundsIgnoringCapture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07294 (    0x1c) SLSDFRCopyProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e072b0 (     0x4) SLSDFRAgentRegister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e072b4 (     0x8) SLSTouchBarServerRegister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e072bc (     0x4) SLSDFRSetPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e072c0 (    0x88) SLSDFRSetDimmingStep [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07348 (    0x40) __SLSDFRSetDimmingStep_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07388 (   0x1b4) SLSIsDisplayChangedSeedValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0753c (   0x150) SLSDisplayStreamSidecarTouchBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0768c (   0x1d4) SLSGetRealtimeDisplayInfoShmem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07860 (   0x1f4) SLSDisplaySupportsHDRMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07a54 (     0xc) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07a60 (     0x4) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07a64 (     0x4) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07a68 (    0x20) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07a88 (    0x38) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07ac0 (     0x4) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07ac4 (     0x4) std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07ac8 (   0x1bc) SLSDisplayIsHDRModeEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07c84 (     0xc) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07c90 (     0x4) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07c94 (     0x4) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07c98 (    0x20) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07cb8 (    0x38) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07cf0 (     0x4) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07cf4 (     0x4) std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07cf8 (   0x1ec) SLSDisplaySetHDRModeEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07ee4 (    0xd4) SLSSetDisplayOutputMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e07fb8 (   0x138) SLSConfigureDisplayOutputMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e080f0 (     0xc) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e080fc (     0x4) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08100 (     0x4) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08104 (    0x20) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08124 (    0x38) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0815c (     0x4) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08160 (     0x4) std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08164 (    0xe4) SLSDisplayGetCapabilities [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08248 (     0xc) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08254 (     0x4) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08258 (     0x4) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0825c (    0x20) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0827c (    0x38) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e082b4 (     0x4) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e082b8 (     0x4) std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e082bc (   0x2c4) SLSDisplayCopyPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08580 (   0x1d4) SLSDisplayGetActivePresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08754 (   0x1e0) SLSDisplaySetActivePresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08934 (   0x1d8) SLSDisplayGetFactoryDefaultPresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08b0c (   0x1dc) SLSDisplayGetPresetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08ce8 (   0x29c) SLSDisplayCopyPresetUniqueID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e08f84 (   0x1e8) SLSDisplayIsPresetValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0916c (   0x1e8) SLSDisplayIsPresetWritable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09354 (   0x130) SLSDisplaySetPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09484 (   0x19c) __SLSDisplaySetPreset_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09620 (   0x2c8) SLSDisplayCopyPresetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e098e8 (   0x130) SLSDisplaySetPresetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09a18 (   0x19c) __SLSDisplaySetPresetData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09bb4 (   0x1f8) SLSDisplayResetPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09dac (   0x154) SLSDisplayGetLuminanceCorrectionFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e09f00 (   0x1cc) __SLSDisplayGetLuminanceCorrectionFactor_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a0cc (   0x154) SLSDisplayGetUserAdjustmentLuminanceCorrectionFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a220 (   0x1cc) __SLSDisplayGetUserAdjustmentLuminanceCorrectionFactor_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a3ec (   0x2c4) SLSDisplayCopyUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a6b0 (   0x124) SLSDisplaySetUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a7d4 (   0x194) __SLSDisplaySetUserAdjustment_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0a968 (   0x2c4) SLSDisplayCopyUserAdjustmentData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ac2c (   0x124) SLSDisplaySetUserAdjustmentData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ad50 (   0x194) __SLSDisplaySetUserAdjustmentData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0aee4 (   0x1e4) SLSDisplayIsUserAdjustmentSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0b0c8 (   0x1e4) SLSDisplayIsUserAdjustmentValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0b2ac (   0x1f4) SLSDisplayInvalidateUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0b4a0 (   0x204) SLSDisplayFactoryReset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0b6a4 (   0x2c4) SLSDisplayCopyCalibrationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0b968 (   0x184) SLSDisplayCalibrationBegin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0baec (   0x184) SLSDisplayCalibrationEnd [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0bc70 (   0x134) SLSDisplayCalibrationToolboxCommand [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0bda4 (   0x27c) __SLSDisplayCalibrationToolboxCommand_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c020 (   0x19c) SLSDisplaysCurrentState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c1bc (    0xb4) WS::RealtimeDisplayDataMapping::data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c270 (   0x114) WS::RealtimeDisplayDataMapping::shmem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c384 (    0x14) SLSConsoleDisplayGetTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c398 (   0x324) display_get_timing_common(unsigned long long, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c6bc (   0x1c8) realtime_data_for_display(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c884 (    0xb0) populate_display_timing_with_legacy_interface(SLSDisplayTiming&, int, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0c934 (   0x180) std::__1::unordered_map<int, WS::RealtimeDisplayDataMapping, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, WS::RealtimeDisplayDataMapping>>>::erase[abi:v160006](std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, void*>*>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0cab4 (   0x460) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>>>::__emplace_unique_impl<std::__1::piecewise_construct_t const&, std::__1::tuple<int&>, std::__1::tuple<int&, bool&>>(std::__1::piecewise_construct_t const&, std::__1::tuple<int&>&&, std::__1::tuple<int&, bool&>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0cf14 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<int, WS::RealtimeDisplayDataMapping>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0cf6c (    0x4c) invocation function for block in realtime_data_for_display(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0cfb8 (    0x14) SLSDisplayGetTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0cfcc (    0xd4) SLSDisplayGetRefreshTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d0a0 (   0x1b4) SLSDisplayGetPriorVBLTimeInNanoseconds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d254 (   0x1b4) SLSDisplayGetCurrentVBLDeltaInNanoseconds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d408 (    0xd0) SLSConsoleDisplayGetPriorVBLTimeInNanoseconds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d4d8 (    0xd0) SLSConsoleDisplayGetCurrentVBLDeltaInNanoseconds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d5a8 (   0x128) SLSDisplayGetPriorVBLTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d6d0 (   0x128) SLSDisplayGetCurrentVBLDelta [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0d7f8 (   0x24c) SLSGetWindowServerTimebase [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0da44 (    0xd0) SLSDisplayGetCurrentHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0db14 (    0xd0) SLSDisplayGetReferenceHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0dbe4 (    0xd0) SLSDisplayGetPotentialHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0dcb4 (   0x1e8) SLSDisplayIsThermallyLimited [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0de9c (    0xe8) SLSGetDisplayOutputModeCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0df84 (   0x1ec) SLSGetDisplayOutputModeLinkDescriptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0e170 (   0x1d0) SLSConfigureDisplayPresentationMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0e340 (   0x1dc) SLSDisplaySupportsDynamicGeometry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0e51c (   0x1dc) SLSDisplayIsDynamicGeometryEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0e6f8 (   0x124) SLSDisplaySetDynamicGeometryEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0e81c (   0x3e8) post_coordinated_distributed_notification(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ec04 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185e0ec28 (   0x108) copy_coordinated_distnote_completion_block(coorddistnote_active_continuation_record*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ed30 (   0x264) invocation function for block in copy_coordinated_distnote_completion_block(coorddistnote_active_continuation_record*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ef94 (   0x36c) SLSMainConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0f300 (    0x3c) invocation function for block in CGSGetMainConnection() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0f33c (   0x104) CGSKnownConnectionCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0f440 (   0xad0) SLSNewConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ff10 (    0x24) __Block_byref_object_copy_.15859 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ff34 (    0x58) __Block_byref_object_dispose_.15860 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e0ff8c (   0x480) invocation function for block in CGSGetMainConnectionPromotingIfNeeded() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1040c (    0x54) std::__1::vector<WS::CFRef<_CGSConnection*>, std::__1::allocator<WS::CFRef<_CGSConnection*>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10460 (    0x48) std::__1::vector<WS::CFRef<_CGSConnection*>, std::__1::allocator<WS::CFRef<_CGSConnection*>>>::__clear[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e104a8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::CFRef<_CGSConnection*>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::CFRef<_CGSConnection*>>>(std::__1::allocator<WS::CFRef<_CGSConnection*>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e104e0 (    0x54) std::__1::__split_buffer<WS::CFRef<_CGSConnection*>, std::__1::allocator<WS::CFRef<_CGSConnection*>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10534 (    0x38) invocation function for block in CGSKnownConnections() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1056c (    0x1c) invocation function for block in get_default_connection_tls_key() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10588 (    0xfc) default_connection_tls_key_destructor(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10684 (    0x2c) invocation function for block in default_connection_tls_key_destructor(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e106b0 (   0x228) SLSReleaseConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e108d8 (    0xac) invocation function for block in CGSRemoveRetainedConnection(_CGSConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10984 (   0x194) post_connection_notification(unsigned int, CGSConnectionNoticeType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10b18 (    0x38) invocation function for block in CGSRetainedConnections() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10b50 (    0x64) invocation function for block in CGSGetKnownConnectionByID(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10bb4 (   0x3b8) shutdown_server_connections(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e10f6c (    0xcc) invocation function for block in CGSAddConnection(_CGSConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11038 (    0x24) __Block_byref_object_copy_.67.15892 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1105c (    0x18) __Block_byref_object_dispose_.68.15893 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11074 (   0x200) invocation function for block in CGSConnectionsMapGetRetainedConnectionIDs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11274 (    0xc0) invocation function for block in task_id_token() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11334 (    0xb0) __SLSNewConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e113e4 (    0x28) __CGSConnectionGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1140c (     0x8) copy_connection_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11414 (    0x68) copy_connection_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1147c (   0x230) _CGSConnectionFinalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e116ac (    0x74) invocation function for block in CGSRemoveKnownConnection(_CGSConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11720 (    0x60) SLSStructuralRegionIDRangeFree [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11780 (    0x60) invocation function for block in CGSKnownConnectionCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e117e0 (    0x1c) invocation function for block in coordinated_distnote_continuations_pthread_key() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e117fc (    0x4c) coordinated_disnote_cleanup_continuations(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11848 (    0x5c) SLSMainConnectionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e118a4 (    0xb4) SLSDefaultConnectionForThread [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11958 (     0x4) _SLSDefaultConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1195c (    0x20) SLSServerHasValidConnections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1197c (    0xe8) SLSSetDenyWindowServerConnections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11a64 (    0x30) __SLSSetDenyWindowServerConnections_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11a94 (     0xc) SLSGetDenyWindowServerConnections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11aa0 (    0x98) SLSShutdownServerConnections [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11b38 (   0x1d0) SLSSetUniversalOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11d08 (   0x128) SLSSetOtherUniversalConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11e30 (     0x8) SLSessionOwnerCreateBySettingLoginwindowConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e11e38 (   0x23c) create_session_owner_by_setting_loginwindow_connection(unsigned int, CGError*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12074 (    0x8c) SLSSetLoginwindowConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12100 (   0x468) SLSSetLoginName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12568 (   0x138) register_for_new_connection_notification(void (*)(unsigned int, void*), void*, CGSConnectionNoticeType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e126a0 (   0x344) SLSSetConnectionProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e129e4 (   0x128) __SLSSetConnectionProperty_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12b0c (    0x58) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12b64 (     0x4) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12b68 (     0x4) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12b6c (    0x28) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12b94 (    0x4c) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12be0 (     0x4) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12be4 (     0x4) std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12be8 (    0x28) SLSConnectionBarrier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12c10 (   0x248) SLSCopyConnectionProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12e58 (     0x8) SLSSetMagicMirrorProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e12e60 (   0x1f4) SLSGetPerformanceData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13054 (   0x1ac) SLSGetPerformanceTotalUpdateCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13200 (   0x1c0) SLSGetPerformanceUpdateCountPerDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e133c0 (     0x8) SLSGetPerformanceTotalUpdateHistogram [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e133c8 (    0xa8) CGSTrackDirtyScreenRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13470 (   0x120) CGSFetchDirtyScreenRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13590 (   0x46c) CGSFetchFlushedAndMovedScreenRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e139fc (   0x26c) SLSGetLoginName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13c68 (   0x1d0) SLSConnectionGetPIDAndVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13e38 (    0x50) SLSConnectionGetPID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13e88 (   0x15c) SLSSetKeyTranslationTableFromPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e13fe4 (    0xcc) __SLSSetKeyTranslationTableFromPtr_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e140b0 (     0x4) SLSSetDeferredUpdateNotificationPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e140b4 (     0x4) SLSEnableDeferredUpdateNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e140b8 (    0xe8) SLSUnpackDeferredUpdateNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e141a0 (   0x210) SLSSavePerUserConfigurationData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e143b0 (    0x78) wait_for_user_home_dir() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14428 (    0xa8) SLSSetPerUserConfigurationData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e144d0 (    0xbc) __SLSSetPerUserConfigurationData_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1458c (    0xc8) SLSServerPortCheckError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14654 (    0x58) SLSConnectionDispatchNotificationsToMainQueueIfNotMainThread [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e146ac (    0xac) SLSConnectionSetSpinning [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14758 (    0x78) SLSGetEventPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e147d0 (    0x4c) CGSConnectionGetEventState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1481c (    0xc4) SLSRegisterConnectionNotifyProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e148e0 (   0x1b4) SLSRemoveConnectionNotifyProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14a94 (   0x1d0) SLSPostNotificationToConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14c64 (    0x58) CGSCurrentProcessOwnsConnectionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14cbc (   0x18c) SLSStructuralRegionIDRangeExtend [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14e48 (    0x60) SLSConnectionSynchronizeSLSCATransaction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14ea8 (    0x78) SLSConnectionSetLastSLSCATransaction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14f20 (     0x8) SLSDisableDisableUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14f28 (     0x8) SLSReenableDisableUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14f30 (    0xa0) SLSStallServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14fd0 (     0x8) SLSBluishYellow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e14fd8 (    0xa4) SLSDisableCursorObscure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1507c (    0x84) SLSReenableCursorObscure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15100 (    0x38) SLSCopyCoordinatedDistributedNotificationContinuationBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15138 (    0x54) get_coordinated_distnote_active_continuations_for_thread() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1518c (   0x180) SLSCopyCoordinatedDistributedNotificationFencePort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1530c (   0x1f0) SLSPostCoordinatedDistributedNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e154fc (    0x88) coorddistnote_epilogue(coorddistnote_post_completion_record*, CGError) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15584 (    0x90) coordinated_distributed_notification_completed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15614 (   0x20c) SLSPostCoordinatedDistributedNotificationFenced [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15820 (   0x24c) WSSetWindowListFadeProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15a6c (   0x568) __WSSetWindowListFadeProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15fd4 (    0x10) __destroy_helper_block_8_40c48_ZTSNSt3__110shared_ptrIN2WS8Displays7DisplayEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e15fe4 (    0x1c) __copy_helper_block_8_40c48_ZTSNSt3__110shared_ptrIN2WS8Displays7DisplayEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16000 (    0x24) __WSSetWindowListFadeProperties_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16024 (   0x39c) drag_fade_alpha_animation(CGXWindow*, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&, float, float, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e163c0 (   0x17c) WSWindowSetDisplayDragFadeAlpha(CGXWindow*, std::__1::shared_ptr<WS::Displays::Display> const&, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1653c (    0x70) invocation function for block in WSWindowSetDisplayDragFadeAlpha(CGXWindow*, std::__1::shared_ptr<WS::Displays::Display> const&, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e165ac (    0x8c) scheduleDragFadeTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16638 (   0x1c0) invocation function for block in drag_fade_alpha_animation(CGXWindow*, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>> const&, float, float, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e167f8 (   0x25c) WSWindowGetDisplayDragFadeAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16a54 (    0x20) __WSWindowGetDisplayDragFadeAlpha_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16a74 (    0x20) __WSWindowGetDisplayDragFadeAlpha_block_invoke.20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16a94 (   0x1e0) dragFadeTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16c74 (   0x318) invocation function for block in dragFadeTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16f8c (    0x70) invocation function for block in dragFadeTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e16ffc (   0x2a8) invocation function for block in dragFadeTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e172a4 (    0xf4) WSWindowShouldDragFade [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17398 (   0x150) __WSWindowShouldDragFade_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e174e8 (   0x288) WSWindowCopyDragFadedDisplayRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17770 (   0x2d8) SLContextCopyWindowContentsToRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17a48 (    0xa8) draw_transient_image [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17af0 (   0x124) SLContextCopyWindowCaptureContentsToRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17c14 (   0x230) SLContextCopyDisplayCaptureContentsToRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17e44 (    0x7c) get_ctx_ids [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17ec0 (   0x134) WSDisplayScheduleEmptyUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e17ff4 (   0x1b4) WSDisplayPresentEmptyUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e181a8 (    0xcc) process_gamma_change_notification(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e18274 (   0x188) CGXScheduleSoftUpdateDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e183fc (   0x39c) empty_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e18798 (   0x2d0) get_display_schedule_info_ref(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e18a68 (    0xfc) evaluate_schedule_for_idleness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e18b64 (    0x8c) CGXDeschedulePreemptiveWork [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e18bf0 (   0x480) preemptive_work_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19070 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WSCAWindowBacking*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WSCAWindowBacking*>>(std::__1::allocator<WSCAWindowBacking*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e190a8 (   0x9f8) update_display_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19aa0 (    0xf8) CGXSessionCAContextIDs::data() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19b98 (   0x1d0) WSDisplayScheduleUpdateRefreshTiming [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19d68 (   0x178) ReadinessTelemetry::mark_ready(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19ee0 (   0x11c) ReadinessTelemetry::mark_unready(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e19ffc (    0x84) FramePacing::WSCADeferLockReleaseAll() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1a080 (   0x498) SchedulerSessionData::scheduled_displays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1a518 (   0x6a0) CGXScheduleUpdateDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1abb8 (   0x4a8) updater_display_notification_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b060 (    0x5c) CGXScheduleUpdateAllDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b0bc (   0x188) WSSchedulerRunDeferredUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b244 (    0xd4) WSDisplayScheduleCacheVBLTimes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b318 (     0xc) unreadiness_reschedule_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b324 (    0x7c) WSDisplayScheduleGetInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b3a0 (    0xfc) WSDisplayScheduleGetPrevNextVBL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b49c (   0x1e4) WSSchedulerSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b680 (    0x50) (null) [FUNC, FunctionStarts] 
                0x0000000185e1b6d0 (    0x90) __WSSchedulerRegisterSessionHandler_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b760 (     0x8) session_callback::did_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b768 (     0x4) session_callback::will_destroy(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b76c (     0x4) session_callback::did_create(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b770 (    0xc4) session_callback::will_create(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b834 (    0x50) WSPixelFormatGetBytesPerElement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b884 (    0xc8) log_unimplemented_format(WSPixelFormat) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b94c (    0x5c) WSPixelFormatToIOSurfaceFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1b9a8 (   0x1a4) WSPixelFormatFromIOSurfaceFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bb4c (    0x5c) WSPixelFormatGetBitmapType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bba8 (    0x54) WSPixelFormatForCGSDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bbfc (    0xf8) WSPixelFormatGetCGSDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bcf4 (    0xdc) WSPixelFormatForIOAccelSurfaceFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bdd0 (    0xd4) WSIOSurfacePixelFormatIsFullRange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bea4 (    0x80) WSIOSurfacePixelFormatIsYUV420 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bf24 (    0x28) __CGSWindowGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bf4c (     0x8) copy_window_debug_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bf54 (    0x68) copy_window_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1bfbc (   0x23c) _CGSWindowFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1c1f8 (    0x14) __CGSRemoveLocalWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1c20c (   0x134) __CGSLocalWindowsByFilter_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1c340 (   0x264) __CGSWindowConstructWithRegionImpl_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1c5a4 (   0x368) CGSWindowConstructInternal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1c90c (   0x158) CGSWindowSetCachedWindowRelativeShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1ca64 (    0xe0) window_set_cached_origin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1cb44 (   0x100) window_update_origin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1cc44 (    0xd8) __CGSWindowConstructInternal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1cd1c (    0x80) __destroy_helper_block_e8_32o40r48r56r64r72r80r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1cd9c (    0xa0) __copy_helper_block_e8_32o40r48r56r64r72r80r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1ce3c (   0x2e0) CGSWindowGetMappedImpl [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d11c (   0x15c) __CGSWindowGetMappedImpl_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d278 (    0xbc) CGSWindowReleaseExplicit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d334 (    0x14) __CGSRemoveLocalRetainedWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d348 (   0x1e4) window_update_rights_cache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d52c (    0x64) window_invalidate_cache_unlocked [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d590 (    0x74) SLSWindowIsOrderedIn1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d604 (    0xa8) SLSWindowBridgedOrder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d6ac (    0x80) CGSWindowSynchronizeSLSCATransaction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d72c (   0x144) CGSWindowGetSurfaceAboveContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d870 (   0x160) window_update_cached_relative_shape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1d9d0 (    0x7c) CGSWindowGetPixelSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1da4c (    0x54) CGSWindowGetPointSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1daa0 (    0xb8) __CGSWindowSetShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1db58 (   0x228) __CGSWindowSetShape_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1dd80 (    0xd8) __CGSWindowSetOpaqueShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1de58 (    0xd8) __CGSWindowSetClipShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1df30 (    0xd8) __CGSWindowFlushRegion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e008 (    0x38) CGSWindowGetSharingState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e040 (   0x27c) CGSWindowRemoveSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e2bc (    0x5c) CGSWindowGetSurfaceBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e318 (    0x88) CGSWindowSetSurfaceResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e3a0 (    0x78) CGSWindowGetSurfaceType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e418 (   0x120) WSArenaAlloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e538 (    0x4c) WSCleanUpArena [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e584 (     0x4) std::__1::queue<WS::Updater::FrameLogSample, std::__1::deque<WS::Updater::FrameLogSample, std::__1::allocator<WS::Updater::FrameLogSample>>>::~queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e588 (    0xc8) std::__1::deque<WS::Updater::FrameLogSample, std::__1::allocator<WS::Updater::FrameLogSample>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1e650 (   0x75c) CGXUpdaterDebug [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1edac (    0x54) (null) [FUNC, FunctionStarts] 
                0x0000000185e1ee00 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185e1ee20 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185e1ee38 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185e1ee58 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x0000000185e1ee94 (    0xa4) cgdebug::update_window_blurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1ef38 (   0x1a4) cgdebug::set_bubble_monkey_times() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f0dc (    0xa4) cgdebug::re_evaluate_warts() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f180 (    0x90) CGXUpdateDesktop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f210 (   0x160) WSDisableUpdateInternalToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f370 (   0x184) WSReenableUpdateInternalToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f4f4 (   0x380) common_reenable_update(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1f874 (   0x248) disable_update_timeout(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1fabc (    0x8c) WSForceUpdatesEnabledForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1fb48 (   0x150) disable_update_likely_unbalanced(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1fc98 (   0x314) invocation function for block in cgdebug::update_window_blurs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e1ffac (    0xf4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXWindow*, int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<CGXWindow*, int>, std::__1::__unordered_map_hasher<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, true>, std::__1::__unordered_map_equal<CGXWindow*, std::__1::__hash_value_type<CGXWindow*, int>, std::__1::equal_to<CGXWindow*>, std::__1::hash<CGXWindow*>, true>, std::__1::allocator<std::__1::__hash_value_type<CGXWindow*, int>>>::find<CGXWindow*>(CGXWindow* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e200a0 (     0x4) std::__1::unordered_map<CGXWindow*, int, std::__1::hash<CGXWindow*>, std::__1::equal_to<CGXWindow*>, std::__1::allocator<std::__1::pair<CGXWindow* const, int>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e200a4 (   0x10c) WSUpdaterSetOverdriveRate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e201b0 (    0x44) CGXEnableDeferredUpdates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e201f4 (    0xf4) CGXDisableDeferredUpdates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e202e8 (    0x9c) cgdebug::overdrive_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20384 (   0x108) WSWorkIntervalSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e2048c (    0x14) WSSelectiveSharingEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e204a0 (    0x68) WSIndependentDisplayScheduleEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20508 (    0xf0) WSSetUpdateClientPipe [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e205f8 (     0x8) __WSSetUpdateClientPipe_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20600 (   0x108) CGXUpdateSurfaceAcceleratorChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20708 (   0x22c) surfaceAcceleratorChange(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20934 (   0x108) disable_update_for_connection(CGXConnection*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20a3c (    0xdc) reenable_update_for_connection(CGXConnection*, bool, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20b18 (   0x148) reenable_update_display_notification_callback(CGSNotificationType, void*, unsigned int, reenable_update_display_notification_arg*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20c60 (    0x74) reenable_update_display_notification_callback_invoke(reenable_update_display_notification_arg*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20cd4 (    0x20) WSDisableUpdateAtServerShutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20cf4 (   0x128) WSConnectionDisableUpdateInternalToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20e1c (    0xe8) WSConnectionReenableUpdateInternalToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20f04 (    0xf4) CGXInitialEnableOfDisplayUpdates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e20ff8 (    0xe0) startupEnableUpdateTimeout(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e210d8 (   0x1ac) WSInvalidateMoveInRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21284 (   0x388) CGXInvalidateDisplayShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e2160c (    0xb8) CGXBeginMoveShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e216c4 (   0x29c) CGXAddMoveShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21960 (    0x60) update_window_geometry(CGSRegionObject*, CGXWindow**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e219c0 (    0x60) accumulate_window_visible_shape(CGSRegionObject*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21a20 (    0x94) update_display_wait_callback(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21ab4 (   0x11c) CGXUpdateDisplaySynchronizeSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21bd0 (   0x3a4) WSUpdaterDeferVisibleWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e21f74 (   0x464) get_update_display_region(CGXWindowSubArray*, bool, CGSRegionObject*, CGSRegionObject**, CGSRegionObject**, CGSRegionObject**, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e223d8 (   0x4c8) adjust_update_shapes_for_blurs(CGXWindowSubArray*, bool, CGSRegionObject*, CGSRegionObject**, CGSRegionObject**, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e228a0 (   0x19c) outset_clamped_blur_region_with_radius(CGSRegionObject*, bool, CGSRegionObject*, CGSRegionObject*, CGSRegionObject**, CGSRegionObject**, bool*, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22a3c (   0x22c) outset_clamped_blur_regions(CGXWindow*, CGSRegionObject*, bool, CGSRegionObject*, CGSRegionObject**, CGSRegionObject**, bool, unsigned long, CGSRegionObject**, CGSRegionObject**, float*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22c68 (    0xe8) autonomous_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22d50 (    0x74) WSEnforceContentProtection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22dc4 (    0x48) WSUpdaterDebugSetIgnoredProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22e0c (    0x5c) WSUpdaterDebugDisableSkip [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22e68 (    0xe8) WSDebugLayerSetupWarp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e22f50 (   0x174) updater_debug_should_skip_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e230c4 (    0x60) WSGetZoomDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23124 (    0x68) WSIsDisplayZoomEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e2318c (    0x58) WSToggleDisplayZoomFeature [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e231e4 (   0x234) WSLayerBackingUpdateWindowShapes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23418 (    0x7c) WSCopyUpdateDisplayWorkIntervalPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23494 (    0x3c) WS::Updater::PerDisplayPrepData::~PerDisplayPrepData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e234d0 (    0xb8) WS::Updater::PerDisplayPrepData::PerDisplayPrepData(WS::Updater::PerDisplayPrepData&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23588 (    0xb8) WS::Updater::PerDisplayPrepData::operator=(WS::Updater::PerDisplayPrepData&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23640 (    0xa8) WS::Updater::PerDisplayPrepData::augment_detached_rendering_shape(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e236e8 (   0x190) WS::Updater::UpdateState::UpdateState(CGXConnection*, CGSRegionObject*, unsigned int, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e23878 (   0x898) WS::Updater::UpdateState::~UpdateState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24110 (   0x2a0) WS::Updater::finalize_coreanimation(WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e243b0 (    0x4c) std::__1::__tree<CGXWindow*, std::__1::less<CGXWindow*>, std::__1::allocator<CGXWindow*>>::destroy(std::__1::__tree_node<CGXWindow*, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e243fc (    0x54) WS::Updater::RecompositedStreamUpdateData::~RecompositedStreamUpdateData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24450 (    0xd0) autonomous_immediate_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24520 (   0x228) std::__1::__wrap_iter<int*> std::__1::vector<int, std::__1::allocator<int>>::insert<std::__1::__wrap_iter<int const*>, 0>(std::__1::__wrap_iter<int const*>, std::__1::__wrap_iter<int const*>, std::__1::__wrap_iter<int const*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24748 (    0x80) WS::Updater::UpdateState::augment_drm_protected_region_with_options(CGSRegionObject*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e247c8 (    0xa8) WS::Updater::UpdateState::augment_dirty_detached_region_with_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24870 (   0x118) WS::Updater::UpdateState::augment_accumulated_opaque_region_with_window(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24988 (   0x130) WS::Updater::UpdateState::should_ca_render_privacy_indicator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24ab8 (   0x128) WS::Updater::UpdateState::add_non_throttled_display(std::__1::shared_ptr<WS::Displays::Display> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24be0 (   0x12c) WS::Updater::UpdateState::note_will_update(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e24d0c (   0x314) WS::Updater::UpdateState::prep_data_by_display_id(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e25020 (    0xc4) WS::Updater::PerDisplayPrepData* std::__1::construct_at[abi:v160006]<WS::Updater::PerDisplayPrepData, std::__1::shared_ptr<WS::Displays::Display>&, WS::Updater::PerDisplayPrepData*>(WS::Updater::PerDisplayPrepData*, std::__1::shared_ptr<WS::Displays::Display>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e250e4 (    0x9c) WS::Updater::RecompositedStreamUpdateData::RecompositedStreamUpdateData(WS::Displays::Update const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e25180 (    0x94) CGXUpdateDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e25214 (  0x7c04) WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e2ce18 (    0x84) FramePacing::WSCADeferLockReleaseAll() (.16588) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e2ce9c (  0x34bc) WS::Updater::prepare_coreanimation(WS::Updater::UpdateState&, CGXWindowSubArray) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e30358 (    0x98) display_list_has_pending_update_shape(std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e303f0 (    0xf8) WS::Updater::get_update_display_region(WS::Updater::UpdateState&, CGXWindowSubArray&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e304e8 (    0x78) display_has_pending_update_shape(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e30560 (    0x98) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::__value_func[abi:v160006](std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e305f8 (    0x84) std::__1::__function::__value_func<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3067c (   0x1dc) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::function<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>&, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>>(std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>, std::__1::function<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>&, std::__1::iterator_traits<std::__1::__wrap_iter<std::__1::shared_ptr<WS::Displays::Display>*>>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e30858 (  0x2b24) generate_layers_for_window(CGXRedrawState*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3337c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e33390 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e333a4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000185e333cc (   0x5e4) cgdebug::log_frame_submission(double, int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e339b0 (    0xc0) free_layer_allocated_data(WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e33a70 (    0x58) std::__1::deque<WS::Updater::FrameLogSample, std::__1::allocator<WS::Updater::FrameLogSample>>::__maybe_remove_front_spare[abi:v160006](bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e33ac8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WS::Updater::FrameLogSample*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WS::Updater::FrameLogSample*>>(std::__1::allocator<WS::Updater::FrameLogSample*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e33b00 (  0x2684) generate_layers_for_legacy_shadow(CGXRedrawState*, CGXWindow*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e36184 (   0x900) layergen_frozen_window(CGXRedrawState*, CGXWindow*, CGRect, CGSRegionObject*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e36a84 (   0x2b8) close_active_group_layers(bool, CGXRedrawState*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e36d3c (  0x2660) generate_layers_for_window_surfaces(CGXRedrawState*, CGXWindow*, CGSOrderOp, unsigned int, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3939c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e393b0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e393c4 (   0x234) process_legacy_blur(CGXRedrawState*, CGXWindow*, WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e395f8 (   0x834) layergen_ca_content_window(CGXRedrawState*, CGXWindow*, CGSRegionObject*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e39e2c (   0x100) ca_backed_window_create_opaque_shape(CGXRedrawState*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e39f2c (    0x78) ca_backed_window_create_source_shape_direct(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e39fa4 (    0xcc) ca_backed_window_create_destination_shape(CGXRedrawState*, WSWindowTransform, Mesh*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a070 (   0x310) layergen_apply_debug_colors(CGXRedrawState*, CGXWindow*, CGSRegionObject*, BitmapType, CGSRegionObject*, WSCALayerBacking*, WS::CAWindowContent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a380 (    0x8c) determine_filter_flags_for_surface_layer(WSCompositeSourceLayer const*, CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a40c (    0xf0) get_layer_clip_shape_aware_window_transform(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a4fc (    0xa0) surface_debug_layer_color(MetalBacking*, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a59c (   0x104) layergen_color_mismatch_layer(CGXRedrawState*, CGXWindow*, CGSRegionObject*, BitmapType, int, int, int, int, Warp*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a6a0 (    0x58) layergen_mipmap_debug_layer(CGXRedrawState*, CGXWindow*, CGSRegionObject*, int, int, int, int, Warp*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a6f8 (    0x8c) layergen_window_mask_debug_layer(CGXRedrawState*, CGXWindow*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a784 (    0x38) layergen_winplug_debug_layer(CGXRedrawState*, CGXWindow*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a7bc (    0xd8) layergen_opacity_debug_layer(CGXRedrawState*, CGXWindow*, CGSRegionObject*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a894 (    0x2c) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a8c0 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a8c4 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a8c8 (    0x24) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a8ec (    0x48) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a934 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a938 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3a93c (    0xec) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::operator()(std::__1::shared_ptr<WS::Displays::Display>&&, std::__1::shared_ptr<WS::Displays::Display>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa28 (     0x4) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa2c (     0x4) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa30 (    0x20) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::__clone(std::__1::__function::__base<bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa50 (    0x38) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa88 (     0x4) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa8c (     0x4) std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aa90 (    0x24) __Block_byref_object_copy_.16601 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aab4 (    0x18) __Block_byref_object_dispose_.16602 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3aacc (  0x1ed0) WS::Updater::defenestrator3::ca_window_prep_ingestion_phase(CGXWindow*, WS::Updater::UpdateState&, WSCAContextScopeTransaction&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3c99c (    0xb0) FramePacing::WSCADeferLockRelease(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3ca4c (   0x4a0) invocation function for block in WS::Updater::prepare_coreanimation(WS::Updater::UpdateState&, CGXWindowSubArray) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3ceec (   0x918) WS::Updater::ca_prepare_set_window_backing_update_parameters(CGXWindow*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3d804 (  0x1e94) WS::Updater::defenestrator3::ca_prepare_begin_window_update(CGXWindow*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e3f698 (   0xa70) WS::Updater::defenestrator2::ca_prepare_begin_window_update(CGXWindow*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e40108 (    0xb8) std::__1::pair<std::__1::__tree_iterator<CGXWindow*, std::__1::__tree_node<CGXWindow*, void*>*, long>, bool> std::__1::__tree<CGXWindow*, std::__1::less<CGXWindow*>, std::__1::allocator<CGXWindow*>>::__emplace_unique_key_args<CGXWindow*, CGXWindow* const&>(CGXWindow* const&, CGXWindow* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e401c0 (  0x170c) WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e418cc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e418e0 (   0x354) invocation function for block in WS::Updater::prepare_coreanimation(WS::Updater::UpdateState&, CGXWindowSubArray) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41c34 (    0x24) invocation function for block in WS::Updater::ca_supports_plugin_id_gather() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41c58 (   0x178) WS::Updater::ca_prepare_note_encountered_window_plugins(_CARenderUpdate*, WS::Updater::UpdateState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41dd0 (    0x88) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41e58 (     0x4) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41e5c (     0x4) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41e60 (    0x30) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41e90 (    0x54) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41ee4 (     0x4) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41ee8 (     0x4) std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e41eec (   0x510) window_update_detachment(CGXWindow*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e423fc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e42410 (    0x2c) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4243c (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42440 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42444 (    0x24) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42468 (    0x48) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424b0 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424b4 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424b8 (    0x2c) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424e4 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424e8 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e424ec (    0x24) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42510 (    0x48) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42558 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4255c (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42560 (    0xa4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42604 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42608 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4260c (    0x20) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4262c (    0x38) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42664 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42668 (     0x4) std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4266c (   0x1a8) WSRedrawWindowsToDestinationAndRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42814 (    0x6c) set_is_rendering_for_snapshot(CGXWindowSubArray, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e42880 (   0xa4c) WS::Updater::composite_windows_to_destination_and_region(CGXWindowSubArray, WSCompositeDestination*, CGSRegionObject*, CGSRegionObject**, CGXRedrawOption, WSWindowTagBitMask, WSWindowTagBitMask, CGRect, CGRect, Compositor*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e432cc (   0x694) WSCompositeWindowToDestination [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43960 (   0x150) WSDumpFrameLog [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43ab0 (   0x23c) SLWindowContextCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43cec (    0x50) SLWindowContextGetConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43d3c (    0x50) SLWindowContextGetWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43d8c (    0xdc) SLWindowContextCreateImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43e68 (   0x10c) lanczosKernelFunc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e43f74 (   0x6f4) layer_blit_byte [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e44668 (   0x2c8) layer_blit_byte_S8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e44930 (   0x38c) layer_blit_byte_RGB8_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e44cbc (   0x32c) layer_blit_byte_RGB16_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e44fe8 (   0x40c) layer_blit_byte_RGBF_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e453f4 (   0x1d4) layer_blit_byte_sample [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e455c8 (   0x2dc) layer_blit_byte_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e458a4 (   0x288) layer_blit_byte_RGB16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e45b2c (   0x350) layer_blit_byte_RGBF [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e45e7c (    0x54) layer_blit_byte_RGB5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e45ed0 (   0x7ec) layer_blit_byte_ARGB8_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e466bc (   0x7f4) layer_blit_byte_S8_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e46eb0 (   0xaa0) layer_blit_byte_ARGB8_S8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e47950 (   0x870) layer_blit_byte_RGBA_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e481c0 (   0xbf8) layer_blit_byte_ARGB8_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e48db8 (   0xac4) layer_blit_byte_S8_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4987c (   0x438) layer_blit_byte_RGBA_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e49cb4 (   0x778) layer_blit_byte_ARGB8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4a42c (   0x648) layer_blit_byte_S8_RGB8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4aa74 (   0x2b0) _vu8_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4ad24 (  0x3dd4) layer_blit_byte_ANY [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4eaf8 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185e4eb98 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ebac (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ec4c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ec60 (    0x60) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ecc0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ecd4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ece8 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ed88 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e4ed9c (   0x398) _vu8a_colormatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f134 (    0x74) PKGAnimationDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f1a8 (    0x28) PKGAnimationAssociateDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f1d0 (   0x140) PKGAnimationPush [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f310 (    0x60) _PKGAnimationSessionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f370 (    0x84) _PKGAnimationBegin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f3f4 (   0x1f8) _PKGAnimationScheduleCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f5ec (   0x310) _PKGAnimationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f8fc (    0xbc) PKGAnimationPop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f9b8 (    0x3c) PKGAnimationTransactionBegin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4f9f4 (    0xd4) PKGAnimationTransactionCommit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4fac8 (   0x270) backing_map [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4fd38 (   0x130) SLSSetWindowCaptureExcludeShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4fe68 (    0xac) __SLSSetWindowCaptureExcludeShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e4ff14 (   0xe00) SLSHWCaptureDesktop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50d14 (   0x18c) create_image_from_iosurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50ea0 (    0x38) release_info [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50ed8 (     0xc) release_byte_pointer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50ee4 (    0x40) get_byte_pointer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50f24 (    0xcc) SLSHWCaptureSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e50ff0 (   0x1d8) create_window_list_for_space [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e511c8 (    0x7c) __create_window_list_for_space_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51244 (   0x210) SLSHWCaptureProcessWindowsInSpaceIncludeDesktop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51454 (    0x7c) __create_process_window_list_for_space_including_desktop_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e514d0 (    0x18) SLSHWCaptureWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e514e8 (     0x8) SLSHWCaptureWindowListInRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e514f0 (     0x4) SLSHWCaptureWindowListInRectWithSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e514f4 (    0x10) SLSHWCaptureDisplayIntoIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51504 (   0x2c8) SLSHWCaptureDisplayIntoIOSurfaceWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e517cc (   0x128) SLDisplayRegisterReconfigurationCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e518f4 (   0x16c) higher_res_pixel_equivalent_mode_exists [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51a60 (    0x78) SLDisplayModeGetWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51ad8 (    0x78) SLDisplayModeGetHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51b50 (    0x88) SLDisplayModeGetRefreshRate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51bd8 (    0x88) SLDisplayModeGetResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51c60 (    0x78) SLDisplayModeGetIOFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51cd8 (    0x7c) CGDisplayModeGetModeNum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51d54 (    0x28) __SLDisplayModeGetTypeID_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51d7c (     0x4) display_mode_copy_debug_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51d80 (    0x98) display_mode_copy_format_description [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51e18 (    0x10) display_mode_hash [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51e28 (    0x58) display_mode_equal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e51e80 (   0x27c) displayConfigNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e520fc (   0x2c0) capture_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e523bc (   0x294) createShieldWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52650 (   0x150) releaseShieldWindowAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e527a0 (   0x2b8) displayConfigRemoveMonitorProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52a58 (   0x1c0) release_display [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52c18 (   0x1e8) displayConfigAddMonitorProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52e00 (    0xf0) SLDisplayRemoveReconfigurationCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52ef0 (    0x64) CGDisplayNoteCapturedModeNum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52f54 (     0x4) SLMainDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52f58 (    0x80) SLGetDisplaysWithPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e52fd8 (    0x84) SLGetDisplaysWithRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5305c (    0x70) SLGetDisplaysWithOpenGLDisplayMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e530cc (    0x70) SLGetActiveDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5313c (    0x70) SLGetOnlineDisplayList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e531ac (     0x4) SLDisplayIDToOpenGLDisplayMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e531b0 (    0x64) SLOpenGLDisplayMaskToDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53214 (    0x68) SLDisplayBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5327c (    0x68) SLDisplayPixelsWide [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e532e4 (    0x68) SLDisplayPixelsHigh [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5334c (   0x118) SLDisplayBitsPerPixel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53464 (   0x118) SLDisplayBitsPerSample [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5357c (   0x118) SLDisplaySamplesPerPixel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53694 (    0x58) SLDisplayBytesPerRow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e536ec (    0xe4) SLDisplayBaseAddress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e537d0 (    0x28) __big_dumb_buffer_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e537f8 (    0xe4) SLDisplayAddressForPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e538dc (    0x1c) SLDisplayCreateImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e538f8 (   0x16c) SLSDisplayCreateImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53a64 (     0xc) SLDisplayCreateImageForRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53a70 (    0x58) SLDisplayAvailableModes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53ac8 (   0x1f0) SLDisplayCopyAllDisplayModes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53cb8 (    0x10) SLDisplayBestModeForParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e53cc8 (   0xa8c) bestDisplayMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54754 (     0xc) SLDisplayBestModeForParametersAndRefreshRate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54760 (     0x4) SLDisplayBestModeForParametersAndRefreshRateWithProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54764 (    0x68) SLDisplayCopyDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e547cc (    0x30) SLDisplayModeRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e547fc (   0x200) SLDisplayCurrentMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e549fc (    0x10) SLSetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54a0c (     0xc) SLGetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54a18 (    0x58) SLDisplayGammaTableCapacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54a70 (     0x8) SLSetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54a78 (     0x4) SLGetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54a7c (    0xf8) SLSetDisplayTransferByByteTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54b74 (    0x34) SLDisplayRestoreColorSyncSettings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54ba8 (     0x8) SLDisplayIsCaptured [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54bb0 (     0x8) SLDisplayCapture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54bb8 (    0xd0) SLDisplayCaptureWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54c88 (    0x90) SLDisplayRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54d18 (     0x8) SLCaptureAllDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54d20 (   0x1a8) SLCaptureAllDisplaysWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54ec8 (    0xd4) SLReleaseAllDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e54f9c (    0x68) SLShieldingWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55004 (    0x68) SLSSuperShieldingWindowID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5506c (     0xc) SLShieldingWindowLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55078 (    0x10) SLDisplaySwitchToMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55088 (   0x328) displaySetMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e553b0 (    0xc4) dict_key_value_pair_comparer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55474 (    0x38) __dict_key_value_pair_comparer_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e554ac (    0x18) SLDisplaySetDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e554c4 (    0x20) SLDisplayHideCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e554e4 (    0x20) SLDisplayShowCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55504 (    0x98) SLDisplayMoveCursorToPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5559c (    0x2c) SLGetLastMouseDelta [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e555c8 (     0x8) SLDisplayCanSetPalette [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e555d0 (     0x8) SLDisplaySetPalette [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e555d8 (     0x8) SLDisplayWaitForBeamPositionOutsideLines [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e555e0 (     0x8) SLDisplayBeamPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e555e8 (    0x90) SLDisplayGetDrawingContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55678 (     0x4) SLDisplayModeCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5567c (    0x94) SLDisplayModeGetPixelWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55710 (    0x94) SLDisplayModeGetPixelHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e557a4 (     0x4) SLDisplayModeGetPixelsWide [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e557a8 (     0x4) SLDisplayModeGetPixelsHigh [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e557ac (    0xc8) SLDisplayModeGetPixelDensity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55874 (    0x44) SLDisplayModeCopyPixelEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e558b8 (    0x78) SLDisplayModeGetIODisplayModeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55930 (    0x3c) SLDisplayModeIsUsableForDesktopGUI [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5596c (     0xc) SLDisplayModeRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55978 (    0x44) SLDisplayModeGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e559bc (    0x68) _SLDisplayCapturedByPsn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55a24 (    0x58) __CACurrentWindowPluginAPIVersion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e55a7c (   0x5a0) display_zoom_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5601c (   0x1dc) display_zoom_notification_callback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e561f8 (    0x48) DisplayZoom::ResetDisplayZoom() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56240 (    0xc0) is_accessibility_display(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56300 (   0x2ec) DisplayZoom::set_destination_display(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e565ec (   0x2f4) DisplayZoom::clear_to_black() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e568e0 (   0x110) DisplayZoom::schedule_display_zoom_update_at_next_vbl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e569f0 (   0x188) WSSurfaceCreateScreenOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56b78 (    0x60) CGXDestroySurfaceTextures [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56bd8 (    0x78) WSSurfaceGetNumberOfBuffers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56c50 (   0x28c) CGXSynchronizeSurfaceVisibility [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e56edc (   0x28c) synchronize_accelerated_surface(CGXSurface*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57168 (   0x130) get_surface_front_buffer_id(CGXSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57298 (   0x1a0) CGXSynchronizeSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57438 (   0x10c) current_session_no_hardware_surface_visibility() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57544 (   0x27c) CGXActivateSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e577c0 (    0x48) CGXGetMaximumSurfaceResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57808 (   0x11c) CGXFindSurfaceInWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57924 (    0xe0) deactivate_surface_accelerator(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57a04 (    0x98) CGXCompleteSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57a9c (   0x224) WSRemoveSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57cc0 (   0x338) destroy_surface_data(CGXWindow*, CGXSurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e57ff8 (   0x550) update_surface_visibility(CGXWindow*, CGXSurface*, CGSRegionObject*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58548 (    0x94) release_surface_information(CGXSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e585dc (   0x124) WSSurfaceUpdateCAVisibility [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58700 (     0x8) __WSSurfaceUpdateCAVisibility_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58708 (    0x90) destroy_accelerated_surface(CGXSurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58798 (   0x16c) WSRemoveAllSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58904 (    0x60) unbind_surface(CGXWindow*, CGXSurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e58964 (   0x978) WSBindSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e592dc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185e592f0 (   0x510) copy_accelerated_surface(CGXSurface*, IOAccelConnectStruct*, unsigned int, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59800 (   0x1dc) WSSetSurfaceOpacity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e599dc (    0x58) WSSetSurfaceLayerBackingOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59a34 (    0x58) WSSurfaceSetWantsHDR [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59a8c (   0x23c) WSSetSurfaceProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59cc8 (    0xb8) integerValue(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59d80 (    0x54) WSSurfaceSetHDRActiveIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e59dd4 (   0x650) WSOrderSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5a424 (   0x378) WSShapeSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5a79c (    0xe4) WSGetSurfaceInWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5a880 (   0x250) WSSetSurfaceColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5aad0 (   0x290) WSSetSurfaceResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ad60 (    0x74) __WSLayerSurfaceGetPortForBacking_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5add4 (    0x60) WSSurfaceCopyVisibleRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ae34 (   0x128) WSLayerSurfaceSetPurgeableIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5af5c (    0x3c) WSSurfaceDestroyCALayerBackings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5af98 (    0xc8) surface_enum_create_destination_shape(CGXSurfaceEnum*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5b060 (    0x84) CGXReleaseSurfaceEnumerator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5b0e4 (   0x3ec) CGXDeferSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5b4d0 (   0x14c) CGXDumpSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5b61c (   0xa94) __CGXDumpSurfaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c0b0 (   0x214) WSSurfaceSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c2c4 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000185e5c2e8 (   0x444) WSDumpFlatteningInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c72c (    0x24) __Block_byref_object_copy_.17321 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c750 (    0x18) __Block_byref_object_dispose_.17322 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c768 (    0x64) __Block_byref_object_copy_.84 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c7cc (     0x4) __Block_byref_object_dispose_.85 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c7d0 (   0x1fc) add_flattening_info_for_window(CGXWindow*, std::__1::vector<FlatteningInfo, std::__1::allocator<FlatteningInfo>>&, AggregateFlatteningInfo&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c9cc (    0x20) __WSDumpFlatteningInfo_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5c9ec (   0xa20) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, WSDumpFlatteningInfo::$_1&, FlatteningInfo*>(FlatteningInfo*, FlatteningInfo*, WSDumpFlatteningInfo::$_1&, std::__1::iterator_traits<FlatteningInfo*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5d40c (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185e5d424 (   0x1a0) WSDumpFlatteningInfo::$_2::operator()(char const*, AggregateFlatteningInfo::Counts const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5d5c4 (   0x23c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, WSDumpFlatteningInfo::$_1&, FlatteningInfo*>(FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, WSDumpFlatteningInfo::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5d800 (   0x1a0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, WSDumpFlatteningInfo::$_1&, FlatteningInfo*>(FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, WSDumpFlatteningInfo::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5d9a0 (   0x214) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, WSDumpFlatteningInfo::$_1&, FlatteningInfo*>(FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, FlatteningInfo*, WSDumpFlatteningInfo::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5dbb4 (   0x254) bool std::__1::__insertion_sort_incomplete<WSDumpFlatteningInfo::$_1&, FlatteningInfo*>(FlatteningInfo*, FlatteningInfo*, WSDumpFlatteningInfo::$_1&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5de08 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185e5de20 (   0x180) FlatteningInfo& std::__1::vector<FlatteningInfo, std::__1::allocator<FlatteningInfo>>::emplace_back<CGXWindow*&, WSFlattenedRepresentation*&, $_0&, bool>(CGXWindow*&, WSFlattenedRepresentation*&, $_0&, bool&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5dfa0 (   0x164) FlatteningInfo::FlatteningInfo(CGXWindow*, WSFlattenedRepresentation*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e104 (     0x4) WS::SLSeedResolverBase::currentTime() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e108 (     0x4) WS::SLSeedResolverBase::~SLSeedResolverBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e10c (     0x4) WS::SLSeedResolverBase::~SLSeedResolverBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e110 (    0xb0) WS::SLSeedResolver::scheduleTimeoutIfNeeded(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e1c0 (   0x154) invocation function for block in WS::SLSeedResolver::scheduleTimeoutIfNeeded(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e314 (    0xc8) WS::SLSeedResolver::performCallback(bool, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e3dc (    0x14) invocation function for block in WS::SLSeedResolver::performCallback(bool, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e3f0 (    0x28) WS::SLSeedResolver::~SLSeedResolver() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e418 (   0x130) WS::SLSeedResolver::~SLSeedResolver() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e548 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned int, double>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, double>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, double>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e594 (     0x4) WS::SLSeedResolver::~SLSeedResolver() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e598 (   0x1a4) WS::SLSeedResolverBase::callbackOnSeed(unsigned int, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5e73c (   0x414) WS::SLSeedResolverBase::markSeed(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5eb50 (    0x74) std::__1::__tree<std::__1::__value_type<unsigned int, double>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, double>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, double>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ebc4 (    0x8c) void std::__1::__advance[abi:v160006]<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, double>, std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*, long>>>(std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, double>, std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*, long>>&, std::__1::iterator_traits<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, double>, std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*, long>>>::difference_type, std::__1::bidirectional_iterator_tag) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ec50 (    0x60) std::__1::__tree<std::__1::__value_type<unsigned int, double>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, double>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, double>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, double>, std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, double>, std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void*>*, long>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ecb0 (    0x54) std::__1::unique_ptr<DockSwipeEventItem, std::__1::default_delete<DockSwipeEventItem>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ed04 (    0x54) std::__1::unique_ptr<PointerEventItem, std::__1::default_delete<PointerEventItem>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ed58 (    0x54) std::__1::unique_ptr<PointerEventItem2, std::__1::default_delete<PointerEventItem2>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5edac (    0x54) std::__1::unique_ptr<DigitizerScrollEventItem, std::__1::default_delete<DigitizerScrollEventItem>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ee00 (    0x54) std::__1::unique_ptr<ScrollWheelEventItem, std::__1::default_delete<ScrollWheelEventItem>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5ee54 (    0x6c) EventInterpolator::scheduleCallbackIfNeeded(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5eec0 (   0x168) EventHelper::event_triage(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5f028 (    0xcc) std::__1::pair<std::__1::__tree_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>, bool> std::__1::__tree<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, EventItemBaseCompare, std::__1::allocator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>>>::__emplace_unique_key_args<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>>(std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>> const&, std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5f0f4 (   0x2a4) ScrollWheelEventItem::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5f398 (   0x304) DigitizerScrollEventItem::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5f69c (   0x2b0) PointerEventItem::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool, PointerMoveState) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5f94c (   0x2a0) PointerEventItem2::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5fbec (   0x29c) DockSwipeEventItem::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e5fe88 (   0x384) DigitizerSTREventItem::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6020c (   0x14c) EventItemOther::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60358 (    0x78) EventItemBase::EventItemBase(CEDEventType, bool, double, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e603d0 (     0x8) EventItemOther::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e603d8 (     0x4) EventItemOther::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e603dc (   0x108) EventItemOther::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e604e4 (    0x20) EventItemBase::EventItemBase(EventItemBase const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60504 (    0x14) EventItemOther::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60518 (    0x28) EventItemOther::~EventItemOther() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60540 (    0x58) EventItemBase::~EventItemBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60598 (     0x4) EventItemBase::~EventItemBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6059c (     0x4) EventItemBase::~EventItemBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e605a0 (     0x4) EventItemOther::~EventItemOther() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e605a4 (    0xb0) DigitizerSTREventItem::get_STR_properties(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60654 (   0x550) DigitizerSTREventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60ba4 (    0xc8) DigitizerSTREventItem::get_digitizerSTR_began_state(DigitizerSTREventItem*, bool&, bool&, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60c6c (   0x35c) DigitizerSTREventItem::handle_STR_began(EventInterpolationHarness*, EventSet*, EventSet*, DigitizerSTREventItem*, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e60fc8 (   0x200) DigitizerSTREventItem::handle_STR_stop(EventInterpolationHarness*, DigitizerSTREventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e611c8 (   0x39c) DigitizerSTREventItem::create_interpolated_event(EventInterpolationHarness*, double, DigitizerSTREventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61564 (   0x188) EventHelper::is_valid_for_event_interpolation(EventItemBase const*, EventItemBase const*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e616ec (    0xa8) DigitizerSTREventItem::set_STR_properties(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, CGPoint const&, CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61794 (   0x494) DigitizerSTREventItem::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61c28 (   0x130) DigitizerSTREventItem::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61d58 (    0x1c) DigitizerSTREventItem::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61d74 (    0x28) DigitizerSTREventItem::~DigitizerSTREventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61d9c (     0x4) DigitizerSTREventItem::~DigitizerSTREventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61da0 (    0xa8) DockSwipeEventItem::get_dockswipe_properties(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61e48 (    0xc4) CommonTypeEventItem::remove_phase_changed_in_set(EventSet*, CEDEventType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61f0c (    0xb4) std::__1::__tree<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, EventItemBaseCompare, std::__1::allocator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>>>::erase(std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e61fc0 (    0xdc) DockSwipeEventItem::emit_nearest_gesture_begin_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6209c (   0x260) DockSwipeEventItem::handle_dockswipe_begin(EventInterpolationHarness*, EventSet*, EventSet*, DockSwipeEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e622fc (    0x10) DockSwipeEventItem::set_interpolated_delta_raw(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6230c (     0xc) DockSwipeEventItem::get_interpolated_delta_raw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62318 (   0x16c) DockSwipeEventItem::create_event(EventInterpolationHarness*, __IOHIDEvent*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62484 (    0xbc) DockSwipeEventItem::set_dockswipe_properties(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62540 (    0xd0) DockSwipeEventItem::adjust_scaled_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62610 (   0x400) DockSwipeEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62a10 (   0x20c) DockSwipeEventItem::handle_dockswipe_stop(EventInterpolationHarness*, EventSet*, EventSet*, DockSwipeEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62c1c (   0x1b0) CommonTypeEventItem::create_interpolated_event(EventInterpolationHarness*, double, CommonTypeEventItem*, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62dcc (   0x1b8) CommonTypeEventItem::adjust_raw_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e62f84 (    0xa8) delta_adjustment(EventInterpolationHarness*, CGPoint const&, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6302c (   0x364) DockSwipeEventItem::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63390 (   0x11c) DockSwipeEventItem::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e634ac (    0x1c) DockSwipeEventItem::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e634c8 (    0x28) DockSwipeEventItem::~DockSwipeEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e634f0 (     0x4) DockSwipeEventItem::~DockSwipeEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e634f4 (    0xa4) CommonTypeEventItem::get_event_properties(__IOHIDEvent*, __IOHIDEvent*, unsigned int, unsigned int, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63598 (     0x4) CommonTypeEventItem::emit_nearest_gesture_begin_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6359c (    0x10) PointerEventItem2::set_interpolated_delta_raw(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e635ac (     0xc) PointerEventItem2::get_interpolated_delta_raw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e635b8 (   0x15c) PointerEventItem2::create_event(EventInterpolationHarness*, __IOHIDEvent*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63714 (    0x80) PointerEventItem2::adjust_scaled_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63794 (   0x360) PointerEventItem2::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63af4 (    0xdc) PointerEventItem2::button_state_changed_in_set(EventSet*, unsigned int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63bd0 (   0x2bc) PointerEventItem2::dispatch_all_events(EventInterpolationHarness*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e63e8c (   0x22c) PointerEventItem2::handle_pointer_cont(EventInterpolationHarness*, EventSet*, EventSet*, PointerEventItem2*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e640b8 (    0xb0) CommonTypeEventItem::set_event_properties(__IOHIDEvent*, __IOHIDEvent*, unsigned int, unsigned int, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64168 (   0x1bc) PointerEventItem2::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64324 (   0x118) PointerEventItem2::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6443c (    0x1c) PointerEventItem2::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64458 (    0x28) PointerEventItem2::~PointerEventItem2() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64480 (     0x4) PointerEventItem2::~PointerEventItem2() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64484 (    0x14) invocation function for block in PointerEventItem2::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64498 (    0x10) PointerEventItem::set_interpolated_delta_raw(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e644a8 (     0xc) PointerEventItem::get_interpolated_delta_raw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e644b4 (   0x178) PointerEventItem::create_event(EventInterpolationHarness*, __IOHIDEvent*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6462c (    0xd8) PointerEventItem::adjust_scaled_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64704 (   0x3bc) PointerEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64ac0 (   0x2e4) PointerEventItem::handle_pointer_drag_begin(EventInterpolationHarness*, EventSet*, EventSet*, PointerEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64da4 (   0x1fc) PointerEventItem::handle_pointer_drag_end(EventInterpolationHarness*, EventSet*, EventSet*, PointerEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e64fa0 (    0x6c) PointerEventItem::pending_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6500c (   0x2ec) PointerEventItem::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e652f8 (   0x120) PointerEventItem::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65418 (    0x20) PointerEventItem::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65438 (    0x28) PointerEventItem::~PointerEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65460 (     0x4) PointerEventItem::~PointerEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65464 (   0x110) DigitizerScrollEventItem::emit_nearest_gesture_begin_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65574 (   0x2bc) DigitizerScrollEventItem::handle_digitizerscroll_begin(EventInterpolationHarness*, EventSet*, EventSet*, DigitizerScrollEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65830 (    0x10) DigitizerScrollEventItem::set_interpolated_delta_raw(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65840 (     0xc) DigitizerScrollEventItem::get_interpolated_delta_raw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6584c (   0x1b0) DigitizerScrollEventItem::create_event(EventInterpolationHarness*, __IOHIDEvent*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e659fc (    0x78) DigitizerScrollEventItem::adjust_scaled_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65a74 (   0x328) DigitizerScrollEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65d9c (   0x1a0) DigitizerScrollEventItem::handle_digitizerscroll_stop(EventInterpolationHarness*, EventSet*, EventSet*, DigitizerScrollEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e65f3c (    0xd0) std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>> std::__1::find_if[abi:v160006]<std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>>, DigitizerScrollEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&)::'lambda'(std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>> const&)>(std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_del...
                0x0000000185e6600c (   0x1b0) DigitizerScrollEventItem::create_interpolated_event(EventInterpolationHarness*, double, CommonTypeEventItem*, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e661bc (    0xd8) std::__1::__unique_if<DigitizerScrollEventItem>::__unique_single std::__1::make_unique[abi:v160006]<DigitizerScrollEventItem, CEDEventType, bool, double&, double&, double&, WS::CFRef<__IOHIDEvent*>&, __IOHIDService*, bool, __IOHIDEvent*&, __IOHIDEvent*&, CGPoint&, CGPoint&>(CEDEventType&&, bool&&, double&, double&, double&, WS::CFRef<__IOHIDEvent*>&, __IOHIDService*&&, bool&&, __IOHIDEvent*&, __IOHIDEvent*&, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66294 (   0x438) DigitizerScrollEventItem::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e666cc (   0x11c) DigitizerScrollEventItem::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e667e8 (    0x1c) DigitizerScrollEventItem::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66804 (    0x28) DigitizerScrollEventItem::~DigitizerScrollEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6682c (     0x4) DigitizerScrollEventItem::~DigitizerScrollEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66830 (   0x10c) ScrollWheelEventItem::emit_nearest_gesture_begin_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6693c (   0x2bc) ScrollWheelEventItem::handle_scrollwheel_begin(EventInterpolationHarness*, EventSet*, EventSet*, ScrollWheelEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66bf8 (    0x10) ScrollWheelEventItem::set_interpolated_delta_raw(CGPoint const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66c08 (     0xc) ScrollWheelEventItem::get_interpolated_delta_raw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66c14 (   0x178) ScrollWheelEventItem::create_event(EventInterpolationHarness*, __IOHIDEvent*, CGPoint, CGPoint, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66d8c (    0x78) ScrollWheelEventItem::adjust_scaled_property(EventInterpolationHarness*, CommonTypeEventItem const*, CommonTypeEventItem const*, float, float, EventDelta&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e66e04 (   0x41c) ScrollWheelEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67220 (   0x23c) ScrollWheelEventItem::handle_scrollwheel_stop(EventInterpolationHarness*, EventSet*, EventSet*, ScrollWheelEventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6745c (    0xd0) std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>> std::__1::find_if[abi:v160006]<std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*, long>>, ScrollWheelEventItem::hit_vbl(EventInterpolationHarness*, EventSet*, EventSet*, double, bool&)::'lambda'(std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>> const&)>(std::__1::reverse_iterator<std::__1::__tree_const_iterator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<...
                0x0000000185e6752c (    0xd4) std::__1::__unique_if<ScrollWheelEventItem>::__unique_single std::__1::make_unique[abi:v160006]<ScrollWheelEventItem, CEDEventType, bool, double&, double&, double&, WS::CFRef<__IOHIDEvent*>&, __IOHIDService*, bool, __IOHIDEvent*, CGPoint&, CGPoint&>(CEDEventType&&, bool&&, double&, double&, double&, WS::CFRef<__IOHIDEvent*>&, __IOHIDService*&&, bool&&, __IOHIDEvent*&&, CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67600 (   0x434) ScrollWheelEventItem::handle_pending_event(EventInterpolationHarness*, EventSet*, EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67a34 (   0x118) ScrollWheelEventItem::insert(EventSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67b4c (    0x1c) ScrollWheelEventItem::insert(EventInterpolationHarness*, EventSet*, EventSet*, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67b68 (    0x28) ScrollWheelEventItem::~ScrollWheelEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67b90 (     0x4) ScrollWheelEventItem::~ScrollWheelEventItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67b94 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__IOHIDEvent*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__IOHIDEvent*>>(std::__1::allocator<__IOHIDEvent*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67bcc (    0x6c) EventItem::getUpdatedDelta() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67c38 (    0x6c) EventItem::getUpdatedScaledDelta() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67ca4 (    0x6c) EventItem::setUpdatedScaledDelta(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67d10 (    0x60) std::__1::unique_ptr<EventItem, std::__1::default_delete<EventItem>>::reset[abi:v160006](EventItem*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e67d70 (   0x4d0) std::__1::deque<std::__1::pair<__IOHIDEvent*, __IOHIDService*>, std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>>>::push_back(std::__1::pair<__IOHIDEvent*, __IOHIDService*>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68240 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<double, std::__1::deque<std::__1::pair<__IOHIDEvent*, __IOHIDService*>, std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>>>*>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<double, std::__1::deque<std::__1::pair<__IOHIDEvent*, __IOHIDService*>, std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>>>*>*>>(std::__1::allocator<std::__1::pair<double, std::__1::deque<std::__1::pair<__IOHIDEvent*, __IOHIDService*>, std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>>>*>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68278 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>*>>(std::__1::allocator<std::__1::pair<__IOHIDEvent*, __IOHIDService*>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e682b0 (    0x7c) std::__1::__tree<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, EventItemBaseCompare, std::__1::allocator<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>>>::destroy(std::__1::__tree_node<std::__1::unique_ptr<EventItemBase, std::__1::default_delete<EventItemBase>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6832c (    0x4c) std::__1::__tree<CEDEventType, std::__1::less<CEDEventType>, std::__1::allocator<CEDEventType>>::destroy(std::__1::__tree_node<CEDEventType, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68378 (   0x194) SLEventInterpolatorCreate(std::__1::unique_ptr<EventInterpolationHarness, std::__1::default_delete<EventInterpolationHarness>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6850c (     0x4) std::__1::__shared_ptr_emplace<EventInterpolator, std::__1::allocator<EventInterpolator>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68510 (   0x230) std::__1::__shared_ptr_emplace<EventInterpolator, std::__1::allocator<EventInterpolator>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68740 (    0x44) std::__1::__shared_ptr_emplace<EventInterpolator, std::__1::allocator<EventInterpolator>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68784 (    0x20) std::__1::__shared_ptr_emplace<EventInterpolator, std::__1::allocator<EventInterpolator>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e687a4 (    0xc0) WS::Displays::CAWSDisplaysPowerState::create_debugging_dictionary() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68864 (     0x4) -[SLSBridgedWindowManagementOperationResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68868 (    0x64) -[SLSBridgedWindowManagementOperationResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e688cc (    0x64) -[SLSBridgedWindowManagementOperationResult _init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68930 (     0x8) +[SLSBridgedWindowManagementOperationResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68938 (    0x10) -[SLSBridgedWindowManagementOperationSpaceIDResult spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68948 (    0x20) -[SLSBridgedWindowManagementOperationSpaceIDResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68968 (    0xd8) -[SLSBridgedWindowManagementOperationSpaceIDResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68a40 (    0x80) -[SLSBridgedWindowManagementOperationSpaceIDResult initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68ac0 (     0x8) +[SLSBridgedWindowManagementOperationSpaceIDResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68ac8 (    0x14) -[SLSBridgedWindowManagementOperationPropertyListDictionaryResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68adc (    0x10) -[SLSBridgedWindowManagementOperationPropertyListDictionaryResult propertyListDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68aec (    0x20) -[SLSBridgedWindowManagementOperationPropertyListDictionaryResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68b0c (   0x390) -[SLSBridgedWindowManagementOperationPropertyListDictionaryResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68e9c (    0xdc) -[SLSBridgedWindowManagementOperationPropertyListDictionaryResult initWithPropertyListDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68f78 (     0x8) +[SLSBridgedWindowManagementOperationPropertyListDictionaryResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68f80 (    0x14) -[SLSBridgedWindowManagementOperationPropertyListArrayResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68f94 (    0x10) -[SLSBridgedWindowManagementOperationPropertyListArrayResult propertyListArray] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68fa4 (    0x20) -[SLSBridgedWindowManagementOperationPropertyListArrayResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e68fc4 (   0x394) -[SLSBridgedWindowManagementOperationPropertyListArrayResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69358 (    0xdc) -[SLSBridgedWindowManagementOperationPropertyListArrayResult initWithPropertyListArray:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69434 (     0x8) +[SLSBridgedWindowManagementOperationPropertyListArrayResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6943c (    0x14) -[SLSBridgedWindowManagementOperationNumbersResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69450 (    0x10) -[SLSBridgedWindowManagementOperationNumbersResult numbers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69460 (    0x20) -[SLSBridgedWindowManagementOperationNumbersResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69480 (   0x244) -[SLSBridgedWindowManagementOperationNumbersResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e696c4 (    0xdc) -[SLSBridgedWindowManagementOperationNumbersResult initWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e697a0 (     0x8) +[SLSBridgedWindowManagementOperationNumbersResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e697a8 (    0x14) -[SLSBridgedWindowManagementOperationStringsResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e697bc (    0x10) -[SLSBridgedWindowManagementOperationStringsResult strings] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e697cc (    0x20) -[SLSBridgedWindowManagementOperationStringsResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e697ec (   0x244) -[SLSBridgedWindowManagementOperationStringsResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69a30 (    0xdc) -[SLSBridgedWindowManagementOperationStringsResult initWithStrings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69b0c (     0x8) +[SLSBridgedWindowManagementOperationStringsResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69b14 (    0x14) -[SLSBridgedWindowManagementOperationStringResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69b28 (    0x10) -[SLSBridgedWindowManagementOperationStringResult string] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69b38 (    0x20) -[SLSBridgedWindowManagementOperationStringResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69b58 (   0x198) -[SLSBridgedWindowManagementOperationStringResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69cf0 (    0xdc) -[SLSBridgedWindowManagementOperationStringResult initWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69dcc (     0x8) +[SLSBridgedWindowManagementOperationStringResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69dd4 (    0x10) -[SLSBridgedWindowManagementOperationWorkspaceTypeResult workspaceType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69de4 (    0x20) -[SLSBridgedWindowManagementOperationWorkspaceTypeResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69e04 (    0xd8) -[SLSBridgedWindowManagementOperationWorkspaceTypeResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69edc (    0x80) -[SLSBridgedWindowManagementOperationWorkspaceTypeResult initWithWorkspaceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69f5c (     0x8) +[SLSBridgedWindowManagementOperationWorkspaceTypeResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69f64 (    0x10) -[SLSBridgedWindowManagementOperationWorkspaceIDResult workspaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69f74 (    0x20) -[SLSBridgedWindowManagementOperationWorkspaceIDResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e69f94 (    0xd8) -[SLSBridgedWindowManagementOperationWorkspaceIDResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a06c (    0x80) -[SLSBridgedWindowManagementOperationWorkspaceIDResult initWithWorkspaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a0ec (     0x8) +[SLSBridgedWindowManagementOperationWorkspaceIDResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a0f4 (    0x18) -[SLSBridgedWindowManagementOperationRegionResult copyRegion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a10c (    0x20) -[SLSBridgedWindowManagementOperationRegionResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a12c (   0x10c) _EncodeRegion(NSCoder*, NSString*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a238 (    0xd8) -[SLSBridgedWindowManagementOperationRegionResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a310 (   0x104) _DecodeRegion(NSCoder*, NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a414 (    0xb4) -[SLSBridgedWindowManagementOperationRegionResult dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a4c8 (    0xc0) -[SLSBridgedWindowManagementOperationRegionResult initWithRegion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a588 (     0x8) +[SLSBridgedWindowManagementOperationRegionResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a590 (    0x10) -[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a5a0 (    0x20) -[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult affineTransform] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a5c0 (    0xc4) -[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a684 (    0xc8) _EncodeAffineTransform(NSCoder*, NSString*, CGAffineTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a74c (   0x114) -[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a860 (   0x164) _DecodeAffineTransform(NSCoder*, NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6a9c4 (    0xa0) -[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult initWithAffineTransform:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6aa64 (     0x8) +[SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6aa6c (    0x10) -[SLSBridgedWindowManagementOperationFloatResult floatValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6aa7c (    0x20) -[SLSBridgedWindowManagementOperationFloatResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6aa9c (    0xd8) -[SLSBridgedWindowManagementOperationFloatResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ab74 (    0x80) -[SLSBridgedWindowManagementOperationFloatResult initWithFloatValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6abf4 (     0x8) +[SLSBridgedWindowManagementOperationFloatResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6abfc (    0x10) -[SLSBridgedWindowManagementOperationInt32Result int32Value] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ac0c (    0x20) -[SLSBridgedWindowManagementOperationInt32Result encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ac2c (    0xd8) -[SLSBridgedWindowManagementOperationInt32Result initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ad04 (    0x80) -[SLSBridgedWindowManagementOperationInt32Result initWithInt32Value:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ad84 (     0x8) +[SLSBridgedWindowManagementOperationInt32Result supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ad8c (    0x10) -[SLSBridgedWindowManagementOperationSpaceManagementModeResult spaceManagementMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ad9c (    0x20) -[SLSBridgedWindowManagementOperationSpaceManagementModeResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6adbc (    0xd8) -[SLSBridgedWindowManagementOperationSpaceManagementModeResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ae94 (    0x80) -[SLSBridgedWindowManagementOperationSpaceManagementModeResult initWithSpaceManagementMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6af14 (     0x8) +[SLSBridgedWindowManagementOperationSpaceManagementModeResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6af1c (    0x14) -[SLSBridgedWindowManagementOperationBoolResult boolValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6af30 (    0x20) -[SLSBridgedWindowManagementOperationBoolResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6af50 (    0xd8) -[SLSBridgedWindowManagementOperationBoolResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b028 (    0x80) -[SLSBridgedWindowManagementOperationBoolResult initWithBoolValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b0a8 (     0x8) +[SLSBridgedWindowManagementOperationBoolResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b0b0 (    0x10) -[SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult spaceResizeDirections] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b0c0 (    0x20) -[SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b0e0 (    0xd8) -[SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b1b8 (    0x80) -[SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult initWithSpaceResizeDirections:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b238 (     0x8) +[SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b240 (    0x10) -[SLSBridgedWindowManagementOperationSpacerIndexesResult horizontalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b250 (    0x10) -[SLSBridgedWindowManagementOperationSpacerIndexesResult verticalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b260 (    0x88) -[SLSBridgedWindowManagementOperationSpacerIndexesResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b2e8 (    0xf8) -[SLSBridgedWindowManagementOperationSpacerIndexesResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b3e0 (    0x90) -[SLSBridgedWindowManagementOperationSpacerIndexesResult initWithVerticalIndex:horizontalIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b470 (     0x8) +[SLSBridgedWindowManagementOperationSpacerIndexesResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b478 (    0x70) -[SLSBridgedWindowManagementOperationRectResult rect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b4e8 (    0x28) -[SLSBridgedWindowManagementOperationRectResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b510 (    0xe0) -[SLSBridgedWindowManagementOperationRectResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b5f0 (    0x9c) -[SLSBridgedWindowManagementOperationRectResult initWithRect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b68c (     0x8) +[SLSBridgedWindowManagementOperationRectResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b694 (    0x6c) -[SLSBridgedWindowManagementOperationSizeResult size] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b700 (    0x24) -[SLSBridgedWindowManagementOperationSizeResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b724 (    0xdc) -[SLSBridgedWindowManagementOperationSizeResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b800 (    0x88) -[SLSBridgedWindowManagementOperationSizeResult initWithSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b888 (     0x8) +[SLSBridgedWindowManagementOperationSizeResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b890 (    0x70) -[SLSBridgedWindowManagementOperationSpacersResult rect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b900 (    0x10) -[SLSBridgedWindowManagementOperationSpacersResult horizontalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b910 (    0x10) -[SLSBridgedWindowManagementOperationSpacersResult verticalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b920 (    0xac) -[SLSBridgedWindowManagementOperationSpacersResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6b9cc (   0x124) -[SLSBridgedWindowManagementOperationSpacersResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6baf0 (    0xc4) -[SLSBridgedWindowManagementOperationSpacersResult initWithVerticalIndex:horizontalIndex:rect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bbb4 (     0x8) +[SLSBridgedWindowManagementOperationSpacersResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bbbc (    0x10) -[SLSBridgedWindowManagementOperationWindowIDResult windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bbcc (    0x20) -[SLSBridgedWindowManagementOperationWindowIDResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bbec (    0xd8) -[SLSBridgedWindowManagementOperationWindowIDResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bcc4 (    0x80) -[SLSBridgedWindowManagementOperationWindowIDResult initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bd44 (     0x8) +[SLSBridgedWindowManagementOperationWindowIDResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bd4c (    0x10) -[SLSBridgedWindowManagementOperationProcessIdentifierResult processIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bd5c (    0x20) -[SLSBridgedWindowManagementOperationProcessIdentifierResult encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bd7c (    0xd8) -[SLSBridgedWindowManagementOperationProcessIdentifierResult initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6be54 (    0x80) -[SLSBridgedWindowManagementOperationProcessIdentifierResult initWithProcessIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bed4 (     0x8) +[SLSBridgedWindowManagementOperationProcessIdentifierResult supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bedc (     0x8) -[SLSSynchronousBridgedWindowManagementOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bee4 (     0x4) -[SLSSynchronousBridgedWindowManagementOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bee8 (    0x64) -[SLSSynchronousBridgedWindowManagementOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bf4c (    0x64) -[SLSSynchronousBridgedWindowManagementOperation _init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bfb0 (     0x8) +[SLSSynchronousBridgedWindowManagementOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bfb8 (     0x4) -[SLSAsynchronousBridgedWindowManagementOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bfbc (     0x4) -[SLSAsynchronousBridgedWindowManagementOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6bfc0 (    0x64) -[SLSAsynchronousBridgedWindowManagementOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c024 (    0x64) -[SLSAsynchronousBridgedWindowManagementOperation _init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c088 (     0x8) +[SLSAsynchronousBridgedWindowManagementOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c090 (    0x14) -[SLSBridgedSpaceCreateOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c0a4 (    0x10) -[SLSBridgedSpaceCreateOperation values] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c0b4 (    0x10) -[SLSBridgedSpaceCreateOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c0c4 (    0x58) -[SLSBridgedSpaceCreateOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c11c (    0x44) -[SLSBridgedSpaceCreateOperation makeResultWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c160 (    0x88) -[SLSBridgedSpaceCreateOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c1e8 (   0x3b8) -[SLSBridgedSpaceCreateOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c5a0 (    0xec) -[SLSBridgedSpaceCreateOperation initWithOptions:values:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c68c (     0x8) +[SLSBridgedSpaceCreateOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c694 (    0x10) -[SLSBridgedSpaceDestroyOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c6a4 (    0xc0) -[SLSBridgedSpaceDestroyOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c764 (    0x20) -[SLSBridgedSpaceDestroyOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c784 (    0xd8) -[SLSBridgedSpaceDestroyOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c85c (    0x80) -[SLSBridgedSpaceDestroyOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c8dc (     0x8) +[SLSBridgedSpaceDestroyOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c8e4 (    0x10) -[SLSBridgedSpaceCopyValuesOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c8f4 (    0x80) -[SLSBridgedSpaceCopyValuesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c974 (    0x70) -[SLSBridgedSpaceCopyValuesOperation makeResultWithPropertyListDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6c9e4 (    0x20) -[SLSBridgedSpaceCopyValuesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ca04 (    0xd8) -[SLSBridgedSpaceCopyValuesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cadc (    0x80) -[SLSBridgedSpaceCopyValuesOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cb5c (     0x8) +[SLSBridgedSpaceCopyValuesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cb64 (    0x14) -[SLSBridgedSpaceSetValuesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cb78 (    0x10) -[SLSBridgedSpaceSetValuesOperation values] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cb88 (    0x10) -[SLSBridgedSpaceSetValuesOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cb98 (    0x4c) -[SLSBridgedSpaceSetValuesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cbe4 (    0x88) -[SLSBridgedSpaceSetValuesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6cc6c (   0x3e0) -[SLSBridgedSpaceSetValuesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d04c (    0xec) -[SLSBridgedSpaceSetValuesOperation initWithSpaceID:values:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d138 (     0x8) +[SLSBridgedSpaceSetValuesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d140 (    0x14) -[SLSBridgedShowSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d154 (    0x10) -[SLSBridgedShowSpacesOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d164 (    0x40) -[SLSBridgedShowSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d1a4 (    0x20) -[SLSBridgedShowSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d1c4 (   0x26c) -[SLSBridgedShowSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d430 (    0xdc) -[SLSBridgedShowSpacesOperation initWithSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d50c (     0x8) +[SLSBridgedShowSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d514 (    0x14) -[SLSBridgedResetWindowsOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d528 (    0x10) -[SLSBridgedResetWindowsOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d538 (    0x40) -[SLSBridgedResetWindowsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d578 (    0x20) -[SLSBridgedResetWindowsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d598 (   0x26c) -[SLSBridgedResetWindowsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d804 (    0xdc) -[SLSBridgedResetWindowsOperation initWithWindows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d8e0 (     0x8) +[SLSBridgedResetWindowsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d8e8 (    0x54) -[SLSBridgedAddWindowsToSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d93c (    0x10) -[SLSBridgedAddWindowsToSpacesOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d94c (    0x10) -[SLSBridgedAddWindowsToSpacesOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d95c (    0x4c) -[SLSBridgedAddWindowsToSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6d9a8 (    0x88) -[SLSBridgedAddWindowsToSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6da30 (   0x3ac) -[SLSBridgedAddWindowsToSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6dddc (   0x120) -[SLSBridgedAddWindowsToSpacesOperation initWithWindows:spaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6defc (     0x8) +[SLSBridgedAddWindowsToSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6df04 (    0x54) -[SLSBridgedRemoveWindowsFromSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6df58 (    0x10) -[SLSBridgedRemoveWindowsFromSpacesOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6df68 (    0x10) -[SLSBridgedRemoveWindowsFromSpacesOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6df78 (    0x4c) -[SLSBridgedRemoveWindowsFromSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6dfc4 (    0x88) -[SLSBridgedRemoveWindowsFromSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e04c (   0x374) -[SLSBridgedRemoveWindowsFromSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e3c0 (   0x120) -[SLSBridgedRemoveWindowsFromSpacesOperation initWithWindows:spaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e4e0 (     0x8) +[SLSBridgedRemoveWindowsFromSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e4e8 (    0x14) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e4fc (    0x10) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e50c (    0x10) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e51c (    0x10) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e52c (    0x58) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e584 (    0xa4) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e628 (   0x284) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e8ac (   0x104) -[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation initWithSpaceID:windows:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e9b0 (     0x8) +[SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e9b8 (    0x14) -[SLSBridgedWillSwitchSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e9cc (    0x10) -[SLSBridgedWillSwitchSpacesOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6e9dc (    0x40) -[SLSBridgedWillSwitchSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ea1c (    0x20) -[SLSBridgedWillSwitchSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ea3c (   0x244) -[SLSBridgedWillSwitchSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ec80 (    0xdc) -[SLSBridgedWillSwitchSpacesOperation initWithSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ed5c (     0x8) +[SLSBridgedWillSwitchSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ed64 (    0x14) -[SLSBridgedHideSpacesOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ed78 (    0x10) -[SLSBridgedHideSpacesOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ed88 (    0x40) -[SLSBridgedHideSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6edc8 (    0x20) -[SLSBridgedHideSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ede8 (   0x244) -[SLSBridgedHideSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f02c (    0xdc) -[SLSBridgedHideSpacesOperation initWithSpaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f108 (     0x8) +[SLSBridgedHideSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f110 (    0x10) -[SLSBridgedCopySpacesOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f120 (    0x80) -[SLSBridgedCopySpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f1a0 (    0x70) -[SLSBridgedCopySpacesOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f210 (    0x20) -[SLSBridgedCopySpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f230 (    0xd8) -[SLSBridgedCopySpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f308 (    0x80) -[SLSBridgedCopySpacesOperation initWithOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f388 (     0x8) +[SLSBridgedCopySpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f390 (    0x14) -[SLSBridgedCopySpacesForWindowsOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f3a4 (    0x10) -[SLSBridgedCopySpacesForWindowsOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f3b4 (    0x10) -[SLSBridgedCopySpacesForWindowsOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f3c4 (    0x8c) -[SLSBridgedCopySpacesForWindowsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f450 (    0x70) -[SLSBridgedCopySpacesForWindowsOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f4c0 (    0x88) -[SLSBridgedCopySpacesForWindowsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f548 (   0x26c) -[SLSBridgedCopySpacesForWindowsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f7b4 (    0xec) -[SLSBridgedCopySpacesForWindowsOperation initWithOptions:windows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f8a0 (     0x8) +[SLSBridgedCopySpacesForWindowsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f8a8 (    0x10) -[SLSBridgedCopyAssociatedWindowsOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f8b8 (    0x80) -[SLSBridgedCopyAssociatedWindowsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f938 (    0x70) -[SLSBridgedCopyAssociatedWindowsOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f9a8 (    0x20) -[SLSBridgedCopyAssociatedWindowsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6f9c8 (    0xd8) -[SLSBridgedCopyAssociatedWindowsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6faa0 (    0x80) -[SLSBridgedCopyAssociatedWindowsOperation initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fb20 (     0x8) +[SLSBridgedCopyAssociatedWindowsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fb28 (    0x14) -[SLSBridgedSpaceRemoveValuesForKeysOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fb3c (    0x10) -[SLSBridgedSpaceRemoveValuesForKeysOperation keys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fb4c (    0x10) -[SLSBridgedSpaceRemoveValuesForKeysOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fb5c (    0x4c) -[SLSBridgedSpaceRemoveValuesForKeysOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fba8 (    0x88) -[SLSBridgedSpaceRemoveValuesForKeysOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fc30 (   0x26c) -[SLSBridgedSpaceRemoveValuesForKeysOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6fe9c (    0xec) -[SLSBridgedSpaceRemoveValuesForKeysOperation initWithSpaceID:keys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ff88 (     0x8) +[SLSBridgedSpaceRemoveValuesForKeysOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ff90 (    0x10) -[SLSBridgedSpaceCopyNameOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e6ffa0 (    0x80) -[SLSBridgedSpaceCopyNameOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70020 (    0x70) -[SLSBridgedSpaceCopyNameOperation makeResultWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70090 (    0x20) -[SLSBridgedSpaceCopyNameOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e700b0 (    0xd8) -[SLSBridgedSpaceCopyNameOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70188 (    0x80) -[SLSBridgedSpaceCopyNameOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70208 (     0x8) +[SLSBridgedSpaceCopyNameOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70210 (    0x14) -[SLSBridgedSpaceSetNameOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70224 (    0x10) -[SLSBridgedSpaceSetNameOperation name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70234 (    0x10) -[SLSBridgedSpaceSetNameOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70244 (    0x4c) -[SLSBridgedSpaceSetNameOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70290 (    0x88) -[SLSBridgedSpaceSetNameOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70318 (   0x1c0) -[SLSBridgedSpaceSetNameOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e704d8 (    0xec) -[SLSBridgedSpaceSetNameOperation initWithSpaceID:name:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e705c4 (     0x8) +[SLSBridgedSpaceSetNameOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e705cc (    0x10) -[SLSBridgedSpaceGetTypeOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e705dc (    0x4c) -[SLSBridgedSpaceGetTypeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70628 (    0x44) -[SLSBridgedSpaceGetTypeOperation makeResultWithWorkspaceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7066c (    0x20) -[SLSBridgedSpaceGetTypeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7068c (    0xd8) -[SLSBridgedSpaceGetTypeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70764 (    0x80) -[SLSBridgedSpaceGetTypeOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e707e4 (     0x8) +[SLSBridgedSpaceGetTypeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e707ec (    0x10) -[SLSBridgedSpaceGetCompatIDOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e707fc (    0xa0) -[SLSBridgedSpaceGetCompatIDOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7089c (    0x44) -[SLSBridgedSpaceGetCompatIDOperation makeResultWithWorkspaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e708e0 (    0x20) -[SLSBridgedSpaceGetCompatIDOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70900 (    0xd8) -[SLSBridgedSpaceGetCompatIDOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e709d8 (    0x80) -[SLSBridgedSpaceGetCompatIDOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70a58 (     0x8) +[SLSBridgedSpaceGetCompatIDOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70a60 (    0x10) -[SLSBridgedSpaceSetCompatIDOperation compat_id] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70a70 (    0x10) -[SLSBridgedSpaceSetCompatIDOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70a80 (    0xc8) -[SLSBridgedSpaceSetCompatIDOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70b48 (    0x88) -[SLSBridgedSpaceSetCompatIDOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70bd0 (    0xf8) -[SLSBridgedSpaceSetCompatIDOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70cc8 (    0x90) -[SLSBridgedSpaceSetCompatIDOperation initWithSpaceID:compat_id:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70d58 (     0x8) +[SLSBridgedSpaceSetCompatIDOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70d60 (    0x10) -[SLSBridgedSpaceCopyOwnersOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70d70 (    0x80) -[SLSBridgedSpaceCopyOwnersOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70df0 (    0x70) -[SLSBridgedSpaceCopyOwnersOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70e60 (    0x20) -[SLSBridgedSpaceCopyOwnersOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70e80 (    0xd8) -[SLSBridgedSpaceCopyOwnersOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70f58 (    0x80) -[SLSBridgedSpaceCopyOwnersOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70fd8 (     0x8) +[SLSBridgedSpaceCopyOwnersOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70fe0 (    0x14) -[SLSBridgedSpaceSetOwnersOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e70ff4 (    0x10) -[SLSBridgedSpaceSetOwnersOperation owners] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71004 (    0x10) -[SLSBridgedSpaceSetOwnersOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71014 (    0x4c) -[SLSBridgedSpaceSetOwnersOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71060 (    0x88) -[SLSBridgedSpaceSetOwnersOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e710e8 (   0x26c) -[SLSBridgedSpaceSetOwnersOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71354 (    0xec) -[SLSBridgedSpaceSetOwnersOperation initWithSpaceID:owners:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71440 (     0x8) +[SLSBridgedSpaceSetOwnersOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71448 (    0x10) -[SLSBridgedSpaceAddOwnerOperation owner] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71458 (    0x10) -[SLSBridgedSpaceAddOwnerOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71468 (    0xc8) -[SLSBridgedSpaceAddOwnerOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71530 (    0x88) -[SLSBridgedSpaceAddOwnerOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e715b8 (    0xf8) -[SLSBridgedSpaceAddOwnerOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e716b0 (    0x90) -[SLSBridgedSpaceAddOwnerOperation initWithSpaceID:owner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71740 (     0x8) +[SLSBridgedSpaceAddOwnerOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71748 (    0x10) -[SLSBridgedSpaceRemoveOwnerOperation owner] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71758 (    0x10) -[SLSBridgedSpaceRemoveOwnerOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71768 (    0xc8) -[SLSBridgedSpaceRemoveOwnerOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71830 (    0x88) -[SLSBridgedSpaceRemoveOwnerOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e718b8 (    0xf8) -[SLSBridgedSpaceRemoveOwnerOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e719b0 (    0x90) -[SLSBridgedSpaceRemoveOwnerOperation initWithSpaceID:owner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71a40 (     0x8) +[SLSBridgedSpaceRemoveOwnerOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71a48 (    0x10) -[SLSBridgedTileSpaceTakeOwnershipOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71a58 (    0xb8) -[SLSBridgedTileSpaceTakeOwnershipOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71b10 (    0x20) -[SLSBridgedTileSpaceTakeOwnershipOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71b30 (    0xd8) -[SLSBridgedTileSpaceTakeOwnershipOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71c08 (    0x80) -[SLSBridgedTileSpaceTakeOwnershipOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71c88 (     0x8) +[SLSBridgedTileSpaceTakeOwnershipOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71c90 (    0x10) -[SLSBridgedSpaceCopyShapeOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71ca0 (    0x84) -[SLSBridgedSpaceCopyShapeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71d24 (    0x44) -[SLSBridgedSpaceCopyShapeOperation makeResultWithRegion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71d68 (    0x20) -[SLSBridgedSpaceCopyShapeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71d88 (    0xd8) -[SLSBridgedSpaceCopyShapeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71e60 (    0x80) -[SLSBridgedSpaceCopyShapeOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71ee0 (     0x8) +[SLSBridgedSpaceCopyShapeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71ee8 (    0x10) -[SLSBridgedSpaceSetShapeOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71ef8 (    0x18) -[SLSBridgedSpaceSetShapeOperation copyShape] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71f10 (    0xc8) -[SLSBridgedSpaceSetShapeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e71fd8 (    0x88) -[SLSBridgedSpaceSetShapeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72060 (    0xb4) -[SLSBridgedSpaceSetShapeOperation dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72114 (    0xf8) -[SLSBridgedSpaceSetShapeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7220c (    0xd0) -[SLSBridgedSpaceSetShapeOperation initWithSpaceID:shape:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e722dc (     0x8) +[SLSBridgedSpaceSetShapeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e722e4 (    0x10) -[SLSBridgedSpaceGetTransformOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e722f4 (    0xbc) -[SLSBridgedSpaceGetTransformOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e723b0 (    0x90) -[SLSBridgedSpaceGetTransformOperation makeResultWithAffineTransform:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72440 (    0x20) -[SLSBridgedSpaceGetTransformOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72460 (    0xd8) -[SLSBridgedSpaceGetTransformOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72538 (    0x80) -[SLSBridgedSpaceGetTransformOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e725b8 (     0x8) +[SLSBridgedSpaceGetTransformOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e725c0 (    0x10) -[SLSBridgedSpaceSetTransformOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e725d0 (    0x20) -[SLSBridgedSpaceSetTransformOperation transform] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e725f0 (    0x10) -[SLSBridgedSpaceSetTransformOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72600 (    0x60) -[SLSBridgedSpaceSetTransformOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72660 (    0xe0) -[SLSBridgedSpaceSetTransformOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72740 (   0x134) -[SLSBridgedSpaceSetTransformOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72874 (    0xb8) -[SLSBridgedSpaceSetTransformOperation initWithSpaceID:transform:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7292c (     0x8) +[SLSBridgedSpaceSetTransformOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72934 (    0x10) -[SLSBridgedSpaceGetAlphaOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72944 (    0xa4) -[SLSBridgedSpaceGetAlphaOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e729e8 (    0x44) -[SLSBridgedSpaceGetAlphaOperation makeResultWithFloatValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72a2c (    0x20) -[SLSBridgedSpaceGetAlphaOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72a4c (    0xd8) -[SLSBridgedSpaceGetAlphaOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72b24 (    0x80) -[SLSBridgedSpaceGetAlphaOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72ba4 (     0x8) +[SLSBridgedSpaceGetAlphaOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72bac (    0x10) -[SLSBridgedSpaceSetAlphaOperation alpha] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72bbc (    0x10) -[SLSBridgedSpaceSetAlphaOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72bcc (    0xd0) -[SLSBridgedSpaceSetAlphaOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72c9c (    0x88) -[SLSBridgedSpaceSetAlphaOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72d24 (    0xf8) -[SLSBridgedSpaceSetAlphaOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72e1c (    0x98) -[SLSBridgedSpaceSetAlphaOperation initWithSpaceID:alpha:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72eb4 (     0x8) +[SLSBridgedSpaceSetAlphaOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72ebc (    0x10) -[SLSBridgedSpaceGetAbsoluteLevelOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72ecc (    0xa0) -[SLSBridgedSpaceGetAbsoluteLevelOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72f6c (    0x44) -[SLSBridgedSpaceGetAbsoluteLevelOperation makeResultWithInt32Value:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72fb0 (    0x20) -[SLSBridgedSpaceGetAbsoluteLevelOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e72fd0 (    0xd8) -[SLSBridgedSpaceGetAbsoluteLevelOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e730a8 (    0x80) -[SLSBridgedSpaceGetAbsoluteLevelOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73128 (     0x8) +[SLSBridgedSpaceGetAbsoluteLevelOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73130 (    0x10) -[SLSBridgedSpaceSetAbsoluteLevelOperation level] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73140 (    0x10) -[SLSBridgedSpaceSetAbsoluteLevelOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73150 (    0xc8) -[SLSBridgedSpaceSetAbsoluteLevelOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73218 (    0x88) -[SLSBridgedSpaceSetAbsoluteLevelOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e732a0 (    0xf8) -[SLSBridgedSpaceSetAbsoluteLevelOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73398 (    0x90) -[SLSBridgedSpaceSetAbsoluteLevelOperation initWithSpaceID:level:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73428 (     0x8) +[SLSBridgedSpaceSetAbsoluteLevelOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73430 (    0x14) -[SLSBridgedSpaceWithNameOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73444 (    0x10) -[SLSBridgedSpaceWithNameOperation name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73454 (    0x4c) -[SLSBridgedSpaceWithNameOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e734a0 (    0x44) -[SLSBridgedSpaceWithNameOperation makeResultWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e734e4 (    0x20) -[SLSBridgedSpaceWithNameOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73504 (   0x198) -[SLSBridgedSpaceWithNameOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7369c (    0xdc) -[SLSBridgedSpaceWithNameOperation initWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73778 (     0x8) +[SLSBridgedSpaceWithNameOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73780 (    0x10) -[SLSBridgedSpaceResetMenuBarOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73790 (    0xb8) -[SLSBridgedSpaceResetMenuBarOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73848 (    0x20) -[SLSBridgedSpaceResetMenuBarOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73868 (    0xd8) -[SLSBridgedSpaceResetMenuBarOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73940 (    0x80) -[SLSBridgedSpaceResetMenuBarOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e739c0 (     0x8) +[SLSBridgedSpaceResetMenuBarOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e739c8 (    0x6c) -[SLSBridgedSpaceSetFrontPSNOperation psn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73a34 (    0x10) -[SLSBridgedSpaceSetFrontPSNOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73a44 (    0xc8) -[SLSBridgedSpaceSetFrontPSNOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73b0c (   0x124) -[SLSBridgedSpaceSetFrontPSNOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73c30 (   0x1f4) -[SLSBridgedSpaceSetFrontPSNOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73e24 (    0x90) -[SLSBridgedSpaceSetFrontPSNOperation initWithSpaceID:psn:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73eb4 (     0x8) +[SLSBridgedSpaceSetFrontPSNOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73ebc (    0x10) -[SLSBridgedProcessAssignToSpaceOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73ecc (    0x10) -[SLSBridgedProcessAssignToSpaceOperation process] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73edc (    0xcc) -[SLSBridgedProcessAssignToSpaceOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e73fa8 (    0x88) -[SLSBridgedProcessAssignToSpaceOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74030 (    0xf8) -[SLSBridgedProcessAssignToSpaceOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74128 (    0x90) -[SLSBridgedProcessAssignToSpaceOperation initWithProcess:spaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e741b8 (     0x8) +[SLSBridgedProcessAssignToSpaceOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e741c0 (    0x10) -[SLSBridgedProcessAssignToAllSpacesOperation process] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e741d0 (    0xbc) -[SLSBridgedProcessAssignToAllSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7428c (    0x20) -[SLSBridgedProcessAssignToAllSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e742ac (    0xd8) -[SLSBridgedProcessAssignToAllSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74384 (    0x80) -[SLSBridgedProcessAssignToAllSpacesOperation initWithProcess:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74404 (     0x8) +[SLSBridgedProcessAssignToAllSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7440c (    0x10) -[SLSBridgedSetSpaceManagementModeOperation mode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7441c (    0x50) -[SLSBridgedSetSpaceManagementModeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7446c (    0x20) -[SLSBridgedSetSpaceManagementModeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7448c (    0xd8) -[SLSBridgedSetSpaceManagementModeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74564 (    0x80) -[SLSBridgedSetSpaceManagementModeOperation initWithMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e745e4 (     0x8) +[SLSBridgedSetSpaceManagementModeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e745ec (    0x40) -[SLSBridgedGetSpaceManagementModeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7462c (    0x44) -[SLSBridgedGetSpaceManagementModeOperation makeResultWithSpaceManagementMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74670 (     0x4) -[SLSBridgedGetSpaceManagementModeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74674 (    0x64) -[SLSBridgedGetSpaceManagementModeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e746d8 (    0x64) -[SLSBridgedGetSpaceManagementModeOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7473c (     0x8) +[SLSBridgedGetSpaceManagementModeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74744 (    0x74) -[SLSBridgedCopyManagedDisplaySpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e747b8 (    0x70) -[SLSBridgedCopyManagedDisplaySpacesOperation makeResultWithPropertyListArray:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74828 (     0x4) -[SLSBridgedCopyManagedDisplaySpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7482c (    0x64) -[SLSBridgedCopyManagedDisplaySpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74890 (    0x64) -[SLSBridgedCopyManagedDisplaySpacesOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e748f4 (     0x8) +[SLSBridgedCopyManagedDisplaySpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e748fc (    0x14) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74910 (    0x10) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74920 (    0x10) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74930 (    0x10) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74940 (    0x58) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74998 (    0xa4) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74a3c (   0x1d8) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74c14 (   0x104) -[SLSBridgedMoveManagedSpaceToDisplayIndexOperation initWithSpaceID:displayIdentifier:index:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74d18 (     0x8) +[SLSBridgedMoveManagedSpaceToDisplayIndexOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74d20 (    0x74) -[SLSBridgedCopyManagedDisplaysOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74d94 (    0x70) -[SLSBridgedCopyManagedDisplaysOperation makeResultWithStrings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74e04 (     0x4) -[SLSBridgedCopyManagedDisplaysOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74e08 (    0x64) -[SLSBridgedCopyManagedDisplaysOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74e6c (    0x64) -[SLSBridgedCopyManagedDisplaysOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74ed0 (     0x8) +[SLSBridgedCopyManagedDisplaysOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74ed8 (    0x6c) -[SLSBridgedCopyBestManagedDisplayForPointOperation point] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74f44 (    0x84) -[SLSBridgedCopyBestManagedDisplayForPointOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e74fc8 (    0x70) -[SLSBridgedCopyBestManagedDisplayForPointOperation makeResultWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75038 (    0x24) -[SLSBridgedCopyBestManagedDisplayForPointOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7505c (    0xdc) -[SLSBridgedCopyBestManagedDisplayForPointOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75138 (    0x88) -[SLSBridgedCopyBestManagedDisplayForPointOperation initWithPoint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e751c0 (     0x8) +[SLSBridgedCopyBestManagedDisplayForPointOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e751c8 (    0x70) -[SLSBridgedCopyBestManagedDisplayForRectOperation rect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75238 (    0x88) -[SLSBridgedCopyBestManagedDisplayForRectOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e752c0 (    0x70) -[SLSBridgedCopyBestManagedDisplayForRectOperation makeResultWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75330 (    0x28) -[SLSBridgedCopyBestManagedDisplayForRectOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75358 (    0xe0) -[SLSBridgedCopyBestManagedDisplayForRectOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75438 (    0x9c) -[SLSBridgedCopyBestManagedDisplayForRectOperation initWithRect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e754d4 (     0x8) +[SLSBridgedCopyBestManagedDisplayForRectOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e754dc (    0x10) -[SLSBridgedCopyManagedDisplayForWindowOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e754ec (    0x80) -[SLSBridgedCopyManagedDisplayForWindowOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7556c (    0x70) -[SLSBridgedCopyManagedDisplayForWindowOperation makeResultWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e755dc (    0x20) -[SLSBridgedCopyManagedDisplayForWindowOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e755fc (    0xd8) -[SLSBridgedCopyManagedDisplayForWindowOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e756d4 (    0x80) -[SLSBridgedCopyManagedDisplayForWindowOperation initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75754 (     0x8) +[SLSBridgedCopyManagedDisplayForWindowOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7575c (    0x10) -[SLSBridgedCopyManagedDisplayForSpaceOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7576c (    0x80) -[SLSBridgedCopyManagedDisplayForSpaceOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e757ec (    0x70) -[SLSBridgedCopyManagedDisplayForSpaceOperation makeResultWithString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7585c (    0x20) -[SLSBridgedCopyManagedDisplayForSpaceOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7587c (    0xd8) -[SLSBridgedCopyManagedDisplayForSpaceOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75954 (    0x80) -[SLSBridgedCopyManagedDisplayForSpaceOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e759d4 (     0x8) +[SLSBridgedCopyManagedDisplayForSpaceOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e759dc (    0x14) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e759f0 (    0x10) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75a00 (    0x4c) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75a4c (    0x44) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation makeResultWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75a90 (    0x20) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75ab0 (   0x198) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75c48 (    0xdc) -[SLSBridgedManagedDisplayGetCurrentSpaceOperation initWithDisplayIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75d24 (     0x8) +[SLSBridgedManagedDisplayGetCurrentSpaceOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75d2c (    0x14) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75d40 (    0x10) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75d50 (    0x10) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75d60 (    0x4c) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75dac (    0x88) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75e34 (   0x1bc) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e75ff0 (    0xec) -[SLSBridgedManagedDisplaySetCurrentSpaceOperation initWithDisplayIdentifier:spaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e760dc (     0x8) +[SLSBridgedManagedDisplaySetCurrentSpaceOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e760e4 (    0x14) -[SLSBridgedManagedDisplayIsAnimatingOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e760f8 (    0x10) -[SLSBridgedManagedDisplayIsAnimatingOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76108 (    0x4c) -[SLSBridgedManagedDisplayIsAnimatingOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76154 (    0x44) -[SLSBridgedManagedDisplayIsAnimatingOperation makeResultWithBoolValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76198 (    0x20) -[SLSBridgedManagedDisplayIsAnimatingOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e761b8 (   0x198) -[SLSBridgedManagedDisplayIsAnimatingOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76350 (    0xdc) -[SLSBridgedManagedDisplayIsAnimatingOperation initWithDisplayIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7642c (     0x8) +[SLSBridgedManagedDisplayIsAnimatingOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76434 (    0x14) -[SLSBridgedManagedDisplaySetIsAnimatingOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76448 (    0x14) -[SLSBridgedManagedDisplaySetIsAnimatingOperation isAnimating] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7645c (    0x10) -[SLSBridgedManagedDisplaySetIsAnimatingOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7646c (    0x4c) -[SLSBridgedManagedDisplaySetIsAnimatingOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e764b8 (    0x88) -[SLSBridgedManagedDisplaySetIsAnimatingOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76540 (   0x1bc) -[SLSBridgedManagedDisplaySetIsAnimatingOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e766fc (    0xec) -[SLSBridgedManagedDisplaySetIsAnimatingOperation initWithDisplayIdentifier:isAnimating:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e767e8 (     0x8) +[SLSBridgedManagedDisplaySetIsAnimatingOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e767f0 (    0x14) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76804 (    0x10) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation role] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76814 (    0x10) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation displayIdentifiers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76824 (    0x8c) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e768b0 (    0x70) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76920 (    0x88) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e769a8 (   0x268) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76c10 (    0xec) -[SLSBridgedManagedDisplaysCopyRoleWindowsOperation initWithDisplayIdentifiers:role:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76cfc (     0x8) +[SLSBridgedManagedDisplaysCopyRoleWindowsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76d04 (    0x14) -[SLSBridgedManagedDisplaySetRoleWindowOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76d18 (    0x10) -[SLSBridgedManagedDisplaySetRoleWindowOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76d28 (    0x10) -[SLSBridgedManagedDisplaySetRoleWindowOperation role] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76d38 (    0x10) -[SLSBridgedManagedDisplaySetRoleWindowOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76d48 (    0x58) -[SLSBridgedManagedDisplaySetRoleWindowOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76da0 (    0xa4) -[SLSBridgedManagedDisplaySetRoleWindowOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e76e44 (   0x1d8) -[SLSBridgedManagedDisplaySetRoleWindowOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7701c (   0x104) -[SLSBridgedManagedDisplaySetRoleWindowOperation initWithDisplayIdentifier:role:windowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77120 (     0x8) +[SLSBridgedManagedDisplaySetRoleWindowOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77128 (    0x10) -[SLSBridgedSpaceCopyManagedShapeOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77138 (    0x84) -[SLSBridgedSpaceCopyManagedShapeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e771bc (    0x44) -[SLSBridgedSpaceCopyManagedShapeOperation makeResultWithRegion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77200 (    0x20) -[SLSBridgedSpaceCopyManagedShapeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77220 (    0xd8) -[SLSBridgedSpaceCopyManagedShapeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e772f8 (    0x80) -[SLSBridgedSpaceCopyManagedShapeOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77378 (     0x8) +[SLSBridgedSpaceCopyManagedShapeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77380 (    0x10) -[SLSBridgedSpacePreferCurrentDisplayOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77390 (    0xb8) -[SLSBridgedSpacePreferCurrentDisplayOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77448 (    0x20) -[SLSBridgedSpacePreferCurrentDisplayOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77468 (    0xd8) -[SLSBridgedSpacePreferCurrentDisplayOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77540 (    0x80) -[SLSBridgedSpacePreferCurrentDisplayOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e775c0 (     0x8) +[SLSBridgedSpacePreferCurrentDisplayOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e775c8 (    0x14) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e775dc (    0x10) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e775ec (    0x10) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation displayIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e775fc (    0x58) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77654 (    0x44) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation makeResultWithBoolValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77698 (    0x88) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77720 (   0x1bc) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e778dc (    0xec) -[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation initWithDisplayIdentifier:windowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e779c8 (     0x8) +[SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e779d0 (    0x14) -[SLSBridgedMoveWindowsToManagedSpaceOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e779e4 (    0x10) -[SLSBridgedMoveWindowsToManagedSpaceOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e779f4 (    0x10) -[SLSBridgedMoveWindowsToManagedSpaceOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77a04 (    0x4c) -[SLSBridgedMoveWindowsToManagedSpaceOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77a50 (    0x88) -[SLSBridgedMoveWindowsToManagedSpaceOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77ad8 (   0x268) -[SLSBridgedMoveWindowsToManagedSpaceOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77d40 (    0xec) -[SLSBridgedMoveWindowsToManagedSpaceOperation initWithWindows:spaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77e2c (     0x8) +[SLSBridgedMoveWindowsToManagedSpaceOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77e34 (    0x14) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77e48 (    0x10) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation windows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77e58 (    0x40) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77e98 (    0x20) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e77eb8 (   0x244) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e780fc (    0xdc) -[SLSBridgedReassociateWindowsSpacesByGeometryOperation initWithWindows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e781d8 (     0x8) +[SLSBridgedReassociateWindowsSpacesByGeometryOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e781e0 (    0x10) -[SLSBridgedSpaceSetOrderingWeightOperation weight] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e781f0 (    0x10) -[SLSBridgedSpaceSetOrderingWeightOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78200 (    0xc8) -[SLSBridgedSpaceSetOrderingWeightOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e782c8 (    0x88) -[SLSBridgedSpaceSetOrderingWeightOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78350 (    0xf8) -[SLSBridgedSpaceSetOrderingWeightOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78448 (    0x90) -[SLSBridgedSpaceSetOrderingWeightOperation initWithSpaceID:weight:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e784d8 (     0x8) +[SLSBridgedSpaceSetOrderingWeightOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e784e0 (    0x10) -[SLSBridgedGetTileSpaceDividerDirectionsOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e784f0 (    0x8c) -[SLSBridgedGetTileSpaceDividerDirectionsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7857c (    0x44) -[SLSBridgedGetTileSpaceDividerDirectionsOperation makeResultWithSpaceResizeDirections:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e785c0 (    0x20) -[SLSBridgedGetTileSpaceDividerDirectionsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e785e0 (    0xd8) -[SLSBridgedGetTileSpaceDividerDirectionsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e786b8 (    0x80) -[SLSBridgedGetTileSpaceDividerDirectionsOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78738 (     0x8) +[SLSBridgedGetTileSpaceDividerDirectionsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78740 (    0x10) -[SLSBridgedTileSpaceSetDividerWindowOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78750 (    0x10) -[SLSBridgedTileSpaceSetDividerWindowOperation direction] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78760 (    0x10) -[SLSBridgedTileSpaceSetDividerWindowOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78770 (    0xc4) -[SLSBridgedTileSpaceSetDividerWindowOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78834 (    0x4c) -[SLSBridgedTileSpaceSetDividerWindowOperation makeResultWithVerticalIndex:horizontalIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78880 (    0xa4) -[SLSBridgedTileSpaceSetDividerWindowOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78924 (   0x118) -[SLSBridgedTileSpaceSetDividerWindowOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78a3c (    0xa8) -[SLSBridgedTileSpaceSetDividerWindowOperation initWithSpaceID:direction:windowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78ae4 (     0x8) +[SLSBridgedTileSpaceSetDividerWindowOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78aec (    0x14) -[SLSBridgedSpaceCreateTileOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78b00 (    0x10) -[SLSBridgedSpaceCreateTileOperation values] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78b10 (    0x10) -[SLSBridgedSpaceCreateTileOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78b20 (    0x58) -[SLSBridgedSpaceCreateTileOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78b78 (    0x44) -[SLSBridgedSpaceCreateTileOperation makeResultWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78bbc (    0x88) -[SLSBridgedSpaceCreateTileOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78c44 (   0x3b8) -[SLSBridgedSpaceCreateTileOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e78ffc (    0xec) -[SLSBridgedSpaceCreateTileOperation initWithSpaceID:values:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e790e8 (     0x8) +[SLSBridgedSpaceCreateTileOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e790f0 (    0x10) -[SLSBridgedSpaceGetRectOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79100 (    0x48) -[SLSBridgedSpaceGetRectOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79148 (    0x64) -[SLSBridgedSpaceGetRectOperation makeResultWithRect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e791ac (    0x20) -[SLSBridgedSpaceGetRectOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e791cc (    0xd8) -[SLSBridgedSpaceGetRectOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e792a4 (    0x80) -[SLSBridgedSpaceGetRectOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79324 (     0x8) +[SLSBridgedSpaceGetRectOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7932c (    0x10) -[SLSBridgedWindowGetTileRectOperation windowID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7933c (    0x48) -[SLSBridgedWindowGetTileRectOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79384 (    0x64) -[SLSBridgedWindowGetTileRectOperation makeResultWithRect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e793e8 (    0x20) -[SLSBridgedWindowGetTileRectOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79408 (    0xd8) -[SLSBridgedWindowGetTileRectOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e794e0 (    0x80) -[SLSBridgedWindowGetTileRectOperation initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79560 (     0x8) +[SLSBridgedWindowGetTileRectOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79568 (    0x10) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79578 (    0x10) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation parentID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79588 (    0x10) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation tileID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79598 (    0xdc) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79674 (    0xa4) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79718 (   0x118) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79830 (    0xa8) -[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation initWithTileID:parentID:index:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e798d8 (     0x8) +[SLSBridgedSpaceTileMoveToSpaceAtIndexOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e798e0 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation bottom] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e798f0 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation top] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79900 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation right] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79910 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation left] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79920 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation edgeMask] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79930 (    0x10) -[SLSBridgedSpaceSetEdgeReservationOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79940 (   0x128) -[SLSBridgedSpaceSetEdgeReservationOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79a68 (    0xf8) -[SLSBridgedSpaceSetEdgeReservationOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79b60 (   0x178) -[SLSBridgedSpaceSetEdgeReservationOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79cd8 (    0xe0) -[SLSBridgedSpaceSetEdgeReservationOperation initWithSpaceID:edgeMask:left:right:top:bottom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79db8 (     0x8) +[SLSBridgedSpaceSetEdgeReservationOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79dc0 (    0x10) -[SLSBridgedSpaceGetInterTileSpacingOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79dd0 (    0x48) -[SLSBridgedSpaceGetInterTileSpacingOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79e18 (    0x4c) -[SLSBridgedSpaceGetInterTileSpacingOperation makeResultWithSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79e64 (    0x20) -[SLSBridgedSpaceGetInterTileSpacingOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79e84 (    0xd8) -[SLSBridgedSpaceGetInterTileSpacingOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79f5c (    0x80) -[SLSBridgedSpaceGetInterTileSpacingOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79fdc (     0x8) +[SLSBridgedSpaceGetInterTileSpacingOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e79fe4 (    0x6c) -[SLSBridgedSpaceSetInterTileSpacingOperation spacing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a050 (    0x10) -[SLSBridgedSpaceSetInterTileSpacingOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a060 (    0xd4) -[SLSBridgedSpaceSetInterTileSpacingOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a134 (    0x8c) -[SLSBridgedSpaceSetInterTileSpacingOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a1c0 (   0x100) -[SLSBridgedSpaceSetInterTileSpacingOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a2c0 (    0xa0) -[SLSBridgedSpaceSetInterTileSpacingOperation initWithSpaceID:spacing:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a360 (     0x8) +[SLSBridgedSpaceSetInterTileSpacingOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a368 (    0x6c) -[SLSBridgedSpaceCanCreateTileOperation minSize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a3d4 (    0x10) -[SLSBridgedSpaceCanCreateTileOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a3e4 (    0x5c) -[SLSBridgedSpaceCanCreateTileOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a440 (    0x44) -[SLSBridgedSpaceCanCreateTileOperation makeResultWithBoolValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a484 (    0x8c) -[SLSBridgedSpaceCanCreateTileOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a510 (   0x100) -[SLSBridgedSpaceCanCreateTileOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a610 (    0xa0) -[SLSBridgedSpaceCanCreateTileOperation initWithSpaceID:minSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a6b0 (     0x8) +[SLSBridgedSpaceCanCreateTileOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a6b8 (    0x14) -[SLSBridgedSpaceGetSizeForProposedTileOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a6cc (    0x10) -[SLSBridgedSpaceGetSizeForProposedTileOperation values] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a6dc (    0x10) -[SLSBridgedSpaceGetSizeForProposedTileOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a6ec (    0x54) -[SLSBridgedSpaceGetSizeForProposedTileOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a740 (    0x4c) -[SLSBridgedSpaceGetSizeForProposedTileOperation makeResultWithSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a78c (    0x88) -[SLSBridgedSpaceGetSizeForProposedTileOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7a814 (   0x3b8) -[SLSBridgedSpaceGetSizeForProposedTileOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7abcc (    0xec) -[SLSBridgedSpaceGetSizeForProposedTileOperation initWithSpaceID:values:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7acb8 (     0x8) +[SLSBridgedSpaceGetSizeForProposedTileOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7acc0 (    0x6c) -[SLSBridgedSpaceGetSpacersAtPointOperation point] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ad2c (    0x10) -[SLSBridgedSpaceGetSpacersAtPointOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ad3c (    0xc8) -[SLSBridgedSpaceGetSpacersAtPointOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ae04 (    0x7c) -[SLSBridgedSpaceGetSpacersAtPointOperation makeResultWithVerticalIndex:horizontalIndex:rect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ae80 (    0x8c) -[SLSBridgedSpaceGetSpacersAtPointOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7af0c (   0x100) -[SLSBridgedSpaceGetSpacersAtPointOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b00c (    0xa0) -[SLSBridgedSpaceGetSpacersAtPointOperation initWithSpaceID:point:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b0ac (     0x8) +[SLSBridgedSpaceGetSpacersAtPointOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b0b4 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b0c4 (    0x6c) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation point] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b130 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation horizontalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b140 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation verticalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b150 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation drivingSpaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b160 (    0xac) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b20c (    0xe0) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b2ec (   0x160) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b44c (    0xd8) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation initWithDrivingSpaceID:verticalIndex:horizontalIndex:point:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b524 (     0x8) +[SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b52c (    0x6c) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation size] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b598 (    0x10) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation tileSpaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b5a8 (    0x64) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b60c (    0x8c) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b698 (   0x100) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b798 (    0xa0) -[SLSBridgedTileSpaceMoveSpacersForSizeOperation initWithTileSpaceID:size:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b838 (     0x8) +[SLSBridgedTileSpaceMoveSpacersForSizeOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b840 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation fencePort] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b850 (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b860 (    0x6c) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation point] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b8cc (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation horizontalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b8dc (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation verticalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b8ec (    0x10) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation drivingSpaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b8fc (    0xc0) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7b9bc (    0xf4) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bab0 (   0x108) _EncodeFencePort(NSCoder*, NSString*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bbb8 (   0x178) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bd30 (   0x114) _DecodeFencePort(NSCoder*, NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7be44 (    0xf0) -[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation initWithDrivingSpaceID:verticalIndex:horizontalIndex:point:options:fencePort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bf34 (     0x8) +[SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bf3c (    0x10) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation fencePort] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bf4c (    0x6c) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation size] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bfb8 (    0x10) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation tileSpaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7bfc8 (    0x70) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c038 (    0xa0) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c0d8 (   0x118) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c1f0 (    0xb0) -[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation initWithTileSpaceID:size:fencePort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c2a0 (     0x8) +[SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c2a8 (    0x70) -[SLSBridgedSpaceFinishedResizeForRectOperation rect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c318 (    0x10) -[SLSBridgedSpaceFinishedResizeForRectOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c328 (    0x54) -[SLSBridgedSpaceFinishedResizeForRectOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c37c (    0x90) -[SLSBridgedSpaceFinishedResizeForRectOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c40c (   0x104) -[SLSBridgedSpaceFinishedResizeForRectOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c510 (    0xb4) -[SLSBridgedSpaceFinishedResizeForRectOperation initWithSpaceID:rect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c5c4 (     0x8) +[SLSBridgedSpaceFinishedResizeForRectOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c5cc (    0x10) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation horizontalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c5dc (    0x10) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation verticalIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c5ec (    0x10) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c5fc (    0xc0) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c6bc (    0x44) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation makeResultWithSpaceResizeDirections:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c700 (    0xa4) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c7a4 (   0x118) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c8bc (    0xa8) -[SLSBridgedGetSpacePermittedResizeDirectionsOperation initWithSpaceID:verticalIndex:horizontalIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c964 (     0x8) +[SLSBridgedGetSpacePermittedResizeDirectionsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c96c (    0x10) -[SLSBridgedSpaceCopyTileSpacesOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c97c (    0x80) -[SLSBridgedSpaceCopyTileSpacesOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7c9fc (    0x70) -[SLSBridgedSpaceCopyTileSpacesOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ca6c (    0x20) -[SLSBridgedSpaceCopyTileSpacesOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ca8c (    0xd8) -[SLSBridgedSpaceCopyTileSpacesOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cb64 (    0x80) -[SLSBridgedSpaceCopyTileSpacesOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cbe4 (     0x8) +[SLSBridgedSpaceCopyTileSpacesOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cbec (    0x10) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cbfc (    0xa0) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cc9c (    0x44) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation makeResultWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cce0 (    0x20) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cd00 (    0xd8) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cdd8 (    0x80) -[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ce58 (     0x8) +[SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ce60 (    0x10) -[SLSBridgedGetSpaceNeedsSafeApertureOperation spaceID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ce70 (    0x4c) -[SLSBridgedGetSpaceNeedsSafeApertureOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cebc (    0x44) -[SLSBridgedGetSpaceNeedsSafeApertureOperation makeResultWithBoolValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cf00 (    0x20) -[SLSBridgedGetSpaceNeedsSafeApertureOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cf20 (    0xd8) -[SLSBridgedGetSpaceNeedsSafeApertureOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7cff8 (    0x80) -[SLSBridgedGetSpaceNeedsSafeApertureOperation initWithSpaceID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d078 (     0x8) +[SLSBridgedGetSpaceNeedsSafeApertureOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d080 (    0x68) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d0e8 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d0f8 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation spaces] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d108 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation owner] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d118 (    0x7c) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation getClearedTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d194 (    0x7c) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation getSetTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d210 (   0x16c) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d37c (    0x70) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d3ec (    0xdc) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d4c8 (   0x2e4) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d7ac (    0xc8) _DecodeWindowTags(NSCoder*, NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d874 (   0x174) -[SLSBridgedCopyWindowsWithOptionsAndTagsOperation initWithOwner:spaces:options:setTags:clearedTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d9e8 (     0x8) +[SLSBridgedCopyWindowsWithOptionsAndTagsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7d9f0 (    0x54) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7da44 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation options] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7da54 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation spaceOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7da64 (    0x10) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation owner] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7da74 (    0x7c) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation getClearedTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7daf0 (    0x7c) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation getSetTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7db6c (   0x16c) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation invokeFallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7dcd8 (    0x70) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation makeResultWithNumbers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7dd48 (    0xdc) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7de24 (   0x180) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7dfa4 (   0x140) -[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation initWithOwner:spaceOptions:options:setTags:clearedTags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e0e4 (     0x8) +[SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e0ec (   0x170) WSIOSurfaceCreateWithFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e25c (   0x168) add_b3a8_dictionary(__CFDictionary*, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e3c4 (   0x574) iosurface_create_common(__CFDictionary const*, char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e938 (    0x88) WSIOSurfaceLabelPrefix [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7e9c0 (    0x40) __WSIOSurfaceLabelPrefix_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ea00 (   0x1a8) create_plane_dict(long, long, long, long, unsigned long, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7eba8 (   0x178) WSIOSurfaceCreateTargetableWithFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7ed20 (   0x1bc) WSIOSurfaceCreateTargetableWithFormatAndProtection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7eedc (   0x1b0) WSIOSurfaceCreateWithFormatDisplayable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f08c (    0x94) WSIOSurfaceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f120 (    0x94) WSIOSurfaceCreatePermittingFailure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f1b4 (    0x9c) WSIOSurfaceGetEDRFactor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f250 (    0x98) WSIOSurfaceSetEDRFactor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f2e8 (    0x6c) WSIOSurfaceSetColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f354 (    0xd4) WSIOSurfaceSetDebugLabel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f428 (    0xa4) WSIOSurfaceGetYCbCrMatrix [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e7f4cc (   0xc68) SLSSnappingInfoServerCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e80134 (    0xbc) ___SLSSnappingInfoAddSnappingRects_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e801f0 (    0xc0) _CGAddWholeSnappingRectForRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e802b0 (    0x70) CGXColorConversionShouldConvert [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e80320 (   0x1d0) CGXColorConversionCreateWithSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e804f0 (    0x68) CGXColorConversionRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e80558 (    0xac) CGXColorConversionConvertRGBA8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e80604 (   0x178) convert_color [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8077c (  0x13d0) hid_translation_state_append_hid_event(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e81b4c (    0x8c) (null) [FUNC, FunctionStarts] 
                0x0000000185e81bd8 (    0x58) (null) [FUNC, FunctionStarts] 
                0x0000000185e81c30 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000185e81c5c (    0xe8) create_translated_event_record_internal(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e81d44 (   0x1ec) hid_translation_state_append_event_record(hid_translation_state_t*, std::__1::unique_ptr<SLSEventRecord, SLSEventRecordDeleter>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e81f30 (    0xdc) hid_event_get_remote_input_time(__IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8200c (    0x88) set_up_common_swipe_fields(SLSEventRecord*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82094 (    0x40) invocation function for block in hid_translation_state_append_dock_swipe_event(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e820d4 (    0x40) invocation function for block in hid_translation_state_append_scale_event(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82114 (    0x40) invocation function for block in hid_translation_state_append_rotation_event(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82154 (    0x40) invocation function for block in hid_translation_state_append_translation_event(hid_translation_state_t*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82194 (    0x40) invocation function for block in hid_translation_state_append_wrapped_nxevent(hid_translation_state_t*, __IOHIDEvent*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e821d4 (    0x9c) (anonymous namespace)::get_registry() (.17897) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82270 (    0xe4) std::__1::map<unsigned int, (anonymous namespace)::Backtrace, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, (anonymous namespace)::Backtrace>>>::erase[abi:v160006](unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82354 (    0xd4) std::__1::map<unsigned int, (anonymous namespace)::Backtrace, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, (anonymous namespace)::Backtrace>>>::insert[abi:v160006](std::__1::pair<unsigned int const, (anonymous namespace)::Backtrace>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82428 (    0x28) std::__1::__shared_ptr_pointer<CGSBacktrace*, void (*)(CGSBacktrace*), std::__1::allocator<CGSBacktrace>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82450 (     0x4) std::__1::__shared_ptr_pointer<CGSBacktrace*, void (*)(CGSBacktrace*), std::__1::allocator<CGSBacktrace>>::~__shared_ptr_pointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82454 (    0xb0) (anonymous namespace)::Registry::existence_check(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82504 (   0x160) (anonymous namespace)::Registry::zombie_check(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82664 (    0x4c) CGSEventStateCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e826b0 (   0x114) SLSXPCServicePerformWithConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e827c4 (   0x1a4) __SLSXPCServicePerformWithConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e82968 (   0x7dc) invocation function for block in with_bootstrap_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83144 (    0x60) invocation function for block in with_bootstrap_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e831a4 (   0x1e0) invocation function for block in with_bootstrap_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83384 (    0x10) __Block_byref_object_copy_.17940 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83394 (     0xc) __Block_byref_object_dispose_.17941 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e833a0 (    0x5c) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e833fc (    0x70) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8346c (    0x70) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e834dc (    0x4c) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83528 (    0x4c) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83574 (   0x1a8) createCancellableMachRecvSource(NSObject<OS_dispatch_queue>*, NSError**, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8371c (    0x14) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83730 (    0x40) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83770 (    0x6c) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e837dc (    0x58) invocation function for block in createOneShotNoSendersHandlingMachRecvSource(NSObject<OS_dispatch_queue>*, void (NSError*) block_pointer, void (NSObject<OS_dispatch_source>*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83834 (    0x74) invocation function for block in createCancellableMachRecvSource(NSObject<OS_dispatch_queue>*, NSError**, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e838a8 (    0xa0) invocation function for block in with_bootstrap_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83948 (    0x2c) invocation function for block in get_bootstrap_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83974 (   0x120) __SLSXPCServicePerformWithConnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83a94 (   0x124) CGXHandleMessageWithResponseBuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83bb8 (    0x7c) __CGXHideHODWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83c34 (   0x14c) __CGXHideHODWindows_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83d80 (   0x138) CGXShowHODWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e83eb8 (   0x154) __CGXShowHODWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8400c (    0xc0) show_hod_window(CGXConnection*, CGXWindow*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e840cc (    0x3c) window_effectively_hides_on_deactivate(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84108 (    0x50) CGXSetActiveMenuBarDrawingStyle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84158 (   0x300) PKGEnsureSpaceSwitchToActiveProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84458 (   0x108) __PKGEnsureSpaceSwitchToActiveProcess_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84560 (    0x94) __PKGEnsureSpaceSwitchToActiveProcess_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e845f4 (   0x410) update_front_process_for_space(PKGManagedSpace*, PKGManagedSpace*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84a04 (    0x68) invocation function for block in update_front_process_for_space(PKGManagedSpace*, PKGManagedSpace*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84a6c (   0x2a8) copy_space_windows(PKGManagedSpace*, unsigned int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84d14 (   0x120) topmost_connection_in_window_list(PKGManagedSpace*, x_list_struct*, bool, CGXWindow**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84e34 (    0x50) invocation function for block in topmost_sticky_window_for_space(PKGManagedSpace*, PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84e84 (    0x60) desktop_window_for_space(PKGManagedSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84ee4 (    0x9c) invocation function for block in topmost_connection_in_window_list(PKGManagedSpace*, x_list_struct*, bool, CGXWindow**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e84f80 (   0x120) invocation function for block in copy_space_windows(PKGManagedSpace*, unsigned int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e850a0 (    0xa4) invocation function for block in copy_space_windows(PKGManagedSpace*, unsigned int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e85144 (    0x30) invocation function for block in copy_space_windows(PKGManagedSpace*, unsigned int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e85174 (   0x208) PKGSetFrontProcessForCurrentSpaceSwitch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8537c (    0x90) __PKGSetFrontProcessForCurrentSpaceSwitch_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8540c (    0x20) invocation function for block in copy_floating_windows(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8542c (   0x1c8) WSOrderWinsAndPanels [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e855f4 (   0x18c) CGXPseudoActivateWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e85780 (    0xdc) CGXSendDeferredAct [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8585c (    0xc0) CGXSendReactivate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8591c (   0x5a0) PKGReorderWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e85ebc (   0x24c) getSpaceWindowListWithOptionsAndTagsIncludingChildren(CGXConnection*, x_list_struct*, unsigned int, WSWindowTagBitMask, WSWindowTagBitMask, unsigned int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86108 (   0x190) invocation function for block in getSpaceWindowListWithOptionsAndTagsIncludingChildren(CGXConnection*, x_list_struct*, unsigned int, WSWindowTagBitMask, WSWindowTagBitMask, unsigned int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86298 (    0x10) invocation function for block in z_sort_window_list(unsigned int*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e862a8 (    0x20) invocation function for block in spaceSwitchAllowed(x_list_struct*, x_list_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e862c8 (    0xcc) _persistencePostNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86394 (     0x4) _persistenceTimeoutExpired(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86398 (   0x2e8) __loginframework_vtable_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86680 (   0x43c) SLSCreateSessionTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86abc (    0xf8) __SLSCreateSessionTemporaryBridge_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86bb4 (   0x1fc) __SLSCreateSessionTemporaryBridge_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e86db0 (   0x260) SLSCreateSessionInternalBridge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87010 (   0x204) SLSReleaseSessionTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87214 (   0x12c) SLSReleaseSessionInternalBridge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87340 (   0x204) SLSMoveSessionToConsoleTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87544 (   0x12c) SLSMoveSessionToConsoleInternalBridge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87670 (   0x278) SLSSetSessionPropertiesTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e878e8 (   0x180) __SLSSetSessionPropertiesTemporaryBridge_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87a68 (   0x31c) SLSCopySessionPropertiesTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87d84 (   0x1a0) SLSCopyCurrentSessionPropertiesInternalBridge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e87f24 (   0x1d4) SLSCopyAllSessionPropertiesTemporaryBridge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e880f8 (    0x70) SLSSessionCopyAllSessionPropertiesInternalBridge [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88168 (    0xa8) WSWindowTransformIsOpaqueShapeSafe [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88210 (    0xa4) WSWindowTransformIsRectilinear [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e882b4 (   0x12c) WSWindowTransformIsSingular [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e883e0 (   0x178) WSWindowTransformTranslatePreservingTranslation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88558 (    0xac) WSWindowTransformMakeBestAffine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88604 (   0x310) WSWindowTransformScreenRectToLayerTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88914 (    0xbc) WSWindowTransformProjectScreenPointToWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e889d0 (    0xe8) WSWindowTransformMakeInverseTransformedRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88ab8 (   0x1d4) WSWindowTransformCreateTransformedRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88c8c (    0xb0) WSWindowTransformCreateInverseTransformedRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88d3c (   0x208) WSWindowTransformCreateLoggingString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e88f44 (   0x2a0) WSWindowTransformCreateExternalDebuggingArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e891e4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<(anonymous namespace)::Callout>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<(anonymous namespace)::Callout>>(std::__1::allocator<(anonymous namespace)::Callout>&, unsigned long) (.18725) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8921c (    0x1c) __SLSServerPortInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89238 (    0x98) server_shutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e892d0 (    0xcc) SLSServerPortFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8939c (     0xc) SLSServerIsConnected [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e893a8 (    0x90) __app_permitted_to_connect_or_launch_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89438 (   0x27c) SLSServerPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e896b4 (    0x3c) look_up_server_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e896f0 (   0x238) -[SLDisplayPresetDeviceManager tickleTemporaryPowerAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89928 (    0xa4) -[SLDisplayPresetDeviceManager copyDeviceForContainer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e899cc (    0x6c) -[SLDisplayPresetDeviceManager copyDevices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89a38 (    0xb4) -[SLDisplayPresetDeviceManager stop] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89aec (    0x98) __36-[SLDisplayPresetDeviceManager stop]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89b84 (   0x2a8) -[SLDisplayPresetDeviceManager startWithBlock:onQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89e2c (    0xc8) copy_preset_device_matching_dict() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89ef4 (     0xc) __55-[SLDisplayPresetDeviceManager startWithBlock:onQueue:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89f00 (     0xc) __55-[SLDisplayPresetDeviceManager startWithBlock:onQueue:]_block_invoke.10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89f0c (    0x6c) service_removed(void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89f78 (    0x6c) service_added(void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e89fe4 (   0x190) -[SLDisplayPresetDeviceManager _serviceRemoved:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a174 (   0x124) preset_service_description(unsigned int, SLDisplayPresetDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a298 (   0x10c) -[SLDisplayPresetDeviceManager _serviceAdded:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a3a4 (    0x3c) __46-[SLDisplayPresetDeviceManager _serviceAdded:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a3e0 (   0x208) -[SLDisplayPresetDeviceManager _serviceAdded:]::$_0::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a5e8 (    0xb4) invocation function for block in -[SLDisplayPresetDeviceManager _serviceAdded:]::$_0::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8a69c (   0x3bc) -[SLDisplayPresetDevice copyCalibrationInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8aa58 (   0x54c) -[SLDisplayPresetDevice getUserAdjustmentPowerLimit] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8afa4 (   0x294) CreateCalibrationHIDDeviceForContainerID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b238 (   0x1e0) GetCalibrationInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b418 (    0x14) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b42c (     0x4) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b430 (     0x4) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b434 (    0x24) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b458 (    0x48) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4a0 (     0x4) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4a4 (     0x4) std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4a8 (     0xc) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4b4 (     0x4) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4b8 (     0x4) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4bc (    0x24) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b4e0 (    0x48) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b528 (     0x4) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b52c (     0x4) std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b530 (   0x178) -[SLDisplayPresetDevice invalidateUserAdjustment] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b6a8 (    0xd0) HIDDisplayLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b778 (   0x120) getHIDDisplayUserAdjustmentInvalidateSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b898 (    0x50) invocation function for block in getHIDDisplayUserAdjustmentInvalidateSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b8e8 (    0x88) HIDDisplayLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b970 (    0x74) invocation function for block in HIDDisplayLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8b9e4 (    0xa8) -[SLDisplayPresetDevice isUserAdjustmentValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ba8c (   0x120) getHIDDisplayUserAdjustmentIsValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8bbac (    0x50) invocation function for block in getHIDDisplayUserAdjustmentIsValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8bbfc (    0x10) -[SLDisplayPresetDevice isUserAdjustmentSupported] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8bc0c (   0x424) -[SLDisplayPresetDevice setUserAdjustmentData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8c030 (   0x120) getHIDDisplayUserAdjustmentSetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8c150 (    0xa0) std::__1::optional<float> CFDictionaryGetValue<float>(__CFDictionary const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8c1f0 (    0x50) invocation function for block in getHIDDisplayUserAdjustmentSetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8c240 (   0xc7c) -[SLDisplayPresetDevice setUserAdjustment:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8cebc (    0xe4) invocation function for block in ValidateUserAdjustmentDict(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8cfa0 (    0xcc) __43-[SLDisplayPresetDevice setUserAdjustment:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d06c (    0x5c) invocation function for block in EncodeUserAdjustmentData(NSMutableDictionary*, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d0c8 (    0xe4) invocation function for block in ValidateUserAdjustmentData(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d1ac (   0x5e4) -[SLDisplayPresetDevice copyUserAdjustmentData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d790 (   0x120) getHIDDisplayUserAdjustmentCopyDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d8b0 (    0x50) invocation function for block in getHIDDisplayUserAdjustmentCopyDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8d900 (   0x330) -[SLDisplayPresetDevice copyUserAdjustment] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8dc30 (    0x5c) invocation function for block in DecodeUserAdjustmentData(NSMutableDictionary*, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8dc8c (   0xb34) -[SLDisplayPresetDevice copyPresetDataAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8e7c0 (   0x120) getHIDDisplayCopyPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8e8e0 (   0x2e8) LogPresetHIDData(char const*, char const*, unsigned int, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ebc8 (    0xac) std::__1::optional<long long> CFDictionaryGetValue<long long>(__CFDictionary const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ec74 (    0x50) std::__1::optional<__CFData const*> CFDictionaryGetValue<__CFData const*>(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ecc4 (    0x74) invocation function for block in enable_display_presets_dump() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ed38 (    0x50) invocation function for block in getHIDDisplayCopyPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8ed88 (   0x304) -[SLDisplayPresetDevice factoryResetWithType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f08c (   0x120) getHIDDisplayDeviceManagementGetSecurityTokenSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f1ac (   0x120) getHIDDisplayDeviceManagementSetFactoryResetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f2cc (    0x50) invocation function for block in getHIDDisplayDeviceManagementSetFactoryResetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f31c (    0x50) invocation function for block in getHIDDisplayDeviceManagementGetSecurityTokenSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f36c (   0x218) -[SLDisplayPresetDevice resetPresetAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e8f584 (  0x3448) -[SLDisplayPresetDevice setPresetAtIndex:withData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e929cc (   0x120) CopyDictionaryWithKeys(NSDictionary*, NSArray<NSString const*> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e92aec (    0xa4) std::__1::optional<unsigned char> CFDictionaryGetValue<unsigned char>(__CFDictionary const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e92b90 (    0xa4) std::__1::optional<double> CFDictionaryGetValue<double>(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e92c34 (    0x60) std::__1::optional<bool> CFDictionaryGetValue<bool>(__CFDictionary const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e92c94 (   0x440) requiredLuminanceCorrectionFactor(float (*) [2], float*, float (*) [2], float*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e930d4 (   0x16c) makeTargetToXYZ(float (*) [3], float (*) [2], float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e93240 (   0x4b4) -[SLDisplayPresetDevice copyPresetAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e936f4 (   0x970) -[SLDisplayPresetDevice setPresetDataAtIndex:withData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94064 (   0x1b0) -[SLDisplayPresetDevice _setPresetHIDDataAtIndex:withData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94214 (   0x120) getHIDDisplaySetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94334 (    0x50) invocation function for block in getHIDDisplaySetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94384 (    0xa0) -[SLDisplayPresetDevice presetCapabilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94424 (   0x120) getHIDDisplayGetPresetCapabilitiesSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94544 (    0x50) invocation function for block in getHIDDisplayGetPresetCapabilitiesSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94594 (    0xf0) -[SLDisplayPresetDevice presetUUIDAtIndex:toBytes:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94684 (   0x120) getHIDDisplayCopyPresetUniqueIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e947a4 (    0x50) invocation function for block in getHIDDisplayCopyPresetUniqueIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e947f4 (    0xb0) -[SLDisplayPresetDevice isPresetWritableAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e948a4 (   0x120) getHIDDisplayIsPresetWritableSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e949c4 (    0x50) invocation function for block in getHIDDisplayIsPresetWritableSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94a14 (    0xb0) -[SLDisplayPresetDevice isPresetValidAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94ac4 (   0x120) getHIDDisplayIsPresetValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94be4 (    0x50) invocation function for block in getHIDDisplayIsPresetValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94c34 (   0x198) -[SLDisplayPresetDevice setActivePresetIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94dcc (   0x120) getHIDDisplaySetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94eec (    0x50) invocation function for block in getHIDDisplaySetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94f3c (    0xb0) -[SLDisplayPresetDevice tickleTemporaryPowerAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e94fec (   0x16c) -[SLDisplayPresetDevice activePresetIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95158 (   0x120) getHIDDisplayGetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95278 (    0x50) invocation function for block in getHIDDisplayGetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e952c8 (   0x16c) -[SLDisplayPresetDevice factoryDefaultPresetIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95434 (   0x120) getHIDDisplayGetFactoryDefaultPresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95554 (    0x50) invocation function for block in getHIDDisplayGetFactoryDefaultPresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e955a4 (    0x9c) -[SLDisplayPresetDevice presetCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95640 (   0x120) getHIDDisplayGetPresetCountSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95760 (    0x50) invocation function for block in getHIDDisplayGetPresetCountSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e957b0 (    0x3c) -[SLDisplayPresetDevice copyCFContainerId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e957ec (     0x8) -[SLDisplayPresetDevice containerId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e957f4 (    0x3c) -[SLDisplayPresetDevice description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95830 (    0xcc) -[SLDisplayPresetDevice dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e958fc (   0x434) -[SLDisplayPresetDevice initWithService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95d30 (   0x120) getHIDDisplayCreatePresetInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95e50 (   0x120) getHIDDisplayCreateDeviceManagementInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e95f70 (   0x120) getHIDDisplayCreateUserAdjustmentInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96090 (   0x120) getHIDDisplayGetContainerIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e961b0 (    0x50) invocation function for block in getHIDDisplayGetContainerIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96200 (    0x50) invocation function for block in getHIDDisplayCreateUserAdjustmentInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96250 (    0x50) invocation function for block in getHIDDisplayCreateDeviceManagementInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e962a0 (    0x50) invocation function for block in getHIDDisplayCreatePresetInterfaceWithServiceSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e962f0 (   0x1b8) +[SLDisplayPresetDevice userAdjustmentLuminanceCorrectionFactorForWhitepoint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e964a8 (   0x1b8) +[SLDisplayPresetDevice luminanceCorrectionFactorForWhitepoint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96660 (    0x44) +[SLDisplayPresetDevice presetDeviceWithService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e966a4 (    0xa0) -[SLDisplayPresetDeviceManager dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96744 (    0xac) -[SLDisplayPresetDeviceManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e967f0 (     0xc) +[SLDisplayPresetDeviceManager setDebugDeferArrivalSeconds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e967fc (     0xc) +[SLDisplayPresetDeviceManager debugDeferArrivalSeconds] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96808 (    0x7c) +[SLDisplayPresetDeviceManager instance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96884 (     0x4) Transition::~Transition() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96888 (     0x4) Transition::~Transition() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9688c (   0x564) Transition::Transition(CGSTransitionFlags, CGXConnection*, CGXSession*, CGXWindow const*, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96df0 (    0x5c) transition_backdrop_updater_predicate(CGXWindow const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96e4c (    0x60) transition_window_updater_predicate(CGXWindow const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96eac (    0x50) transition_normal_updater_predicate(CGXWindow const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96efc (    0xd0) Transition::~Transition() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e96fcc (    0x54) Transition::CopyUpdateRegion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e97020 (   0x594) Transition::PopulateCapture(TransitionSnapshotIndex) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e975b4 (   0x1f8) SLSGetHotKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e977ac (     0x8) SLSSetHotKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e977b4 (   0x20c) SLSSetHotKeyWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e979c0 (     0x4) SLSSetHotKeyWithExclusion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e979c4 (   0x1b8) SLSIsHotKeyEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e97b7c (   0x188) SLSSetHotKeyEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e97d04 (   0x188) SLSRemoveHotKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e97e8c (   0x1e8) SLSGetSymbolicHotKeyValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98074 (   0x1f0) SLSSetSymbolicHotKeyValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98264 (   0x170) SLSIsSymbolicHotKeyEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e983d4 (   0x420) SLSGetSymbolicHotKeyValuesAndStates [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e987f4 (   0x194) SLSSetSymbolicHotKeyEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98988 (     0x8) SLSSetSymbolicHotKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98990 (   0x1a0) SLSSetSymbolicHotKeyWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98b30 (     0x4) SLSSetSymbolicHotKeyWithExclusion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98b34 (   0x188) SLSSetGlobalHotKeyOperatingMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98cbc (   0x1a0) SLSGetGlobalHotKeyOperatingMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98e5c (   0x188) SLSSetHotKeyType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e98fe4 (   0x1c4) SLSGetHotKeyType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e991a8 (   0x13c) SLSGetHotButton [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e992e4 (   0x23c) SLSGetHotKeyRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99520 (    0xf8) SLSSetHotButtonWithExclusion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99618 (   0x238) SLSSetHotKeyRepresentationWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99850 (     0x4) SLSSetHotKeyRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99854 (   0x190) SLSGetSymbolicHotKeyButtonValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e999e4 (   0x27c) SLSGetSymbolicHotKeyRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99c60 (   0x148) SLSSetSymbolicHotKeyButtonValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e99da8 (   0x274) SLSSetSymbolicHotKeyRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a01c (    0xb4) SLSGetHotModifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a0d0 (    0x78) SLSSetHotModifierWithExclusion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a148 (    0x78) SLSSetHotModifierWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a1c0 (   0x11c) SLSGetSymbolicHotModifierValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a2dc (    0xdc) SLSSetSymbolicHotModifierValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a3b8 (   0x19c) SLSSetSymbolicHotKeyEnabledForConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a554 (   0x1b4) SLSIsSymbolicHotKeyEnabledForConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9a708 (   0x350) SLSGetSymbolicHotKeyRepresentationList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9aa58 (    0xec) SLSNormalizedHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ab44 (    0xac) DrawableQueue::TeardownDrawables() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9abf0 (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ac34 (     0x4) std::__1::__shared_ptr_emplace<Drawable, std::__1::allocator<Drawable>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ac38 (    0x44) std::__1::__shared_ptr_emplace<Drawable, std::__1::allocator<Drawable>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ac7c (    0x44) std::__1::__shared_ptr_emplace<Drawable, std::__1::allocator<Drawable>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9acc0 (    0x20) std::__1::__shared_ptr_emplace<Drawable, std::__1::allocator<Drawable>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ace0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<Drawable>>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ad94 (   0x604) DrawableQueue::Reconfigure(unsigned int, unsigned int, WSPixelFormat, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9b398 (   0x4b0) HMD::HMD(std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9b848 (   0x3ac) HMD::ConfigureCapabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9bbf4 (    0xf8) HMD::DisplayNotificationProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9bcec (    0xbc) lookup_hmd_for_id(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9bda8 (    0x68) get_system_hmd_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9be10 (   0x250) HMD::PostNotification(SLSHMDNotification, CGXSession*, SystemHMDState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9c060 (    0xe4) hmd_post_notification_to_session(unsigned int, int, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9c144 (    0x18) invocation function for block in HMD::PostNotification(SLSHMDNotification, CGXSession*, SystemHMDState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9c15c (    0xe8) SystemHMDState::SystemHMDState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9c244 (   0x674) SystemHMDState::LoadHMDs() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9c8b8 (   0x2e8) system_hmd_state_did_reconfigure_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9cba0 (   0x218) gather_hmds(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9cdb8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ce6c (    0xbc) post_notification_for_id(SLSHMDNotification, unsigned int, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9cf28 (   0x134) system_hmd_state_will_reconfigure_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d05c (    0xac) std::__1::pair<std::__1::__tree_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, bool> std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int, unsigned int>(unsigned int const&, unsigned int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d108 (   0x158) system_hmd_removed_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d260 (   0x100) HMD::Relinquish(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d360 (   0x170) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d4d0 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d52c (    0x10) invocation function for block in HMD::Relinquish(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d53c (   0x498) HMD::hmd_relinquish_common(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9d9d4 (    0xfc) invocation function for block in HMD::hmd_relinquish_common(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9dad0 (   0x198) present_scheduled_drawables(std::__1::weak_ptr<HMD>, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9dc68 (    0x34) HMD::DestroyCoverWindow() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9dc9c (   0x1ac) HMD::StopAsyncWaitThread(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9de48 (   0x3a0) HMD::StopHMDServerThread(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e1e8 (    0x50) invocation function for block in HMD::hmd_deinitialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e238 (    0x44) invocation function for block in HMD::hmd_deinitialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e27c (   0x240) HMD::StopThread(char const*, HMD::HMDThreadState&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e4bc (   0x194) HMD::WaitForThreadToStop(char const*, HMD::HMDThreadState&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e650 (    0xec) HMD::WakeUpAsyncWait() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9e73c (   0x3e4) present_drawable_on_hmd(std::__1::shared_ptr<HMD>, std::__1::shared_ptr<Drawable>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9eb20 (    0x84) get_set_enabled_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9eba4 (    0x4c) HMD::ExitPresentCriticalSection() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9ebf0 (   0x2d0) invocation function for block in present_drawable_on_hmd(std::__1::shared_ptr<HMD>, std::__1::shared_ptr<Drawable>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9eec0 (   0x2b0) system_hmd_added_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f170 (    0x94) HMD* std::__1::construct_at[abi:v160006]<HMD, std::__1::shared_ptr<WS::Displays::Display>&, HMD*>(HMD*, std::__1::shared_ptr<WS::Displays::Display>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f204 (   0x3b8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>>>::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f5bc (     0x4) std::__1::__shared_ptr_emplace<HMD, std::__1::allocator<HMD>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f5c0 (   0x3f4) std::__1::__shared_ptr_emplace<HMD, std::__1::allocator<HMD>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f9b4 (     0xc) invocation function for block in HMD::~HMD() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9f9c0 (    0x44) std::__1::__shared_ptr_emplace<HMD, std::__1::allocator<HMD>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fa04 (    0x20) std::__1::__shared_ptr_emplace<HMD, std::__1::allocator<HMD>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fa24 (    0x50) iterator_for_id(unsigned int, std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::shared_ptr<HMD>>, void*>*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fa74 (   0x244) HMD::IOSurfaceIsReadyCallback(void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fcb8 (     0x4) std::__1::__shared_ptr_emplace<DrawableQueue, std::__1::allocator<DrawableQueue>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fcbc (    0x68) std::__1::__shared_ptr_emplace<DrawableQueue, std::__1::allocator<DrawableQueue>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fd24 (    0x44) std::__1::__shared_ptr_emplace<DrawableQueue, std::__1::allocator<DrawableQueue>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fd68 (    0x20) std::__1::__shared_ptr_emplace<DrawableQueue, std::__1::allocator<DrawableQueue>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fd88 (   0x170) HMD::PushOutMessage() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185e9fef8 (   0x19c) HMD::PostImmediateReplyMessage(mach_msg_header_t*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0094 (    0x6c) HMD::PostPostponedReplyMessage(unsigned int, unsigned int, int*, HMD::HMDAsyncWaitState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0100 (   0x124) invocation function for block in HMD::MessageHandler(unsigned int, unsigned int, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0224 (    0xa4) invocation function for block in HMD::MessageHandler(unsigned int, unsigned int, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea02c8 (    0x28) invocation function for block in HMD::MessageHandler(unsigned int, unsigned int, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea02f0 (    0x58) HMD::HMDMachResponse::~HMDMachResponse() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0348 (    0x48) HMD::HMDMachResponse::~HMDMachResponse() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0390 (    0xf0) set_realtime_thread_priority(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0480 (   0x144) HMD::SpawnThread(char const*, HMD::HMDThreadState&, void* (*)(void*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea05c4 (   0x860) _hmdServerThread(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea0e24 (   0xc64) _asyncWaitThread(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1a88 (    0x28) HMD::HMDAsyncWaitState::~HMDAsyncWaitState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1ab0 (    0x7c) HMD::HMDAsyncWaitState::~HMDAsyncWaitState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1b2c (     0x4) HMD::HMDAsyncWaitState::~HMDAsyncWaitState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1b30 (    0x68) HMD::SetIsEnabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1b98 (    0xe4) HMD::PresentQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1c7c (    0x10) invocation function for block in HMD::PresentQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1c8c (    0x10) invocation function for block in HMD::Acquire(unsigned int, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1c9c (    0xe8) invocation function for block in get_hmd_root_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1d84 (   0x1f4) HMD::GetPlistRepresentation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1f78 (    0x54) hmd_create_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea1fcc (    0x58) hmd_connect_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2024 (   0x104) hmd_disconnect_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2128 (   0x10c) hmd_destroy_session(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2234 (    0x10) hmd_notification_port_death(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2244 (   0x1d8) WSHMDSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea241c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185ea242c (   0x96c) acquire_common(unsigned int, std::__1::shared_ptr<HMD>, void const*, unsigned int, unsigned int*, CGXSession*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2d98 (     0xc) hmd_connection_death_handler(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2da4 (   0x21c) hmd_release_common(CGXConnection*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea2fc0 (   0x180) hmd_reconfigure_queue_with_input_data(std::__1::shared_ptr<HMD>, void const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3140 (    0x1c) invocation function for block in hmd_reconfigure_queue_with_input_data(std::__1::shared_ptr<HMD>, void const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea315c (    0x10) __destroy_helper_block_8_32c30_ZTSNSt3__110shared_ptrI3HMDEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea316c (    0x1c) __copy_helper_block_8_32c30_ZTSNSt3__110shared_ptrI3HMDEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3188 (    0xe8) _CGXHMDCopyByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3270 (   0x134) _CGXHMDCopyList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea33a4 (   0x164) _CGXHMDGetSurfaceForIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3508 (    0xdc) lookup_hmd_for_pid(int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea35e4 (   0x1e8) schedule_present_on_hmd(std::__1::shared_ptr<HMD>, std::__1::shared_ptr<Drawable>, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea37cc (    0xb4) invocation function for block in schedule_present_on_hmd(std::__1::shared_ptr<HMD>, std::__1::shared_ptr<Drawable>, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3880 (   0x174) _CGXHMDConfigureQueue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea39f4 (   0x12c) _CGXHMDQueryStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3b20 (   0x198) dfr_release_common(int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3cb8 (   0x1cc) dfr_notification_port_death(unsigned int, CGXPortNotification, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea3e84 (   0x7f8) WSHMDDumpInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea467c (    0xe4) __CPSNoticeConnectionDeath_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4760 (    0x2c) __get_primary_connection_queue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea478c (   0x1f4) __CPSNoticeNewConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4980 (    0x8c) set_primary_conn_internal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4a0c (   0x1bc) SLSGetProcessValidity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4bc8 (   0x110) SLPSSetMainApplicationConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4cd8 (   0x1f0) __SLPSSetMainApplicationConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea4ec8 (   0x2dc) _SLPSRegisterWithServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea51a4 (   0x104) copy_primary_conn_send_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea52a8 (    0xa8) __copy_primary_conn_send_port_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5350 (   0x2b4) _SLPSCreateStubApplicationWithConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5604 (   0x1f8) SLPSRegisterWithServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea57fc (   0x104) primary_connection_exists [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5900 (    0x20) __primary_connection_exists_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5920 (    0x9c) _SLPSGetCurrentProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea59bc (     0x4) SLPSGetCurrentProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea59c0 (    0xe4) SLPSGetNextProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5aa4 (    0x44) _SLPSEqualProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5ae8 (     0x4) SLPSEqualProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5aec (    0x68) _SLPSGetFrontProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5b54 (     0x4) SLPSGetFrontProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5b58 (   0x2b4) _SLPSSetFrontProcessWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea5e0c (   0x254) SLSSetFrontProcessWithInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6060 (   0x1a4) __SLSSetFrontProcessWithInfo_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6204 (   0x1f4) SLSDonateActivationToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea63f8 (   0x1a8) __SLSDonateActivationToken_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea65a0 (     0x4) SLPSSetFrontProcessWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea65a4 (     0xc) SLPSSetFrontProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea65b0 (   0x1a0) SLPSSetDefaultBootstrapPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6750 (    0x9c) SLPSSetNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea67ec (   0x10c) SLPSModifyConnectionNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea68f8 (    0x8c) SLPSEnableForegroundOperation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6984 (    0xdc) SLPSGetProcessInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6a60 (   0x484) SLPSPBGetProcessInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6ee4 (    0xe4) ExtractCFStringToOSType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea6fc8 (    0xf0) ExtractCFStringToMemory [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea70b8 (    0xe8) SLPSProcessInformationCopyDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea71a0 (    0x68) SLPSFindProcessByDisplayName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7208 (    0xdc) FindProcessByInfoLS [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea72e4 (    0xa4) SLPSFindProcessByPID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7388 (   0x180) SLPSSetProcessName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7508 (    0x80) SLEventPostEventToPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7588 (    0xbc) SLPSPostEventRecordTo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7644 (   0x1ec) encodeEventRecordForPostTo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7830 (    0x80) SLSEventPostEventToPSN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea78b0 (   0x148) SLPSStealKeyFocus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea79f8 (   0x1a4) SLPSStealKeyFocusOnConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7b9c (   0x2b8) SLPSStealKeyFocusReturningID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7e54 (   0x170) SLPSReleaseKeyFocus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea7fc4 (   0x1a4) SLPSReleaseKeyFocusOnConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8168 (   0x224) SLPSReleaseKeyFocusWithID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea838c (   0x1d0) SLPSGetKeyFocusProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea855c (   0x164) SLPSGetTypingFocusProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea86c0 (    0x58) SLPSDequeueServiceReqOnConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8718 (   0x19c) SLPSDequeueServiceReqOnConnectionPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea88b4 (    0x5c) SLPSDequeueServiceReq [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8910 (    0xa8) SLPSCompleteServiceReqOnConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea89b8 (   0x104) SLPSCompleteServiceReq [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8abc (    0x70) SLPSGetWindowOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8b2c (    0x70) SLPSGetWindowPresenter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8b9c (   0x134) SLPSPostHideReq [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8cd0 (   0x134) SLPSPostHideMostReq [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8e04 (   0x134) SLPSPostShowReq [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea8f38 (   0x1f4) SLPSRegisterForKeyOnConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea912c (    0x5c) SLPSRegisterForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9188 (   0x19c) SLPSOverrideKeyRegistration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9324 (   0x1ac) SLPSUnoverrideKeyRegistration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea94d0 (   0x1f4) SLPSGetKeyBinding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea96c4 (    0xf4) SLPSExitSpecialKeyMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea97b8 (   0x1b8) SLPSGetNextToFrontProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9970 (    0xb8) SLPSBringNextToFront [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9a28 (     0x8) SLPSMarkChildWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9a30 (    0x54) SLPSSetProcessToBringForwardAtNextApplicationExit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9a84 (    0x34) WSScheduleCallbackOnCurrentSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9ab8 (   0x210) reschedule_callback_on_session [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9cc8 (    0x1c) __reschedule_callback_on_session_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9ce4 (    0x70) timers_will_destroy_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9d54 (    0xb8) remove_all_timers_matching_session [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9e0c (    0x5c) WSScheduleCallbackOnSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9e68 (    0x20) WSScheduleCallbackOnConsoleSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9e88 (    0x5c) WSRescheduleCallbackOnSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9ee4 (    0x14) WSDescheduleCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9ef8 (    0xe8) deschedule_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ea9fe0 (    0xd0) WSRescheduleNonCoalescedCallbackOnCurrentSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa0b0 (    0x9c) schedule_critical_timer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa14c (    0x88) WSDescheduleNonCoalescedCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa1d4 (    0x78) WSScheduleBlockCallbackOnCurrentSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa24c (    0x40) timer_perform_block_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa28c (    0x38) WSScheduleIdleCallbackOnCurrentSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa2c4 (    0x60) WSScheduleIdleCallbackOnSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa324 (    0x60) WSRescheduleIdleCallbackOnSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa384 (    0x14) WSDescheduleIdleCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa398 (   0x2ec) run_timer_pass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa684 (    0x28) non_coalesced_timer_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa6ac (    0xd0) WSDumpTimerInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa77c (   0x15c) create_durations_stats_info_string [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaa8d8 (   0x438) timer_queue_dump_with_name [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaad10 (    0x98) timer_callout_is_less_than [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaada8 (    0x44) SLSTransactionGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaadec (    0x28) __SLSTransactionGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaae14 (     0x8) copy_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaae1c (    0x94) copy_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaaeb0 (    0x70) _SLSTransactionFinalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaaf20 (   0x118) SLSTransactionCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab038 (    0x68) _SLSTransactionPopWriteStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab0a0 (   0x160) _SLSTransactionEncode_resize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab200 (    0x28) __SLSTransactionInlineBufferSize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab228 (    0xc4) invocation function for block in _SLSTransactionWriteStreamKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab2ec (    0x50) tls_free_stream(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab33c (   0x150) _SLSTransactionEncode_packed64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab48c (    0x30) _SLSTransactionDecode_packed64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab4bc (    0x78) _SLSTransactionDecode_packed64_tag(_SLSTransactionReadStream*, unsigned char, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab534 (   0x308) _SLSTransactionEncode_CFString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab83c (    0xc4) _SLSTransactionDecode_CFString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eab900 (   0x180) SLSTransactionOrderWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaba80 (    0x74) __SLSTransactionOrderWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eabaf4 (    0x74) _SLSTransactionCommitAction(_SLSTransaction*, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eabb68 (   0x180) SLSTransactionOrderWindowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eabce8 (    0x74) __SLSTransactionOrderWindowGroup_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eabd5c (    0xb4) SLSTransactionSetWindowAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eabe10 (   0x21c) SLSTransactionSetWindowAlphaAnimated [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac02c (    0x74) __SLSTransactionSetWindowAlpha_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac0a0 (    0x74) __SLSTransactionSetWindowAlphaAnimated_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac114 (   0x130) SLSTransactionSetWindowBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac244 (   0x124) SLSTransactionSetWindowLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac368 (    0x70) __SLSTransactionSetWindowLevel_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac3d8 (   0x158) SLSTransactionSetWindowOpaqueShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac530 (   0x420) SLSTransactionSetWindowProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac950 (    0x74) __SLSTransactionSetWindowProperty_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eac9c4 (   0x1e0) SLSTransactionSetWindowResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eacba4 (    0x78) __SLSTransactionSetWindowResolution_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eacc1c (   0x1c0) SLSTransactionSetWindowShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eacddc (    0x9c) __SLSTransactionSetWindowShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eace78 (   0x124) SLSTransactionSetWindowSubLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eacf9c (    0x74) __SLSTransactionSetWindowSubLevel_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead010 (   0x114) SLSTransactionResetWindowSubLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead124 (    0x74) __SLSTransactionResetWindowSubLevel_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead198 (    0xdc) SLSTransactionSetWindowReleasesBackingOnOrderOut [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead274 (   0x19c) SLSTransactionSetWindowSystemAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead410 (    0x74) __SLSTransactionSetWindowSystemAlpha_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead484 (   0x468) SLSTransactionSetWindowTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead8ec (    0x74) __SLSTransactionSetWindowTransform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ead960 (   0x964) SLSTransactionSetWindowTransform3D [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae2c4 (    0x74) __SLSTransactionSetWindowTransform3D_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae338 (   0x158) SLSTransactionSetWindowWarp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae490 (    0xa8) SLSTransactionSetWindowSystemLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae538 (    0x98) SLSTransactionClearWindowSystemLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae5d0 (   0x158) SLSTransactionSetWindowGlobalClipShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae728 (     0xc) SLSTransactionSetWindowLockedBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eae734 (   0x350) SLSTransactionSetWindowLockedBoundsAtPlace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaea84 (    0x74) __SLSTransactionSetWindowLockedBoundsAtPlace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaeaf8 (     0xc) SLSTransactionClearWindowLockedBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaeb04 (   0x124) SLSTransactionClearWindowLockedBoundsAtPlace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaec28 (    0x74) __SLSTransactionClearWindowLockedBoundsAtPlace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaec9c (   0x180) SLSTransactionSafeOrderWindowGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaee1c (    0x74) __SLSTransactionSafeOrderWindowGroup_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaee90 (   0x228) SLSTransactionMoveWindowWithGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf0b8 (    0x94) __SLSTransactionMoveWindowWithGroup_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf14c (    0x98) SLSTransactionResetWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf1e4 (   0x130) SLSTransactionSetMenuBarSystemOverrideAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf314 (    0x74) SLSTransactionClearMenuBarSystemOverrideAlphas [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf388 (   0x37c) SLSTransactionSetMenuBarBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaf704 (   0x3e4) SLSTransactionSetSpaceTransform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eafae8 (   0x158) SLSTransactionSetSpaceShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eafc40 (    0xa8) SLSTransactionSetSpaceAbsoluteLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eafce8 (    0xa8) SLSTransactionSetSpaceOrderingWeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eafd90 (   0x130) SLSTransactionSetSpaceAlpha [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eafec0 (    0xa8) SLSTransactionSpaceRebuildMenuBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eaff68 (    0xa8) SLSTransactionAddWindowToSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0010 (    0xa8) SLSTransactionRemoveWindowFromSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb00b8 (    0xa8) SLSTransactionRemoveWindowFromSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0160 (    0xc0) SLSTransactionAddWindowToSpaceAndRemoveFromSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0220 (    0xa8) SLSTransactionShowSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb02c8 (     0xc) __SLSTransactionShowSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb02d4 (    0xa8) SLSTransactionHideSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb037c (     0xc) __SLSTransactionHideSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0388 (    0xf4) _SLSTransactionEncode_CFArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb047c (    0xa0) SLSTransactionWillSwitchSpaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb051c (   0x120) __SLSTransactionWillSwitchSpaces_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb063c (    0x98) SLSTransactionResetSpaceMenuBar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb06d4 (    0xa8) SLSTransactionDestroySpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb077c (     0xc) __SLSTransactionDestroySpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0788 (    0xb0) SLSTransactionMoveWindowsToManagedSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0838 (   0x120) __SLSTransactionMoveWindowsToManagedSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0958 (    0xc0) SLSTransactionSpaceTileMoveToSpaceAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0a18 (    0xd0) _SLSTransactionEncode_ShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0ae8 (   0x2c8) ___SLSTransactionEncode_ShadowProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0db0 (   0x224) _SLSTransactionDecode_ShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb0fd4 (    0xb8) SLSTransactionSetManagedDisplayCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb108c (   0x200) _SLSTransactionEncode_UUIDString(_SLSTransactionWriteStream*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb128c (     0xc) __SLSTransactionSetManagedDisplayCurrentSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1298 (    0xf8) SLSTransactionSetManagedDisplayIsAnimating [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1390 (     0xc) __SLSTransactionSetManagedDisplayIsAnimating_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb139c (    0xc0) SLSTransactionSetEventCapture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb145c (    0xd0) SLSTransactionDeferWindowMoveEvents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb152c (   0x148) SLSTransactionUpdateRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1674 (   0x124) SLSTransactionOverrideAppSleepNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1798 (     0xc) SLSTransactionPostNotificationToConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb17a4 (   0x1d4) _SLSTransactionPostNotification(_SLSTransaction*, unsigned int, CGSNotificationType, void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1978 (    0x14) SLSTransactionPostBroadcastNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb198c (    0x98) SLSTransactionSetClientAdvisory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1a24 (    0xe8) SLSTransactionBindSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1b0c (   0x110) SLSTransactionOrderSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1c1c (   0x35c) SLSTransactionSetSurfaceBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1f78 (    0x78) __SLSTransactionSetSurfaceBounds_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb1ff0 (    0xf4) SLSTransactionSetSurfaceOpacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb20e4 (   0x1b0) SLSTransactionSetSurfaceResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2294 (    0x78) __SLSTransactionSetSurfaceResolution_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb230c (    0xdc) SLSTransactionSetChameleonUpdatesEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb23e8 (   0x130) SLSTransactionSetBackdropChameleonContribution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2518 (   0x180) SLSTransactionSystemStatusBarRegisterSortedWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2698 (    0xe8) SLSTransactionSystemStatusBarRegisterReplicantWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2780 (    0x98) SLSTransactionSystemStatusBarUnregisterWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2818 (   0x2d0) SLSTransactionSystemStatusBarSetSelectedContentFrame [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2ae8 (   0x130) SLSTransactionSystemStatusBarSetDropPriority [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2c18 (    0xa8) SLSTransactionSystemStatusBarSetLayoutIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2cc0 (    0xa0) SLSTransactionSystemStatusBarResetLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2d60 (   0x120) __SLSTransactionSystemStatusBarResetLayout_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2e80 (   0x130) SLSTransactionSetWindowCornerRadius [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb2fb0 (    0x98) SLSTransactionClearWindowCornerRadius [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3048 (   0x130) SLSTransactionSetWindowSystemCornerRadius [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3178 (    0x98) SLSTransactionClearWindowSystemCornerRadius [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3210 (   0x16c) SLSTransactionSetWindowBoundsPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb337c (    0xa8) SLSTransactionSetWindowOverlayContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3424 (    0xa8) SLSTransactionSetWindowDesiredFilteringLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb34cc (    0xdc) SLSTransactionSetWindowCreatesOverlayCompositingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb35a8 (    0xa8) SLSTransactionSetWindowSystemShadowProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3650 (     0x4) SLSTransactionSetSpaceReveal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3654 (   0x130) SLSTransactionSetSafeApertureSpaceReveal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3784 (   0x114) SLSTransactionSetSafeApertureOverride [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3898 (   0x290) SLSTransactionSetWindowOriginRelativeToWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3b28 (    0xc8) __SLSTransactionSetWindowOriginRelativeToWindow_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3bf0 (   0x238) SLSTransactionMoveWindowOnMatchingDisplayChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3e28 (    0x94) __SLSTransactionMoveWindowOnMatchingDisplayChangedSeed_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb3ebc (   0x158) SLSTransactionSetWindowEventShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4014 (    0xdc) SLSTransactionSetWindowPrefersCurrentSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb40f0 (    0xa8) SLSTransactionSetWindowShadowProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4198 (    0xdc) SLSTransactionSetWindowActiveShadowLegacy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4274 (   0x454) SLSTransactionSetWindowCornerMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb46c8 (   0x1dc) SLSTransactionSetWindowDragRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb48a4 (    0xa4) __SLSTransactionSetWindowDragRegion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4948 (   0x1dc) SLSTransactionSetWindowActivationRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4b24 (    0xa4) __SLSTransactionSetWindowActivationRegion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4bc8 (   0x1dc) SLSTransactionSetWindowButtonRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4da4 (    0xa4) __SLSTransactionSetWindowButtonRegion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb4e48 (   0x1dc) SLSTransactionSetWindowSpecialCommandRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5024 (    0xa4) __SLSTransactionSetWindowSpecialCommandRegion_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb50c8 (   0x158) SLSTransactionSetWindowCursorRestrictionShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5220 (    0xdc) SLSTransactionSetWindowHasKeyAppearance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb52fc (    0xdc) SLSTransactionSetWindowHasMainAppearance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb53d8 (   0x32c) SLSTransactionSetWindowChameleonOverrideColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5704 (    0x98) SLSTransactionInvalidateWindowShadow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb579c (   0x24c) SLSTransactionSetSurfaceLayerBackingOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb59e8 (   0x124) SLSTransactionAddWindowToWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5b0c (    0x70) __SLSTransactionAddWindowToWindowMovementGroup_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5b7c (    0xa8) SLSTransactionRemoveWindowFromWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5c24 (   0x114) SLSTransactionClearWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5d38 (    0x6c) __SLSTransactionClearWindowMovementGroup_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5da4 (    0x64) SLSTransactionSetWindowMovementGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5e08 (   0x100) SLSTransactionAddWindowToWindowOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5f08 (    0x98) SLSTransactionRemoveWindowFromWindowOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb5fa0 (    0x98) SLSTransactionClearWindowOrderingGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb6038 (    0x74) SLSTransactionReorderWindows [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb60ac (   0x110) SLSTransactionOrderWindowGroupFrontConditionally [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb61bc (    0xe0) SLSTransactionSetSurfaceColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb629c (   0x124) SLSTransactionRemoveSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb63c0 (    0x70) __SLSTransactionRemoveSurface_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb6430 (   0x2d0) SLSTransactionSpaceFinishedResizeForRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb6700 (   0x140) SLSTransactionSetMenuBarCompanionWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb6840 (   0x540) SLSTransactionSetMenuBars [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb6d80 (   0x804) __SLSTransactionSetMenuBars_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7584 (   0x2d0) SLSTransactionSystemStatusBarSetItemPrivacyIndicator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7854 (   0x158) SLSTransactionSetWindowResizeEventShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb79ac (    0xa0) SLSTransactionSetGlobalVisibleWindowList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7a4c (   0x120) __SLSTransactionSetGlobalVisibleWindowList_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7b6c (   0x34c) SLSTransactionMoveWindowForServerSideDrag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7eb8 (    0x74) SLSTransactionEnsureSpaceSwitchToActiveProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb7f2c (   0x118) SLSTransactionSetWindowTags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8044 (    0xdc) SLSTransactionSetSystemSuppressOnAllWorkspaces [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8120 (    0xdc) SLSTransactionSetWindowShouldIgnoreHDR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb81fc (    0xb0) SLSTransactionBatchReassociateWindowsToSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb82ac (   0x120) __SLSTransactionBatchReassociateWindowsToSpace_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb83cc (    0xdc) SLSTransactionSetWindowIsActiveOffscreen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb84a8 (    0xa8) SLSTransactionAddWindowToCaptureGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8550 (    0xa8) SLSTransactionRemoveWindowFromCaptureGroup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb85f8 (   0x114) SLSTransactionSetMenuBarOverrideMaximumReveal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb870c (   0x1b4) SLSTransactionDragWindowRelativeToMouse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb88c0 (    0xdc) SLSTransactionSetPluginRenderingIsUnrestrictedForWindow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb899c (    0xd0) SLSTransactionSetDesktopEffectsCalculationIsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8a6c (   0x228) _SLSTransactionPushWriteStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8c94 (   0x118) _SLSTransactionResetWriteStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8dac (   0x17c) SLSTransactionCommit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb8f28 (   0x194) SLSTransactionPostCommit(_SLSTransaction*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb90bc (     0xc) __SLSTransactionPerformCommitAction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb90c8 (   0x158) SLSTransactionCommitUsingMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9220 (   0x1f4) sls_transaction_commit_ca(_SLSTransaction*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9414 (    0x88) SLSTransactionGetFencingContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb949c (   0x19c) SLSTransactionWait [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9638 (     0x8) SLSTransactionGetTransactionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9640 (    0x88) CGSEventScoreboardRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb96c8 (    0xfc) CGSEventScoreboardCreateFromShmemEntries [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb97c4 (   0x540) layer_tile_traverse(CGTileState*, WSCompositeDestination*, WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9d04 (   0x2f0) layer_tile_walk(CGTile*, WSCompositeSourceLayer**, WSCompositeSourceLayer**, WSCompositeDestination*, bool (*)(CGLayerSourceInfo*, unsigned long, CGLayerDestinationInfo*), long, long, long, long, long, CGBlitWorkQueueEntry**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eb9ff4 (   0x49c) layer_blit_entry(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eba490 (    0xe0) layer_format(float, float, unsigned int, BitmapType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eba570 (    0x40) (null) [FUNC, FunctionStarts] 
                0x0000000185eba5b0 (    0x28) layer_blit_entry_block(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eba5d8 (   0x1d8) color_conversion_create_lut(CGDisplayColorCurve const*, CGColorConversionDirection) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eba7b0 (   0x214) layer_tile_cut(CGTile**, long, long, long, long, WSCompositeSourceLayer*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eba9c4 (    0x60) WSCompositeSourceLayerGetConstantColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebaa24 (    0x40) get_user_workspace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebaa64 (   0x19c) CGXSetWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebac00 (    0x4c) workspaceUnalias(CGSWorkspaceID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebac4c (   0x278) selectWorkspaceCallback2(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebaec4 (    0xb4) selectWorkspaceCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebaf78 (    0x58) copy_managed_spaces_as_spaces() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebafd0 (    0x7c) create_workspace_list_for_compat_id(CGSWorkspaceID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb04c (    0x84) invocation function for block in update_workspace_ordering() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb0d0 (     0x8) invocation function for block in update_workspace_ordering() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb0d8 (     0x8) invocation function for block in copy_visible_managed_spaces_as_spaces() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb0e0 (    0x14) invocation function for block in copy_managed_spaces_as_spaces() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb0f4 (    0xc8) CGXGetWindowWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb1bc (   0x164) window_get_compat_id(CGXWindow*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb320 (    0x30) invocation function for block in window_derive_compat_id(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb350 (   0x354) window_move_to_compat_id [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb6a4 (    0x8c) compat_id_allows_window(CGSWorkspaceID, CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb730 (    0x3c) window_is_simple_sticky(CGXWindow const*) (.20008) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb76c (    0x28) invocation function for block in window_create_workspace_list_for_compat_id(CGXWindow*, CGSWorkspaceID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb794 (    0x3c) invocation function for block in window_update_workspaces(CGXWindow*, CGSWorkspaceID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb7d0 (    0x3c) invocation function for block in window_update_workspaces(CGXWindow*, CGSWorkspaceID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb80c (    0x24) invocation function for block in get_default_user_workspace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb830 (    0x58) window_get_ordering_group(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb888 (    0xcc) window_group_enumerator_create(CGXWindow const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebb954 (   0x11c) window_group_enumerator_next_window(WSWindowGroupEnumerator*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebba70 (    0x44) window_group_enumerator_free(WSWindowGroupEnumerator*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbab4 (    0x28) workspaceDidDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbadc (    0x34) workspaceWillDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbb10 (    0x6c) workspaceWillCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbb7c (    0xe8) WSWindowSessionSetDebugIgnoreSFXOverlayContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbc64 (    0xb0) __WSWindowSessionSetDebugIgnoreSFXOverlayContext_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbd14 (    0x94) __WSWindowSessionSetDebugIgnoreSFXOverlayContext_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebbda8 (   0x3f0) CGXBackingStoreCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc198 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ebc1b0 (   0x30c) best_backing_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc4bc (    0xc0) backing_allocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc57c (   0x160) CGXFillBacking [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc6dc (   0x148) convert_color_and_depth_to_pixel_pattern [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc824 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ebc83c (   0x114) guarded_vm_allocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebc950 (    0xb4) CGXBackingStoreRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebca04 (   0x2a0) CGXBackingStoreReadPixel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebcca4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ebccbc (    0x58) wait_for_backing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebcd14 (    0x98) test_backing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebcdac (   0x444) CGXBackingStoreResize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd1f0 (   0x308) copy_backing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd4f8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185ebd50c (    0x38) guarded_vm_deallocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd544 (   0x1c4) CGXPrintBackingStoreToFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd708 (   0x180) WSBackingStoreCreateIOSurfacePort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd888 (    0xb8) CaptureSurfaceMetal::SetAnnotationData(unsigned int, int, char const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd940 (    0x58) CaptureSurfaceMetal::SetAnnotationData(unsigned int, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebd998 (    0xc8) CaptureSurfaceMetal::SetPurgeable(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebda60 (    0x1c) CaptureSurfaceMetal::IsPurgeable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebda7c (    0x10) CaptureSurfaceMetal::WorksWithCompositor(Compositor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebda8c (    0xa4) CaptureSurfaceMetal::PerformAcceleratorCleanup(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdb30 (    0x6c) CaptureSurfaceMetal::Height() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdb9c (    0x6c) CaptureSurfaceMetal::Width() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdc08 (     0x8) CaptureSurfaceMetal::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdc10 (    0x14) CaptureSurfaceMetal::CompositorNativeBacking(WSCompositorType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdc24 (     0x8) CaptureSurfaceMetal::NativeBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdc2c (   0x18c) CaptureSurfaceMetal::Populate(CGXWindowSubArray, CGSRegionObject*, CGSRegionObject**, CGXRedrawOption, WSWindowTagBitMask, WSWindowTagBitMask, bool, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebddb8 (   0x184) CaptureSurfaceMetal::Populate(CGXWindow*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebdf3c (    0xdc) CaptureSurfaceMetal::Populate(WSCompositeSourceLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe018 (    0x3c) CaptureSurfaceMetal::PrepareForPopulation(CGRect, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe054 (   0x24c) CaptureSurfaceMetal::CreateMetalBacking(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe2a0 (    0x28) CaptureSurfaceMetal::~CaptureSurfaceMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe2c8 (    0x98) CaptureSurfaceMetal::~CaptureSurfaceMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe360 (     0x4) CaptureSurfaceMetal::~CaptureSurfaceMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe364 (   0x204) update_scoreboard(SLSEventRecord*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe568 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185ebe578 (    0xb8) fixup_event_record(SLSEventRecord*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe630 (   0x174) fix_up_event_inplace(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe7a4 (    0x9c) CGXSetEventTarget [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe840 (    0x4c) CGXCurrentEventFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe88c (   0x118) set_event_window_height(SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebe9a4 (    0xe8) CGXSetEventWindowHeightForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebea8c (    0x74) CGXRunOneEventPass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebeb00 (   0x178) CGXMarkUpSyntheticEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebec78 (    0xac) WSEventDumpGestureFocus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebed24 (    0x74) __WSEventDumpGestureFocus_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebed98 (   0x268) gesture_state_log_focus_event_records_with_block(CGXGestureState*, void (char const*, ...) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf000 (   0x1c0) WSAddGestureInfoToExternalDebuggingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf1c0 (    0x1c) __Block_byref_object_copy_.20195 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf1dc (    0x14) __Block_byref_object_dispose_.20196 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf1f0 (    0xe4) __WSAddGestureInfoToExternalDebuggingDictionary_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf2d4 (   0x1f8) CGXSessionEventUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf4cc (    0x1c) eventNotificationHandler(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf4e8 (   0x1d0) sAnnotatedContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf6b8 (   0x228) doPostBackgroundEvent(CGXConnection*, SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebf8e0 (   0x2b4) CGXTrackBackgroundEventShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfb94 (    0x40) invocation function for block in doPostBackgroundEvent(CGXConnection*, SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfbd4 (    0x4c) SLXServerOperationState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfc20 (    0x40) invocation function for block in doPostBackgroundEvent(CGXConnection*, SLSEventRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfc60 (    0x74) CGXGetCurrentCursorLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfcd4 (   0x1cc) leftBackgroundEventShape(CGXConnection*, CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfea0 (    0x40) invocation function for block in leftBackgroundEventShape(CGXConnection*, CGPoint, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebfee0 (    0x40) __CGXTrackBackgroundEventShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ebff20 (  0x1ef8) sPostContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec1e18 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x0000000185ec1e94 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000185ec1eb0 (   0x110) WSConsoleDisplayIDForSender [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec1fc0 (    0x7c) WSTargetMouseDownFocusWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec203c (    0xf0) CGXBroadcastEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec212c (    0x60) gesture_state_update_last_event_date(CGXGestureState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec218c (    0xa4) generateGestureEnd() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2230 (   0x13c) create_gesture_bookend_event(SLSEventRecord*, CGSHIDEventType, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec236c (   0x238) route_annotated_event(SLSEventRecord*, bool, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec25a4 (    0x40) invocation function for block in sPostContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec25e4 (    0x40) invocation function for block in sPostContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2624 (   0x230) CGXPostEventByConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2854 (   0x4dc) CGXCanConnectionSetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2d30 (    0x58) get_boolean_for_key(__CFDictionary const*, __CFString const*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2d88 (    0x40) __CGXPostEventByConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2dc8 (    0x40) invocation function for block in sPostContinuation(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2e08 (    0x10) event_capture_timeout(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec2e18 (   0x2c8) remove_event_capture(CGXEventCaptureState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec30e0 (    0x20) connection_death_callback(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3100 (    0x70) invocation function for block in gesture_state_log_focus_event_records(CGXGestureState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3170 (    0x40) __CGXBroadcastEvent_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec31b0 (    0x9c) CGXEventNotificationPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec324c (   0x168) CGXPostSystemHotKeyCombinationReleasedEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec33b4 (    0xbc) CGXPostSystemEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3470 (   0x10c) CGXPostSystemEventToConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec357c (    0x40) __CGXPostEventByConnectionOnly_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec35bc (    0x90) CGXCursorGetLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec364c (   0x18c) CGXSetSecureEventInput [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec37d8 (    0x6c) CGXSetServerOperationState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3844 (    0x40) CGXUpdateSecureEventInput [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3884 (    0x54) CGXUpdateSyntheticEventFlagsSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec38d8 (    0x40) CGXIsScreenWatcherPresent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3918 (    0x70) CGXScreenWatcherIsActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3988 (    0x6c) CGXUpdateBackgroundEventMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec39f4 (    0x2c) CGXScoreboard [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3a20 (    0x38) CGXSetScoreboardCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3a58 (    0x5c) windowTerminatedCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3ab4 (   0x2d4) CGXEventClearKeysAndButtons [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3d88 (    0x90) invocation function for block in generateMouseButtonsUp() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3e18 (    0xc8) eventSessionSwitched(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec3ee0 (   0x150) eventDidDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4030 (    0x84) WSFreeCapabilityFilterSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec40b4 (    0x30) eventWillDestroySessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec40e4 (   0x19c) eventDidCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4280 (   0x294) eventWillCreateSessionProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4514 (   0x16c) WSEventAuthenticationCapabilityMatchingFilters::addFilterAtIndex(ECEventAuthenticationCapabilityIndex, std::__1::shared_ptr<(anonymous namespace)::EventMatchingFilter>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4680 (    0x60) (anonymous namespace)::EventMatchingMouseButtonsFilter::matchesEvent(CGXConnection const*, SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec46e0 (     0x4) (anonymous namespace)::EventMatchingMouseButtonsFilter::~EventMatchingMouseButtonsFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec46e4 (     0x4) (anonymous namespace)::EventMatchingMouseButtonsFilter::~EventMatchingMouseButtonsFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec46e8 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingMouseButtonsFilter, std::__1::allocator<(anonymous namespace)::EventMatchingMouseButtonsFilter>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec46ec (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingMouseButtonsFilter, std::__1::allocator<(anonymous namespace)::EventMatchingMouseButtonsFilter>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec46f0 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingMouseButtonsFilter, std::__1::allocator<(anonymous namespace)::EventMatchingMouseButtonsFilter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4734 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingMouseButtonsFilter, std::__1::allocator<(anonymous namespace)::EventMatchingMouseButtonsFilter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4754 (    0x5c) (anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter::matchesEvent(CGXConnection const*, SLSEventRecord const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec47b0 (     0x4) (anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter::~EventMatchingKeyboardVirtualKeyCodeFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec47b4 (     0x4) (anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter::~EventMatchingKeyboardVirtualKeyCodeFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec47b8 (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter, std::__1::allocator<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec47bc (     0x4) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter, std::__1::allocator<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec47c0 (    0x44) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter, std::__1::allocator<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4804 (    0x20) std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter, std::__1::allocator<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4824 (    0xa8) CGXSenderCanSynthesizeEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec48cc (    0x38) CGXGetCurrentSessionScoreboardDisplaySet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4904 (    0x30) CGXSetCurrentSessionScoreboardDisplaySet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4934 (    0xc0) WSEventActuateDeviceWithPattern [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec49f4 (    0x98) WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4a8c (   0x1bc) WSBackgroundHIDSystemSetPropertyAggregator::setField(WSBackgroundHIDSystemSetPropertyAggregator::Field, __IOHIDEventSystem*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4c48 (   0x274) invocation function for block in WSBackgroundHIDSystemSetPropertyAggregator::enqueueActionGroup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4ebc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185ec4ecc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185ec4edc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185ec4eec (    0x6c) invocation function for block in WSBackgroundHIDSystemSetPropertyAggregator::copyNextAction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4f58 (    0x58) invocation function for block in WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregatorQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec4fb0 (    0xf8) WSSessionEventDataApplyForceConfig(CGXSessionEventData*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec50a8 (   0x120) WSEventSetPressureConfigurationOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec51c8 (    0x20) __WSUpdateConsoleDevices_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec51e8 (    0xf0) WSConsoleDeviceWithSenderIDIsSidecar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec52d8 (    0xa8) post_mouse_moved_to_loc(CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5380 (   0x1e4) WSSetCursorRestrictionShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5564 (   0x134) WSUpdateZoomTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5698 (   0x15c) WSUpdateZoomOnDisplayTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec57f4 (   0x15c) WSSignEventForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5950 (   0x138) WSGetUnicodeForKeyAndFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5a88 (    0x40) PKGWindowTransformAnimationDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5ac8 (    0xf0) PKGWindowTransformAnimationCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5bb8 (   0x210) __PKGWindowTransformAnimationCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec5dc8 (   0x25c) WS::Displays::Update::Update(CGSRegionObject*, CGSRegionObject*, CGSRegionObject*, CGSRegionObject*, CGPoint, std::__1::shared_ptr<WS::Displays::Display>, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6024 (   0x12c) WS::Displays::Update::~Update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6150 (    0x68) WS::Displays::Update::set_copy_forward(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec61b8 (   0x1b4) CGSRegisterProcessAsApp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec636c (    0x78) WS::Displays::CinematicBootRecord::~CinematicBootRecord() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec63e4 (    0x5c) WS::Displays::CinematicBootSessionData::set_enabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6440 (    0x40) std::__1::unique_ptr<WS::Displays::CinematicBootRecord, std::__1::default_delete<WS::Displays::CinematicBootRecord>>::reset[abi:v160006](WS::Displays::CinematicBootRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6480 (   0x69c) CinematicBootUpdateWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6b1c (    0x38) CinematicBootEnd [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6b54 (     0x4) std::__1::__shared_ptr_emplace<WS::Shmem, std::__1::allocator<WS::Shmem>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6b58 (    0x90) std::__1::__shared_ptr_emplace<WS::Shmem, std::__1::allocator<WS::Shmem>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6be8 (    0x44) std::__1::__shared_ptr_emplace<WS::Shmem, std::__1::allocator<WS::Shmem>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6c2c (    0x20) std::__1::__shared_ptr_emplace<WS::Shmem, std::__1::allocator<WS::Shmem>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6c4c (   0x188) WS::Shmem::new_shmem(unsigned int, unsigned long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6dd4 (   0x1b4) window_ordering_group_list_create_from_window_id_array [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6f88 (     0x8) ___CGXResetWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec6f90 (    0xb8) __window_ordering_group_list_create_from_window_id_array_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7048 (    0x18) __window_ordering_group_list_create_from_window_id_array_block_invoke.10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7060 (    0xe8) _CGXAddWindowsToSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7148 (    0xe8) _CGXRemoveWindowsFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7230 (   0x14c) mach_vm_allocate_integer_array_with_list [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec737c (    0x50) __mach_vm_allocate_integer_array_with_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec73cc (    0x18) __space_id_array_allocate_with_space_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec73e4 (    0x18) __window_id_array_allocate_with_window_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec73fc (     0x8) __process_id_array_allocate_with_process_list_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7404 (    0xb8) _CGXSpaceSetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec74bc (    0x9c) _CGXSpaceSetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7558 (    0x5c) _CGXSpaceResetMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec75b4 (    0x7c) _CGXManagedDisplaySetCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7630 (    0x78) _CGXManagedDisplaySetIsAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec76a8 (    0x5c) ___CGXCopyManagedDisplays_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7704 (    0x6c) ___CGXReassociateWindowsSpacesByGeometry_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7770 (    0xa4) ___CGXManagedDisplaysCopyRoleWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7814 (    0xb4) _CGXSpaceGetRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec78c8 (    0x80) RemoveFromKeyFocusList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7948 (    0x58) RemoveInstanceFromKeyFocusList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec79a0 (    0xb4) ReleaseAllKeyFocus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7a54 (    0x8c) ReleaseAllKeyFocusInstances [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec7ae0 (   0x798) ReleaseKeyFocus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec8278 (    0x50) KeyFocusDeathNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec82c8 (   0x39c) _CGXReleaseKeyFocusWithID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec8664 (   0xcd8) _CGXStealKeyFocusReturningID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec933c (    0x54) CPXGetKeyFocusConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9390 (     0x8) WSGetDisplaySerializationDisplayModeVersion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9398 (    0xac) CGSGetDisplayModeNull() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9444 (    0x58) CGSCreateCFArrayFromList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec949c (    0x74) CGSFillListFromCFArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9510 (     0xc) MetalBacking::CompositeEventCode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec951c (    0xb0) MetalBacking::CanUseRotboxFilter(WSCompositeSourceLayer*, bool*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec95cc (    0x54) MetalBacking::WantsLinearFiltering(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9620 (    0x2c) MetalBacking::WantsMipmapping(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec964c (    0xc4) MetalBacking::EnsureContent(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9710 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec97c4 (   0x1b0) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9974 (    0x60) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec99d4 (    0xb8) MetalBacking::ActivateAsRenderTarget(MetalContext*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9a8c (     0x8) MetalBacking::IsTargetable() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9a94 (   0x1ec) MetalBacking::PrepareForUse(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9c80 (   0x19c) MetalBacking::AbortWithTextureInfo(MetalContext*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ec9e1c (   0x454) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>>>::__emplace_unique_impl<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<id<MTLTexture>&, MetalContext*&, MetalBacking*&&>>(std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&...
                0x0000000185eca270 (   0x1b8) SingleTexturePerDeviceData::EnsureMipmaps() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca428 (    0x78) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SingleTexturePerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca4a0 (    0xec) SingleTexturePerDeviceData::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca58c (    0xc4) SingleTexturePerDeviceData::AddCommonDebugDescription(__sFILE*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca650 (     0x8) SingleTexturePerDeviceData::Texture(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca658 (    0x34) SingleTexturePerDeviceData::DidUseResource(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca68c (    0x2c) SingleTexturePerDeviceData::DidSynchronizeWithContentSeed(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca6b8 (    0x34) SingleTexturePerDeviceData::DidModifyResource() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca6ec (    0x58) SingleTexturePerDeviceData::~SingleTexturePerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca744 (    0x48) SingleTexturePerDeviceData::~SingleTexturePerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca78c (    0x20) MetalBacking::Collect() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca7ac (    0x60) MetalBacking::ApplyAnnotationDataToExistingResources(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca80c (    0xa0) MetalBacking::ApplyAnnotationData(id<MTLResourceSPI>, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca8ac (    0x7c) MetalBacking::SetAnnotationData(unsigned int, int, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca928 (    0xbc) MetalBacking::SetAnnotationDataWithFormat(unsigned int, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca9e4 (     0x8) MetalBacking::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eca9ec (   0x1a4) MetalBacking::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecab90 (   0x134) MetalBacking::AddCommonDebugDescription(__sFILE*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecacc4 (     0x8) MetalBacking::ProtectionOptions() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecaccc (     0x8) MetalBacking::PixelFormat() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecacd4 (     0x8) MetalBacking::IsCompleted() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecacdc (     0x4) MetalBacking::WaitUntilComplete() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecace0 (    0x20) MetalBacking::SetForceFiltered(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecad00 (    0x84) MetalBacking::Texture(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecad84 (     0xc) MetalBacking::WantsFiltering() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecad90 (    0x20) MetalBacking::SetFilteringEnabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecadb0 (    0x20) MetalBacking::SetMipmappingEnabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecadd0 (   0x180) MetalBacking::CreateCompositeDestination(MetalContext*, CGRect, float, CGColorSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecaf50 (    0x28) MetalBacking::DeactivateAsRenderTarget(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecaf78 (     0x8) MetalBacking::ContextCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecaf80 (   0x2d8) MetalBacking::ReleaseResources(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecb258 (    0x50) MetalBacking::DidModifyContent(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecb2a8 (    0xb8) MetalBacking::InvalidateRegion(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecb360 (   0xaf8) MetalBacking::RenderToDestination(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecbe58 (   0x198) MetalBacking::DetermineShaderOptions(WSCompositeSourceLayer*, WSCompositeDestination*, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecbff0 (     0x8) MetalBacking::Height() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecbff8 (     0x8) MetalBacking::Width() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc000 (    0x28) MetalBacking::~MetalBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc028 (   0x128) MetalBacking::~MetalBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc150 (    0x48) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc198 (     0x4) MetalBacking::~MetalBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc19c (   0x20c) MetalIOSurfaceBacking::PrepareForUse(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc3a8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc45c (   0x150) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>>>::__emplace_unique_impl<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<id<MTLTexture>&, MetalContext*&, MetalIOSurfaceBacking*&&>>(std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&,...
                0x0000000185ecc5ac (    0x4c) MetalIOSurfaceBacking::DidModifyContent(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc5f8 (    0x48) DualTexturePerDeviceData::EnsureMipmaps() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc640 (   0x1bc) DualTexturePerDeviceData::EnsureAuxiliary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecc7fc (   0x3c0) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>>>::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccbbc (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccc14 (    0x9c) DualTexturePerDeviceData::~DualTexturePerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecccb0 (   0x104) DualTexturePerDeviceData::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccdb4 (    0x18) DualTexturePerDeviceData::Texture(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccdcc (    0x28) DualTexturePerDeviceData::~DualTexturePerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccdf4 (     0x4) DualTexturePerDeviceData::~DualTexturePerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccdf8 (    0x5c) MetalIOSurfaceBacking::ApplyAnnotationDataToExistingResources(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecce54 (     0x8) MetalIOSurfaceBacking::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecce5c (   0x10c) MetalIOSurfaceBacking::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccf68 (    0x90) MetalIOSurfaceBacking::Texture(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eccff8 (     0x8) MetalIOSurfaceBacking::ContextCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd000 (   0x1b0) MetalIOSurfaceBacking::ReleaseResources(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd1b0 (    0x28) MetalIOSurfaceBacking::~MetalIOSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd1d8 (    0x60) MetalIOSurfaceBacking::~MetalIOSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd238 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd274 (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DualTexturePerDeviceData>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2b4 (     0x4) MetalIOSurfaceBacking::~MetalIOSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2b8 (     0x4) MetalIOAccelBacking::InvalidateResources() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2bc (     0x8) MetalIOAccelBacking::AuxiliaryResourceIsValid() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2c4 (     0x8) MetalIOAccelBacking::CopyToAuxiliaryResource() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2cc (     0x4) MetalIOAccelBacking::Synchronize(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2d0 (    0x14) MetalIOAccelBacking::DidFlushBuffer(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2e4 (     0xc) MetalIOAccelBacking::CompositeEventCode() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2f0 (     0x8) MetalIOAccelBacking::IsTargetable() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2f8 (     0x4) MetalIOAccelBacking::~MetalIOAccelBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd2fc (     0x4) MetalIOAccelBacking::~MetalIOAccelBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd300 (    0x58) MetalIOAccelSurfaceBacking::AuxiliaryResourceIsValid() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd358 (    0x88) MetalIOAccelSurfaceBacking::CopyToAuxiliaryResource() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecd3e0 (   0x6c4) MetalIOAccelSurfaceBacking::EnsureResources(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecdaa4 (    0xb0) MetalIOAccelSurfaceBacking::PrepareForUse(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecdb54 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecdc04 (   0x254) MetalIOAccelSurfaceBacking::EnsureNativeAcceleratorResource() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecde58 (    0x78) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecded0 (    0x58) MetalIOAccelSurfaceBacking::DidFlushBuffer(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecdf28 (    0x78) MetalIOAccelSurfaceBacking::Collect() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecdfa0 (   0x150) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece0f0 (    0x90) MetalIOAccelSurfaceBacking::ApplyAnnotationDataToExistingResources(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece180 (     0x8) MetalIOAccelSurfaceBacking::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece188 (   0x334) MetalIOAccelSurfaceBacking::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece4bc (   0x294) MetalIOAccelSurfaceBacking::ContextCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece750 (    0xdc) MetalIOAccelSurfaceBacking::Texture(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece82c (    0xb0) MetalIOAccelSurfaceBacking::ReleaseResources(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece8dc (    0x48) MetalIOAccelSurfaceBacking::~MetalIOAccelSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece924 (    0x80) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SingleTexturePerDeviceData>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ece9a4 (    0x6c) MetalIOAccelBacking::~MetalIOAccelBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecea10 (    0x44) MetalIOAccelSurfaceBacking::~MetalIOAccelSurfaceBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecea54 (    0x78) MetalIOAccelHybridBacking::InvalidateResources() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eceacc (   0x1b8) MetalIOAccelHybridBacking::SynchronizeSpecificBuffer(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecec84 (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ececc4 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eced74 (   0x6c8) MetalIOAccelHybridBacking::EnsureResources(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf43c (   0x200) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, bool>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, bool>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, bool>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, bool>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, bool>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf63c (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf694 (     0xc) MetalIOAccelHybridBacking::EnsureResources(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf6a0 (   0x11c) MetalIOAccelHybridBacking::Synchronize(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf7bc (    0x68) MetalIOAccelHybridBacking::DidFlushBuffer(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf824 (   0x100) MetalIOAccelHybridBacking::PrepareForUse(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf924 (    0xc4) MetalIOAccelHybridBacking::Collect() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecf9e8 (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfb1c (    0xa8) MetalIOAccelHybridBacking::ApplyAnnotationDataToExistingResources(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfbc4 (     0x8) MetalIOAccelHybridBacking::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfbcc (    0xec) MetalIOAccelHybridBacking::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfcb8 (    0x54) MetalIOAccelHybridBacking::Texture(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfd0c (    0xa0) MetalIOAccelHybridBacking::ContextCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfdac (    0xb4) MetalIOAccelHybridBacking::ReleaseResources(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfe60 (     0x4) MetalIOAccelHybridBacking::RenderToDestination(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfe64 (    0x28) MetalIOAccelHybridBacking::~MetalIOAccelHybridBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecfe8c (    0xa4) MetalIOAccelHybridBacking::~MetalIOAccelHybridBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecff30 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, bool>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, bool>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, bool>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, bool>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecff7c (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DualTexturePerDeviceData>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecffb8 (     0x4) MetalIOAccelHybridBacking::~MetalIOAccelHybridBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ecffbc (   0x1d8) MetalTiledBacking::ActivateAsRenderTarget(MetalContext*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed0194 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed0248 (   0x15c) std::__1::vector<bool, std::__1::allocator<bool>>::assign(unsigned long, bool const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed03a4 (   0x158) std::__1::vector<bool, std::__1::allocator<bool>>::reserve(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed04fc (    0xbc) void std::__1::__fill_n_false[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::vector<bool, std::__1::allocator<bool>>::size_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed05b8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned long>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned long>>(std::__1::allocator<unsigned long>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed05f0 (   0x440) MetalTiledBacking::PrepareForUse(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed0a30 (   0x46c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_co...
                0x0000000185ed0e9c (   0x1c8) std::__1::vector<bool, std::__1::allocator<bool>>::resize(unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1064 (    0xb4) MetalBacking::ValidateRegion(MetalContext*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1118 (   0x1f8) MetalTiledBacking::rdar_32741922_ct_abort(unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1310 (   0x3f8) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<CGSRegionObject, SLReleaser>>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__...
                0x0000000185ed1708 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1760 (    0xb0) MetalTiledBacking::CustomPerDeviceData::~CustomPerDeviceData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1810 (    0x58) MetalTiledBacking::ApplyAnnotationDataToExistingResources(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1868 (     0x8) MetalTiledBacking::Type() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1870 (   0x100) MetalTiledBacking::AddDebugDescription(__sFILE*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1970 (     0x8) MetalTiledBacking::IsCompleted() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1978 (   0x138) MetalTiledBacking::IOAFResourceTest(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1ab0 (     0x8) MetalTiledBacking::WaitUntilComplete() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1ab8 (    0x64) MetalTiledBacking::Texture(MetalContext*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1b1c (   0x114) MetalTiledBacking::CreateCompositeDestination(MetalContext*, CGRect, float, CGColorSpace*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1c30 (     0x8) MetalTiledBacking::ContextCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1c38 (   0x1b0) MetalTiledBacking::ReleaseResources(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1de8 (     0x4) MetalTiledBacking::DidModifyContent(MetalContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1dec (   0x1e4) MetalTiledBacking::InvalidateRegion(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed1fd0 (   0xde4) MetalTiledBacking::RenderToDestination(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2db4 (    0xac) MetalTiledBacking::GetSpecificTileSize(MetalContext*, unsigned int, unsigned int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2e60 (    0x40) MetalTiledBacking::~MetalTiledBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2ea0 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2edc (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MetalTiledBacking::CustomPerDeviceData>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2f1c (    0x3c) MetalTiledBacking::~MetalTiledBacking() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed2f58 (    0xa8) MetalBacking::MetalBacking(WSPixelFormat, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3000 (   0x124) MetalIOSurfaceBacking::MetalIOSurfaceBacking(__IOSurface*, WSPixelFormat) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3124 (   0x230) MetalIOAccelBackingCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3354 (   0x1a4) MetalBackingPopulateIOASInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed34f8 (    0x68) MetalBackingGetHeight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3560 (   0x168) MetalBackingSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed36c8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185ed36e0 (    0x5c) metal_ioaf_pseudofence_available() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed373c (    0x48) invocation function for block in metal_ioaf_pseudofence_available() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3784 (    0xdc) MetalBackingSetAnnotationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3860 (    0x20) SLWindowLevelForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3880 (     0x8) -[ECTestOnlyEventType cgSubType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3888 (     0x8) -[ECTestOnlyEventType cgType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3890 (     0x8) -[ECTestOnlyEventType hidType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3898 (     0x8) -[ECTestOnlyEventType isCGType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed38a0 (     0x8) -[ECTestOnlyVersionedPID version] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed38a8 (     0x8) -[ECTestOnlyVersionedPID pid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed38b0 (     0x8) -[ECTestOnlyEventAuthenticationMessage valid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed38b8 (    0x54) -[ECTestOnlyEventAuthenticationMessage copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed390c (    0x4c) -[ECTestOnlyEventAuthenticationMessage initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3958 (    0x44) -[ECTestOnlyEventAuthenticationMessage encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed399c (     0x8) -[ECTestOnlyEventAuthenticationMessage capabilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed39a4 (    0x30) -[ECTestOnlyEventAuthenticationMessage eventType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed39d4 (    0x30) -[ECTestOnlyEventAuthenticationMessage proxyTargetProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a04 (     0x8) -[ECTestOnlyEventAuthenticationMessage context] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a0c (    0x30) -[ECTestOnlyEventAuthenticationMessage targetProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a3c (     0x8) -[ECTestOnlyEventAuthenticationMessage originIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a44 (     0x8) -[ECTestOnlyEventAuthenticationMessage timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a4c (    0x4c) -[ECTestOnlyEventAuthenticationMessage validateWithOptions:andResultBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3a98 (     0x8) -[ECTestOnlyEventAuthenticationMessage init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3aa0 (    0x78) -[ECTestOnlyEventAuthenticationMessage initWithValidity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3b18 (     0x8) +[ECTestOnlyEventAuthenticationMessage supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3b20 (    0x40) +[ECTestOnlyEventAuthenticationMessage messageWithValidity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3b60 (    0xc8) CGXStartSubsidiaryServices [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3c28 (    0x10) catch_child [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3c38 (    0x38) death_notification_will_destroy_session_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3c70 (     0xc) -[SLSGUIClient setService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3c7c (    0x10) -[SLSGUIClient service] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3c8c (    0x88) -[SLSGUIClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3d14 (     0x4) -[SLSGUIClient init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3d18 (    0x74) -[SLSGUIClient validateIdleRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3d8c (   0x174) -[SLSGUIClient requestDisplaysIdle:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3f00 (    0x48) -[SLSGUIClient terminateConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed3f48 (    0xfc) -[SLSGUIClient initGUIClient:error:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4044 (    0x6c) +[SLSGUIClient configGUIClient:error:notifyQueue:notificationType:notificationBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed40b0 (    0x6c) WSCAContextScopeTransaction::WSCAContextScopeTransaction(WSCAScopeParameters) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed411c (    0xec) WSCAContextScopeTransaction::~WSCAContextScopeTransaction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4208 (    0x84) __WSCAContextServerOptions_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed428c (    0xb8) WSCAContextScopeTransaction::addContextToCommit(CAContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4344 (    0xac) CGSEventSourceShmemCreateFromMemoryEntry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed43f0 (    0x58) CGSInvalidateEventServerPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4448 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSEventSourceCache::entry>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSEventSourceCache::entry>>(std::__1::allocator<CGSEventSourceCache::entry>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4490 (   0x1fc) CGSEventSourceCache::server_get_event_source_state_for_id(int, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed468c (    0x50) CGSEventSourceShutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed46dc (    0x84) get_cache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4760 (   0x19c) server_create_event_source_state(int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed48fc (   0x300) CompositorMetal::CopyIOSurfaceToIOSurface(__IOSurface*, __IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4bfc (   0x294) WSMetalFormatFromFourCC [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4e90 (     0xc) CompositorMetal::GetScratchpadIsDeep() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4e9c (     0xc) CompositorMetal::SetScratchpadIsDeep(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed4ea8 (   0x66c) CompositorMetal::CopySurface(__IOSurface*, CGColorSpace*, CGRect, __IOSurface*, CGColorSpace*, CGRect, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed5514 (   0x144) CompositorMetal::ScaleTextureRectToTextureBGRA(CGColorSpace*, CGColorSpace*, CGSRegionObject*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, bool, float, float vector[4], bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed5658 (   0x1e0) CompositorMetal::ClearSurfaceRegion420(__IOSurface*, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed5838 (    0xac) yCbCrMatrixForIOSurface(__IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed58e4 (   0x308) CompositorMetal::ScaleTextureRectToTexture420(CGColorSpace*, CGColorSpace*, CGSRegionObject*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, bool, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed5bec (   0x168) CompositorMetal::ScaleTextureRectToTexture444(CGColorSpace*, CGColorSpace*, CGSRegionObject*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, bool, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed5d54 (   0x820) render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6574 (   0x440) initialize_scale_program(MetalContext*, CGColorSpace*, CGColorSpace*, WSMatrix, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed69b4 (    0xe4) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6a98 (     0x4) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6a9c (     0x4) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6aa0 (    0x30) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<WSMatrix>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6ad0 (    0x54) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6b24 (     0x4) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6b28 (     0x4) std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6b2c (   0x260) MetalClearRegionYCbCr [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6d8c (   0x188) emit_colored_verts_for_region(MetalContext*, float, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed6f14 (   0x118) MetalClearRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed702c (   0x1e0) CompositorMetal::ClearSurfaceRegion444(__IOSurface*, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed720c (   0x26c) CompositorMetal::FillSurface(__IOSurface*, CGRect, WSPixelFormat, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7478 (    0xec) WSPixelFormatGetMTLPixelFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7564 (   0x218) metal_clear_rect(MetalContext*, float, CGRect, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed777c (   0x134) CompositorMetal::PerformAcceleratorCleanup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed78b0 (   0x240) invocation function for block in CompositorMetal::PerformAcceleratorCleanup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7af0 (   0x194) invocation function for block in CompositorMetal::PerformAcceleratorCleanup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7c84 (    0x74) CompositorMetal::GetTextureForShadow(std::__1::shared_ptr<WSShadow>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7cf8 (   0x284) CompositorMetal::CreateShadowFromLayers(WSShadowDescription, WSCompositeSourceLayer*, CGXRedrawState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed7f7c (   0x6f4) CompositorMetal::CreateShadowFromMask(WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed8670 (   0xa08) CompositorMetal::CreateDisplayStreamState(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed9078 (   0x1d8) CompositorMetal::CreateCaptureSurface(CGRect, unsigned int, unsigned int, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed9250 (   0x138) CompositorMetal::CompositeLayersToDestination(WSCompositeSourceLayer*, WSCompositeDestination*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed9388 (   0x4f8) CompositorMetal::composite(WSCompositeSourceLayer*, WSCompositeDestination*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed9880 (    0x78) MetalCompositeLayers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ed98f8 (  0x1574) MetalCompositeLayer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edae6c (   0x7e0) metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edb64c (   0xd20) metal_composite_shadow(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edc36c (   0x5c4) metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edc930 (    0xe4) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edca14 (     0x4) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edca18 (     0x4) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edca1c (    0x30) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edca4c (    0x54) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcaa0 (     0x4) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcaa4 (     0x4) std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcaa8 (   0x128) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcbd0 (     0x4) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcbd4 (     0x4) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcbd8 (    0x38) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcc10 (    0x5c) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcc6c (     0x4) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcc70 (     0x4) std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcc74 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<Basic_VertexIn>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<Basic_VertexIn>>(std::__1::allocator<Basic_VertexIn>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edccac (    0xe4) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcd90 (     0x4) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcd94 (     0x4) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcd98 (    0x30) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcdc8 (    0x54) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edce1c (     0x4) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edce20 (     0x4) std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edce24 (    0x10) CompositorMetal::SetContextSharedEventDest(WSCompositeDestination*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edce34 (    0x54) CompositorMetal::EndUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edce88 (    0x4c) CompositorMetal::BeginUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edced4 (    0x10) CompositorMetal::Finish() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcee4 (    0x20) CompositorMetal::Flush() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf04 (     0x4) CompositorMetal::Reset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf08 (    0x20) CompositorMetal::TextureLimits(unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf28 (     0xc) CompositorMetal::SupportsYCbCrRenderTargets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf34 (     0xc) CompositorMetal::SupportsPriority() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf40 (     0xc) CompositorMetal::IsRemovable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf4c (     0x8) CompositorMetal::HasAcceleration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf54 (     0xc) CompositorMetal::GPURegistryID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf60 (    0x28) CompositorMetal::~CompositorMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcf88 (    0x48) CompositorMetal::~CompositorMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcfd0 (     0x4) CompositorMetal::~CompositorMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edcfd4 (    0x68) CompositorMetal::SupportsSurfaceSize(CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edd03c (   0x1d8) __WSSystemCanCompositeWithMetal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edd214 (    0x5c) __WSSystemCanCompositeWithMetal_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edd270 (   0x178) MetalColorRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edd3e8 (   0xa00) CompositorMetal::new_compositor(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eddde8 (   0x228) CompositorMetal::CopyTextureToIOSurface(void*, CGColorSpace*, CGRect, __IOSurface*, CGColorSpace*, CGRect, CGSRegionObject*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede010 (   0x66c) CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede67c (    0x44) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede6c0 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede6c4 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede6c8 (    0x24) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGAffineTransform const&>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede6ec (    0x48) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede734 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede738 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede73c (    0x68) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede7a4 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede7a8 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede7ac (    0x30) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGAffineTransform const&>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede7dc (    0x54) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede830 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede834 (     0x4) std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede838 (    0x44) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede87c (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede880 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede884 (    0x24) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGSRegionObject*>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede8a8 (    0x48) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede8f0 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede8f4 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede8f8 (    0x58) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede950 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede954 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede958 (    0x28) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGSRegionObject*>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede980 (    0x4c) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede9cc (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede9d0 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ede9d4 (   0x5fc) CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edefd0 (    0x44) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf014 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf018 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf01c (    0x24) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGSRegionObject*>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf040 (    0x48) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf088 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf08c (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf090 (    0x58) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf0e8 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf0ec (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf0f0 (    0x28) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::__clone(std::__1::__function::__base<std::__1::allocator<CGSRegionObject*>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf118 (    0x4c) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf164 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf168 (     0x4) std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf16c (   0x4b8) dump_device_info(id<MTLDeviceSPI>, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf624 (    0xd4) __WSGetDefaultMetalAccelerator_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf6f8 (   0x170) IsColorimetryP3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf868 (   0x170) IsColorimetrySRGB [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edf9d8 (   0x170) IsColorimetryNTSC [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edfb48 (   0x170) IsColorimetryPAL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edfcb8 (    0xa0) IsWhitePointStandardD50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edfd58 (   0x1cc) PresetDataReportingTimerCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185edff24 (  0x18b4) invocation function for block in SamplePresetData(__CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee17d8 (   0x428) CreateContainerIDHash(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee1c00 (    0x98) GetDisplayPresetInfoMapLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee1c98 (    0x88) HIDDisplayReportingPresetInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee1d20 (   0x978) FetchReportingData(__CFString const*, IOReportingType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2698 (    0x4c) std::__1::__optional_destruct_base<CGXHIDDisplayReportingData, false>::~__optional_destruct_base[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee26e4 (    0x10) __Block_byref_object_copy_.82 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee26f4 (     0xc) __Block_byref_object_dispose_.83 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2700 (   0x154) invocation function for block in getADIOReportingInterfaceClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2854 (    0x64) CGXHIDDisplayReportingPresetData::~CGXHIDDisplayReportingPresetData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee28b8 (    0x10) std::__1::__throw_bad_optional_access[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee28c8 (   0x350) std::__1::__hash_table<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>>>::__node_insert_multi_prepare(unsigned long, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2c18 (    0xe8) std::__1::__hash_table<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>>>::__node_insert_multi_perform(std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2d00 (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2d40 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2d98 (    0x78) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>, 0>(std::__1::pair<int const, CGXHIDDisplayReportingPresetData>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2e10 (   0x148) CGXHIDDisplayReportingPresetData::CGXHIDDisplayReportingPresetData(CGXHIDDisplayReportingPresetData const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee2f58 (   0x48c) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee33e4 (    0xb4) std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3498 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x0000000185ee3694 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<int, CGXHIDDisplayR...
                0x0000000185ee36ec (    0x50) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>, 0>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee373c (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3778 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGXHIDDisplayReportingPresetData>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3974 (    0x74) invocation function for block in AppleDisplayTCONControlLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee39e8 (    0x50) invocation function for block in getHIDDisplayCreateIOReportingInterfaceWithContainerIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3a38 (   0x110) HIDDisplayLibrary() (.21404) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3b48 (    0x3c) __Block_byref_object_copy_.21406 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3b84 (    0x58) __Block_byref_object_dispose_.21407 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3bdc (   0x1d0) invocation function for block in FetchReportingData(__CFString const*, IOReportingType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3dac (    0x50) invocation function for block in getHIDDisplayIOReportingSetInputDataHandlerSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3dfc (    0x50) invocation function for block in getHIDDisplayIOReportingSetDispatchQueueSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3e4c (    0x50) invocation function for block in getHIDDisplayIOReportingActivateSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3e9c (    0x50) invocation function for block in getHIDDisplayIOReportingSetOutputDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3eec (    0x50) invocation function for block in getHIDDisplayIOReportingCancelSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3f3c (    0x44) CGXHIDDisplayReportingData::~CGXHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3f80 (    0x68) std::__1::vector<double, std::__1::allocator<double>>::vector(std::__1::vector<double, std::__1::allocator<double>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee3fe8 (    0x40) std::__1::vector<double, std::__1::allocator<double>>::__vallocate[abi:v160006](unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4028 (     0xc) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4034 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4038 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee403c (    0x24) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4060 (    0x48) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee40a8 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee40ac (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee40b0 (    0x50) __destroy_helper_block_e8_32o40r48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4100 (    0x60) __copy_helper_block_e8_32o40r48r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4160 (   0x2c0) invocation function for block in FetchReportingData(__CFString const*, IOReportingType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4420 (     0xc) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee442c (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4430 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4434 (    0x24) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4458 (    0x48) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44a0 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44a4 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44a8 (    0x14) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44bc (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44c0 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44c4 (    0x24) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee44e8 (    0x48) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4530 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4534 (     0x4) std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4538 (    0x74) invocation function for block in HIDDisplayLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee45ac (    0x14) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee45c0 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee45c4 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee45c8 (    0x24) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee45ec (    0x48) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4634 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4638 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee463c (    0x14) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4650 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4654 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4658 (    0x24) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee467c (    0x48) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46c4 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46c8 (     0x4) std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46cc (    0x14) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46e0 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46e4 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee46e8 (    0x24) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee470c (    0x48) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4754 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4758 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee475c (    0x14) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4770 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4774 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4778 (    0x24) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee479c (    0x48) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee47e4 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee47e8 (     0x4) std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee47ec (    0x2c) invocation function for block in HIDDisplayReportingQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4818 (   0x3dc) HandleDisplayReporting [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee4bf4 (   0x70c) invocation function for block in SampleHIDDisplayReportingData(__CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5300 (   0x204) SendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5504 (   0x248) SendHIDDisplayPresetData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee574c (    0x88) HIDDisplayInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee57d4 (   0x210) invocation function for block in SendDisplayInfoReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee59e4 (   0x12c) AnalyticsSendEventLazyFunc(char const*, NSObject<OS_xpc_object>* () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5b10 (   0x140) invocation function for block in getanalytics_send_event_lazySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5c50 (    0x74) invocation function for block in CoreAnalyticsLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5cc4 (     0x4) invocation function for block in DispatchSendHIDDisplayPresetData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5cc8 (     0x4) invocation function for block in DispatchSendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee5ccc (   0x480) invocation function for block in SendHIDDisplayPresetData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee614c (    0x98) GetDisplayReportingDataMapLock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee61e4 (    0x88) HIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee626c (    0x94) invocation function for block in SendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6300 (    0x68) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, CGXHIDDisplayReportingData>, 0>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, CGXHIDDisplayReportingData>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6368 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee63c0 (    0xb8) invocation function for block in check_time_of_day() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6478 (    0x94) invocation function for block in check_time_of_day() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee650c (    0x88) WSDisplayReportingTimerCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6594 (   0x998) DisplayInfoReportingTimerCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6f2c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<NSString*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<NSString*>>(std::__1::allocator<NSString*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6f64 (    0x14) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6f78 (     0x4) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6f7c (     0x4) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6f80 (    0x24) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6fa4 (    0x48) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6fec (     0x4) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6ff0 (     0x4) std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee6ff4 (   0x990) SLSAppearanceThemeForEnvironment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7984 (    0x10) __Block_byref_object_copy_.21543 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7994 (     0xc) __Block_byref_object_dispose_.21544 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee79a0 (    0x70) invocation function for block in getGEOCityClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7a10 (    0x50) invocation function for block in getGEOManagedObjectContextSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7a60 (   0x110) GeoKitLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7b70 (   0x120) getGEOAlmanacClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7c90 (   0x154) invocation function for block in getGEOAlmanacClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7de4 (    0x74) invocation function for block in GeoServicesLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7e58 (    0x24) invocation function for block in get_geo_almanac(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7e7c (    0x74) invocation function for block in GeoKitLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7ef0 (    0x6c) invocation function for block in get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee7f5c (    0xb8) invocation function for block in get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8014 (    0xa8) CGSErrorString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee80bc (    0xc4) CGXAddPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8180 (    0x18) CGXRemovePort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8198 (   0x14c) __WSServerInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee82e4 (     0x8) WSRegisterForPortDataInPrimaryConsoleSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee82ec (   0x198) register_for_port_data_in_session [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8484 (   0x118) WSRemovePortDataHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee859c (    0xa8) WSRemoveAllPortDataHandlersForPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8644 (    0xc8) CGSCountVMRegions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee870c (    0xe0) WSNewTimerScheduled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee87ec (   0x158) CGXPostReplyMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8944 (   0x140) push_out_message [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee8a84 (   0x744) CGXRunOneServicesPass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee91c8 (   0x188) post_port_data [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9350 (   0x66c) SLXServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee99bc (    0x90) server_loop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9a4c (   0x104) get_notify_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9b50 (    0xa8) schedule_idle_timeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9bf8 (    0x50) idle_timeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9c48 (    0xf8) notify_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9d40 (   0x14c) CGXPostPortNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9e8c (    0xb8) remove_all_port_notifications_for_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9f44 (    0x5c) __CGXPostPortNotification_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ee9fa0 (    0x74) port_notice_release [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea014 (    0x9c) CGXPerformServerShutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea0b0 (    0x94) close_public_server_port [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea144 (    0x3c) perform_server_shutdown [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea180 (    0x38) __perform_server_shutdown_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea1b8 (    0xc0) CGXRemovePortNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea278 (   0x110) port_notification_dictionary_remove_matching_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea388 (   0x23c) register_for_port_notification_in_session [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea5c4 (    0x14) port_notice_array_release_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea5d8 (    0x18) port_notice_array_retain_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea5f0 (    0x78) spin_control_port_death [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea668 (   0x350) CGXPostSpinControlNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eea9b8 (    0x64) __WSSetSIGTERMHandler_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeaa1c (     0xc) __WSSetSIGTERMHandler_block_invoke.31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeaa28 (    0x40) block_timer_callback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeaa68 (    0xa0) __WSSetSIGTERMHandler_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeab08 (    0xb4) WSProcessIsTranslated [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeabbc (   0x134) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<cf_typified<(anonymous namespace)::event_appendix>::get_type_id()::'lambda'()&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeacf0 (    0xfc) invocation function for block in cf_typified<(anonymous namespace)::event_appendix>::get_type_id()::'lambda'()::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeadec (    0x44) (anonymous namespace)::event_appendix::reserve_unicode_payload_length(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeae30 (    0xc4) WSTracingSetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeaef4 (    0x70) WSPerformanceBlitUpdatePerDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeaf64 (   0x160) performance_task_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeb0c4 (   0x13c) performance_update(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeb200 (    0x70) performance_signpost_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeb270 (    0x70) persist_glitch_signpost_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeb2e0 (    0x70) in_memory_signpost_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeb350 (   0x814) WSUpdateSignpostSignalWithArgs [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebb64 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185eebb84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185eebb94 (    0x74) (null) [FUNC, FunctionStarts] 
                0x0000000185eebc08 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000185eebc40 (    0xd0) SignpostMetricsLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebd10 (    0xe4) get_MXSignpostMetricsSnapshotSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebdf4 (    0x48) WSMXSignpostMetricsSnapshot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebe3c (    0xb8) invocation function for block in get_MXSignpostMetricsSnapshotSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebef4 (    0x74) invocation function for block in SignpostMetricsLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebf68 (    0x48) WSConnectionStatCollector::~WSConnectionStatCollector() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eebfb0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<WSConnectionStatCollector, std::__1::default_delete<WSConnectionStatCollector>>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, std::__1::unique_ptr<WSConnectionStatCollector, std::__1::default_delete<WSConnectionStatCollector>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<WSConnectionStatCollector, std::__1::default_delete<WSConnectionStatCollector>>>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<WSConnectionStatCollector, std::__1::default_delete<WSConnectionStatCollector>>>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unique_ptr<WSConnectionStatCollector, std::__1::default_delete<WSConnectionStatCo...
                0x0000000185eec064 (    0x68) log_pids(payload&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eec0cc (     0x8) DisplayStreamVideoToolbox::Accelerator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eec0d4 (    0x98) DisplayStreamVideoToolbox::WillUpdate(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eec16c (   0x84c) DisplayStreamVideoToolbox::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eec9b8 (   0x374) DisplayStreamVideoToolbox::FillPixelBuffer(CGXDisplayStream*, __CVBuffer*, float vector[4]) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eecd2c (   0x414) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<__IOSurface*, void*>*>, bool> std::__1::__hash_table<__IOSurface*, std::__1::hash<__IOSurface*>, std::__1::equal_to<__IOSurface*>, std::__1::allocator<__IOSurface*>>::__emplace_unique_key_args<__IOSurface*, __IOSurface* const&>(__IOSurface* const&, __IOSurface* const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed140 (    0x28) DisplayStreamVideoToolbox::~DisplayStreamVideoToolbox() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed168 (    0x60) DisplayStreamVideoToolbox::~DisplayStreamVideoToolbox() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed1c8 (    0x4c) std::__1::__hash_table<__IOSurface*, std::__1::hash<__IOSurface*>, std::__1::equal_to<__IOSurface*>, std::__1::allocator<__IOSurface*>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed214 (     0x4) DisplayStreamVideoToolbox::~DisplayStreamVideoToolbox() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed218 (   0x4f8) CreateVTPixelTransferSession(Compositor*, CGColorSpace*, WSMatrix, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed710 (    0x28) __WSSystemUsesAppleInternalSecurityPolicies_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed738 (    0x5c) WSSetScreenCaptureTCCBehavior [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed794 (   0x10c) CGXSetConsoleUserFromData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed8a0 (   0x150) user_setenv [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed9f0 (     0xc) WSDoRootAdminPrivileged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eed9fc (    0x9c) WSDoWithCredentials [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeda98 (    0xe8) WSAssumeCredentials [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedb80 (    0x7c) __WSDoWithCredentials_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedbfc (     0x8) CGXGetRootAdminCredentials [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedc04 (    0xe0) CGXGetLastMessageCredentials [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedce4 (   0x274) WSAuditTokenHoldsCachedProcessRight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedf58 (    0x24) __setProcessFlagsInCache_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eedf7c (    0x88) processCredentialCacheRemoveDeadProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee004 (    0xc4) __getProcessCredentialCache_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee0c8 (   0x1d0) tccResetNotificationPortDataHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee298 (    0xa4) audit_token_check_tcc_access [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee33c (   0x110) tcc_lookup_symbol [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee44c (    0x9c) WSAuditTokenIsScreenCaptureAllowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee4e8 (    0xbc) audit_token_has_entitlement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee5a4 (   0x128) WSAuditTokenCanMonitorEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee6cc (    0x30) __WSAuditTokenIsListenEventTCCApproved_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee6fc (    0x84) WSCallerHasAccessibilityUIEntitlement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee780 (    0x80) caller_has_entitlement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee800 (    0x58) WSCallerHasSelectiveSharingEntitlement [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee858 (    0x54) __createRootBootstrapConnectionEndpoint_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee8ac (    0xe0) __createRootBootstrapConnectionEndpoint_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eee98c (   0x194) __createRootBootstrapConnectionEndpoint_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeeb20 (    0x54) __createRootCredentialsConnectionEndpoint_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeeb74 (    0xe0) __createRootCredentialsConnectionEndpoint_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeec54 (   0x1b0) __createRootCredentialsConnectionEndpoint_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeee04 (    0xa0) __handle_screen_capture_check_xpc_message_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeeea4 (    0x64) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<GamepolicyClient::createRootConnectionEndpoint()::'lambda'()&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eeef08 (   0x508) invocation function for block in GamepolicyClient::createRootConnectionEndpoint()::'lambda'()::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eef410 (    0x74) GamepolicyClient::getClientMap() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eef484 (   0x780) invocation function for block in GamepolicyClient::GamepolicyClient(_xpc_connection_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefc04 (    0x98) get_full_screen_tracker() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefc9c (    0x24) __Block_byref_object_copy_.22106 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefcc0 (    0x18) __Block_byref_object_dispose_.22107 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefcd8 (    0xe8) invocation function for block in FullScreenTracker::ReceiveMessage(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefdc0 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eefe0c (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0008 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0060 (    0x60) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<unsigned long const, FullScreenStatus>, 0>(std::__1::pair<unsigned long const, FullScreenStatus>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef00c0 (     0x4) std::__1::__shared_ptr_emplace<GamepolicyClient, std::__1::allocator<GamepolicyClient>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef00c4 (    0x3c) std::__1::__shared_ptr_emplace<GamepolicyClient, std::__1::allocator<GamepolicyClient>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0100 (    0x44) std::__1::__shared_ptr_emplace<GamepolicyClient, std::__1::allocator<GamepolicyClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0144 (    0x20) std::__1::__shared_ptr_emplace<GamepolicyClient, std::__1::allocator<GamepolicyClient>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0164 (    0xa8) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus>>>::find<unsigned long>(unsigned long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef020c (   0x3d8) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>>>::__emplace_unique_key_args<unsigned long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long const&>, std::__1::tuple<>>(unsigned long const&...
                0x0000000185ef05e4 (    0xb0) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>>>::find<unsigned long>(unsigned long const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0694 (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FullScreenStatus::FullScreenWithHistory>>>::find<unsigned long>(unsigned long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0744 (    0xb0) FullScreenStatus::IsFullScreen() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef07f4 (   0x148) WS::GVAInstance::GVAInstanceCreate(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef093c (    0x90) invocation function for block in get_avf_vtable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef09cc (   0x1ec) WS::GVAInstance::set_source_ycbcr_matrix(YCbCrMatrixType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef0bb8 (   0x5fc) WS::GVAInstance::set_color_conversion(CGColorSpace*, CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef11b4 (   0x1d4) log_gva_color_space_error(CGColorSpace*, CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef1388 (   0x328) WS::GVAInstance::transfer_image_async(unsigned int, __IOSurface*, __IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef16b0 (   0x40c) __WSGVAInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef1abc (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::pair<CGSize, CGSize>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::pair<CGSize, CGSize>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::pair<CGSize, CGSize>>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::pair<CGSize, CGSize>>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef1cb8 (   0xa80) render_scaled_iosurface_to_dest_internal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2738 (    0x74) get_avf_cache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef27ac (   0x100) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, std::__1::__map_value_compare<std::__1::pair<unsigned long long, bool>, std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, std::__1::less<std::__1::pair<unsigned long long, bool>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>>>::__emplace_unique_key_args<std::__1::pair<unsigned long long, bool>, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::pair<unsigned long long, bool> const&>, std::__1::tuple<>>(std::__1::pair<unsigned long long, bool> const&, std::__1::piecewise_constr...
                0x0000000185ef28ac (    0xac) gva_cleanup_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2958 (    0x4c) std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, std::__1::__map_value_compare<std::__1::pair<unsigned long long, bool>, std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, std::__1::less<std::__1::pair<unsigned long long, bool>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long long, bool>, WS::GVAInstance*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef29a4 (     0xc) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef29b0 (     0x4) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef29b4 (     0x4) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef29b8 (    0x24) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef29dc (    0x48) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2a24 (     0x4) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2a28 (     0x4) std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2a2c (     0x4) WSGVATransferImageAsync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2a30 (     0x8) DisplayStreamStateMetal::Accelerator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2a38 (   0x154) DisplayStreamStateMetal::WillUpdate(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef2b8c (   0x9a0) DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef352c (    0xd4) DisplayStreamStateMetal::EnsureMetalResourcesForContext(MetalContext*, CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3600 (    0x70) DisplayStreamStateMetal::IsComplete(MetalContext*, CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3670 (   0x1d8) DisplayStreamStateMetal::ClearMatte(MetalContext*, CGSRegionObject*, QueueEntryMetal*, unsigned int, WSMatrix const&, float vector[4] const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3848 (    0x7c) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef38c4 (     0x4) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef38c8 (     0x4) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef38cc (    0x30) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef38fc (    0x54) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3950 (     0x4) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3954 (     0x4) std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3958 (    0x28) DisplayStreamStateMetal::~DisplayStreamStateMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3980 (    0x8c) DisplayStreamStateMetal::~DisplayStreamStateMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3a0c (    0x84) std::__1::vector<QueueEntryMetal, std::__1::allocator<QueueEntryMetal>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3a90 (    0x28) DisplayStreamStateMetal::displayReconfigureCallback(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3ab8 (     0x4) DisplayStreamStateMetal::~DisplayStreamStateMetal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3abc (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<QueueEntryMetal>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<QueueEntryMetal>>(std::__1::allocator<QueueEntryMetal>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3b04 (    0x88) std::__1::vector<QueueEntryMetal, std::__1::allocator<QueueEntryMetal>>::__swap_out_circular_buffer(std::__1::__split_buffer<QueueEntryMetal, std::__1::allocator<QueueEntryMetal>&>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3b8c (    0x50) std::__1::__split_buffer<QueueEntryMetal, std::__1::allocator<QueueEntryMetal>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3bdc (     0x8) SLSWindowBackdropGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3be4 (    0x8c) SLSWindowBackdropMaterialStringToEnum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3c70 (    0x8c) SLSWindowBackdropBlendModeStringToEnum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3cfc (    0x8c) SLSWindowBackdropCreateWithLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3d88 (    0x8c) SLSWindowBackdropCreateWithLevelAndMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3e14 (    0x8c) SLSWindowBackdropRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3ea0 (    0x8c) SLSWindowBackdropActivate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3f2c (    0x8c) SLSWindowBackdropDeactivate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef3fb8 (    0x8c) SLSWindowBackdropActivateAll [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4044 (    0x8c) SLSWindowBackdropDeactivateAll [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef40d0 (    0x8c) SLSWindowFreezeBackdrops [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef415c (    0x8c) SLSWindowThawBackdrops [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef41e8 (    0x8c) SLSWindowBackdropSetSaturation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4274 (    0x8c) SLSWindowBackdropCreateWithLevelAndTintColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4300 (    0x8c) SLSWindowBackdropSetSelectionTintColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef438c (    0x98) SLSSetSurfaceVersionedProxiesForNextFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4424 (    0x98) SLSSetSurfaceProxiesForNextFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44bc (     0x8) CompositorNoop::GetTextureForShadow(std::__1::shared_ptr<WSShadow>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44c4 (     0x8) CompositorNoop::CreateShadowFromLayers(WSShadowDescription, WSCompositeSourceLayer*, CGXRedrawState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44cc (     0x8) CompositorNoop::CreateShadowFromMask(WSShadowDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44d4 (     0x8) CompositorNoop::CreateDisplayStreamState(CGXDisplayStream*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44dc (     0x8) CompositorNoop::CreateCaptureSurface(CGRect, unsigned int, unsigned int, WSPixelFormat, float, bool, CGColorSpace*, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44e4 (     0x4) CompositorNoop::CompositeLayersToDestination(WSCompositeSourceLayer*, WSCompositeDestination*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44e8 (     0x4) CompositorNoop::Flush() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44ec (     0x4) CompositorNoop::Reset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44f0 (     0x4) CompositorNoop::~CompositorNoop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44f4 (     0x4) CompositorNoop::~CompositorNoop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef44f8 (    0x4c) std::__1::__tree<std::__1::__value_type<int, CGXSessionZoomData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGXSessionZoomData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CGXSessionZoomData>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, CGXSessionZoomData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4544 (    0x4c) std::__1::__tree<std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ZoomData>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ZoomData>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4590 (    0x58) std::__1::__tree<std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ZoomData>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef45e8 (    0x58) std::__1::__tree<std::__1::__value_type<int, CGXSessionZoomData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGXSessionZoomData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CGXSessionZoomData>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4640 (    0x44) std::__1::map<int, CGXSessionZoomData, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, CGXSessionZoomData>>>::at(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4684 (    0x30) invocation function for block in ZoomManager::get_session_zoom_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef46b4 (    0xd0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::__tree_node<std::__1::__value_type<int, WS::Displays::ZoomData>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WS::Displays::ZoomData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WS::Displays::ZoomData>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4784 (    0x88) ZoomManager::set_display_zoom_data(int, WS::Displays::ZoomData) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef480c (    0xc0) ZoomManager::get_display_zoom_data(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef48cc (   0x120) WSUpdateSessionCursorClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef49ec (     0x8) WSUpdateSessionCursorClipShapeCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef49f4 (    0x4c) SLSGetUnifiedKeyMapping [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4a40 (   0x180) SLSSetUnifiedKeyMapping [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4bc0 (   0x124) unified_key_mapping_new_connection_handler(unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4ce4 (    0x10) unified_key_mapping_changed_notify_proc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4cf4 (    0x78) CGSSetDefaultUchrToCopyOfData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4d6c (    0x78) CGSCharacterGenerationFixup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef4de4 (   0x494) CGSInternalKeyEventTranslate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5278 (   0x110) CGSGetUnicodeForKeyCode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5388 (   0x140) CGSKeyEventTranslate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef54c8 (    0x7c) SLSKeyEventUpdateCharacterTranslation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5544 (    0xec) SLSEventFlagForVirtualKeyCode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5630 (   0x124) (null) [FUNC, FunctionStarts] 
                0x0000000185ef5754 (   0x23c) WSWindowMaskCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5990 (    0x70) resulting_shadow_within_limits(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5a00 (   0x1f4) mask_populate_common(WSWindowMask*&, unsigned long, __CFData const*, unsigned int, unsigned int, CGRect const&, unsigned int, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5bf4 (    0x90) invocation function for block in get_window_mask_cache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5c84 (     0x8) window_mask_hash(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5c8c (    0x14) window_mask_equal(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5ca0 (    0x28) invocation function for block in WSWindowMaskGetTypeID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5cc8 (     0x4) window_mask_copy_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5ccc (    0x7c) window_mask_copy_format_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5d48 (    0x60) window_mask_finalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5da8 (    0xb8) WSDumpWindowMaskCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef5e60 (   0x27c) dump_cache_to_file(__sFILE*, unsigned int, char const*, __CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef60dc (    0x90) invocation function for block in get_window_sfx_mask_cache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef616c (    0x88) invocation function for block in dump_cache_to_file(__sFILE*, unsigned int, char const*, __CFSet const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef61f4 (    0x44) mask_cache_applier_build_summary(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6238 (    0x80) WSWindowMaskGetCGImage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef62b8 (   0x1c0) window_mask_cache_applier_remove_resources(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6478 (    0x78) event_new_connection_handler(unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef64f0 (    0x90) event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6580 (   0x29c) handle_decoded_event(SLSEventRecord*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef681c (    0x70) should_discard_event(SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef688c (   0x130) (anonymous namespace)::IndirectAddressManager::sharedManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef69bc (    0x1c) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<(anonymous namespace)::IndirectAddressManager::sharedManager()::$_0&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef69d8 (    0x6c) tracking_area_removed(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6a44 (   0x11c) SLSRemoveTrackingAreaUserDataHandle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6b60 (    0xd8) unsigned long std::__1::__tree<std::__1::__value_type<long long, long long>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, long long>>>::__erase_unique<long long>(long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6c38 (    0x94) std::__1::__tree<std::__1::__value_type<long long, std::__1::map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<long long const, long long>>>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<long long const, long long>>>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<long long const, long long>>>>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<long long, std::__1::map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<long long const, long long>>>>, std::__1::__tree_node<std::__1::__value_type<long long, std::__1::map<long long, long long, std::__1::less<long long>, std::__1::allocator<st...
                0x0000000185ef6ccc (    0x4c) std::__1::__tree<std::__1::__value_type<long long, long long>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, long long>>>::destroy(std::__1::__tree_node<std::__1::__value_type<long long, long long>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6d18 (    0x78) SLSGetNextEventRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6d90 (   0x1d8) SLSGetNextEventRecordInternal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6f68 (    0x54) dequeue_event(CGSEventQueue*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6fbc (    0x2c) __SLSGetNextEventRecordInternal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef6fe8 (    0x2c) __SLSPeekNextEventRecordInternal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7014 (   0x2f8) SLSAddTrackingAreaUserDataHandles [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef730c (    0xd0) SLSGetHotKeyHandleForID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef73dc (    0xc4) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__tree_node<std::__1::__value_type<unsigned long long, unsigned long long>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, unsigned long long>>>::__emplace_unique_key_args<unsigned long long, unsigned long long const&, unsigned long long const&>(unsigned long long const&, unsigned long long const&, unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef74a0 (   0x1a0) SLSCoalesceEventsInMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7640 (    0x60) SLSGetCoalesceEventsMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef76a0 (    0xa4) SLSSetDockCursorOverride [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7744 (    0xa4) SLSSetSwipeScrollDirection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef77e8 (    0x90) SLSSetBackgroundEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7878 (    0xe0) SLSSetBackgroundEventMaskAndShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7958 (    0x24) __SLSSetBackgroundEventMaskAndShape_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef797c (    0x60) SLSGetBackgroundEventMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef79dc (    0xe0) SLSSetGestureEventSubmask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7abc (    0x50) SLSGetGestureEventSubmask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7b0c (     0x8) SLSExtractEventRecordsFromMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7b14 (    0x4c) SLSGetNextEventRecordFromMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7b60 (   0x2cc) CursorBoundsGroup::assignRects(unsigned int, DisplayRectInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef7e2c (   0x2bc) CursorBoundsGroup::updateUnzoomedCursorTracking(CGPoint, bool, CGAffineTransform) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef80e8 (   0xb90) CursorTrackingInfo::updateCursorPosition(bool, CGPoint, unsigned long long, CGPoint (*)(CGPoint, unsigned long long), bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef8c78 (   0x21c) CursorTrackingInfo::updateCursorRestrictionBounds(bool, CGPoint (*)(CGPoint, unsigned long long)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef8e94 (    0xd0) CursorTrackingInfo::setCursorRestrictionShape(CGSRegionObject*, bool, CGPoint (*)(CGPoint, unsigned long long)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef8f64 (   0x174) CursorTrackingInfo::getCursorDisplayBounds(DisplayRectInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef90d8 (     0xc) -[SLSWMBridgedWindowChildInfo .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef90e4 (     0x8) -[SLSWMBridgedWindowChildInfo setOp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef90ec (     0x8) -[SLSWMBridgedWindowChildInfo op] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef90f4 (     0x8) -[SLSWMBridgedWindowChildInfo setWindow:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef90fc (     0xc) -[SLSWMBridgedWindowChildInfo window] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9108 (    0x58) -[SLSWMBridgedWindow .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9160 (    0xe0) -[SLSWMBridgedWindow window:didUpdateWithChangedProperties:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9240 (   0x120) __60-[SLSWMBridgedWindow window:didUpdateWithChangedProperties:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9360 (    0xb0) SLSWMBridgePerformTransaction(void (WMWindowTransaction*, CAFenceHandle*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9410 (    0x90) SLSWMBridgeDelegate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef94a0 (     0xc) -[SLSWindowManagementFallbackBridge .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef94ac (     0x8) -[SLSWindowManagementFallbackBridge performAsynchronousBridgedWindowManagementOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef94b4 (    0x34) -[SLSWindowManagementFallbackBridge performSynchronousBridgedWindowManagementOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef94e8 (    0xac) -[SLSWindowManagementFallbackBridge performWindowManagementBridgeTransactionUsingBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9594 (    0xb8) -[SLSWindowManagementFallbackBridge init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef964c (    0xa0) -[SLSWMBridgedWindow clearOrderingGroup] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef96ec (   0x184) __40-[SLSWMBridgedWindow clearOrderingGroup]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9870 (   0x150) SLSWMDeferToMainRunLoopAsync(bool, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef99c0 (    0x4c) invocation function for block in SLSWMDeferToMainRunLoopAsync(bool, void () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9a0c (    0x10) __copy_helper_block_ea8_32b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9a1c (    0xa0) -[SLSWMBridgedWindow removeFromParent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9abc (    0x60) __38-[SLSWMBridgedWindow removeFromParent]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9b1c (    0xe4) -[SLSWMBridgedWindow removeChildWindow:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9c00 (   0x160) __40-[SLSWMBridgedWindow removeChildWindow:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9d60 (    0x44) __40-[SLSWMBridgedWindow removeChildWindow:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9da4 (    0xec) -[SLSWMBridgedWindow addChildWindow:ordered:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9e90 (   0x120) __45-[SLSWMBridgedWindow addChildWindow:ordered:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185ef9fb0 (   0x100) -[SLSWMBridgedWindow orderWindow:relativeToID:relativeTo:orderGroup:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa0b0 (   0x288) __69-[SLSWMBridgedWindow orderWindow:relativeToID:relativeTo:orderGroup:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa338 (   0x134) __69-[SLSWMBridgedWindow orderWindow:relativeToID:relativeTo:orderGroup:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa46c (   0x238) -[SLSWMBridgedWindow _rebuildChildWindowInfos] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa6a4 (    0xa4) -[SLSWMBridgedWindow setWindowLevel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa748 (    0x10) __37-[SLSWMBridgedWindow setWindowLevel:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa758 (    0xa8) -[SLSWMBridgedWindow setFrame:forceAsync:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa800 (    0xa4) __42-[SLSWMBridgedWindow setFrame:forceAsync:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa8a4 (   0x128) -[SLSWMBridgedWindow dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efa9cc (    0xc4) __29-[SLSWMBridgedWindow dealloc]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efaa90 (   0x11c) __29-[SLSWMBridgedWindow dealloc]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efabac (   0x110) -[SLSWMBridgedWindow initWithWindowID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efacbc (    0xe0) __39-[SLSWMBridgedWindow initWithWindowID:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efad9c (    0x74) -[SLSSynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) performWithWMBridgeDelegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efae10 (    0x60) -[SLSAsynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) performWithWMBridgeDelegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efae70 (    0x10) SLSWindowManagementBridgeSetDelegate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efae80 (   0x17c) SLSWindowManagementBridgeSetWindowTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efaffc (    0x14) __SLSWindowManagementBridgeSetWindowTags_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb010 (    0xc8) SLSWindowManagementClientOperationsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb0d8 (   0x148) __SLSWindowManagementClientOperationsEnabled_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb220 (    0x98) _SLSPerformSynchronousBridgedWindowManagementOperation(SLSSynchronousBridgedWindowManagementOperation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb2b8 (    0x84) SLSPerformAsynchronousBridgedWindowManagementOperation(SLSAsynchronousBridgedWindowManagementOperation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb33c (     0xc) __SLSWindowManagementBridgeReorderWindows_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb348 (   0x158) __SLSWindowManagementBridgeReorderWindows_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb4a0 (   0x174) std::__1::deque<CGSDatagramReadStream::Invocation, std::__1::allocator<CGSDatagramReadStream::Invocation>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb614 (    0x4c) CGSDatagramReadStream::VMData::release() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb660 (    0x4c) CGSDatagramReadStream::VMData::~VMData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb6ac (   0x108) CGSDatagramReadStream::popMainQueueInvocations() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb7b4 (    0xc4) std::__1::__split_buffer<CGSDatagramReadStream::Invocation*, std::__1::allocator<CGSDatagramReadStream::Invocation*>>::shrink_to_fit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb878 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSDatagramReadStream::Invocation*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSDatagramReadStream::Invocation*>>(std::__1::allocator<CGSDatagramReadStream::Invocation*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb8b0 (    0x3c) invocation function for block in CGSDatagramReadStream::mainQueueWakeup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efb8ec (   0x144) CGSDatagramReadStream::dispatchMainQueueDatagrams() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efba30 (    0x6c) CGSDatagramReadStream::Invocation::invoke() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efba9c (    0x54) renormalize_charcode(unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efbaf0 (    0xcc) keysByCharCodeAndMask(unsigned short, unsigned int, int, WSHotKey**, int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efbbbc (    0xd8) keysByKeyCodeAndMask(unsigned short, unsigned int, int, WSHotKey**, int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efbc94 (   0x194) hot_key_setup_is_untrusted(CGSInputDeviceClass, unsigned int, unsigned short, unsigned short, CGSSymbolicHotKey) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efbe28 (    0xc4) connection_is_trusted(CGXConnection const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efbeec (   0x228) removeHotKey(WSHotKey*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efc114 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185efc124 (   0x21c) addHotKey(CGXConnection*, WSHotKey*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efc340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185efc350 (   0x500) set_hotkey_representation_internal(CGXConnection*, unsigned long long, CGSHotKeyRepresentation, unsigned int, void (*)(CGXConnection*, unsigned long long, SLSEventRecord const*, bool)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efc850 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185efc860 (    0x94) keysByButtonStateAndMask(WSHotButtonBitMask, unsigned int, int, WSHotKey**, int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efc8f4 (    0x70) keysByFlagState(unsigned int, int, WSHotKey**, int*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efc964 (   0x104) fillHotKeyFromRepresentation(WSHotKey*, CGSHotKeyRepresentation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efca68 (    0x50) CGXIsSymbolicHotKeyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efcab8 (   0x19c) keysBySymbolicValue(CGSSymbolicHotKey, int, WSHotKey**, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efcc54 (    0x60) CGXRemoveHotKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efccb4 (   0x7c0) CGXCheckForHotKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efd474 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185efd484 (   0x1b0) sticky_connection_handled_event(CGXSessionEventData*, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efd634 (   0x2c0) hot_key_handle_pressed_event_with_session_data(WSHotKey*, SLSEventRecord const*, CGXSessionEventData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efd8f4 (    0x70) hot_key_handle_released_event(WSHotKey*, SLSEventRecord const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efd964 (   0x254) CGXUpdateGlobalHotKeyOperatingMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efdbb8 (    0x88) secureEventInputStartedProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efdc40 (    0x58) fullScreenAppHotKeyProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efdc98 (   0x164) zapFSKeysForConnection(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efddfc (   0x208) systemHotKeyChangedProc(CGSNotificationType, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efe004 (   0x368) CGXDumpHotKeys [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efe36c (   0x424) listHotKey(__sFILE*, char const*, unsigned int, WSHotKey*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efe790 (   0x128) flagsToString(char*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efe8b8 (   0x124) (anonymous namespace)::allocate_buffer(unsigned long long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efe9dc (    0x50) (anonymous namespace)::deallocate_buffer(unsigned char*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efea2c (    0x58) (anonymous namespace)::buffer_restrict_access(unsigned char*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efea84 (    0x2c) SLSBoundsEqualToBounds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efeab0 (    0xc0) SLSBoundsIntersection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efeb70 (    0xa4) SLSBoundsUnion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efec14 (    0x94) CompositeDestinationCreateCommon [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efeca8 (    0x5c) WSCompositeDestinationGetGamma [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efed04 (    0x28) invocation function for block in WSCompositeDestinationGetTypeID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efed2c (     0x4) composite_destination_copy_debug_description(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efed30 (    0x64) composite_destination_copy_format_description(void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efed94 (    0x8c) composite_destination_finalize(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efee20 (   0x314) WSCompositeDestinationCreateWithIOSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff134 (    0x4c) WSCompositeDestinationRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff180 (    0xf8) WSCompositeDestinationSetEDRFactor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff278 (   0x168) -[SLSFullScreenPidReporter reportFullScreenStatusWithFilter:andHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff3e0 (   0x258) __72-[SLSFullScreenPidReporter reportFullScreenStatusWithFilter:andHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff638 (    0xf0) invocation function for block in with_gamepolicy_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff728 (   0x1e8) invocation function for block in with_gamepolicy_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185eff910 (   0x284) invocation function for block in with_gamepolicy_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effb94 (    0x7c) invocation function for block in with_gamepolicy_connection(void (NSObject<OS_xpc_object>*, NSError*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effc10 (    0x2c) invocation function for block in get_gamepolicy_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effc3c (    0x54) -[SLSFullScreenPidReporter setDisconnectHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effc90 (    0x64) -[SLSFullScreenPidReporter init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effcf4 (    0x78) -[SLSFullScreenPidReporter handleConnectionInterrupt] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effd6c (    0xfc) -[SLSFullScreenPidReporter receiveMessages:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185effe68 (   0x154) __44-[SLSFullScreenPidReporter receiveMessages:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185efffbc (   0x140) __44-[SLSFullScreenPidReporter receiveMessages:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f000fc (    0xd8) __44-[SLSFullScreenPidReporter receiveMessages:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f001d4 (   0x1d8) __44-[SLSFullScreenPidReporter receiveMessages:]_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f003ac (    0x14) -[SLSFullScreenPidReporter equalCurrentSeed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f003c0 (    0x14) -[SLSFullScreenPidReporter incrementSeed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f003d4 (    0xbc) +[SLSFullScreenPidReporter sharedReporter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00490 (    0x24) __42+[SLSFullScreenPidReporter sharedReporter]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f004b4 (    0x28) FanPolygon::~FanPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f004dc (    0xa8) SLPolygon::~SLPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00584 (     0x4) SLPolygon::~SLPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00588 (     0x4) SLPolygon::~SLPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0058c (     0x4) FanPolygon::~FanPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00590 (    0x30) FanPolygon::project_point(CGPoint&, CGPoint&, MoveDir) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f005c0 (    0x28) CenterPolygon::~CenterPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f005e8 (    0xb0) CenterPolygon::~CenterPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00698 (     0x4) CenterPolygon::~CenterPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0069c (   0x578) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00c14 (    0x84) SLPolygon::is_cgpath_contains_point(CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00c98 (    0x28) CurveCornerPolygon::~CurveCornerPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00cc0 (    0xb0) CurveCornerPolygon::~CurveCornerPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00d70 (     0x4) CurveCornerPolygon::~CurveCornerPolygon() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00d74 (   0x1e4) CurveCornerPolygon::project_point(CGPoint&, CGPoint&, MoveDir) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00f58 (     0x4) LinePath::~LinePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00f5c (     0x4) LinePath::~LinePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00f60 (    0x64) LinePath::project_point_horizontal(CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f00fc4 (   0x148) LinePath::project_point_on_path(CGPoint&, CGPoint&, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0110c (    0x1c) LinePath::pt(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01128 (    0xd4) CurvePath::project_point_horizontal(CGPoint&, CGPoint&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f011fc (   0x14c) CurvePath::project_point_on_path(CGPoint&, CGPoint&, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01348 (    0x74) QuadraticCurvePath::dist_dt2(CGPoint&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f013bc (    0x50) QuadraticCurvePath::dist_dt(CGPoint&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0140c (     0x4) QuadraticCurvePath::~QuadraticCurvePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01410 (     0x4) QuadraticCurvePath::~QuadraticCurvePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01414 (    0x30) QuadraticCurvePath::pt(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01444 (    0xac) BezierCurvePath::dist_dt2(CGPoint&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f014f0 (    0x70) BezierCurvePath::dist_dt(CGPoint&, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01560 (     0x4) BezierCurvePath::~BezierCurvePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01564 (     0x4) BezierCurvePath::~BezierCurvePath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01568 (    0x40) BezierCurvePath::pt(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f015a8 (    0xa4) SLSSetCursorRestrictionMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0164c (    0xa4) SLSSetSarlaccPathShow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f016f0 (    0x84) SLSDumpSarlaccCGPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01774 (    0x6c) get_ATLM_restriction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f017e0 (   0x164) invocation function for block in print_sarlacc_path(CGPath const*, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01944 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185f01958 (    0xbc) SLSSetCursorRestrictionOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f01a14 (   0x6c0) WSUpdateCursorRestrictionATLM [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f020d4 (    0x84) restriction_path_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02158 (   0x244) get_simplified_corner_path(CGPath const*, CornerType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0239c (    0xdc) CurveCornerPolygon::CurveCornerPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02478 (    0x24) __Block_byref_object_copy_.23180 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0249c (    0x18) __Block_byref_object_dispose_.23181 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f024b4 (   0x270) invocation function for block in get_simplified_center_path(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02724 (   0x2c0) WSCursorRestriction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f029e4 (    0x68) __WSUpdateCursorRestrictionATLM_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02a4c (    0x80) WSCursorProjectionCorner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02acc (    0xa4) get_cursor_corner_projection(SLPolygon*, CGPoint*, CGPoint*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02b70 (    0xe0) SLPolygon::SLPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f02c50 (   0x774) invocation function for block in CenterPolygon::CenterPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f033c4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185f033d8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<OnePath*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<OnePath*>>(std::__1::allocator<OnePath*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f03410 (    0xdc) FanPolygon::FanPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f034ec (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<FanPolygon*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<FanPolygon*>>(std::__1::allocator<FanPolygon*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f03524 (    0x88) QuadraticCurvePath::QuadraticCurvePath(CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f035ac (    0x8c) BezierCurvePath::BezierCurvePath(CGPoint, CGPoint, CGPoint, CGPoint) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f03638 (   0x408) invocation function for block in FanPolygon::FanPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f03a40 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185f03a54 (    0xd4) invocation function for block in SLPolygon::SLPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f03b28 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000185f03b3c (   0x54c) invocation function for block in CurveCornerPolygon::CurveCornerPolygon(CGPath const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04088 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185f04098 (   0x270) invocation function for block in get_simplified_corner_path(CGPath const*, CornerType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04308 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SLPolygon*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SLPolygon*>>(std::__1::allocator<SLPolygon*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04340 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGPath const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGPath const*>>(std::__1::allocator<CGPath const*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04378 (   0x17c) SLSInitializeTransferTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f044f4 (     0x8) SLSSetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f044fc (   0x460) SLSSetDisplayTransferByTableWithOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0495c (   0x3bc) SLSGetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04d18 (    0x78) interpolate_table [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04d90 (   0x17c) SLSGetDisplayTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f04f0c (   0x1d8) SLSSetDisplayTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f050e4 (   0x158) WSCABindLayerContextIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0523c (   0x140) contextPayloadChanged(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0537c (    0x58) invocation function for block in contextPayloadChanged(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f053d4 (    0xc8) layerkit_perform_on_main_thread(ca_context_notification_info*, void (CGXConnection*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0549c (   0x1b8) invocation function for block in layerkit_perform_on_main_thread(ca_context_notification_info*, void (CGXConnection*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05654 (   0x198) contextDeleted(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f057ec (    0x60) invocation function for block in contextDeleted(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0584c (    0x48) invocation function for block in contextDeleted(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05894 (    0x18) contextWillCommit(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f058ac (   0x138) contextChanged(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f059e4 (    0x1c) invocation function for block in contextChanged(void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05a00 (   0x230) schedule_update_from_context_changed(bool, unsigned int, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05c30 (    0xe8) WSIsPortableMachine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05d18 (   0x104) __WSIsFirstRunSinceBoot_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05e1c (    0x48) __WSIsFirstRunSinceBoot_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05e64 (    0x20) invocation function for block in initialize_hibernate_count() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05e84 (    0xbc) hibernate_count() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05f40 (    0x40) invocation function for block in hibernate_count() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05f80 (    0x44) __is_m1_mac_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f05fc4 (    0x64) WSSessionDisplayUpdateData::GetIntersectingDisplays() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06028 (    0x8c) WSSessionDisplayUpdateData::AddIntersectingDisplays(std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f060b4 (    0x68) did_destroy_session(CGSNotificationType, void*, unsigned int, void*) (.23284) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0611c (    0x78) will_create_session(CGSNotificationType, void*, unsigned int, void*) (.23287) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06194 (   0x1b4) _DDSHMDNextDrawable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06348 (    0x30) _XHMDWakeUp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06378 (    0xd0) _XHMDGetRefreshTiming [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06448 (   0x38c) _XHMDSetWorkInterval [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f067d4 (   0x6c0) _XHMDPresent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f06e94 (   0x7b8) _XHMDNextDrawable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0764c (    0x3c) CGXHMD_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07688 (    0x94) CGXHMD_server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0771c (   0x124) _CGSPostFilteredEventTapData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07840 (   0x1c8) _CGSPlaceTapOnConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07a08 (   0x170) _CGSReleaseEventTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07b78 (   0x1a0) _CGSEventTapIsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07d18 (   0x21c) _CGSConnectionsForPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f07f34 (   0x1d4) _CGSGetEventTapList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08108 (   0x170) _CGSSetEventTapTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08278 (   0x198) _CGSGetEventTapTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08410 (   0x164) _CGSSetEventTapOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08574 (   0x1a0) _CGSCopyWindowDescriptionList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08714 (   0x1dc) _CGSWindowListCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f088f0 (   0x1ec) _CGSSetDebugOptionsPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08adc (   0x168) _XSetWindowBackingStorePixelDimensionsHint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08c44 (   0x128) _XSetZoomForceLockCursorInDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08d6c (    0x5c) _XSetZoomAllowCursorCrossDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08dc8 (   0x144) _XSetWindowBackingStoreOverrideResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08f0c (    0xec) _XGetDebugInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f08ff8 (    0xb8) _XGetWindowServerTimebase [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f090b0 (    0x94) _XConsoleSetUpdatesAllowed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09144 (   0x118) _XWindowListIsDefaultScreenCapturable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0925c (   0x144) _XWindowIDArrayIsDefaultScreenCapturable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f093a0 (    0x30) _XSessionQueueBarrier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f093d0 (   0x3a8) _XHIDEventRecordReplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09778 (   0x250) _XGetHIDEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f099c8 (    0x90) _XConnectionsForPid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09a58 (    0xd4) _XSetUpdateClientPipe [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09b2c (    0xd8) _XCopyColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09c04 (   0x128) _XRegisterColorSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09d2c (    0x44) _XCreateShadowCacheDebugInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f09d70 (   0x2d0) _XCreateWindowDebugInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a040 (    0xf4) _XGetDisplayMaxOpenGLSurfaceSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a134 (   0x314) _XSetDebugOptionsWithDataObtainingPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a448 (    0xa0) _XSetDebugOptionsWithDataObtainingResult [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a4e8 (   0x10c) _XSetDebugOptionsPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a5f4 (   0x1c0) _XGetSymbolicHotKeyRepresentationList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0a7b4 (   0x5a8) _XWindowListCreateImage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ad5c (   0x110) _XWindowListCreateImageFromArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ae6c (   0x1c8) _XWindowListCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b034 (   0x158) _XWindowListCreateDescriptionFromArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b18c (    0xfc) _XCopyWindowDescriptionList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b288 (   0x218) _XSetEventTapOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b4a0 (   0x1c4) _XGetEventSourceState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b664 (   0x1ac) _XCreateEventSourceState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b810 (    0x60) _XGetEventTapTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b870 (    0x58) _XSetEventTapTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0b8c8 (   0x2bc) _XGetEventTapList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0bb84 (    0x90) _XConnectionsForPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0bc14 (   0x19c) _XEventTapSendDataProcessedAck [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0bdb0 (    0xa4) _XEventTapIsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0be54 (   0x240) _XEnableEventTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0c094 (   0x114) _XReleaseEventTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0c1a8 (   0x484) _XPlaceTapOnConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0c62c (   0x4a0) _XPlaceTap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0cacc (    0xc8) _XPostFilteredEventTapDataOOL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0cb94 (    0x98) _XPostFilteredEventTapDataSync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0cc2c (    0x90) _XPostFilteredEventTapData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ccbc (   0x14c) _XGetSessionReadOnceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ce08 (   0x1c0) _XSetSymbolicHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0cfc8 (    0x7c) _XGetSymbolicHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d044 (    0xdc) _XRevealCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d120 (   0x28c) _XObscureCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d3ac (   0x138) _XShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d4e4 (    0xe4) _XHideCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d5c8 (   0x1dc) _XGetSymbolicHotKeyValuesAndStates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d7a4 (   0x1c0) _XSetSymbolicHotKeyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d964 (    0x74) _XIsSymbolicHotKeyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0d9d8 (   0x1e8) _XSetSymbolicHotKeyValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0dbc0 (    0xb0) _XGetSymbolicHotKeyValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0dc70 (    0x58) _XInitialEnableOfDisplayUpdates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0dcc8 (   0x23c) _XSetPerUserConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0df04 (   0x1e8) _XSavePerUserConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e0ec (   0x124) _XGetRealtimeDisplayInfoShmem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e210 (   0x1a0) _XGetEventShmem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e3b0 (   0x13c) _XGLCompositorSettings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e4ec (    0x84) _XSaveConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e570 (    0x5c) _XGetDebugOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e5cc (    0xc0) _XGetLoginName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e68c (    0x90) _XConnectionGetPIDAndVersion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e71c (   0x170) _XNewConnectionPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e88c (    0x3c) CGXWindowServer_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0e8c8 (   0x1e0) _XPostEventTapDataOOL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0eaa8 (   0x1bc) _XPostEventTapData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ec64 (    0x34) CGYEventTap_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ec98 (   0x1a0) _CGSSessionFullScreenAppPid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ee38 (   0x1c8) _CGSTBAcquire [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f000 (   0x1d8) _CGSTBCopyByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f1d8 (   0x1d4) _CGSTBGetSurfaceForIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f3ac (   0x170) _CGSGetRealtimeConsoleDisplayDataShmemPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f51c (   0x1e0) _XFetchSigningKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f6fc (   0x1bc) _XVerifyEventAuthenticationMessageSignature [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0f8b8 (   0x158) _XEstablishBootstrapXPCServiceConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fa10 (   0x104) _XHMDCopyDisplayInfoDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fb14 (    0x88) _XGetRealtimeConsoleDisplayDataShmemPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fb9c (    0xc0) _XDisplayGetActivePresetIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fc5c (   0x108) _XDisplayCopyPreset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fd64 (    0xa8) _XPerformDeferredConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fe0c (    0xc4) _XInitialConfigurationWasDeferred [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0fed0 (   0x104) _XTBCopyDisplayInfoDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f0ffd4 (    0xfc) _XTBGetTotalUpdateCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f100d0 (    0x80) _XTBQueryStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f10150 (    0xa8) _XTBConfigureQueue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f101f8 (    0xa4) _XTBGetSurfaceForIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1029c (    0xa8) _XTBCopyList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f10344 (    0xb0) _XTBCopyByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f103f4 (   0x178) _XTBSetNotificationPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1056c (   0x11c) _XTBRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f10688 (   0x358) _XTBAcquire [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f109e0 (   0x174) _XEstablishScreenTelemetryConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f10b54 (   0x3a4) _XEstablishXPCClientConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f10ef8 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000185f10f18 (   0x198) _XEstablishTimelineConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f110b0 (    0x8c) _XFindSessionAuditSessionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1113c (   0x12c) _XCopySessionClientDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11268 (   0x1dc) _XSetSessionClientDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11444 (   0x148) _XGetConsoleDevices [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1158c (    0x44) _XSetSessionSwitchCubeAnimation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f115d0 (   0x1bc) _XSetSessionSleepWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1178c (   0x180) _XSetSessionScreenLockWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1190c (    0xa8) _XGetSessionPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f119b4 (   0x1a4) _XSessionFullScreenAppPid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11b58 (    0xa0) _XSwitchConsoleToAuditSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11bf8 (   0x170) _XSwitchConsoleToSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11d68 (    0xc4) _XReleaseSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11e2c (   0x11c) _XSpinControlSetNotificationPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f11f48 (   0x13c) _XSessionDeathWatchPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12084 (    0xbc) _XCopySessionList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12140 (   0x2b0) _XCreateSessionWithAuditSessionID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f123f0 (    0xec) _XCreateSession [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f124dc (   0x37c) _XGetCoreGraphicsServerVersion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12858 (    0x3c) CGXRendezvous_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12894 (    0x94) CGXRendezvous_server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12928 (   0x17c) _cgy_DisplayStreamFrameAvailable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f12aa4 (   0x8ac) CGYDisplayStreamNotification_server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13350 (   0x6fc) CGYUpdateInformationNotification_server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13a4c (    0x6c) _XNotifyAppStoppedSpinning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13ab8 (    0x6c) _XNotifyAppStartedSpinning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13b24 (    0x34) CGYSpinControl_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13b58 (   0x15c) _CGSGetWindowAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13cb4 (   0x1a0) _CGSAreEventsCaptured [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f13e54 (   0x3a0) _CGSGetWindowSnappingRects2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f141f4 (   0x184) _CGSInhibitLocalEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14378 (    0x9c) _CGSSetMenuBarAutohideEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14414 (   0x170) _CGSWindowRightsRelinquish [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14584 (   0x1e4) _CGSMoveWorkspaceWindowListWithOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14768 (   0x1ec) _CGSSetSurfaceListAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14954 (   0x15c) _CGSWindowIsVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14ab0 (   0x19c) _CGSSpaceGetCompatID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14c4c (   0x19c) _CGSSpaceGetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14de8 (   0x14c) _CGSSetSpaceManagementMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14f34 (    0xc0) _CGSSpaceMoveSpacersToPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f14ff4 (    0xb8) _CGSWindowListSetLockedBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f150ac (   0x180) _CGSOrderWindowListWithGroups [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1522c (   0x150) _CGSGetSpacePermittedResizeDirections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1537c (   0x148) _CGSTransactionCommitAsync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f154c4 (   0x20c) _CGSTransactionCommitSync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f156d0 (   0x19c) _CGSSpaceGetAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1586c (   0x158) _CGSGetTileSpaceDividerDirections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f159c4 (   0x17c) _CGSTileSpaceSetDividerWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f15b40 (    0xb8) _CGSTileSpaceMoveSpacersForSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f15bf8 (   0x19c) _CGSTileSpaceReplaceWithSnapshotWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f15d94 (   0x1c8) _CGSHMDAcquire [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f15f5c (   0x1d8) _CGSHMDCopyByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16134 (   0x1d4) _CGSHMDGetSurfaceForIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16308 (    0xa8) _CGSSetAppearanceThemeSwitchesAutomatically [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f163b0 (   0x13c) _CGSConnectionBarrier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f164ec (   0x170) _CGSGetRealtimeDisplayDataShmemPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1665c (   0x1a0) _CGSGetUnderscanValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f167fc (   0x18c) _CGSGetUnifiedKeyMapping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16988 (   0x1c8) _CGSGetWindowTransform3D [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16b50 (   0x150) _CGSVirtualDisplayDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16ca0 (    0x9c) _CGSSetSuppressPrivacyIndicatorOnExternalDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16d3c (    0x8c) _XGetWindowBackingStorePixelDimensionsHint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16dc8 (    0x8c) _XGetSuppressPrivacyIndicatorOnExternalDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16e54 (    0x80) _XAllowPrivacyIndicatorSuppression [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16ed4 (    0xb0) _XSetSuppressPrivacyIndicatorOnExternalDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f16f84 (   0x360) _XStatusBarCopyItemLayout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f172e4 (    0xb4) _XPostCoordinatedDistributedNotificationFenced [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17398 (   0x138) _XSetZoomParametersForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f174d0 (   0x104) _XGetZoomParametersForDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f175d4 (    0xa4) _XSetEventInterpolation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17678 (   0x1b0) _XSetPhotosensitivityProcessingEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17828 (   0x1c8) _XDisplaySetDynamicGeometryEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f179f0 (    0xc0) _XDisplayIsDynamicGeometryEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17ab0 (    0xc0) _XDisplaySupportsDynamicGeometry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17b70 (   0x180) _XDisplayCalibrationToolboxCommand [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17cf0 (    0xb0) _XDisplayCalibrationEnd [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17da0 (    0xb0) _XDisplayCalibrationBegin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f17e50 (   0x20c) _XDonateActivationToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1805c (    0xec) _XSelectiveSharingContextSetPresentationDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f18148 (    0x88) _XGetWindowBackingStoreOverrideResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f181d0 (   0xc7c) _XSetFrontProcessWithInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f18e4c (    0xa0) _XVirtualDisplayDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f18eec (   0x10c) _XVirtualDisplayApplySettings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f18ff8 (   0x2fc) _XVirtualDisplayCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f192f4 (    0xa0) _XGetSessionUID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19394 (   0x210) _XDisconnectWindowManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f195a4 (    0xc4) _XGetWindowTransform3D [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19668 (    0xc0) _XContentStreamUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19728 (    0xc0) _XContentStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f197e8 (   0x1d8) _XSetSpaceWindowManagementCapabilities [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f199c0 (   0x144) _XTransactionSetCompletionSemaphore [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19b04 (    0xf0) _XHMDEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19bf4 (   0x178) _XHMDSetEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19d6c (    0xa8) _XGetSpaceNeedsAuxiliaryScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19e14 (    0xc8) _XSetWindowPrefersCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19edc (    0xe4) _XTileSpaceTakeOwnership [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f19fc0 (    0x78) _XGetLastUsedKeyboardID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a038 (    0xb0) _XPersistenceSetSessionBitmapKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a0e8 (    0x98) _XPersistenceSetSessionStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a180 (   0x2e4) _XSelectiveSharingManagerCopyAllSessions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a464 (   0x1ac) _XSelectiveSharingContextCancelPicker [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a610 (   0x1b4) _XSelectiveSharingContextShowPicker [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a7c4 (   0x230) _XSelectiveSharingContextCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1a9f4 (    0x68) _XSetUnifiedKeyMapping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1aa5c (    0x98) _XGetUnifiedKeyMapping [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1aaf4 (   0x224) _XCopySessionSpaceState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ad18 (   0x220) _XCopyWindowCornerMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1af38 (    0xa0) _XSoftwareCursorRequested [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1afd8 (    0xfc) _XResignActiveAppearanceWhileActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1b0d4 (   0x2b8) _XUpdateAssessmentMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1b38c (    0x50) _XSetCursorRestrictionOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1b3dc (   0x4bc) _XDumpSarlaccPath [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1b898 (   0x7a0) _XSetSarlaccPathShow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c038 (    0x64) _XSetCursorRestrictionMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c09c (    0x94) _XSelectiveSharingContextStop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c130 (    0x94) _XSelectiveSharingContextStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c1c4 (   0x318) _XSelectiveSharingContextCopyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c4dc (   0x3c4) _XSelectiveSharingContextSetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1c8a0 (   0x180) _XSelectiveSharingContextCopyMainContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ca20 (    0xf4) _XSelectiveSharingContextDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1cb14 (    0xf0) _XSelectiveSharingContextCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1cc04 (    0xc0) _XDisplayGetPreferHDR10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ccc4 (   0x10c) _XSetChameleonParentWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1cdd0 (   0x228) _XCopyCoordinatedDistributedNotificationFencePort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1cff8 (    0xc0) _XGetUnderscanValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d0b8 (    0xac) _XSetUnderscanValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d164 (   0x104) _XDisplayCopyCalibrationInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d268 (    0xa0) _XDisplayFactoryReset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d308 (    0x98) _XDisplayInvalidateUserAdjustment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d3a0 (    0xc0) _XDisplayIsUserAdjustmentValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d460 (    0xc0) _XDisplayIsUserAdjustmentSupported [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d520 (    0xdc) _XDisplaySetUserAdjustmentData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d5fc (   0x104) _XDisplayCopyUserAdjustmentData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d700 (    0xdc) _XDisplaySetUserAdjustment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d7dc (   0x104) _XDisplayCopyUserAdjustment [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d8e0 (    0xc0) _XDisplayIsThermallyLimited [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1d9a0 (    0xfc) _XDisplayGetUserAdjustmentLuminanceCorrectionFactor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1da9c (    0xfc) _XDisplayGetLuminanceCorrectionFactor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1db98 (    0x9c) _XDisplayResetPreset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1dc34 (    0xec) _XDisplaySetPresetData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1dd20 (   0x108) _XDisplayCopyPresetData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1de28 (    0xec) _XDisplaySetPreset [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1df14 (    0xcc) _XDisplayIsPresetWritable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1dfe0 (    0xcc) _XDisplayIsPresetValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e0ac (    0xcc) _XDisplayCopyPresetUniqueID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e178 (    0xc0) _XDisplayGetPresetCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e238 (    0xc0) _XDisplayGetFactoryDefaultPresetIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e2f8 (    0x9c) _XDisplaySetActivePresetIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e394 (    0xa4) _XDisplaySetHDRModeEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e438 (    0xc0) _XDisplayIsHDRModeEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e4f8 (    0xc0) _XDisplaySupportsHDRMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e5b8 (    0xa0) _XGetRealtimeDisplayDataShmemPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e658 (    0x34) _XIdleDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e68c (    0xb8) _XDisplaysCurrentState_SL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e744 (   0x148) _XCopySystemStatusBarMetrics [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e88c (    0x9c) _XSecureCursorPositionDropAssertion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e928 (    0xcc) _XSecureCursorPositionTakeAssertion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1e9f4 (    0x64) _XEyeCandyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ea58 (    0xdc) _XGetMenuBarVisibilityOverrideOnDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1eb34 (   0x168) _XSetMenuBarVisibilityOverrideOnDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ec9c (   0x288) _XDisplayStreamSidecarTouchBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ef24 (    0x30) _XConnectionBarrier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ef54 (    0xc8) _XHWCaptureStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f01c (    0xa4) _XGetAutomaticAppearanceScheduleOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f0c0 (    0xa0) _XGetAppearanceThemeSwitchesAutomatically [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f160 (   0x2e8) _XSetAppearanceThemeSwitchesAutomatically [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f448 (   0x318) _XScreenTimeSuppressWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f760 (    0x78) _XIsAccessibilityDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f7d8 (    0x70) _XGetZoomDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1f848 (   0x358) _XSetZoomDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1fba0 (    0xe0) _XGetSpaceMenuBarReveal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1fc80 (   0x2f4) _XWindowSetSurfaceContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f1ff74 (   0x10c) _XGetSurfaceFrontBufferID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20080 (   0x1b8) _XCoordinatedDistributedNotificationMarkCompletion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20238 (    0x90) _XPostCoordinatedDistributedNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f202c8 (    0xec) _XWindowSetTrustedForObscuring [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f203b4 (   0x120) _XValidateUnobscuredRemoteRegionSecurityToken [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f204d4 (   0x184) _XUpdateLastEventTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20658 (    0x84) _XReenableCursorObscure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f206dc (   0x10c) _XDisableCursorObscure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f207e8 (   0x140) _XSetWindowCursorRestrictionShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20928 (   0x624) _XWindowQuery [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20f4c (    0x98) _XDisplayChangedSeedCheckValidity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f20fe4 (   0x110) _XHMDGetTotalUpdateCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f210f4 (    0x80) _XHMDQueryStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21174 (    0xa8) _XHMDConfigureQueue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2121c (    0xa4) _XHMDGetSurfaceForIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f212c0 (    0xa8) _XHMDCopyList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21368 (    0xb0) _XHMDCopyByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21418 (   0x1b8) _XHMDSetNotificationPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f215d0 (    0xa8) _XHMDRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21678 (   0x2c0) _XHMDAcquire [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21938 (   0x174) _XTrackingRegionSetRespectsSystemAlphaThreshold [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21aac (   0x140) _XCopyWindowsWithOptionsAndTagsAndSpaceOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21bec (   0x188) _XSetCursorRegionLock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21d74 (   0x158) _XSetCursorDragLock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21ecc (    0xe0) _XGetDevices [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f21fac (   0x428) _XSetAccessibilityAdjustments [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f223d4 (    0xf8) _XTileSpaceReplaceWithSnapshotWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f224cc (    0x68) _XEnsureSpaceSwitchToActiveProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22534 (    0x5c) _XStall [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22590 (   0x1b0) _XTileSpaceMoveSpacersForSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22740 (   0x168) _XTileSpaceSetDividerWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f228a8 (    0xf4) _XGetTileSpaceDividerDirections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2299c (    0xc0) _XReserveStructuralRegionIDRange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22a5c (    0xb8) _XWindowSetActiveShadowLegacy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22b14 (    0xa4) _XSpaceSetAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22bb8 (   0x110) _XSpaceGetAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22cc8 (    0x78) _XGetSystemUIHasRTLDirection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22d40 (    0x5c) _XSetSystemUIHasRTLDirection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22d9c (   0x12c) _XGetMenuBarUsesRTLLayoutOnDisplayLegacy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22ec8 (    0x84) _XGetWindowSubLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22f4c (    0xa8) _XSetWindowSubLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f22ff4 (    0xf8) _XSpaceAddWindowsAndRemoveFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f230ec (    0xf4) _XTransactionCommitSync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f231e0 (    0xf4) _XTransactionCommitAsync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f232d4 (    0x74) _XInterruptMenuBarReveal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23348 (   0x250) _XGetSpacePermittedResizeDirections [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23598 (    0xfc) _XOrderWindowListWithGroups [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23694 (    0xbc) _XWindowListSetLockedBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23750 (   0x5f4) _XSpaceGetSizeForProposedTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23d44 (   0x138) _XSpaceCopyTileSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23e7c (   0x108) _XSpaceFinishedResizeForRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f23f84 (   0x194) _XSpaceMoveSpacersToPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24118 (   0x224) _XSpaceGetSpacersAtPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2433c (    0xe4) _XSpaceCanCreateTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24420 (    0xa4) _XSpaceTileMoveToSpaceAtIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f244c4 (    0xa0) _XSpaceSetInterTileSpacing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24564 (    0xe0) _XSpaceGetInterTileSpacing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24644 (    0xd8) _XSpaceSetEdgeReservation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2471c (   0x164) _XSpaceCreateTile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24880 (    0x94) _XWindowGetPrimarySpaceRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24914 (    0x8c) _XSpaceGetRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f249a0 (    0x70) _XSpaceSetOrderingWeight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24a10 (   0x1e4) _XPackagesRemoveWindowDragTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24bf4 (   0x238) _XPackagesSetWindowDragTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24e2c (    0xfc) _XPackagesGetWindowConstraints [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f24f28 (   0x214) _XPackagesSetWindowConstraints [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2513c (   0x194) _XPackagesSetFindCursorPrefs [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f252d0 (   0x354) _XWindowRoutingRecordsForScreenLocation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25624 (   0x114) _XSetGlobalForceConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25738 (   0x16c) _XTrackingRegionSetForceConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f258a4 (    0xac) _XTrackingRegionSetIsEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25950 (   0x26c) _XStructuralRegionSetChildRegionTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25bbc (    0xac) _XStructuralRegionSetClippedByWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25c68 (    0xa8) _XStructuralRegionSetEventMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25d10 (   0x15c) _XStructuralRegionSetLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25e6c (    0xb4) _XStructuralRegionMove [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f25f20 (   0x11c) _XStructuralRegionSetShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2603c (    0xa0) _XRemoveStructuralRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f260dc (   0x464) _XAddStructuralRegionOfType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26540 (   0x1a4) _XSetPressureConfigurationOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f266e4 (   0x144) _XActuateDeviceWithPattern [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26828 (   0x120) _XSetIOHIDEventSystemClientProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26948 (   0x1a0) _XCopyManagedDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26ae8 (    0xac) _XServerMightHaveAcceleration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26b94 (    0x38) _XWindowThaw [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26bcc (    0x38) _XWindowFreezeWithOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26c04 (    0xe0) _XSetWindowListFadeProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26ce4 (    0x70) _XPackagesAssignDraggedWindowToDestinationSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26d54 (    0x6c) _XSpacePreferCurrentDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26dc0 (    0xc4) _XConnectionSetSpinning [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26e84 (    0x7c) _XGetDisplayReconfigureTimeWhenWindowsLastMoved [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26f00 (    0x64) _XDeferWindowMoveEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f26f64 (   0x260) _XSetConnectionNotifyInterests [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f271c4 (   0x4ec) _XSetProcessNotifyInterests [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f276b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185f276c0 (   0x168) _XManagedDisplaySetRoleWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27828 (   0x308) _XManagedDisplaysCopyRoleWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27b30 (   0x124) _XReassociateWindowsSpacesByGeometry [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27c54 (   0x118) _XMoveWindowsToManagedSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27d6c (    0xc8) _XManagedDisplayCurrentSpaceAllowsWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27e34 (    0xa0) _XCopyManagedDisplayForSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27ed4 (    0x98) _XCopyManagedDisplayForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f27f6c (   0x110) _XCopyBestManagedDisplayForRect [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2807c (    0xcc) _XCopyBestManagedDisplayForPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f28148 (   0x148) _XGetRevealedMenuBarBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f28290 (   0x1f0) _XSetActiveMenuBarDisplayIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f28480 (   0xb28) _XRestorePackagesManagementPersistenceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f28fa8 (   0x3f0) _XCopyPackagesPersistenceDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29398 (    0xf0) _XSpaceCopyManagedShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29488 (    0x68) _XManagedDisplaySetIsAnimating [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f294f0 (    0x64) _XManagedDisplaySetCurrentSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29554 (   0x16c) _XMoveManagedSpaceToDisplayIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f296c0 (   0x100) _XCopyManagedDisplaySpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f297c0 (    0x5c) _XSetSpaceManagementMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2981c (    0x70) _XProcessAssignToAllSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2988c (    0x9c) _XProcessAssignToSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29928 (    0x78) _XSpaceSetFrontPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f299a0 (    0x5c) _XSpaceResetMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f299fc (   0x114) _XSpaceWithName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29b10 (    0x6c) _XSpaceSetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29b7c (    0x84) _XSpaceGetAbsoluteLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29c00 (    0xb0) _XSpaceSetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29cb0 (   0x160) _XSpaceGetTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29e10 (   0x124) _XSpaceSetShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f29f34 (   0x134) _XSpaceCopyShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a068 (    0xec) _XSpaceRemoveOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a154 (    0xf0) _XSpaceAddOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a244 (   0x160) _XSpaceSetOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a3a4 (    0xe0) _XSpaceCopyOwners [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a484 (    0x6c) _XSpaceSetCompatID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a4f0 (    0x84) _XSpaceGetCompatID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a574 (    0x84) _XSpaceGetType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a5f8 (    0xe4) _XSpaceSetName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a6dc (    0xe0) _XSpaceCopyName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a7bc (   0x194) _XSpaceRemoveValuesForKeys [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2a950 (   0x178) _XSpaceSetValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2aac8 (   0x114) _XSpaceCopyValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2abdc (    0x98) _XSpaceDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ac74 (   0x130) _XSpaceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ada4 (    0xec) _XCopyAssociatedWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ae90 (   0x1b0) _XCopyWindowsWithOptionsAndTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b040 (   0x168) _XCopySpacesForWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b1a8 (    0xdc) _XCopySpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b284 (    0xf4) _XHideSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b378 (    0xf4) _XShowSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b46c (    0xf4) _XWillSwitchSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b560 (    0xc8) _XRemoveWindowsFromSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b628 (    0xc8) _XAddWindowsToSpaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b6f0 (    0xfc) _XResetWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b7ec (   0x1f4) _XSetUpdateInfoHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2b9e0 (    0xc4) _XDisplayStreamDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2baa4 (    0xe4) _XDisplayStreamStop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bb88 (    0xdc) _XDisplayStreamStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bc64 (    0xd8) _XDisplayStreamCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bd3c (    0xbc) _XWindowIsVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bdf8 (    0xc8) _XWindowIsOrderedIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bec0 (    0x6c) _XSetMenuBarSystemOverrideAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bf2c (    0xa0) _XWasBootApplePreserved [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2bfcc (   0x184) _XTakeCinematicBootWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2c150 (   0x1b8) _XSetChameleonOverrideColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2c308 (   0x2a0) _XSetSurfaceListAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2c5a8 (   0x208) _XPackagesGetWorkspaceForWorkspaceIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2c7b0 (   0x158) _XPackagesGetWorkspaceIdentifierForWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2c908 (   0x1f0) _XGetMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2caf8 (   0x318) _XGetRegisteredCursorImages [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ce10 (   0x190) _XRegisterCursorImages [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2cfa0 (   0x120) _XIsMenuBarVisibleOnSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2d0c0 (   0x17c) _XSetMenuBarCompanionWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2d23c (   0x148) _XSetMenuBars [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2d384 (    0x68) _XSetMenuBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2d3ec (   0x5e8) _XMoveWorkspaceWindowListWithOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2d9d4 (   0x214) _XGetProcessMenuBarWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2dbe8 (    0xac) _XGetMagicZoomWindowID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2dc94 (   0x1a0) _XGetMagicZoomState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2de34 (   0xbf8) _XSetMagicZoom [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ea2c (   0x158) _XCreateApplication [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2eb84 (    0xe8) _XGetSurfaceResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ec6c (    0xa8) _XSetSurfaceResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ed14 (    0x8c) _XGetWindowResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2eda0 (    0xac) _XSetWindowResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ee4c (   0x414) _XHWCaptureDisplayIntoIOSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2f260 (   0x1d0) _XWindowRightsRelinquish [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2f430 (   0x158) _XGetHeldWindowRights [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2f588 (   0x23c) _XCompleteWindowRightsGrant [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2f7c4 (   0x3f8) _XGrantConnectionRightsOnWindowReserving [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2fbbc (    0x9c) _XPackagesEnableConnectionWindowModificationNotifications [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2fc58 (    0xc8) _XPackagesEnableWindowOcclusionNotifications [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2fd20 (    0x9c) _XPackagesEnableConnectionOcclusionNotifications [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2fdbc (    0x58) _XPersistenceAnnounceAllAppsReady [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2fe14 (    0xa8) _XPersistenceWillLaunchApps [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2febc (    0xd8) _XSetWindowListWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f2ff94 (    0x70) _XSetSwipeScrollDirection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f30004 (    0x70) _XSetDockCursorOverride [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f30074 (    0xa8) _XSetWindowLayerContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3011c (   0x3e8) _XCreateWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f30504 (   0x104) _XSetWindowRegionInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f30608 (   0x144) _XSessionHasExcludeShapes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3074c (   0x184) _XSetWindowBackgroundBlurRadius [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f308d0 (   0x3bc) _XHWCaptureWindowListToIOSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f30c8c (   0x400) _XHWCaptureDesktop [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3108c (    0xec) _XSetWindowListSystemLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31178 (   0x1b4) _XSetPreferencesForWorkspaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3132c (   0x160) _XGetSurfaceColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3148c (    0xa8) _XSetSurfaceColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31534 (    0x84) _XGetWindowColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f315b8 (    0x9c) _XSetWindowColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31654 (    0x68) _XSetGestureEventSubmask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f316bc (   0x324) _XSetWindowShadowParametersWithStretch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f319e0 (    0xe4) _XSetWindowParent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31ac4 (   0x264) _XDequeueHideOrShowServiceReq [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31d28 (    0x84) _XGetDockRectWithReason [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31dac (    0x64) _XSetDockRectWithReason [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31e10 (    0xa4) _XGetSymbolicHotKeyEnabledForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f31eb4 (   0x180) _XSetSymbolicHotKeyEnabledForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32034 (    0xf8) _XCreateLayerContext [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3212c (   0x10c) _XShapeWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32238 (   0x1fc) _XGetParentWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32434 (   0x108) _XSetNotificationConnectionForWorkspaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3253c (   0x188) _XSetApplicationBindingsForWorkspaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f326c4 (    0x94) _XRemoveWindowCaptureExcludeShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32758 (   0x10c) _XSetWindowCaptureExcludeShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32864 (    0x90) _XGetProcessValidity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f328f4 (    0xc8) _XGetConnectionPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f329bc (   0x234) _XSetTrackingAreaOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32bf0 (   0x110) _XOrderWindowListWithOperation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32d00 (   0x294) _XFetchFlushedAndMovedScreenRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f32f94 (    0xfc) _XRemoveWindowListGlobalClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33090 (    0xb0) _XSetHotKeyType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33140 (    0xb0) _XGetHotKeyType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f331f0 (    0xdc) _XSetWindowListGlobalClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f332cc (   0x5b8) _XScrollWindowRegionInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33884 (   0x138) _XSetKeyTranslationTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f339bc (   0x12c) _XSetWindowEventShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33ae8 (   0x148) _XSetWindowCIFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33c30 (   0x2ac) _XSetCIFilterValues [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33edc (    0xb0) _XReleaseCIFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f33f8c (   0x1f4) _XNewCIFilter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34180 (    0xfc) _XSetPrimaryConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3427c (    0x6c) _XReleaseTransition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f342e8 (    0xd0) _XInvokeTransition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f343b8 (   0x1c0) _XNewTransition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34578 (   0x11c) _XSetHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34694 (   0x140) _XGetHotKeyRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f347d4 (   0x100) _XUpdateSessionWorkspaceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f348d4 (    0xc8) _XAckNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3499c (    0xdc) _XGetSpecifiedWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34a78 (    0x90) _XGetGlobalHotKeyOperatingMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34b08 (    0x6c) _XSetGlobalHotKeyOperatingMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34b74 (   0x100) _XSetSymbolicHotKeyWithOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34c74 (    0x9c) _XCoalesceEventsInMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34d10 (   0x148) _XEventAppUnresponsiveStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34e58 (    0x5c) _XEventSetAppIsUnresponsiveNotificationTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34eb4 (   0x118) _XGetInkingState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f34fcc (   0x184) _XSetInkingState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35150 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000185f35160 (    0x68) _XRemoveHotKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f351c8 (    0xd4) _XSetHotKeyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3529c (    0xb0) _XGetHotKeyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3534c (   0x3d4) _XSetHotKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35720 (    0xdc) _XGetHotKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f357fc (    0x70) _XTrackDirtyScreenRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3586c (   0x360) _XCycleWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35bcc (    0x50) _XSetLastDeactivated [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35c1c (    0xb4) _XSetWindowLevelForGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35cd0 (    0xb8) _XRemoveWindowFromWindowOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35d88 (    0xf8) _XAddWindowToWindowOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35e80 (    0xb0) _XClearWindowOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f35f30 (    0xe8) _XRemoveWindowFromWindowMovementGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36018 (    0xe8) _XAddWindowToWindowMovementGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36100 (    0xc0) _XClearWindowMovementGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f361c0 (   0x100) _XGetWindowOrderingGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f362c0 (   0x100) _XGetWindowMovementGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f363c0 (   0x120) _XSetWindowOriginRelativeToWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f364e0 (   0x118) _XPackagesRemoveWindowFromDraggingSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f365f8 (   0x1b8) _XPackagesAddWindowToDraggingSpace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f367b0 (    0x70) _XPackagesDragWindowRelativeToMouse [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36820 (   0x148) _XGetConnectionProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36968 (   0x120) _XSetConnectionProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36a88 (    0x60) _XReorderWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36ae8 (    0xbc) _XSetWindowHasMainAppearance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36ba4 (    0xbc) _XSetWindowHasKeyAppearance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36c60 (    0x88) _XSetFrontWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36ce8 (    0x80) _XGetAppearanceTheme [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36d68 (   0x1d0) _XSetAppearanceTheme [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36f38 (    0x7c) _XGetMenuBarAutohideEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f36fb4 (    0xc4) _XSetMenuBarAutohideEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37078 (    0x64) _XGetActiveMenuBarDrawingStyle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f370dc (    0x8c) _XSetMenuBarDrawingStyle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37168 (    0x64) _XMenuBarExists [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f371cc (    0x6c) _XOrderFrontConditionally [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37238 (   0x138) _XDoDeferredOrdering [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37370 (    0x80) _XBlockWindowOrdering [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f373f0 (    0x7c) _XGetConnectionIDForPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3746c (    0xd0) _XSetTrackingAreaClip [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3753c (   0x1d4) _XSetTrackingAreasEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37710 (    0xc8) _XSetTrackingAreaEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f377d8 (    0xa0) _XRemoveAllTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37878 (   0x1b8) _XRemoveTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37a30 (    0xb4) _XRemoveTrackingArea [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37ae4 (    0xd8) _XMoveTrackingArea [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37bbc (   0x154) _XAddTrackingAreas [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37d10 (   0x1c8) _XAddTrackingArea [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f37ed8 (   0x14c) _XSetTrackingAreaShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38024 (   0x114) _XDeleteWindowRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38138 (   0x120) _XSetWindowRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38258 (   0x138) _XSetDefaultBootstrapPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38390 (   0x160) _XSetMainApplicationConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f384f0 (   0x118) _XSetAuxConn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38608 (    0x90) _XBringNextToFront [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38698 (   0x118) _XGetNextToFrontProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f387b0 (    0xe0) _XExitSpecialKeyMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38890 (   0x15c) _XGetKeyBinding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f389ec (   0x108) _XUnoverrideKeyRegistration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38af4 (   0x100) _XOverrideKeyRegistration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38bf4 (    0x64) _XRegisterForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f38c58 (   0x3d0) _XAppShowHideOp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39028 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000185f39040 (    0xfc) _XGetWindowRightHolderPSN [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3913c (   0x6d4) _XCompleteServiceReq [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39810 (    0xec) _XGetTypingFocusProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f398fc (    0xdc) _XGetKeyFocusProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f399d8 (    0x60) _XReleaseKeyFocusWithID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39a38 (    0x84) _XStealKeyFocusReturningID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39abc (    0x80) _XModifyKeyFocus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39b3c (    0x68) _XGetCursorScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39ba4 (    0x98) _XSetCursorScale [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39c3c (   0x14c) _XRemoveRegisteredCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39d88 (   0x168) _XGetRegisteredCursorData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f39ef0 (   0x12c) _XGetRegisteredCursorDataSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a01c (   0x168) _XRegisterCursorWithData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a184 (    0xd8) _XIsCursorRegistered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a25c (    0xd4) _XSetRegisteredCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a330 (    0x88) _XForceWaitCursorActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a3b8 (   0x108) _XAssociateMouseAndMouseCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a4c0 (    0xd8) _XInhibitLocalEvents [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a598 (   0x1c4) _XWarpCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a75c (    0x9c) _XPostNotificationToConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a7f8 (    0x90) _XPostBroadcastNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a888 (   0x140) _XPostEventRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3a9c8 (   0x124) _XPostEventRecordTo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3aaec (   0x23c) _XSetNotifications [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ad28 (    0x64) _XSetFrontProcess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ad8c (   0x228) _XGetPortStreamOutofline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3afb4 (   0x10c) _XGetWorkspaceWindowGroup [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b0c0 (    0x7c) _XGetWindowWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b13c (    0x64) _XGetWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b1a0 (   0x1b8) _XSetWorkspace [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b358 (   0x18c) _XZoomTransformPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b4e4 (   0x134) _XSetZoomParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b618 (   0x130) _XGetZoomParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b748 (   0x15c) _XGetSurfaceBinding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b8a4 (   0x10c) _XDeleteSurfaceProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3b9b0 (   0x120) _XSetSurfaceProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bad0 (    0xe4) _XSetSurfaceLayerBackingOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bbb4 (   0x16c) _XGetSurfaceOpacity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bd20 (    0xac) _XSetSurfaceOpacity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bdcc (    0xcc) _XGetSurfaceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3be98 (    0x98) _XGetSurfaceCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bf30 (    0xb8) _XGetSurfaceBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3bfe8 (    0xa4) _XShapeSurfaceInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c08c (    0xc0) _XShapeSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c14c (    0xac) _XFlushSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c1f8 (    0x98) _XFlushSurfaceInline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c290 (    0xac) _XOrderSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c33c (   0x264) _XMoveSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c5a0 (    0xc0) _XBindSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c660 (    0x98) _XRemoveAllSurfaces [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c6f8 (    0xa0) _XRemoveSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c798 (   0x18c) _XAddSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c924 (    0xa0) _XSetMouseEventEnableFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3c9c4 (    0xa8) _XSetMouseFocusWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ca6c (    0xa0) _XSetSecureEventInput [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3cb0c (   0x2d8) _XSynchronizeWindowBackingStore [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3cde4 (    0xb4) _XSetWindowAutofillColor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ce98 (   0x170) _XGetWindowBackingPort [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d008 (    0xf8) _XGetWindowBackingInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d100 (   0x184) _XGetWindowShmemReference [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d284 (   0x154) _XFlushRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d3d8 (    0x6c) _XSetSystemStatusBarWindowSubitemOffsets [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d444 (    0x70) _XAdjustSystemStatusBarWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d4b4 (    0xb4) _XUnregisterWindowWithSystemStatusBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d568 (   0x2f4) _XSystemStatusBarNavigateFromWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d85c (    0x84) _XSystemStatusBarGetCurrentNavigationWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d8e0 (    0xdc) _XSystemStatusBarWindowIsDraggedOutOfBar [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3d9bc (    0xdc) _XSystemStatusBarGetWindowPreferredPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3da98 (    0xb0) _XSystemStatusBarRegisterReplicantWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3db48 (    0xb0) _XSystemStatusBarRegisterWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3dbf8 (    0xa8) _XRequestNotificationsForWindows [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3dca0 (    0xbc) _XGetWindowOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3dd5c (   0x188) _XSetSharedWindowState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3dee4 (    0x74) _XGetOnScreenWindowCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3df58 (   0x158) _XGetWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e0b0 (    0xf4) _XGetWindowListWithTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e1a4 (    0xd8) _XSnappingInfoSetPrefs [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e27c (   0x434) _XGetWindowSnappingRects2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e6b0 (   0x15c) _XGetWindowCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e80c (    0x8c) _XGetWindowHasAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e898 (    0x74) _XSetWindowHasAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3e90c (   0x108) _XGetWindowFrameBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ea14 (   0x108) _XGetWindowShapeBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3eb1c (    0xb4) _XGetWindowShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ebd0 (    0xb8) _XSetWindowIsOneShot [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ec88 (    0x68) _XSetEventCapture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ecf0 (    0xac) _XAreEventsCaptured [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ed9c (   0x1c0) _XSetBackgroundEventMaskAndShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ef5c (    0x84) _XGetWindowEventMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3efe0 (    0xa0) _XSetWindowEventMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f080 (   0x1dc) _XGetWindowProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f25c (   0x110) _XDeleteWindowProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f36c (   0x120) _XSetWindowProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f48c (    0x80) _XGetWindowTags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f50c (    0x8c) _XGetPerformanceUpdateCountPerDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f598 (    0x80) _XGetPerformanceTotalUpdateCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f618 (   0x214) _XGetPerformanceData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f82c (    0x80) _XGetWindowAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f8ac (    0xbc) _XSetWindowListAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3f968 (    0xc4) _XSetWindowListSystemAlpha [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3fa2c (   0x168) _XReenableUpdateForConnectionSync [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3fb94 (    0x70) _XDisableUpdateForConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3fc04 (    0xbc) _XSetWindowListBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3fcc0 (   0x1b4) _XGetWindowTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3fe74 (   0x178) _XSetWindowTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f3ffec (    0xc8) _XSetWindowTransformList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f400b4 (   0x178) _XSetWindowWarp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4022c (    0xb4) _XGetWindowClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f402e0 (   0x134) _XSetWindowClipShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40414 (   0x104) _XGetScreenRectForWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40518 (   0x284) _XSetWindowCornerMask [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4079c (    0xb8) _XGetWindowShadowParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40854 (   0x124) _XSetWindowOpaqueShape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40978 (   0x138) _XWindowSetShadowProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40ab0 (    0x9c) _XInvalidateWindowShadow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40b4c (    0x84) _XGetWindowDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40bd0 (    0x9c) _XSetWindowDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40c6c (    0x90) _XGetWindowIsBuffered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f40cfc (   0x430) _XSetWindowIsBuffered [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4112c (    0xc8) _XGetWindowRightHolder [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f411f4 (    0xd0) _XGetSystemWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f412c4 (   0x128) _XFindWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f413ec (    0x84) _XGetWindowLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41470 (    0xa8) _XSetWindowLevel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41518 (   0x104) _XOrderWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4161c (    0xfc) _XOrderWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41718 (   0x138) _XMoveWindowListOnMatchingDisplayChangedSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41850 (   0x178) _XMoveWindowList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f419c8 (   0x11c) _XMoveWindowOnMatchingDisplayChangedSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41ae4 (   0x16c) _XMoveWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41c50 (    0x98) _XTerminateWindow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41ce8 (   0x204) _XSetLoginNameAndParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f41eec (   0x42c) _XSetLoginwindowConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42318 (   0x170) _XSetOtherUniversalConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42488 (   0x330) _XSetUniversalOwner [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f427b8 (    0x38) _XEventPing [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f427f0 (    0x3c) CGXServices_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4282c (   0x11c) CGYHMDNotification_server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42948 (   0x170) _WSSSetDisplayColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42ab8 (   0x178) _WSSDisplayGetRefreshTiming [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42c30 (   0x1d8) _WSSCopyDisplayInfoDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42e08 (    0xd8) _XMainDisplayBoundsIgnoringCapture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42ee0 (   0x104) _XCopyDisplayInfoDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f42fe4 (    0xb8) _XMachineSupportsLowPowerVideo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4309c (    0x88) _XAirDisplayOffline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43124 (    0xfc) _XAirDisplayOnline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43220 (    0xd0) _XDisplayGetRefreshTiming [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f432f0 (   0x104) _XSetDisplayColorProfileAndTransfer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f433f4 (    0x9c) _XSetDisplayColorProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43490 (    0x9c) _XSetDisplayContrast [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4352c (    0xe8) _XDisplayFade [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43614 (    0x98) _XReleaseDisplayFadeReservation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f436ac (    0xc8) _XAcquireDisplayFadeReservation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43774 (    0xb8) _XIsHDRSupported [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4382c (    0xb8) _XIsHDREnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f438e4 (    0x9c) _XEnableHDR [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43980 (    0xc0) _XGetDisplayMaximumHDRValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43a40 (    0xd0) _XGetDisplayBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43b10 (    0xd0) _XSetDisplayBrightness [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43be0 (    0xe4) _XDisplayVisualBell [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43cc4 (   0x10c) _XCompleteDisplayConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43dd0 (   0x104) _XSetDisplayTransferByFormula [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43ed4 (    0xf4) _XSetDisplayTransferByTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f43fc8 (    0xac) _XSetDisplayIntentionWiper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44074 (    0xe0) _XSetDisplayIntention [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44154 (    0x98) _XIsAmbientDisplayEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f441ec (    0x9c) _XEnableAmbientDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44288 (    0xbc) _XSetDisplayOption [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44344 (    0x9c) _XSetDisplayRotation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f443e0 (    0x9c) _XInitializeGamma [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4447c (    0x3c) ServicesRelocated_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f444b8 (   0x1a0) _WSSGetSizeOfDisplayTransfer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44658 (    0x94) _WSSInvoke74155833 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f446ec (    0xa0) _XInvoke74155833 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f4478c (    0xdc) _XAcceleratorForHMD [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44868 (    0x9c) _XInvoke77298158 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44904 (    0xf4) _XGetDisplayShmem [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f449f8 (   0x100) _XAcceleratorForDisplayNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44af8 (    0xe8) _XServiceForDisplayNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44be0 (   0x104) _XGetDisplaySystemState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44ce4 (    0xc0) _XGetDisplayTransferByFormula [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44da4 (   0x104) _XGetDisplayTransferByTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44ea8 (    0xc0) _XGetSizeOfDisplayTransfer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44f68 (    0x3c) ServerRelocated_server_routine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44fa4 (    0x24) _GLOBAL__sub_I_SLSCALocalDisplay.mm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44fc8 (    0x30) _GLOBAL__sub_I_Updater.cc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f44ff8 (    0x70) __cxx_global_var_init [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45068 (    0x78) __cxx_global_var_init.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f450e0 (    0x70) __cxx_global_var_init.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45150 (    0x78) __cxx_global_var_init.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f451c8 (    0x70) __cxx_global_var_init.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45238 (    0x78) __cxx_global_var_init.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f452b0 (    0x70) __cxx_global_var_init.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45320 (    0x78) __cxx_global_var_init.7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45398 (    0x70) __cxx_global_var_init.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000185f45408 (    0x78) __cxx_global_var_init.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x0000000185f45480 (  0x5810) __TEXT __auth_stubs
                0x0000000185f45480 (    0x10) DYLD-STUB$$CACurrentMediaTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45490 (    0x10) DYLD-STUB$$CAFenceBatchWaitLockAcquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454a0 (    0x10) DYLD-STUB$$CAFenceBatchWaitLockRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454b0 (    0x10) DYLD-STUB$$CAGetDebugOption [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454c0 (    0x10) DYLD-STUB$$CARenderBackdropCollect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454d0 (    0x10) DYLD-STUB$$CARenderContextById [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454e0 (    0x10) DYLD-STUB$$CARenderContextCanZombify [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f454f0 (    0x10) DYLD-STUB$$CARenderContextCopyBoundsRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45500 (    0x10) DYLD-STUB$$CARenderContextCopyClientAnnotation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45510 (    0x10) DYLD-STUB$$CARenderContextCopyOpaqueRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45520 (    0x10) DYLD-STUB$$CARenderContextCopyPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45530 (    0x10) DYLD-STUB$$CARenderContextCopyProcessPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45540 (    0x10) DYLD-STUB$$CARenderContextDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45550 (    0x10) DYLD-STUB$$CARenderContextGetBeginTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45560 (    0x10) DYLD-STUB$$CARenderContextGetChangedSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45570 (    0x10) DYLD-STUB$$CARenderContextGetColorspace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45580 (    0x10) DYLD-STUB$$CARenderContextGetCommitSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45590 (    0x10) DYLD-STUB$$CARenderContextGetEventMask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455a0 (    0x10) DYLD-STUB$$CARenderContextGetGeometrySeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455b0 (    0x10) DYLD-STUB$$CARenderContextGetId [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455c0 (    0x10) DYLD-STUB$$CARenderContextGetInputTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455d0 (    0x10) DYLD-STUB$$CARenderContextGetPayloadSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455e0 (    0x10) DYLD-STUB$$CARenderContextGetProcessId [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f455f0 (    0x10) DYLD-STUB$$CARenderContextGetRemoteInputMachTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45600 (    0x10) DYLD-STUB$$CARenderContextGetRequestsFrameStallSkip [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45610 (    0x10) DYLD-STUB$$CARenderContextGetServerPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45620 (    0x10) DYLD-STUB$$CARenderContextGetTransactionSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45630 (    0x10) DYLD-STUB$$CARenderContextHitTest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45640 (    0x10) DYLD-STUB$$CARenderContextInvalidateRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45650 (    0x10) DYLD-STUB$$CARenderContextLock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45660 (    0x10) DYLD-STUB$$CARenderContextNew [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45670 (    0x10) DYLD-STUB$$CARenderContextSetBeginTimeThreshold [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45680 (    0x10) DYLD-STUB$$CARenderContextSetCanZombify [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45690 (    0x10) DYLD-STUB$$CARenderContextSetChameleonColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456a0 (    0x10) DYLD-STUB$$CARenderContextSetDisplayInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456b0 (    0x10) DYLD-STUB$$CARenderContextSetGPURegistryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456c0 (    0x10) DYLD-STUB$$CARenderContextSetVisible [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456d0 (    0x10) DYLD-STUB$$CARenderContextUnlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456e0 (    0x10) DYLD-STUB$$CARenderMTLGetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f456f0 (    0x10) DYLD-STUB$$CARenderMTLSetDestinationTextures [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45700 (    0x10) DYLD-STUB$$CARenderMTLSetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45710 (    0x10) DYLD-STUB$$CARenderNotificationAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45720 (    0x10) DYLD-STUB$$CARenderNotificationRemoveObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45730 (    0x10) DYLD-STUB$$CARenderOGLBeginRendering [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45740 (    0x10) DYLD-STUB$$CARenderOGLCollect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45750 (    0x10) DYLD-STUB$$CARenderOGLDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45760 (    0x10) DYLD-STUB$$CARenderOGLEndRendering [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45770 (    0x10) DYLD-STUB$$CARenderOGLGetFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45780 (    0x10) DYLD-STUB$$CARenderOGLNew [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45790 (    0x10) DYLD-STUB$$CARenderOGLNew_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457a0 (    0x10) DYLD-STUB$$CARenderOGLPurge [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457b0 (    0x10) DYLD-STUB$$CARenderOGLRender [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457c0 (    0x10) DYLD-STUB$$CARenderOGLRenderDisplayWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457d0 (    0x10) DYLD-STUB$$CARenderOGLSetAccelerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457e0 (    0x10) DYLD-STUB$$CARenderOGLSetBackdropSubstituteColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f457f0 (    0x10) DYLD-STUB$$CARenderOGLSetColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45800 (    0x10) DYLD-STUB$$CARenderOGLSetDestinationBitDepth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45810 (    0x10) DYLD-STUB$$CARenderOGLSetDestinationOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45820 (    0x10) DYLD-STUB$$CARenderOGLSetDestinationTexture [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45830 (    0x10) DYLD-STUB$$CARenderOGLSetDisplay [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45840 (    0x10) DYLD-STUB$$CARenderOGLSetFeatureFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45850 (    0x10) DYLD-STUB$$CARenderOGLSetHDRScalingFactor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45860 (    0x10) DYLD-STUB$$CARenderOGLSetScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45870 (    0x10) DYLD-STUB$$CARenderOGLSetUpdateRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45880 (    0x10) DYLD-STUB$$CARenderOGLSetUpdateRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45890 (    0x10) DYLD-STUB$$CARenderPresentAcquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458a0 (    0x10) DYLD-STUB$$CARenderPresentRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458b0 (    0x10) DYLD-STUB$$CARenderRegisterPluginVTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458c0 (    0x10) DYLD-STUB$$CARenderRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458d0 (    0x10) DYLD-STUB$$CARenderRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458e0 (    0x10) DYLD-STUB$$CARenderServerGetInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f458f0 (    0x10) DYLD-STUB$$CARenderServerGetPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45900 (    0x10) DYLD-STUB$$CARenderServerRegister [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45910 (    0x10) DYLD-STUB$$CARenderServerSetRootQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45920 (    0x10) DYLD-STUB$$CARenderServerStart [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45930 (    0x10) DYLD-STUB$$CARenderSetPluginNeedsDisplay [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45940 (    0x10) DYLD-STUB$$CARenderSoftwareSetDestination [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45950 (    0x10) DYLD-STUB$$CARenderUpdateAddContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45960 (    0x10) DYLD-STUB$$CARenderUpdateAddFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45970 (    0x10) DYLD-STUB$$CARenderUpdateAddedAllContexts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45980 (    0x10) DYLD-STUB$$CARenderUpdateAllocateSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45990 (    0x10) DYLD-STUB$$CARenderUpdateBegin2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459a0 (    0x10) DYLD-STUB$$CARenderUpdateCheckUnobscuredRegionOfInterest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459b0 (    0x10) DYLD-STUB$$CARenderUpdateClipBackdropInvalidations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459c0 (    0x10) DYLD-STUB$$CARenderUpdateCopyLayerHostBindings2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459d0 (    0x10) DYLD-STUB$$CARenderUpdateCopyRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459e0 (    0x10) DYLD-STUB$$CARenderUpdateCopyUnobscuredHostedRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f459f0 (    0x10) DYLD-STUB$$CARenderUpdateFinish [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a00 (    0x10) DYLD-STUB$$CARenderUpdateGetBackdropLayerInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a10 (    0x10) DYLD-STUB$$CARenderUpdateGetFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a20 (    0x10) DYLD-STUB$$CARenderUpdateGetMaxBitsPerChannel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a30 (    0x10) DYLD-STUB$$CARenderUpdateGetNextTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a40 (    0x10) DYLD-STUB$$CARenderUpdateGetProtectionOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a50 (    0x10) DYLD-STUB$$CARenderUpdateGetTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a60 (    0x10) DYLD-STUB$$CARenderUpdateGetUnobscuredRegionOfInterest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a70 (    0x10) DYLD-STUB$$CARenderUpdateGetWindowServerAwareBackdropCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a80 (    0x10) DYLD-STUB$$CARenderUpdateHasChameleonLayers [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45a90 (    0x10) DYLD-STUB$$CARenderUpdateInvalidateBackdrops [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45aa0 (    0x10) DYLD-STUB$$CARenderUpdatePrintTrees [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ab0 (    0x10) DYLD-STUB$$CARenderUpdateSetAllowsHostedContexts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ac0 (    0x10) DYLD-STUB$$CARenderUpdateSetDisplayAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ad0 (    0x10) DYLD-STUB$$CARenderUpdateSetDisplays [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ae0 (    0x10) DYLD-STUB$$CARenderUpdateSetInterval [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45af0 (    0x10) DYLD-STUB$$CARenderUpdateSetIsDisplayStream [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b00 (    0x10) DYLD-STUB$$CARenderUpdateSetIsolated [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b10 (    0x10) DYLD-STUB$$CARenderUpdateSetProtectionOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b20 (    0x10) DYLD-STUB$$CARenderUpdateSetRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b30 (    0x10) DYLD-STUB$$CARenderUpdateSetSkipsBackdropCollect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b40 (    0x10) DYLD-STUB$$CARenderUpdateSetVBLTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b50 (    0x10) DYLD-STUB$$CARenderUpdateSetVRRMinRate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b60 (    0x10) DYLD-STUB$$CARenderUpdateValidateRestrictedLayerHosts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b70 (    0x10) DYLD-STUB$$CATransform3DConcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b80 (    0x10) DYLD-STUB$$CATransform3DEqualToTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45b90 (    0x10) DYLD-STUB$$CATransform3DGetAffineTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ba0 (    0x10) DYLD-STUB$$CATransform3DInvert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45bb0 (    0x10) DYLD-STUB$$CATransform3DIsAffine [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45bc0 (    0x10) DYLD-STUB$$CATransform3DIsIdentity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45bd0 (    0x10) DYLD-STUB$$CATransform3DMakeAffineTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45be0 (    0x10) DYLD-STUB$$CATransform3DMakeRotation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45bf0 (    0x10) DYLD-STUB$$CATransform3DMakeScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c00 (    0x10) DYLD-STUB$$CATransform3DMakeTranslation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c10 (    0x10) DYLD-STUB$$CATransform3DScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c20 (    0x10) DYLD-STUB$$CATransform3DTranslate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c30 (    0x10) DYLD-STUB$$CA_CGPointApplyTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c40 (    0x10) DYLD-STUB$$CA_CGRectApplyTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c50 (    0x10) DYLD-STUB$$CCHmacFinal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c60 (    0x10) DYLD-STUB$$CCHmacInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c70 (    0x10) DYLD-STUB$$CCHmacUpdate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c80 (    0x10) DYLD-STUB$$CCRandomGenerateBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45c90 (    0x10) DYLD-STUB$$CC_SHA1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ca0 (    0x10) DYLD-STUB$$CC_SHA256 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45cb0 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45cc0 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45cd0 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ce0 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45cf0 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d00 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d10 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d20 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d30 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d40 (    0x10) DYLD-STUB$$CFArrayGetFirstIndexOfValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d50 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d60 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d70 (    0x10) DYLD-STUB$$CFArrayGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d80 (    0x10) DYLD-STUB$$CFArrayInsertValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45d90 (    0x10) DYLD-STUB$$CFArrayRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45da0 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45db0 (    0x10) DYLD-STUB$$CFArrayReplaceValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45dc0 (    0x10) DYLD-STUB$$CFArraySetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45dd0 (    0x10) DYLD-STUB$$CFArraySortValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45de0 (    0x10) DYLD-STUB$$CFAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45df0 (    0x10) DYLD-STUB$$CFBagGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e00 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e10 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e20 (    0x10) DYLD-STUB$$CFBundleCopyBundleLocalizations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e30 (    0x10) DYLD-STUB$$CFBundleCopyExecutableURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e40 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationForLocalizationInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e50 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationsForPreferences [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e60 (    0x10) DYLD-STUB$$CFBundleCopyResourcesDirectoryURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e70 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e80 (    0x10) DYLD-STUB$$CFBundleGetBundleWithIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45e90 (    0x10) DYLD-STUB$$CFBundleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ea0 (    0x10) DYLD-STUB$$CFBundleGetLocalizationInfoForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45eb0 (    0x10) DYLD-STUB$$CFBundleGetMainBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ec0 (    0x10) DYLD-STUB$$CFBundleGetValueForInfoDictionaryKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ed0 (    0x10) DYLD-STUB$$CFCharacterSetGetPredefined [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ee0 (    0x10) DYLD-STUB$$CFCharacterSetIsCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ef0 (    0x10) DYLD-STUB$$CFCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f00 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f10 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f20 (    0x10) DYLD-STUB$$CFDataCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f30 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f40 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f50 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f60 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f70 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f80 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45f90 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45fa0 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45fb0 (    0x10) DYLD-STUB$$CFDateCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45fc0 (    0x10) DYLD-STUB$$CFDateFormatterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45fd0 (    0x10) DYLD-STUB$$CFDateFormatterCreateStringWithAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45fe0 (    0x10) DYLD-STUB$$CFDateFormatterSetFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f45ff0 (    0x10) DYLD-STUB$$CFDateGetAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46000 (    0x10) DYLD-STUB$$CFDateGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46010 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46020 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46030 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46040 (    0x10) DYLD-STUB$$CFDictionaryContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46050 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46060 (    0x10) DYLD-STUB$$CFDictionaryCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46070 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46080 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46090 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460a0 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460b0 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460c0 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460d0 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460e0 (    0x10) DYLD-STUB$$CFDictionaryRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f460f0 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46100 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46110 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46120 (    0x10) DYLD-STUB$$CFErrorCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46130 (    0x10) DYLD-STUB$$CFGetAllocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46140 (    0x10) DYLD-STUB$$CFGetRetainCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46150 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46160 (    0x10) DYLD-STUB$$CFHash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46170 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46180 (    0x10) DYLD-STUB$$CFLocaleCopyPreferredLanguages [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46190 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461a0 (    0x10) DYLD-STUB$$CFLocaleGetLanguageCharacterDirection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461b0 (    0x10) DYLD-STUB$$CFMachPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461c0 (    0x10) DYLD-STUB$$CFMachPortCreateRunLoopSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461d0 (    0x10) DYLD-STUB$$CFMachPortCreateWithPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461e0 (    0x10) DYLD-STUB$$CFMachPortGetContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f461f0 (    0x10) DYLD-STUB$$CFMachPortGetPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46200 (    0x10) DYLD-STUB$$CFMachPortGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46210 (    0x10) DYLD-STUB$$CFMachPortInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46220 (    0x10) DYLD-STUB$$CFMachPortIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46230 (    0x10) DYLD-STUB$$CFMakeCollectable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46240 (    0x10) DYLD-STUB$$CFNotificationCenterGetDistributedCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46250 (    0x10) DYLD-STUB$$CFNotificationCenterGetLocalCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46260 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46270 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotificationWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46280 (    0x10) DYLD-STUB$$CFNullGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46290 (    0x10) DYLD-STUB$$CFNumberCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462a0 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462b0 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462c0 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462d0 (    0x10) DYLD-STUB$$CFNumberIsFloatType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462e0 (    0x10) DYLD-STUB$$CFPreferencesAppSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f462f0 (    0x10) DYLD-STUB$$CFPreferencesCopyAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46300 (    0x10) DYLD-STUB$$CFPreferencesCopyMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46310 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46320 (    0x10) DYLD-STUB$$CFPreferencesGetAppBooleanValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46330 (    0x10) DYLD-STUB$$CFPreferencesSetMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46340 (    0x10) DYLD-STUB$$CFPreferencesSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46350 (    0x10) DYLD-STUB$$CFPreferencesSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46360 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46370 (    0x10) DYLD-STUB$$CFPropertyListCreateDeepCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46380 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46390 (    0x10) DYLD-STUB$$CFPropertyListIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463a0 (    0x10) DYLD-STUB$$CFPropertyListWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463b0 (    0x10) DYLD-STUB$$CFReadStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463c0 (    0x10) DYLD-STUB$$CFReadStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463d0 (    0x10) DYLD-STUB$$CFReadStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463e0 (    0x10) DYLD-STUB$$CFReadStreamRead [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f463f0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46400 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46410 (    0x10) DYLD-STUB$$CFRunLoopGetMain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46420 (    0x10) DYLD-STUB$$CFRunLoopPerformBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46430 (    0x10) DYLD-STUB$$CFRunLoopSourceInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46440 (    0x10) DYLD-STUB$$CFRunLoopWakeUp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46450 (    0x10) DYLD-STUB$$CFSetAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46460 (    0x10) DYLD-STUB$$CFSetApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46470 (    0x10) DYLD-STUB$$CFSetContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46480 (    0x10) DYLD-STUB$$CFSetCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46490 (    0x10) DYLD-STUB$$CFSetCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464a0 (    0x10) DYLD-STUB$$CFSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464b0 (    0x10) DYLD-STUB$$CFSetGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464c0 (    0x10) DYLD-STUB$$CFSetGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464d0 (    0x10) DYLD-STUB$$CFSetGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464e0 (    0x10) DYLD-STUB$$CFSetGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f464f0 (    0x10) DYLD-STUB$$CFSetRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46500 (    0x10) DYLD-STUB$$CFSetRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46510 (    0x10) DYLD-STUB$$CFSetSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46520 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46530 (    0x10) DYLD-STUB$$CFStringAppendCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46540 (    0x10) DYLD-STUB$$CFStringAppendFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46550 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46560 (    0x10) DYLD-STUB$$CFStringCreateArrayBySeparatingStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46570 (    0x10) DYLD-STUB$$CFStringCreateByCombiningStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46580 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46590 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465a0 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465b0 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465c0 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465d0 (    0x10) DYLD-STUB$$CFStringCreateWithCStringNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465e0 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f465f0 (    0x10) DYLD-STUB$$CFStringFindCharacterFromSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46600 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46610 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46620 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46630 (    0x10) DYLD-STUB$$CFStringGetCharactersPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46640 (    0x10) DYLD-STUB$$CFStringGetDoubleValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46650 (    0x10) DYLD-STUB$$CFStringGetIntValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46660 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46670 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46680 (    0x10) DYLD-STUB$$CFStringGetSystemEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46690 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466a0 (    0x10) DYLD-STUB$$CFStringHasPrefix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466b0 (    0x10) DYLD-STUB$$CFStringInsert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466c0 (    0x10) DYLD-STUB$$CFStringLowercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466d0 (    0x10) DYLD-STUB$$CFStringTrim [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466e0 (    0x10) DYLD-STUB$$CFStringTrimWhitespace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f466f0 (    0x10) DYLD-STUB$$CFURLCopyResourcePropertyForKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46700 (    0x10) DYLD-STUB$$CFURLCreateCopyAppendingPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46710 (    0x10) DYLD-STUB$$CFURLCreateFromFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46720 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46730 (    0x10) DYLD-STUB$$CFUUIDCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46740 (    0x10) DYLD-STUB$$CFUUIDCreateFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46750 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46760 (    0x10) DYLD-STUB$$CFUUIDCreateString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46770 (    0x10) DYLD-STUB$$CFUUIDGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46780 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46790 (    0x10) DYLD-STUB$$CFWriteStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467a0 (    0x10) DYLD-STUB$$CFWriteStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467b0 (    0x10) DYLD-STUB$$CFWriteStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467c0 (    0x10) DYLD-STUB$$CGAffineTransformConcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467d0 (    0x10) DYLD-STUB$$CGAffineTransformDecompose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467e0 (    0x10) DYLD-STUB$$CGAffineTransformEqualToTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f467f0 (    0x10) DYLD-STUB$$CGAffineTransformInvert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46800 (    0x10) DYLD-STUB$$CGAffineTransformIsIdentity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46810 (    0x10) DYLD-STUB$$CGAffineTransformIsSingular [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46820 (    0x10) DYLD-STUB$$CGAffineTransformMakeScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46830 (    0x10) DYLD-STUB$$CGAffineTransformMakeTranslation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46840 (    0x10) DYLD-STUB$$CGAffineTransformRotate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46850 (    0x10) DYLD-STUB$$CGAffineTransformScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46860 (    0x10) DYLD-STUB$$CGAffineTransformTranslate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46870 (    0x10) DYLD-STUB$$CGBitmapContextCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46880 (    0x10) DYLD-STUB$$CGBitmapContextCreateImage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46890 (    0x10) DYLD-STUB$$CGBitmapContextGetAlphaBytesPerRow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468a0 (    0x10) DYLD-STUB$$CGBitmapContextGetAlphaData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468b0 (    0x10) DYLD-STUB$$CGBitmapContextGetBitmapInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468c0 (    0x10) DYLD-STUB$$CGBitmapContextGetBitsPerComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468d0 (    0x10) DYLD-STUB$$CGBitmapContextGetBitsPerPixel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468e0 (    0x10) DYLD-STUB$$CGBitmapContextGetBytesPerRow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f468f0 (    0x10) DYLD-STUB$$CGBitmapContextGetColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46900 (    0x10) DYLD-STUB$$CGBitmapContextGetData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46910 (    0x10) DYLD-STUB$$CGBitmapContextGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46920 (    0x10) DYLD-STUB$$CGBitmapContextGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46930 (    0x10) DYLD-STUB$$CGBitmapContextSetData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46940 (    0x10) DYLD-STUB$$CGBitmapGetFastestAlignment [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46950 (    0x10) DYLD-STUB$$CGBlt_copyBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46960 (    0x10) DYLD-STUB$$CGBlt_fillBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46970 (    0x10) DYLD-STUB$$CGColorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46980 (    0x10) DYLD-STUB$$CGColorCreateCopyByMatchingToColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46990 (    0x10) DYLD-STUB$$CGColorCreateCopyWithAlpha [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469a0 (    0x10) DYLD-STUB$$CGColorCreateGenericGray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469b0 (    0x10) DYLD-STUB$$CGColorCreateGenericRGB [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469c0 (    0x10) DYLD-STUB$$CGColorCreateSRGB [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469d0 (    0x10) DYLD-STUB$$CGColorCurveGetGamma [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469e0 (    0x10) DYLD-STUB$$CGColorCurveGetParameters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f469f0 (    0x10) DYLD-STUB$$CGColorCurveMapValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a00 (    0x10) DYLD-STUB$$CGColorCurveRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a10 (    0x10) DYLD-STUB$$CGColorEqualToColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a20 (    0x10) DYLD-STUB$$CGColorGetColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a30 (    0x10) DYLD-STUB$$CGColorGetComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a40 (    0x10) DYLD-STUB$$CGColorGetConstantColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a50 (    0x10) DYLD-STUB$$CGColorGetNumberOfComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a60 (    0x10) DYLD-STUB$$CGColorGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a70 (    0x10) DYLD-STUB$$CGColorMatrixConcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a80 (    0x10) DYLD-STUB$$CGColorMatrixIsIdentity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46a90 (    0x10) DYLD-STUB$$CGColorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46aa0 (    0x10) DYLD-STUB$$CGColorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ab0 (    0x10) DYLD-STUB$$CGColorSpaceCopyICCData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ac0 (    0x10) DYLD-STUB$$CGColorSpaceCopyICCProfileDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ad0 (    0x10) DYLD-STUB$$CGColorSpaceCopyPropertyList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ae0 (    0x10) DYLD-STUB$$CGColorSpaceCreateConversionCurve [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46af0 (    0x10) DYLD-STUB$$CGColorSpaceCreateDeviceGray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b00 (    0x10) DYLD-STUB$$CGColorSpaceCreateDeviceRGB [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b10 (    0x10) DYLD-STUB$$CGColorSpaceCreateDisplayRGB [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b20 (    0x10) DYLD-STUB$$CGColorSpaceCreateWithICCData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b30 (    0x10) DYLD-STUB$$CGColorSpaceCreateWithName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b40 (    0x10) DYLD-STUB$$CGColorSpaceCreateWithPropertyList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b50 (    0x10) DYLD-STUB$$CGColorSpaceEqualToColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b60 (    0x10) DYLD-STUB$$CGColorSpaceEqualToColorSpaceIgnoringRange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b70 (    0x10) DYLD-STUB$$CGColorSpaceGetConversionMatrix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b80 (    0x10) DYLD-STUB$$CGColorSpaceGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46b90 (    0x10) DYLD-STUB$$CGColorSpaceGetMD5Digest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ba0 (    0x10) DYLD-STUB$$CGColorSpaceGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46bb0 (    0x10) DYLD-STUB$$CGColorSpaceGetProcessColorModel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46bc0 (    0x10) DYLD-STUB$$CGColorSpaceGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46bd0 (    0x10) DYLD-STUB$$CGColorSpaceRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46be0 (    0x10) DYLD-STUB$$CGColorSpaceRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46bf0 (    0x10) DYLD-STUB$$CGContextClear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c00 (    0x10) DYLD-STUB$$CGContextClearRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c10 (    0x10) DYLD-STUB$$CGContextClipToMask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c20 (    0x10) DYLD-STUB$$CGContextCreateWithDelegateAndInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c30 (    0x10) DYLD-STUB$$CGContextDelegateDrawWindowContents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c40 (    0x10) DYLD-STUB$$CGContextDelegateRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c50 (    0x10) DYLD-STUB$$CGContextDrawImage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c60 (    0x10) DYLD-STUB$$CGContextFillRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c70 (    0x10) DYLD-STUB$$CGContextFlush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c80 (    0x10) DYLD-STUB$$CGContextGetDelegate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46c90 (    0x10) DYLD-STUB$$CGContextGetDelegateInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ca0 (    0x10) DYLD-STUB$$CGContextGetGState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46cb0 (    0x10) DYLD-STUB$$CGContextGetRenderingState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46cc0 (    0x10) DYLD-STUB$$CGContextGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46cd0 (    0x10) DYLD-STUB$$CGContextHandleInvalid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ce0 (    0x10) DYLD-STUB$$CGContextRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46cf0 (    0x10) DYLD-STUB$$CGContextSetBlendMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d00 (    0x10) DYLD-STUB$$CGContextSetCompositeOperation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d10 (    0x10) DYLD-STUB$$CGContextSetFillColorWithColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d20 (    0x10) DYLD-STUB$$CGContextSetGrayFillColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d30 (    0x10) DYLD-STUB$$CGContextValidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d40 (    0x10) DYLD-STUB$$CGDataProviderCreateDirect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d50 (    0x10) DYLD-STUB$$CGDataProviderCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d60 (    0x10) DYLD-STUB$$CGDataProviderRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d70 (    0x10) DYLD-STUB$$CGDefaultsGetBoolean [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d80 (    0x10) DYLD-STUB$$CGDisplayIsActive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46d90 (    0x10) DYLD-STUB$$CGDisplayIsOnline [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46da0 (    0x10) DYLD-STUB$$CGDisplayRegisterReconfigurationCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46db0 (    0x10) DYLD-STUB$$CGDisplayStreamUpdateGetDropCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46dc0 (    0x10) DYLD-STUB$$CGDisplayStreamUpdateGetRects [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46dd0 (    0x10) DYLD-STUB$$CGFloatIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46de0 (    0x10) DYLD-STUB$$CGImageCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46df0 (    0x10) DYLD-STUB$$CGImageCreateWithImageInRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e00 (    0x10) DYLD-STUB$$CGImageCreateWithMaskAndMatte [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e10 (    0x10) DYLD-STUB$$CGImageGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e20 (    0x10) DYLD-STUB$$CGImageGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e30 (    0x10) DYLD-STUB$$CGImageIsMask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e40 (    0x10) DYLD-STUB$$CGImageMaskCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e50 (    0x10) DYLD-STUB$$CGImageRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e60 (    0x10) DYLD-STUB$$CGImageRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e70 (    0x10) DYLD-STUB$$CGImageSetCachingFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e80 (    0x10) DYLD-STUB$$CGImageSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46e90 (    0x10) DYLD-STUB$$CGImageWriteToFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ea0 (    0x10) DYLD-STUB$$CGPathAddCurveToPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46eb0 (    0x10) DYLD-STUB$$CGPathAddLineToPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ec0 (    0x10) DYLD-STUB$$CGPathAddLines [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ed0 (    0x10) DYLD-STUB$$CGPathAddPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ee0 (    0x10) DYLD-STUB$$CGPathAddQuadCurveToPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ef0 (    0x10) DYLD-STUB$$CGPathAddRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f00 (    0x10) DYLD-STUB$$CGPathApplyWithBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f10 (    0x10) DYLD-STUB$$CGPathCloseSubpath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f20 (    0x10) DYLD-STUB$$CGPathContainsPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f30 (    0x10) DYLD-STUB$$CGPathCreateCopyByTransformingPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f40 (    0x10) DYLD-STUB$$CGPathCreateEncodedData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f50 (    0x10) DYLD-STUB$$CGPathCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f60 (    0x10) DYLD-STUB$$CGPathCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f70 (    0x10) DYLD-STUB$$CGPathCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f80 (    0x10) DYLD-STUB$$CGPathCreateWithEllipseInRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46f90 (    0x10) DYLD-STUB$$CGPathCreateWithRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46fa0 (    0x10) DYLD-STUB$$CGPathCreateWithRoundedRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46fb0 (    0x10) DYLD-STUB$$CGPathEqualToPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46fc0 (    0x10) DYLD-STUB$$CGPathGetPathBoundingBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46fd0 (    0x10) DYLD-STUB$$CGPathIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46fe0 (    0x10) DYLD-STUB$$CGPathMoveToPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f46ff0 (    0x10) DYLD-STUB$$CGPathRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47000 (    0x10) DYLD-STUB$$CGPathRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47010 (    0x10) DYLD-STUB$$CGPointCreateDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47020 (    0x10) DYLD-STUB$$CGPointMakeWithDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47030 (    0x10) DYLD-STUB$$CGPostError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47040 (    0x10) DYLD-STUB$$CGRectApplyAffineTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47050 (    0x10) DYLD-STUB$$CGRectApplyInverseAffineTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47060 (    0x10) DYLD-STUB$$CGRectContainsPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47070 (    0x10) DYLD-STUB$$CGRectContainsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47080 (    0x10) DYLD-STUB$$CGRectCreateDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47090 (    0x10) DYLD-STUB$$CGRectEqualToRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470a0 (    0x10) DYLD-STUB$$CGRectGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470b0 (    0x10) DYLD-STUB$$CGRectGetMaxX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470c0 (    0x10) DYLD-STUB$$CGRectGetMaxY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470d0 (    0x10) DYLD-STUB$$CGRectGetMidX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470e0 (    0x10) DYLD-STUB$$CGRectGetMidY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f470f0 (    0x10) DYLD-STUB$$CGRectGetMinX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47100 (    0x10) DYLD-STUB$$CGRectGetMinY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47110 (    0x10) DYLD-STUB$$CGRectGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47120 (    0x10) DYLD-STUB$$CGRectInset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47130 (    0x10) DYLD-STUB$$CGRectIntegral [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47140 (    0x10) DYLD-STUB$$CGRectIntersection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47150 (    0x10) DYLD-STUB$$CGRectIntersectsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47160 (    0x10) DYLD-STUB$$CGRectIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47170 (    0x10) DYLD-STUB$$CGRectIsInfinite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47180 (    0x10) DYLD-STUB$$CGRectIsNull [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47190 (    0x10) DYLD-STUB$$CGRectMakeWithDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471a0 (    0x10) DYLD-STUB$$CGRectOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471b0 (    0x10) DYLD-STUB$$CGRectStandardize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471c0 (    0x10) DYLD-STUB$$CGRectUnion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471d0 (    0x10) DYLD-STUB$$CGRegionContainsPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471e0 (    0x10) DYLD-STUB$$CGRegionContainsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f471f0 (    0x10) DYLD-STUB$$CGRegionContainsRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47200 (    0x10) DYLD-STUB$$CGRegionCreateByScalingRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47210 (    0x10) DYLD-STUB$$CGRegionCreateBySimplifyingRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47220 (    0x10) DYLD-STUB$$CGRegionCreateByTransformingRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47230 (    0x10) DYLD-STUB$$CGRegionCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47240 (    0x10) DYLD-STUB$$CGRegionCreateDifferenceWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47250 (    0x10) DYLD-STUB$$CGRegionCreateEmptyRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47260 (    0x10) DYLD-STUB$$CGRegionCreateIntersectionWithRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47270 (    0x10) DYLD-STUB$$CGRegionCreateIntersectionWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47280 (    0x10) DYLD-STUB$$CGRegionCreateUnionWithRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47290 (    0x10) DYLD-STUB$$CGRegionCreateUnionWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472a0 (    0x10) DYLD-STUB$$CGRegionCreateWithInset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472b0 (    0x10) DYLD-STUB$$CGRegionCreateWithOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472c0 (    0x10) DYLD-STUB$$CGRegionCreateWithRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472d0 (    0x10) DYLD-STUB$$CGRegionCreateWithRects [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472e0 (    0x10) DYLD-STUB$$CGRegionCreateXORWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f472f0 (    0x10) DYLD-STUB$$CGRegionEnumeratorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47300 (    0x10) DYLD-STUB$$CGRegionEnumeratorCreateWithDirection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47310 (    0x10) DYLD-STUB$$CGRegionEnumeratorGetNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47320 (    0x10) DYLD-STUB$$CGRegionEnumeratorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47330 (    0x10) DYLD-STUB$$CGRegionEqualToRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47340 (    0x10) DYLD-STUB$$CGRegionForwardEnumeratorGetNextBounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47350 (    0x10) DYLD-STUB$$CGRegionForwardEnumeratorGetNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47360 (    0x10) DYLD-STUB$$CGRegionForwardEnumeratorMake [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47370 (    0x10) DYLD-STUB$$CGRegionGetBoundingBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47380 (    0x10) DYLD-STUB$$CGRegionGetDataBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47390 (    0x10) DYLD-STUB$$CGRegionGetDataLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473a0 (    0x10) DYLD-STUB$$CGRegionGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473b0 (    0x10) DYLD-STUB$$CGRegionIntersectsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473c0 (    0x10) DYLD-STUB$$CGRegionIntersectsRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473d0 (    0x10) DYLD-STUB$$CGRegionIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473e0 (    0x10) DYLD-STUB$$CGRegionIsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f473f0 (    0x10) DYLD-STUB$$CGRegionIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47400 (    0x10) DYLD-STUB$$CGRegionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47410 (    0x10) DYLD-STUB$$CGRegionRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47420 (    0x10) DYLD-STUB$$CGSBoundingShapeAdd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47430 (    0x10) DYLD-STUB$$CGSBoundingShapeAddRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47440 (    0x10) DYLD-STUB$$CGSBoundingShapeCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47450 (    0x10) DYLD-STUB$$CGSBoundingShapeRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47460 (    0x10) DYLD-STUB$$CGSBoundingShapeReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47470 (    0x10) DYLD-STUB$$CGSConvertRGB555toXRGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47480 (    0x10) DYLD-STUB$$CGSCopyDisplayColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47490 (    0x10) DYLD-STUB$$CGSCopyDisplayUUID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474a0 (    0x10) DYLD-STUB$$CGSCopyManagedDisplayForSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474b0 (    0x10) DYLD-STUB$$CGSCopyRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474c0 (    0x10) DYLD-STUB$$CGSCopySpaces [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474d0 (    0x10) DYLD-STUB$$CGSCopyWindowsWithOptionsAndTags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474e0 (    0x10) DYLD-STUB$$CGSCreateRegionFromData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f474f0 (    0x10) DYLD-STUB$$CGSCurrentEventTimestamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47500 (    0x10) DYLD-STUB$$CGSDiffRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47510 (    0x10) DYLD-STUB$$CGSGetDisplayBounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47520 (    0x10) DYLD-STUB$$CGSGetDisplayForUUID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47530 (    0x10) DYLD-STUB$$CGSGetRegionBounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47540 (    0x10) DYLD-STUB$$CGSGetRegionData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47550 (    0x10) DYLD-STUB$$CGSGetRegionRectCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47560 (    0x10) DYLD-STUB$$CGSGetSpaceManagementMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47570 (    0x10) DYLD-STUB$$CGSInitialize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47580 (    0x10) DYLD-STUB$$CGSMainConnectionID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47590 (    0x10) DYLD-STUB$$CGSMainDisplayID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475a0 (    0x10) DYLD-STUB$$CGSNewRegionWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475b0 (    0x10) DYLD-STUB$$CGSNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475c0 (    0x10) DYLD-STUB$$CGSRegionCreateWithBoundingShape [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475d0 (    0x10) DYLD-STUB$$CGSRegionEnumerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475e0 (    0x10) DYLD-STUB$$CGSRegionGetShape [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f475f0 (    0x10) DYLD-STUB$$CGSRegionIntersectsRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47600 (    0x10) DYLD-STUB$$CGSRegionIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47610 (    0x10) DYLD-STUB$$CGSRegionMergeFlushAndMoveRegions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47620 (    0x10) DYLD-STUB$$CGSRegionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47630 (    0x10) DYLD-STUB$$CGSRegionRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47640 (    0x10) DYLD-STUB$$CGSRegisterConnectionNotifyProc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47650 (    0x10) DYLD-STUB$$CGSReleaseRegionEnumerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47660 (    0x10) DYLD-STUB$$CGSRemoveConnectionNotifyProc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47670 (    0x10) DYLD-STUB$$CGSRemoveNotifyProc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47680 (    0x10) DYLD-STUB$$CGSServerPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47690 (    0x10) DYLD-STUB$$CGSSetDenyWindowServerConnections [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476a0 (    0x10) DYLD-STUB$$CGSShutdownServerConnections [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476b0 (    0x10) DYLD-STUB$$CGSSpaceGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476c0 (    0x10) DYLD-STUB$$CGSUnionRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476d0 (    0x10) DYLD-STUB$$CGSizeCreateDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476e0 (    0x10) DYLD-STUB$$CGSizeMakeWithDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f476f0 (    0x10) DYLD-STUB$$CGXAcceleratorForDisplayDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47700 (    0x10) DYLD-STUB$$CGXGetCurrentDisplayModeDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47710 (    0x10) DYLD-STUB$$CGXHWCopyPixels [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47720 (    0x10) DYLD-STUB$$CGXHWWait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47730 (    0x10) DYLD-STUB$$CGXMainDisplayDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47740 (    0x10) DYLD-STUB$$CGXNextHardwareDisplayDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47750 (    0x10) DYLD-STUB$$CGXServiceForDisplayDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47760 (    0x10) DYLD-STUB$$CGXSetOpenGLAcceleration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47770 (    0x10) DYLD-STUB$$CPSFindProcessByPID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47780 (    0x10) DYLD-STUB$$CVBufferSetAttachment [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47790 (    0x10) DYLD-STUB$$CVPixelBufferCreateWithIOSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477a0 (    0x10) DYLD-STUB$$CVPixelBufferGetIOSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477b0 (    0x10) DYLD-STUB$$CVPixelBufferPoolCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477c0 (    0x10) DYLD-STUB$$CVPixelBufferPoolCreatePixelBufferWithAuxAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477d0 (    0x10) DYLD-STUB$$CVPixelBufferPoolGetMinBufferCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477e0 (    0x10) DYLD-STUB$$CVPixelBufferPoolPreAllocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f477f0 (    0x10) DYLD-STUB$$CVPixelBufferPoolRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47800 (    0x10) DYLD-STUB$$CVPixelBufferRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47810 (    0x10) DYLD-STUB$$CoreDisplay_RunAmbientDisplayService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47820 (    0x10) DYLD-STUB$$CoreDisplay_TerminateAmbientDisplayService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47830 (    0x10) DYLD-STUB$$CoreDisplay_UpdateDisplayProfiles [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47840 (    0x10) DYLD-STUB$$CursorBitmapCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47850 (    0x10) DYLD-STUB$$CursorBitmapCreateNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47860 (    0x10) DYLD-STUB$$CursorBitmapGetBytesPerRow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47870 (    0x10) DYLD-STUB$$CursorBitmapGetData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47880 (    0x10) DYLD-STUB$$CursorBitmapGetFrameCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47890 (    0x10) DYLD-STUB$$CursorBitmapGetFrameData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478a0 (    0x10) DYLD-STUB$$CursorBitmapGetFrameHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478b0 (    0x10) DYLD-STUB$$CursorBitmapGetFrameWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478c0 (    0x10) DYLD-STUB$$CursorBitmapGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478d0 (    0x10) DYLD-STUB$$CursorBitmapGetHotSpot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478e0 (    0x10) DYLD-STUB$$CursorBitmapGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f478f0 (    0x10) DYLD-STUB$$CursorBitmapRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47900 (    0x10) DYLD-STUB$$GetDYLDEntryPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47910 (    0x10) DYLD-STUB$$IOAccelCreateAccelID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47920 (    0x10) DYLD-STUB$$IOAccelCreateSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47930 (    0x10) DYLD-STUB$$IOAccelDestroyAccelID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47940 (    0x10) DYLD-STUB$$IOAccelDestroySurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47950 (    0x10) DYLD-STUB$$IOAccelReadLockSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47960 (    0x10) DYLD-STUB$$IOAccelReadLockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47970 (    0x10) DYLD-STUB$$IOAccelReadUnlockSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47980 (    0x10) DYLD-STUB$$IOAccelSetSurfaceFramebufferShape [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47990 (    0x10) DYLD-STUB$$IOAccelSetSurfaceScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479a0 (    0x10) DYLD-STUB$$IOAccelSurfaceControl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479b0 (    0x10) DYLD-STUB$$IOAccelSurfaceSignalEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479c0 (    0x10) DYLD-STUB$$IOAccelWaitForSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479d0 (    0x10) DYLD-STUB$$IOAccelWriteLockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479e0 (    0x10) DYLD-STUB$$IOAccelWriteUnlockSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f479f0 (    0x10) DYLD-STUB$$IOCFUnserializeBinary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a00 (    0x10) DYLD-STUB$$IOConnectCallScalarMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a10 (    0x10) DYLD-STUB$$IOConnectMapMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a20 (    0x10) DYLD-STUB$$IOConnectSetNotificationPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a30 (    0x10) DYLD-STUB$$IOHIDCreateSharedMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a40 (    0x10) DYLD-STUB$$IOHIDDeviceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a50 (    0x10) DYLD-STUB$$IOHIDDeviceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a60 (    0x10) DYLD-STUB$$IOHIDDeviceGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a70 (    0x10) DYLD-STUB$$IOHIDDeviceGetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a80 (    0x10) DYLD-STUB$$IOHIDDeviceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47a90 (    0x10) DYLD-STUB$$IOHIDEventAppendEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47aa0 (    0x10) DYLD-STUB$$IOHIDEventConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ab0 (    0x10) DYLD-STUB$$IOHIDEventCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ac0 (    0x10) DYLD-STUB$$IOHIDEventCreateVendorDefinedEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ad0 (    0x10) DYLD-STUB$$IOHIDEventCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ae0 (    0x10) DYLD-STUB$$IOHIDEventGetChildren [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47af0 (    0x10) DYLD-STUB$$IOHIDEventGetDataLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b00 (    0x10) DYLD-STUB$$IOHIDEventGetDataValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b10 (    0x10) DYLD-STUB$$IOHIDEventGetDoubleValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b20 (    0x10) DYLD-STUB$$IOHIDEventGetEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b30 (    0x10) DYLD-STUB$$IOHIDEventGetEventFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b40 (    0x10) DYLD-STUB$$IOHIDEventGetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b50 (    0x10) DYLD-STUB$$IOHIDEventGetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b60 (    0x10) DYLD-STUB$$IOHIDEventGetParent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b70 (    0x10) DYLD-STUB$$IOHIDEventGetPhase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b80 (    0x10) DYLD-STUB$$IOHIDEventGetPolicy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47b90 (    0x10) DYLD-STUB$$IOHIDEventGetScrollMomentum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ba0 (    0x10) DYLD-STUB$$IOHIDEventGetSenderID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47bb0 (    0x10) DYLD-STUB$$IOHIDEventGetTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47bc0 (    0x10) DYLD-STUB$$IOHIDEventGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47bd0 (    0x10) DYLD-STUB$$IOHIDEventGetVendorDefinedData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47be0 (    0x10) DYLD-STUB$$IOHIDEventIsAbsolute [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47bf0 (    0x10) DYLD-STUB$$IOHIDEventReadBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c00 (    0x10) DYLD-STUB$$IOHIDEventRemoveEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c10 (    0x10) DYLD-STUB$$IOHIDEventSetDoubleValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c20 (    0x10) DYLD-STUB$$IOHIDEventSetEventFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c30 (    0x10) DYLD-STUB$$IOHIDEventSetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c40 (    0x10) DYLD-STUB$$IOHIDEventSetTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c50 (    0x10) DYLD-STUB$$IOHIDEventSystemClientActivate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c60 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c70 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCopyServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c80 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47c90 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCreateWithType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ca0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterDeviceMatchingBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47cb0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47cc0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterPropertyChangedCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47cd0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientScheduleWithDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ce0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetCancelHandler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47cf0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d00 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetMatchingMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d10 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterDeviceMatchingBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d20 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d30 (    0x10) DYLD-STUB$$IOHIDEventSystemClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d40 (    0x10) DYLD-STUB$$IOHIDEventSystemCopyService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d50 (    0x10) DYLD-STUB$$IOHIDEventSystemCopyServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d60 (    0x10) DYLD-STUB$$IOHIDEventSystemCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d70 (    0x10) DYLD-STUB$$IOHIDEventSystemOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d80 (    0x10) DYLD-STUB$$IOHIDEventSystemRegisterServicesCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47d90 (    0x10) DYLD-STUB$$IOHIDEventSystemSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47da0 (    0x10) DYLD-STUB$$IOHIDGetModifierLockState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47db0 (    0x10) DYLD-STUB$$IOHIDManagerCopyDevices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47dc0 (    0x10) DYLD-STUB$$IOHIDManagerCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47dd0 (    0x10) DYLD-STUB$$IOHIDManagerSetDeviceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47de0 (    0x10) DYLD-STUB$$IOHIDPostEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47df0 (    0x10) DYLD-STUB$$IOHIDServiceClientConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e00 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e10 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e20 (    0x10) DYLD-STUB$$IOHIDServiceConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e30 (    0x10) DYLD-STUB$$IOHIDServiceCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e40 (    0x10) DYLD-STUB$$IOHIDServiceCreateRemovalNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e50 (    0x10) DYLD-STUB$$IOHIDServiceGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e60 (    0x10) DYLD-STUB$$IOHIDServiceGetRegistryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e70 (    0x10) DYLD-STUB$$IOHIDServiceGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e80 (    0x10) DYLD-STUB$$IOHIDServiceSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47e90 (    0x10) DYLD-STUB$$IOHIDSetEventsEnable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ea0 (    0x10) DYLD-STUB$$IOHIDSetFixedMouseLocationWithTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47eb0 (    0x10) DYLD-STUB$$IOIteratorIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ec0 (    0x10) DYLD-STUB$$IOIteratorNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ed0 (    0x10) DYLD-STUB$$IOIteratorReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ee0 (    0x10) DYLD-STUB$$IOMainPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ef0 (    0x10) DYLD-STUB$$IOMobileFramebufferCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f00 (    0x10) DYLD-STUB$$IOMobileFramebufferOpenByName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f10 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f20 (    0x10) DYLD-STUB$$IONotificationPortDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f30 (    0x10) DYLD-STUB$$IONotificationPortSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f40 (    0x10) DYLD-STUB$$IOObjectCopyClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f50 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f60 (    0x10) DYLD-STUB$$IOObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f70 (    0x10) DYLD-STUB$$IOPMAssertionCreateWithProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f80 (    0x10) DYLD-STUB$$IOPMAssertionDeclareUserActivity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47f90 (    0x10) DYLD-STUB$$IOPMAssertionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47fa0 (    0x10) DYLD-STUB$$IOPMAssertionSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47fb0 (    0x10) DYLD-STUB$$IOPMCopyAssertionsByProcess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47fc0 (    0x10) DYLD-STUB$$IOPMCopyBatteryInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47fd0 (    0x10) DYLD-STUB$$IOPMFindPowerManagement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47fe0 (    0x10) DYLD-STUB$$IOPMSetDesktopMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f47ff0 (    0x10) DYLD-STUB$$IOPMSkylightCheckInWithCapability [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48000 (    0x10) DYLD-STUB$$IORegistryEntryCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48010 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48020 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48030 (    0x10) DYLD-STUB$$IORegistryEntryGetPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48040 (    0x10) DYLD-STUB$$IORegistryEntryGetRegistryEntryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48050 (    0x10) DYLD-STUB$$IORegistryEntrySearchCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48060 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48070 (    0x10) DYLD-STUB$$IOServiceAddMatchingNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48080 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48090 (    0x10) DYLD-STUB$$IOServiceGetBusyState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480a0 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480b0 (    0x10) DYLD-STUB$$IOServiceGetMatchingServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480c0 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480d0 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480e0 (    0x10) DYLD-STUB$$IOServiceRequestProbe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f480f0 (    0x10) DYLD-STUB$$IOServiceWaitQuiet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48100 (    0x10) DYLD-STUB$$IOSurfaceAcceleratorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48110 (    0x10) DYLD-STUB$$IOSurfaceAcceleratorTransformSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48120 (    0x10) DYLD-STUB$$IOSurfaceAlignProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48130 (    0x10) DYLD-STUB$$IOSurfaceCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48140 (    0x10) DYLD-STUB$$IOSurfaceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48150 (    0x10) DYLD-STUB$$IOSurfaceCreateMachPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48160 (    0x10) DYLD-STUB$$IOSurfaceDecrementUseCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48170 (    0x10) DYLD-STUB$$IOSurfaceGetAllocSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48180 (    0x10) DYLD-STUB$$IOSurfaceGetBaseAddress [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48190 (    0x10) DYLD-STUB$$IOSurfaceGetBulkAttachments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481a0 (    0x10) DYLD-STUB$$IOSurfaceGetBytesPerElement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481b0 (    0x10) DYLD-STUB$$IOSurfaceGetBytesPerRow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481c0 (    0x10) DYLD-STUB$$IOSurfaceGetElementHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481d0 (    0x10) DYLD-STUB$$IOSurfaceGetElementWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481e0 (    0x10) DYLD-STUB$$IOSurfaceGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f481f0 (    0x10) DYLD-STUB$$IOSurfaceGetID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48200 (    0x10) DYLD-STUB$$IOSurfaceGetIndexedTimestamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48210 (    0x10) DYLD-STUB$$IOSurfaceGetPixelFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48220 (    0x10) DYLD-STUB$$IOSurfaceGetPlaneCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48230 (    0x10) DYLD-STUB$$IOSurfaceGetPropertyMaximum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48240 (    0x10) DYLD-STUB$$IOSurfaceGetProtectionOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48250 (    0x10) DYLD-STUB$$IOSurfaceGetSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48260 (    0x10) DYLD-STUB$$IOSurfaceGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48270 (    0x10) DYLD-STUB$$IOSurfaceGetYCbCrMatrix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48280 (    0x10) DYLD-STUB$$IOSurfaceIncrementUseCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48290 (    0x10) DYLD-STUB$$IOSurfaceIsInUse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482a0 (    0x10) DYLD-STUB$$IOSurfaceLock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482b0 (    0x10) DYLD-STUB$$IOSurfaceLookupFromMachPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482c0 (    0x10) DYLD-STUB$$IOSurfaceSetBulkAttachments2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482d0 (    0x10) DYLD-STUB$$IOSurfaceSetIndexedTimestamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482e0 (    0x10) DYLD-STUB$$IOSurfaceSetPurgeable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f482f0 (    0x10) DYLD-STUB$$IOSurfaceSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48300 (    0x10) DYLD-STUB$$IOSurfaceSharedEventGetMachPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48310 (    0x10) DYLD-STUB$$IOSurfaceUnlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48320 (    0x10) DYLD-STUB$$InitializeCoreDisplay [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48330 (    0x10) DYLD-STUB$$MGGetProductType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48340 (    0x10) DYLD-STUB$$MGGetSInt32Answer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48350 (    0x10) DYLD-STUB$$MGGetSInt64Answer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48360 (    0x10) DYLD-STUB$$MGIsDeviceOneOfType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48370 (    0x10) DYLD-STUB$$MPSSupportsMTLDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48380 (    0x10) DYLD-STUB$$MTLCopyAllDevices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48390 (    0x10) DYLD-STUB$$MTLCopyAllDevicesWithObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483a0 (    0x10) DYLD-STUB$$MTLPixelFormatGetInfoForDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483b0 (    0x10) DYLD-STUB$$MTLPixelFormatGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483c0 (    0x10) DYLD-STUB$$MTLRemoveDeviceObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483d0 (    0x10) DYLD-STUB$$NSClassFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483e0 (    0x10) DYLD-STUB$$NSLocalizedFileSizeDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f483f0 (    0x10) DYLD-STUB$$NSSelectorFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48400 (    0x10) DYLD-STUB$$NSTemporaryDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48410 (    0x10) DYLD-STUB$$NXClickTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48420 (    0x10) DYLD-STUB$$NXCloseEventStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48430 (    0x10) DYLD-STUB$$NXGetClickSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48440 (    0x10) DYLD-STUB$$NXOpenEventStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48450 (    0x10) DYLD-STUB$$SCDynamicStoreCopyConsoleUser [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48460 (    0x10) DYLD-STUB$$SecTaskCopyValueForEntitlement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48470 (    0x10) DYLD-STUB$$SecTaskCreateFromSelf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48480 (    0x10) DYLD-STUB$$SecTaskCreateWithAuditToken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48490 (    0x10) DYLD-STUB$$SessionGetInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484a0 (    0x10) DYLD-STUB$$UCKeyTranslate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484b0 (    0x10) DYLD-STUB$$VTPixelTransferSessionCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484c0 (    0x10) DYLD-STUB$$VTPixelTransferSessionInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484d0 (    0x10) DYLD-STUB$$VTPixelTransferSessionTransferImage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484e0 (    0x10) DYLD-STUB$$VTSessionSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f484f0 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48500 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48510 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48520 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48530 (    0x10) DYLD-STUB$$_CFAppVersionLessThan [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48540 (    0x10) DYLD-STUB$$_CFBundleCreateWithExecutableURLIfLooksLikeBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48550 (    0x10) DYLD-STUB$$_CFExecutableLinkedOnOrAfter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48560 (    0x10) DYLD-STUB$$_CFMachPortSetOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48570 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48580 (    0x10) DYLD-STUB$$_CFRuntimeGetClassWithTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48590 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485a0 (    0x10) DYLD-STUB$$_CFXPCCreateCFObjectFromXPCObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485b0 (    0x10) DYLD-STUB$$_CFXPCCreateXPCObjectFromCFObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485c0 (    0x10) DYLD-STUB$$_CSCheckFix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485d0 (    0x10) DYLD-STUB$$_IOHIDServiceCopyPropertiesForClient [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485e0 (    0x10) DYLD-STUB$$_IOHIDServiceGetSenderID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f485f0 (    0x10) DYLD-STUB$$_LSASNCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48600 (    0x10) DYLD-STUB$$_LSASNCreateWithPid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48610 (    0x10) DYLD-STUB$$_LSASNExtractHighAndLowParts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48620 (    0x10) DYLD-STUB$$_LSASNGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48630 (    0x10) DYLD-STUB$$_LSASNToUInt64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48640 (    0x10) DYLD-STUB$$_LSCompareASNs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48650 (    0x10) DYLD-STUB$$_LSCompareASNsLong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48660 (    0x10) DYLD-STUB$$_LSCopyApplicationArrayInFrontToBackOrder [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48670 (    0x10) DYLD-STUB$$_LSCopyApplicationInformation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48680 (    0x10) DYLD-STUB$$_LSCopyApplicationInformationItem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48690 (    0x10) DYLD-STUB$$_LSCopyFrontApplication [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486a0 (    0x10) DYLD-STUB$$_LSCopyFrontUIApplication [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486b0 (    0x10) DYLD-STUB$$_LSCopyMatchingApplications [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486c0 (    0x10) DYLD-STUB$$_LSCopyMetaApplicationInformationItem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486d0 (    0x10) DYLD-STUB$$_LSCopyRunningApplicationArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486e0 (    0x10) DYLD-STUB$$_LSDonateActivationToken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f486f0 (    0x10) DYLD-STUB$$_LSGetApplicationInformationSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48700 (    0x10) DYLD-STUB$$_LSGetCurrentActivationToken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48710 (    0x10) DYLD-STUB$$_LSGetCurrentApplicationASN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48720 (    0x10) DYLD-STUB$$_LSGetFrontApplicationSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48730 (    0x10) DYLD-STUB$$_LSGetVisibleApplicationListSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48740 (    0x10) DYLD-STUB$$_LSInvalidateActivationToken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48750 (    0x10) DYLD-STUB$$_LSIsActivationTokenValidForTarget [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48760 (    0x10) DYLD-STUB$$_LSKillApplication [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48770 (    0x10) DYLD-STUB$$_LSModifyNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48780 (    0x10) DYLD-STUB$$_LSOrderApplications [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48790 (    0x10) DYLD-STUB$$_LSPassDownCurrentEventState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487a0 (    0x10) DYLD-STUB$$_LSScheduleNotificationOnQueueWithBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487b0 (    0x10) DYLD-STUB$$_LSSendNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487c0 (    0x10) DYLD-STUB$$_LSSetApplicationInformation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487d0 (    0x10) DYLD-STUB$$_LSSetApplicationInformationItem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487e0 (    0x10) DYLD-STUB$$_LSSetFrontApplication [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f487f0 (    0x10) DYLD-STUB$$_LSSetMetaApplicationInformationItem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48800 (    0x10) DYLD-STUB$$_LSUnscheduleNotificationFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48810 (    0x10) DYLD-STUB$$_MTLOverrideCurrentPreferredDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48820 (    0x10) DYLD-STUB$$_NSGetExecutablePath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48830 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48840 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48850 (    0x10) DYLD-STUB$$std::__1::locale::use_facet(std::__1::locale::id&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48860 (    0x10) DYLD-STUB$$std::__1::ios_base::getloc() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48870 (    0x10) DYLD-STUB$$std::__1::__call_once(unsigned long volatile&, void*, void (*)(void*)) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48880 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48890 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488a0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488b0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::insert(unsigned long, char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488c0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::insert(unsigned long, unsigned long, char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488d0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488e0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f488f0 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::close() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48900 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48910 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::~basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48920 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48930 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48940 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48950 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48960 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::~basic_ostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48970 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(double) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48980 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(float) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48990 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489a0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489b0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489c0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned short) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489d0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned long long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489e0 (    0x10) DYLD-STUB$$std::__1::basic_iostream<char, std::__1::char_traits<char>>::~basic_iostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f489f0 (    0x10) DYLD-STUB$$std::__1::basic_ofstream<char, std::__1::char_traits<char>>::open(char const*, unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a00 (    0x10) DYLD-STUB$$std::__1::basic_ofstream<char, std::__1::char_traits<char>>::open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a10 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a20 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::~basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a30 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a40 (    0x10) DYLD-STUB$$std::__1::recursive_mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a50 (    0x10) DYLD-STUB$$std::__1::recursive_mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a60 (    0x10) DYLD-STUB$$std::__1::recursive_mutex::recursive_mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a70 (    0x10) DYLD-STUB$$std::__1::recursive_mutex::~recursive_mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a80 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::__release_weak() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48a90 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48aa0 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::~__shared_weak_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ab0 (    0x10) DYLD-STUB$$std::__1::mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ac0 (    0x10) DYLD-STUB$$std::__1::mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ad0 (    0x10) DYLD-STUB$$std::__1::mutex::try_lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ae0 (    0x10) DYLD-STUB$$std::__1::mutex::~mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48af0 (    0x10) DYLD-STUB$$void std::__1::__sort<std::__1::__less<int, int>&, int*>(int*, int*, std::__1::__less<int, int>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b00 (    0x10) DYLD-STUB$$void std::__1::__sort<std::__1::__less<unsigned int, unsigned int>&, unsigned int*>(unsigned int*, unsigned int*, std::__1::__less<unsigned int, unsigned int>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b10 (    0x10) DYLD-STUB$$std::__1::chrono::steady_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b20 (    0x10) DYLD-STUB$$std::__1::locale::~locale() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b30 (    0x10) DYLD-STUB$$std::__1::ios_base::init(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b40 (    0x10) DYLD-STUB$$std::__1::ios_base::clear(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b50 (    0x10) DYLD-STUB$$std::__1::basic_ios<char, std::__1::char_traits<char>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b60 (    0x10) DYLD-STUB$$std::__1::to_string(float) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b70 (    0x10) DYLD-STUB$$std::__1::to_string(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b80 (    0x10) DYLD-STUB$$std::__1::to_string(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48b90 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char>>(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ba0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48bb0 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48bc0 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48bd0 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48be0 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48bf0 (    0x10) DYLD-STUB$$operator new(unsigned long, std::nothrow_t const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c00 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c10 (    0x10) DYLD-STUB$$__cxa_atexit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c20 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c30 (    0x10) DYLD-STUB$$__cxa_demangle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c40 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c50 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c60 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c70 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c80 (    0x10) DYLD-STUB$$__invert_f3 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48c90 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ca0 (    0x10) DYLD-STUB$$__memcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48cb0 (    0x10) DYLD-STUB$$__sincosf_stret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48cc0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48cd0 (    0x10) DYLD-STUB$$__strlcat_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ce0 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48cf0 (    0x10) DYLD-STUB$$__tolower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d00 (    0x10) DYLD-STUB$$__udivti3 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d10 (    0x10) DYLD-STUB$$_dispatch_get_main_queue_port_4CF [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d20 (    0x10) DYLD-STUB$$_dispatch_main_queue_callback_4CF [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d30 (    0x10) DYLD-STUB$$_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d40 (    0x10) DYLD-STUB$$_mthid_appendBehaviorToGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d50 (    0x10) DYLD-STUB$$_mthid_createAggregateGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d60 (    0x10) DYLD-STUB$$_mthid_createGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d70 (    0x10) DYLD-STUB$$_mthid_serializeGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d80 (    0x10) DYLD-STUB$$_mthid_unserializeGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48d90 (    0x10) DYLD-STUB$$_os_feature_enabled_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48da0 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48db0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48dc0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48dd0 (    0x10) DYLD-STUB$$_os_nospin_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48de0 (    0x10) DYLD-STUB$$_os_nospin_lock_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48df0 (    0x10) DYLD-STUB$$_os_nospin_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e00 (    0x10) DYLD-STUB$$_os_signpost_emit_unreliably_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e10 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e20 (    0x10) DYLD-STUB$$_sl_dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e30 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e40 (    0x10) DYLD-STUB$$abort_report_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e50 (    0x10) DYLD-STUB$$analytics_send_event_lazy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e60 (    0x10) DYLD-STUB$$arc4random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e70 (    0x10) DYLD-STUB$$arc4random_uniform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e80 (    0x10) DYLD-STUB$$asctime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48e90 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ea0 (    0x10) DYLD-STUB$$atan [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48eb0 (    0x10) DYLD-STUB$$atan2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ec0 (    0x10) DYLD-STUB$$audit_token_to_asid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ed0 (    0x10) DYLD-STUB$$audit_token_to_auid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ee0 (    0x10) DYLD-STUB$$audit_token_to_egid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ef0 (    0x10) DYLD-STUB$$audit_token_to_euid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f00 (    0x10) DYLD-STUB$$audit_token_to_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f10 (    0x10) DYLD-STUB$$audit_token_to_pidversion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f20 (    0x10) DYLD-STUB$$audit_token_to_rgid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f30 (    0x10) DYLD-STUB$$audit_token_to_ruid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f40 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f50 (    0x10) DYLD-STUB$$backtrace_symbols [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f60 (    0x10) DYLD-STUB$$basename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f70 (    0x10) DYLD-STUB$$basename_r [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f80 (    0x10) DYLD-STUB$$bootstrap_check_in [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48f90 (    0x10) DYLD-STUB$$bootstrap_look_up2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48fa0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48fb0 (    0x10) DYLD-STUB$$cache_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48fc0 (    0x10) DYLD-STUB$$cache_get_and_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48fd0 (    0x10) DYLD-STUB$$cache_release_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48fe0 (    0x10) DYLD-STUB$$cache_remove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f48ff0 (    0x10) DYLD-STUB$$cache_set_and_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49000 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49010 (    0x10) DYLD-STUB$$chdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49020 (    0x10) DYLD-STUB$$chmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49030 (    0x10) DYLD-STUB$$chown [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49040 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49050 (    0x10) DYLD-STUB$$compression_encode_buffer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49060 (    0x10) DYLD-STUB$$copyfile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49070 (    0x10) DYLD-STUB$$cos [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49080 (    0x10) DYLD-STUB$$cosf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49090 (    0x10) DYLD-STUB$$crc32 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490a0 (    0x10) DYLD-STUB$$difftime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490b0 (    0x10) DYLD-STUB$$dispatch_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490c0 (    0x10) DYLD-STUB$$dispatch_after [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490d0 (    0x10) DYLD-STUB$$dispatch_assert_queue$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490e0 (    0x10) DYLD-STUB$$dispatch_assert_queue_not$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f490f0 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49100 (    0x10) DYLD-STUB$$dispatch_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49110 (    0x10) DYLD-STUB$$dispatch_data_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49120 (    0x10) DYLD-STUB$$dispatch_get_current_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49130 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49140 (    0x10) DYLD-STUB$$dispatch_group_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49150 (    0x10) DYLD-STUB$$dispatch_group_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49160 (    0x10) DYLD-STUB$$dispatch_group_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49170 (    0x10) DYLD-STUB$$dispatch_io_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49180 (    0x10) DYLD-STUB$$dispatch_io_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49190 (    0x10) DYLD-STUB$$dispatch_io_write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491a0 (    0x10) DYLD-STUB$$dispatch_mig_server [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491b0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491c0 (    0x10) DYLD-STUB$$dispatch_pthread_root_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491d0 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_autorelease_frequency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491e0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f491f0 (    0x10) DYLD-STUB$$dispatch_queue_create_with_target$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49200 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49210 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49220 (    0x10) DYLD-STUB$$dispatch_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49230 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49240 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49250 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49260 (    0x10) DYLD-STUB$$dispatch_set_target_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49270 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49280 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49290 (    0x10) DYLD-STUB$$dispatch_source_get_handle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492a0 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492b0 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492c0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492d0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492e0 (    0x10) DYLD-STUB$$dispatch_source_set_registration_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f492f0 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49300 (    0x10) DYLD-STUB$$dispatch_source_testcancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49310 (    0x10) DYLD-STUB$$dispatch_suspend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49320 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49330 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49340 (    0x10) DYLD-STUB$$dispatch_walltime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49350 (    0x10) DYLD-STUB$$dladdr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49360 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49370 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49380 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49390 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493a0 (    0x10) DYLD-STUB$$dyld_shared_cache_some_image_overridden [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493b0 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493c0 (    0x10) DYLD-STUB$$exp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493d0 (    0x10) DYLD-STUB$$fchmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493e0 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f493f0 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49400 (    0x10) DYLD-STUB$$fdopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49410 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49420 (    0x10) DYLD-STUB$$fileno [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49430 (    0x10) DYLD-STUB$$fileport_makefd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49440 (    0x10) DYLD-STUB$$fileport_makeport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49450 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49460 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49470 (    0x10) DYLD-STUB$$fprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49480 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49490 (    0x10) DYLD-STUB$$fputs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494a0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494b0 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494c0 (    0x10) DYLD-STUB$$getaudit_addr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494d0 (    0x10) DYLD-STUB$$getcwd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494e0 (    0x10) DYLD-STUB$$getegid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f494f0 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49500 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49510 (    0x10) DYLD-STUB$$getgrouplist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49520 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49530 (    0x10) DYLD-STUB$$getpwnam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49540 (    0x10) DYLD-STUB$$getpwuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49550 (    0x10) DYLD-STUB$$getsectbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49560 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49570 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49580 (    0x10) DYLD-STUB$$host_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49590 (    0x10) DYLD-STUB$$hypot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495a0 (    0x10) DYLD-STUB$$hypotf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495b0 (    0x10) DYLD-STUB$$kdebug_is_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495c0 (    0x10) DYLD-STUB$$kdebug_trace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495d0 (    0x10) DYLD-STUB$$killpg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495e0 (    0x10) DYLD-STUB$$localtime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f495f0 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49600 (    0x10) DYLD-STUB$$mach_continuous_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49610 (    0x10) DYLD-STUB$$mach_error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49620 (    0x10) DYLD-STUB$$mach_error_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49630 (    0x10) DYLD-STUB$$mach_get_times [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49640 (    0x10) DYLD-STUB$$mach_host_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49650 (    0x10) DYLD-STUB$$mach_make_memory_entry_64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49660 (    0x10) DYLD-STUB$$mach_msg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49670 (    0x10) DYLD-STUB$$mach_msg_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49680 (    0x10) DYLD-STUB$$mach_msg_overwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49690 (    0x10) DYLD-STUB$$mach_port_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496a0 (    0x10) DYLD-STUB$$mach_port_construct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496b0 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496c0 (    0x10) DYLD-STUB$$mach_port_get_attributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496d0 (    0x10) DYLD-STUB$$mach_port_get_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496e0 (    0x10) DYLD-STUB$$mach_port_insert_right [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f496f0 (    0x10) DYLD-STUB$$mach_port_mod_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49700 (    0x10) DYLD-STUB$$mach_port_move_member [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49710 (    0x10) DYLD-STUB$$mach_port_request_notification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49720 (    0x10) DYLD-STUB$$mach_port_set_attributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49730 (    0x10) DYLD-STUB$$mach_port_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49740 (    0x10) DYLD-STUB$$mach_port_unguard [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49750 (    0x10) DYLD-STUB$$mach_thread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49760 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49770 (    0x10) DYLD-STUB$$mach_vm_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49780 (    0x10) DYLD-STUB$$mach_vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49790 (    0x10) DYLD-STUB$$mach_vm_map [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497a0 (    0x10) DYLD-STUB$$mach_vm_protect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497b0 (    0x10) DYLD-STUB$$mach_vm_purgable_control [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497c0 (    0x10) DYLD-STUB$$mach_vm_region [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497d0 (    0x10) DYLD-STUB$$mach_wait_until [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497e0 (    0x10) DYLD-STUB$$madvise [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f497f0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49800 (    0x10) DYLD-STUB$$malloc_zone_statistics [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49810 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49820 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49830 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49840 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49850 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49860 (    0x10) DYLD-STUB$$memset_pattern16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49870 (    0x10) DYLD-STUB$$memset_pattern4 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49880 (    0x10) DYLD-STUB$$mergesort_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49890 (    0x10) DYLD-STUB$$mig_dealloc_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498a0 (    0x10) DYLD-STUB$$mig_dealloc_special_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498b0 (    0x10) DYLD-STUB$$mig_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498c0 (    0x10) DYLD-STUB$$mig_get_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498d0 (    0x10) DYLD-STUB$$mig_get_special_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498e0 (    0x10) DYLD-STUB$$mig_put_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f498f0 (    0x10) DYLD-STUB$$mig_strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49900 (    0x10) DYLD-STUB$$mig_strncpy_zerofill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49910 (    0x10) DYLD-STUB$$mk_timer_arm_leeway [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49920 (    0x10) DYLD-STUB$$mk_timer_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49930 (    0x10) DYLD-STUB$$mk_timer_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49940 (    0x10) DYLD-STUB$$mkstemps [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49950 (    0x10) DYLD-STUB$$mktemp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49960 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49970 (    0x10) DYLD-STUB$$msgtracer_domain_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49980 (    0x10) DYLD-STUB$$msgtracer_domain_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49990 (    0x10) DYLD-STUB$$msgtracer_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499a0 (    0x10) DYLD-STUB$$msgtracer_msg_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499b0 (    0x10) DYLD-STUB$$msgtracer_msg_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499c0 (    0x10) DYLD-STUB$$msgtracer_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499d0 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499e0 (    0x10) DYLD-STUB$$nanosleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f499f0 (    0x10) DYLD-STUB$$nextafter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a00 (    0x10) DYLD-STUB$$notify_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a10 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a20 (    0x10) DYLD-STUB$$notify_register_mach_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a30 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a40 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a50 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a60 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a70 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a80 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49a90 (    0x10) DYLD-STUB$$objc_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49aa0 (    0x10) DYLD-STUB$$objc_copyStruct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ab0 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ac0 (    0x10) DYLD-STUB$$objc_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ad0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ae0 (    0x10) DYLD-STUB$$objc_exception_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49af0 (    0x10) DYLD-STUB$$objc_getAssociatedObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b00 (    0x10) DYLD-STUB$$objc_getClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b10 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b20 (    0x10) DYLD-STUB$$objc_loadWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b30 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b40 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b50 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b60 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b70 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b80 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49b90 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ba0 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49bb0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49bc0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49bd0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49be0 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49bf0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c00 (    0x10) DYLD-STUB$$objc_setAssociatedObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c10 (    0x10) DYLD-STUB$$objc_setProperty_atomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c20 (    0x10) DYLD-STUB$$objc_setProperty_atomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c30 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c40 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c50 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c60 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c70 (    0x10) DYLD-STUB$$objc_sync_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c80 (    0x10) DYLD-STUB$$objc_sync_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49c90 (    0x10) DYLD-STUB$$objc_terminate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ca0 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49cb0 (    0x10) DYLD-STUB$$openlog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49cc0 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49cd0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ce0 (    0x10) DYLD-STUB$$os_log_with_args [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49cf0 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d00 (    0x10) DYLD-STUB$$os_signpost_id_generate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d10 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d20 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d30 (    0x10) DYLD-STUB$$os_variant_allows_internal_security_policies [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d40 (    0x10) DYLD-STUB$$os_variant_has_internal_ui [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d50 (    0x10) DYLD-STUB$$os_variant_is_basesystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d60 (    0x10) DYLD-STUB$$os_variant_is_recovery [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d70 (    0x10) DYLD-STUB$$perror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d80 (    0x10) DYLD-STUB$$pipe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49d90 (    0x10) DYLD-STUB$$posix_spawn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49da0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_addinherit_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49db0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49dc0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49dd0 (    0x10) DYLD-STUB$$posix_spawnattr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49de0 (    0x10) DYLD-STUB$$posix_spawnattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49df0 (    0x10) DYLD-STUB$$posix_spawnattr_setflags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e00 (    0x10) DYLD-STUB$$posix_spawnattr_setpgroup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e10 (    0x10) DYLD-STUB$$posix_spawnattr_setsigdefault [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e20 (    0x10) DYLD-STUB$$posix_spawnattr_setspecialport_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e30 (    0x10) DYLD-STUB$$pow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e40 (    0x10) DYLD-STUB$$powf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e50 (    0x10) DYLD-STUB$$proc_pidinfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e60 (    0x10) DYLD-STUB$$protocol_getMethodDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e70 (    0x10) DYLD-STUB$$pthread_attr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e80 (    0x10) DYLD-STUB$$pthread_attr_getschedparam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49e90 (    0x10) DYLD-STUB$$pthread_attr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ea0 (    0x10) DYLD-STUB$$pthread_attr_setschedparam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49eb0 (    0x10) DYLD-STUB$$pthread_attr_setschedpolicy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ec0 (    0x10) DYLD-STUB$$pthread_cond_broadcast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ed0 (    0x10) DYLD-STUB$$pthread_cond_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ee0 (    0x10) DYLD-STUB$$pthread_cond_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ef0 (    0x10) DYLD-STUB$$pthread_cond_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f00 (    0x10) DYLD-STUB$$pthread_cond_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f10 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f20 (    0x10) DYLD-STUB$$pthread_equal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f30 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f40 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f50 (    0x10) DYLD-STUB$$pthread_main_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f60 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f70 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f80 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49f90 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49fa0 (    0x10) DYLD-STUB$$pthread_mutexattr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49fb0 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49fc0 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49fd0 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49fe0 (    0x10) DYLD-STUB$$pthread_setname_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f49ff0 (    0x10) DYLD-STUB$$pthread_setschedparam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a000 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a010 (    0x10) DYLD-STUB$$putenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a020 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a030 (    0x10) DYLD-STUB$$qsort_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a040 (    0x10) DYLD-STUB$$rand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a050 (    0x10) DYLD-STUB$$random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a060 (    0x10) DYLD-STUB$$readlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a070 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a080 (    0x10) DYLD-STUB$$reallocf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a090 (    0x10) DYLD-STUB$$rect_to_bounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0a0 (    0x10) DYLD-STUB$$region_create_with_shape [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0b0 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0c0 (    0x10) DYLD-STUB$$sandbox_check_by_audit_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0d0 (    0x10) DYLD-STUB$$sched_get_priority_max [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0e0 (    0x10) DYLD-STUB$$sel_getUid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a0f0 (    0x10) DYLD-STUB$$semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a100 (    0x10) DYLD-STUB$$semaphore_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a110 (    0x10) DYLD-STUB$$semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a120 (    0x10) DYLD-STUB$$semaphore_timedwait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a130 (    0x10) DYLD-STUB$$semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a140 (    0x10) DYLD-STUB$$setegid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a150 (    0x10) DYLD-STUB$$seteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a160 (    0x10) DYLD-STUB$$setlogin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a170 (    0x10) DYLD-STUB$$setsid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a180 (    0x10) DYLD-STUB$$shape_alloc_bounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a190 (    0x10) DYLD-STUB$$shape_bounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1a0 (    0x10) DYLD-STUB$$shape_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1b0 (    0x10) DYLD-STUB$$shape_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1c0 (    0x10) DYLD-STUB$$shape_difference [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1d0 (    0x10) DYLD-STUB$$shape_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1e0 (    0x10) DYLD-STUB$$shape_enum_binary_clean_up [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a1f0 (    0x10) DYLD-STUB$$shape_enum_binary_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a200 (    0x10) DYLD-STUB$$shape_enum_binary_next [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a210 (    0x10) DYLD-STUB$$shape_forward_enum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a220 (    0x10) DYLD-STUB$$shape_forward_enum_next [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a230 (    0x10) DYLD-STUB$$shape_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a240 (    0x10) DYLD-STUB$$shape_inset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a250 (    0x10) DYLD-STUB$$shape_intersect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a260 (    0x10) DYLD-STUB$$shape_intersect_with_bounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a270 (    0x10) DYLD-STUB$$shape_is_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a280 (    0x10) DYLD-STUB$$shape_offset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a290 (    0x10) DYLD-STUB$$shape_union [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2a0 (    0x10) DYLD-STUB$$shm_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2b0 (    0x10) DYLD-STUB$$sigaction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2c0 (    0x10) DYLD-STUB$$signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2d0 (    0x10) DYLD-STUB$$sin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2e0 (    0x10) DYLD-STUB$$sinf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a2f0 (    0x10) DYLD-STUB$$sleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a300 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a310 (    0x10) DYLD-STUB$$snprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a320 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a330 (    0x10) DYLD-STUB$$strcasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a340 (    0x10) DYLD-STUB$$strcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a350 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a360 (    0x10) DYLD-STUB$$strcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a370 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a380 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a390 (    0x10) DYLD-STUB$$strftime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3a0 (    0x10) DYLD-STUB$$strlcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3b0 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3c0 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3d0 (    0x10) DYLD-STUB$$strncasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3e0 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a3f0 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a400 (    0x10) DYLD-STUB$$strndup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a410 (    0x10) DYLD-STUB$$strnlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a420 (    0x10) DYLD-STUB$$strnstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a430 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a440 (    0x10) DYLD-STUB$$strtoll [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a450 (    0x10) DYLD-STUB$$sysctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a460 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a470 (    0x10) DYLD-STUB$$sysctlnametomib [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a480 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a490 (    0x10) DYLD-STUB$$task_create_identity_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4a0 (    0x10) DYLD-STUB$$task_get_special_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4b0 (    0x10) DYLD-STUB$$task_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4c0 (    0x10) DYLD-STUB$$task_name_for_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4d0 (    0x10) DYLD-STUB$$task_policy_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4e0 (    0x10) DYLD-STUB$$thread_policy_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a4f0 (    0x10) DYLD-STUB$$thread_switch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a500 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a510 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a520 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a530 (    0x10) DYLD-STUB$$uuid_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a540 (    0x10) DYLD-STUB$$uuid_is_null [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a550 (    0x10) DYLD-STUB$$uuid_parse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a560 (    0x10) DYLD-STUB$$uuid_unparse_upper [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a570 (    0x10) DYLD-STUB$$vImageConvolve_Planar8 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a580 (    0x10) DYLD-STUB$$vImageExtractChannel_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a590 (    0x10) DYLD-STUB$$vImageGetResamplingFilterSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5a0 (    0x10) DYLD-STUB$$vImageHorizontalShear_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5b0 (    0x10) DYLD-STUB$$vImageMax_Planar8 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5c0 (    0x10) DYLD-STUB$$vImageNewResamplingFilterForFunctionUsingBuffer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5d0 (    0x10) DYLD-STUB$$vImagePermuteChannels_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5e0 (    0x10) DYLD-STUB$$vImagePremultiplyData_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a5f0 (    0x10) DYLD-STUB$$vImageRotate90_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a600 (    0x10) DYLD-STUB$$vImageScale_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a610 (    0x10) DYLD-STUB$$vImageScale_Planar8 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a620 (    0x10) DYLD-STUB$$vImageUnpremultiplyData_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a630 (    0x10) DYLD-STUB$$vImageVerticalShear_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a640 (    0x10) DYLD-STUB$$vasprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a650 (    0x10) DYLD-STUB$$vasprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a660 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a670 (    0x10) DYLD-STUB$$vm_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a680 (    0x10) DYLD-STUB$$vm_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a690 (    0x10) DYLD-STUB$$vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6a0 (    0x10) DYLD-STUB$$vm_inherit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6b0 (    0x10) DYLD-STUB$$voucher_mach_msg_adopt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6c0 (    0x10) DYLD-STUB$$voucher_mach_msg_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6d0 (    0x10) DYLD-STUB$$voucher_mach_msg_revert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6e0 (    0x10) DYLD-STUB$$voucher_mach_msg_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a6f0 (    0x10) DYLD-STUB$$vsnprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a700 (    0x10) DYLD-STUB$$waitpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a710 (    0x10) DYLD-STUB$$wd_endpoint_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a720 (    0x10) DYLD-STUB$$wd_endpoint_add_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a730 (    0x10) DYLD-STUB$$wd_endpoint_add_work_processor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a740 (    0x10) DYLD-STUB$$wd_endpoint_register [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a750 (    0x10) DYLD-STUB$$wd_endpoint_set_alive_func [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a760 (    0x10) DYLD-STUB$$work_interval_copy_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a770 (    0x10) DYLD-STUB$$work_interval_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a780 (    0x10) DYLD-STUB$$work_interval_instance_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a790 (    0x10) DYLD-STUB$$work_interval_instance_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7a0 (    0x10) DYLD-STUB$$work_interval_instance_finish [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7b0 (    0x10) DYLD-STUB$$work_interval_instance_set_complexity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7c0 (    0x10) DYLD-STUB$$work_interval_instance_set_deadline [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7d0 (    0x10) DYLD-STUB$$work_interval_instance_set_finish [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7e0 (    0x10) DYLD-STUB$$work_interval_instance_set_start [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a7f0 (    0x10) DYLD-STUB$$work_interval_instance_start [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a800 (    0x10) DYLD-STUB$$work_interval_instance_update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a810 (    0x10) DYLD-STUB$$work_interval_join [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a820 (    0x10) DYLD-STUB$$work_interval_join_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a830 (    0x10) DYLD-STUB$$work_interval_leave [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a840 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a850 (    0x10) DYLD-STUB$$xpc_array_append_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a860 (    0x10) DYLD-STUB$$xpc_array_apply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a870 (    0x10) DYLD-STUB$$xpc_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a880 (    0x10) DYLD-STUB$$xpc_array_create_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a890 (    0x10) DYLD-STUB$$xpc_array_get_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8a0 (    0x10) DYLD-STUB$$xpc_array_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8b0 (    0x10) DYLD-STUB$$xpc_array_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8c0 (    0x10) DYLD-STUB$$xpc_array_set_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8d0 (    0x10) DYLD-STUB$$xpc_bool_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8e0 (    0x10) DYLD-STUB$$xpc_connection_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a8f0 (    0x10) DYLD-STUB$$xpc_connection_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a900 (    0x10) DYLD-STUB$$xpc_connection_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a910 (    0x10) DYLD-STUB$$xpc_connection_create_from_endpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a920 (    0x10) DYLD-STUB$$xpc_connection_create_mach_service [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a930 (    0x10) DYLD-STUB$$xpc_connection_get_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a940 (    0x10) DYLD-STUB$$xpc_connection_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a950 (    0x10) DYLD-STUB$$xpc_connection_send_message [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a960 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a970 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a980 (    0x10) DYLD-STUB$$xpc_connection_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a990 (    0x10) DYLD-STUB$$xpc_connection_set_target_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9a0 (    0x10) DYLD-STUB$$xpc_connection_set_target_uid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9b0 (    0x10) DYLD-STUB$$xpc_copy_entitlement_for_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9c0 (    0x10) DYLD-STUB$$xpc_copy_entitlement_for_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9d0 (    0x10) DYLD-STUB$$xpc_copy_entitlements_for_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9e0 (    0x10) DYLD-STUB$$xpc_create_from_plist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4a9f0 (    0x10) DYLD-STUB$$xpc_data_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa00 (    0x10) DYLD-STUB$$xpc_data_create_with_dispatch_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa10 (    0x10) DYLD-STUB$$xpc_data_get_bytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa20 (    0x10) DYLD-STUB$$xpc_data_get_bytes_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa30 (    0x10) DYLD-STUB$$xpc_data_get_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa40 (    0x10) DYLD-STUB$$xpc_dictionary_apply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa50 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa60 (    0x10) DYLD-STUB$$xpc_dictionary_create_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa70 (    0x10) DYLD-STUB$$xpc_dictionary_create_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa80 (    0x10) DYLD-STUB$$xpc_dictionary_extract_mach_recv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aa90 (    0x10) DYLD-STUB$$xpc_dictionary_get_array [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aaa0 (    0x10) DYLD-STUB$$xpc_dictionary_get_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aab0 (    0x10) DYLD-STUB$$xpc_dictionary_get_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aac0 (    0x10) DYLD-STUB$$xpc_dictionary_get_dictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aad0 (    0x10) DYLD-STUB$$xpc_dictionary_get_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aae0 (    0x10) DYLD-STUB$$xpc_dictionary_get_remote_connection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aaf0 (    0x10) DYLD-STUB$$xpc_dictionary_get_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab00 (    0x10) DYLD-STUB$$xpc_dictionary_get_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab10 (    0x10) DYLD-STUB$$xpc_dictionary_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab20 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab30 (    0x10) DYLD-STUB$$xpc_dictionary_set_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab40 (    0x10) DYLD-STUB$$xpc_dictionary_set_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab50 (    0x10) DYLD-STUB$$xpc_dictionary_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab60 (    0x10) DYLD-STUB$$xpc_dictionary_set_mach_recv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab70 (    0x10) DYLD-STUB$$xpc_dictionary_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab80 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ab90 (    0x10) DYLD-STUB$$xpc_dictionary_set_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4aba0 (    0x10) DYLD-STUB$$xpc_double_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4abb0 (    0x10) DYLD-STUB$$xpc_endpoint_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4abc0 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4abd0 (    0x10) DYLD-STUB$$xpc_int64_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4abe0 (    0x10) DYLD-STUB$$xpc_mach_send_copy_right [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4abf0 (    0x10) DYLD-STUB$$xpc_mach_send_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac00 (    0x10) DYLD-STUB$$xpc_pipe_create_from_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac10 (    0x10) DYLD-STUB$$xpc_pipe_receive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac20 (    0x10) DYLD-STUB$$xpc_pipe_simpleroutine [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac30 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac40 (    0x10) DYLD-STUB$$xpc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac50 (    0x10) DYLD-STUB$$xpc_string_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac60 (    0x10) DYLD-STUB$$xpc_string_get_string_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac70 (    0x10) DYLD-STUB$$xpc_uint64_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000185f4ac80 (    0x10) DYLD-STUB$$xpc_uint64_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000185f4ac90 (    0x30) __TEXT __init_offsets
            0x0000000185f4acc0 (  0x591c) __TEXT __objc_methlist
                0x0000000185f4acc0 (    0x20) _OBJC_$_CLASS_METHODS_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x0000000185f4ace0 (    0x18) _OBJC_$_CLASS_METHODS_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x0000000185f4acf8 (    0x18) _OBJC_$_CLASS_METHODS_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad10 (    0x18) _OBJC_$_CLASS_METHODS_SLContentStream [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad28 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad40 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad58 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad70 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4ad88 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4ada0 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4adb8 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4add0 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x0000000185f4ade8 (    0x18) _OBJC_$_CLASS_METHODS_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x0000000185f4ae00 (    0x30) _OBJC_$_CLASS_METHODS_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x0000000185f4ae30 (    0x30) _OBJC_$_CLASS_METHODS_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4ae60 (    0x18) _OBJC_$_CLASS_METHODS_SLSAsynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) [NameNList, MangledNameNList, NList] 
                0x0000000185f4ae78 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ae90 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4aea8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4aec0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4aed8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4aef0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af08 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyManagedDisplaySpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af20 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyManagedDisplaysOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af38 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af50 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af68 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af80 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4af98 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedGetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4afb0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4afc8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4afe0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4aff8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b010 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b028 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b040 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b058 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b070 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b088 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b0a0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b0b8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b0d0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b0e8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b100 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b118 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b130 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b148 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b160 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b178 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b190 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b1a8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b1c0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b1d8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b1f0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b208 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b220 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b238 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b250 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b268 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b280 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b298 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b2b0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b2c8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b2e0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b2f8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b310 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b328 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b340 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b358 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b370 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b388 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b3a0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b3b8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b3d0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b3e8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b400 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b418 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b430 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b448 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b460 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b478 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b490 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b4a8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b4c0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b4d8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b4f0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b508 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b520 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b538 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b550 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b568 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b580 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b598 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b5b0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b5c8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b5e0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b5f8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b610 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4b628 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b640 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b658 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b670 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x0000000185f4b688 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b6a0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b6b8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b6d0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b6e8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b700 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b718 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b730 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b748 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b760 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b778 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b790 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b7a8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b7c0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b7d8 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b7f0 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b808 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b820 (    0x18) _OBJC_$_CLASS_METHODS_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4b838 (    0x18) _OBJC_$_CLASS_METHODS_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x0000000185f4b850 (    0x18) _OBJC_$_CLASS_METHODS_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4b868 (    0x20) _OBJC_$_CLASS_METHODS_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x0000000185f4b888 (    0x18) _OBJC_$_CLASS_METHODS_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x0000000185f4b8a0 (    0x18) _OBJC_$_CLASS_METHODS_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x0000000185f4b8b8 (    0x18) _OBJC_$_CLASS_METHODS_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
                0x0000000185f4b8d0 (    0x18) _OBJC_$_CLASS_METHODS_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x0000000185f4b8e8 (    0x20) _OBJC_$_CLASS_METHODS_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4b908 (    0x18) _OBJC_$_CLASS_METHODS_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4b920 (    0x18) _OBJC_$_CLASS_METHODS_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4b938 (    0x18) _OBJC_$_CLASS_METHODS_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4b950 (    0x18) _OBJC_$_CLASS_METHODS_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x0000000185f4b968 (    0x30) _OBJC_$_CLASS_METHODS_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x0000000185f4b998 (    0x18) _OBJC_$_CLASS_METHODS_SLSSynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) [NameNList, MangledNameNList, NList] 
                0x0000000185f4b9b0 (    0x18) _OBJC_$_CLASS_METHODS_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x0000000185f4b9c8 (    0x18) _OBJC_$_CLASS_METHODS_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x0000000185f4b9e0 (    0x20) _OBJC_$_CLASS_METHODS_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x0000000185f4ba00 (    0x18) _OBJC_$_CLASS_METHODS_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4ba18 (    0x48) _OBJC_$_CLASS_METHODS_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x0000000185f4ba60 (    0x18) _OBJC_$_CLASS_METHODS_SLSharingSessionManager(System) [NameNList, MangledNameNList, NList] 
                0x0000000185f4ba78 (    0x18) _OBJC_$_CLASS_METHODS_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x0000000185f4ba90 (    0x30) _OBJC_$_CLASS_METHODS_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000185f4bac0 (    0x20) _OBJC_$_CLASS_METHODS_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x0000000185f4bae0 (    0x20) _OBJC_$_CLASS_METHODS_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x0000000185f4bb00 (    0x38) _OBJC_$_INSTANCE_METHODS_CALayer(PKGCoreUI) [NameNList, MangledNameNList, NList] 
                0x0000000185f4bb38 (    0x38) _OBJC_$_INSTANCE_METHODS_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x0000000185f4bb70 (    0xb0) _OBJC_$_INSTANCE_METHODS_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x0000000185f4bc20 (    0x38) _OBJC_$_INSTANCE_METHODS_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x0000000185f4bc58 (    0x20) _OBJC_$_INSTANCE_METHODS_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x0000000185f4bc78 (    0x38) _OBJC_$_INSTANCE_METHODS_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x0000000185f4bcb0 (    0x50) _OBJC_$_INSTANCE_METHODS_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x0000000185f4bd00 (    0x48) _OBJC_$_INSTANCE_METHODS_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x0000000185f4bd48 (    0x20) _OBJC_$_INSTANCE_METHODS_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4bd68 (   0x138) _OBJC_$_INSTANCE_METHODS_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x0000000185f4bea0 (   0x140) _OBJC_$_INSTANCE_METHODS_SLContentStream [NameNList, MangledNameNList, NList] 
                0x0000000185f4bfe0 (    0xd8) _OBJC_$_INSTANCE_METHODS_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x0000000185f4c0b8 (    0xe0) _OBJC_$_INSTANCE_METHODS_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x0000000185f4c198 (    0xf8) _OBJC_$_INSTANCE_METHODS_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x0000000185f4c290 (    0x68) _OBJC_$_INSTANCE_METHODS_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4c2f8 (    0x68) _OBJC_$_INSTANCE_METHODS_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4c360 (    0x50) _OBJC_$_INSTANCE_METHODS_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4c3b0 (    0x38) _OBJC_$_INSTANCE_METHODS_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4c3e8 (    0x90) _OBJC_$_INSTANCE_METHODS_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x0000000185f4c478 (    0x98) _OBJC_$_INSTANCE_METHODS_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x0000000185f4c510 (    0xa8) _OBJC_$_INSTANCE_METHODS_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x0000000185f4c5b8 (   0x170) _OBJC_$_INSTANCE_METHODS_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x0000000185f4c728 (    0x78) _OBJC_$_INSTANCE_METHODS_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4c7a0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSAsynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) [NameNList, MangledNameNList, NList] 
                0x0000000185f4c7e8 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c848 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c898 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c8e8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c938 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c988 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4c9d8 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyManagedDisplaySpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ca20 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyManagedDisplaysOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ca68 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cad0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cb20 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cbb0 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cc40 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedGetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cc88 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ccd8 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cd40 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cd90 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cde0 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ce48 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cea8 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cf08 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cf68 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4cfc8 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d030 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d098 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d100 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d160 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d1a8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d1f8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d248 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d2a8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d2f8 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d340 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d390 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d3e0 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d448 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d4a8 (    0x80) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d528 (    0x78) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d5a0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d5f0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d640 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d690 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d6e0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d730 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d780 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d7e8 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d850 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d898 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d8e8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d938 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d988 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4d9d8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4da28 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4da78 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dae0 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4db40 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4db90 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dbe0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dc28 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dc78 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dcd8 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dd20 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dd70 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4ddc0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4de10 (    0x80) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4de90 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dee0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4df30 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4df90 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4dfe0 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e040 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e0a0 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e100 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e160 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e1c0 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e220 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e280 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e2d0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e320 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e388 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e3d0 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e420 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x0000000185f4e470 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e4b8 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e4f0 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e528 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x0000000185f4e560 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e5a8 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e5e0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e628 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e670 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e6a8 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e6f0 (    0x30) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e720 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e758 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e790 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e7c8 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e800 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e848 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e898 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e8e0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e928 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e960 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e998 (    0x38) _OBJC_$_INSTANCE_METHODS_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x0000000185f4e9d0 (   0x168) _OBJC_$_INSTANCE_METHODS_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x0000000185f4eb38 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x0000000185f4eb88 (   0x138) _OBJC_$_INSTANCE_METHODS_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x0000000185f4ecc0 (   0x2c0) _OBJC_$_INSTANCE_METHODS_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x0000000185f4ef80 (   0x110) _OBJC_$_INSTANCE_METHODS_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4f090 (    0x78) _OBJC_$_INSTANCE_METHODS_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x0000000185f4f108 (    0xc8) _OBJC_$_INSTANCE_METHODS_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x0000000185f4f1d0 (    0x80) _OBJC_$_INSTANCE_METHODS_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x0000000185f4f250 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x0000000185f4f2b0 (    0x60) _OBJC_$_INSTANCE_METHODS_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
                0x0000000185f4f310 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x0000000185f4f378 (    0xc0) _OBJC_$_INSTANCE_METHODS_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4f438 (    0x78) _OBJC_$_INSTANCE_METHODS_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4f4b0 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4f540 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x0000000185f4f5a8 (    0x50) _OBJC_$_INSTANCE_METHODS_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x0000000185f4f5f8 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x0000000185f4f660 (   0x200) _OBJC_$_INSTANCE_METHODS_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4f860 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSSynchronousBridgedWindowManagementOperation(SLSWindowManagementBridge) [NameNList, MangledNameNList, NList] 
                0x0000000185f4f8a8 (    0x98) _OBJC_$_INSTANCE_METHODS_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x0000000185f4f940 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x0000000185f4f988 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x0000000185f4f9d0 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x0000000185f4fa60 (    0xa8) _OBJC_$_INSTANCE_METHODS_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x0000000185f4fb08 (   0x1e8) _OBJC_$_INSTANCE_METHODS_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x0000000185f4fcf0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x0000000185f4fd38 (    0xa8) _OBJC_$_INSTANCE_METHODS_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x0000000185f4fde0 (    0x48) _OBJC_$_INSTANCE_METHODS_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x0000000185f4fe28 (    0x68) _OBJC_$_INSTANCE_METHODS_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x0000000185f4fe90 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x0000000185f4ff20 (   0x108) _OBJC_$_INSTANCE_METHODS_SLSharingSession(System) [NameNList, MangledNameNList, NList] 
                0x0000000185f50028 (    0x90) _OBJC_$_INSTANCE_METHODS_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x0000000185f500b8 (   0x110) _OBJC_$_INSTANCE_METHODS_SLSharingSessionManager(System) [NameNList, MangledNameNList, NList] 
                0x0000000185f501c8 (    0x78) _OBJC_$_INSTANCE_METHODS_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x0000000185f50240 (    0x68) _OBJC_$_INSTANCE_METHODS_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x0000000185f502a8 (    0xe0) _OBJC_$_INSTANCE_METHODS_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000185f50388 (    0xc0) _OBJC_$_INSTANCE_METHODS_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x0000000185f50448 (    0x78) _OBJC_$_INSTANCE_METHODS_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x0000000185f504c0 (   0x11c) _OBJC_$_INSTANCE_METHODS_SLWindowFilter [NameNList, MangledNameNList, NList] 
            0x0000000185f505e0 ( 0x254b0) __TEXT __const
                0x0000000185f52ac8 (    0x64) AdditionModifierMask [NameNList, MangledNameNList, NList] 
                0x0000000185f52b2c (   0x104) hid_usb_2_adb_keymap [NameNList, MangledNameNList, NList] 
                0x0000000185f52c30 (   0x118) ModifierInfoTable [NameNList, MangledNameNList, NList] 
                0x0000000185f52d48 (    0xa8) WS::Displays::AspectRatio::AspectRatio(unsigned long, unsigned long)::target_pixel_widths [NameNList, MangledNameNList, NList] 
                0x0000000185f52df0 (    0xd8) __IOHIDPointerEventTranslatorCreateScrollEvent(__IOHIDPointerEventTranslator*, EVENT_TRANSLATOR_CONTEXT*, __IOHIDEvent*, __IOHIDEvent*)::fields [NameNList, MangledNameNList, NList] 
                0x0000000185f52ec8 (   0x7d8) gCGSMacPalette [NameNList, MangledNameNList, NList] 
                0x0000000185f536a0 (     0x8) std::__1::piecewise_construct (.3394) [NameNList, MangledNameNList, NList] 
                0x0000000185f536a8 (    0x38) kCGSDeviceUndefinedResolution [NameNList, MangledNameNList, NList] 
                0x0000000185f536e0 (   0x570) CGSDefaultKeymap [NameNList, MangledNameNList, NList] 
                0x0000000185f53c50 (   0x120) copy_empty_image.emptyImageBits [NameNList, MangledNameNList, NList] 
                0x0000000185f53d70 (    0x10) __SLPixelAccessCreateImageFromRect.decode [NameNList, MangledNameNList, NList] 
                0x0000000185f53d80 (    0x20) __SLPixelAccessCreateImageFromRect.matte [NameNList, MangledNameNList, NList] 
                0x0000000185f53da0 (   0x740) SLSInputModifierKeyState::maskForKey [NameNList, MangledNameNList, NList] 
                0x0000000185f544e0 (    0xc8) MetalContext::RippleTexture()::waveData [NameNList, MangledNameNList, NList] 
                0x0000000185f545a8 (    0x80) std::__1::piecewise_construct (.6475) [NameNList, MangledNameNList, NList] 
                0x0000000185f54628 (    0x16) kSLSDisplayConfigurationTimeline [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f5463e (     0xd) kSLSDisplayFadeTimeline [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f5464b (    0x19) kSLSDisplayUUIDCallbackTimeline [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f54664 (  0x1c9c) GetBSDProcessList(kinfo_proc**, unsigned long*)::name [NameNList, MangledNameNList, NList] 
                0x0000000185f56300 (    0x24) WS::Displays::SLCADisplay::preset_update()::identity_matrix [NameNList, MangledNameNList, NList] 
                0x0000000185f56324 (    0x10) WS::Displays::SLCADisplay::set_calibration_preset()::hdr_video_uid [NameNList, MangledNameNList, NList] 
                0x0000000185f56334 (   0x1ec) WS::Displays::CAWSManager::display_request_validate_transition(double, unsigned long long, void (CGError, unsigned long long, SLSDisplayControl) block_pointer, SLSDisplayControl&, bool&, SLSDisplayPowerStateNotificationType&, SLSDisplayPowerStateNotificationType&)::display_change_requests [NameNList, MangledNameNList, NList] 
                0x0000000185f56520 (    0x48) kSLSHIDEventTypeDirectTouch [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56568 (    0x78) _CreateTileShadow(PKGSpace*)::bytes [NameNList, MangledNameNList, NList] 
                0x0000000185f565e0 (    0x30) ColorConverter::cc_identity_matrix [NameNList, MangledNameNList, NList] 
                0x0000000185f56610 (    0x90) ColorConverter::cc_linear_fargs [NameNList, MangledNameNList, NList] 
                0x0000000185f566a0 (   0x1c0) PKGWindowDataConstraintsZero [NameNList, MangledNameNList, NList] 
                0x0000000185f56860 (    0x50) kSLSPowerStateNotificationPayloadNone [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f568b0 (    0x20) g_parallelEdges [NameNList, MangledNameNList, NList] 
                0x0000000185f568d0 (    0x20) _CGSnappingInfoEvaluateGuide.normals [NameNList, MangledNameNList, NList] 
                0x0000000185f568f0 (     0x4) std::__1::piecewise_construct (.11883) [NameNList, MangledNameNList, NList] 
                0x0000000185f568f4 (     0x4) kSLSSpaceAbsoluteLevelDefault [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f568f8 (     0x4) kSLSSpaceAbsoluteLevelSetupAssistant [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f568fc (     0x4) kSLSSpaceAbsoluteLevelSecurityAgent [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56900 (     0x4) kSLSSpaceAbsoluteLevelNotificationCenterAtScreenLock [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56904 (     0x4) kSLSSpaceAbsoluteLevelBootProgress [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56908 (     0x4) kSLSSpaceAbsoluteLevelVoiceOver [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f5690c (     0x4) kSLSSpaceAbsoluteLevelShieldWindow [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56910 (    0x54) std::__1::piecewise_construct (.12195) [NameNList, MangledNameNList, NList] 
                0x0000000185f56964 (     0x4) kSLSSpaceAbsoluteLevelScreenLock [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f56968 (     0x1) std::__1::piecewise_construct (.13015) [NameNList, MangledNameNList, NList] 
                0x0000000185f56969 (   0x197) crc_table [NameNList, MangledNameNList, NList] 
                0x0000000185f56b00 (    0x70) g_snappingPrefsDefaults [NameNList, MangledNameNList, NList] 
                0x0000000185f56b70 (   0x6a8) std::__1::piecewise_construct (.13935) [NameNList, MangledNameNList, NList] 
                0x0000000185f57218 (   0x118) DefaultDisplayAttributes [NameNList, MangledNameNList, NList] 
                0x0000000185f57330 (   0x2c8) (anonymous namespace)::kIdentityMatrix [NameNList, MangledNameNList, NList] 
                0x0000000185f575f8 (     0x8) kSLSDisableCursorObscureMinTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f57600 (   0x16c) kSLSDisableCursorObscureMaxTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f5776c (   0x4f4) std::__1::piecewise_construct (.16445) [NameNList, MangledNameNList, NList] 
                0x0000000185f57c60 (   0x3b0) _vec_const [NameNList, MangledNameNList, NList] 
                0x0000000185f58010 (     0x4) kSLSCaptureDisablePrompting [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f58014 (     0x4) kSLSCaptureIgnoreTCCPermissions [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f58018 (     0x4) kSLSCaptureIgnoreDeformingTransforms [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f5801c (    0x5c) surface_get_placeholder_color(CGXSurface*)::colors [NameNList, MangledNameNList, NList] 
                0x0000000185f58078 (   0x12c) WS::Displays::CAWSDisplaysPowerState::power_state_table()::_displays_power_states [NameNList, MangledNameNList, NList] 
                0x0000000185f581a4 (   0x100) noise_data [NameNList, MangledNameNList, NList] 
                0x0000000185f582a4 (  0x102c) blue_noise_data [NameNList, MangledNameNList, NList] 
                0x0000000185f592d0 (    0xe0) std::__1::piecewise_construct (.19425) [NameNList, MangledNameNList, NList] 
                0x0000000185f593b0 (     0x4) kSLSSpaceAbsoluteLevelAssessmentMode [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f593b4 (     0x4) kSLSSpaceAbsoluteLevelPrivacyIndicator [EXT, NameNList, MangledNameNList, NList] 
                0x0000000185f593b8 (    0xb8) kNullPSN [NameNList, MangledNameNList, NList] 
                0x0000000185f59470 (   0x8d0) gWindowLevel [NameNList, MangledNameNList, NList] 
                0x0000000185f59d40 (    0x48) kAppleProDisplayVESAProductIDs [NameNList, MangledNameNList, NList] 
                0x0000000185f59d88 (     0x4) WSPerformanceGetData::index [NameNList, MangledNameNList, NList] 
                0x0000000185f59d8c (    0x3c) ycbcr_offsets [NameNList, MangledNameNList, NList] 
                0x0000000185f59dc8 (   0x114) ycbcr_matrices [NameNList, MangledNameNList, NList] 
                0x0000000185f59edc (    0x30) SLSKeyStateSetEventFlagKeys::leftRightMap [NameNList, MangledNameNList, NList] 
                0x0000000185f59f0c (    0x50) SLSKeyStateSetEventFlagKeys::modifierMap [NameNList, MangledNameNList, NList] 
                0x0000000185f59f5c (    0x8c) kCGSADBKeyCodeMappingTable [NameNList, MangledNameNList, NList] 
                0x0000000185f59fe8 (   0x128) std::__1::piecewise_construct (.22400) [NameNList, MangledNameNList, NList] 
                0x0000000185f5a110 (    0xf0) PKGTimingFunctions [NameNList, MangledNameNList, NList] 
                0x0000000185f5a200 (    0x48) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_map_type1 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a248 (    0x78) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_map_type2 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a2c0 (    0x98) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_map_type4 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a358 (    0x24) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_adjust_type1 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a37c (    0x3c) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_adjust_type2 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a3b8 (    0x4c) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::jump_adjust_type4 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a404 (    0x24) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::allowed_dir_type1 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a428 (    0x3c) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::allowed_dir_type2 [NameNList, MangledNameNList, NList] 
                0x0000000185f5a464 ( 0x1b5cc) CenterPolygon::project_point(CGPoint&, CGPoint&, MoveDir)::allowed_dir_type4 [NameNList, MangledNameNList, NList] 
                0x0000000185f75a30 (    0x30) _PromotedConst [NameNList, MangledNameNList, NList] 
                0x0000000185f75a60 (    0x30) _PromotedConst.25598 [NameNList, MangledNameNList, NList] 
            0x0000000185f75a90 ( 0x3298e) __TEXT __cstring
                0x0000000185f7905e ( 0x2f3c0) hid_usb_apple_2_adb_keymap [NameNList, MangledNameNList, NList] 
            0x0000000185fa8420 (  0xbed4) __TEXT __gcc_except_tab
                0x0000000185fa8420 (    0x28) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8448 (    0x64) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x0000000185fa84ac (    0x14) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x0000000185fa84c0 (    0x18) GCC_except_table209 [NameNList, MangledNameNList, NList] 
                0x0000000185fa84d8 (    0x2c) GCC_except_table228 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8504 (    0x14) GCC_except_table231 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8518 (    0x20) GCC_except_table232 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8538 (    0x24) GCC_except_table252 [NameNList, MangledNameNList, NList] 
                0x0000000185fa855c (    0x10) GCC_except_table275 [NameNList, MangledNameNList, NList] 
                0x0000000185fa856c (    0x18) GCC_except_table290 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8584 (    0x40) GCC_except_table294 [NameNList, MangledNameNList, NList] 
                0x0000000185fa85c4 (    0x1c) GCC_except_table295 [NameNList, MangledNameNList, NList] 
                0x0000000185fa85e0 (    0x44) GCC_except_table299 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8624 (    0x1c) GCC_except_table300 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8640 (    0x7c) GCC_except_table301 [NameNList, MangledNameNList, NList] 
                0x0000000185fa86bc (    0x10) GCC_except_table304 [NameNList, MangledNameNList, NList] 
                0x0000000185fa86cc (    0x18) GCC_except_table315 [NameNList, MangledNameNList, NList] 
                0x0000000185fa86e4 (    0x10) GCC_except_table350 [NameNList, MangledNameNList, NList] 
                0x0000000185fa86f4 (    0x2c) GCC_except_table352 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8720 (    0x18) GCC_except_table354 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8738 (    0x34) GCC_except_table355 [NameNList, MangledNameNList, NList] 
                0x0000000185fa876c (    0x14) GCC_except_table357 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8780 (    0x14) GCC_except_table361 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8794 (    0x14) GCC_except_table363 [NameNList, MangledNameNList, NList] 
                0x0000000185fa87a8 (    0x1c) GCC_except_table364 [NameNList, MangledNameNList, NList] 
                0x0000000185fa87c4 (    0x10) GCC_except_table599 [NameNList, MangledNameNList, NList] 
                0x0000000185fa87d4 (    0x18) GCC_except_table612 [NameNList, MangledNameNList, NList] 
                0x0000000185fa87ec (    0x14) GCC_except_table619 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8800 (    0x10) GCC_except_table620 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8810 (    0x14) GCC_except_table622 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8824 (    0x18) GCC_except_table624 [NameNList, MangledNameNList, NList] 
                0x0000000185fa883c (    0x14) GCC_except_table656 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8850 (    0x78) GCC_except_table677 [NameNList, MangledNameNList, NList] 
                0x0000000185fa88c8 (    0x1c) GCC_except_table690 [NameNList, MangledNameNList, NList] 
                0x0000000185fa88e4 (    0x38) GCC_except_table691 [NameNList, MangledNameNList, NList] 
                0x0000000185fa891c (    0x34) GCC_except_table694 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8950 (    0x34) GCC_except_table696 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8984 (    0x5c) GCC_except_table705 [NameNList, MangledNameNList, NList] 
                0x0000000185fa89e0 (    0x1c) GCC_except_table706 [NameNList, MangledNameNList, NList] 
                0x0000000185fa89fc (    0x1c) GCC_except_table707 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8a18 (     0xc) GCC_except_table708 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8a24 (    0x10) GCC_except_table713 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8a34 (    0x14) GCC_except_table714 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8a48 (    0x14) GCC_except_table716 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8a5c (   0x28c) GCC_except_table718 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8ce8 (    0x28) GCC_except_table720 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8d10 (    0x24) GCC_except_table721 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8d34 (    0x1c) GCC_except_table722 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8d50 (    0x1c) GCC_except_table724 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8d6c (    0x54) GCC_except_table726 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8dc0 (    0x4c) GCC_except_table728 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e0c (    0x14) GCC_except_table729 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e20 (    0x14) GCC_except_table732 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e34 (    0x1c) GCC_except_table736 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e50 (    0x1c) GCC_except_table741 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e6c (    0x24) GCC_except_table1087 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8e90 (    0x20) GCC_except_table1088 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8eb0 (    0x98) GCC_except_table1099 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8f48 (    0x20) GCC_except_table1109 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8f68 (    0x4c) GCC_except_table1122 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8fb4 (    0x38) GCC_except_table1163 [NameNList, MangledNameNList, NList] 
                0x0000000185fa8fec (    0x24) GCC_except_table1174 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9010 (    0x14) GCC_except_table1301 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9024 (    0x18) GCC_except_table1302 [NameNList, MangledNameNList, NList] 
                0x0000000185fa903c (    0x18) GCC_except_table1309 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9054 (    0x20) GCC_except_table1311 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9074 (    0x68) GCC_except_table1313 [NameNList, MangledNameNList, NList] 
                0x0000000185fa90dc (    0x18) GCC_except_table1329 [NameNList, MangledNameNList, NList] 
                0x0000000185fa90f4 (    0x18) GCC_except_table1330 [NameNList, MangledNameNList, NList] 
                0x0000000185fa910c (    0x20) GCC_except_table1367 [NameNList, MangledNameNList, NList] 
                0x0000000185fa912c (    0x18) GCC_except_table1368 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9144 (    0x5c) GCC_except_table1373 [NameNList, MangledNameNList, NList] 
                0x0000000185fa91a0 (    0x30) GCC_except_table1374 [NameNList, MangledNameNList, NList] 
                0x0000000185fa91d0 (    0x28) GCC_except_table1375 [NameNList, MangledNameNList, NList] 
                0x0000000185fa91f8 (    0x14) GCC_except_table1393 [NameNList, MangledNameNList, NList] 
                0x0000000185fa920c (    0x10) GCC_except_table1395 [NameNList, MangledNameNList, NList] 
                0x0000000185fa921c (    0x24) GCC_except_table1419 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9240 (    0x1c) GCC_except_table1429 [NameNList, MangledNameNList, NList] 
                0x0000000185fa925c (    0x1c) GCC_except_table1430 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9278 (   0x158) GCC_except_table1469 [NameNList, MangledNameNList, NList] 
                0x0000000185fa93d0 (    0x14) GCC_except_table1470 [NameNList, MangledNameNList, NList] 
                0x0000000185fa93e4 (    0x20) GCC_except_table1471 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9404 (    0x14) GCC_except_table1473 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9418 (    0x14) GCC_except_table1474 [NameNList, MangledNameNList, NList] 
                0x0000000185fa942c (    0xf0) GCC_except_table1476 [NameNList, MangledNameNList, NList] 
                0x0000000185fa951c (    0x3c) GCC_except_table1478 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9558 (    0x30) GCC_except_table1479 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9588 (    0x3c) GCC_except_table1480 [NameNList, MangledNameNList, NList] 
                0x0000000185fa95c4 (    0x30) GCC_except_table1481 [NameNList, MangledNameNList, NList] 
                0x0000000185fa95f4 (    0x78) GCC_except_table1484 [NameNList, MangledNameNList, NList] 
                0x0000000185fa966c (    0x18) GCC_except_table1497 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9684 (    0x24) GCC_except_table1513 [NameNList, MangledNameNList, NList] 
                0x0000000185fa96a8 (    0x14) GCC_except_table1515 [NameNList, MangledNameNList, NList] 
                0x0000000185fa96bc (    0x18) GCC_except_table1520 [NameNList, MangledNameNList, NList] 
                0x0000000185fa96d4 (    0x18) GCC_except_table1534 [NameNList, MangledNameNList, NList] 
                0x0000000185fa96ec (    0x10) GCC_except_table1543 [NameNList, MangledNameNList, NList] 
                0x0000000185fa96fc (    0x10) GCC_except_table1544 [NameNList, MangledNameNList, NList] 
                0x0000000185fa970c (    0x10) GCC_except_table1547 [NameNList, MangledNameNList, NList] 
                0x0000000185fa971c (    0x18) GCC_except_table1551 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9734 (    0x10) GCC_except_table1554 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9744 (    0x24) GCC_except_table1556 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9768 (    0x10) GCC_except_table1559 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9778 (    0x10) GCC_except_table1561 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9788 (    0x10) GCC_except_table1563 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9798 (    0x54) GCC_except_table1648 [NameNList, MangledNameNList, NList] 
                0x0000000185fa97ec (    0x28) GCC_except_table1653 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9814 (    0x34) GCC_except_table1655 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9848 (    0x14) GCC_except_table1656 [NameNList, MangledNameNList, NList] 
                0x0000000185fa985c (    0x1c) GCC_except_table1658 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9878 (    0xe8) GCC_except_table1660 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9960 (    0x18) GCC_except_table1661 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9978 (    0x18) GCC_except_table1663 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9990 (    0x34) GCC_except_table1666 [NameNList, MangledNameNList, NList] 
                0x0000000185fa99c4 (    0x4c) GCC_except_table1668 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9a10 (    0x14) GCC_except_table1669 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9a24 (    0x3c) GCC_except_table1670 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9a60 (    0x1c) GCC_except_table1680 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9a7c (    0x24) GCC_except_table1685 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9aa0 (    0x1c) GCC_except_table1688 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9abc (    0x10) GCC_except_table1834 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9acc (    0x50) GCC_except_table1835 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9b1c (    0x4c) GCC_except_table1840 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9b68 (    0x10) GCC_except_table1861 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9b78 (    0x28) GCC_except_table1878 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9ba0 (    0x18) GCC_except_table1885 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9bb8 (    0x14) GCC_except_table1886 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9bcc (    0x30) GCC_except_table1941 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9bfc (    0x14) GCC_except_table2083 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9c10 (    0x1c) GCC_except_table2085 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9c2c (    0x30) GCC_except_table2175 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9c5c (    0x1c) GCC_except_table2188 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9c78 (    0x40) GCC_except_table2202 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9cb8 (    0x68) GCC_except_table2207 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9d20 (    0x18) GCC_except_table2213 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9d38 (    0x18) GCC_except_table2357 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9d50 (    0x1c) GCC_except_table2358 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9d6c (    0x6c) GCC_except_table2363 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9dd8 (    0x1c) GCC_except_table2462 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9df4 (    0x34) GCC_except_table2512 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9e28 (     0xc) GCC_except_table2629 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9e34 (    0x14) GCC_except_table2632 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9e48 (    0x50) GCC_except_table2794 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9e98 (    0x34) GCC_except_table2899 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9ecc (    0x54) GCC_except_table2905 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9f20 (    0x28) GCC_except_table2908 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9f48 (    0x24) GCC_except_table2915 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9f6c (    0x14) GCC_except_table3032 [NameNList, MangledNameNList, NList] 
                0x0000000185fa9f80 (    0x90) GCC_except_table3034 [NameNList, MangledNameNList, NList] 
                0x0000000185faa010 (    0x20) GCC_except_table3035 [NameNList, MangledNameNList, NList] 
                0x0000000185faa030 (    0x24) GCC_except_table3047 [NameNList, MangledNameNList, NList] 
                0x0000000185faa054 (    0x2c) GCC_except_table3048 [NameNList, MangledNameNList, NList] 
                0x0000000185faa080 (    0x24) GCC_except_table3052 [NameNList, MangledNameNList, NList] 
                0x0000000185faa0a4 (    0x10) GCC_except_table3067 [NameNList, MangledNameNList, NList] 
                0x0000000185faa0b4 (     0xc) GCC_except_table3073 [NameNList, MangledNameNList, NList] 
                0x0000000185faa0c0 (    0x10) GCC_except_table3084 [NameNList, MangledNameNList, NList] 
                0x0000000185faa0d0 (    0x24) GCC_except_table3085 [NameNList, MangledNameNList, NList] 
                0x0000000185faa0f4 (     0xc) GCC_except_table3091 [NameNList, MangledNameNList, NList] 
                0x0000000185faa100 (    0x28) GCC_except_table3100 [NameNList, MangledNameNList, NList] 
                0x0000000185faa128 (    0x20) GCC_except_table3123 [NameNList, MangledNameNList, NList] 
                0x0000000185faa148 (    0x18) GCC_except_table3128 [NameNList, MangledNameNList, NList] 
                0x0000000185faa160 (    0x28) GCC_except_table3129 [NameNList, MangledNameNList, NList] 
                0x0000000185faa188 (    0x10) GCC_except_table3133 [NameNList, MangledNameNList, NList] 
                0x0000000185faa198 (    0x1c) GCC_except_table3136 [NameNList, MangledNameNList, NList] 
                0x0000000185faa1b4 (    0x18) GCC_except_table3139 [NameNList, MangledNameNList, NList] 
                0x0000000185faa1cc (   0x134) GCC_except_table3148 [NameNList, MangledNameNList, NList] 
                0x0000000185faa300 (    0x18) GCC_except_table3185 [NameNList, MangledNameNList, NList] 
                0x0000000185faa318 (    0x10) GCC_except_table3207 [NameNList, MangledNameNList, NList] 
                0x0000000185faa328 (    0x18) GCC_except_table3217 [NameNList, MangledNameNList, NList] 
                0x0000000185faa340 (    0x18) GCC_except_table3218 [NameNList, MangledNameNList, NList] 
                0x0000000185faa358 (   0x1a8) GCC_except_table3220 [NameNList, MangledNameNList, NList] 
                0x0000000185faa500 (    0x24) GCC_except_table3229 [NameNList, MangledNameNList, NList] 
                0x0000000185faa524 (    0xa8) GCC_except_table3231 [NameNList, MangledNameNList, NList] 
                0x0000000185faa5cc (    0x10) GCC_except_table3236 [NameNList, MangledNameNList, NList] 
                0x0000000185faa5dc (    0x10) GCC_except_table3241 [NameNList, MangledNameNList, NList] 
                0x0000000185faa5ec (    0x10) GCC_except_table3242 [NameNList, MangledNameNList, NList] 
                0x0000000185faa5fc (    0x10) GCC_except_table3243 [NameNList, MangledNameNList, NList] 
                0x0000000185faa60c (    0x10) GCC_except_table3244 [NameNList, MangledNameNList, NList] 
                0x0000000185faa61c (    0x10) GCC_except_table3245 [NameNList, MangledNameNList, NList] 
                0x0000000185faa62c (    0x54) GCC_except_table3246 [NameNList, MangledNameNList, NList] 
                0x0000000185faa680 (    0x10) GCC_except_table3269 [NameNList, MangledNameNList, NList] 
                0x0000000185faa690 (    0xe8) GCC_except_table3270 [NameNList, MangledNameNList, NList] 
                0x0000000185faa778 (    0x1c) GCC_except_table3271 [NameNList, MangledNameNList, NList] 
                0x0000000185faa794 (    0x18) GCC_except_table3284 [NameNList, MangledNameNList, NList] 
                0x0000000185faa7ac (    0x58) GCC_except_table3288 [NameNList, MangledNameNList, NList] 
                0x0000000185faa804 (    0x14) GCC_except_table3294 [NameNList, MangledNameNList, NList] 
                0x0000000185faa818 (    0x20) GCC_except_table3300 [NameNList, MangledNameNList, NList] 
                0x0000000185faa838 (    0x64) GCC_except_table3309 [NameNList, MangledNameNList, NList] 
                0x0000000185faa89c (    0x18) GCC_except_table3319 [NameNList, MangledNameNList, NList] 
                0x0000000185faa8b4 (    0x28) GCC_except_table3333 [NameNList, MangledNameNList, NList] 
                0x0000000185faa8dc (    0x10) GCC_except_table3346 [NameNList, MangledNameNList, NList] 
                0x0000000185faa8ec (    0x10) GCC_except_table3402 [NameNList, MangledNameNList, NList] 
                0x0000000185faa8fc (    0x10) GCC_except_table3411 [NameNList, MangledNameNList, NList] 
                0x0000000185faa90c (    0x10) GCC_except_table3436 [NameNList, MangledNameNList, NList] 
                0x0000000185faa91c (    0x10) GCC_except_table3461 [NameNList, MangledNameNList, NList] 
                0x0000000185faa92c (    0x20) GCC_except_table3462 [NameNList, MangledNameNList, NList] 
                0x0000000185faa94c (    0x30) GCC_except_table3463 [NameNList, MangledNameNList, NList] 
                0x0000000185faa97c (    0x20) GCC_except_table3464 [NameNList, MangledNameNList, NList] 
                0x0000000185faa99c (    0x10) GCC_except_table3714 [NameNList, MangledNameNList, NList] 
                0x0000000185faa9ac (    0x10) GCC_except_table3716 [NameNList, MangledNameNList, NList] 
                0x0000000185faa9bc (    0x34) GCC_except_table4379 [NameNList, MangledNameNList, NList] 
                0x0000000185faa9f0 (    0x3c) GCC_except_table4386 [NameNList, MangledNameNList, NList] 
                0x0000000185faaa2c (    0x40) GCC_except_table4388 [NameNList, MangledNameNList, NList] 
                0x0000000185faaa6c (    0x30) GCC_except_table4394 [NameNList, MangledNameNList, NList] 
                0x0000000185faaa9c (    0x14) GCC_except_table4404 [NameNList, MangledNameNList, NList] 
                0x0000000185faaab0 (    0x28) GCC_except_table4405 [NameNList, MangledNameNList, NList] 
                0x0000000185faaad8 (    0x5c) GCC_except_table4430 [NameNList, MangledNameNList, NList] 
                0x0000000185faab34 (    0x18) GCC_except_table4438 [NameNList, MangledNameNList, NList] 
                0x0000000185faab4c (    0x18) GCC_except_table4455 [NameNList, MangledNameNList, NList] 
                0x0000000185faab64 (     0xc) GCC_except_table4456 [NameNList, MangledNameNList, NList] 
                0x0000000185faab70 (    0x18) GCC_except_table4457 [NameNList, MangledNameNList, NList] 
                0x0000000185faab88 (    0x14) GCC_except_table4460 [NameNList, MangledNameNList, NList] 
                0x0000000185faab9c (    0x10) GCC_except_table4531 [NameNList, MangledNameNList, NList] 
                0x0000000185faabac (    0x10) GCC_except_table4532 [NameNList, MangledNameNList, NList] 
                0x0000000185faabbc (    0x10) GCC_except_table4533 [NameNList, MangledNameNList, NList] 
                0x0000000185faabcc (    0x14) GCC_except_table4534 [NameNList, MangledNameNList, NList] 
                0x0000000185faabe0 (    0x20) GCC_except_table4627 [NameNList, MangledNameNList, NList] 
                0x0000000185faac00 (    0x38) GCC_except_table4628 [NameNList, MangledNameNList, NList] 
                0x0000000185faac38 (    0x2c) GCC_except_table4633 [NameNList, MangledNameNList, NList] 
                0x0000000185faac64 (    0x20) GCC_except_table4674 [NameNList, MangledNameNList, NList] 
                0x0000000185faac84 (    0x24) GCC_except_table4675 [NameNList, MangledNameNList, NList] 
                0x0000000185faaca8 (    0x24) GCC_except_table4686 [NameNList, MangledNameNList, NList] 
                0x0000000185faaccc (    0x20) GCC_except_table4714 [NameNList, MangledNameNList, NList] 
                0x0000000185faacec (    0x20) GCC_except_table4896 [NameNList, MangledNameNList, NList] 
                0x0000000185faad0c (    0x20) GCC_except_table4897 [NameNList, MangledNameNList, NList] 
                0x0000000185faad2c (    0x58) GCC_except_table4899 [NameNList, MangledNameNList, NList] 
                0x0000000185faad84 (    0x10) GCC_except_table4900 [NameNList, MangledNameNList, NList] 
                0x0000000185faad94 (    0x74) GCC_except_table4901 [NameNList, MangledNameNList, NList] 
                0x0000000185faae08 (    0x48) GCC_except_table4904 [NameNList, MangledNameNList, NList] 
                0x0000000185faae50 (    0x74) GCC_except_table4905 [NameNList, MangledNameNList, NList] 
                0x0000000185faaec4 (    0x18) GCC_except_table4906 [NameNList, MangledNameNList, NList] 
                0x0000000185faaedc (    0x14) GCC_except_table4907 [NameNList, MangledNameNList, NList] 
                0x0000000185faaef0 (    0x30) GCC_except_table4908 [NameNList, MangledNameNList, NList] 
                0x0000000185faaf20 (    0x24) GCC_except_table4911 [NameNList, MangledNameNList, NList] 
                0x0000000185faaf44 (    0x20) GCC_except_table4916 [NameNList, MangledNameNList, NList] 
                0x0000000185faaf64 (    0x54) GCC_except_table4917 [NameNList, MangledNameNList, NList] 
                0x0000000185faafb8 (    0x40) GCC_except_table4918 [NameNList, MangledNameNList, NList] 
                0x0000000185faaff8 (    0x5c) GCC_except_table4920 [NameNList, MangledNameNList, NList] 
                0x0000000185fab054 (    0x24) GCC_except_table4932 [NameNList, MangledNameNList, NList] 
                0x0000000185fab078 (    0x10) GCC_except_table4937 [NameNList, MangledNameNList, NList] 
                0x0000000185fab088 (    0x2c) GCC_except_table4938 [NameNList, MangledNameNList, NList] 
                0x0000000185fab0b4 (    0x14) GCC_except_table4939 [NameNList, MangledNameNList, NList] 
                0x0000000185fab0c8 (    0x24) GCC_except_table4942 [NameNList, MangledNameNList, NList] 
                0x0000000185fab0ec (    0xec) GCC_except_table4944 [NameNList, MangledNameNList, NList] 
                0x0000000185fab1d8 (    0x44) GCC_except_table4956 [NameNList, MangledNameNList, NList] 
                0x0000000185fab21c (    0x20) GCC_except_table4957 [NameNList, MangledNameNList, NList] 
                0x0000000185fab23c (    0x3c) GCC_except_table5142 [NameNList, MangledNameNList, NList] 
                0x0000000185fab278 (    0x24) GCC_except_table5143 [NameNList, MangledNameNList, NList] 
                0x0000000185fab29c (    0x34) GCC_except_table5144 [NameNList, MangledNameNList, NList] 
                0x0000000185fab2d0 (    0x60) GCC_except_table5146 [NameNList, MangledNameNList, NList] 
                0x0000000185fab330 (    0x14) GCC_except_table5155 [NameNList, MangledNameNList, NList] 
                0x0000000185fab344 (    0x14) GCC_except_table5156 [NameNList, MangledNameNList, NList] 
                0x0000000185fab358 (    0x28) GCC_except_table5158 [NameNList, MangledNameNList, NList] 
                0x0000000185fab380 (    0x14) GCC_except_table5161 [NameNList, MangledNameNList, NList] 
                0x0000000185fab394 (    0x18) GCC_except_table5166 [NameNList, MangledNameNList, NList] 
                0x0000000185fab3ac (    0x14) GCC_except_table5173 [NameNList, MangledNameNList, NList] 
                0x0000000185fab3c0 (    0xa8) GCC_except_table5179 [NameNList, MangledNameNList, NList] 
                0x0000000185fab468 (    0x14) GCC_except_table5180 [NameNList, MangledNameNList, NList] 
                0x0000000185fab47c (    0x18) GCC_except_table5188 [NameNList, MangledNameNList, NList] 
                0x0000000185fab494 (    0x3c) GCC_except_table5192 [NameNList, MangledNameNList, NList] 
                0x0000000185fab4d0 (    0x14) GCC_except_table5194 [NameNList, MangledNameNList, NList] 
                0x0000000185fab4e4 (    0xa8) GCC_except_table5219 [NameNList, MangledNameNList, NList] 
                0x0000000185fab58c (    0x10) GCC_except_table5220 [NameNList, MangledNameNList, NList] 
                0x0000000185fab59c (    0x14) GCC_except_table5221 [NameNList, MangledNameNList, NList] 
                0x0000000185fab5b0 (    0x10) GCC_except_table5224 [NameNList, MangledNameNList, NList] 
                0x0000000185fab5c0 (    0x1c) GCC_except_table5226 [NameNList, MangledNameNList, NList] 
                0x0000000185fab5dc (    0x20) GCC_except_table5228 [NameNList, MangledNameNList, NList] 
                0x0000000185fab5fc (    0x1c) GCC_except_table5229 [NameNList, MangledNameNList, NList] 
                0x0000000185fab618 (    0x20) GCC_except_table5252 [NameNList, MangledNameNList, NList] 
                0x0000000185fab638 (    0x1c) GCC_except_table5255 [NameNList, MangledNameNList, NList] 
                0x0000000185fab654 (    0x34) GCC_except_table5261 [NameNList, MangledNameNList, NList] 
                0x0000000185fab688 (    0x94) GCC_except_table5265 [NameNList, MangledNameNList, NList] 
                0x0000000185fab71c (   0x194) GCC_except_table5266 [NameNList, MangledNameNList, NList] 
                0x0000000185fab8b0 (    0xb4) GCC_except_table5284 [NameNList, MangledNameNList, NList] 
                0x0000000185fab964 (    0x1c) GCC_except_table5369 [NameNList, MangledNameNList, NList] 
                0x0000000185fab980 (    0x18) GCC_except_table5376 [NameNList, MangledNameNList, NList] 
                0x0000000185fab998 (    0x14) GCC_except_table5381 [NameNList, MangledNameNList, NList] 
                0x0000000185fab9ac (    0x10) GCC_except_table5382 [NameNList, MangledNameNList, NList] 
                0x0000000185fab9bc (    0x14) GCC_except_table5383 [NameNList, MangledNameNList, NList] 
                0x0000000185fab9d0 (    0x30) GCC_except_table5384 [NameNList, MangledNameNList, NList] 
                0x0000000185faba00 (    0x20) GCC_except_table5432 [NameNList, MangledNameNList, NList] 
                0x0000000185faba20 (    0x10) GCC_except_table5434 [NameNList, MangledNameNList, NList] 
                0x0000000185faba30 (    0x24) GCC_except_table5435 [NameNList, MangledNameNList, NList] 
                0x0000000185faba54 (    0x50) GCC_except_table5436 [NameNList, MangledNameNList, NList] 
                0x0000000185fabaa4 (    0x10) GCC_except_table5438 [NameNList, MangledNameNList, NList] 
                0x0000000185fabab4 (    0x10) GCC_except_table5442 [NameNList, MangledNameNList, NList] 
                0x0000000185fabac4 (    0x48) GCC_except_table5447 [NameNList, MangledNameNList, NList] 
                0x0000000185fabb0c (    0x10) GCC_except_table5451 [NameNList, MangledNameNList, NList] 
                0x0000000185fabb1c (    0x10) GCC_except_table5456 [NameNList, MangledNameNList, NList] 
                0x0000000185fabb2c (    0x40) GCC_except_table5457 [NameNList, MangledNameNList, NList] 
                0x0000000185fabb6c (    0x28) GCC_except_table5459 [NameNList, MangledNameNList, NList] 
                0x0000000185fabb94 (    0x30) GCC_except_table5460 [NameNList, MangledNameNList, NList] 
                0x0000000185fabbc4 (    0x14) GCC_except_table5461 [NameNList, MangledNameNList, NList] 
                0x0000000185fabbd8 (    0x10) GCC_except_table5466 [NameNList, MangledNameNList, NList] 
                0x0000000185fabbe8 (    0x14) GCC_except_table5467 [NameNList, MangledNameNList, NList] 
                0x0000000185fabbfc (    0x18) GCC_except_table5469 [NameNList, MangledNameNList, NList] 
                0x0000000185fabc14 (    0x10) GCC_except_table5472 [NameNList, MangledNameNList, NList] 
                0x0000000185fabc24 (    0x1c) GCC_except_table5473 [NameNList, MangledNameNList, NList] 
                0x0000000185fabc40 (    0x18) GCC_except_table5475 [NameNList, MangledNameNList, NList] 
                0x0000000185fabc58 (    0x74) GCC_except_table5477 [NameNList, MangledNameNList, NList] 
                0x0000000185fabccc (    0x18) GCC_except_table5479 [NameNList, MangledNameNList, NList] 
                0x0000000185fabce4 (    0x64) GCC_except_table5482 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd48 (    0x10) GCC_except_table5484 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd58 (    0x10) GCC_except_table5485 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd68 (    0x10) GCC_except_table5493 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd78 (    0x10) GCC_except_table5494 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd88 (    0x10) GCC_except_table5495 [NameNList, MangledNameNList, NList] 
                0x0000000185fabd98 (    0x44) GCC_except_table5497 [NameNList, MangledNameNList, NList] 
                0x0000000185fabddc (    0x14) GCC_except_table5499 [NameNList, MangledNameNList, NList] 
                0x0000000185fabdf0 (    0x28) GCC_except_table5502 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe18 (    0x18) GCC_except_table5503 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe30 (    0x28) GCC_except_table5504 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe58 (    0x18) GCC_except_table5505 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe70 (    0x10) GCC_except_table5506 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe80 (    0x10) GCC_except_table5514 [NameNList, MangledNameNList, NList] 
                0x0000000185fabe90 (    0x14) GCC_except_table5522 [NameNList, MangledNameNList, NList] 
                0x0000000185fabea4 (    0x34) GCC_except_table5523 [NameNList, MangledNameNList, NList] 
                0x0000000185fabed8 (    0x28) GCC_except_table5524 [NameNList, MangledNameNList, NList] 
                0x0000000185fabf00 (    0x34) GCC_except_table5525 [NameNList, MangledNameNList, NList] 
                0x0000000185fabf34 (    0x20) GCC_except_table5528 [NameNList, MangledNameNList, NList] 
                0x0000000185fabf54 (    0xd4) GCC_except_table5538 [NameNList, MangledNameNList, NList] 
                0x0000000185fac028 (    0x24) GCC_except_table5539 [NameNList, MangledNameNList, NList] 
                0x0000000185fac04c (    0xc0) GCC_except_table5541 [NameNList, MangledNameNList, NList] 
                0x0000000185fac10c (    0x14) GCC_except_table5544 [NameNList, MangledNameNList, NList] 
                0x0000000185fac120 (    0x38) GCC_except_table5546 [NameNList, MangledNameNList, NList] 
                0x0000000185fac158 (   0x160) GCC_except_table5556 [NameNList, MangledNameNList, NList] 
                0x0000000185fac2b8 (    0xc8) GCC_except_table5557 [NameNList, MangledNameNList, NList] 
                0x0000000185fac380 (    0x14) GCC_except_table5560 [NameNList, MangledNameNList, NList] 
                0x0000000185fac394 (   0x110) GCC_except_table5562 [NameNList, MangledNameNList, NList] 
                0x0000000185fac4a4 (    0x38) GCC_except_table5565 [NameNList, MangledNameNList, NList] 
                0x0000000185fac4dc (    0x10) GCC_except_table5566 [NameNList, MangledNameNList, NList] 
                0x0000000185fac4ec (    0x14) GCC_except_table5577 [NameNList, MangledNameNList, NList] 
                0x0000000185fac500 (    0x24) GCC_except_table5587 [NameNList, MangledNameNList, NList] 
                0x0000000185fac524 (    0x14) GCC_except_table5594 [NameNList, MangledNameNList, NList] 
                0x0000000185fac538 (    0x24) GCC_except_table5608 [NameNList, MangledNameNList, NList] 
                0x0000000185fac55c (    0x14) GCC_except_table5615 [NameNList, MangledNameNList, NList] 
                0x0000000185fac570 (    0x34) GCC_except_table5636 [NameNList, MangledNameNList, NList] 
                0x0000000185fac5a4 (    0x24) GCC_except_table5639 [NameNList, MangledNameNList, NList] 
                0x0000000185fac5c8 (     0xc) GCC_except_table5641 [NameNList, MangledNameNList, NList] 
                0x0000000185fac5d4 (    0x10) GCC_except_table5647 [NameNList, MangledNameNList, NList] 
                0x0000000185fac5e4 (    0x10) GCC_except_table5649 [NameNList, MangledNameNList, NList] 
                0x0000000185fac5f4 (    0x10) GCC_except_table5651 [NameNList, MangledNameNList, NList] 
                0x0000000185fac604 (    0x10) GCC_except_table5654 [NameNList, MangledNameNList, NList] 
                0x0000000185fac614 (    0xd0) GCC_except_table5656 [NameNList, MangledNameNList, NList] 
                0x0000000185fac6e4 (    0x10) GCC_except_table5658 [NameNList, MangledNameNList, NList] 
                0x0000000185fac6f4 (    0x10) GCC_except_table5659 [NameNList, MangledNameNList, NList] 
                0x0000000185fac704 (    0x10) GCC_except_table5661 [NameNList, MangledNameNList, NList] 
                0x0000000185fac714 (    0x18) GCC_except_table5671 [NameNList, MangledNameNList, NList] 
                0x0000000185fac72c (    0x10) GCC_except_table5690 [NameNList, MangledNameNList, NList] 
                0x0000000185fac73c (    0x10) GCC_except_table5692 [NameNList, MangledNameNList, NList] 
                0x0000000185fac74c (    0x14) GCC_except_table5694 [NameNList, MangledNameNList, NList] 
                0x0000000185fac760 (    0x10) GCC_except_table5696 [NameNList, MangledNameNList, NList] 
                0x0000000185fac770 (    0x18) GCC_except_table5697 [NameNList, MangledNameNList, NList] 
                0x0000000185fac788 (    0x64) GCC_except_table5699 [NameNList, MangledNameNList, NList] 
                0x0000000185fac7ec (    0x28) GCC_except_table5701 [NameNList, MangledNameNList, NList] 
                0x0000000185fac814 (    0x1c) GCC_except_table5702 [NameNList, MangledNameNList, NList] 
                0x0000000185fac830 (    0x1c) GCC_except_table5703 [NameNList, MangledNameNList, NList] 
                0x0000000185fac84c (    0x1c) GCC_except_table5704 [NameNList, MangledNameNList, NList] 
                0x0000000185fac868 (    0x48) GCC_except_table5705 [NameNList, MangledNameNList, NList] 
                0x0000000185fac8b0 (    0x14) GCC_except_table5707 [NameNList, MangledNameNList, NList] 
                0x0000000185fac8c4 (    0x20) GCC_except_table5710 [NameNList, MangledNameNList, NList] 
                0x0000000185fac8e4 (    0x14) GCC_except_table5712 [NameNList, MangledNameNList, NList] 
                0x0000000185fac8f8 (    0x20) GCC_except_table5713 [NameNList, MangledNameNList, NList] 
                0x0000000185fac918 (    0x48) GCC_except_table5716 [NameNList, MangledNameNList, NList] 
                0x0000000185fac960 (     0xc) GCC_except_table5726 [NameNList, MangledNameNList, NList] 
                0x0000000185fac96c (    0x14) GCC_except_table5732 [NameNList, MangledNameNList, NList] 
                0x0000000185fac980 (    0x28) GCC_except_table5812 [NameNList, MangledNameNList, NList] 
                0x0000000185fac9a8 (    0x3c) GCC_except_table5813 [NameNList, MangledNameNList, NList] 
                0x0000000185fac9e4 (    0xfc) GCC_except_table5817 [NameNList, MangledNameNList, NList] 
                0x0000000185facae0 (    0x20) GCC_except_table5818 [NameNList, MangledNameNList, NList] 
                0x0000000185facb00 (    0x20) GCC_except_table5819 [NameNList, MangledNameNList, NList] 
                0x0000000185facb20 (    0x74) GCC_except_table5828 [NameNList, MangledNameNList, NList] 
                0x0000000185facb94 (    0x90) GCC_except_table5830 [NameNList, MangledNameNList, NList] 
                0x0000000185facc24 (    0x14) GCC_except_table5838 [NameNList, MangledNameNList, NList] 
                0x0000000185facc38 (    0x10) GCC_except_table5839 [NameNList, MangledNameNList, NList] 
                0x0000000185facc48 (     0xc) GCC_except_table5840 [NameNList, MangledNameNList, NList] 
                0x0000000185facc54 (    0x28) GCC_except_table5841 [NameNList, MangledNameNList, NList] 
                0x0000000185facc7c (    0x18) GCC_except_table5842 [NameNList, MangledNameNList, NList] 
                0x0000000185facc94 (    0x14) GCC_except_table5851 [NameNList, MangledNameNList, NList] 
                0x0000000185facca8 (    0x14) GCC_except_table5852 [NameNList, MangledNameNList, NList] 
                0x0000000185faccbc (    0x14) GCC_except_table5853 [NameNList, MangledNameNList, NList] 
                0x0000000185faccd0 (    0x1c) GCC_except_table5859 [NameNList, MangledNameNList, NList] 
                0x0000000185faccec (    0x48) GCC_except_table5862 [NameNList, MangledNameNList, NList] 
                0x0000000185facd34 (    0x64) GCC_except_table5865 [NameNList, MangledNameNList, NList] 
                0x0000000185facd98 (    0x14) GCC_except_table5866 [NameNList, MangledNameNList, NList] 
                0x0000000185facdac (    0x20) GCC_except_table5867 [NameNList, MangledNameNList, NList] 
                0x0000000185facdcc (    0x34) GCC_except_table5872 [NameNList, MangledNameNList, NList] 
                0x0000000185face00 (    0x24) GCC_except_table5877 [NameNList, MangledNameNList, NList] 
                0x0000000185face24 (    0x14) GCC_except_table5878 [NameNList, MangledNameNList, NList] 
                0x0000000185face38 (    0xa8) GCC_except_table5879 [NameNList, MangledNameNList, NList] 
                0x0000000185facee0 (    0x10) GCC_except_table5882 [NameNList, MangledNameNList, NList] 
                0x0000000185facef0 (    0x1c) GCC_except_table5890 [NameNList, MangledNameNList, NList] 
                0x0000000185facf0c (    0x1c) GCC_except_table5892 [NameNList, MangledNameNList, NList] 
                0x0000000185facf28 (    0x64) GCC_except_table5896 [NameNList, MangledNameNList, NList] 
                0x0000000185facf8c (    0x18) GCC_except_table5897 [NameNList, MangledNameNList, NList] 
                0x0000000185facfa4 (    0x14) GCC_except_table5900 [NameNList, MangledNameNList, NList] 
                0x0000000185facfb8 (    0x34) GCC_except_table5902 [NameNList, MangledNameNList, NList] 
                0x0000000185facfec (    0x14) GCC_except_table5904 [NameNList, MangledNameNList, NList] 
                0x0000000185fad000 (    0x10) GCC_except_table5906 [NameNList, MangledNameNList, NList] 
                0x0000000185fad010 (    0x28) GCC_except_table5911 [NameNList, MangledNameNList, NList] 
                0x0000000185fad038 (    0x30) GCC_except_table5912 [NameNList, MangledNameNList, NList] 
                0x0000000185fad068 (    0x14) GCC_except_table5917 [NameNList, MangledNameNList, NList] 
                0x0000000185fad07c (    0x3c) GCC_except_table5920 [NameNList, MangledNameNList, NList] 
                0x0000000185fad0b8 (    0x18) GCC_except_table5926 [NameNList, MangledNameNList, NList] 
                0x0000000185fad0d0 (    0x18) GCC_except_table5927 [NameNList, MangledNameNList, NList] 
                0x0000000185fad0e8 (    0x7c) GCC_except_table5940 [NameNList, MangledNameNList, NList] 
                0x0000000185fad164 (    0x14) GCC_except_table5941 [NameNList, MangledNameNList, NList] 
                0x0000000185fad178 (   0x180) GCC_except_table5945 [NameNList, MangledNameNList, NList] 
                0x0000000185fad2f8 (    0x14) GCC_except_table5947 [NameNList, MangledNameNList, NList] 
                0x0000000185fad30c (    0x1c) GCC_except_table5949 [NameNList, MangledNameNList, NList] 
                0x0000000185fad328 (    0x18) GCC_except_table5955 [NameNList, MangledNameNList, NList] 
                0x0000000185fad340 (    0x18) GCC_except_table5956 [NameNList, MangledNameNList, NList] 
                0x0000000185fad358 (    0x14) GCC_except_table5957 [NameNList, MangledNameNList, NList] 
                0x0000000185fad36c (    0x14) GCC_except_table5961 [NameNList, MangledNameNList, NList] 
                0x0000000185fad380 (    0x10) GCC_except_table5976 [NameNList, MangledNameNList, NList] 
                0x0000000185fad390 (    0x24) GCC_except_table5977 [NameNList, MangledNameNList, NList] 
                0x0000000185fad3b4 (    0x10) GCC_except_table5980 [NameNList, MangledNameNList, NList] 
                0x0000000185fad3c4 (    0x20) GCC_except_table5984 [NameNList, MangledNameNList, NList] 
                0x0000000185fad3e4 (    0x28) GCC_except_table5986 [NameNList, MangledNameNList, NList] 
                0x0000000185fad40c (    0xe4) GCC_except_table5989 [NameNList, MangledNameNList, NList] 
                0x0000000185fad4f0 (    0x18) GCC_except_table5992 [NameNList, MangledNameNList, NList] 
                0x0000000185fad508 (    0x2c) GCC_except_table5998 [NameNList, MangledNameNList, NList] 
                0x0000000185fad534 (     0xc) GCC_except_table6034 [NameNList, MangledNameNList, NList] 
                0x0000000185fad540 (    0x18) GCC_except_table6039 [NameNList, MangledNameNList, NList] 
                0x0000000185fad558 (    0x10) GCC_except_table6040 [NameNList, MangledNameNList, NList] 
                0x0000000185fad568 (     0xc) GCC_except_table6041 [NameNList, MangledNameNList, NList] 
                0x0000000185fad574 (    0x2c) GCC_except_table6096 [NameNList, MangledNameNList, NList] 
                0x0000000185fad5a0 (    0x14) GCC_except_table6099 [NameNList, MangledNameNList, NList] 
                0x0000000185fad5b4 (     0xc) GCC_except_table6100 [NameNList, MangledNameNList, NList] 
                0x0000000185fad5c0 (    0x14) GCC_except_table6107 [NameNList, MangledNameNList, NList] 
                0x0000000185fad5d4 (    0x24) GCC_except_table6137 [NameNList, MangledNameNList, NList] 
                0x0000000185fad5f8 (    0x10) GCC_except_table6153 [NameNList, MangledNameNList, NList] 
                0x0000000185fad608 (    0x28) GCC_except_table6333 [NameNList, MangledNameNList, NList] 
                0x0000000185fad630 (    0x28) GCC_except_table6384 [NameNList, MangledNameNList, NList] 
                0x0000000185fad658 (    0x28) GCC_except_table6411 [NameNList, MangledNameNList, NList] 
                0x0000000185fad680 (    0x10) GCC_except_table6672 [NameNList, MangledNameNList, NList] 
                0x0000000185fad690 (    0x14) GCC_except_table6674 [NameNList, MangledNameNList, NList] 
                0x0000000185fad6a4 (    0x30) GCC_except_table6679 [NameNList, MangledNameNList, NList] 
                0x0000000185fad6d4 (    0x14) GCC_except_table6680 [NameNList, MangledNameNList, NList] 
                0x0000000185fad6e8 (    0x18) GCC_except_table6681 [NameNList, MangledNameNList, NList] 
                0x0000000185fad700 (    0x18) GCC_except_table6683 [NameNList, MangledNameNList, NList] 
                0x0000000185fad718 (    0x18) GCC_except_table6686 [NameNList, MangledNameNList, NList] 
                0x0000000185fad730 (    0x14) GCC_except_table6687 [NameNList, MangledNameNList, NList] 
                0x0000000185fad744 (    0x18) GCC_except_table6689 [NameNList, MangledNameNList, NList] 
                0x0000000185fad75c (    0x14) GCC_except_table6695 [NameNList, MangledNameNList, NList] 
                0x0000000185fad770 (    0x14) GCC_except_table6697 [NameNList, MangledNameNList, NList] 
                0x0000000185fad784 (    0x20) GCC_except_table6723 [NameNList, MangledNameNList, NList] 
                0x0000000185fad7a4 (    0x18) GCC_except_table6726 [NameNList, MangledNameNList, NList] 
                0x0000000185fad7bc (    0x10) GCC_except_table6732 [NameNList, MangledNameNList, NList] 
                0x0000000185fad7cc (    0x2c) GCC_except_table6733 [NameNList, MangledNameNList, NList] 
                0x0000000185fad7f8 (    0x18) GCC_except_table6734 [NameNList, MangledNameNList, NList] 
                0x0000000185fad810 (    0x1c) GCC_except_table6735 [NameNList, MangledNameNList, NList] 
                0x0000000185fad82c (    0x30) GCC_except_table6737 [NameNList, MangledNameNList, NList] 
                0x0000000185fad85c (    0x14) GCC_except_table6767 [NameNList, MangledNameNList, NList] 
                0x0000000185fad870 (    0x14) GCC_except_table6779 [NameNList, MangledNameNList, NList] 
                0x0000000185fad884 (    0x20) GCC_except_table6785 [NameNList, MangledNameNList, NList] 
                0x0000000185fad8a4 (    0x14) GCC_except_table6792 [NameNList, MangledNameNList, NList] 
                0x0000000185fad8b8 (    0x20) GCC_except_table6798 [NameNList, MangledNameNList, NList] 
                0x0000000185fad8d8 (    0x1c) GCC_except_table6803 [NameNList, MangledNameNList, NList] 
                0x0000000185fad8f4 (    0x20) GCC_except_table6814 [NameNList, MangledNameNList, NList] 
                0x0000000185fad914 (    0x18) GCC_except_table6815 [NameNList, MangledNameNList, NList] 
                0x0000000185fad92c (    0x14) GCC_except_table6826 [NameNList, MangledNameNList, NList] 
                0x0000000185fad940 (    0x34) GCC_except_table6853 [NameNList, MangledNameNList, NList] 
                0x0000000185fad974 (    0x1c) GCC_except_table6860 [NameNList, MangledNameNList, NList] 
                0x0000000185fad990 (    0x60) GCC_except_table6875 [NameNList, MangledNameNList, NList] 
                0x0000000185fad9f0 (    0x2c) GCC_except_table6939 [NameNList, MangledNameNList, NList] 
                0x0000000185fada1c (    0x18) GCC_except_table6940 [NameNList, MangledNameNList, NList] 
                0x0000000185fada34 (    0x14) GCC_except_table6953 [NameNList, MangledNameNList, NList] 
                0x0000000185fada48 (    0x18) GCC_except_table6957 [NameNList, MangledNameNList, NList] 
                0x0000000185fada60 (    0x1c) GCC_except_table6969 [NameNList, MangledNameNList, NList] 
                0x0000000185fada7c (    0x10) GCC_except_table6973 [NameNList, MangledNameNList, NList] 
                0x0000000185fada8c (    0x10) GCC_except_table6979 [NameNList, MangledNameNList, NList] 
                0x0000000185fada9c (    0x14) GCC_except_table6994 [NameNList, MangledNameNList, NList] 
                0x0000000185fadab0 (    0x10) GCC_except_table7002 [NameNList, MangledNameNList, NList] 
                0x0000000185fadac0 (    0x10) GCC_except_table7007 [NameNList, MangledNameNList, NList] 
                0x0000000185fadad0 (    0x10) GCC_except_table7025 [NameNList, MangledNameNList, NList] 
                0x0000000185fadae0 (    0x10) GCC_except_table7027 [NameNList, MangledNameNList, NList] 
                0x0000000185fadaf0 (    0x1c) GCC_except_table7032 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb0c (    0x18) GCC_except_table7040 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb24 (    0x18) GCC_except_table7055 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb3c (    0x28) GCC_except_table7075 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb64 (    0x18) GCC_except_table7076 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb7c (    0x10) GCC_except_table7081 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb8c (    0x10) GCC_except_table7112 [NameNList, MangledNameNList, NList] 
                0x0000000185fadb9c (    0x14) GCC_except_table7114 [NameNList, MangledNameNList, NList] 
                0x0000000185fadbb0 (    0x14) GCC_except_table7123 [NameNList, MangledNameNList, NList] 
                0x0000000185fadbc4 (    0x1c) GCC_except_table7146 [NameNList, MangledNameNList, NList] 
                0x0000000185fadbe0 (    0x28) GCC_except_table7150 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc08 (    0x10) GCC_except_table7157 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc18 (    0x10) GCC_except_table7197 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc28 (    0x10) GCC_except_table7201 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc38 (    0x24) GCC_except_table7234 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc5c (    0x24) GCC_except_table7265 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc80 (    0x1c) GCC_except_table7266 [NameNList, MangledNameNList, NList] 
                0x0000000185fadc9c (    0x18) GCC_except_table7270 [NameNList, MangledNameNList, NList] 
                0x0000000185fadcb4 (    0x10) GCC_except_table7271 [NameNList, MangledNameNList, NList] 
                0x0000000185fadcc4 (    0x30) GCC_except_table7274 [NameNList, MangledNameNList, NList] 
                0x0000000185fadcf4 (    0x14) GCC_except_table7275 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd08 (    0x18) GCC_except_table7289 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd20 (    0x10) GCC_except_table7291 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd30 (    0x1c) GCC_except_table7320 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd4c (    0x1c) GCC_except_table7334 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd68 (    0x14) GCC_except_table7353 [NameNList, MangledNameNList, NList] 
                0x0000000185fadd7c (    0x44) GCC_except_table7360 [NameNList, MangledNameNList, NList] 
                0x0000000185faddc0 (    0x54) GCC_except_table7361 [NameNList, MangledNameNList, NList] 
                0x0000000185fade14 (    0xb8) GCC_except_table7364 [NameNList, MangledNameNList, NList] 
                0x0000000185fadecc (    0x28) GCC_except_table7366 [NameNList, MangledNameNList, NList] 
                0x0000000185fadef4 (    0x34) GCC_except_table7367 [NameNList, MangledNameNList, NList] 
                0x0000000185fadf28 (    0x28) GCC_except_table7368 [NameNList, MangledNameNList, NList] 
                0x0000000185fadf50 (    0x70) GCC_except_table7370 [NameNList, MangledNameNList, NList] 
                0x0000000185fadfc0 (     0xc) GCC_except_table7563 [NameNList, MangledNameNList, NList] 
                0x0000000185fadfcc (    0x10) GCC_except_table7572 [NameNList, MangledNameNList, NList] 
                0x0000000185fadfdc (    0x3c) GCC_except_table7575 [NameNList, MangledNameNList, NList] 
                0x0000000185fae018 (    0x50) GCC_except_table7576 [NameNList, MangledNameNList, NList] 
                0x0000000185fae068 (    0x3c) GCC_except_table7578 [NameNList, MangledNameNList, NList] 
                0x0000000185fae0a4 (    0x28) GCC_except_table7579 [NameNList, MangledNameNList, NList] 
                0x0000000185fae0cc (    0x40) GCC_except_table7587 [NameNList, MangledNameNList, NList] 
                0x0000000185fae10c (    0x10) GCC_except_table7608 [NameNList, MangledNameNList, NList] 
                0x0000000185fae11c (    0x14) GCC_except_table7633 [NameNList, MangledNameNList, NList] 
                0x0000000185fae130 (    0x14) GCC_except_table7639 [NameNList, MangledNameNList, NList] 
                0x0000000185fae144 (    0x14) GCC_except_table7644 [NameNList, MangledNameNList, NList] 
                0x0000000185fae158 (    0x14) GCC_except_table7648 [NameNList, MangledNameNList, NList] 
                0x0000000185fae16c (    0x14) GCC_except_table7651 [NameNList, MangledNameNList, NList] 
                0x0000000185fae180 (    0x14) GCC_except_table7654 [NameNList, MangledNameNList, NList] 
                0x0000000185fae194 (    0x14) GCC_except_table7657 [NameNList, MangledNameNList, NList] 
                0x0000000185fae1a8 (    0x18) GCC_except_table7661 [NameNList, MangledNameNList, NList] 
                0x0000000185fae1c0 (    0x18) GCC_except_table7665 [NameNList, MangledNameNList, NList] 
                0x0000000185fae1d8 (    0x18) GCC_except_table7668 [NameNList, MangledNameNList, NList] 
                0x0000000185fae1f0 (    0x18) GCC_except_table7671 [NameNList, MangledNameNList, NList] 
                0x0000000185fae208 (    0x18) GCC_except_table7673 [NameNList, MangledNameNList, NList] 
                0x0000000185fae220 (    0x18) GCC_except_table7675 [NameNList, MangledNameNList, NList] 
                0x0000000185fae238 (    0x14) GCC_except_table7678 [NameNList, MangledNameNList, NList] 
                0x0000000185fae24c (    0x18) GCC_except_table7679 [NameNList, MangledNameNList, NList] 
                0x0000000185fae264 (    0x14) GCC_except_table7681 [NameNList, MangledNameNList, NList] 
                0x0000000185fae278 (    0x14) GCC_except_table7684 [NameNList, MangledNameNList, NList] 
                0x0000000185fae28c (    0x18) GCC_except_table7687 [NameNList, MangledNameNList, NList] 
                0x0000000185fae2a4 (    0x14) GCC_except_table7689 [NameNList, MangledNameNList, NList] 
                0x0000000185fae2b8 (    0x18) GCC_except_table7691 [NameNList, MangledNameNList, NList] 
                0x0000000185fae2d0 (    0x18) GCC_except_table7694 [NameNList, MangledNameNList, NList] 
                0x0000000185fae2e8 (    0x14) GCC_except_table7695 [NameNList, MangledNameNList, NList] 
                0x0000000185fae2fc (    0x18) GCC_except_table7696 [NameNList, MangledNameNList, NList] 
                0x0000000185fae314 (    0x14) GCC_except_table7698 [NameNList, MangledNameNList, NList] 
                0x0000000185fae328 (    0x14) GCC_except_table7702 [NameNList, MangledNameNList, NList] 
                0x0000000185fae33c (    0x14) GCC_except_table7703 [NameNList, MangledNameNList, NList] 
                0x0000000185fae350 (    0x14) GCC_except_table7704 [NameNList, MangledNameNList, NList] 
                0x0000000185fae364 (    0x18) GCC_except_table7705 [NameNList, MangledNameNList, NList] 
                0x0000000185fae37c (    0x14) GCC_except_table7707 [NameNList, MangledNameNList, NList] 
                0x0000000185fae390 (    0x1c) GCC_except_table7709 [NameNList, MangledNameNList, NList] 
                0x0000000185fae3ac (    0x18) GCC_except_table7711 [NameNList, MangledNameNList, NList] 
                0x0000000185fae3c4 (    0x18) GCC_except_table7713 [NameNList, MangledNameNList, NList] 
                0x0000000185fae3dc (    0x14) GCC_except_table7714 [NameNList, MangledNameNList, NList] 
                0x0000000185fae3f0 (    0x18) GCC_except_table7715 [NameNList, MangledNameNList, NList] 
                0x0000000185fae408 (    0x14) GCC_except_table7716 [NameNList, MangledNameNList, NList] 
                0x0000000185fae41c (    0x18) GCC_except_table7717 [NameNList, MangledNameNList, NList] 
                0x0000000185fae434 (    0x14) GCC_except_table7720 [NameNList, MangledNameNList, NList] 
                0x0000000185fae448 (    0x14) GCC_except_table7721 [NameNList, MangledNameNList, NList] 
                0x0000000185fae45c (    0x14) GCC_except_table7722 [NameNList, MangledNameNList, NList] 
                0x0000000185fae470 (    0x14) GCC_except_table7723 [NameNList, MangledNameNList, NList] 
                0x0000000185fae484 (    0x14) GCC_except_table7724 [NameNList, MangledNameNList, NList] 
                0x0000000185fae498 (    0x18) GCC_except_table7725 [NameNList, MangledNameNList, NList] 
                0x0000000185fae4b0 (    0x18) GCC_except_table7727 [NameNList, MangledNameNList, NList] 
                0x0000000185fae4c8 (    0x14) GCC_except_table7729 [NameNList, MangledNameNList, NList] 
                0x0000000185fae4dc (    0x18) GCC_except_table7732 [NameNList, MangledNameNList, NList] 
                0x0000000185fae4f4 (    0x18) GCC_except_table7735 [NameNList, MangledNameNList, NList] 
                0x0000000185fae50c (    0x18) GCC_except_table7738 [NameNList, MangledNameNList, NList] 
                0x0000000185fae524 (    0x18) GCC_except_table7740 [NameNList, MangledNameNList, NList] 
                0x0000000185fae53c (    0x18) GCC_except_table7742 [NameNList, MangledNameNList, NList] 
                0x0000000185fae554 (    0x18) GCC_except_table7744 [NameNList, MangledNameNList, NList] 
                0x0000000185fae56c (    0x14) GCC_except_table7746 [NameNList, MangledNameNList, NList] 
                0x0000000185fae580 (    0x18) GCC_except_table7749 [NameNList, MangledNameNList, NList] 
                0x0000000185fae598 (    0x14) GCC_except_table7751 [NameNList, MangledNameNList, NList] 
                0x0000000185fae5ac (    0x18) GCC_except_table7753 [NameNList, MangledNameNList, NList] 
                0x0000000185fae5c4 (    0x14) GCC_except_table7757 [NameNList, MangledNameNList, NList] 
                0x0000000185fae5d8 (    0x18) GCC_except_table7759 [NameNList, MangledNameNList, NList] 
                0x0000000185fae5f0 (    0x14) GCC_except_table7761 [NameNList, MangledNameNList, NList] 
                0x0000000185fae604 (    0x18) GCC_except_table7762 [NameNList, MangledNameNList, NList] 
                0x0000000185fae61c (    0x14) GCC_except_table7764 [NameNList, MangledNameNList, NList] 
                0x0000000185fae630 (    0x14) GCC_except_table7767 [NameNList, MangledNameNList, NList] 
                0x0000000185fae644 (    0x14) GCC_except_table7771 [NameNList, MangledNameNList, NList] 
                0x0000000185fae658 (    0x18) GCC_except_table7772 [NameNList, MangledNameNList, NList] 
                0x0000000185fae670 (    0x1c) GCC_except_table7773 [NameNList, MangledNameNList, NList] 
                0x0000000185fae68c (    0x18) GCC_except_table7774 [NameNList, MangledNameNList, NList] 
                0x0000000185fae6a4 (    0x18) GCC_except_table7777 [NameNList, MangledNameNList, NList] 
                0x0000000185fae6bc (    0x18) GCC_except_table7779 [NameNList, MangledNameNList, NList] 
                0x0000000185fae6d4 (    0x14) GCC_except_table7781 [NameNList, MangledNameNList, NList] 
                0x0000000185fae6e8 (    0x18) GCC_except_table7782 [NameNList, MangledNameNList, NList] 
                0x0000000185fae700 (    0x18) GCC_except_table7783 [NameNList, MangledNameNList, NList] 
                0x0000000185fae718 (    0x14) GCC_except_table7785 [NameNList, MangledNameNList, NList] 
                0x0000000185fae72c (    0x18) GCC_except_table7786 [NameNList, MangledNameNList, NList] 
                0x0000000185fae744 (    0x18) GCC_except_table7788 [NameNList, MangledNameNList, NList] 
                0x0000000185fae75c (    0x24) GCC_except_table7791 [NameNList, MangledNameNList, NList] 
                0x0000000185fae780 (    0x14) GCC_except_table7794 [NameNList, MangledNameNList, NList] 
                0x0000000185fae794 (    0x14) GCC_except_table7795 [NameNList, MangledNameNList, NList] 
                0x0000000185fae7a8 (    0x14) GCC_except_table7796 [NameNList, MangledNameNList, NList] 
                0x0000000185fae7bc (    0x14) GCC_except_table7797 [NameNList, MangledNameNList, NList] 
                0x0000000185fae7d0 (    0x14) GCC_except_table7798 [NameNList, MangledNameNList, NList] 
                0x0000000185fae7e4 (    0x18) GCC_except_table7800 [NameNList, MangledNameNList, NList] 
                0x0000000185fae7fc (    0x18) GCC_except_table7804 [NameNList, MangledNameNList, NList] 
                0x0000000185fae814 (    0x18) GCC_except_table7806 [NameNList, MangledNameNList, NList] 
                0x0000000185fae82c (    0x18) GCC_except_table7816 [NameNList, MangledNameNList, NList] 
                0x0000000185fae844 (    0x4c) GCC_except_table7849 [NameNList, MangledNameNList, NList] 
                0x0000000185fae890 (    0x1c) GCC_except_table7853 [NameNList, MangledNameNList, NList] 
                0x0000000185fae8ac (    0x60) GCC_except_table7856 [NameNList, MangledNameNList, NList] 
                0x0000000185fae90c (    0x2c) GCC_except_table7875 [NameNList, MangledNameNList, NList] 
                0x0000000185fae938 (    0x18) GCC_except_table7889 [NameNList, MangledNameNList, NList] 
                0x0000000185fae950 (    0x10) GCC_except_table7890 [NameNList, MangledNameNList, NList] 
                0x0000000185fae960 (    0x3c) GCC_except_table7891 [NameNList, MangledNameNList, NList] 
                0x0000000185fae99c (    0x30) GCC_except_table7892 [NameNList, MangledNameNList, NList] 
                0x0000000185fae9cc (    0x10) GCC_except_table7893 [NameNList, MangledNameNList, NList] 
                0x0000000185fae9dc (    0x40) GCC_except_table7894 [NameNList, MangledNameNList, NList] 
                0x0000000185faea1c (    0x48) GCC_except_table7895 [NameNList, MangledNameNList, NList] 
                0x0000000185faea64 (    0x58) GCC_except_table7896 [NameNList, MangledNameNList, NList] 
                0x0000000185faeabc (    0xb0) GCC_except_table7897 [NameNList, MangledNameNList, NList] 
                0x0000000185faeb6c (    0x88) GCC_except_table7898 [NameNList, MangledNameNList, NList] 
                0x0000000185faebf4 (    0x80) GCC_except_table7899 [NameNList, MangledNameNList, NList] 
                0x0000000185faec74 (    0x10) GCC_except_table7900 [NameNList, MangledNameNList, NList] 
                0x0000000185faec84 (    0x14) GCC_except_table7903 [NameNList, MangledNameNList, NList] 
                0x0000000185faec98 (    0x1c) GCC_except_table7910 [NameNList, MangledNameNList, NList] 
                0x0000000185faecb4 (    0x64) GCC_except_table7912 [NameNList, MangledNameNList, NList] 
                0x0000000185faed18 (    0x70) GCC_except_table7913 [NameNList, MangledNameNList, NList] 
                0x0000000185faed88 (    0x28) GCC_except_table7914 [NameNList, MangledNameNList, NList] 
                0x0000000185faedb0 (    0xc0) GCC_except_table7915 [NameNList, MangledNameNList, NList] 
                0x0000000185faee70 (    0x28) GCC_except_table7917 [NameNList, MangledNameNList, NList] 
                0x0000000185faee98 (   0x1c4) GCC_except_table7918 [NameNList, MangledNameNList, NList] 
                0x0000000185faf05c (    0x14) GCC_except_table7921 [NameNList, MangledNameNList, NList] 
                0x0000000185faf070 (    0x20) GCC_except_table7922 [NameNList, MangledNameNList, NList] 
                0x0000000185faf090 (    0x20) GCC_except_table7929 [NameNList, MangledNameNList, NList] 
                0x0000000185faf0b0 (    0x40) GCC_except_table7931 [NameNList, MangledNameNList, NList] 
                0x0000000185faf0f0 (    0x14) GCC_except_table7933 [NameNList, MangledNameNList, NList] 
                0x0000000185faf104 (    0x1c) GCC_except_table7950 [NameNList, MangledNameNList, NList] 
                0x0000000185faf120 (    0x10) GCC_except_table7953 [NameNList, MangledNameNList, NList] 
                0x0000000185faf130 (    0x3c) GCC_except_table7954 [NameNList, MangledNameNList, NList] 
                0x0000000185faf16c (    0x24) GCC_except_table7956 [NameNList, MangledNameNList, NList] 
                0x0000000185faf190 (    0x34) GCC_except_table7962 [NameNList, MangledNameNList, NList] 
                0x0000000185faf1c4 (    0x34) GCC_except_table7981 [NameNList, MangledNameNList, NList] 
                0x0000000185faf1f8 (    0x80) GCC_except_table7985 [NameNList, MangledNameNList, NList] 
                0x0000000185faf278 (    0x14) GCC_except_table7986 [NameNList, MangledNameNList, NList] 
                0x0000000185faf28c (    0x2c) GCC_except_table7988 [NameNList, MangledNameNList, NList] 
                0x0000000185faf2b8 (    0x50) GCC_except_table7995 [NameNList, MangledNameNList, NList] 
                0x0000000185faf308 (    0x44) GCC_except_table7998 [NameNList, MangledNameNList, NList] 
                0x0000000185faf34c (    0x70) GCC_except_table8001 [NameNList, MangledNameNList, NList] 
                0x0000000185faf3bc (    0x1c) GCC_except_table8005 [NameNList, MangledNameNList, NList] 
                0x0000000185faf3d8 (     0xc) GCC_except_table8027 [NameNList, MangledNameNList, NList] 
                0x0000000185faf3e4 (    0x18) GCC_except_table8028 [NameNList, MangledNameNList, NList] 
                0x0000000185faf3fc (     0xc) GCC_except_table8031 [NameNList, MangledNameNList, NList] 
                0x0000000185faf408 (    0x14) GCC_except_table8036 [NameNList, MangledNameNList, NList] 
                0x0000000185faf41c (    0x28) GCC_except_table8058 [NameNList, MangledNameNList, NList] 
                0x0000000185faf444 (    0x2c) GCC_except_table8065 [NameNList, MangledNameNList, NList] 
                0x0000000185faf470 (    0x28) GCC_except_table8066 [NameNList, MangledNameNList, NList] 
                0x0000000185faf498 (    0x28) GCC_except_table8067 [NameNList, MangledNameNList, NList] 
                0x0000000185faf4c0 (    0x18) GCC_except_table8086 [NameNList, MangledNameNList, NList] 
                0x0000000185faf4d8 (    0x18) GCC_except_table8087 [NameNList, MangledNameNList, NList] 
                0x0000000185faf4f0 (    0x14) GCC_except_table8126 [NameNList, MangledNameNList, NList] 
                0x0000000185faf504 (    0x10) GCC_except_table8136 [NameNList, MangledNameNList, NList] 
                0x0000000185faf514 (    0x10) GCC_except_table8145 [NameNList, MangledNameNList, NList] 
                0x0000000185faf524 (    0x10) GCC_except_table8162 [NameNList, MangledNameNList, NList] 
                0x0000000185faf534 (    0x18) GCC_except_table8169 [NameNList, MangledNameNList, NList] 
                0x0000000185faf54c (    0x10) GCC_except_table8174 [NameNList, MangledNameNList, NList] 
                0x0000000185faf55c (    0x70) GCC_except_table8195 [NameNList, MangledNameNList, NList] 
                0x0000000185faf5cc (    0x18) GCC_except_table8197 [NameNList, MangledNameNList, NList] 
                0x0000000185faf5e4 (    0x18) GCC_except_table8646 [NameNList, MangledNameNList, NList] 
                0x0000000185faf5fc (    0x2c) GCC_except_table8676 [NameNList, MangledNameNList, NList] 
                0x0000000185faf628 (    0x24) GCC_except_table8679 [NameNList, MangledNameNList, NList] 
                0x0000000185faf64c (    0x1c) GCC_except_table8680 [NameNList, MangledNameNList, NList] 
                0x0000000185faf668 (    0x10) GCC_except_table8682 [NameNList, MangledNameNList, NList] 
                0x0000000185faf678 (    0x1c) GCC_except_table8688 [NameNList, MangledNameNList, NList] 
                0x0000000185faf694 (    0x5c) GCC_except_table8691 [NameNList, MangledNameNList, NList] 
                0x0000000185faf6f0 (    0x1c) GCC_except_table8693 [NameNList, MangledNameNList, NList] 
                0x0000000185faf70c (    0x40) GCC_except_table8703 [NameNList, MangledNameNList, NList] 
                0x0000000185faf74c (    0x54) GCC_except_table8715 [NameNList, MangledNameNList, NList] 
                0x0000000185faf7a0 (    0x28) GCC_except_table8717 [NameNList, MangledNameNList, NList] 
                0x0000000185faf7c8 (    0x10) GCC_except_table8813 [NameNList, MangledNameNList, NList] 
                0x0000000185faf7d8 (    0x1c) GCC_except_table8820 [NameNList, MangledNameNList, NList] 
                0x0000000185faf7f4 (    0x1c) GCC_except_table8828 [NameNList, MangledNameNList, NList] 
                0x0000000185faf810 (    0x94) GCC_except_table8830 [NameNList, MangledNameNList, NList] 
                0x0000000185faf8a4 (    0x30) GCC_except_table8831 [NameNList, MangledNameNList, NList] 
                0x0000000185faf8d4 (    0x2c) GCC_except_table8832 [NameNList, MangledNameNList, NList] 
                0x0000000185faf900 (    0x10) GCC_except_table8833 [NameNList, MangledNameNList, NList] 
                0x0000000185faf910 (    0x14) GCC_except_table8836 [NameNList, MangledNameNList, NList] 
                0x0000000185faf924 (    0x18) GCC_except_table8837 [NameNList, MangledNameNList, NList] 
                0x0000000185faf93c (    0x1c) GCC_except_table8840 [NameNList, MangledNameNList, NList] 
                0x0000000185faf958 (    0x34) GCC_except_table8841 [NameNList, MangledNameNList, NList] 
                0x0000000185faf98c (    0x1c) GCC_except_table8847 [NameNList, MangledNameNList, NList] 
                0x0000000185faf9a8 (    0x30) GCC_except_table8848 [NameNList, MangledNameNList, NList] 
                0x0000000185faf9d8 (    0x1c) GCC_except_table8853 [NameNList, MangledNameNList, NList] 
                0x0000000185faf9f4 (    0x1c) GCC_except_table8859 [NameNList, MangledNameNList, NList] 
                0x0000000185fafa10 (    0x18) GCC_except_table8860 [NameNList, MangledNameNList, NList] 
                0x0000000185fafa28 (    0x18) GCC_except_table8862 [NameNList, MangledNameNList, NList] 
                0x0000000185fafa40 (    0x38) GCC_except_table8864 [NameNList, MangledNameNList, NList] 
                0x0000000185fafa78 (    0x1c) GCC_except_table8869 [NameNList, MangledNameNList, NList] 
                0x0000000185fafa94 (    0x1c) GCC_except_table8875 [NameNList, MangledNameNList, NList] 
                0x0000000185fafab0 (    0x58) GCC_except_table8880 [NameNList, MangledNameNList, NList] 
                0x0000000185fafb08 (    0x1c) GCC_except_table8887 [NameNList, MangledNameNList, NList] 
                0x0000000185fafb24 (    0x1c) GCC_except_table8888 [NameNList, MangledNameNList, NList] 
                0x0000000185fafb40 (    0x64) GCC_except_table8889 [NameNList, MangledNameNList, NList] 
                0x0000000185fafba4 (    0x28) GCC_except_table8890 [NameNList, MangledNameNList, NList] 
                0x0000000185fafbcc (    0x20) GCC_except_table8891 [NameNList, MangledNameNList, NList] 
                0x0000000185fafbec (    0x1c) GCC_except_table8895 [NameNList, MangledNameNList, NList] 
                0x0000000185fafc08 (    0x30) GCC_except_table8897 [NameNList, MangledNameNList, NList] 
                0x0000000185fafc38 (    0x10) GCC_except_table8904 [NameNList, MangledNameNList, NList] 
                0x0000000185fafc48 (   0x1b0) GCC_except_table8910 [NameNList, MangledNameNList, NList] 
                0x0000000185fafdf8 (    0xf4) GCC_except_table8911 [NameNList, MangledNameNList, NList] 
                0x0000000185fafeec (   0x104) GCC_except_table8912 [NameNList, MangledNameNList, NList] 
                0x0000000185fafff0 (    0x30) GCC_except_table8917 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0020 (    0xf0) GCC_except_table8921 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0110 (    0x2c) GCC_except_table8927 [NameNList, MangledNameNList, NList] 
                0x0000000185fb013c (    0x1c) GCC_except_table8932 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0158 (    0xbc) GCC_except_table8933 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0214 (    0xac) GCC_except_table8934 [NameNList, MangledNameNList, NList] 
                0x0000000185fb02c0 (    0x18) GCC_except_table8935 [NameNList, MangledNameNList, NList] 
                0x0000000185fb02d8 (    0x14) GCC_except_table8936 [NameNList, MangledNameNList, NList] 
                0x0000000185fb02ec (    0x1c) GCC_except_table8938 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0308 (   0x10c) GCC_except_table8939 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0414 (    0xc4) GCC_except_table8954 [NameNList, MangledNameNList, NList] 
                0x0000000185fb04d8 (     0xc) GCC_except_table9080 [NameNList, MangledNameNList, NList] 
                0x0000000185fb04e4 (    0x10) GCC_except_table9091 [NameNList, MangledNameNList, NList] 
                0x0000000185fb04f4 (    0x10) GCC_except_table9097 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0504 (    0x10) GCC_except_table9098 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0514 (    0x18) GCC_except_table9104 [NameNList, MangledNameNList, NList] 
                0x0000000185fb052c (    0x14) GCC_except_table9106 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0540 (    0x10) GCC_except_table9116 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0550 (    0x80) GCC_except_table9123 [NameNList, MangledNameNList, NList] 
                0x0000000185fb05d0 (    0x1c) GCC_except_table9124 [NameNList, MangledNameNList, NList] 
                0x0000000185fb05ec (    0x28) GCC_except_table9131 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0614 (    0x10) GCC_except_table9159 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0624 (    0x10) GCC_except_table9167 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0634 (    0x14) GCC_except_table9170 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0648 (    0x20) GCC_except_table9175 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0668 (    0x54) GCC_except_table9176 [NameNList, MangledNameNList, NList] 
                0x0000000185fb06bc (    0x4c) GCC_except_table9186 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0708 (    0x1c) GCC_except_table9243 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0724 (    0x40) GCC_except_table9245 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0764 (    0x10) GCC_except_table9591 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0774 (    0x20) GCC_except_table9593 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0794 (    0x28) GCC_except_table9594 [NameNList, MangledNameNList, NList] 
                0x0000000185fb07bc (    0x10) GCC_except_table9596 [NameNList, MangledNameNList, NList] 
                0x0000000185fb07cc (    0x84) GCC_except_table9597 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0850 (    0x44) GCC_except_table9600 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0894 (    0x44) GCC_except_table9609 [NameNList, MangledNameNList, NList] 
                0x0000000185fb08d8 (    0x10) GCC_except_table9610 [NameNList, MangledNameNList, NList] 
                0x0000000185fb08e8 (    0x28) GCC_except_table9615 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0910 (    0x20) GCC_except_table9631 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0930 (    0x28) GCC_except_table9639 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0958 (    0x24) GCC_except_table9640 [NameNList, MangledNameNList, NList] 
                0x0000000185fb097c (    0x2c) GCC_except_table9641 [NameNList, MangledNameNList, NList] 
                0x0000000185fb09a8 (    0x28) GCC_except_table9647 [NameNList, MangledNameNList, NList] 
                0x0000000185fb09d0 (    0x20) GCC_except_table9686 [NameNList, MangledNameNList, NList] 
                0x0000000185fb09f0 (    0x24) GCC_except_table9691 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0a14 (    0x24) GCC_except_table9692 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0a38 (    0x18) GCC_except_table9746 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0a50 (    0x18) GCC_except_table9785 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0a68 (    0x1c) GCC_except_table9792 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0a84 (    0x24) GCC_except_table9800 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0aa8 (    0x20) GCC_except_table9802 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0ac8 (    0x14) GCC_except_table9823 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0adc (    0x20) GCC_except_table9875 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0afc (   0x18c) GCC_except_table9912 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0c88 (    0x30) GCC_except_table9914 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0cb8 (    0x24) GCC_except_table9960 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0cdc (    0x18) GCC_except_table9963 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0cf4 (    0x74) GCC_except_table9964 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0d68 (    0x18) GCC_except_table10038 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0d80 (    0x14) GCC_except_table10416 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0d94 (    0x68) GCC_except_table10422 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0dfc (    0x14) GCC_except_table10423 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0e10 (    0x68) GCC_except_table10428 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0e78 (    0x14) GCC_except_table10429 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0e8c (    0x44) GCC_except_table10434 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0ed0 (    0x14) GCC_except_table10435 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0ee4 (    0x44) GCC_except_table10440 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0f28 (    0x14) GCC_except_table10441 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0f3c (    0x30) GCC_except_table10446 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0f6c (    0x14) GCC_except_table10447 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0f80 (    0x14) GCC_except_table10451 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0f94 (    0x14) GCC_except_table10456 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0fa8 (    0x18) GCC_except_table10461 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0fc0 (    0x14) GCC_except_table10462 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0fd4 (    0x20) GCC_except_table10463 [NameNList, MangledNameNList, NList] 
                0x0000000185fb0ff4 (    0x20) GCC_except_table10464 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1014 (    0x10) GCC_except_table10465 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1024 (    0x14) GCC_except_table10469 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1038 (    0x18) GCC_except_table10470 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1050 (    0x20) GCC_except_table10471 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1070 (    0x34) GCC_except_table10472 [NameNList, MangledNameNList, NList] 
                0x0000000185fb10a4 (    0x14) GCC_except_table10477 [NameNList, MangledNameNList, NList] 
                0x0000000185fb10b8 (    0x14) GCC_except_table10482 [NameNList, MangledNameNList, NList] 
                0x0000000185fb10cc (    0x14) GCC_except_table10487 [NameNList, MangledNameNList, NList] 
                0x0000000185fb10e0 (    0x14) GCC_except_table10492 [NameNList, MangledNameNList, NList] 
                0x0000000185fb10f4 (    0x14) GCC_except_table10497 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1108 (    0x10) GCC_except_table10502 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1118 (    0x14) GCC_except_table10503 [NameNList, MangledNameNList, NList] 
                0x0000000185fb112c (    0x18) GCC_except_table10508 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1144 (    0x18) GCC_except_table10513 [NameNList, MangledNameNList, NList] 
                0x0000000185fb115c (    0x14) GCC_except_table10519 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1170 (    0x18) GCC_except_table10520 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1188 (    0x14) GCC_except_table10525 [NameNList, MangledNameNList, NList] 
                0x0000000185fb119c (    0x14) GCC_except_table10530 [NameNList, MangledNameNList, NList] 
                0x0000000185fb11b0 (    0x10) GCC_except_table10548 [NameNList, MangledNameNList, NList] 
                0x0000000185fb11c0 (    0x68) GCC_except_table10549 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1228 (    0x14) GCC_except_table10550 [NameNList, MangledNameNList, NList] 
                0x0000000185fb123c (    0x14) GCC_except_table10555 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1250 (    0x10) GCC_except_table10559 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1260 (    0x10) GCC_except_table10560 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1270 (    0x14) GCC_except_table10562 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1284 (    0x10) GCC_except_table10569 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1294 (    0x68) GCC_except_table10570 [NameNList, MangledNameNList, NList] 
                0x0000000185fb12fc (    0x14) GCC_except_table10571 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1310 (    0x44) GCC_except_table10577 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1354 (    0x14) GCC_except_table10578 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1368 (    0x44) GCC_except_table10584 [NameNList, MangledNameNList, NList] 
                0x0000000185fb13ac (    0x14) GCC_except_table10585 [NameNList, MangledNameNList, NList] 
                0x0000000185fb13c0 (    0x10) GCC_except_table10591 [NameNList, MangledNameNList, NList] 
                0x0000000185fb13d0 (    0x78) GCC_except_table10592 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1448 (    0x20) GCC_except_table10593 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1468 (    0x10) GCC_except_table10599 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1478 (    0x78) GCC_except_table10600 [NameNList, MangledNameNList, NList] 
                0x0000000185fb14f0 (    0x20) GCC_except_table10601 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1510 (    0x14) GCC_except_table10608 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1524 (    0x50) GCC_except_table10609 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1574 (    0x14) GCC_except_table10610 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1588 (    0x44) GCC_except_table10616 [NameNList, MangledNameNList, NList] 
                0x0000000185fb15cc (    0x14) GCC_except_table10617 [NameNList, MangledNameNList, NList] 
                0x0000000185fb15e0 (    0x44) GCC_except_table10623 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1624 (    0x14) GCC_except_table10624 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1638 (    0x10) GCC_except_table10627 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1648 (    0x10) GCC_except_table10628 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1658 (    0x14) GCC_except_table10630 [NameNList, MangledNameNList, NList] 
                0x0000000185fb166c (    0x10) GCC_except_table10636 [NameNList, MangledNameNList, NList] 
                0x0000000185fb167c (    0x10) GCC_except_table10637 [NameNList, MangledNameNList, NList] 
                0x0000000185fb168c (    0x10) GCC_except_table10638 [NameNList, MangledNameNList, NList] 
                0x0000000185fb169c (    0x44) GCC_except_table10639 [NameNList, MangledNameNList, NList] 
                0x0000000185fb16e0 (    0x14) GCC_except_table10640 [NameNList, MangledNameNList, NList] 
                0x0000000185fb16f4 (    0x10) GCC_except_table10643 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1704 (    0x10) GCC_except_table10644 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1714 (    0x14) GCC_except_table10646 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1728 (    0x10) GCC_except_table10653 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1738 (    0x44) GCC_except_table10654 [NameNList, MangledNameNList, NList] 
                0x0000000185fb177c (    0x14) GCC_except_table10655 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1790 (    0x10) GCC_except_table10658 [NameNList, MangledNameNList, NList] 
                0x0000000185fb17a0 (    0x10) GCC_except_table10659 [NameNList, MangledNameNList, NList] 
                0x0000000185fb17b0 (    0x14) GCC_except_table10661 [NameNList, MangledNameNList, NList] 
                0x0000000185fb17c4 (    0x10) GCC_except_table10668 [NameNList, MangledNameNList, NList] 
                0x0000000185fb17d4 (    0x30) GCC_except_table10669 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1804 (    0x14) GCC_except_table10670 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1818 (    0x14) GCC_except_table10676 [NameNList, MangledNameNList, NList] 
                0x0000000185fb182c (    0x14) GCC_except_table10683 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1840 (    0x10) GCC_except_table10689 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1850 (    0x14) GCC_except_table10690 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1864 (    0x10) GCC_except_table10694 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1874 (    0x10) GCC_except_table10695 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1884 (    0x14) GCC_except_table10697 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1898 (    0x10) GCC_except_table10704 [NameNList, MangledNameNList, NList] 
                0x0000000185fb18a8 (    0x44) GCC_except_table10705 [NameNList, MangledNameNList, NList] 
                0x0000000185fb18ec (    0x14) GCC_except_table10706 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1900 (    0x10) GCC_except_table10711 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1910 (    0x14) GCC_except_table10712 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1924 (    0x10) GCC_except_table10718 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1934 (    0x14) GCC_except_table10719 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1948 (    0x14) GCC_except_table10725 [NameNList, MangledNameNList, NList] 
                0x0000000185fb195c (    0x10) GCC_except_table10729 [NameNList, MangledNameNList, NList] 
                0x0000000185fb196c (    0x14) GCC_except_table10732 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1980 (    0x10) GCC_except_table10738 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1990 (    0x20) GCC_except_table10739 [NameNList, MangledNameNList, NList] 
                0x0000000185fb19b0 (    0x14) GCC_except_table10740 [NameNList, MangledNameNList, NList] 
                0x0000000185fb19c4 (    0x10) GCC_except_table10741 [NameNList, MangledNameNList, NList] 
                0x0000000185fb19d4 (    0x14) GCC_except_table10747 [NameNList, MangledNameNList, NList] 
                0x0000000185fb19e8 (    0x14) GCC_except_table10754 [NameNList, MangledNameNList, NList] 
                0x0000000185fb19fc (    0x20) GCC_except_table10755 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a1c (    0x14) GCC_except_table10762 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a30 (    0x10) GCC_except_table10768 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a40 (    0x14) GCC_except_table10769 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a54 (    0x14) GCC_except_table10776 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a68 (    0x10) GCC_except_table10782 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a78 (    0x14) GCC_except_table10783 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1a8c (    0x30) GCC_except_table10791 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1abc (    0x14) GCC_except_table10792 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ad0 (    0x14) GCC_except_table10797 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ae4 (    0x24) GCC_except_table10803 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b08 (    0x40) GCC_except_table10804 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b48 (    0x10) GCC_except_table10810 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b58 (    0x14) GCC_except_table10811 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b6c (    0x14) GCC_except_table10817 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b80 (    0x14) GCC_except_table10823 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1b94 (    0x10) GCC_except_table10832 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ba4 (    0x10) GCC_except_table10833 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1bb4 (    0x14) GCC_except_table10843 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1bc8 (    0x3c) GCC_except_table10844 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c04 (    0x14) GCC_except_table10845 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c18 (    0x10) GCC_except_table10847 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c28 (    0x10) GCC_except_table10848 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c38 (    0x10) GCC_except_table10854 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c48 (    0x10) GCC_except_table10855 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c58 (    0x18) GCC_except_table10857 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c70 (    0x10) GCC_except_table10861 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c80 (    0x10) GCC_except_table10862 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1c90 (    0x18) GCC_except_table10864 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ca8 (    0x10) GCC_except_table10868 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1cb8 (    0x10) GCC_except_table10869 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1cc8 (    0x14) GCC_except_table10871 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1cdc (    0x10) GCC_except_table10875 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1cec (    0x10) GCC_except_table10876 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1cfc (    0x14) GCC_except_table10878 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1d10 (    0x30) GCC_except_table10886 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1d40 (    0x14) GCC_except_table10887 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1d54 (    0x10) GCC_except_table10893 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1d64 (    0x3c) GCC_except_table10894 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1da0 (    0x14) GCC_except_table10895 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1db4 (    0x30) GCC_except_table10902 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1de4 (    0x14) GCC_except_table10903 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1df8 (    0x10) GCC_except_table10909 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e08 (    0x3c) GCC_except_table10910 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e44 (    0x14) GCC_except_table10911 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e58 (    0x10) GCC_except_table10916 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e68 (    0x10) GCC_except_table10917 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e78 (    0x10) GCC_except_table10918 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1e88 (    0x50) GCC_except_table10919 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ed8 (    0x14) GCC_except_table10920 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1eec (    0x14) GCC_except_table10927 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f00 (    0x3c) GCC_except_table10928 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f3c (    0x14) GCC_except_table10929 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f50 (    0x10) GCC_except_table10932 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f60 (    0x14) GCC_except_table10935 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f74 (    0x14) GCC_except_table10941 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f88 (    0x10) GCC_except_table10949 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1f98 (    0x3c) GCC_except_table10950 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1fd4 (    0x14) GCC_except_table10951 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1fe8 (    0x10) GCC_except_table10957 [NameNList, MangledNameNList, NList] 
                0x0000000185fb1ff8 (    0x50) GCC_except_table10958 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2048 (    0x14) GCC_except_table10959 [NameNList, MangledNameNList, NList] 
                0x0000000185fb205c (    0x44) GCC_except_table10965 [NameNList, MangledNameNList, NList] 
                0x0000000185fb20a0 (    0x14) GCC_except_table10966 [NameNList, MangledNameNList, NList] 
                0x0000000185fb20b4 (    0x10) GCC_except_table10971 [NameNList, MangledNameNList, NList] 
                0x0000000185fb20c4 (    0x14) GCC_except_table10972 [NameNList, MangledNameNList, NList] 
                0x0000000185fb20d8 (    0x14) GCC_except_table10979 [NameNList, MangledNameNList, NList] 
                0x0000000185fb20ec (    0x14) GCC_except_table10987 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2100 (    0x14) GCC_except_table10988 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2114 (    0x10) GCC_except_table10996 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2124 (    0x68) GCC_except_table10997 [NameNList, MangledNameNList, NList] 
                0x0000000185fb218c (    0x14) GCC_except_table10998 [NameNList, MangledNameNList, NList] 
                0x0000000185fb21a0 (    0x14) GCC_except_table11004 [NameNList, MangledNameNList, NList] 
                0x0000000185fb21b4 (    0x14) GCC_except_table11011 [NameNList, MangledNameNList, NList] 
                0x0000000185fb21c8 (    0x14) GCC_except_table11018 [NameNList, MangledNameNList, NList] 
                0x0000000185fb21dc (    0x14) GCC_except_table11019 [NameNList, MangledNameNList, NList] 
                0x0000000185fb21f0 (    0x14) GCC_except_table11029 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2204 (    0x14) GCC_except_table11030 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2218 (    0x14) GCC_except_table11037 [NameNList, MangledNameNList, NList] 
                0x0000000185fb222c (    0x10) GCC_except_table11043 [NameNList, MangledNameNList, NList] 
                0x0000000185fb223c (    0x18) GCC_except_table11044 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2254 (    0x10) GCC_except_table11051 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2264 (    0x18) GCC_except_table11052 [NameNList, MangledNameNList, NList] 
                0x0000000185fb227c (    0x10) GCC_except_table11060 [NameNList, MangledNameNList, NList] 
                0x0000000185fb228c (    0x68) GCC_except_table11061 [NameNList, MangledNameNList, NList] 
                0x0000000185fb22f4 (    0x14) GCC_except_table11062 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2308 (    0x10) GCC_except_table11068 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2318 (    0x18) GCC_except_table11069 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2330 (    0x14) GCC_except_table11078 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2344 (    0x20) GCC_except_table11079 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2364 (    0x10) GCC_except_table11085 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2374 (    0x18) GCC_except_table11086 [NameNList, MangledNameNList, NList] 
                0x0000000185fb238c (    0x14) GCC_except_table11096 [NameNList, MangledNameNList, NList] 
                0x0000000185fb23a0 (    0x28) GCC_except_table11097 [NameNList, MangledNameNList, NList] 
                0x0000000185fb23c8 (    0x20) GCC_except_table11098 [NameNList, MangledNameNList, NList] 
                0x0000000185fb23e8 (    0x28) GCC_except_table11099 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2410 (    0x14) GCC_except_table11106 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2424 (    0x20) GCC_except_table11107 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2444 (    0x10) GCC_except_table11113 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2454 (    0x18) GCC_except_table11114 [NameNList, MangledNameNList, NList] 
                0x0000000185fb246c (    0x14) GCC_except_table11122 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2480 (    0x14) GCC_except_table11123 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2494 (    0x10) GCC_except_table11127 [NameNList, MangledNameNList, NList] 
                0x0000000185fb24a4 (    0x10) GCC_except_table11128 [NameNList, MangledNameNList, NList] 
                0x0000000185fb24b4 (    0x14) GCC_except_table11130 [NameNList, MangledNameNList, NList] 
                0x0000000185fb24c8 (    0x14) GCC_except_table11137 [NameNList, MangledNameNList, NList] 
                0x0000000185fb24dc (    0x14) GCC_except_table11144 [NameNList, MangledNameNList, NList] 
                0x0000000185fb24f0 (    0x14) GCC_except_table11153 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2504 (    0x10) GCC_except_table11154 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2514 (    0x14) GCC_except_table11155 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2528 (    0x58) GCC_except_table11156 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2580 (    0x18) GCC_except_table11157 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2598 (    0x28) GCC_except_table11158 [NameNList, MangledNameNList, NList] 
                0x0000000185fb25c0 (    0x14) GCC_except_table11166 [NameNList, MangledNameNList, NList] 
                0x0000000185fb25d4 (    0x10) GCC_except_table11167 [NameNList, MangledNameNList, NList] 
                0x0000000185fb25e4 (    0x14) GCC_except_table11168 [NameNList, MangledNameNList, NList] 
                0x0000000185fb25f8 (    0x20) GCC_except_table11169 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2618 (    0x1c) GCC_except_table11170 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2634 (    0x40) GCC_except_table11223 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2674 (    0x1c) GCC_except_table11233 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2690 (    0x1c) GCC_except_table11320 [NameNList, MangledNameNList, NList] 
                0x0000000185fb26ac (    0x10) GCC_except_table11322 [NameNList, MangledNameNList, NList] 
                0x0000000185fb26bc (    0x24) GCC_except_table11331 [NameNList, MangledNameNList, NList] 
                0x0000000185fb26e0 (    0x2c) GCC_except_table11335 [NameNList, MangledNameNList, NList] 
                0x0000000185fb270c (    0x20) GCC_except_table11338 [NameNList, MangledNameNList, NList] 
                0x0000000185fb272c (    0x44) GCC_except_table11339 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2770 (    0x20) GCC_except_table11355 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2790 (    0x10) GCC_except_table11357 [NameNList, MangledNameNList, NList] 
                0x0000000185fb27a0 (    0x1c) GCC_except_table11361 [NameNList, MangledNameNList, NList] 
                0x0000000185fb27bc (    0x10) GCC_except_table11362 [NameNList, MangledNameNList, NList] 
                0x0000000185fb27cc (    0x20) GCC_except_table11365 [NameNList, MangledNameNList, NList] 
                0x0000000185fb27ec (    0x10) GCC_except_table11366 [NameNList, MangledNameNList, NList] 
                0x0000000185fb27fc (    0x5c) GCC_except_table11369 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2858 (    0x20) GCC_except_table11374 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2878 (    0x10) GCC_except_table11375 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2888 (    0x20) GCC_except_table11379 [NameNList, MangledNameNList, NList] 
                0x0000000185fb28a8 (    0x10) GCC_except_table11380 [NameNList, MangledNameNList, NList] 
                0x0000000185fb28b8 (    0x34) GCC_except_table11386 [NameNList, MangledNameNList, NList] 
                0x0000000185fb28ec (    0x10) GCC_except_table11387 [NameNList, MangledNameNList, NList] 
                0x0000000185fb28fc (    0x10) GCC_except_table11388 [NameNList, MangledNameNList, NList] 
                0x0000000185fb290c (    0x20) GCC_except_table11401 [NameNList, MangledNameNList, NList] 
                0x0000000185fb292c (    0x10) GCC_except_table11402 [NameNList, MangledNameNList, NList] 
                0x0000000185fb293c (    0x1c) GCC_except_table11404 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2958 (    0x10) GCC_except_table11405 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2968 (    0x1c) GCC_except_table11407 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2984 (    0x10) GCC_except_table11408 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2994 (    0x1c) GCC_except_table11410 [NameNList, MangledNameNList, NList] 
                0x0000000185fb29b0 (    0x10) GCC_except_table11411 [NameNList, MangledNameNList, NList] 
                0x0000000185fb29c0 (    0x1c) GCC_except_table11413 [NameNList, MangledNameNList, NList] 
                0x0000000185fb29dc (    0x10) GCC_except_table11414 [NameNList, MangledNameNList, NList] 
                0x0000000185fb29ec (    0x20) GCC_except_table11416 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a0c (    0x10) GCC_except_table11417 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a1c (    0x14) GCC_except_table11419 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a30 (    0x20) GCC_except_table11420 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a50 (    0x10) GCC_except_table11421 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a60 (    0x20) GCC_except_table11423 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a80 (    0x10) GCC_except_table11424 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2a90 (    0x1c) GCC_except_table11426 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2aac (    0x10) GCC_except_table11427 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2abc (    0x18) GCC_except_table11433 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ad4 (    0x10) GCC_except_table11434 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ae4 (    0x10) GCC_except_table11435 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2af4 (    0x10) GCC_except_table11436 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b04 (    0x10) GCC_except_table11437 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b14 (     0xc) GCC_except_table11449 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b20 (    0x20) GCC_except_table11717 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b40 (    0x20) GCC_except_table11720 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b60 (    0x20) GCC_except_table11723 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2b80 (    0x20) GCC_except_table11724 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ba0 (    0x20) GCC_except_table11727 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2bc0 (    0x20) GCC_except_table11730 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2be0 (    0x20) GCC_except_table11732 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2c00 (    0x24) GCC_except_table11734 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2c24 (    0x20) GCC_except_table11736 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2c44 (    0x20) GCC_except_table11738 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2c64 (    0x20) GCC_except_table11741 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2c84 (    0x20) GCC_except_table11743 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ca4 (    0x20) GCC_except_table11745 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2cc4 (    0x20) GCC_except_table11752 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ce4 (    0x20) GCC_except_table11755 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2d04 (    0x20) GCC_except_table11757 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2d24 (    0x24) GCC_except_table11759 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2d48 (    0x20) GCC_except_table11806 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2d68 (    0x20) GCC_except_table11809 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2d88 (    0x34) GCC_except_table11833 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2dbc (    0x24) GCC_except_table11835 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2de0 (    0x24) GCC_except_table11842 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2e04 (    0x24) GCC_except_table11844 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2e28 (    0x24) GCC_except_table11846 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2e4c (    0x24) GCC_except_table11848 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2e70 (    0x20) GCC_except_table11856 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2e90 (    0x20) GCC_except_table11859 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2eb0 (    0x20) GCC_except_table11868 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2ed0 (    0x38) GCC_except_table11897 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2f08 (    0x20) GCC_except_table11898 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2f28 (    0x14) GCC_except_table11972 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2f3c (    0x10) GCC_except_table11974 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2f4c (     0xc) GCC_except_table12089 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2f58 (    0x58) GCC_except_table12092 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2fb0 (    0x1c) GCC_except_table12145 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2fcc (    0x18) GCC_except_table12178 [NameNList, MangledNameNList, NList] 
                0x0000000185fb2fe4 (    0x6c) GCC_except_table12179 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3050 (    0x14) GCC_except_table12184 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3064 (    0x1c) GCC_except_table12189 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3080 (     0xc) GCC_except_table12195 [NameNList, MangledNameNList, NList] 
                0x0000000185fb308c (     0xc) GCC_except_table12207 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3098 (    0x34) GCC_except_table12222 [NameNList, MangledNameNList, NList] 
                0x0000000185fb30cc (    0x1c) GCC_except_table12225 [NameNList, MangledNameNList, NList] 
                0x0000000185fb30e8 (    0x10) GCC_except_table12233 [NameNList, MangledNameNList, NList] 
                0x0000000185fb30f8 (     0xc) GCC_except_table12238 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3104 (    0x34) GCC_except_table12244 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3138 (    0x10) GCC_except_table12261 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3148 (    0x14) GCC_except_table12265 [NameNList, MangledNameNList, NList] 
                0x0000000185fb315c (    0x1c) GCC_except_table12267 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3178 (    0x10) GCC_except_table12268 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3188 (    0x18) GCC_except_table12271 [NameNList, MangledNameNList, NList] 
                0x0000000185fb31a0 (    0x20) GCC_except_table12272 [NameNList, MangledNameNList, NList] 
                0x0000000185fb31c0 (    0x10) GCC_except_table12273 [NameNList, MangledNameNList, NList] 
                0x0000000185fb31d0 (    0x18) GCC_except_table12276 [NameNList, MangledNameNList, NList] 
                0x0000000185fb31e8 (    0x10) GCC_except_table12278 [NameNList, MangledNameNList, NList] 
                0x0000000185fb31f8 (    0x80) GCC_except_table12291 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3278 (    0x10) GCC_except_table12298 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3288 (    0x1c) GCC_except_table12299 [NameNList, MangledNameNList, NList] 
                0x0000000185fb32a4 (    0x68) GCC_except_table12359 [NameNList, MangledNameNList, NList] 
                0x0000000185fb330c (    0x18) GCC_except_table12361 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3324 (    0x18) GCC_except_table12363 [NameNList, MangledNameNList, NList] 
                0x0000000185fb333c (    0x60) GCC_except_table12365 [NameNList, MangledNameNList, NList] 
                0x0000000185fb339c (    0x30) GCC_except_table12366 [NameNList, MangledNameNList, NList] 
                0x0000000185fb33cc (    0x10) GCC_except_table12367 [NameNList, MangledNameNList, NList] 
                0x0000000185fb33dc (    0x18) GCC_except_table12377 [NameNList, MangledNameNList, NList] 
                0x0000000185fb33f4 (    0x14) GCC_except_table12385 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3408 (    0x18) GCC_except_table12386 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3420 (    0xb0) GCC_except_table12387 [NameNList, MangledNameNList, NList] 
                0x0000000185fb34d0 (    0x14) GCC_except_table12388 [NameNList, MangledNameNList, NList] 
                0x0000000185fb34e4 (    0x14) GCC_except_table12390 [NameNList, MangledNameNList, NList] 
                0x0000000185fb34f8 (   0x118) GCC_except_table12392 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3610 (    0x78) GCC_except_table12393 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3688 (    0x3c) GCC_except_table12394 [NameNList, MangledNameNList, NList] 
                0x0000000185fb36c4 (    0x54) GCC_except_table12395 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3718 (    0x10) GCC_except_table12396 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3728 (    0x18) GCC_except_table12403 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3740 (    0x10) GCC_except_table12411 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3750 (    0x9c) GCC_except_table12437 [NameNList, MangledNameNList, NList] 
                0x0000000185fb37ec (    0x18) GCC_except_table12438 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3804 (    0x4c) GCC_except_table12439 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3850 (    0x50) GCC_except_table12468 [NameNList, MangledNameNList, NList] 
                0x0000000185fb38a0 (    0x24) GCC_except_table12490 [NameNList, MangledNameNList, NList] 
                0x0000000185fb38c4 (   0x120) GCC_except_table12491 [NameNList, MangledNameNList, NList] 
                0x0000000185fb39e4 (    0x34) GCC_except_table12492 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3a18 (    0x10) GCC_except_table12493 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3a28 (     0xc) GCC_except_table12494 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3a34 (    0x98) GCC_except_table12495 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3acc (    0x20) GCC_except_table12507 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3aec (    0x64) GCC_except_table12584 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3b50 (    0x28) GCC_except_table12585 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3b78 (    0x28) GCC_except_table12586 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ba0 (     0xc) GCC_except_table12587 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3bac (    0x28) GCC_except_table12588 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3bd4 (    0x10) GCC_except_table12589 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3be4 (    0x78) GCC_except_table12594 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3c5c (    0x10) GCC_except_table12595 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3c6c (     0xc) GCC_except_table12596 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3c78 (    0x60) GCC_except_table12603 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3cd8 (    0x24) GCC_except_table12612 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3cfc (    0x10) GCC_except_table12618 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3d0c (    0x2c) GCC_except_table12691 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3d38 (    0x20) GCC_except_table12692 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3d58 (    0x18) GCC_except_table12693 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3d70 (     0xc) GCC_except_table12695 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3d7c (    0x64) GCC_except_table12774 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3de0 (    0x14) GCC_except_table12904 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3df4 (    0x24) GCC_except_table12905 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3e18 (    0x20) GCC_except_table12906 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3e38 (    0x18) GCC_except_table12911 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3e50 (    0x10) GCC_except_table12912 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3e60 (    0x10) GCC_except_table12913 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3e70 (    0x30) GCC_except_table12914 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ea0 (    0x30) GCC_except_table12915 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ed0 (    0x10) GCC_except_table12918 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ee0 (    0x10) GCC_except_table12919 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ef0 (    0x14) GCC_except_table12920 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3f04 (    0x28) GCC_except_table12921 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3f2c (    0x14) GCC_except_table12923 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3f40 (    0x34) GCC_except_table12924 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3f74 (    0x14) GCC_except_table12925 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3f88 (    0x44) GCC_except_table12926 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3fcc (    0x24) GCC_except_table12927 [NameNList, MangledNameNList, NList] 
                0x0000000185fb3ff0 (    0x58) GCC_except_table12928 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4048 (    0x10) GCC_except_table12929 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4058 (    0x10) GCC_except_table12931 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4068 (    0x28) GCC_except_table12933 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4090 (    0x14) GCC_except_table12934 [NameNList, MangledNameNList, NList] 
                0x0000000185fb40a4 (    0x24) GCC_except_table12935 [NameNList, MangledNameNList, NList] 
                0x0000000185fb40c8 (    0x14) GCC_except_table12936 [NameNList, MangledNameNList, NList] 
                0x0000000185fb40dc (    0x18) GCC_except_table12937 [NameNList, MangledNameNList, NList] 
                0x0000000185fb40f4 (    0x10) GCC_except_table12938 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4104 (    0x10) GCC_except_table12939 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4114 (    0x24) GCC_except_table12941 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4138 (    0x14) GCC_except_table12943 [NameNList, MangledNameNList, NList] 
                0x0000000185fb414c (    0x20) GCC_except_table12944 [NameNList, MangledNameNList, NList] 
                0x0000000185fb416c (    0x18) GCC_except_table12945 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4184 (    0x14) GCC_except_table12946 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4198 (    0x2c) GCC_except_table12948 [NameNList, MangledNameNList, NList] 
                0x0000000185fb41c4 (    0x10) GCC_except_table13102 [NameNList, MangledNameNList, NList] 
                0x0000000185fb41d4 (    0x18) GCC_except_table13323 [NameNList, MangledNameNList, NList] 
                0x0000000185fb41ec (    0x54) GCC_except_table13370 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4240 (    0x24) GCC_except_table13418 [NameNList, MangledNameNList, NList] 
                0x0000000185fb4264 (    0x18) GCC_except_table13429 [NameNList, MangledNameNList, NList] 
                0x0000000185fb427c (    0x60) GCC_except_table13535 [NameNList, MangledNameNList, NList] 
                0x0000000185fb42dc (    0x18) GCC_except_table13600 [NameNList, MangledNameNList, NList] 
            0x0000000185fb42f4 ( 0x16b09) __TEXT __oslogstring
            0x0000000185fcadfd (   0x7e3) __TEXT __dlopen_cstrs
                0x0000000185fcadfd (    0x60) audit_stringDiagnosticRequest [NameNList, MangledNameNList, NList] 
                0x0000000185fcae5d (    0x56) audit_stringSystemStatus [NameNList, MangledNameNList, NList] 
                0x0000000185fcaeb3 (    0x5a) audit_stringSystemOverride [NameNList, MangledNameNList, NList] 
                0x0000000185fcaf0d (    0x4a) audit_stringCoreUI [NameNList, MangledNameNList, NList] 
                0x0000000185fcaf57 (    0x60) audit_stringFuseBoardServices [NameNList, MangledNameNList, NList] 
                0x0000000185fcafb7 (    0x4a) audit_stringCoreUI (.4178) [NameNList, MangledNameNList, NList] 
                0x0000000185fcb001 (    0x66) audit_stringRunningBoardServices [NameNList, MangledNameNList, NList] 
                0x0000000185fcb067 (    0x5a) audit_stringAmbientDisplay [NameNList, MangledNameNList, NList] 
                0x0000000185fcb0c1 (    0x49) WS::Displays::audit_stringColorSync [NameNList, MangledNameNList, NList] 
                0x0000000185fcb10a (    0x5a) audit_stringCoreBrightness [NameNList, MangledNameNList, NList] 
                0x0000000185fcb164 (    0x5a) audit_stringDiskManagement [NameNList, MangledNameNList, NList] 
                0x0000000185fcb1be (    0x55) audit_stringDiskArbitration [NameNList, MangledNameNList, NList] 
                0x0000000185fcb213 (    0x4b) audit_stringQuartzCore [NameNList, MangledNameNList, NList] 
                0x0000000185fcb25e (    0x4b) audit_stringQuartzCore (.13656) [NameNList, MangledNameNList, NList] 
                0x0000000185fcb2a9 (    0x41) audit_stringIOKit [NameNList, MangledNameNList, NList] 
                0x0000000185fcb2ea (    0x4a) audit_stringCoreUI (.14793) [NameNList, MangledNameNList, NList] 
                0x0000000185fcb334 (    0x4a) audit_stringCoreUI (.15694) [NameNList, MangledNameNList, NList] 
                0x0000000185fcb37e (    0x52) audit_stringHIDDisplay [NameNList, MangledNameNList, NList] 
                0x0000000185fcb3d0 (    0x52) audit_stringHIDDisplay (.21422) [NameNList, MangledNameNList, NList] 
                0x0000000185fcb422 (    0x6c) audit_stringAppleDisplayTCONControl [NameNList, MangledNameNList, NList] 
                0x0000000185fcb48e (    0x58) audit_stringCoreAnalytics [NameNList, MangledNameNList, NList] 
                0x0000000185fcb4e6 (    0x4a) audit_stringGeoKit [NameNList, MangledNameNList, NList] 
                0x0000000185fcb530 (    0x54) audit_stringGeoServices [NameNList, MangledNameNList, NList] 
                0x0000000185fcb584 (    0x5c) audit_stringSignpostMetrics [NameNList, MangledNameNList, NList] 
            0x0000000185fcb5e0 (    0x4a) __TEXT __ustring
            0x0000000185fcb62a (   0x1e7) __TEXT __dof_ws
            0x0000000185fcb814 (  0xc4f8) __TEXT __unwind_info
            0x0000000185fd7d10 (   0x150) __TEXT __eh_frame
            0x0000000185fd7e60 (  0x1bde) __TEXT __objc_classname
            0x0000000185fd9a3e (  0xacde) __TEXT __objc_methname
            0x0000000185fe471c (  0x3e76) __TEXT __objc_methtype
            0x0000000185fe85a0 (  0x9a60) __TEXT __objc_stubs
                0x0000000185fe85a0 (    0x20) objc_msgSend$GPUEndTime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe85c0 (    0x20) objc_msgSend$GPUStartTime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe85e0 (    0x20) objc_msgSend$PKG_materialLayer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8600 (    0x20) objc_msgSend$PKG_setMaterialLayer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8620 (    0x20) objc_msgSend$PKG_setUpdateLayerKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8640 (    0x20) objc_msgSend$PKG_updateLayerKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8660 (    0x20) objc_msgSend$URLByAppendingPathComponent:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8680 (    0x20) objc_msgSend$URLForResource:withExtension:subdirectory:localization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe86a0 (    0x20) objc_msgSend$URLsForDirectory:inDomains: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe86c0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe86e0 (    0x20) objc_msgSend$UUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8700 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8720 (    0x20) objc_msgSend$_beginBatch [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8740 (    0x20) objc_msgSend$_checkDisplayState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8760 (    0x20) objc_msgSend$_checkSpaceMovedToDisplay:displayUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8780 (    0x20) objc_msgSend$_effectiveDisplayID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe87a0 (    0x20) objc_msgSend$_endBatch [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe87c0 (    0x20) objc_msgSend$_fullRebuildSpaceChange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe87e0 (    0x20) objc_msgSend$_fullRebuildSpacesChanged [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8800 (    0x20) objc_msgSend$_getDisplayUUIDForSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8820 (    0x20) objc_msgSend$_layerUpdateKeyForOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8840 (    0x20) objc_msgSend$_performBatchingCallouts: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8860 (    0x20) objc_msgSend$_postActiveDisplayChange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8880 (    0x20) objc_msgSend$_rebuildChildWindowInfos [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe88a0 (    0x20) objc_msgSend$_removeSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe88c0 (    0x20) objc_msgSend$_scheduleRendererWork:mainThreadWork: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe88e0 (    0x20) objc_msgSend$_serviceAdded: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8900 (    0x20) objc_msgSend$_serviceRemoved: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8920 (    0x20) objc_msgSend$_setPresetHIDDataAtIndex:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8940 (    0x20) objc_msgSend$_space:addWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8960 (    0x20) objc_msgSend$_space:removeWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8980 (    0x20) objc_msgSend$_spaceChangedDisplay: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe89a0 (    0x20) objc_msgSend$_spaceWithID:createIfNeeded: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe89c0 (    0x20) objc_msgSend$_updateSpaceWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe89e0 (    0x20) objc_msgSend$acceleratorPort [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8a00 (    0x20) objc_msgSend$acquireFrozenSurface [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8a20 (    0x20) objc_msgSend$actionForDestroyingWindow:fences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8a40 (    0x20) objc_msgSend$actionForOrderingAllWindowsFrontWithInfo:fences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8a60 (    0x20) objc_msgSend$actionForOrderingWindowWithInfo:fences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8a80 (    0x20) objc_msgSend$actionForUpdatingWindow:updatedProperties:fences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8aa0 (    0x20) objc_msgSend$activateBackground: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ac0 (    0x20) objc_msgSend$activeDisplayModes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ae0 (    0x20) objc_msgSend$activePresetIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8b00 (    0x20) objc_msgSend$addAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8b20 (    0x20) objc_msgSend$addChildWindow:ordered: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8b40 (    0x20) objc_msgSend$addClone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8b60 (    0x20) objc_msgSend$addCompletedHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8b80 (    0x20) objc_msgSend$addConstraint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ba0 (    0x20) objc_msgSend$addDisplay: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8bc0 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8be0 (    0x20) objc_msgSend$addFace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8c00 (    0x20) objc_msgSend$addIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8c20 (    0x20) objc_msgSend$addNotificationType:to: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8c40 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8c60 (    0x20) objc_msgSend$addObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8c80 (    0x20) objc_msgSend$addPayload:ofType:to: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ca0 (    0x20) objc_msgSend$addScheduledHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8cc0 (    0x20) objc_msgSend$addSnapshots:forAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ce0 (    0x20) objc_msgSend$addSublayer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8d00 (    0x20) objc_msgSend$addToSigningContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8d20 (    0x20) objc_msgSend$addUUID:to: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8d40 (    0x20) objc_msgSend$addVertex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8d60 (    0x20) objc_msgSend$affineTransform [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8d80 (    0x20) objc_msgSend$allContexts [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8da0 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8dc0 (    0x20) objc_msgSend$allObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8de0 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8e00 (    0x20) objc_msgSend$allocWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8e20 (    0x20) objc_msgSend$allocationSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8e40 (    0x20) objc_msgSend$announceSnapshotsForAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8e60 (    0x20) objc_msgSend$anyObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8e80 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ea0 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ec0 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8ee0 (    0x20) objc_msgSend$applicationID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8f00 (    0x20) objc_msgSend$archivedDataWithRootObject:requiringSecureCoding:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8f20 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8f40 (    0x20) objc_msgSend$arrayByAddingObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8f60 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8f80 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8fa0 (    0x20) objc_msgSend$assertion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8fc0 (    0x20) objc_msgSend$attributes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe8fe0 (    0x20) objc_msgSend$attributesOfItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9000 (    0x20) objc_msgSend$attributions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9020 (    0x20) objc_msgSend$auditID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9040 (    0x20) objc_msgSend$auditSessionID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9060 (    0x20) objc_msgSend$autoreconnect [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9080 (    0x20) objc_msgSend$availableData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe90a0 (    0x20) objc_msgSend$availableModes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe90c0 (    0x20) objc_msgSend$backgroundColor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe90e0 (    0x20) objc_msgSend$basisMessage:signedByKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9100 (    0x20) objc_msgSend$batchedDelegate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9120 (    0x20) objc_msgSend$beganBatch [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9140 (    0x20) objc_msgSend$begin [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9160 (    0x20) objc_msgSend$beginExternalUpdate:usingSoftwareRenderer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9180 (    0x20) objc_msgSend$beginScope [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe91a0 (    0x20) objc_msgSend$beginSharingSessionWithTitle:suppressWindowSharingIndicator:suppressMenuBarSharingIndicatorNotifications: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe91c0 (    0x20) objc_msgSend$bitDepth [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe91e0 (    0x20) objc_msgSend$blitCommandEncoder [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9200 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9220 (    0x20) objc_msgSend$bounds [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9240 (    0x20) objc_msgSend$bridgingHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9260 (    0x20) objc_msgSend$brightnessAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9280 (    0x20) objc_msgSend$brightnessCapabilities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe92a0 (    0x20) objc_msgSend$broadcastPowerStateChangeEvent:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe92c0 (    0x20) objc_msgSend$bundlePath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe92e0 (    0x20) objc_msgSend$bundleWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9300 (    0x20) objc_msgSend$bundleWithURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9320 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9340 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9360 (    0x20) objc_msgSend$calculateAstronomicalTimeForLocation:time: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9380 (    0x20) objc_msgSend$cameraAttributions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe93a0 (    0x20) objc_msgSend$canUpdateWithFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe93c0 (    0x20) objc_msgSend$cancelAllSwaps [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe93e0 (    0x20) objc_msgSend$capabilities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9400 (    0x20) objc_msgSend$cfStringToCStringPtr: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9420 (    0x20) objc_msgSend$cgID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9440 (    0x20) objc_msgSend$cgSubType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9460 (    0x20) objc_msgSend$cgType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9480 (    0x20) objc_msgSend$chromaticities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe94a0 (    0x20) objc_msgSend$citiesWithTimeZoneName:managedObjectContext:sortDescriptors:fetchLimit:resultType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe94c0 (    0x20) objc_msgSend$clearOrderingGroup [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe94e0 (    0x20) objc_msgSend$client [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9500 (    0x20) objc_msgSend$clientContexts [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9520 (    0x20) objc_msgSend$cloneMaster [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9540 (    0x20) objc_msgSend$clones [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9560 (    0x20) objc_msgSend$close [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9580 (    0x20) objc_msgSend$closed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe95a0 (    0x20) objc_msgSend$closedWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe95c0 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe95e0 (    0x20) objc_msgSend$collection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9600 (    0x20) objc_msgSend$collectionClaimed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9620 (    0x20) objc_msgSend$colorAttachments [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9640 (    0x20) objc_msgSend$colorGamut [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9660 (    0x20) objc_msgSend$colorMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9680 (    0x20) objc_msgSend$colorSpace [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe96a0 (    0x20) objc_msgSend$commandBuffer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe96c0 (    0x20) objc_msgSend$commit [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe96e0 (    0x20) objc_msgSend$commitAndWaitUntilSubmitted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9700 (    0x20) objc_msgSend$commitBrightness: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9720 (    0x20) objc_msgSend$compilerPropagatesThreadPriority: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9740 (    0x20) objc_msgSend$compositingFilter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9760 (    0x20) objc_msgSend$configurationWithDictionaryRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9780 (    0x20) objc_msgSend$configurationWithDisplayInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe97a0 (    0x20) objc_msgSend$configured [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe97c0 (    0x20) objc_msgSend$connectUsingXPCConnection:andConfigMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe97e0 (    0x20) objc_msgSend$connected [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9800 (    0x20) objc_msgSend$connection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9820 (    0x20) objc_msgSend$connectionID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9840 (    0x20) objc_msgSend$connectionQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9860 (    0x20) objc_msgSend$connectionWithConnection:config:andErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9880 (    0x20) objc_msgSend$constraintWithAttribute:relativeTo:attribute:offset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe98a0 (    0x20) objc_msgSend$containerId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe98c0 (    0x20) objc_msgSend$containerWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe98e0 (    0x20) objc_msgSend$containsIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9900 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9920 (    0x20) objc_msgSend$containsString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9940 (    0x20) objc_msgSend$content [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9960 (    0x20) objc_msgSend$contents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9980 (    0x20) objc_msgSend$contentsScale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe99a0 (    0x20) objc_msgSend$context [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe99c0 (    0x20) objc_msgSend$contextForPayload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe99e0 (    0x20) objc_msgSend$contextId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9a00 (    0x20) objc_msgSend$contextWithCGSConnection:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9a20 (    0x20) objc_msgSend$contextWithImplementingDigester: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9a40 (    0x20) objc_msgSend$controllerWithId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9a60 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9a80 (    0x20) objc_msgSend$copyCFContainerId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9aa0 (    0x20) objc_msgSend$copyCalibrationInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ac0 (    0x20) objc_msgSend$copyDeviceForContainer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ae0 (    0x20) objc_msgSend$copyDiskForPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9b00 (    0x20) objc_msgSend$copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9b20 (    0x20) objc_msgSend$copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9b40 (    0x20) objc_msgSend$copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9b60 (    0x20) objc_msgSend$copyFromTexture:toTexture: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9b80 (    0x20) objc_msgSend$copyPresetAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ba0 (    0x20) objc_msgSend$copyPresetDataAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9bc0 (    0x20) objc_msgSend$copyRects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9be0 (    0x20) objc_msgSend$copyRegion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9c00 (    0x20) objc_msgSend$copyUserAdjustment [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9c20 (    0x20) objc_msgSend$copyUserAdjustmentData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9c40 (    0x20) objc_msgSend$cornerCurveExpansionFactor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9c60 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9c80 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ca0 (    0x20) objc_msgSend$createCancellableMachRecvSourceWithQueue:cancelAction:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9cc0 (    0x20) objc_msgSend$createCancellableMachRecvSourceWithQueue:error:cancelAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ce0 (    0x20) objc_msgSend$createNSError:withCGError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9d00 (    0x20) objc_msgSend$createNoSenderRecvPairWithQueue:errorHandler:eventHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9d20 (    0x20) objc_msgSend$createSignatureForMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9d40 (    0x20) objc_msgSend$createStreamWithFilter:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9d60 (    0x20) objc_msgSend$createStreamWithSession:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9d80 (    0x20) objc_msgSend$createXPCDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9da0 (    0x20) objc_msgSend$createXPCObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9dc0 (    0x20) objc_msgSend$createXPCSerializationAndInvalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9de0 (    0x20) objc_msgSend$createsCompositingGroup [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9e00 (    0x20) objc_msgSend$currentMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9e20 (    0x20) objc_msgSend$currentSurfaceWithOptions:needsClear:readOnly:vsyncOff: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9e40 (    0x20) objc_msgSend$currentSurfaceWithOptions:needsClear:readOnly:vsyncOff:sharedEventRef:signalValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9e60 (    0x20) objc_msgSend$cursorPosition [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9e80 (    0x20) objc_msgSend$data [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ea0 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ec0 (    0x20) objc_msgSend$dataWithBytesNoCopy:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9ee0 (    0x20) objc_msgSend$dataWithBytesNoCopy:length:freeWhenDone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9f00 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9f20 (    0x20) objc_msgSend$debugDeferArrivalSeconds [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9f40 (    0x20) objc_msgSend$decodeBoolForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9f60 (    0x20) objc_msgSend$decodeBytesForKey:returnedLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9f80 (    0x20) objc_msgSend$decodeDoubleForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9fa0 (    0x20) objc_msgSend$decodeFloatForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9fc0 (    0x20) objc_msgSend$decodeInt32ForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fe9fe0 (    0x20) objc_msgSend$decodeInt64ForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea000 (    0x20) objc_msgSend$decodeIntegerForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea020 (    0x20) objc_msgSend$decodeNotification:notifyType:uuid:payloadType:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea040 (    0x20) objc_msgSend$decodeObjectOfClass:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea060 (    0x20) objc_msgSend$decodeObjectOfClasses:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea080 (    0x20) objc_msgSend$decodePointForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea0a0 (    0x20) objc_msgSend$decodeRectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea0c0 (    0x20) objc_msgSend$decodeSizeForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea0e0 (    0x20) objc_msgSend$decodeXPCObjectOfType:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea100 (    0x20) objc_msgSend$defaultCStringEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea120 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea140 (    0x20) objc_msgSend$defaultUICatalogForBundle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea160 (    0x20) objc_msgSend$delegate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea180 (    0x20) objc_msgSend$delegateBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea1a0 (    0x20) objc_msgSend$deliverPowerStateNotification:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea1c0 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea1e0 (    0x20) objc_msgSend$descriptor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea200 (    0x20) objc_msgSend$detachingDisplay [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea220 (    0x20) objc_msgSend$detachingRect [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea240 (    0x20) objc_msgSend$device [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea260 (    0x20) objc_msgSend$deviceName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea280 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea2a0 (    0x20) objc_msgSend$dictionaryRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea2c0 (    0x20) objc_msgSend$dictionaryWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea2e0 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea300 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea320 (    0x20) objc_msgSend$didModifyData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea340 (    0x20) objc_msgSend$didModifyRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea360 (    0x20) objc_msgSend$disabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea380 (    0x20) objc_msgSend$dispatchPowerStateNotification:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea3a0 (    0x20) objc_msgSend$dispatchToClientDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea3c0 (    0x20) objc_msgSend$displayAttachmentSeed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea3e0 (    0x20) objc_msgSend$displayColorSpace [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea400 (    0x20) objc_msgSend$displayCurrentSpaces [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea420 (    0x20) objc_msgSend$displayID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea440 (    0x20) objc_msgSend$displayId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea460 (    0x20) objc_msgSend$displayLinkWithDisplay:target:selector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea480 (    0x20) objc_msgSend$displayModeWithWidth:height:refreshRate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea4a0 (    0x20) objc_msgSend$displayType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea4c0 (    0x20) objc_msgSend$displayUUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea4e0 (    0x20) objc_msgSend$displayWithDisplayId:name:deviceName:update:timings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea500 (    0x20) objc_msgSend$displayedSurface [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea520 (    0x20) objc_msgSend$displays [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea540 (    0x20) objc_msgSend$displaysHaveSeparateSpaces [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea560 (    0x20) objc_msgSend$domain [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea580 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea5a0 (    0x20) objc_msgSend$dragOffset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea5c0 (    0x20) objc_msgSend$drawPrimitives:vertexStart:vertexCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea5e0 (    0x20) objc_msgSend$eligibleDisplayModes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea600 (    0x20) objc_msgSend$enabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea620 (    0x20) objc_msgSend$encodeBool:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea640 (    0x20) objc_msgSend$encodeBytes:length:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea660 (    0x20) objc_msgSend$encodeCommand:withUUID:payloadType:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea680 (    0x20) objc_msgSend$encodeDouble:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea6a0 (    0x20) objc_msgSend$encodeFloat:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea6c0 (    0x20) objc_msgSend$encodeInt32:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea6e0 (    0x20) objc_msgSend$encodeInt64:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea700 (    0x20) objc_msgSend$encodeInteger:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea720 (    0x20) objc_msgSend$encodeObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea740 (    0x20) objc_msgSend$encodePoint:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea760 (    0x20) objc_msgSend$encodeRect:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea780 (    0x20) objc_msgSend$encodeSignalEvent:value: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea7a0 (    0x20) objc_msgSend$encodeSize:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea7c0 (    0x20) objc_msgSend$encodeToCommandBuffer:sourceTexture:destinationBuffer:destinationOffset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea7e0 (    0x20) objc_msgSend$encodeToCommandBuffer:sourceTexture:destinationTexture: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea800 (    0x20) objc_msgSend$encodeWaitForEvent:value: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea820 (    0x20) objc_msgSend$encodeXPCObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea840 (    0x20) objc_msgSend$endEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea860 (    0x20) objc_msgSend$endScope [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea880 (    0x20) objc_msgSend$enqueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea8a0 (    0x20) objc_msgSend$entryWithXPCObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea8c0 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea8e0 (    0x20) objc_msgSend$enumerateObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea900 (    0x20) objc_msgSend$enumeratorAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea920 (    0x20) objc_msgSend$eotf [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea940 (    0x20) objc_msgSend$equalCurrentSeed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea960 (    0x20) objc_msgSend$error [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea980 (    0x20) objc_msgSend$errorHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea9a0 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea9c0 (    0x20) objc_msgSend$eventType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fea9e0 (    0x20) objc_msgSend$excludedApplications [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaa00 (    0x20) objc_msgSend$excludedPIDS [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaa20 (    0x20) objc_msgSend$excludedWindows [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaa40 (    0x20) objc_msgSend$externalDisplayAttributes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaa60 (    0x20) objc_msgSend$factoryDefaultPresetIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaa80 (    0x20) objc_msgSend$factoryResetWithType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaaa0 (    0x20) objc_msgSend$familyName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaac0 (    0x20) objc_msgSend$featureProfile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaae0 (    0x20) objc_msgSend$fileHandleForReadingAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feab00 (    0x20) objc_msgSend$fileHandleForReadingFromURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feab20 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feab40 (    0x20) objc_msgSend$fileURLWithPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feab60 (    0x20) objc_msgSend$filter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feab80 (    0x20) objc_msgSend$filterPolicy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaba0 (    0x20) objc_msgSend$filterType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feabc0 (    0x20) objc_msgSend$filterWithType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feabe0 (    0x20) objc_msgSend$finalizedData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feac00 (    0x20) objc_msgSend$finishExternalUpdate:withFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feac20 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feac40 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feac60 (    0x20) objc_msgSend$foregroundAppPID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feac80 (    0x20) objc_msgSend$fragmentFunction [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaca0 (    0x20) objc_msgSend$frame [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feacc0 (    0x20) objc_msgSend$frameInfoCallbackVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feace0 (    0x20) objc_msgSend$framebufferFormat [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fead00 (    0x20) objc_msgSend$freeze [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fead20 (    0x20) objc_msgSend$gamma [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fead40 (    0x20) objc_msgSend$generateMipmapsForTexture: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fead60 (    0x20) objc_msgSend$getBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fead80 (    0x20) objc_msgSend$getBytes:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feada0 (    0x20) objc_msgSend$getCString:maxLength:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feadc0 (    0x20) objc_msgSend$getConnectionQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feade0 (    0x20) objc_msgSend$getFloat:withKey:fromReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feae00 (    0x20) objc_msgSend$getOSVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feae20 (    0x20) objc_msgSend$getSystemOverrideForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feae40 (    0x20) objc_msgSend$getUUIDBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feae60 (    0x20) objc_msgSend$getUUIDBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feae80 (    0x20) objc_msgSend$getUserAdjustmentPowerLimit [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaea0 (    0x20) objc_msgSend$getValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaec0 (    0x20) objc_msgSend$getValue:size: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaee0 (    0x20) objc_msgSend$handleConnectionInterrupt [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaf00 (    0x20) objc_msgSend$handleMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaf20 (    0x20) objc_msgSend$handleServerMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaf40 (    0x20) objc_msgSend$handleXPCEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaf60 (    0x20) objc_msgSend$handler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feaf80 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feafa0 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feafc0 (    0x20) objc_msgSend$hashTableWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feafe0 (    0x20) objc_msgSend$hdrMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb000 (    0x20) objc_msgSend$heartbeatRate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb020 (    0x20) objc_msgSend$height [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb040 (    0x20) objc_msgSend$hidType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb060 (    0x20) objc_msgSend$hideMenuBar [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb080 (    0x20) objc_msgSend$hide_menu_bar [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb0a0 (    0x20) objc_msgSend$horizontalIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb0c0 (    0x20) objc_msgSend$idleDisplays: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb0e0 (    0x20) objc_msgSend$includedApplications [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb100 (    0x20) objc_msgSend$includedPIDS [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb120 (    0x20) objc_msgSend$includedWindows [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb140 (    0x20) objc_msgSend$incrementSeed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb160 (    0x20) objc_msgSend$index [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb180 (    0x20) objc_msgSend$indexesOfObjectsPassingTest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb1a0 (    0x20) objc_msgSend$infoOptions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb1c0 (    0x20) objc_msgSend$infoWithWindow:positioned:relativeTo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb1e0 (    0x20) objc_msgSend$init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb200 (    0x20) objc_msgSend$initBrightnessControlClient:notifyQueue:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb220 (    0x20) objc_msgSend$initConnectionWithName:notificationQueue:withAutoreconnect:errorHandler:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb240 (    0x20) objc_msgSend$initFileURLWithPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb260 (    0x20) objc_msgSend$initFromDictionaryRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb280 (    0x20) objc_msgSend$initGUIClient:error:notifyQueue:notificationType:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb2a0 (    0x20) objc_msgSend$initInternal:display: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb2c0 (    0x20) objc_msgSend$initPrivate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb2e0 (    0x20) objc_msgSend$initWith: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb300 (    0x20) objc_msgSend$initWithAction:connection:error:andSnapshot: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb320 (    0x20) objc_msgSend$initWithAffineTransform:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb340 (    0x20) objc_msgSend$initWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb360 (    0x20) objc_msgSend$initWithArray:copyItems: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb380 (    0x20) objc_msgSend$initWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb3a0 (    0x20) objc_msgSend$initWithBoolValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb3c0 (    0x20) objc_msgSend$initWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb3e0 (    0x20) objc_msgSend$initWithCGXConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb400 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb420 (    0x20) objc_msgSend$initWithConnection:collection:action: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb440 (    0x20) objc_msgSend$initWithConnection:config:andErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb460 (    0x20) objc_msgSend$initWithConnection:errorHandler:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb480 (    0x20) objc_msgSend$initWithContainerID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb4a0 (    0x20) objc_msgSend$initWithContentsOfURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb4c0 (    0x20) objc_msgSend$initWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb4e0 (    0x20) objc_msgSend$initWithDevice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb500 (    0x20) objc_msgSend$initWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb520 (    0x20) objc_msgSend$initWithDisplay:shareAll:includedWindows:includedApplications:includedPIDS:excludedWindows:excludedApplications:excludedPIDS: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb540 (    0x20) objc_msgSend$initWithDisplayID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb560 (    0x20) objc_msgSend$initWithDisplayId:capabilities:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb580 (    0x20) objc_msgSend$initWithDisplayIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb5a0 (    0x20) objc_msgSend$initWithDisplayIdentifier:isAnimating: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb5c0 (    0x20) objc_msgSend$initWithDisplayIdentifier:role:windowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb5e0 (    0x20) objc_msgSend$initWithDisplayIdentifier:spaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb600 (    0x20) objc_msgSend$initWithDisplayIdentifier:windowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb620 (    0x20) objc_msgSend$initWithDisplayIdentifiers:role: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb640 (    0x20) objc_msgSend$initWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb660 (    0x20) objc_msgSend$initWithDrivingSpaceID:verticalIndex:horizontalIndex:point:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb680 (    0x20) objc_msgSend$initWithDrivingSpaceID:verticalIndex:horizontalIndex:point:options:fencePort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb6a0 (    0x20) objc_msgSend$initWithEventRecord: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb6c0 (    0x20) objc_msgSend$initWithEventRecord:capabilities:pid:version: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb6e0 (    0x20) objc_msgSend$initWithFilter:properties:queue:handler:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb700 (    0x20) objc_msgSend$initWithFloatValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb720 (    0x20) objc_msgSend$initWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb740 (    0x20) objc_msgSend$initWithHIDType:cgType:cgSubType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb760 (    0x20) objc_msgSend$initWithInt32Value: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb780 (    0x20) objc_msgSend$initWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb7a0 (    0x20) objc_msgSend$initWithKeyOptions:valueOptions:capacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb7c0 (    0x20) objc_msgSend$initWithLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb7e0 (    0x20) objc_msgSend$initWithManager: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb800 (    0x20) objc_msgSend$initWithMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb820 (    0x20) objc_msgSend$initWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb840 (    0x20) objc_msgSend$initWithName:andUpdateBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb860 (    0x20) objc_msgSend$initWithName:vendorID:productID:serialNumber:sizeInMillimeters:maximumSizeInPixels:chromaticities:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb880 (    0x20) objc_msgSend$initWithNativeMode:preferredMode:optionalModes:rotations:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb8a0 (    0x20) objc_msgSend$initWithNumbers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb8c0 (    0x20) objc_msgSend$initWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb8e0 (    0x20) objc_msgSend$initWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb900 (    0x20) objc_msgSend$initWithOptions:values: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb920 (    0x20) objc_msgSend$initWithOptions:windows: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb940 (    0x20) objc_msgSend$initWithOwner:spaceOptions:options:setTags:clearedTags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb960 (    0x20) objc_msgSend$initWithOwner:spaces:options:setTags:clearedTags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb980 (    0x20) objc_msgSend$initWithPID:version: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb9a0 (    0x20) objc_msgSend$initWithPoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb9c0 (    0x20) objc_msgSend$initWithPort:auditSessionID:cgSessionID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feb9e0 (    0x20) objc_msgSend$initWithProcess: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feba00 (    0x20) objc_msgSend$initWithProcess:spaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feba20 (    0x20) objc_msgSend$initWithPropertyListArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feba40 (    0x20) objc_msgSend$initWithPropertyListDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feba60 (    0x20) objc_msgSend$initWithRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feba80 (    0x20) objc_msgSend$initWithRegion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febaa0 (    0x20) objc_msgSend$initWithRendererName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febac0 (    0x20) objc_msgSend$initWithService: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febae0 (    0x20) objc_msgSend$initWithSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febb00 (    0x20) objc_msgSend$initWithSizeInPixels:sizeInPoints:refreshRate:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febb20 (    0x20) objc_msgSend$initWithSpaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febb40 (    0x20) objc_msgSend$initWithSpaceID:alpha: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febb60 (    0x20) objc_msgSend$initWithSpaceID:compat_id: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febb80 (    0x20) objc_msgSend$initWithSpaceID:direction:windowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febba0 (    0x20) objc_msgSend$initWithSpaceID:displayIdentifier:index: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febbc0 (    0x20) objc_msgSend$initWithSpaceID:edgeMask:left:right:top:bottom: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febbe0 (    0x20) objc_msgSend$initWithSpaceID:keys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febc00 (    0x20) objc_msgSend$initWithSpaceID:level: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febc20 (    0x20) objc_msgSend$initWithSpaceID:minSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febc40 (    0x20) objc_msgSend$initWithSpaceID:name: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febc60 (    0x20) objc_msgSend$initWithSpaceID:owner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febc80 (    0x20) objc_msgSend$initWithSpaceID:owners: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febca0 (    0x20) objc_msgSend$initWithSpaceID:point: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febcc0 (    0x20) objc_msgSend$initWithSpaceID:psn: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febce0 (    0x20) objc_msgSend$initWithSpaceID:rect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febd00 (    0x20) objc_msgSend$initWithSpaceID:shape: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febd20 (    0x20) objc_msgSend$initWithSpaceID:spacing: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febd40 (    0x20) objc_msgSend$initWithSpaceID:transform:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febd60 (    0x20) objc_msgSend$initWithSpaceID:values: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febd80 (    0x20) objc_msgSend$initWithSpaceID:verticalIndex:horizontalIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febda0 (    0x20) objc_msgSend$initWithSpaceID:weight: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febdc0 (    0x20) objc_msgSend$initWithSpaceID:windows:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febde0 (    0x20) objc_msgSend$initWithSpaceManagementMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febe00 (    0x20) objc_msgSend$initWithSpaceResizeDirections: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febe20 (    0x20) objc_msgSend$initWithSpaces: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febe40 (    0x20) objc_msgSend$initWithStatus:displayTime:frameSurface:updateRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febe60 (    0x20) objc_msgSend$initWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febe80 (    0x20) objc_msgSend$initWithStrings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febea0 (    0x20) objc_msgSend$initWithTheme:useAX: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febec0 (    0x20) objc_msgSend$initWithTileID:parentID:index: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febee0 (    0x20) objc_msgSend$initWithTileSpaceID:size: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febf00 (    0x20) objc_msgSend$initWithTileSpaceID:size:fencePort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febf20 (    0x20) objc_msgSend$initWithTimestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febf40 (    0x20) objc_msgSend$initWithTimestamp:originIdentifier:context:capabilities:eventType:targetProcess:proxyTargetProcess:signature: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febf60 (    0x20) objc_msgSend$initWithTitle:suppressWindowSharingIndicator:suppressMenuBarSharingIndicatorNotifications: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febf80 (    0x20) objc_msgSend$initWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febfa0 (    0x20) objc_msgSend$initWithUUID:title:type: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febfc0 (    0x20) objc_msgSend$initWithUUIDBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185febfe0 (    0x20) objc_msgSend$initWithUUIDString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec000 (    0x20) objc_msgSend$initWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec020 (    0x20) objc_msgSend$initWithValidity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec040 (    0x20) objc_msgSend$initWithVerticalIndex:horizontalIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec060 (    0x20) objc_msgSend$initWithVerticalIndex:horizontalIndex:rect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec080 (    0x20) objc_msgSend$initWithWindow:positionedAboutParent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec0a0 (    0x20) objc_msgSend$initWithWindowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec0c0 (    0x20) objc_msgSend$initWithWindowIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec0e0 (    0x20) objc_msgSend$initWithWindows: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec100 (    0x20) objc_msgSend$initWithWindows:spaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec120 (    0x20) objc_msgSend$initWithWindows:spaces: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec140 (    0x20) objc_msgSend$initWithWorkspaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec160 (    0x20) objc_msgSend$initWithWorkspaceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec180 (    0x20) objc_msgSend$initWithXPCObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec1a0 (    0x20) objc_msgSend$initWithXPCSerialization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec1c0 (    0x20) objc_msgSend$initWithZoneWidth:zoneHeight:zoneRows:zoneColumns:samplingInterval:queue:andUpdateBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec1e0 (    0x20) objc_msgSend$insertSublayer:above: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec200 (    0x20) objc_msgSend$insertSublayer:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec220 (    0x20) objc_msgSend$insertSublayer:below: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec240 (    0x20) objc_msgSend$instance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec260 (    0x20) objc_msgSend$instancesRespondToSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec280 (    0x20) objc_msgSend$int32Value [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec2a0 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec2c0 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec2e0 (    0x20) objc_msgSend$internalRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec300 (    0x20) objc_msgSend$invalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec320 (    0x20) objc_msgSend$invalidateAll [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec340 (    0x20) objc_msgSend$invalidateBackreference [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec360 (    0x20) objc_msgSend$invalidateUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec380 (    0x20) objc_msgSend$invalidateUserAdjustment [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec3a0 (    0x20) objc_msgSend$iosurface [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec3c0 (    0x20) objc_msgSend$iosurfaceReadOnlyTextureAlignmentBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec3e0 (    0x20) objc_msgSend$iosurfaceTextureAlignmentBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec400 (    0x20) objc_msgSend$isAPFSVolumeDisk:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec420 (    0x20) objc_msgSend$isCapturing [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec440 (    0x20) objc_msgSend$isComplete [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec460 (    0x20) objc_msgSend$isCurrentSpace [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec480 (    0x20) objc_msgSend$isDayLight [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec4a0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec4c0 (    0x20) objc_msgSend$isEqualTo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec4e0 (    0x20) objc_msgSend$isEqualToData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec500 (    0x20) objc_msgSend$isEqualToDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec520 (    0x20) objc_msgSend$isEqualToMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec540 (    0x20) objc_msgSend$isEqualToSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec560 (    0x20) objc_msgSend$isEqualToSharingSession: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec580 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec5a0 (    0x20) objc_msgSend$isEqualToWindowFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec5c0 (    0x20) objc_msgSend$isHeadless [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec5e0 (    0x20) objc_msgSend$isHidden [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec600 (    0x20) objc_msgSend$isLowPower [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec620 (    0x20) objc_msgSend$isOpaque [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec640 (    0x20) objc_msgSend$isOverscanned [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec660 (    0x20) objc_msgSend$isPresetValidAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec680 (    0x20) objc_msgSend$isPresetWritableAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec6a0 (    0x20) objc_msgSend$isRemovable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec6c0 (    0x20) objc_msgSend$isRunning [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec6e0 (    0x20) objc_msgSend$isTypeOfClass:aClass:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec700 (    0x20) objc_msgSend$isUserAdjustmentSupported [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec720 (    0x20) objc_msgSend$isUserAdjustmentValid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec740 (    0x20) objc_msgSend$isVRR [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec760 (    0x20) objc_msgSend$isValid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec780 (    0x20) objc_msgSend$isVirtual [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec7a0 (    0x20) objc_msgSend$isiOSAppOnMac [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec7c0 (    0x20) objc_msgSend$key [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec7e0 (    0x20) objc_msgSend$keyWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec800 (    0x20) objc_msgSend$keysSortedByValueUsingSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec820 (    0x20) objc_msgSend$lastObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec840 (    0x20) objc_msgSend$lastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec860 (    0x20) objc_msgSend$lastPowerStateNotification [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec880 (    0x20) objc_msgSend$latitude [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec8a0 (    0x20) objc_msgSend$layer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec8c0 (    0x20) objc_msgSend$layoutManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec8e0 (    0x20) objc_msgSend$layoutSublayers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec900 (    0x20) objc_msgSend$layouts [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec920 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec940 (    0x20) objc_msgSend$libraryCacheStats [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec960 (    0x20) objc_msgSend$linearTextureAlignmentBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec980 (    0x20) objc_msgSend$localContextWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec9a0 (    0x20) objc_msgSend$localizations [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec9c0 (    0x20) objc_msgSend$localizedDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fec9e0 (    0x20) objc_msgSend$localizedStringForKey:value:table: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feca00 (    0x20) objc_msgSend$localizedStringForKey:value:table:localization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feca20 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feca40 (    0x20) objc_msgSend$longLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feca60 (    0x20) objc_msgSend$longitude [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feca80 (    0x20) objc_msgSend$luminanceCorrectionFactorForWhitepoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecaa0 (    0x20) objc_msgSend$mainBundle [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecac0 (    0x20) objc_msgSend$mainThreadWork [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecae0 (    0x20) objc_msgSend$makeLayerWithColorResolver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecb00 (    0x20) objc_msgSend$makeNSErrorForCGError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecb20 (    0x20) objc_msgSend$makeNSErrorForCocoaError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecb40 (    0x20) objc_msgSend$makeNSErrorForMachError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecb60 (    0x20) objc_msgSend$makeNSErrorForOSStatus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecb80 (    0x20) objc_msgSend$makeNSErrorForPOSIXError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecba0 (    0x20) objc_msgSend$makeResultWithAffineTransform:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecbc0 (    0x20) objc_msgSend$makeResultWithBoolValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecbe0 (    0x20) objc_msgSend$makeResultWithFloatValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecc00 (    0x20) objc_msgSend$makeResultWithInt32Value: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecc20 (    0x20) objc_msgSend$makeResultWithNumbers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecc40 (    0x20) objc_msgSend$makeResultWithPropertyListArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecc60 (    0x20) objc_msgSend$makeResultWithPropertyListDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecc80 (    0x20) objc_msgSend$makeResultWithRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecca0 (    0x20) objc_msgSend$makeResultWithRegion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feccc0 (    0x20) objc_msgSend$makeResultWithSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecce0 (    0x20) objc_msgSend$makeResultWithSpaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecd00 (    0x20) objc_msgSend$makeResultWithSpaceManagementMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecd20 (    0x20) objc_msgSend$makeResultWithSpaceResizeDirections: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecd40 (    0x20) objc_msgSend$makeResultWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecd60 (    0x20) objc_msgSend$makeResultWithStrings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecd80 (    0x20) objc_msgSend$makeResultWithVerticalIndex:horizontalIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecda0 (    0x20) objc_msgSend$makeResultWithVerticalIndex:horizontalIndex:rect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecdc0 (    0x20) objc_msgSend$makeResultWithWindowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecde0 (    0x20) objc_msgSend$makeResultWithWorkspaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fece00 (    0x20) objc_msgSend$makeResultWithWorkspaceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fece20 (    0x20) objc_msgSend$manager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fece40 (    0x20) objc_msgSend$manufacturerID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fece60 (    0x20) objc_msgSend$mask [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fece80 (    0x20) objc_msgSend$maxBufferLength [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecea0 (    0x20) objc_msgSend$maxColorAttachments [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecec0 (    0x20) objc_msgSend$maxFragmentBuffers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecee0 (    0x20) objc_msgSend$maxFragmentInlineDataSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecf00 (    0x20) objc_msgSend$maxFragmentSamplers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecf20 (    0x20) objc_msgSend$maxFragmentTextures [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecf40 (    0x20) objc_msgSend$maxTextureDepth3D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecf60 (    0x20) objc_msgSend$maxTextureHeight2D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecf80 (    0x20) objc_msgSend$maxTextureHeight3D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecfa0 (    0x20) objc_msgSend$maxTextureLayers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecfc0 (    0x20) objc_msgSend$maxTextureWidth1D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fecfe0 (    0x20) objc_msgSend$maxTextureWidth2D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed000 (    0x20) objc_msgSend$maxTextureWidth3D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed020 (    0x20) objc_msgSend$maxVertexAttributes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed040 (    0x20) objc_msgSend$maxVertexBuffers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed060 (    0x20) objc_msgSend$maxVertexInlineDataSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed080 (    0x20) objc_msgSend$maxVertexSamplers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed0a0 (    0x20) objc_msgSend$maxVertexTextures [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed0c0 (    0x20) objc_msgSend$maximumCursorSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed0e0 (    0x20) objc_msgSend$maximumFrameTime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed100 (    0x20) objc_msgSend$maximumLuminance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed120 (    0x20) objc_msgSend$maximumScale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed140 (    0x20) objc_msgSend$maximumSizeInPixels [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed160 (    0x20) objc_msgSend$maximumSourceRectPixels [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed180 (    0x20) objc_msgSend$maximumSourceRectWidth [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed1a0 (    0x20) objc_msgSend$mergeInNewSnapshots: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed1c0 (    0x20) objc_msgSend$meshTransform [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed1e0 (    0x20) objc_msgSend$metaData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed200 (    0x20) objc_msgSend$microphoneRecordingAttributions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed220 (    0x20) objc_msgSend$minBufferNoCopyAlignmentBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed240 (    0x20) objc_msgSend$minConstantBufferAlignmentBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed260 (    0x20) objc_msgSend$minimumFrameTime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed280 (    0x20) objc_msgSend$minimumScale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed2a0 (    0x20) objc_msgSend$minimumSourceRectSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed2c0 (    0x20) objc_msgSend$mipmapLevelCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed2e0 (    0x20) objc_msgSend$modeWithBackendMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed300 (    0x20) objc_msgSend$modeWithDictionaryRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed320 (    0x20) objc_msgSend$monitorWithConfiguration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed340 (    0x20) objc_msgSend$mouseLocation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed360 (    0x20) objc_msgSend$mutableBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed380 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed3a0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed3c0 (    0x20) objc_msgSend$namedVectorGlyphWithName:scaleFactor:deviceIdiom:layoutDirection:glyphSize:glyphWeight:glyphPointSize:appearanceName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed3e0 (    0x20) objc_msgSend$nativeMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed400 (    0x20) objc_msgSend$nativeSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed420 (    0x20) objc_msgSend$needsUpdate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed440 (    0x20) objc_msgSend$nestedCalloutCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed460 (    0x20) objc_msgSend$newBufferWithBytes:length:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed480 (    0x20) objc_msgSend$newBufferWithBytesNoCopy:length:options:deallocator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed4a0 (    0x20) objc_msgSend$newBufferWithIOSurface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed4c0 (    0x20) objc_msgSend$newBufferWithLength:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed4e0 (    0x20) objc_msgSend$newCaptureScopeWithCommandQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed500 (    0x20) objc_msgSend$newCommandQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed520 (    0x20) objc_msgSend$newDepthStencilStateWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed540 (    0x20) objc_msgSend$newFunctionWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed560 (    0x20) objc_msgSend$newFunctionWithName:constantValues:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed580 (    0x20) objc_msgSend$newLibraryWithSource:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed5a0 (    0x20) objc_msgSend$newLibraryWithURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed5c0 (    0x20) objc_msgSend$newRemoteTextureViewForDevice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed5e0 (    0x20) objc_msgSend$newRenderPipelineStateWithDescriptor:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed600 (    0x20) objc_msgSend$newSamplerStateWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed620 (    0x20) objc_msgSend$newSharedEvent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed640 (    0x20) objc_msgSend$newSharedEventWithMachPort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed660 (    0x20) objc_msgSend$newTextureWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed680 (    0x20) objc_msgSend$newTextureWithDescriptor:iosurface:plane: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed6a0 (    0x20) objc_msgSend$newTextureWithSurface:buffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed6c0 (    0x20) objc_msgSend$newTiledTextureWithDescriptor:offset:bytesPerRow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed6e0 (    0x20) objc_msgSend$newestSnapshotIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed700 (    0x20) objc_msgSend$newestSnapshotTimestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed720 (    0x20) objc_msgSend$nextWakeupTime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed740 (    0x20) objc_msgSend$notificationDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed760 (    0x20) objc_msgSend$notificationQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed780 (    0x20) objc_msgSend$notifyQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed7a0 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed7c0 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed7e0 (    0x20) objc_msgSend$numberWithFloat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed800 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed820 (    0x20) objc_msgSend$numberWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed840 (    0x20) objc_msgSend$numberWithLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed860 (    0x20) objc_msgSend$numberWithLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed880 (    0x20) objc_msgSend$numberWithUnsignedChar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed8a0 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed8c0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed8e0 (    0x20) objc_msgSend$numberWithUnsignedLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed900 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed920 (    0x20) objc_msgSend$numberWithUnsignedShort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed940 (    0x20) objc_msgSend$numbers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed960 (    0x20) objc_msgSend$object [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed980 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed9a0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed9c0 (    0x20) objc_msgSend$objectEnumerator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fed9e0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feda00 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feda20 (    0x20) objc_msgSend$objectsAtIndexes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feda40 (    0x20) objc_msgSend$observeDataWithBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feda60 (    0x20) objc_msgSend$oldestSnapshotIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feda80 (    0x20) objc_msgSend$oldestSnapshotTimestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedaa0 (    0x20) objc_msgSend$optionalModes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedac0 (    0x20) objc_msgSend$options [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedae0 (    0x20) objc_msgSend$orderWindow:relativeToID:relativeTo:orderGroup: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedb00 (    0x20) objc_msgSend$originIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedb20 (    0x20) objc_msgSend$panelPhysicalSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedb40 (    0x20) objc_msgSend$pathForResource:ofType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedb60 (    0x20) objc_msgSend$pathWithComponents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedb80 (    0x20) objc_msgSend$payloadTypeToCFType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedba0 (    0x20) objc_msgSend$peerGroupID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedbc0 (    0x20) objc_msgSend$performAsynchronousBridgedWindowManagementOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedbe0 (    0x20) objc_msgSend$performSynchronousBridgedWindowManagementOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedc00 (    0x20) objc_msgSend$performWindowManagementBridgeTransactionUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedc20 (    0x20) objc_msgSend$performWindowTransaction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedc40 (    0x20) objc_msgSend$pid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedc60 (    0x20) objc_msgSend$pipelineCacheStats [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedc80 (    0x20) objc_msgSend$pixelFormat [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedca0 (    0x20) objc_msgSend$populateDisplayStreamProperties:with: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedcc0 (    0x20) objc_msgSend$port [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedce0 (    0x20) objc_msgSend$position [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedd00 (    0x20) objc_msgSend$postNotification: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedd20 (    0x20) objc_msgSend$postNotification:payload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedd40 (    0x20) objc_msgSend$postNotificationName:object:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedd60 (    0x20) objc_msgSend$predicateMatchingSuspendableProcesses [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedd80 (    0x20) objc_msgSend$preferredMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedda0 (    0x20) objc_msgSend$presentSurface:withOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feddc0 (    0x20) objc_msgSend$presetCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedde0 (    0x20) objc_msgSend$presetDeviceWithService: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fede00 (    0x20) objc_msgSend$presetUUIDAtIndex:toBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fede20 (    0x20) objc_msgSend$previousVBL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fede40 (    0x20) objc_msgSend$processInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fede60 (    0x20) objc_msgSend$processes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fede80 (    0x20) objc_msgSend$processesArray [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedea0 (    0x20) objc_msgSend$productID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedec0 (    0x20) objc_msgSend$productName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedee0 (    0x20) objc_msgSend$properties [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedf00 (    0x20) objc_msgSend$propertyListArray [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedf20 (    0x20) objc_msgSend$propertyListDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedf40 (    0x20) objc_msgSend$propertyListWithData:options:format:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedf60 (    0x20) objc_msgSend$protectionLevel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedf80 (    0x20) objc_msgSend$protectionOptions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedfa0 (    0x20) objc_msgSend$proxyTargetProcess [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedfc0 (    0x20) objc_msgSend$queue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fedfe0 (    0x20) objc_msgSend$rangeOfString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee000 (    0x20) objc_msgSend$receiveMessages: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee020 (    0x20) objc_msgSend$recommendedMaxWorkingSetSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee040 (    0x20) objc_msgSend$rect [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee060 (    0x20) objc_msgSend$reference [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee080 (    0x20) objc_msgSend$refreshDeadline [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee0a0 (    0x20) objc_msgSend$refreshRate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee0c0 (    0x20) objc_msgSend$registerClient:port:notifyQueue:notificationType:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee0e0 (    0x20) objc_msgSend$registerDaemonClient:withAutoreconnect:error:notifyQueue:notificationType:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee100 (    0x20) objc_msgSend$registerGUIClient:connectionPort:error:notifyQueue:notificationType:notificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee120 (    0x20) objc_msgSend$registerNotification [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee140 (    0x20) objc_msgSend$registerPowerStateNotification:registrationID:sendInitialState:queue:refcon:notificationOption:notificationBlock:notificationPayloadBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee160 (    0x20) objc_msgSend$registeredNotifiers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee180 (    0x20) objc_msgSend$registryID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee1a0 (    0x20) objc_msgSend$reinitConnection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee1c0 (    0x20) objc_msgSend$remoteContext [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee1e0 (    0x20) objc_msgSend$removeAllClones [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee200 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee220 (    0x20) objc_msgSend$removeChildWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee240 (    0x20) objc_msgSend$removeClone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee260 (    0x20) objc_msgSend$removeDisplay: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee280 (    0x20) objc_msgSend$removeFromParent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee2a0 (    0x20) objc_msgSend$removeFromSuperlayer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee2c0 (    0x20) objc_msgSend$removeIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee2e0 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee300 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee320 (    0x20) objc_msgSend$renderCommandEncoderWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee340 (    0x20) objc_msgSend$renderContext [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee360 (    0x20) objc_msgSend$renderInContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee380 (    0x20) objc_msgSend$renderPassDescriptor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee3a0 (    0x20) objc_msgSend$renderer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee3c0 (    0x20) objc_msgSend$rendererForTheme:useAX: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee3e0 (    0x20) objc_msgSend$rendererName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee400 (    0x20) objc_msgSend$rendererWork [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee420 (    0x20) objc_msgSend$replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee440 (    0x20) objc_msgSend$replaceRegion:mipmapLevel:withBytes:bytesPerRow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee460 (    0x20) objc_msgSend$reportFullScreenStatusWithFilter:andHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee480 (    0x20) objc_msgSend$reportIntervals [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee4a0 (    0x20) objc_msgSend$requestAbortRamp:command:display:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee4c0 (    0x20) objc_msgSend$requestBrightnessPolicy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee4e0 (    0x20) objc_msgSend$requestBrightnessTimeouts:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee500 (    0x20) objc_msgSend$requestBulkBrightnessChange:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee520 (    0x20) objc_msgSend$requestDisplaysIdle:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee540 (    0x20) objc_msgSend$requestGetValue:command:display:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee560 (    0x20) objc_msgSend$requestSetContrastEnhancer:duration:display:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee580 (    0x20) objc_msgSend$requestSetWhitePoint:duration:display:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee5a0 (    0x20) objc_msgSend$resetPresetAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee5c0 (    0x20) objc_msgSend$rotations [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee5e0 (    0x20) objc_msgSend$running [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee600 (    0x20) objc_msgSend$runningInServer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee620 (    0x20) objc_msgSend$sampleIntervals [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee640 (    0x20) objc_msgSend$semaphore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee660 (    0x20) objc_msgSend$semaphoreSignal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee680 (    0x20) objc_msgSend$semaphoreWait: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee6a0 (    0x20) objc_msgSend$sendNSError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee6c0 (    0x20) objc_msgSend$sendRequest:command:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee6e0 (    0x20) objc_msgSend$sendStateChangeRequest:uuid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee700 (    0x20) objc_msgSend$sendSynchronousRequest:command:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee720 (    0x20) objc_msgSend$sendXPCConnectionClosed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee740 (    0x20) objc_msgSend$sendXPCDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee760 (    0x20) objc_msgSend$sendXPCDictionarySync: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee780 (    0x20) objc_msgSend$serialNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee7a0 (    0x20) objc_msgSend$serverWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee7c0 (    0x20) objc_msgSend$service [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee7e0 (    0x20) objc_msgSend$serviceObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee800 (    0x20) objc_msgSend$session [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee820 (    0x20) objc_msgSend$sessionID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee840 (    0x20) objc_msgSend$sessionOwnerForNewSessionWithAuditSessionID:launchData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee860 (    0x20) objc_msgSend$sessionOwnerWithPort:auditSessionID:cgSessionID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee880 (    0x20) objc_msgSend$sessionOwnerWithXPCSerialization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee8a0 (    0x20) objc_msgSend$sessionSnapshotIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee8c0 (    0x20) objc_msgSend$sessionSnapshotTimestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee8e0 (    0x20) objc_msgSend$sessions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee900 (    0x20) objc_msgSend$sessionsArray [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee920 (    0x20) objc_msgSend$set [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee940 (    0x20) objc_msgSend$setAccessibilityColorMatrix:scale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee960 (    0x20) objc_msgSend$setActivePresetIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee980 (    0x20) objc_msgSend$setAffineTransform: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee9a0 (    0x20) objc_msgSend$setAlignmentMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee9c0 (    0x20) objc_msgSend$setAllowsEdgeAntialiasing: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fee9e0 (    0x20) objc_msgSend$setAllowsGroupBlending: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feea00 (    0x20) objc_msgSend$setAllowsGroupOpacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feea20 (    0x20) objc_msgSend$setAllowsSubstituteColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feea40 (    0x20) objc_msgSend$setAmbient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feea60 (    0x20) objc_msgSend$setAnchorPoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feea80 (    0x20) objc_msgSend$setArrayLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeaa0 (    0x20) objc_msgSend$setAttributes:ofItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeac0 (    0x20) objc_msgSend$setAuditSessionID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeae0 (    0x20) objc_msgSend$setAutoreconnect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeb00 (    0x20) objc_msgSend$setAutoresizingMask: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeb20 (    0x20) objc_msgSend$setBackgroundColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeb40 (    0x20) objc_msgSend$setBeganBatch: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeb60 (    0x20) objc_msgSend$setBlendColorRed:green:blue:alpha: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeb80 (    0x20) objc_msgSend$setBlendColorSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeba0 (    0x20) objc_msgSend$setBlendingEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feebc0 (    0x20) objc_msgSend$setBorderColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feebe0 (    0x20) objc_msgSend$setBorderPathIsBounds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feec00 (    0x20) objc_msgSend$setBorderWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feec20 (    0x20) objc_msgSend$setBounds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feec40 (    0x20) objc_msgSend$setBrightnessAvailable: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feec60 (    0x20) objc_msgSend$setBrightnessCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feec80 (    0x20) objc_msgSend$setBrightnessCapabilities: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeca0 (    0x20) objc_msgSend$setCGWindowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feecc0 (    0x20) objc_msgSend$setCaptureObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feece0 (    0x20) objc_msgSend$setChildWindowInfos: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feed00 (    0x20) objc_msgSend$setClearColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feed20 (    0x20) objc_msgSend$setClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feed40 (    0x20) objc_msgSend$setClipRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feed60 (    0x20) objc_msgSend$setClosed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feed80 (    0x20) objc_msgSend$setCollection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeda0 (    0x20) objc_msgSend$setCollectionClaimed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feedc0 (    0x20) objc_msgSend$setColorMatrix:scale:rampDuration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feede0 (    0x20) objc_msgSend$setColorSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feee00 (    0x20) objc_msgSend$setCompletionQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feee20 (    0x20) objc_msgSend$setCompositingFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feee40 (    0x20) objc_msgSend$setConfigured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feee60 (    0x20) objc_msgSend$setConnected: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feee80 (    0x20) objc_msgSend$setConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeea0 (    0x20) objc_msgSend$setConstantValue:type:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeec0 (    0x20) objc_msgSend$setContainerId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feeee0 (    0x20) objc_msgSend$setContent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feef00 (    0x20) objc_msgSend$setContents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feef20 (    0x20) objc_msgSend$setContentsChanged [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feef40 (    0x20) objc_msgSend$setContentsGravity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feef60 (    0x20) objc_msgSend$setContentsOpaque: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feef80 (    0x20) objc_msgSend$setContentsRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feefa0 (    0x20) objc_msgSend$setContentsScale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feefc0 (    0x20) objc_msgSend$setContextId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feefe0 (    0x20) objc_msgSend$setContrast: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef000 (    0x20) objc_msgSend$setCornerContents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef020 (    0x20) objc_msgSend$setCornerContentsCenter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef040 (    0x20) objc_msgSend$setCornerCurve: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef060 (    0x20) objc_msgSend$setCornerRadius: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef080 (    0x20) objc_msgSend$setCreatesCompositingGroup: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef0a0 (    0x20) objc_msgSend$setCullMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef0c0 (    0x20) objc_msgSend$setCurrentMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef0e0 (    0x20) objc_msgSend$setCursorDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef100 (    0x20) objc_msgSend$setCursorEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef120 (    0x20) objc_msgSend$setCursorHidden: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef140 (    0x20) objc_msgSend$setCursorPosition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef160 (    0x20) objc_msgSend$setDateFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef180 (    0x20) objc_msgSend$setDebugDeferArrivalSeconds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef1a0 (    0x20) objc_msgSend$setDefaultDASession: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef1c0 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef1e0 (    0x20) objc_msgSend$setDelegateBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef200 (    0x20) objc_msgSend$setDepth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef220 (    0x20) objc_msgSend$setDepthBias:slopeScale:clamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef240 (    0x20) objc_msgSend$setDepthClipMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef260 (    0x20) objc_msgSend$setDepthStencilState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef280 (    0x20) objc_msgSend$setDestination: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef2a0 (    0x20) objc_msgSend$setDestinationAlphaBlendFactor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef2c0 (    0x20) objc_msgSend$setDestinationRGBBlendFactor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef2e0 (    0x20) objc_msgSend$setDigitalModes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef300 (    0x20) objc_msgSend$setDigitalModes:withTimings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef320 (    0x20) objc_msgSend$setDisableActions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef340 (    0x20) objc_msgSend$setDisableSignPosts: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef360 (    0x20) objc_msgSend$setDisablesUpdates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef380 (    0x20) objc_msgSend$setDisplayAttachmentSeed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef3a0 (    0x20) objc_msgSend$setDisplayColorSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef3c0 (    0x20) objc_msgSend$setDisplayID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef3e0 (    0x20) objc_msgSend$setDisplayType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef400 (    0x20) objc_msgSend$setDisplayUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef420 (    0x20) objc_msgSend$setDisplays: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef440 (    0x20) objc_msgSend$setDragOffset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef460 (    0x20) objc_msgSend$setEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef480 (    0x20) objc_msgSend$setEotf: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef4a0 (    0x20) objc_msgSend$setErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef4c0 (    0x20) objc_msgSend$setExcludedApplications: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef4e0 (    0x20) objc_msgSend$setExcludedPIDS: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef500 (    0x20) objc_msgSend$setExcludedWindows: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef520 (    0x20) objc_msgSend$setFillColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef540 (    0x20) objc_msgSend$setFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef560 (    0x20) objc_msgSend$setFilterPolicy: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef580 (    0x20) objc_msgSend$setFilters: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef5a0 (    0x20) objc_msgSend$setFont: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef5c0 (    0x20) objc_msgSend$setFontSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef5e0 (    0x20) objc_msgSend$setForegroundColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef600 (    0x20) objc_msgSend$setFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef620 (    0x20) objc_msgSend$setFragmentBuffer:offset:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef640 (    0x20) objc_msgSend$setFragmentBytes:length:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef660 (    0x20) objc_msgSend$setFragmentFunction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef680 (    0x20) objc_msgSend$setFragmentSamplerState:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef6a0 (    0x20) objc_msgSend$setFragmentTexture:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef6c0 (    0x20) objc_msgSend$setFrame: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef6e0 (    0x20) objc_msgSend$setFrame:forceAsync: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef700 (    0x20) objc_msgSend$setFrontFacingWinding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef720 (    0x20) objc_msgSend$setGPUPriority: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef740 (    0x20) objc_msgSend$setHeadroom: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef760 (    0x20) objc_msgSend$setHeight: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef780 (    0x20) objc_msgSend$setHidden: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef7a0 (    0x20) objc_msgSend$setHideMenuBar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef7c0 (    0x20) objc_msgSend$setHide_menu_bar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef7e0 (    0x20) objc_msgSend$setHotPlugCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef800 (    0x20) objc_msgSend$setIncludedApplications: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef820 (    0x20) objc_msgSend$setIncludedPIDS: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef840 (    0x20) objc_msgSend$setIncludedWindows: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef860 (    0x20) objc_msgSend$setInverseMeshed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef880 (    0x20) objc_msgSend$setInvertsColors: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef8a0 (    0x20) objc_msgSend$setIsReferencePreset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef8c0 (    0x20) objc_msgSend$setLabel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef8e0 (    0x20) objc_msgSend$setLastPowerStateNotification: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef900 (    0x20) objc_msgSend$setLayer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef920 (    0x20) objc_msgSend$setLayoutManager: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef940 (    0x20) objc_msgSend$setLineDashPattern: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef960 (    0x20) objc_msgSend$setLineWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef980 (    0x20) objc_msgSend$setLoadAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef9a0 (    0x20) objc_msgSend$setMagFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef9c0 (    0x20) objc_msgSend$setMainThreadWork: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fef9e0 (    0x20) objc_msgSend$setMargin: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefa00 (    0x20) objc_msgSend$setMask: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefa20 (    0x20) objc_msgSend$setMaskedCorners: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefa40 (    0x20) objc_msgSend$setMasksToBounds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefa60 (    0x20) objc_msgSend$setMatchesPosition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefa80 (    0x20) objc_msgSend$setMatchesTransform: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefaa0 (    0x20) objc_msgSend$setMaxAnisotropy: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefac0 (    0x20) objc_msgSend$setMaximumLuminance: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefae0 (    0x20) objc_msgSend$setMeshTransform: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefb00 (    0x20) objc_msgSend$setMetaData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefb20 (    0x20) objc_msgSend$setMinFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefb40 (    0x20) objc_msgSend$setMinificationFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefb60 (    0x20) objc_msgSend$setMipFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefb80 (    0x20) objc_msgSend$setMipmapLevelCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefba0 (    0x20) objc_msgSend$setMouseLocation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefbc0 (    0x20) objc_msgSend$setName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefbe0 (    0x20) objc_msgSend$setNativeWhitePoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefc00 (    0x20) objc_msgSend$setNestedCalloutCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefc20 (    0x20) objc_msgSend$setNormalizedCoordinates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefc40 (    0x20) objc_msgSend$setNotifyBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefc60 (    0x20) objc_msgSend$setNotifyQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefc80 (    0x20) objc_msgSend$setNumberOfZonesInX: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefca0 (    0x20) objc_msgSend$setNumberOfZonesInY: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefcc0 (    0x20) objc_msgSend$setObject:atIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefce0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefd00 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefd20 (    0x20) objc_msgSend$setOffset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefd40 (    0x20) objc_msgSend$setOnline: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefd60 (    0x20) objc_msgSend$setOp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefd80 (    0x20) objc_msgSend$setOpacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefda0 (    0x20) objc_msgSend$setOpaque: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefdc0 (    0x20) objc_msgSend$setOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefde0 (    0x20) objc_msgSend$setOrientation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefe00 (    0x20) objc_msgSend$setOutputURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefe20 (    0x20) objc_msgSend$setOverscanAdjustment: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefe40 (    0x20) objc_msgSend$setOverscanAmounts: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefe60 (    0x20) objc_msgSend$setPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefe80 (    0x20) objc_msgSend$setPayload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefea0 (    0x20) objc_msgSend$setPixelFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefec0 (    0x20) objc_msgSend$setPort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185fefee0 (    0x20) objc_msgSend$setPosition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feff00 (    0x20) objc_msgSend$setPotentialHeadroom: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feff20 (    0x20) objc_msgSend$setPredicates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feff40 (    0x20) objc_msgSend$setPresetAtIndex:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feff60 (    0x20) objc_msgSend$setPresetDataAtIndex:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feff80 (    0x20) objc_msgSend$setProductId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feffa0 (    0x20) objc_msgSend$setProperties: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feffc0 (    0x20) objc_msgSend$setProposedWindowOrigin: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185feffe0 (    0x20) objc_msgSend$setProtectionOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0000 (    0x20) objc_msgSend$setPunchoutShadow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0020 (    0x20) objc_msgSend$setPurgeableState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0040 (    0x20) objc_msgSend$setRasterizationPrefersWindowServerAwareBackdrops: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0060 (    0x20) objc_msgSend$setRasterizationScale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0080 (    0x20) objc_msgSend$setReference: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff00a0 (    0x20) objc_msgSend$setRefreshDeadline: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff00c0 (    0x20) objc_msgSend$setRegisteredNotifiers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff00e0 (    0x20) objc_msgSend$setRenderPipelineState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0100 (    0x20) objc_msgSend$setRendererFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0120 (    0x20) objc_msgSend$setRendererWork: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0140 (    0x20) objc_msgSend$setResourceOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0160 (    0x20) objc_msgSend$setResponsibleProcess: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0180 (    0x20) objc_msgSend$setRimColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff01a0 (    0x20) objc_msgSend$setRimOpacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff01c0 (    0x20) objc_msgSend$setRimPathIsBounds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff01e0 (    0x20) objc_msgSend$setRimWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0200 (    0x20) objc_msgSend$setRunning: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0220 (    0x20) objc_msgSend$setRunningInServer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0240 (    0x20) objc_msgSend$setSDRBrightness: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0260 (    0x20) objc_msgSend$setScale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0280 (    0x20) objc_msgSend$setScalePreservesAspect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff02a0 (    0x20) objc_msgSend$setScales: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff02c0 (    0x20) objc_msgSend$setScissorRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff02e0 (    0x20) objc_msgSend$setSemaphore: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0300 (    0x20) objc_msgSend$setSerialNumber: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0320 (    0x20) objc_msgSend$setServiceClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0340 (    0x20) objc_msgSend$setSession: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0360 (    0x20) objc_msgSend$setSessionID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0380 (    0x20) objc_msgSend$setSetTarget: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff03a0 (    0x20) objc_msgSend$setShadowOffset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff03c0 (    0x20) objc_msgSend$setShadowOpacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff03e0 (    0x20) objc_msgSend$setShadowPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0400 (    0x20) objc_msgSend$setShadowPathIsBounds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0420 (    0x20) objc_msgSend$setShadowRadius: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0440 (    0x20) objc_msgSend$setShouldRasterize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0460 (    0x20) objc_msgSend$setSignaledValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0480 (    0x20) objc_msgSend$setSoftRim: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff04a0 (    0x20) objc_msgSend$setSourceLayer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff04c0 (    0x20) objc_msgSend$setSpaceID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff04e0 (    0x20) objc_msgSend$setStateDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0500 (    0x20) objc_msgSend$setStatusNotificationBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0520 (    0x20) objc_msgSend$setStepFunction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0540 (    0x20) objc_msgSend$setStorageMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0560 (    0x20) objc_msgSend$setStoreAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0580 (    0x20) objc_msgSend$setStride: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff05a0 (    0x20) objc_msgSend$setString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff05c0 (    0x20) objc_msgSend$setStrokeColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff05e0 (    0x20) objc_msgSend$setSubdivisionSteps: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0600 (    0x20) objc_msgSend$setSublayers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0620 (    0x20) objc_msgSend$setSubmissionQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0640 (    0x20) objc_msgSend$setTarget [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0660 (    0x20) objc_msgSend$setTexture: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0680 (    0x20) objc_msgSend$setTextureType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff06a0 (    0x20) objc_msgSend$setTimestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff06c0 (    0x20) objc_msgSend$setTransform: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff06e0 (    0x20) objc_msgSend$setTriangleFillMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0700 (    0x20) objc_msgSend$setType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0720 (    0x20) objc_msgSend$setUpdateBlockEnqueued: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0740 (    0x20) objc_msgSend$setUpdateBlockQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0760 (    0x20) objc_msgSend$setUpdateHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0780 (    0x20) objc_msgSend$setUsage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff07a0 (    0x20) objc_msgSend$setUserAdjustment: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff07c0 (    0x20) objc_msgSend$setUserAdjustmentData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff07e0 (    0x20) objc_msgSend$setUti: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0800 (    0x20) objc_msgSend$setUuid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0820 (    0x20) objc_msgSend$setValid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0840 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0860 (    0x20) objc_msgSend$setValues: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0880 (    0x20) objc_msgSend$setVendorId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff08a0 (    0x20) objc_msgSend$setVertexBuffer:offset:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff08c0 (    0x20) objc_msgSend$setVertexBytes:length:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff08e0 (    0x20) objc_msgSend$setVertexDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0900 (    0x20) objc_msgSend$setVertexFunction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0920 (    0x20) objc_msgSend$setViewport: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0940 (    0x20) objc_msgSend$setVisibilityResultMode:offset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0960 (    0x20) objc_msgSend$setVisible: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0980 (    0x20) objc_msgSend$setWantsExtendedDynamicRangeContent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff09a0 (    0x20) objc_msgSend$setWhitePointAvailable: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff09c0 (    0x20) objc_msgSend$setWhitePointD50XYZ: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff09e0 (    0x20) objc_msgSend$setWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0a00 (    0x20) objc_msgSend$setWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0a20 (    0x20) objc_msgSend$setWindowID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0a40 (    0x20) objc_msgSend$setWindowIDs: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0a60 (    0x20) objc_msgSend$setWindowLevel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0a80 (    0x20) objc_msgSend$setWindowServerAware: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0aa0 (    0x20) objc_msgSend$setWindowTags:onWindow:clear: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ac0 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ae0 (    0x20) objc_msgSend$setWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0b00 (    0x20) objc_msgSend$setWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0b20 (    0x20) objc_msgSend$setWithSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0b40 (    0x20) objc_msgSend$setWriteMask: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0b60 (    0x20) objc_msgSend$setZoneHeight: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0b80 (    0x20) objc_msgSend$setZoneWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ba0 (    0x20) objc_msgSend$settingsWithBackendSettings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0bc0 (    0x20) objc_msgSend$settingsWithDictionaryRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0be0 (    0x20) objc_msgSend$shareAll [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0c00 (    0x20) objc_msgSend$shared [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0c20 (    0x20) objc_msgSend$sharedCaptureManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0c40 (    0x20) objc_msgSend$sharedManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0c60 (    0x20) objc_msgSend$sharedReporter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0c80 (    0x20) objc_msgSend$sharingSessionManager:pickerCanceledForSession: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ca0 (    0x20) objc_msgSend$sharingSessionManager:sessionDidBegin: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0cc0 (    0x20) objc_msgSend$sharingSessionManager:sessionDidChangeContent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ce0 (    0x20) objc_msgSend$sharingSessionManager:sessionDidChangeMetaData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0d00 (    0x20) objc_msgSend$sharingSessionManager:sessionDidEnd: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0d20 (    0x20) objc_msgSend$sharingSessionManager:sessionDidRequestPicker: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0d40 (    0x20) objc_msgSend$signature [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0d60 (    0x20) objc_msgSend$signingContext [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0d80 (    0x20) objc_msgSend$size [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0da0 (    0x20) objc_msgSend$sizeInMillimeters [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0dc0 (    0x20) objc_msgSend$sizeInPixels [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0de0 (    0x20) objc_msgSend$sizeInPoints [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0e00 (    0x20) objc_msgSend$snapshotArrayFromXPCObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0e20 (    0x20) objc_msgSend$snapshotCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0e40 (    0x20) objc_msgSend$snapshots [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0e60 (    0x20) objc_msgSend$snapshotsArray [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0e80 (    0x20) objc_msgSend$sortUsingComparator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ea0 (    0x20) objc_msgSend$sortedArrayUsingSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ec0 (    0x20) objc_msgSend$spaceID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0ee0 (    0x20) objc_msgSend$spaceManagementMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0f00 (    0x20) objc_msgSend$spaceManagerDidCompleteInitialization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0f20 (    0x20) objc_msgSend$spaceManagerDidEndUpdates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0f40 (    0x20) objc_msgSend$spaceManagerWillBeginUpdates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0f60 (    0x20) objc_msgSend$spaceResizeDirections [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0f80 (    0x20) objc_msgSend$spaceWindowManager:changedFrontConnection:flags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0fa0 (    0x20) objc_msgSend$spaceWindowManager:changedFrontConnection:flags:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0fc0 (    0x20) objc_msgSend$spaceWindowManager:changedFrontConnection:pid:flags:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff0fe0 (    0x20) objc_msgSend$spaceWindowManager:didBatchReassociateWindows:toSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1000 (    0x20) objc_msgSend$spaceWindowManager:didClickActivationOrderingForWindow:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1020 (    0x20) objc_msgSend$spaceWindowManager:didCreateSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1040 (    0x20) objc_msgSend$spaceWindowManager:didCreateSpace:display: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1060 (    0x20) objc_msgSend$spaceWindowManager:didDestroySpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1080 (    0x20) objc_msgSend$spaceWindowManager:didDragWindowPhase:context: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff10a0 (    0x20) objc_msgSend$spaceWindowManager:didOrderWindow:orderOp:relativeToWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff10c0 (    0x20) objc_msgSend$spaceWindowManager:display:changedCurrentSpace: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff10e0 (    0x20) objc_msgSend$spaceWindowManager:displayBecameActive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1100 (    0x20) objc_msgSend$spaceWindowManager:space:changedFrontConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1120 (    0x20) objc_msgSend$spaceWindowManager:space:changedFrontConnection:pid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1140 (    0x20) objc_msgSend$spaceWindowManager:space:didAddWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1160 (    0x20) objc_msgSend$spaceWindowManager:space:didRemoveWindow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1180 (    0x20) objc_msgSend$spaceWindowManager:space:movedToDisplay: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff11a0 (    0x20) objc_msgSend$spaceWithID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff11c0 (    0x20) objc_msgSend$spaces [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff11e0 (    0x20) objc_msgSend$start: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1200 (    0x20) objc_msgSend$startCaptureWithDescriptor:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1220 (    0x20) objc_msgSend$startWithBlock:onQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1240 (    0x20) objc_msgSend$state [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1260 (    0x20) objc_msgSend$status [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1280 (    0x20) objc_msgSend$stop [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff12a0 (    0x20) objc_msgSend$stop: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff12c0 (    0x20) objc_msgSend$stopCapture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff12e0 (    0x20) objc_msgSend$storageMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1300 (    0x20) objc_msgSend$stream [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1320 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1340 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1360 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1380 (    0x20) objc_msgSend$stringByPaddingToLength:withString:startingAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff13a0 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff13c0 (    0x20) objc_msgSend$stringFromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff13e0 (    0x20) objc_msgSend$stringWithCString:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1400 (    0x20) objc_msgSend$stringWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1420 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1440 (    0x20) objc_msgSend$stringWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1460 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1480 (    0x20) objc_msgSend$strings [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff14a0 (    0x20) objc_msgSend$strongAssertionUUIDs [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff14c0 (    0x20) objc_msgSend$strongToWeakObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff14e0 (    0x20) objc_msgSend$sublayers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1500 (    0x20) objc_msgSend$superlayer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1520 (    0x20) objc_msgSend$supportPriorityBand [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1540 (    0x20) objc_msgSend$supportsColorSpaces [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1560 (    0x20) objc_msgSend$supportsCursor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1580 (    0x20) objc_msgSend$supportsDestination: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff15a0 (    0x20) objc_msgSend$supportsExtendedColors [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff15c0 (    0x20) objc_msgSend$supportsMemorylessRenderTargets [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff15e0 (    0x20) objc_msgSend$supportsYCBCRFormats12 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1600 (    0x20) objc_msgSend$surfaceDescriptions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1620 (    0x20) objc_msgSend$surfaceID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1640 (    0x20) objc_msgSend$systemAudioRecordingAttributions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1660 (    0x20) objc_msgSend$systemDelegate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1680 (    0x20) objc_msgSend$takeAssertion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff16a0 (    0x20) objc_msgSend$targetProcess [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff16c0 (    0x20) objc_msgSend$taskState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff16e0 (    0x20) objc_msgSend$terminateConnection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1700 (    0x20) objc_msgSend$terminateConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1720 (    0x20) objc_msgSend$texture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1740 (    0x20) objc_msgSend$texture2DDescriptorWithPixelFormat:width:height:mipmapped: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1760 (    0x20) objc_msgSend$tickleTemporaryPowerAssertion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1780 (    0x20) objc_msgSend$timeIntervalSinceReferenceDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff17a0 (    0x20) objc_msgSend$timestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff17c0 (    0x20) objc_msgSend$transform [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff17e0 (    0x20) objc_msgSend$transportType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1800 (    0x20) objc_msgSend$tripleBuffered [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1820 (    0x20) objc_msgSend$type [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1840 (    0x20) objc_msgSend$unarchivedObjectOfClass:fromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1860 (    0x20) objc_msgSend$uniqueId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1880 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff18a0 (    0x20) objc_msgSend$unmapUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff18c0 (    0x20) objc_msgSend$unregisterNotification [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff18e0 (    0x20) objc_msgSend$unregisterNotificationBlocks [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1900 (    0x20) objc_msgSend$unregisterPowerStateNotification:registrationID:notificationOption: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1920 (    0x20) objc_msgSend$unsignedCharValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1940 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1960 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1980 (    0x20) objc_msgSend$unsignedLongLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff19a0 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff19c0 (    0x20) objc_msgSend$update [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff19e0 (    0x20) objc_msgSend$updateBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1a00 (    0x20) objc_msgSend$updateBlockEnqueued [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1a20 (    0x20) objc_msgSend$updateBlockQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1a40 (    0x20) objc_msgSend$updateLayer:key:rendererWork: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1a60 (    0x20) objc_msgSend$updatePrebootForVolumeFire:completion:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1a80 (    0x20) objc_msgSend$updateRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1aa0 (    0x20) objc_msgSend$updateSigningContextWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ac0 (    0x20) objc_msgSend$updateSigningContextWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ae0 (    0x20) objc_msgSend$updateWithAction:connection:error:andSnapshot: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1b00 (    0x20) objc_msgSend$updateWithConnection:collection:action: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1b20 (    0x20) objc_msgSend$uppercaseString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1b40 (    0x20) objc_msgSend$usage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1b60 (    0x20) objc_msgSend$userAdjustmentLuminanceCorrectionFactorForWhitepoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1b80 (    0x20) objc_msgSend$uti [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ba0 (    0x20) objc_msgSend$uuid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1bc0 (    0x20) objc_msgSend$uuid_internal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1be0 (    0x20) objc_msgSend$valid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1c00 (    0x20) objc_msgSend$validateIdleRequest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1c20 (    0x20) objc_msgSend$valueForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1c40 (    0x20) objc_msgSend$valueWithBytes:objCType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1c60 (    0x20) objc_msgSend$valueWithRect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1c80 (    0x20) objc_msgSend$vblDelta [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ca0 (    0x20) objc_msgSend$vendorID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1cc0 (    0x20) objc_msgSend$vendorName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ce0 (    0x20) objc_msgSend$version [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1d00 (    0x20) objc_msgSend$vertexFunction [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1d20 (    0x20) objc_msgSend$verticalIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1d40 (    0x20) objc_msgSend$virtualAddress [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1d60 (    0x20) objc_msgSend$virtualDisplayDidTerminate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1d80 (    0x20) objc_msgSend$waitUntilComplete [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1da0 (    0x20) objc_msgSend$waitUntilCompleted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1dc0 (    0x20) objc_msgSend$waitUntilScheduled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1de0 (    0x20) objc_msgSend$weakAssertionMap [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1e00 (    0x20) objc_msgSend$weakToWeakObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1e20 (    0x20) objc_msgSend$weekOfManufacture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1e40 (    0x20) objc_msgSend$whitePointAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1e60 (    0x20) objc_msgSend$whitepoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1e80 (    0x20) objc_msgSend$width [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ea0 (    0x20) objc_msgSend$window [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ec0 (    0x20) objc_msgSend$windowID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1ee0 (    0x20) objc_msgSend$windowIDs [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1f00 (    0x20) objc_msgSend$windowIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1f20 (    0x20) objc_msgSend$workspaceID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1f40 (    0x20) objc_msgSend$workspaceType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1f60 (    0x20) objc_msgSend$wrapperWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1f80 (    0x20) objc_msgSend$wrapperWithXPCObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1fa0 (    0x20) objc_msgSend$xpcEventToNotification: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1fc0 (    0x20) objc_msgSend$yearOfManufacture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000185ff1fe0 (    0x20) objc_msgSend$zeroingContainer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001db2d2100 ( 0x19580) __DATA_CONST SEGMENT
            0x00000001db2d2100 (   0xd38) __DATA_CONST __got
            0x00000001db2d2e38 (  0xc288) __DATA_CONST __const
                0x00000001db2d2e38 (    0x20) cgdebug::toggles [NameNList, MangledNameNList, NList] 
                0x00000001db2d2e58 (     0x8) kSLContentStreamMinimumFrameTimeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e60 (     0x8) kSLContentStreamBackgroundColorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e68 (     0x8) kSLContentStreamSourceRectKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e70 (     0x8) kSLContentStreamDestinationRectKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e78 (     0x8) kSLContentStreamPreserveAspectRatioKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e80 (     0x8) kSLContentStreamAlwaysScaleToFitKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e88 (     0x8) kSLContentStreamColorSpaceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e90 (     0x8) kSLContentStreamYCbCrMatrixKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2e98 (     0x8) kSLContentStreamShowCursorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ea0 (     0x8) kSLContentStreamQueueDepthKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ea8 (     0x8) kSLContentStreamIgnoreGlobalClipDisplayKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2eb0 (     0x8) kSLContentStreamRequestedOverrideResolutionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2eb8 (     0x8) kSLContentStreamIncludeChildWindowClipKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ec0 (     0x8) kSLContentStreamIOSurfacePropertiesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ec8 (     0x8) kSLContentStreamGPUBoostKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ed0 (     0x8) kSLContentStreamUseVideoToolboxKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ed8 (     0x8) kSLContentStreamPixelBufferRightAlignmentKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ee0 (     0x8) kSLContentStreamPixelBufferBottomAlignmentKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ee8 (     0x8) kSLContentStreamKeepAliveIntervalKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ef0 (     0x8) kSLContentStreamScreenWatcherExemptKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2ef8 (     0x8) kSLContentStreamUpdateIntervalKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f00 (     0x8) kSLContentStreamIdleFramesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f08 (     0x8) kSLCaptureStreamResolutionMetadata [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f10 (     0x8) kSLCaptureStreamWindowResizedMetadata [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f18 (     0x8) kSLCaptureStreamMetadataDictionary [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f20 (    0x20) __block_descriptor_32_e32_v28?0C8^{__CFDictionary=}12^v20l [NameNList, MangledNameNList, NList] 
                0x00000001db2d2f40 (     0x8) kSLSelectiveSharingMetaDataResolution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f48 (     0x8) kSLSelectiveSharingMetaDataWindowScale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f50 (     0x8) kSLSelectiveSharingMetaDataWindowRect [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f58 (     0x8) kSLSelectiveSharingMetaDataWindowScreenRect [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f60 (    0x20) kSLSelectiveSharingMetaDataBoundingRect [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d2f80 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db2d2fa0 (    0x20) __block_descriptor_tmp.4 [NameNList, MangledNameNList, NList] 
                0x00000001db2d2fc0 (    0x30) __block_descriptor_tmp.5 [NameNList, MangledNameNList, NList] 
                0x00000001db2d2ff0 (    0x20) __block_descriptor_tmp.15 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3010 (    0x30) __block_descriptor_tmp.17 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3040 (   0x128) __block_descriptor_tmp.24 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3168 (    0x20) __block_descriptor_tmp.505 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3188 (    0x20) __block_descriptor_tmp.67 [NameNList, MangledNameNList, NList] 
                0x00000001db2d31a8 (    0x20) __block_descriptor_tmp.68 [NameNList, MangledNameNList, NList] 
                0x00000001db2d31c8 (    0x20) __block_descriptor_tmp.69 [NameNList, MangledNameNList, NList] 
                0x00000001db2d31e8 (    0x20) __block_descriptor_tmp.70 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3208 (    0x20) __block_descriptor_tmp.71 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3228 (    0x20) __block_descriptor_tmp.74 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3248 (    0x20) __block_descriptor_tmp.75 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3268 (    0x40) __block_descriptor_tmp.76 [NameNList, MangledNameNList, NList] 
                0x00000001db2d32a8 (    0x20) __block_descriptor_tmp.92 [NameNList, MangledNameNList, NList] 
                0x00000001db2d32c8 (    0x20) __block_descriptor_tmp.97 [NameNList, MangledNameNList, NList] 
                0x00000001db2d32e8 (    0x20) __block_descriptor_tmp.113 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3308 (    0x20) __block_descriptor_tmp.256 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3328 (    0x20) __block_descriptor_tmp.260 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3348 (    0x40) __block_descriptor_tmp.272 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3388 (    0x20) __block_descriptor_tmp.291 [NameNList, MangledNameNList, NList] 
                0x00000001db2d33a8 (    0x20) __block_descriptor_tmp.294 [NameNList, MangledNameNList, NList] 
                0x00000001db2d33c8 (    0x20) __block_descriptor_tmp.295 [NameNList, MangledNameNList, NList] 
                0x00000001db2d33e8 (    0x20) __block_descriptor_tmp.306 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3408 (    0x20) __block_descriptor_tmp.307 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3428 (    0x20) __block_descriptor_tmp.308 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3448 (    0x30) __block_descriptor_tmp.312 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3478 (    0x20) __block_descriptor_tmp.318 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3498 (    0x20) __block_descriptor_tmp.320 [NameNList, MangledNameNList, NList] 
                0x00000001db2d34b8 (    0x20) __block_descriptor_tmp.328 [NameNList, MangledNameNList, NList] 
                0x00000001db2d34d8 (   0x1d0) __block_descriptor_tmp.358 [NameNList, MangledNameNList, NList] 
                0x00000001db2d36a8 (    0x50) __block_descriptor_tmp.575 [NameNList, MangledNameNList, NList] 
                0x00000001db2d36f8 (    0x50) kSLSEventAuthenticationKeyKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3748 (    0x20) __block_descriptor_tmp.823 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3768 (    0x18) __IOHIDPointerEventTranslatorInitScrollResolution(void const*, int)::scrollRes [NameNList, MangledNameNList, NList] 
                0x00000001db2d3780 (    0x20) __block_descriptor_tmp.938 [NameNList, MangledNameNList, NList] 
                0x00000001db2d37a0 (     0x8) kSLSHMDCapabilityCGDisplayModes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37a8 (     0x8) kSLSHMDDisplayQueueOptionSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37b0 (     0x8) kSLSHMDDisplayQueueOptionCount [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37b8 (     0x8) kSLSHMDDisplayQueueOptionColorSpace [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37c0 (     0x8) kSLSHMDDisplayQueueOptionPixelFormat [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37c8 (     0x8) kSLSHMDDisplayQueueOptionFlags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d37d0 (    0x20) __block_descriptor_tmp.46 [NameNList, MangledNameNList, NList] 
                0x00000001db2d37f0 (    0x20) __block_descriptor_tmp.50 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3810 (    0x20) __block_descriptor_tmp.51 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3830 (    0x20) __block_descriptor_tmp.54 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3850 (    0x20) __block_descriptor_tmp.58 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3870 (    0x20) __block_descriptor_tmp.59 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3890 (    0x20) __block_descriptor_tmp.60 [NameNList, MangledNameNList, NList] 
                0x00000001db2d38b0 (    0x20) __block_descriptor_tmp.85 [NameNList, MangledNameNList, NList] 
                0x00000001db2d38d0 (    0x20) __block_descriptor_tmp.1120 [NameNList, MangledNameNList, NList] 
                0x00000001db2d38f0 (    0x20) __block_descriptor_tmp.1160 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3910 (    0x20) __block_descriptor_tmp.1228 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3930 (    0x20) __block_descriptor_tmp.1.1230 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3950 (    0x20) __block_descriptor_tmp.2 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3970 (    0x20) __block_descriptor_tmp.6 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3990 (    0x20) __block_descriptor_tmp.16 [NameNList, MangledNameNList, NList] 
                0x00000001db2d39b0 (    0x20) __block_descriptor_tmp.17.1237 [NameNList, MangledNameNList, NList] 
                0x00000001db2d39d0 (    0x20) __block_descriptor_tmp.1297 [NameNList, MangledNameNList, NList] 
                0x00000001db2d39f0 (    0x20) __block_descriptor_tmp.1308 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3a10 (    0x20) __block_descriptor_tmp.1326 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3a30 (    0x20) __block_descriptor_tmp.1.1327 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3a50 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3a70 (    0x20) __block_descriptor_tmp.3.1530 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3a90 (    0x20) __block_descriptor_tmp.1540 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ab0 (    0x20) __block_descriptor_tmp.1.1547 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ad0 (    0x20) __block_descriptor_32_e33_v16?0"STMediaStatusDomainData"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3af0 (    0x38) __block_descriptor_32_e36_v16?0"STLocationStatusDomainData"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3b28 (    0x38) __block_descriptor_36_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3b60 (    0x20) __block_descriptor_32_e145_v16?0^{?=I{CGRect={CGPoint=dd}{CGSize=dd}}B{CGRect={CGPoint=dd}{CGSize=dd}}dd^{PKGAnimation}{?=CCCCCCCCCCCCCCCC}Idd^v^v^{PKGAnimation}dddi}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3b80 (    0x20) __block_descriptor_72_e8_v16?0d8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ba0 (    0x20) __block_descriptor_40_e8_v12?0B8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3bc0 (    0x20) __block_descriptor_64_e8_v16?0d8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3be0 (    0x20) __block_descriptor_48_e8_v12?0B8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3c00 (    0x20) __block_descriptor_60_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3c20 (    0x20) __block_descriptor_73_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3c40 (    0x20) __block_descriptor_40_e12_v20?0^v8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3c60 (    0x20) __block_descriptor_tmp.1678 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3c80 (    0x20) __block_descriptor_tmp.9.1682 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ca0 (    0x20) __block_descriptor_tmp.1693 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3cc0 (    0x20) __block_descriptor_tmp.5.1699 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ce0 (     0x8) kSLSUpdateIntervals [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3ce8 (     0x8) kSLSUpdatePreparationInterval [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3cf0 (     0x8) kSLSUpdateMirrorInterval [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3cf8 (     0x8) kSLSUpdateMenuBarInterval [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d00 (     0x8) kSLSUpdateRenderInterval [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d08 (     0x8) kSLSUpdateEvents [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d10 (     0x8) kSLSUpdateMetadata [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d18 (     0x8) kSLSUpdateCASends [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d20 (     0x8) kSLSUpdateCAFlushes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3d28 (    0x20) __block_descriptor_tmp.1880 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3d48 (    0x30) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3d78 (    0x20) __block_descriptor_32_e17_"CUICatalog"8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3d98 (    0x20) __block_descriptor_40_e67_"CALayer"24?0?<^{OpaqueCUIRendererRef=}?>8?<"CUICatalog"?>16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3db8 (    0x20) __block_descriptor_48_e41_^{CGColor=}24?0"NSString"8^{CGColor=}16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3dd8 (    0x50) __block_descriptor_64_e67_"CALayer"24?0?<^{OpaqueCUIRendererRef=}?>8?<"CUICatalog"?>16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d3e28 (    0x20) __block_descriptor_tmp.2135 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3e48 (     0x8) kSLContentStreamFrameSizeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e50 (     0x8) kSLContentStreamPixelFormatKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e58 (     0x8) kSLContentStreamIgnoreDeformingTransformsKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e60 (     0x8) kSLContentStreamBestResolutionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e68 (     0x8) kSLContentStreamNominalResolutionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e70 (     0x8) kSLContentStreamIgnoreFramingSingleWindowKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e78 (     0x8) kSLContentStreamOnlyShadowsKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e80 (     0x8) kSLContentStreamShouldBeOpaqueKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e88 (     0x8) kSLContentStreamIgnoreGlobalClipSingleWindowKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e90 (     0x8) kSLContentStreamDisableWindowSharingIndicatorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3e98 (     0x8) kSLContentStreamIsScreenshotKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3ea0 (     0x8) kSLContentStreamIgnoreFramingDisplayKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3ea8 (    0x50) kSLContentStreamIncludeChildWindowNoClipKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d3ef8 (    0x20) __block_descriptor_tmp.2312 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3f18 (    0x20) __block_descriptor_tmp.1.2314 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3f38 (    0x20) __block_descriptor_tmp.7 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3f58 (    0x20) __block_descriptor_tmp.9.2309 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3f78 (    0x20) __block_descriptor_tmp.12 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3f98 (    0x20) __block_descriptor_tmp.18 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3fb8 (    0x20) __block_descriptor_tmp.21 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3fd8 (    0x20) __block_descriptor_tmp.24.2326 [NameNList, MangledNameNList, NList] 
                0x00000001db2d3ff8 (    0x20) __block_descriptor_tmp.2412 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4018 (    0x20) __block_descriptor_tmp.21.2422 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4038 (    0x20) __block_descriptor_tmp.23 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4058 (    0x20) __block_descriptor_tmp.74.2439 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4078 (    0x20) __block_descriptor_tmp.79 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4098 (   0x108) __block_descriptor_tmp.85.2425 [NameNList, MangledNameNList, NList] 
                0x00000001db2d41a0 (    0x20) __block_descriptor_32_e41_v32?0"NSNumber"8"NSMutableArray"16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2d41c0 (    0x20) __block_descriptor_36_e8_v12?0B8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d41e0 (     0x8) kSLSSessionSwitchTransitionTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d41e8 (     0x8) kSLSSessionSwitchTransitionTypeUnset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d41f0 (     0x8) kSLSSessionSwitchTransitionTypeNone [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d41f8 (     0x8) kSLSSessionSwitchTransitionTypeCube [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4200 (    0x20) __block_descriptor_tmp.20 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4220 (    0x20) __block_descriptor_tmp.21.2672 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4240 (    0x20) __block_descriptor_tmp.22 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4260 (     0x8) kSLDataTimelineInfoOptionPerProcessWindows [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4268 (     0x8) kSLDataTimelineReportIntervalSnapshotCountKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4270 (     0x8) kSLDataTimelineReportIntervalTimeInSecondsKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4278 (     0x8) kSLDataTimelineReportIntervalReportInKiBKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4280 (     0x8) kSLDataTimelineSampleIntervalSnapshotCountKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4288 (     0x8) kSLDataTimelineSampleIntervalTimeInSecondsKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4290 (    0x20) __block_descriptor_32_e81_q24?0"SLDataTimelineServerSnapshotEntry"8"SLDataTimelineServerSnapshotEntry"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d42b0 (    0x20) __block_descriptor_tmp.2905 [NameNList, MangledNameNList, NList] 
                0x00000001db2d42d0 (    0x20) __block_descriptor_tmp.3.2908 [NameNList, MangledNameNList, NList] 
                0x00000001db2d42f0 (    0x20) __block_descriptor_tmp.60.2929 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4310 (    0x20) __block_descriptor_tmp.62 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4330 (    0x20) __block_descriptor_tmp.65 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4350 (    0x20) __block_descriptor_tmp.67.2940 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4370 (    0x20) __block_descriptor_tmp.71.2943 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4390 (    0x20) __block_descriptor_tmp.83 [NameNList, MangledNameNList, NList] 
                0x00000001db2d43b0 (    0x20) __block_descriptor_tmp.85.2945 [NameNList, MangledNameNList, NList] 
                0x00000001db2d43d0 (    0x20) __block_descriptor_tmp.87 [NameNList, MangledNameNList, NList] 
                0x00000001db2d43f0 (    0x20) __block_descriptor_tmp.88 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4410 (    0x20) __block_descriptor_tmp.89 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4430 (    0x20) __block_descriptor_tmp.90 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4450 (    0x20) __block_descriptor_tmp.91 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4470 (    0x20) __block_descriptor_tmp.92.2946 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4490 (    0x20) __block_descriptor_tmp.93 [NameNList, MangledNameNList, NList] 
                0x00000001db2d44b0 (    0x20) __block_descriptor_tmp.100 [NameNList, MangledNameNList, NList] 
                0x00000001db2d44d0 (    0x20) __block_descriptor_tmp.101 [NameNList, MangledNameNList, NList] 
                0x00000001db2d44f0 (    0x20) __block_descriptor_tmp.102 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4510 (    0x20) __block_descriptor_tmp.106 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4530 (    0x20) __block_descriptor_tmp.107 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4550 (    0x20) __block_descriptor_tmp.108 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4570 (    0x20) __block_descriptor_tmp.109 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4590 (    0x20) __block_descriptor_tmp.110 [NameNList, MangledNameNList, NList] 
                0x00000001db2d45b0 (    0x20) __block_descriptor_tmp.117 [NameNList, MangledNameNList, NList] 
                0x00000001db2d45d0 (    0x20) __block_descriptor_tmp.118 [NameNList, MangledNameNList, NList] 
                0x00000001db2d45f0 (    0x20) __block_descriptor_tmp.121 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4610 (    0x20) __block_descriptor_tmp.126 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4630 (    0x20) __block_descriptor_tmp.129 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4650 (    0x20) __block_descriptor_tmp.132 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4670 (    0x20) __block_descriptor_tmp.139 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4690 (     0x8) kSLCaptureStreamRequestedOverrideResolution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4698 (     0x8) kSLDisplayStreamRequestedSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46a0 (     0x8) kSLDisplayStreamBackgroundColor [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46a8 (     0x8) kSLCaptureStreamIdleUpdate [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46b0 (     0x8) kSLCaptureStreamAlwaysScaleToFit [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46b8 (     0x8) kSLCaptureStreamIncludeChildWindowNoClip [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46c0 (     0x8) kSLCaptureStreamIncludeChildWindowClip [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d46c8 (    0x20) __block_descriptor_tmp.12.2992 [NameNList, MangledNameNList, NList] 
                0x00000001db2d46e8 (    0x20) __block_descriptor_tmp.14.2979 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4708 (    0x20) __block_descriptor_tmp.19 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4728 (    0x20) __block_descriptor_tmp.20.3013 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4748 (     0x8) kSLSelectiveSharingMetaData [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4750 (    0x20) __block_descriptor_tmp.3027 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4770 (    0x20) __block_descriptor_tmp.5.3029 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4790 (    0x20) __block_descriptor_tmp.3055 [NameNList, MangledNameNList, NList] 
                0x00000001db2d47b0 (    0x20) __block_descriptor_tmp.3079 [NameNList, MangledNameNList, NList] 
                0x00000001db2d47d0 (     0x8) kSLSBrightnessNotificationAttached [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d47d8 (     0x8) kSLSBrightnessNotificationDetached [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d47e0 (     0x8) kSLSBrightnessNotificationRequestEDR [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d47e8 (     0x8) kSLSBrightnessRequestEDRHeadroom [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d47f0 (     0x8) kSLSBrightnessRequestRampDuration [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d47f8 (    0x20) __block_descriptor_tmp.3403 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4818 (    0x20) __block_descriptor_tmp.2.3400 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4838 (    0x20) __block_descriptor_tmp.5.3408 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4858 (    0x20) __block_descriptor_tmp.8 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4878 (    0x20) __block_descriptor_tmp.11 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4898 (    0x20) __block_descriptor_tmp.26 [NameNList, MangledNameNList, NList] 
                0x00000001db2d48b8 (     0x8) kSLSPowerStateNotificationPayload [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d48c0 (     0x8) kSLSPowerStateNotificationRegistrationID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d48c8 (     0x8) kSLSPowerStateNotificationCallbackOptions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d48d0 (     0x8) kSLSPowerStateNotificationRegistrationState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d48d8 (    0x20) __block_descriptor_tmp.3689 [NameNList, MangledNameNList, NList] 
                0x00000001db2d48f8 (    0x20) __block_descriptor_tmp.3783 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4918 (    0x20) __block_descriptor_tmp.3821 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4938 (    0x20) __block_descriptor_32_e15_v24?0r^v8r^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4958 (    0x20) __block_descriptor_tmp.100.3994 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4978 (    0x20) __block_descriptor_tmp.103 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4998 (    0x20) __block_descriptor_tmp.107.3962 [NameNList, MangledNameNList, NList] 
                0x00000001db2d49b8 (    0x20) __block_descriptor_tmp.109.3959 [NameNList, MangledNameNList, NList] 
                0x00000001db2d49d8 (    0x20) __block_descriptor_tmp.134 [NameNList, MangledNameNList, NList] 
                0x00000001db2d49f8 (    0x20) __block_descriptor_tmp.137 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4a18 (    0x20) __block_descriptor_tmp.140 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4a38 (    0x20) __block_descriptor_48_e26_v16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4a58 (    0x20) __block_descriptor_40_e42_v44?0i8{CGRect={CGPoint=dd}{CGSize=dd}}12l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4a78 (    0x20) __block_descriptor_32_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4a98 (    0x20) __block_descriptor_45_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4ab8 (    0x20) __block_descriptor_36_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4ad8 (    0x20) __block_descriptor_40_e26_B16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4af8 (    0x20) __block_descriptor_40_e26_v16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4b18 (    0x20) __block_descriptor_32_e66_B16?0^{?=QiiIIIIddIb1b1b1b1[2{CGRect={CGPoint=dd}{CGSize=dd}}]I}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4b38 (    0x20) __block_descriptor_33_e30_B16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4b58 (    0x20) __block_descriptor_36_e26_v16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4b78 (    0x30) __block_descriptor_104_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4ba8 (    0x20) __block_descriptor_48_e26_B16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4bc8 (    0x20) __block_descriptor_48_e967_v16?0^{CGXConnection=^{CGXConnection}^{CGXConnection}I{WSConnectionDatagramInfo=Idd^{WSDatagramWriteStream}^{WSNotifyInterestSet}^{WSNotifyInterestSet}iBBBB}I^{CGXSession}i{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^vI^{__CFDictionary}^{CGSRegionObject}IIIdd^QQQII^{CGSRegionObject}^{CGXCursor}^{__CFDictionary}^vIIIiI{CPSProcessSerNum=II}IIIb1b1b1b1b1b1b1b1b1b1b1b1b1^{CGXEventTap}^{CGXCaptureState}I^v^?dddddI^{CGXDirtyScreenState}IB^{PKGSpace}{WSSymbolicHotKeyBitMask=[8I]}iQ^{x_list_struct}b1b1b1IdId^{SLSStructuralRegionIDRange}{?=III{?=[2I]}{?=[8I]}}^{x_list_struct}^{CGSRegionObject}b1b1IBBQ{?=[8I]}^{CGSRegionObject}B^{CGSRegionObject}b1b1b1Qb1b1ii^{CGXConnectionLayerKitState}^{__CGXConnectionBox}Bd^{__CFString}b1b1b1b1b1b1b1b1b1b1b1b1^{SLSeedResolver}Q^{x_list_struct}^{WSEve...
                0x00000001db2d4be8 (    0x38) __block_descriptor_32_e26_v16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4c20 (    0x20) __block_descriptor_32_e26_B16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4c40 (    0x20) __block_descriptor_36_e23_v32?08^{__CFString=}24l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4c60 (    0x20) __block_descriptor_37_e26_B16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4c80 (    0x38) __block_descriptor_88_e23_v24?0^{PKGSpace=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d4cb8 (    0x58) __block_descriptor_42_e967_v16?0^{CGXConnection=^{CGXConnection}^{CGXConnection}I{WSConnectionDatagramInfo=Idd^{WSDatagramWriteStream}^{WSNotifyInterestSet}^{WSNotifyInterestSet}iBBBB}I^{CGXSession}i{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^vI^{__CFDictionary}^{CGSRegionObject}IIIdd^QQQII^{CGSRegionObject}^{CGXCursor}^{__CFDictionary}^vIIIiI{CPSProcessSerNum=II}IIIb1b1b1b1b1b1b1b1b1b1b1b1b1^{CGXEventTap}^{CGXCaptureState}I^v^?dddddI^{CGXDirtyScreenState}IB^{PKGSpace}{WSSymbolicHotKeyBitMask=[8I]}iQ^{x_list_struct}b1b1b1IdId^{SLSStructuralRegionIDRange}{?=III{?=[2I]}{?=[8I]}}^{x_list_struct}^{CGSRegionObject}b1b1IBBQ{?=[8I]}^{CGSRegionObject}B^{CGSRegionObject}b1b1b1Qb1b1ii^{CGXConnectionLayerKitState}^{__CGXConnectionBox}Bd^{__CFString}b1b1b1b1b1b1b1b1b1b1b1b1^{SLSeedResolver}Q^{x_list_struct}^{WSEve...
                0x00000001db2d4d10 (    0x58) _cgls_gli_names [NameNList, MangledNameNList, NList] 
                0x00000001db2d4d68 (    0x20) __block_descriptor_tmp.4531 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4d88 (   0x200) symbols [NameNList, MangledNameNList, NList] 
                0x00000001db2d4f88 (    0x20) __block_descriptor_tmp.4669 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4fa8 (    0x20) __block_descriptor_tmp.4673 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4fc8 (    0x20) __block_descriptor_tmp.6.4700 [NameNList, MangledNameNList, NList] 
                0x00000001db2d4fe8 (     0x8) kSLSConnectionHasPluginPower [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4ff0 (     0x8) kSLSConnectionSafeApertureCompatibility [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d4ff8 (     0x8) kSLSConnectionNeedsSafeAreaInsetShield [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5000 (    0x20) __block_descriptor_tmp.28.4810 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5020 (    0x20) __block_descriptor_tmp.132.4818 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5040 (    0x20) __block_descriptor_tmp.142 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5060 (    0x20) __block_descriptor_tmp.154 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5080 (    0x20) __block_descriptor_tmp.158 [NameNList, MangledNameNList, NList] 
                0x00000001db2d50a0 (    0x20) __block_descriptor_tmp.161 [NameNList, MangledNameNList, NList] 
                0x00000001db2d50c0 (    0x20) __block_descriptor_tmp.164 [NameNList, MangledNameNList, NList] 
                0x00000001db2d50e0 (    0x20) __block_descriptor_tmp.170 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5100 (    0x20) __block_descriptor_tmp.172 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5120 (    0x20) __block_descriptor_tmp.175 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5140 (    0x20) __block_descriptor_tmp.187 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5160 (    0x20) __block_descriptor_tmp.191 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5180 (    0x20) __block_descriptor_tmp.192 [NameNList, MangledNameNList, NList] 
                0x00000001db2d51a0 (    0x20) __block_descriptor_tmp.198 [NameNList, MangledNameNList, NList] 
                0x00000001db2d51c0 (    0x20) __block_descriptor_tmp.202 [NameNList, MangledNameNList, NList] 
                0x00000001db2d51e0 (    0x20) __block_descriptor_tmp.206 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5200 (    0x20) __block_descriptor_tmp.207 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5220 (    0x20) __block_descriptor_tmp.210 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5240 (    0x20) __block_descriptor_tmp.211 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5260 (    0x20) __block_descriptor_tmp.213 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5280 (    0x20) __block_descriptor_tmp.214 [NameNList, MangledNameNList, NList] 
                0x00000001db2d52a0 (    0x20) __block_descriptor_tmp.217 [NameNList, MangledNameNList, NList] 
                0x00000001db2d52c0 (    0x20) __block_descriptor_tmp.5057 [NameNList, MangledNameNList, NList] 
                0x00000001db2d52e0 (    0x20) __block_descriptor_tmp.2.5087 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5300 (     0x8) kSLSDeviceUsagesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5308 (     0x8) kSLSMouseDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5310 (     0x8) kSLSKeyboardDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5318 (     0x8) kSLSTrackpadDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5320 (     0x8) kSLSDeviceDictionariesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5328 (     0x8) kSLSGestureScrollDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5330 (     0x8) kSLTouchBarDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5338 (     0x8) kSLSBuiltInDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5340 (     0x8) kSLSGestureScrollTrackpadDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5348 (     0x8) kSLSGestureScrollDeviceTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5350 (     0x8) kSLSGestureScrollTrackpad [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5358 (     0x8) kSLSGestureScrollMouse [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5360 (    0x20) __block_descriptor_tmp.5172 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5380 (    0x20) __block_descriptor_tmp.42 [NameNList, MangledNameNList, NList] 
                0x00000001db2d53a0 (    0x20) __block_descriptor_tmp.46.5188 [NameNList, MangledNameNList, NList] 
                0x00000001db2d53c0 (    0x20) __block_descriptor_tmp.51.5210 [NameNList, MangledNameNList, NList] 
                0x00000001db2d53e0 (    0x20) __block_descriptor_tmp.52 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5400 (    0x20) __block_descriptor_tmp.58.5205 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5420 (    0x20) __block_descriptor_tmp.62.5204 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5440 (    0x20) __block_descriptor_tmp.63 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5460 (    0x20) __block_descriptor_tmp.64 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5480 (    0x20) __block_descriptor_tmp.65.5209 [NameNList, MangledNameNList, NList] 
                0x00000001db2d54a0 (    0x20) __block_descriptor_tmp.69.5234 [NameNList, MangledNameNList, NList] 
                0x00000001db2d54c0 (    0x20) __block_descriptor_tmp.83.5248 [NameNList, MangledNameNList, NList] 
                0x00000001db2d54e0 (    0x20) __block_descriptor_32_e74_v32?0"RBSProcessMonitor"8"RBSProcessHandle"16"RBSProcessStateUpdate"24l [NameNList, MangledNameNList, NList] 
                0x00000001db2d5500 (    0x20) __block_descriptor_tmp.3.5295 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5520 (     0x8) kSLDisplayStreamGPUBoost [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5528 (    0x20) __block_descriptor_tmp.14.5298 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5548 (    0x20) __block_descriptor_tmp.17.5304 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5568 (    0x20) __block_descriptor_tmp.18.5307 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5588 (    0x20) __block_descriptor_tmp.24.5316 [NameNList, MangledNameNList, NList] 
                0x00000001db2d55a8 (    0x20) __block_descriptor_tmp.25.5317 [NameNList, MangledNameNList, NList] 
                0x00000001db2d55c8 (    0x20) __block_descriptor_tmp.26.5322 [NameNList, MangledNameNList, NList] 
                0x00000001db2d55e8 (    0x20) __block_descriptor_tmp.28.5325 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5608 (     0x8) kSLDisplayStreamSelectiveSharingSession [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d5610 (    0x20) __block_descriptor_tmp.29 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5630 (    0x20) __block_descriptor_tmp.5385 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5650 (    0x20) __block_descriptor_tmp.4.5389 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5670 (    0x20) __block_descriptor_tmp.7.5405 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5690 (    0x20) __block_descriptor_tmp.12.5410 [NameNList, MangledNameNList, NList] 
                0x00000001db2d56b0 (    0x20) __block_descriptor_tmp.15.5411 [NameNList, MangledNameNList, NList] 
                0x00000001db2d56d0 (    0x20) __block_descriptor_tmp.27 [NameNList, MangledNameNList, NList] 
                0x00000001db2d56f0 (    0x20) __block_descriptor_tmp.30 [NameNList, MangledNameNList, NList] 
                0x00000001db2d5710 (  0x1d20) sSymKeyTable [NameNList, MangledNameNList, NList] 
                0x00000001db2d7430 (    0x38) __block_descriptor_tmp.5682 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7468 (    0x20) __block_descriptor_tmp.3.5677 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7488 (    0x10) kCGXGlobalCurrentCursorKeys [NameNList, MangledNameNList, NList] 
                0x00000001db2d7498 (   0x400) WSCheckWindowTagRights.tagRights [NameNList, MangledNameNList, NList] 
                0x00000001db2d7898 (    0x20) __block_descriptor_tmp.5952 [NameNList, MangledNameNList, NList] 
                0x00000001db2d78b8 (    0x20) __block_descriptor_tmp.5978 [NameNList, MangledNameNList, NList] 
                0x00000001db2d78d8 (    0x20) __block_descriptor_tmp.5988 [NameNList, MangledNameNList, NList] 
                0x00000001db2d78f8 (    0x20) __block_descriptor_tmp.2.5995 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7918 (    0x20) __block_descriptor_tmp.3.5998 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7938 (    0x20) __block_descriptor_tmp.4.5999 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7958 (    0x20) __block_descriptor_tmp.5.6003 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7978 (    0x20) __block_descriptor_tmp.8.6029 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7998 (    0x20) __block_descriptor_tmp.9.6028 [NameNList, MangledNameNList, NList] 
                0x00000001db2d79b8 (    0x20) __block_descriptor_tmp.43 [NameNList, MangledNameNList, NList] 
                0x00000001db2d79d8 (    0x20) __block_descriptor_tmp.44 [NameNList, MangledNameNList, NList] 
                0x00000001db2d79f8 (    0x20) __block_descriptor_tmp.64.6025 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7a18 (    0x20) __block_descriptor_tmp.68.6026 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7a38 (    0x20) __block_descriptor_tmp.71.6020 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7a58 (    0x20) __block_descriptor_tmp.74.6024 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7a78 (    0x20) __block_descriptor_tmp.78 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7a98 (    0x20) __block_descriptor_tmp.82 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7ab8 (    0x20) __block_descriptor_tmp.6133 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7ad8 (    0x20) __block_descriptor_tmp.6.6159 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7af8 (    0x20) __block_descriptor_tmp.8.6166 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7b18 (    0x20) __block_descriptor_tmp.9.6168 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7b38 (    0x20) __block_descriptor_tmp.17.6160 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7b58 (    0x20) __block_descriptor_tmp.5.6173 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7b78 (    0x20) __block_descriptor_tmp.8.6177 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7b98 (    0x20) __block_descriptor_tmp.12.6185 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7bb8 (    0x50) __block_descriptor_tmp.6275 [NameNList, MangledNameNList, NList] 
                0x00000001db2d7c08 (    0x20) __block_descriptor_40_e28_v16?0"<MTLCommandBuffer>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d7c28 (    0x20) __block_descriptor_32_e28_v16?0"<MTLCommandBuffer>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d7c48 (    0x20) __block_descriptor_48_e28_v16?0"<MTLCommandBuffer>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d7c68 (   0x3a0) __block_descriptor_tmp.6519 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8008 (    0x20) __block_descriptor_tmp.6909 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8028 (     0x8) kSLMenuBarIsRevealedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8030 (     0x8) kSLMenuBarRevealDurationKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8038 (     0x8) kSLMenuBarTitleMaterialTintColorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8040 (     0x8) kSLSMenuBarHasHiddenUserspaceBarKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8048 (     0x8) kSLSMenuBarRTLKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8050 (     0x8) kSLSMenuBarIncreasedContrast [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8058 (     0x8) kSLSMenuBarReduceTransparency [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8060 (     0x8) kSLSMenuBarUseFullScreenMenuBarAppearance [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8068 (     0x8) kSLMenuBarFirstMenuMaxXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8070 (     0x8) kSLSScreenTimeSuppressPIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8078 (     0x8) kSLSScreenTimeSuppressStateKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8080 (     0x8) kSLSScreenTimeSuppressAnimationDurationKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8088 (     0x8) kSLSScreenTimeAllowDuringLockoutKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8090 (     0x8) kSLSAssessmentModePIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8098 (     0x8) kSLSAssessmentModeStateKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80a0 (     0x8) kSLMenuBarTrackingIsActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80a8 (     0x8) kSLMenuBarImageWindowLightKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80b0 (     0x8) kSLMenuBarImageWindowDarkKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80b8 (     0x8) kSLMenuBarInactiveImageWindowLightKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80c0 (     0x8) kSLMenuBarInactiveImageWindowDarkKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d80c8 (    0x20) __block_descriptor_40_e28_i32?0^{__CFString=}8q16^v24l [NameNList, MangledNameNList, NList] 
                0x00000001db2d80e8 (    0x40) __block_descriptor_36_e12_i20?0^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8128 (     0x8) SLSWindowQueryKeyOwner [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8130 (     0x8) SLSWindowQueryKeyWorkspaceWindowListOptions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8138 (     0x8) SLSWindowQueryKeySpaceListOptions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8140 (     0x8) SLSWindowQueryKeySpaces [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8148 (     0x8) SLSWindowQueryKeyIncludeTags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8150 (     0x8) SLSWindowQueryKeyExcludeTags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8158 (     0x8) SLSWindowQueryKeyExcludeProcess [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8160 (     0x8) SLSWindowQueryKeyExcludeProcesses [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8168 (    0x20) __block_descriptor_tmp.7187 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8188 (    0x20) __block_descriptor_tmp.24.7202 [NameNList, MangledNameNList, NList] 
                0x00000001db2d81a8 (    0x20) __block_descriptor_tmp.28.7204 [NameNList, MangledNameNList, NList] 
                0x00000001db2d81c8 (    0x20) __block_descriptor_tmp.32 [NameNList, MangledNameNList, NList] 
                0x00000001db2d81e8 (    0x20) __block_descriptor_tmp.36 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8208 (    0x20) __block_descriptor_tmp.41 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8228 (    0x20) __block_descriptor_tmp.43.7236 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8248 (    0x20) __block_descriptor_tmp.47 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8268 (    0x20) __block_descriptor_tmp.50.7235 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8288 (    0x20) __block_descriptor_tmp.53 [NameNList, MangledNameNList, NList] 
                0x00000001db2d82a8 (    0x20) __block_descriptor_tmp.56 [NameNList, MangledNameNList, NList] 
                0x00000001db2d82c8 (    0x20) __block_descriptor_tmp.59.7234 [NameNList, MangledNameNList, NList] 
                0x00000001db2d82e8 (    0x20) __block_descriptor_tmp.62.7233 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8308 (    0x20) __block_descriptor_tmp.65.7232 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8328 (    0x20) __block_descriptor_tmp.68.7231 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8348 (    0x20) __block_descriptor_tmp.71.7229 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8368 (    0x20) __block_descriptor_tmp.74.7227 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8388 (    0x20) __block_descriptor_tmp.77 [NameNList, MangledNameNList, NList] 
                0x00000001db2d83a8 (    0x20) __block_descriptor_tmp.80 [NameNList, MangledNameNList, NList] 
                0x00000001db2d83c8 (    0x20) __block_descriptor_tmp.83.7225 [NameNList, MangledNameNList, NList] 
                0x00000001db2d83e8 (    0x20) __block_descriptor_tmp.86.7222 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8408 (    0x20) __block_descriptor_tmp.89.7219 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8428 (    0xd8) query_keys [NameNList, MangledNameNList, NList] 
                0x00000001db2d8500 (    0x20) __block_descriptor_tmp.111.7241 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8520 (    0x20) __block_descriptor_tmp.114 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8540 (    0x20) __block_descriptor_tmp.7304 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8560 (    0x20) __block_descriptor_tmp.4.7301 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8580 (     0x8) kSLWindowRimRadiusActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8588 (     0x8) kSLWindowRimRadius [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8590 (     0x8) kSLWindowInnerRimDensityActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8598 (     0x8) kSLWindowInnerRimDensity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85a0 (     0x8) kSLWindowInnerRimRadiusActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85a8 (     0x8) kSLWindowInnerRimRadius [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85b0 (     0x8) kSLWindowRimStyleWhiteActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85b8 (     0x8) kSLWindowRimStyleWhite [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85c0 (     0x8) kSLWindowInnerRimStyleWhiteActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85c8 (     0x8) kSLWindowInnerRimStyleWhite [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85d0 (     0x8) kSLWindowShadowContentAwareActive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85d8 (     0x8) kSLWindowRimRadiusInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85e0 (     0x8) kSLWindowInnerRimDensityInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85e8 (     0x8) kSLWindowInnerRimRadiusInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85f0 (     0x8) kSLWindowRimStyleWhiteInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d85f8 (     0x8) kSLWindowInnerRimStyleWhiteInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8600 (     0x8) kSLWindowShadowContentAwareInactive [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d8608 (    0x20) __block_descriptor_tmp.7414 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8628 (    0x20) __block_descriptor_56_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8648 (    0x20) __block_descriptor_tmp.5.7656 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8668 (    0x20) __block_descriptor_tmp.15.7666 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8688 (    0x20) __block_descriptor_tmp.22.7673 [NameNList, MangledNameNList, NList] 
                0x00000001db2d86a8 (    0x20) __block_descriptor_tmp.26.7674 [NameNList, MangledNameNList, NList] 
                0x00000001db2d86c8 (    0x20) __block_descriptor_tmp.30.7675 [NameNList, MangledNameNList, NList] 
                0x00000001db2d86e8 (    0x20) __block_descriptor_tmp.34 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8708 (    0x20) __block_descriptor_tmp.38 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8728 (    0x20) __block_descriptor_tmp.42.7687 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8748 (    0x20) __block_descriptor_tmp.43.7692 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8768 (    0x20) __block_descriptor_tmp.68.7894 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8788 (    0x20) __block_descriptor_tmp.71.7615 [NameNList, MangledNameNList, NList] 
                0x00000001db2d87a8 (    0x20) __block_descriptor_tmp.81 [NameNList, MangledNameNList, NList] 
                0x00000001db2d87c8 (    0x20) __block_descriptor_tmp.82.7696 [NameNList, MangledNameNList, NList] 
                0x00000001db2d87e8 (    0x20) __block_descriptor_tmp.93.7774 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8808 (    0x20) __block_descriptor_tmp.96 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8828 (    0x20) __block_descriptor_tmp.111.7768 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8848 (    0x20) __block_descriptor_tmp.117.7739 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8868 (    0x20) __block_descriptor_tmp.124 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8888 (    0x20) __block_descriptor_tmp.144 [NameNList, MangledNameNList, NList] 
                0x00000001db2d88a8 (    0x20) __block_descriptor_tmp.145.7728 [NameNList, MangledNameNList, NList] 
                0x00000001db2d88c8 (    0x20) __block_descriptor_tmp.146 [NameNList, MangledNameNList, NList] 
                0x00000001db2d88e8 (    0x20) __block_descriptor_tmp.147 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8908 (    0x20) __block_descriptor_tmp.148.7791 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8928 (    0x20) __block_descriptor_tmp.152 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8948 (    0x20) __block_descriptor_tmp.156 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8968 (    0x20) __block_descriptor_tmp.157 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8988 (    0x20) __block_descriptor_tmp.167 [NameNList, MangledNameNList, NList] 
                0x00000001db2d89a8 (    0x20) __block_descriptor_tmp.173 [NameNList, MangledNameNList, NList] 
                0x00000001db2d89c8 (    0x20) __block_descriptor_tmp.174 [NameNList, MangledNameNList, NList] 
                0x00000001db2d89e8 (    0x20) __block_descriptor_tmp.175.7711 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8a08 (    0x20) __block_descriptor_tmp.185 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8a28 (    0x20) __block_descriptor_tmp.193 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8a48 (    0x20) __block_descriptor_tmp.196 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8a68 (    0x20) __block_descriptor_tmp.199 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8a88 (    0x20) __block_descriptor_tmp.202.7747 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8aa8 (    0x20) __block_descriptor_tmp.211.7734 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8ac8 (    0x20) __block_descriptor_tmp.212 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8ae8 (    0x20) __block_descriptor_tmp.215 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8b08 (    0x20) __block_descriptor_tmp.216 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8b28 (    0x20) __block_descriptor_tmp.222 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8b48 (    0x20) __block_descriptor_tmp.223 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8b68 (    0x20) __block_descriptor_tmp.224 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8b88 (    0x20) __block_descriptor_tmp.240 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8ba8 (    0x20) __block_descriptor_tmp.241 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8bc8 (    0x20) __block_descriptor_tmp.244 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8be8 (    0x20) __block_descriptor_tmp.250 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8c08 (    0x20) __block_descriptor_tmp.254 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8c28 (    0x20) __block_descriptor_tmp.257 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8c48 (    0x20) __block_descriptor_tmp.261 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8c68 (    0x20) __block_descriptor_41_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8c88 (    0x20) __block_descriptor_40_e8_v12?0C8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8ca8 (    0x20) __block_descriptor_48_e28_v16?0r^{?=IIQQQQIBBBfffQI}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8cc8 (    0x20) __block_descriptor_40_e34_v20?0"SLDisplayPresetDevice"8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8ce8 (    0x20) __block_descriptor_49_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8d08 (    0xf0) __block_descriptor_33_e75_v24?0{shared_ptr<WS::Displays::Display>=^{Display}^{__shared_weak_count}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d8df8 (    0x20) __block_descriptor_tmp.8375 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8e18 (    0x20) __block_descriptor_tmp.8388 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8e38 (    0x20) __block_descriptor_tmp.8.8389 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8e58 (    0x20) __block_descriptor_tmp.10.8387 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8e78 (    0x20) __block_descriptor_tmp.11.8384 [NameNList, MangledNameNList, NList] 
                0x00000001db2d8e98 (   0x260) __block_descriptor_tmp.15.8394 [NameNList, MangledNameNList, NList] 
                0x00000001db2d90f8 (    0x20) __block_descriptor_tmp.8530 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9118 (    0x20) __block_descriptor_tmp.8545 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9138 (    0x20) __block_descriptor_32_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9158 (    0x20) __block_descriptor_tmp.12.8635 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9178 (    0x20) __block_descriptor_tmp.15.8631 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9198 (    0x20) __block_descriptor_tmp.8662 [NameNList, MangledNameNList, NList] 
                0x00000001db2d91b8 (    0x20) __block_descriptor_32_e34_v16?0^{?=BBBi{?={?=ii}{?=ii}}QB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d91d8 (    0x20) __block_descriptor_34_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d91f8 (    0x20) __block_descriptor_32_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9218 (    0x38) __block_descriptor_44_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9250 (    0x20) __block_descriptor_tmp.8919 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9270 (    0x20) __block_descriptor_tmp.1.8929 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9290 (    0x20) __block_descriptor_tmp.3.8930 [NameNList, MangledNameNList, NList] 
                0x00000001db2d92b0 (    0x20) __block_descriptor_tmp.5.8839 [NameNList, MangledNameNList, NList] 
                0x00000001db2d92d0 (    0x48) __block_descriptor_tmp.6.8840 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9318 (    0x20) __block_descriptor_tmp.25.8871 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9338 (    0x20) __block_descriptor_tmp.32.8876 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9358 (    0x20) __block_descriptor_tmp.33.8865 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9378 (    0x20) __block_descriptor_tmp.46.8906 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9398 (    0x20) __block_descriptor_tmp.48 [NameNList, MangledNameNList, NList] 
                0x00000001db2d93b8 (    0x20) __block_descriptor_tmp.50.8897 [NameNList, MangledNameNList, NList] 
                0x00000001db2d93d8 (    0x20) __block_descriptor_tmp.51.8898 [NameNList, MangledNameNList, NList] 
                0x00000001db2d93f8 (    0x20) __block_descriptor_tmp.56.8924 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9418 (    0x20) __block_descriptor_tmp.61.8927 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9438 (    0x20) __block_descriptor_tmp.64.8891 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9458 (    0x20) __block_descriptor_tmp.8940 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9478 (    0x20) __block_descriptor_tmp.3.8979 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9498 (    0x20) __block_descriptor_tmp.5.8997 [NameNList, MangledNameNList, NList] 
                0x00000001db2d94b8 (    0x20) __block_descriptor_tmp.6.8998 [NameNList, MangledNameNList, NList] 
                0x00000001db2d94d8 (    0x20) __block_descriptor_tmp.7.9000 [NameNList, MangledNameNList, NList] 
                0x00000001db2d94f8 (    0x20) __block_descriptor_tmp.8.8992 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9518 (    0x20) __block_descriptor_tmp.11.9008 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9538 (    0x20) __block_descriptor_tmp.25.9016 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9558 (    0x20) __block_descriptor_tmp.26.9021 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9578 (    0x20) __block_descriptor_tmp.27.9034 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9598 (    0x20) __block_descriptor_tmp.30.9046 [NameNList, MangledNameNList, NList] 
                0x00000001db2d95b8 (    0x20) __block_descriptor_tmp.31 [NameNList, MangledNameNList, NList] 
                0x00000001db2d95d8 (    0x20) __block_descriptor_tmp.34.8959 [NameNList, MangledNameNList, NList] 
                0x00000001db2d95f8 (    0x20) __block_descriptor_tmp.37.8958 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9618 (    0x20) __block_descriptor_tmp.38.9053 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9638 (    0x20) __block_descriptor_tmp.45.9060 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9658 (    0x20) __block_descriptor_tmp.48.9063 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9678 (    0x20) __block_descriptor_tmp.51.9127 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9698 (    0x20) __block_descriptor_tmp.55 [NameNList, MangledNameNList, NList] 
                0x00000001db2d96b8 (    0x20) __block_descriptor_tmp.58.8949 [NameNList, MangledNameNList, NList] 
                0x00000001db2d96d8 (    0x20) __block_descriptor_tmp.61.9153 [NameNList, MangledNameNList, NList] 
                0x00000001db2d96f8 (    0x20) __block_descriptor_tmp.63.9160 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9718 (    0x20) __block_descriptor_tmp.66.9159 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9738 (    0x20) __block_descriptor_tmp.78.9184 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9758 (    0x20) __block_descriptor_tmp.80.9192 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9778 (    0x20) __block_descriptor_tmp.89.9085 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9798 (    0x20) __block_descriptor_tmp.92.9083 [NameNList, MangledNameNList, NList] 
                0x00000001db2d97b8 (    0x20) __block_descriptor_tmp.95 [NameNList, MangledNameNList, NList] 
                0x00000001db2d97d8 (    0x20) __block_descriptor_tmp.117.8952 [NameNList, MangledNameNList, NList] 
                0x00000001db2d97f8 (    0x20) __block_descriptor_tmp.123 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9818 (    0x60) SLEventSourceGetTypeID.class [NameNList, MangledNameNList, NList] 
                0x00000001db2d9878 (    0x20) __block_descriptor_tmp.3.9745 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9898 (    0x20) __block_descriptor_tmp.9930 [NameNList, MangledNameNList, NList] 
                0x00000001db2d98b8 (    0x20) __block_descriptor_tmp.1.9956 [NameNList, MangledNameNList, NList] 
                0x00000001db2d98d8 (    0x20) __block_descriptor_tmp.9994 [NameNList, MangledNameNList, NList] 
                0x00000001db2d98f8 (    0x20) __block_descriptor_tmp.1.9992 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9918 (    0x20) __block_descriptor_32_e24_"CALocalDisplay"12?0I8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9938 (    0x20) __block_descriptor_36_e86_B24?0"CALocalDisplay"8^{?=III^{__CFString}^{__CFString}^{__CFString}^QQQQ^?dddIIB}16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9958 (    0x50) __block_descriptor_36_e35_B24?0"CALocalDisplay"8^{?=IBQQ}16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d99a8 (    0x20) __block_descriptor_tmp.10244 [NameNList, MangledNameNList, NList] 
                0x00000001db2d99c8 (    0x20) __block_descriptor_tmp.3.10241 [NameNList, MangledNameNList, NList] 
                0x00000001db2d99e8 (     0x8) kSLSDisplayControlNotificationState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d99f0 (     0x8) kSLSDisplayControlNotificationUUID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d99f8 (     0x8) kSLSDisplayControlNotificationCGDirectDisplayID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a00 (     0x8) kSLSDisplayControlNotificationErrorDescription [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a08 (     0x8) kSLSDisplayControlNotificationPayload [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a10 (     0x8) kSLSDisplayControlNotificationPayloadType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a18 (     0x8) kSLSDisplayControlNotificationIdleRequest [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a20 (     0x8) kSLSDisplayControlNotificationBrightnessControl [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9a28 (    0x20) __block_descriptor_40_e15_v24?0r^v8r^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9a48 (    0x20) __block_descriptor_40_e10_v16?0r^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9a68 (    0x20) __block_descriptor_36_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9a88 (    0x20) __block_descriptor_32_e38_v16?0^{PKGManagedSpace=^{PKGSpace}i}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9aa8 (    0x20) __block_descriptor_36_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ac8 (    0x20) __block_descriptor_32_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ae8 (    0x20) __block_descriptor_35_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9b08 (    0x20) __block_descriptor_32_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9b28 (    0x20) __block_descriptor_48_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9b48 (    0x20) __block_descriptor_33_e10_^v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9b68 (    0x20) __block_descriptor_64_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9b88 (    0x20) __block_descriptor_64_e38_v16?0^{PKGManagedSpace=^{PKGSpace}i}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ba8 (    0x20) __block_descriptor_48_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9bc8 (    0x20) __block_descriptor_40_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9be8 (    0x20) __block_descriptor_48_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9c08 (    0x20) __block_descriptor_92_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9c28 (    0x20) __block_descriptor_92_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9c48 (    0x20) __block_descriptor_92_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9c68 (    0x20) __block_descriptor_44_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9c88 (    0x20) __block_descriptor_44_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ca8 (    0x20) __block_descriptor_36_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9cc8 (    0x20) __block_descriptor_56_e15_v28?0^v8d16B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9ce8 (    0x20) __block_descriptor_48_e12_v20?0^v8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9d08 (    0x20) __block_descriptor_105_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9d28 (    0x20) __block_descriptor_36_e8_B12?0i8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9d48 (    0x38) __block_descriptor_41_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9d80 (    0x20) __block_descriptor_tmp.11090 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9da0 (    0x20) __block_descriptor_40_e67_v24?0r^{PKGDisplayOperationGroup=}8r^{PKGDisplayOperationGroup=}16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9dc0 (     0x8) SLWindowDisallowSnappingKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2d9dc8 (    0x40) __block_descriptor_tmp.10.11399 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9e08 (    0x20) __block_descriptor_tmp.5.11457 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9e28 (    0x38) __block_descriptor_80_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2d9e60 (    0x20) __block_descriptor_tmp.11902 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9e80 (    0x20) __block_descriptor_tmp.2.11910 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ea0 (    0x20) __block_descriptor_tmp.3.11909 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ec0 (    0x20) __block_descriptor_tmp.4.11914 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9ee0 (    0x20) __block_descriptor_tmp.5.11913 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9f00 (    0x20) __block_descriptor_tmp.6.11915 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9f20 (    0x20) __block_descriptor_tmp.7.11916 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9f40 (    0x20) __block_descriptor_tmp.8.11917 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9f60 (    0x20) __block_descriptor_tmp.9.11918 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9f80 (    0x20) __block_descriptor_tmp.18.11931 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9fa0 (    0x20) __block_descriptor_tmp.19.11932 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9fc0 (    0x20) __block_descriptor_tmp.23.11943 [NameNList, MangledNameNList, NList] 
                0x00000001db2d9fe0 (    0x20) __block_descriptor_tmp.24.11946 [NameNList, MangledNameNList, NList] 
                0x00000001db2da000 (    0x20) __block_descriptor_tmp.31.11959 [NameNList, MangledNameNList, NList] 
                0x00000001db2da020 (    0x20) __block_descriptor_tmp.32.11960 [NameNList, MangledNameNList, NList] 
                0x00000001db2da040 (    0x20) __block_descriptor_tmp.40.11900 [NameNList, MangledNameNList, NList] 
                0x00000001db2da060 (    0x20) __block_descriptor_tmp.11966 [NameNList, MangledNameNList, NList] 
                0x00000001db2da080 (    0x20) __block_descriptor_tmp.12158 [NameNList, MangledNameNList, NList] 
                0x00000001db2da0a0 (    0x78) names [NameNList, MangledNameNList, NList] 
                0x00000001db2da118 (    0x20) __block_descriptor_48_e25_v24?0^{__CFString=}8^v16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da138 (    0x20) __block_descriptor_tmp.23.12868 [NameNList, MangledNameNList, NList] 
                0x00000001db2da158 (    0x20) __block_descriptor_tmp.204 [NameNList, MangledNameNList, NList] 
                0x00000001db2da178 (     0x8) kSLWindowIsActiveOffscreen [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da180 (   0x238) tag_bit_names [NameNList, MangledNameNList, NList] 
                0x00000001db2da3b8 (    0x20) __block_descriptor_41_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da3d8 (    0x20) __block_descriptor_40_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da3f8 (    0x20) __block_descriptor_48_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da418 (    0x20) __block_descriptor_32_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da438 (    0x20) __block_descriptor_32_e13_v24?0^v8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da458 (    0x20) __block_descriptor_32_e82_v16?0^{WSWindowActionContext=^{CGXWindow}^{CGXConnection}^{CGSRegionObject}BBBB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da478 (    0x20) __block_descriptor_40_e82_v16?0^{WSWindowActionContext=^{CGXWindow}^{CGXConnection}^{CGSRegionObject}BBBB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da498 (    0x20) __block_descriptor_56_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da4b8 (     0x8) kSLSDisplayControlNotificationErrorCode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da4c0 (    0x30) templates [NameNList, MangledNameNList, NList] 
                0x00000001db2da4f0 (    0x20) __block_descriptor_tmp.13281 [NameNList, MangledNameNList, NList] 
                0x00000001db2da510 (    0x20) __block_descriptor_tmp.18.13346 [NameNList, MangledNameNList, NList] 
                0x00000001db2da530 (    0x20) __block_descriptor_tmp.30.13407 [NameNList, MangledNameNList, NList] 
                0x00000001db2da550 (    0x38) __block_descriptor_tmp.31.13415 [NameNList, MangledNameNList, NList] 
                0x00000001db2da588 (    0x20) __block_descriptor_36_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da5a8 (    0x20) __block_descriptor_44_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da5c8 (    0x20) __block_descriptor_44_e10_v16?0r^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da5e8 (    0x20) __block_descriptor_32_e10_v16?0r^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da608 (    0x60) gCAUpdateFlagNames [NameNList, MangledNameNList, NList] 
                0x00000001db2da668 (    0x90) cursor_names [NameNList, MangledNameNList, NList] 
                0x00000001db2da6f8 (    0x20) __block_descriptor_tmp.13883 [NameNList, MangledNameNList, NList] 
                0x00000001db2da718 (     0x8) kSLDisplayStreamIOSurfaceProperties [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da720 (    0x38) __block_descriptor_tmp.13969 [NameNList, MangledNameNList, NList] 
                0x00000001db2da758 (    0x20) __block_descriptor_tmp.14260 [NameNList, MangledNameNList, NList] 
                0x00000001db2da778 (    0x20) __block_descriptor_tmp.1.14276 [NameNList, MangledNameNList, NList] 
                0x00000001db2da798 (    0x20) __block_descriptor_tmp.5.14268 [NameNList, MangledNameNList, NList] 
                0x00000001db2da7b8 (    0x20) __block_descriptor_tmp.8.14289 [NameNList, MangledNameNList, NList] 
                0x00000001db2da7d8 (    0x20) __block_descriptor_tmp.24.14292 [NameNList, MangledNameNList, NList] 
                0x00000001db2da7f8 (    0x20) __block_descriptor_tmp.28.14310 [NameNList, MangledNameNList, NList] 
                0x00000001db2da818 (    0x20) __block_descriptor_tmp.30.14311 [NameNList, MangledNameNList, NList] 
                0x00000001db2da838 (     0x8) kSLSDisplayControlRequestClamshellState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da840 (     0x8) kSLSDisplayControlRequestState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da848 (     0x8) kSLSDisplayControlRequestCGDirectDisplayID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da850 (     0x8) kSLSDisplayControlRequestTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da858 (     0x8) kSLSDisplayControlNotificationLogicalDisplaysState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da860 (     0x8) kSLSPowerStateNotificationEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da868 (    0x20) __block_descriptor_tmp.31.14336 [NameNList, MangledNameNList, NList] 
                0x00000001db2da888 (    0x38) __block_descriptor_tmp.32.14345 [NameNList, MangledNameNList, NList] 
                0x00000001db2da8c0 (    0x20) __block_descriptor_tmp.226 [NameNList, MangledNameNList, NList] 
                0x00000001db2da8e0 (    0x20) __block_descriptor_tmp.14484 [NameNList, MangledNameNList, NList] 
                0x00000001db2da900 (    0x20) __block_descriptor_tmp.1.14470 [NameNList, MangledNameNList, NList] 
                0x00000001db2da920 (    0x38) __block_descriptor_tmp.14509 [NameNList, MangledNameNList, NList] 
                0x00000001db2da958 (    0x20) __block_descriptor_40_e250_B16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da978 (    0x20) __block_descriptor_40_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da998 (    0x20) __block_descriptor_32_e251_B16?0r^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2da9b8 (    0x20) __block_descriptor_41_e30_v16?0^{PKGManagedMenuSpace=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da9d8 (    0x20) __block_descriptor_40_e30_v16?0^{PKGManagedMenuSpace=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2da9f8 (    0x20) __block_descriptor_40_e251_B16?0r^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daa18 (    0x20) __block_descriptor_48_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daa38 (    0x20) __block_descriptor_48_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daa58 (    0x20) __block_descriptor_48_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daa78 (    0x20) __block_descriptor_40_e64_v24?0^v8^{WSWindowTransform={CATransform3D=dddddddddddddddd}}16l [NameNList, MangledNameNList, NList] 
                0x00000001db2daa98 (    0x20) __block_descriptor_168_e12_v20?0^v8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2daab8 (    0x20) __block_descriptor_36_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daad8 (    0x20) __block_descriptor_32_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2daaf8 (    0x20) __block_descriptor_32_e11_v20?0Q8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2dab18 (     0x8) kSLSXPCServiceEndpoint [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab20 (     0x8) kSLSXPCServiceCommand [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab28 (     0x8) kSLSXPCServiceUUID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab30 (     0x8) kSLSXPCServicePayloadType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab38 (     0x8) kSLSXPCServicePayload [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab40 (     0x8) kSLSXPCNotificationType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab48 (     0x8) kSLSXPCNotificationXPCObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab50 (     0x8) kSLSXPCNotificationUUID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab58 (     0x8) kSLSXPCNotificationErrorCode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab60 (     0x8) kSLSXPCNotificationErrorDescription [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab68 (     0x8) kSLSCoreGraphicsErrorDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab70 (    0x20) kSLSDisplayControlNotificationType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab90 (     0x8) kSLSAccessibilityAdjustmentOptions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dab98 (     0x8) kSLSAccessibilityTargetDisplay [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daba0 (     0x8) kSLSAccessibilityAdjustmentMatrix [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daba8 (     0x8) kSLSAccessibilityAdjustmentScale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dabb0 (    0x20) __block_descriptor_40_e11_v16?0I8I12l [NameNList, MangledNameNList, NList] 
                0x00000001db2dabd0 (    0x20) __block_descriptor_41_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dabf0 (    0x20) __block_descriptor_57_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2dac10 (    0x20) __block_descriptor_tmp.15436 [NameNList, MangledNameNList, NList] 
                0x00000001db2dac30 (    0x20) __block_descriptor_tmp.5.15437 [NameNList, MangledNameNList, NList] 
                0x00000001db2dac50 (    0x20) __block_descriptor_tmp.3.15559 [NameNList, MangledNameNList, NList] 
                0x00000001db2dac70 (    0x20) __block_descriptor_tmp.4.15557 [NameNList, MangledNameNList, NList] 
                0x00000001db2dac90 (    0x20) __block_descriptor_tmp.6.15568 [NameNList, MangledNameNList, NList] 
                0x00000001db2dacb0 (    0x20) __block_descriptor_tmp.15.15589 [NameNList, MangledNameNList, NList] 
                0x00000001db2dacd0 (     0x8) kSLSDisplayCADeviceNameKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dacd8 (    0x20) __block_descriptor_tmp.15757 [NameNList, MangledNameNList, NList] 
                0x00000001db2dacf8 (    0x20) __block_descriptor_tmp.23.15787 [NameNList, MangledNameNList, NList] 
                0x00000001db2dad18 (    0x20) __block_descriptor_tmp.26.15799 [NameNList, MangledNameNList, NList] 
                0x00000001db2dad38 (    0x20) __block_descriptor_tmp.29.15802 [NameNList, MangledNameNList, NList] 
                0x00000001db2dad58 (    0x20) __block_descriptor_tmp.30.15803 [NameNList, MangledNameNList, NList] 
                0x00000001db2dad78 (    0x20) __block_descriptor_tmp.37.15810 [NameNList, MangledNameNList, NList] 
                0x00000001db2dad98 (    0x38) __block_descriptor_tmp.38.15811 [NameNList, MangledNameNList, NList] 
                0x00000001db2dadd0 (    0x20) __block_descriptor_tmp.56.15691 [NameNList, MangledNameNList, NList] 
                0x00000001db2dadf0 (    0x20) __block_descriptor_tmp.67.15630 [NameNList, MangledNameNList, NList] 
                0x00000001db2dae10 (    0x48) __block_descriptor_tmp.71.15819 [NameNList, MangledNameNList, NList] 
                0x00000001db2dae58 (    0x20) __block_descriptor_33_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dae78 (    0x20) __block_descriptor_48_e12_i20?0^v8I16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dae98 (    0x20) __block_descriptor_52_e12_i24?0^v8Q16l [NameNList, MangledNameNList, NList] 
                0x00000001db2daeb8 (    0x20) __block_descriptor_32_e12_i20?0^v8I16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daed8 (     0x8) kSLSCoordinatedScreenTimeSuppressedNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daee0 (     0x8) kSLSCoordinatedSystemStatusBarMetricsChangedNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daee8 (     0x8) kSLSCoordinatedSpaceMenuBarRevealChangedNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daef0 (     0x8) kSLSCoordinatedTileResizeNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daef8 (     0x8) kSLSCoordinatedLoginNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daf00 (     0x8) kSLSCoordinatedLogoutNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daf08 (     0x8) kSLSCoordinatedScreenLockNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daf10 (     0x8) kSLSCoordinatedScreenUnlockNotificationName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2daf18 (    0x20) __block_descriptor_tmp.34.16051 [NameNList, MangledNameNList, NList] 
                0x00000001db2daf38 (    0x20) __block_descriptor_tmp.16131 [NameNList, MangledNameNList, NList] 
                0x00000001db2daf58 (    0x68) pixel_format_descriptions [NameNList, MangledNameNList, NList] 
                0x00000001db2dafc0 (    0x20) __block_descriptor_65_e13_i20?0r^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2dafe0 (    0x20) __block_descriptor_61_e13_i20?0r^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2db000 (    0x20) __block_descriptor_40_e13_i20?0r^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2db020 (    0x20) __block_descriptor_tmp.16478 [NameNList, MangledNameNList, NList] 
                0x00000001db2db040 (    0x20) __block_descriptor_tmp.13.16443 [NameNList, MangledNameNList, NList] 
                0x00000001db2db060 (    0x20) __block_descriptor_tmp.27.16603 [NameNList, MangledNameNList, NList] 
                0x00000001db2db080 (    0x20) __block_descriptor_tmp.31.16609 [NameNList, MangledNameNList, NList] 
                0x00000001db2db0a0 (     0x8) SLWindowContextShouldUseCA [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2db0a8 (    0x20) __block_descriptor_tmp.16710 [NameNList, MangledNameNList, NList] 
                0x00000001db2db0c8 (    0x20) __block_descriptor_tmp.64.16799 [NameNList, MangledNameNList, NList] 
                0x00000001db2db0e8 (    0x20) __block_descriptor_tmp.68.16736 [NameNList, MangledNameNList, NList] 
                0x00000001db2db108 (    0x20) __block_descriptor_tmp.87.16850 [NameNList, MangledNameNList, NList] 
                0x00000001db2db128 (    0xc0) verify_and_copy_mode_dict.allKeys [NameNList, MangledNameNList, NList] 
                0x00000001db2db1e8 (    0x20) __block_descriptor_tmp.111.16871 [NameNList, MangledNameNList, NList] 
                0x00000001db2db208 (    0x20) __block_descriptor_tmp.13.17073 [NameNList, MangledNameNList, NList] 
                0x00000001db2db228 (    0x80) __block_descriptor_tmp.83.17248 [NameNList, MangledNameNList, NList] 
                0x00000001db2db2a8 (    0x20) __block_descriptor_tmp.3.17353 [NameNList, MangledNameNList, NList] 
                0x00000001db2db2c8 (    0x20) __block_descriptor_tmp.17392 [NameNList, MangledNameNList, NList] 
                0x00000001db2db2e8 (    0x20) __block_descriptor_tmp.17830 [NameNList, MangledNameNList, NList] 
                0x00000001db2db308 (     0x8) SLWindowDisallowSnappingTargetKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2db310 (    0x20) __block_descriptor_tmp.17894 [NameNList, MangledNameNList, NList] 
                0x00000001db2db330 (    0x20) __block_descriptor_tmp.2.17892 [NameNList, MangledNameNList, NList] 
                0x00000001db2db350 (    0x20) __block_descriptor_tmp.5.17890 [NameNList, MangledNameNList, NList] 
                0x00000001db2db370 (    0x20) __block_descriptor_tmp.8.17888 [NameNList, MangledNameNList, NList] 
                0x00000001db2db390 (    0x20) __block_descriptor_tmp.11.17885 [NameNList, MangledNameNList, NList] 
                0x00000001db2db3b0 (  0x29c0) rpcs [NameNList, MangledNameNList, NList] 
                0x00000001db2ddd70 (    0x20) __block_descriptor_tmp.18482 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddd90 (    0x20) __block_descriptor_tmp.6.18498 [NameNList, MangledNameNList, NList] 
                0x00000001db2dddb0 (    0x20) __block_descriptor_tmp.9.18527 [NameNList, MangledNameNList, NList] 
                0x00000001db2dddd0 (    0x20) __block_descriptor_tmp.19.18517 [NameNList, MangledNameNList, NList] 
                0x00000001db2dddf0 (    0x20) __block_descriptor_tmp.22.18515 [NameNList, MangledNameNList, NList] 
                0x00000001db2dde10 (    0x20) __block_descriptor_tmp.29.18529 [NameNList, MangledNameNList, NList] 
                0x00000001db2dde30 (    0x20) __block_descriptor_tmp.32.18554 [NameNList, MangledNameNList, NList] 
                0x00000001db2dde50 (    0x20) __block_descriptor_tmp.37.18549 [NameNList, MangledNameNList, NList] 
                0x00000001db2dde70 (    0x20) __block_descriptor_tmp.15.18632 [NameNList, MangledNameNList, NList] 
                0x00000001db2dde90 (    0x20) __block_descriptor_tmp.16.18566 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddeb0 (    0x20) __block_descriptor_tmp.18742 [NameNList, MangledNameNList, NList] 
                0x00000001db2dded0 (    0x38) __block_descriptor_tmp.6.18767 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddf08 (    0x20) __block_descriptor_tmp.19489 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddf28 (    0x20) __block_descriptor_tmp.25.19520 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddf48 (    0x20) __block_descriptor_tmp.27.19522 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddf68 (    0x20) __block_descriptor_tmp.30.19517 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddf88 (    0x20) __block_descriptor_tmp.68.19577 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddfa8 (    0x20) __block_descriptor_tmp.70.19579 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddfc8 (    0x20) __block_descriptor_tmp.73.19453 [NameNList, MangledNameNList, NList] 
                0x00000001db2ddfe8 (    0x20) __block_descriptor_tmp.75.19449 [NameNList, MangledNameNList, NList] 
                0x00000001db2de008 (    0x20) __block_descriptor_tmp.76.19448 [NameNList, MangledNameNList, NList] 
                0x00000001db2de028 (    0x20) __block_descriptor_tmp.80.19443 [NameNList, MangledNameNList, NList] 
                0x00000001db2de048 (     0x8) kSLSHMDCapabilityPreferredSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de050 (     0x8) kSLSHMDCapabilityMinSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de058 (     0x8) kSLSHMDCapabilityMaxSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de060 (     0x8) kSLSHMDCapabilityMaxQueueSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de068 (     0x8) kSLSHMDCapabilityPreferredFormat [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de070 (     0x8) kSLSHMDCapabilitySupportedFormats [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de078 (    0x20) __block_descriptor_tmp.121.19587 [NameNList, MangledNameNList, NList] 
                0x00000001db2de098 (    0x78) __block_descriptor_tmp.136.19476 [NameNList, MangledNameNList, NList] 
                0x00000001db2de110 (     0x8) kSLSSetFrontProcessValidatedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de118 (     0x8) kSLSSetFrontProcessRequestTimestampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de120 (     0x8) kSLSSetFrontProcessRequestorPidKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de128 (     0x8) kSLSSetFrontProcessEventSeedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de130 (     0x8) kSLSSetFrontProcessActivationCountKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de138 (     0x8) kSLSSetFrontProcessLatestActivationTimestampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de140 (     0x8) kSLSSetFrontProcessIgnoringOtherApps [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de148 (     0x8) kSLSSetFrontProcessApplicationHasVisibleWindows [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de150 (     0x8) kSLSSetFrontProcessFirstActivationPreventionDuration [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de158 (     0x8) kSLSSetFrontProcessActivationTokenTargetBundleID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de160 (     0x8) kSLSActivationTokenPrivilegedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de168 (     0x8) kSLSActivationTokenTimestampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de170 (     0x8) kSLSActivationTokenRequestorPidKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de178 (    0x20) __block_descriptor_tmp.38.19721 [NameNList, MangledNameNList, NList] 
                0x00000001db2de198 (    0x20) __block_descriptor_tmp.39 [NameNList, MangledNameNList, NList] 
                0x00000001db2de1b8 (    0x20) __block_descriptor_tmp.43.19694 [NameNList, MangledNameNList, NList] 
                0x00000001db2de1d8 (    0x20) __block_descriptor_tmp.44.19688 [NameNList, MangledNameNList, NList] 
                0x00000001db2de1f8 (    0x20) __block_descriptor_tmp.45.19692 [NameNList, MangledNameNList, NList] 
                0x00000001db2de218 (    0x38) __block_descriptor_tmp.19741 [NameNList, MangledNameNList, NList] 
                0x00000001db2de250 (    0x20) __block_descriptor_44_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de270 (    0x20) __block_descriptor_36_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de290 (    0x20) __block_descriptor_52_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de2b0 (    0x20) __block_descriptor_60_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de2d0 (    0x20) __block_descriptor_32_e50_v24?0^{_SLSTransactionWriteStream=^vQQb1b31}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2de2f0 (    0x20) __block_descriptor_40_e25_v24?0^{__CFString=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2de310 (    0x20) __block_descriptor_72_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de330 (    0x20) __block_descriptor_64_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de350 (    0x20) __block_descriptor_45_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2de370 (    0x20) __block_descriptor_32_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de390 (    0x20) __block_descriptor_40_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de3b0 (    0x20) __block_descriptor_32_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de3d0 (    0x20) __block_descriptor_32_e10_^v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de3f0 (    0x20) __block_descriptor_48_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de410 (    0x20) __block_descriptor_40_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de430 (    0x20) __block_descriptor_33_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2de450 (    0x20) __block_descriptor_33_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de470 (    0x20) __block_descriptor_tmp.20176 [NameNList, MangledNameNList, NList] 
                0x00000001db2de490 (    0x20) __block_descriptor_tmp.9.20255 [NameNList, MangledNameNList, NList] 
                0x00000001db2de4b0 (    0x20) __block_descriptor_tmp.10.20249 [NameNList, MangledNameNList, NList] 
                0x00000001db2de4d0 (    0x20) __block_descriptor_tmp.13.20272 [NameNList, MangledNameNList, NList] 
                0x00000001db2de4f0 (    0x20) __block_descriptor_tmp.16.20226 [NameNList, MangledNameNList, NList] 
                0x00000001db2de510 (     0x8) kSLSDefaultKeyboardIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de518 (     0x8) kSLSidecarDevicesKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de520 (    0x20) __block_descriptor_tmp.21.20370 [NameNList, MangledNameNList, NList] 
                0x00000001db2de540 (    0x20) __block_descriptor_tmp.34.20348 [NameNList, MangledNameNList, NList] 
                0x00000001db2de560 (    0x20) __block_descriptor_tmp.35.20359 [NameNList, MangledNameNList, NList] 
                0x00000001db2de580 (    0x20) __block_descriptor_tmp.40.20346 [NameNList, MangledNameNList, NList] 
                0x00000001db2de5a0 (    0x20) __block_descriptor_tmp.57 [NameNList, MangledNameNList, NList] 
                0x00000001db2de5c0 (    0x20) __block_descriptor_tmp.60.20239 [NameNList, MangledNameNList, NList] 
                0x00000001db2de5e0 (    0x20) __block_descriptor_tmp.63.20238 [NameNList, MangledNameNList, NList] 
                0x00000001db2de600 (    0x20) __block_descriptor_tmp.69.20252 [NameNList, MangledNameNList, NList] 
                0x00000001db2de620 (    0x20) __block_descriptor_tmp.72 [NameNList, MangledNameNList, NList] 
                0x00000001db2de640 (    0x20) __block_descriptor_tmp.75.20214 [NameNList, MangledNameNList, NList] 
                0x00000001db2de660 (    0x20) __block_descriptor_tmp.78.20224 [NameNList, MangledNameNList, NList] 
                0x00000001db2de680 (    0x38) __block_descriptor_tmp.82.20321 [NameNList, MangledNameNList, NList] 
                0x00000001db2de6b8 (    0x20) __block_descriptor_tmp.20401 [NameNList, MangledNameNList, NList] 
                0x00000001db2de6d8 (    0x20) __block_descriptor_tmp.20481 [NameNList, MangledNameNList, NList] 
                0x00000001db2de6f8 (    0x20) __block_descriptor_tmp.1.20511 [NameNList, MangledNameNList, NList] 
                0x00000001db2de718 (    0x20) __block_descriptor_tmp.3.20514 [NameNList, MangledNameNList, NList] 
                0x00000001db2de738 (    0x20) __block_descriptor_tmp.11.20484 [NameNList, MangledNameNList, NList] 
                0x00000001db2de758 (    0x20) __block_descriptor_tmp.13.20493 [NameNList, MangledNameNList, NList] 
                0x00000001db2de778 (    0x20) __block_descriptor_tmp.17.20497 [NameNList, MangledNameNList, NList] 
                0x00000001db2de798 (    0x20) __block_descriptor_tmp.20.20500 [NameNList, MangledNameNList, NList] 
                0x00000001db2de7b8 (     0x8) kSLSDisplayControlRequestIdle [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de7c0 (    0x20) __block_descriptor_40_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2de7e0 (    0x20) __block_descriptor_40_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de800 (    0x50) __block_descriptor_48_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de850 (    0x38) __block_descriptor_56_e30_"NSObject<OS_xpc_object>"8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2de888 (    0x48) __block_descriptor_40_e30_"NSObject<OS_xpc_object>"8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2de8d0 (    0x38) __block_descriptor_32_e8_v12?0i8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de908 (    0x38) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2de940 (    0x50) mig_error_name [NameNList, MangledNameNList, NList] 
                0x00000001db2de990 (    0x38) bootstrap_error_name [NameNList, MangledNameNList, NList] 
                0x00000001db2de9c8 (    0x20) __block_descriptor_tmp.21617 [NameNList, MangledNameNList, NList] 
                0x00000001db2de9e8 (    0x20) __block_descriptor_tmp.19.21665 [NameNList, MangledNameNList, NList] 
                0x00000001db2dea08 (    0x20) __block_descriptor_tmp.25.21711 [NameNList, MangledNameNList, NList] 
                0x00000001db2dea28 (    0x20) __block_descriptor_tmp.32.21707 [NameNList, MangledNameNList, NList] 
                0x00000001db2dea48 (    0x20) __block_descriptor_tmp.56.21681 [NameNList, MangledNameNList, NList] 
                0x00000001db2dea68 (    0x20) __block_descriptor_tmp.21725 [NameNList, MangledNameNList, NList] 
                0x00000001db2dea88 (    0x38) __block_descriptor_tmp.2.21723 [NameNList, MangledNameNList, NList] 
                0x00000001db2deac0 (    0x78) __block_descriptor_tmp.21864 [NameNList, MangledNameNList, NList] 
                0x00000001db2deb38 (    0x20) __block_descriptor_tmp.21920 [NameNList, MangledNameNList, NList] 
                0x00000001db2deb58 (    0x30) kWSTCCServicePostEvent [NameNList, MangledNameNList, NList] 
                0x00000001db2deb88 (    0x28) kWSEntitlementAccessibilitySecureEvents [NameNList, MangledNameNList, NList] 
                0x00000001db2debb0 (    0x20) __block_descriptor_tmp.57.21950 [NameNList, MangledNameNList, NList] 
                0x00000001db2debd0 (    0x20) __block_descriptor_tmp.64.21966 [NameNList, MangledNameNList, NList] 
                0x00000001db2debf0 (    0x28) kWSEntitlementMonitorEvent [NameNList, MangledNameNList, NList] 
                0x00000001db2dec18 (    0x20) __block_descriptor_tmp.82.21998 [NameNList, MangledNameNList, NList] 
                0x00000001db2dec38 (    0x30) kWSTCCServiceListenEvent [NameNList, MangledNameNList, NList] 
                0x00000001db2dec68 (    0x20) __block_descriptor_tmp.89.22087 [NameNList, MangledNameNList, NList] 
                0x00000001db2dec88 (    0x20) __block_descriptor_tmp.93.22090 [NameNList, MangledNameNList, NList] 
                0x00000001db2deca8 (    0x20) __block_descriptor_tmp.97.22092 [NameNList, MangledNameNList, NList] 
                0x00000001db2decc8 (    0x20) __block_descriptor_tmp.98 [NameNList, MangledNameNList, NList] 
                0x00000001db2dece8 (    0x20) __block_descriptor_tmp.101.22094 [NameNList, MangledNameNList, NList] 
                0x00000001db2ded08 (    0x20) __block_descriptor_tmp.104.22095 [NameNList, MangledNameNList, NList] 
                0x00000001db2ded28 (    0x20) __block_descriptor_tmp.107.22098 [NameNList, MangledNameNList, NList] 
                0x00000001db2ded48 (    0x20) __block_descriptor_tmp.22103 [NameNList, MangledNameNList, NList] 
                0x00000001db2ded68 (    0x20) __block_descriptor_tmp.5.22105 [NameNList, MangledNameNList, NList] 
                0x00000001db2ded88 (    0x20) __block_descriptor_tmp.22180 [NameNList, MangledNameNList, NList] 
                0x00000001db2deda8 (    0x20) __block_descriptor_tmp.1.22148 [NameNList, MangledNameNList, NList] 
                0x00000001db2dedc8 (    0x78) functions [NameNList, MangledNameNList, NList] 
                0x00000001db2dee40 (    0x20) __block_descriptor_tmp.22251 [NameNList, MangledNameNList, NList] 
                0x00000001db2dee60 (    0x20) __block_descriptor_32_e15_i24?0r^v8r^v16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2dee80 (    0x20) __block_descriptor_tmp.22407 [NameNList, MangledNameNList, NList] 
                0x00000001db2deea0 (    0x20) __block_descriptor_tmp.4.22426 [NameNList, MangledNameNList, NList] 
                0x00000001db2deec0 (    0x20) __block_descriptor_tmp.7.22417 [NameNList, MangledNameNList, NList] 
                0x00000001db2deee0 (    0x20) __block_descriptor_tmp.11.22434 [NameNList, MangledNameNList, NList] 
                0x00000001db2def00 (    0x20) __block_descriptor_32_e47_v24?0"WMWindowTransaction"8"CAFenceHandle"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2def20 (    0x20) __block_descriptor_tmp.22855 [NameNList, MangledNameNList, NList] 
                0x00000001db2def40 (    0x20) __block_descriptor_tmp.6.23011 [NameNList, MangledNameNList, NList] 
                0x00000001db2def60 (    0x20) __block_descriptor_tmp.23188 [NameNList, MangledNameNList, NList] 
                0x00000001db2def80 (    0x20) __block_descriptor_tmp.9.23194 [NameNList, MangledNameNList, NList] 
                0x00000001db2defa0 (    0x20) __block_descriptor_tmp.10.23193 [NameNList, MangledNameNList, NList] 
                0x00000001db2defc0 (    0x20) __block_descriptor_tmp.11.23192 [NameNList, MangledNameNList, NList] 
                0x00000001db2defe0 (    0x20) __block_descriptor_tmp.12.23197 [NameNList, MangledNameNList, NList] 
                0x00000001db2df000 (    0x20) __block_descriptor_tmp.25.23167 [NameNList, MangledNameNList, NList] 
                0x00000001db2df020 (    0x20) __block_descriptor_tmp.23233 [NameNList, MangledNameNList, NList] 
                0x00000001db2df040 (    0x20) __block_descriptor_tmp.5.23231 [NameNList, MangledNameNList, NList] 
                0x00000001db2df060 (    0x20) __block_descriptor_tmp.6.23232 [NameNList, MangledNameNList, NList] 
                0x00000001db2df080 (    0x20) __block_descriptor_tmp.7.23223 [NameNList, MangledNameNList, NList] 
                0x00000001db2df0a0 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001db2df0c0 (   0x530) __DATA_CONST __objc_classlist
            0x00000001db2df5f0 (     0x8) __DATA_CONST __objc_catlist
            0x00000001db2df5f8 (   0x130) __DATA_CONST __objc_protolist
                0x00000001db2df5f8 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSharingSessionManagerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df600 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECAuthenticationKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df608 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECAuthenticationMessageSigningContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df610 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECAuthenticationMessageSignable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df618 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECAuthenticationMessageInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df620 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df628 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineSnapshotCollectionMetadata [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df630 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineUpdate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df638 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineSnapshotCollection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df640 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLXPCExportable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df648 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineServerSnapshot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df650 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLXPCImportable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df658 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLXPCConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df660 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df668 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineSessionProcessCollection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df670 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineProcess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df678 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLDataTimelineProcessWindows [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df680 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSBrightnessTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df688 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSBrightnessTimeoutsTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df690 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSBrightnessControl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df698 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSBrightnessPolicyTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6a0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSDisplayControlClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6a8 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSDisplayPowerControlClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6b0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSXPCServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6b8 (     0x8) _OBJC_LABEL_PROTOCOL_$_MTLResource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6c0 (     0x8) _OBJC_LABEL_PROTOCOL_$_MTLResourceSPI [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6c8 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECEventType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6d0 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECVersionedPID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6d8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6e0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6e8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6f0 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECAuthenticationMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df6f8 (     0x8) _OBJC_LABEL_PROTOCOL_$_ECEventAuthenticationMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df700 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSGUIClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df708 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSDisplayControlServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df710 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df718 (     0x8) _OBJC_LABEL_PROTOCOL_$_WMWindowDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2df720 (     0x8) _OBJC_LABEL_PROTOCOL_$_SLSWindowManagementBridgeDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001db2df728 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001db2df730 (  0x8608) __DATA_CONST __objc_const
                0x00000001db2df808 (   0x148) _OBJC_$_INSTANCE_VARIABLES_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001db2df950 (    0xa8) _OBJC_$_PROP_LIST_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001db2df9f8 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x00000001db2dfac0 (    0x68) _OBJC_$_PROP_LIST_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x00000001db2dfb28 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x00000001db2dfbb0 (    0x48) _OBJC_$_PROP_LIST_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x00000001db2dfbf8 (    0x48) _OBJC_METACLASS_RO_$_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001db2dfc40 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001db2dfcc8 (    0x48) _OBJC_$_PROP_LIST_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001db2dfd10 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2dfdb8 (    0x28) _OBJC_$_PROP_LIST_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2dfde0 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe18 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe28 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe40 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe60 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe68 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe80 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2dfe98 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2dfeb0 (   0x188) _OBJC_$_INSTANCE_VARIABLES_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2e0038 (    0xc8) _OBJC_$_PROP_LIST_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2e0100 (    0x48) _OBJC_METACLASS_RO_$_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e0148 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e01f0 (    0xc8) _OBJC_$_PROP_LIST_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e02b8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db2e0488 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db2e04a8 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db2e04f0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db2e0590 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSharingSessionManagerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e05a8 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_SLSharingSessionManagerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e0628 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSharingSessionManagerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e0650 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001db2e0668 (   0x128) _OBJC_$_INSTANCE_VARIABLES_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001db2e0790 (    0xd8) _OBJC_$_PROP_LIST_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001db2e0868 (    0x48) _OBJC_METACLASS_RO_$_SLWindowFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2e08b0 (   0x108) _OBJC_$_INSTANCE_VARIABLES_SLWindowFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2e09b8 (    0x88) _OBJC_$_PROP_LIST_SLWindowFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2e0a40 (    0x48) _OBJC_METACLASS_RO_$_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x00000001db2e0a88 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x00000001db2e0af0 (    0x38) _OBJC_$_PROP_LIST_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x00000001db2e0b28 (    0x48) _OBJC_METACLASS_RO_$_SLSharingSession [NameNList, MangledNameNList, NList] 
                0x00000001db2e0b70 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLSharingSession [NameNList, MangledNameNList, NList] 
                0x00000001db2e0bf8 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLSharingSessionManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e0c80 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECAuthenticationKey [NameNList, MangledNameNList, NList] 
                0x00000001db2e0cb8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_ECAuthenticationKey [NameNList, MangledNameNList, NList] 
                0x00000001db2e0cc8 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001db2e0ce8 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001db2e0d00 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001db2e0d28 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECAuthenticationMessageSigningContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e0d90 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_ECAuthenticationMessageSigningContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e0db0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e0dc8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e0df0 (    0x18) _OBJC_$_PROP_LIST_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e0e08 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0e40 (    0x28) _OBJC_$_PROP_LIST_ECVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0e68 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_ECVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0e78 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECAuthenticationMessageSignable [NameNList, MangledNameNList, NList] 
                0x00000001db2e0e98 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_ECAuthenticationMessageSignable [NameNList, MangledNameNList, NList] 
                0x00000001db2e0ea0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001db2e0ec0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001db2e0ec8 (    0x30) _OBJC_CLASS_PROTOCOLS_$_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0ef8 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0f10 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0f58 (    0x28) _OBJC_$_PROP_LIST_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e0f80 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e0fe8 (    0x48) _OBJC_$_PROP_LIST_ECEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1030 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_ECEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1050 (    0x30) _OBJC_CLASS_PROTOCOLS_$_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1080 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1098 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1100 (    0x48) _OBJC_$_PROP_LIST_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e1148 (    0x20) _OBJC_$_PROTOCOL_REFS_ECAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1168 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e11e8 (    0x48) _OBJC_$_PROP_LIST_ECAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1230 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_ECAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1258 (    0x18) _OBJC_$_PROTOCOL_REFS_ECEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1270 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e12c0 (    0x38) _OBJC_$_PROP_LIST_ECEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e12f8 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_ECEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1310 (    0x20) _OBJC_$_PROTOCOL_REFS_ECAuthenticationMessageInternal [NameNList, MangledNameNList, NList] 
                0x00000001db2e1330 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ECAuthenticationMessageInternal [NameNList, MangledNameNList, NList] 
                0x00000001db2e1350 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_ECAuthenticationMessageInternal [NameNList, MangledNameNList, NList] 
                0x00000001db2e1370 (    0x18) _OBJC_$_PROP_LIST_ECAuthenticationMessageInternal [NameNList, MangledNameNList, NList] 
                0x00000001db2e1388 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_ECAuthenticationMessageInternal [NameNList, MangledNameNList, NList] 
                0x00000001db2e1398 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e13b8 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e13d0 (   0x108) _OBJC_$_INSTANCE_VARIABLES_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e14d8 (    0x88) _OBJC_$_PROP_LIST_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e1560 (    0x48) _OBJC_$_INSTANCE_VARIABLES_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x00000001db2e15a8 (    0x48) _OBJC_METACLASS_RO_$_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001db2e15f0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001db2e1638 (    0x28) _OBJC_$_PROP_LIST_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001db2e1660 (    0x48) _OBJC_METACLASS_RO_$_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e16a8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e16f0 (    0x48) _OBJC_METACLASS_RO_$_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e1738 (    0x88) _OBJC_$_INSTANCE_VARIABLES_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e17c0 (    0x48) _OBJC_METACLASS_RO_$_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001db2e1808 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001db2e1830 (    0x18) _OBJC_$_PROP_LIST_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001db2e1848 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x00000001db2e1930 (    0x78) _OBJC_$_PROP_LIST_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x00000001db2e19a8 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e19f8 (    0x28) _OBJC_$_PROP_LIST_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1a20 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1a38 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1a50 (   0x128) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1b78 (    0x98) _OBJC_$_PROP_LIST_SLDataTimelineConnection.150 [NameNList, MangledNameNList, NList] 
                0x00000001db2e1c10 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineSnapshotCollectionMetadata [NameNList, MangledNameNList, NList] 
                0x00000001db2e1c90 (    0x58) _OBJC_$_PROP_LIST_SLDataTimelineSnapshotCollectionMetadata [NameNList, MangledNameNList, NList] 
                0x00000001db2e1ce8 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineSnapshotCollectionMetadata [NameNList, MangledNameNList, NList] 
                0x00000001db2e1d10 (    0x18) _OBJC_$_PROTOCOL_REFS_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1d28 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1d78 (    0x28) _OBJC_$_PROP_LIST_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1da0 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1db8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1dd0 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e1e58 (    0x98) _OBJC_$_PROP_LIST_SLDataTimelineUpdate.193 [NameNList, MangledNameNList, NList] 
                0x00000001db2e1ef0 (    0x18) _OBJC_$_PROTOCOL_REFS_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f08 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f40 (    0x18) _OBJC_$_PROP_LIST_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f58 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f68 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLXPCExportable [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f88 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SLXPCExportable [NameNList, MangledNameNList, NList] 
                0x00000001db2e1f90 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1fb0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e1fd8 (    0x78) _OBJC_$_PROP_LIST_SLDataTimelineSnapshotCollection.225 [NameNList, MangledNameNList, NList] 
                0x00000001db2e2050 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineServerSnapshot [NameNList, MangledNameNList, NList] 
                0x00000001db2e20b8 (    0x38) _OBJC_$_PROP_LIST_SLDataTimelineServerSnapshot [NameNList, MangledNameNList, NList] 
                0x00000001db2e20f0 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineServerSnapshot [NameNList, MangledNameNList, NList] 
                0x00000001db2e2110 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLXPCImportable [NameNList, MangledNameNList, NList] 
                0x00000001db2e2130 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_SLXPCImportable [NameNList, MangledNameNList, NList] 
                0x00000001db2e2150 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_SLXPCImportable [NameNList, MangledNameNList, NList] 
                0x00000001db2e2160 (    0x20) _OBJC_$_PROTOCOL_REFS_SLXPCConvertible [NameNList, MangledNameNList, NList] 
                0x00000001db2e2180 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e21a0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2208 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2250 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineSession [NameNList, MangledNameNList, NList] 
                0x00000001db2e22b8 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineSession [NameNList, MangledNameNList, NList] 
                0x00000001db2e2300 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineSession [NameNList, MangledNameNList, NList] 
                0x00000001db2e2320 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2340 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2388 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e23d0 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e23f0 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2438 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineSessionProcessCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e24b8 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineSessionProcessCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e2500 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineSessionProcessCollection [NameNList, MangledNameNList, NList] 
                0x00000001db2e2528 (    0x28) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2550 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e25d8 (    0x98) _OBJC_$_PROP_LIST_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2670 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineProcess [NameNList, MangledNameNList, NList] 
                0x00000001db2e26a8 (    0x28) _OBJC_$_PROP_LIST_SLDataTimelineProcess [NameNList, MangledNameNList, NList] 
                0x00000001db2e26d0 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineProcess [NameNList, MangledNameNList, NList] 
                0x00000001db2e26e0 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLDataTimelineProcessWindows [NameNList, MangledNameNList, NList] 
                0x00000001db2e2748 (    0x48) _OBJC_$_PROP_LIST_SLDataTimelineProcessWindows [NameNList, MangledNameNList, NList] 
                0x00000001db2e2790 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLDataTimelineProcessWindows [NameNList, MangledNameNList, NList] 
                0x00000001db2e27b0 (    0x28) _OBJC_CLASS_PROTOCOLS_$_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e27d8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2820 (    0x68) _OBJC_$_PROP_LIST_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001db2e2888 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSBrightnessTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e28a0 (    0xe0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSBrightnessTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e2980 (    0x48) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSBrightnessTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e29c8 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSBrightnessTimeoutsTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e29e0 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSBrightnessTimeoutsTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e2a48 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSBrightnessTimeoutsTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e2a68 (    0x28) _OBJC_$_PROTOCOL_REFS_SLSBrightnessControl [NameNList, MangledNameNList, NList] 
                0x00000001db2e2a90 (   0x248) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSBrightnessControl [NameNList, MangledNameNList, NList] 
                0x00000001db2e2cd8 (    0xe8) _OBJC_$_PROP_LIST_SLSBrightnessControl [NameNList, MangledNameNList, NList] 
                0x00000001db2e2dc0 (    0xc0) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSBrightnessControl [NameNList, MangledNameNList, NList] 
                0x00000001db2e2e80 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001db2e2e98 (    0x48) _OBJC_METACLASS_RO_$_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001db2e2ee0 (   0x288) _OBJC_$_INSTANCE_VARIABLES_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001db2e3168 (   0x138) _OBJC_$_PROP_LIST_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001db2e32a0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSDisplayControlServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e32c0 (    0x18) _OBJC_$_PROP_LIST_SLSDisplayControlServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e32d8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSDisplayControlServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e32e0 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSBrightnessPolicyTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e32f8 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSBrightnessPolicyTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e3360 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSBrightnessPolicyTransaction [NameNList, MangledNameNList, NList] 
                0x00000001db2e3380 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e33a0 (    0x48) _OBJC_METACLASS_RO_$_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e33e8 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e3470 (    0x78) _OBJC_$_PROP_LIST_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e34e8 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e35d0 (    0x78) _OBJC_$_PROP_LIST_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e3648 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x00000001db2e3670 (    0x28) _OBJC_$_PROP_LIST_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x00000001db2e3698 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e36e0 (    0x28) _OBJC_$_PROP_LIST_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e3708 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x00000001db2e3770 (    0x48) _OBJC_$_PROP_LIST_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x00000001db2e37b8 (    0x48) _OBJC_METACLASS_RO_$_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e3800 (   0x108) _OBJC_$_INSTANCE_VARIABLES_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e3908 (    0x88) _OBJC_$_PROP_LIST_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e3990 (    0x48) _OBJC_METACLASS_RO_$_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e39d8 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e3a80 (    0x68) _OBJC_$_PROP_LIST_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x00000001db2e3ae8 (    0x48) _OBJC_METACLASS_RO_$_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x00000001db2e3b30 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x00000001db2e3bd8 (    0x68) _OBJC_$_PROP_LIST_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x00000001db2e3c40 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3c68 (    0x18) _OBJC_$_PROP_LIST_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3c80 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3ca8 (    0x18) _OBJC_$_PROP_LIST_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3cc0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3ce8 (    0x18) _OBJC_$_PROP_LIST_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3d00 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3d28 (    0x18) _OBJC_$_PROP_LIST_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db2e3d40 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e3dc8 (    0x48) _OBJC_$_PROP_LIST_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db2e3e10 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001db2e3e38 (    0x28) _OBJC_$_PROP_LIST_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001db2e3e60 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e3f08 (    0x58) _OBJC_$_PROP_LIST_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x00000001db2e3f60 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSDisplayControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e3f78 (    0x98) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSDisplayControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4010 (    0x38) _OBJC_$_PROP_LIST_SLSDisplayControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4048 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSDisplayControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4078 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e4090 (    0x48) _OBJC_METACLASS_RO_$_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e40d8 (    0x88) _OBJC_$_INSTANCE_VARIABLES_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e4160 (    0x88) _OBJC_$_PROP_LIST_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e41e8 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSDisplayPowerControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4200 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSDisplayPowerControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4268 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSDisplayPowerControlClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4288 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e42a8 (    0x48) _OBJC_METACLASS_RO_$_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e42f0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e4318 (    0x58) _OBJC_$_PROP_LIST_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e4370 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSXPCServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4388 (   0x170) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSXPCServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e44f8 (    0xa8) _OBJC_$_PROP_LIST_SLSXPCServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e45a0 (    0x78) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSXPCServiceProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e4618 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001db2e4630 (    0x48) _OBJC_METACLASS_RO_$_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001db2e4678 (   0x148) _OBJC_$_INSTANCE_VARIABLES_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001db2e47c0 (    0xe8) _OBJC_$_PROP_LIST_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001db2e48a8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e48c0 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e48d8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4900 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4918 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4940 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4958 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4980 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4998 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e49c0 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e49d8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a00 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a18 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a40 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a58 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a80 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4a98 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ac0 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ad8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4b00 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4b48 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4b70 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4b98 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4bb0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x00000001db2e4bd8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x00000001db2e4bf0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4c18 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4c30 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4c58 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4c70 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4c98 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4cb0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4cf8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4d20 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4d48 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4d60 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4d88 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4da0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4e08 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4e40 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4e68 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4e80 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ea8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ec0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSSynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ed8 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSSynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ef0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSAsynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4f08 (    0x18) _OBJC_$_CLASS_PROP_LIST_SLSAsynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4f20 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4f68 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4f90 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4fb8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4fd0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e4ff8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5010 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5058 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5080 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e50a8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e50c0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e50e8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5100 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5148 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5170 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e51b8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e51e0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5248 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5280 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e52a8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e52c0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e52e8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5300 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5328 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5340 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5388 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e53b0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e53d8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e53f0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5438 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5460 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5488 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e54a0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e54e8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5510 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5538 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5550 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5578 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5590 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e55d8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5600 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5628 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5640 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5688 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e56b0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e56f8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5720 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5768 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5790 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e57b8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e57d0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e57f8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5810 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5858 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5870 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5898 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e58b0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5918 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5950 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5978 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5990 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e59d8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5a00 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5a28 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5a40 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5a88 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5ab0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5ad8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5af0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5b18 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5b30 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5b78 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5ba0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5be8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5c10 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5c38 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5c50 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5c78 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5c90 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5cf8 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5d30 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5d58 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5d70 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5d98 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5db0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5dd8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5df0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5e18 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5e30 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5e58 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5e70 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5eb8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5ee0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5f08 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5f20 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5f68 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5f90 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e5fd8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6000 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6068 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e60a0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e60c8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e60e0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6108 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6120 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6168 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6190 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e61d8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6200 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6228 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6240 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6288 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e62b0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e62d8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e62f0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6358 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6390 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e63d8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6400 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6428 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6440 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6468 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6480 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e64e8 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6520 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e65e8 (    0x68) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6650 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6678 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6690 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e66d8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6700 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6748 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6770 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e67b8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e67e0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6828 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6850 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e68f8 (    0x58) _OBJC_$_PROP_LIST_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6950 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6998 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e69c0 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6a88 (    0x68) _OBJC_$_PROP_LIST_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6af0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6b58 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6b90 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6bd8 (    0x28) _OBJC_$_PROP_LIST_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6c00 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6c68 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6ca0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6cc8 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6ce0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6d08 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6d20 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6d48 (    0x18) _OBJC_$_PROP_LIST_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6d60 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6e08 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6e40 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6ee8 (    0x38) _OBJC_$_PROP_LIST_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db2e6f20 (   0x148) _OBJC_$_INSTANCE_VARIABLES_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x00000001db2e7068 (   0x108) _OBJC_$_INSTANCE_VARIABLES_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x00000001db2e7170 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001db2e7188 (   0x140) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001db2e72c8 (    0x98) _OBJC_$_PROP_LIST_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001db2e7360 (    0x68) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001db2e73c8 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLResourceSPI [NameNList, MangledNameNList, NList] 
                0x00000001db2e73e0 (   0x128) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLResourceSPI [NameNList, MangledNameNList, NList] 
                0x00000001db2e7508 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_MTLResourceSPI [NameNList, MangledNameNList, NList] 
                0x00000001db2e7528 (    0x48) _OBJC_$_PROP_LIST_MTLResourceSPI [NameNList, MangledNameNList, NList] 
                0x00000001db2e7570 (    0x68) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLResourceSPI [NameNList, MangledNameNList, NList] 
                0x00000001db2e75d8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e75f0 (    0x48) _OBJC_METACLASS_RO_$_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e7638 (    0x48) _OBJC_$_PROP_LIST_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001db2e7680 (    0x18) _OBJC_CLASS_PROTOCOLS_$_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e7698 (    0x48) _OBJC_METACLASS_RO_$_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e76e0 (    0x28) _OBJC_$_PROP_LIST_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db2e7708 (    0x18) _OBJC_CLASS_PROTOCOLS_$_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e7720 (    0x18) _OBJC_$_CLASS_PROP_LIST_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e7738 (    0x28) _OBJC_$_INSTANCE_VARIABLES_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e7760 (    0x88) _OBJC_$_PROP_LIST_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db2e77e8 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSGUIClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e7800 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSGUIClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e7850 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_SLSGUIClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e7870 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSGUIClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db2e7890 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e78b0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e78d8 (    0x58) _OBJC_$_PROP_LIST_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001db2e7930 (    0x48) _OBJC_METACLASS_RO_$_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001db2e7978 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001db2e79c0 (    0x28) _OBJC_$_PROP_LIST_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001db2e79e8 (    0x18) _OBJC_$_PROTOCOL_REFS_WMWindowDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7a00 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_WMWindowDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7a20 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_WMWindowDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7a40 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_WMWindowDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7a50 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001db2e7a68 (    0x48) _OBJC_METACLASS_RO_$_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001db2e7ab0 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001db2e7b78 (    0x48) _OBJC_$_PROP_LIST_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001db2e7bc0 (    0x18) _OBJC_$_PROTOCOL_REFS_SLSWindowManagementBridgeDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7bd8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SLSWindowManagementBridgeDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7bf8 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_SLSWindowManagementBridgeDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7c48 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_SLSWindowManagementBridgeDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db2e7c68 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001db2e7c80 (    0x48) _OBJC_METACLASS_RO_$_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001db2e7cc8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001db2e7cf0 (    0x48) _OBJC_$_PROP_LIST_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
            0x00000001db2e7d38 (  0x2ce0) __DATA_CONST __objc_selrefs
            0x00000001db2eaa18 (   0xc68) __DATA_CONST __objc_arraydata
                0x00000001db2eaa18 (    0x38) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x00000001db2eaa50 (    0x38) _unnamed_array_storage.646 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaa88 (    0x38) _unnamed_array_storage.659 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaac0 (    0x38) _unnamed_array_storage.660 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaaf8 (    0x28) _unnamed_array_storage.1178 [NameNList, MangledNameNList, NList] 
                0x00000001db2eab20 (    0x28) _unnamed_array_storage.1179 [NameNList, MangledNameNList, NList] 
                0x00000001db2eab48 (    0x10) _unnamed_array_storage.11831 [NameNList, MangledNameNList, NList] 
                0x00000001db2eab58 (    0x10) _unnamed_array_storage.9 [NameNList, MangledNameNList, NList] 
                0x00000001db2eab68 (    0x30) _unnamed_array_storage.47 [NameNList, MangledNameNList, NList] 
                0x00000001db2eab98 (    0x30) _unnamed_array_storage.48 [NameNList, MangledNameNList, NList] 
                0x00000001db2eabc8 (    0x30) _unnamed_array_storage.62 [NameNList, MangledNameNList, NList] 
                0x00000001db2eabf8 (    0x30) _unnamed_array_storage.63 [NameNList, MangledNameNList, NList] 
                0x00000001db2eac28 (    0x30) _unnamed_array_storage.71 [NameNList, MangledNameNList, NList] 
                0x00000001db2eac58 (    0x30) _unnamed_array_storage.72 [NameNList, MangledNameNList, NList] 
                0x00000001db2eac88 (    0x30) _unnamed_array_storage.90 [NameNList, MangledNameNList, NList] 
                0x00000001db2eacb8 (    0x30) _unnamed_array_storage.91 [NameNList, MangledNameNList, NList] 
                0x00000001db2eace8 (    0x20) _unnamed_array_storage.94 [NameNList, MangledNameNList, NList] 
                0x00000001db2ead08 (    0x20) _unnamed_array_storage.95 [NameNList, MangledNameNList, NList] 
                0x00000001db2ead28 (    0x70) _unnamed_array_storage.151 [NameNList, MangledNameNList, NList] 
                0x00000001db2ead98 (    0x70) _unnamed_array_storage.152 [NameNList, MangledNameNList, NList] 
                0x00000001db2eae08 (    0x78) _unnamed_array_storage.168 [NameNList, MangledNameNList, NList] 
                0x00000001db2eae80 (    0x78) _unnamed_array_storage.169 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaef8 (    0x70) _unnamed_array_storage.180 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaf68 (    0x70) _unnamed_array_storage.181 [NameNList, MangledNameNList, NList] 
                0x00000001db2eafd8 (    0x18) _unnamed_array_storage.184 [NameNList, MangledNameNList, NList] 
                0x00000001db2eaff0 (    0x18) _unnamed_array_storage.185 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb008 (    0x10) _unnamed_array_storage.199 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb018 (    0x10) _unnamed_array_storage.200 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb028 (    0x20) _unnamed_array_storage.219 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb048 (    0x20) _unnamed_array_storage.220 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb068 (    0x10) _unnamed_array_storage.229 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb078 (    0x10) _unnamed_array_storage.230 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb088 (    0x10) _unnamed_array_storage.239 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb098 (    0x10) _unnamed_array_storage.240 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb0a8 (    0x30) _unnamed_array_storage.266 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb0d8 (    0x30) _unnamed_array_storage.267 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb108 (    0x20) _unnamed_array_storage.280 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb128 (    0x20) _unnamed_array_storage.281 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb148 (    0x20) _unnamed_array_storage.299 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb168 (    0x20) _unnamed_array_storage.300 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb188 (    0x10) _unnamed_array_storage.319 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb198 (    0x10) _unnamed_array_storage.320 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb1a8 (    0x10) _unnamed_array_storage.330 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb1b8 (    0x10) _unnamed_array_storage.331 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb1c8 (    0x10) _unnamed_array_storage.341 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb1d8 (    0x10) _unnamed_array_storage.342 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb1e8 (    0x18) _unnamed_array_storage.345 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb200 (    0x18) _unnamed_array_storage.346 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb218 (    0x20) _unnamed_array_storage.370 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb238 (    0x20) _unnamed_array_storage.371 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb258 (    0x60) _unnamed_array_storage.374 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb2b8 (    0x60) _unnamed_array_storage.375 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb318 (    0x10) _unnamed_array_storage.391 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb328 (    0x10) _unnamed_array_storage.392 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb338 (    0x20) _unnamed_array_storage.411 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb358 (    0x20) _unnamed_array_storage.412 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb378 (    0x10) _unnamed_array_storage.415 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb388 (    0x10) _unnamed_array_storage.416 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb398 (     0x8) _unnamed_array_storage.419 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb3a0 (     0x8) _unnamed_array_storage.420 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb3a8 (    0x20) _unnamed_array_storage.424 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb3c8 (    0x20) _unnamed_array_storage.425 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb3e8 (    0x10) _unnamed_array_storage.12426 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb3f8 (    0x10) _unnamed_array_storage.210 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb408 (    0x28) _unnamed_array_storage.19292 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb430 (    0xc0) _unnamed_array_storage.429 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb4f0 (    0x20) _unnamed_array_storage.436 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb510 (    0xe8) _unnamed_array_storage.439 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb5f8 (    0x18) _unnamed_array_storage.536 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb610 (    0x58) _unnamed_array_storage.539 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb668 (    0x18) _unnamed_array_storage.542 [NameNList, MangledNameNList, NList] 
        0x00000001db2eb680 ( 0x30238) __AUTH_CONST SEGMENT
            0x00000001db2eb680 ( 0x1a770) __AUTH_CONST __const
                0x00000001db2eb680 (    0x30) __block_descriptor_40_e8_32o_e12_i20?0^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb6b0 (    0x30) __block_descriptor_48_e8_32b40r_e55_v36?0i8Q12^{__IOSurface=}20^{CGDisplayStreamUpdate=}28l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb6e0 (    0x30) __block_descriptor_48_e8_32o40r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb710 (    0x30) __block_descriptor_49_e8_32o40r_e76_v44?0^{CGDisplayStream=}8i16Q20^{__IOSurface=}28^{CGDisplayStreamUpdate=}36l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb740 (    0x30) __block_descriptor_40_e8_32o_e38_B32?0"NSDictionary"8"NSString"16#24l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb770 (    0x30) __block_descriptor_50_e8_32o40r_e12_i20?0^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2eb7a0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db2eb7c0 (    0x20) __block_literal_global.204 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb7e0 (    0x20) __block_literal_global.263 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb800 (    0x30) __block_descriptor_tmp.25 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb830 (    0x48) vtable for std::__1::__function::__func<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0, std::__1::allocator<WS::Displays::WSHIDDisplayEventListener::get_hid_orientation_sensor(__CFUUID const*)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2eb878 (    0x30) __block_descriptor_tmp.1 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb8a8 (    0x30) __block_descriptor_tmp.3 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb8d8 (    0x20) __block_literal_global.571 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb8f8 (    0x20) vtable for CFMutableDictionaryRefWrap [NameNList, MangledNameNList, NList] 
                0x00000001db2eb918 (    0x20) vtable for CFRefWrap<__CFDictionary*> [NameNList, MangledNameNList, NList] 
                0x00000001db2eb938 (    0x20) vtable for CFMutableSetRefWrap [NameNList, MangledNameNList, NList] 
                0x00000001db2eb958 (    0x20) vtable for CFRefWrap<__CFSet*> [NameNList, MangledNameNList, NList] 
                0x00000001db2eb978 (    0x20) __block_literal_global.94 [NameNList, MangledNameNList, NList] 
                0x00000001db2eb998 (    0x20) vtable for CFNumberRefWrap [NameNList, MangledNameNList, NList] 
                0x00000001db2eb9b8 (    0x20) vtable for CFRefWrap<__CFNumber const*> [NameNList, MangledNameNList, NList] 
                0x00000001db2eb9d8 (    0x20) vtable for CFBooleanRefWrap [NameNList, MangledNameNList, NList] 
                0x00000001db2eb9f8 (    0x20) vtable for CFRefWrap<__CFBoolean const*> [NameNList, MangledNameNList, NList] 
                0x00000001db2eba18 (   0x140) vtable for (anonymous namespace)::ServerInterpolationHarness [NameNList, MangledNameNList, NList] 
                0x00000001db2ebb58 (    0x20) __block_literal_global.99 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebb78 (    0x30) __block_descriptor_tmp.111 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebba8 (    0x20) __block_literal_global.115 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebbc8 (    0x20) __block_literal_global.293 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebbe8 (    0x20) __block_literal_global.297 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebc08 (    0x20) vtable for CFRefWrap<void const*> [NameNList, MangledNameNList, NList] 
                0x00000001db2ebc28 (    0x20) __block_literal_global.314 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebc48 (    0x30) __block_descriptor_tmp.324 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebc78 (    0x20) __block_literal_global.330 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebc98 (    0x20) __block_literal_global.362 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebcb8 (    0x48) vtable for std::__1::__function::__func<EventTranslator::updateModifiers()::$_0, std::__1::allocator<EventTranslator::updateModifiers()::$_0>, void (void const*, void const*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ebd00 (    0x48) vtable for std::__1::__function::__func<EventTranslator::updateModifiers()::$_1, std::__1::allocator<EventTranslator::updateModifiers()::$_1>, void (void const*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ebd48 (    0x38) vtable for std::__1::__shared_ptr_pointer<unsigned char*, std::__1::default_delete<unsigned char []>, std::__1::allocator<unsigned char>> [NameNList, MangledNameNList, NList] 
                0x00000001db2ebd80 (    0x20) __block_literal_global.573 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebda0 (    0x60) __IOHIDKeyboardEventTranslatorClass [NameNList, MangledNameNList, NList] 
                0x00000001db2ebe00 (    0x20) __block_literal_global.601 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebe20 (    0x20) __block_literal_global.6 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebe40 (    0x20) __block_literal_global.40 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebe60 (    0x30) __block_descriptor_48_e8_32r_e12_i24?0^v8Q16l [NameNList, MangledNameNList, NList] 
                0x00000001db2ebe90 (    0x20) __block_literal_global.807 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebeb0 (    0x20) __block_literal_global.821 [NameNList, MangledNameNList, NList] 
                0x00000001db2ebed0 (    0x60) __IOHIDPointerEventTranslatorClass [NameNList, MangledNameNList, NList] 
                0x00000001db2ebf30 (   0x6b8) WSCDInitializeVtable.callbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ec5e8 (    0x20) __block_literal_global.936 [NameNList, MangledNameNList, NList] 
                0x00000001db2ec608 (    0x60) SLSHMDGetTypeID::hmd_class [NameNList, MangledNameNList, NList] 
                0x00000001db2ec668 (    0x20) __block_literal_global.48 [NameNList, MangledNameNList, NList] 
                0x00000001db2ec688 (    0x48) vtable for std::__1::__function::__func<copy_mode_list(_SLSHMD*)::$_24, std::__1::allocator<copy_mode_list(_SLSHMD*)::$_24>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec6d0 (    0x60) SLSHMDDrawableGetTypeID()::drawable_class [NameNList, MangledNameNList, NList] 
                0x00000001db2ec730 (    0x20) __block_literal_global.87 [NameNList, MangledNameNList, NList] 
                0x00000001db2ec750 (    0x48) vtable for std::__1::__function::__func<SLSHMDAcquire::$_0, std::__1::allocator<SLSHMDAcquire::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec798 (    0x48) vtable for std::__1::__function::__func<SLSHMDRelinquish::$_1, std::__1::allocator<SLSHMDRelinquish::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec7e0 (    0x48) vtable for std::__1::__function::__func<SLSHMDGetRefreshTiming::$_2, std::__1::allocator<SLSHMDGetRefreshTiming::$_2>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec828 (    0x48) vtable for std::__1::__function::__func<SLSHMDCopyAudioSelector::$_3, std::__1::allocator<SLSHMDCopyAudioSelector::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec870 (    0x48) vtable for std::__1::__function::__func<SLSHMDCopyDisplayInfoDictionary::$_4, std::__1::allocator<SLSHMDCopyDisplayInfoDictionary::$_4>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec8b8 (    0x48) vtable for std::__1::__function::__func<SLSHMDConfigureDisplayQueue::$_5, std::__1::allocator<SLSHMDConfigureDisplayQueue::$_5>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec900 (    0x48) vtable for std::__1::__function::__func<SLSHMDCopyDisplayQueueConfiguration::$_6, std::__1::allocator<SLSHMDCopyDisplayQueueConfiguration::$_6>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec948 (    0x48) vtable for std::__1::__function::__func<SLSHMDCopyCapabilities::$_7, std::__1::allocator<SLSHMDCopyCapabilities::$_7>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec990 (    0x48) vtable for std::__1::__function::__func<SLSHMDGetAcceleratorPort::$_8, std::__1::allocator<SLSHMDGetAcceleratorPort::$_8>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ec9d8 (    0x48) vtable for std::__1::__function::__func<SLSHMDSetWorkInterval::$_9, std::__1::allocator<SLSHMDSetWorkInterval::$_9>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2eca20 (    0x48) vtable for std::__1::__function::__func<SLSHMDGetDrawable::$_10, std::__1::allocator<SLSHMDGetDrawable::$_10>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2eca68 (    0x48) vtable for std::__1::__function::__func<SLSHMDDrawablePresentWithTime::$_11, std::__1::allocator<SLSHMDDrawablePresentWithTime::$_11>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecab0 (    0x48) vtable for std::__1::__function::__func<SLSHMDDrawableGetIOSurface::$_12, std::__1::allocator<SLSHMDDrawableGetIOSurface::$_12>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecaf8 (    0x48) vtable for std::__1::__function::__func<SLSHMDSetEnabled::$_13, std::__1::allocator<SLSHMDSetEnabled::$_13>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecb40 (    0x48) vtable for std::__1::__function::__func<SLSHMDEnabled::$_14, std::__1::allocator<SLSHMDEnabled::$_14>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecb88 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15, std::__1::allocator<SLSHMDModeConfigurationCopyCurrentCGSDisplayMode::$_15>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecbd0 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationTransactionInitialize::$_16, std::__1::allocator<SLSHMDModeConfigurationTransactionInitialize::$_16>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecc18 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17, std::__1::allocator<SLSHMDModeConfigurationTransactionSetCGSDisplayMode::$_17>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecc60 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationTransactionValidate::$_18, std::__1::allocator<SLSHMDModeConfigurationTransactionValidate::$_18>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecca8 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationTransactionCommit::$_19, std::__1::allocator<SLSHMDModeConfigurationTransactionCommit::$_19>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2eccf0 (    0x48) vtable for std::__1::__function::__func<SLSHMDModeConfigurationTransactionAbort::$_20, std::__1::allocator<SLSHMDModeConfigurationTransactionAbort::$_20>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecd38 (    0x48) vtable for std::__1::__function::__func<SLSHMDIsAvailable::$_21, std::__1::allocator<SLSHMDIsAvailable::$_21>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecd80 (    0x48) vtable for std::__1::__function::__func<SLSHMDIsAwake::$_22, std::__1::allocator<SLSHMDIsAwake::$_22>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecdc8 (    0x48) vtable for std::__1::__function::__func<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23, std::__1::allocator<HMDClientSession::HMDDidReconfigure(unsigned int)::$_23>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ece10 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0, std::__1::allocator<WS::Displays::DisplaySet::active_displays(unsigned int) const::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ece58 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1, std::__1::allocator<WS::Displays::DisplaySet::potentially_active_displays(unsigned int) const::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecea0 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2, std::__1::allocator<WS::Displays::DisplaySet::online_displays(unsigned int) const::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecee8 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3, std::__1::allocator<WS::Displays::DisplaySet::live_displays(unsigned int) const::$_3>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecf30 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4, std::__1::allocator<WS::Displays::DisplaySet::online_enabled_displays(unsigned int) const::$_4>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecf78 (    0x48) vtable for std::__1::__function::__func<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5, std::__1::allocator<WS::Displays::DisplaySet::head_mounted_displays(unsigned int) const::$_5>, bool (std::__1::shared_ptr<WS::Displays::Display> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ecfc0 (    0x48) vtable for std::__1::__function::__func<Payload::update(Compositor*)::$_0, std::__1::allocator<Payload::update(Compositor*)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed008 (    0x20) __block_literal_global.1158 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed028 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Surface, std::__1::allocator<WS::Surface>> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed060 (    0x48) vtable for std::__1::__function::__func<WS::SurfacePool::rebalance()::$_6, std::__1::allocator<WS::SurfacePool::rebalance()::$_6>, bool (std::__1::shared_ptr<WS::Surface> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed0a8 (    0x48) vtable for std::__1::__function::__func<WS::SurfacePool::Collect()::$_7, std::__1::allocator<WS::SurfacePool::Collect()::$_7>, bool (std::__1::shared_ptr<WS::Surface> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed0f0 (    0x48) vtable for std::__1::__function::__func<WS::SurfacePool::Collect()::$_8, std::__1::allocator<WS::SurfacePool::Collect()::$_8>, bool (std::__1::shared_ptr<WS::Surface> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed138 (    0x30) __block_descriptor_tmp.4.1233 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed168 (    0x20) __block_literal_global.1225 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed188 (    0x20) __block_literal_global.1295 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed1a8 (    0x30) __block_descriptor_tmp.3.1336 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed1d8 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::InterprocessSerialSemaphore, std::__1::allocator<(anonymous namespace)::InterprocessSerialSemaphore>> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed210 (    0x30) __block_descriptor_tmp.14 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed240 (    0x38) vtable for std::__1::__shared_ptr_emplace<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>, std::__1::allocator<std::__1::atomic<(anonymous namespace)::SemaphoreSignalProgress>>> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed278 (    0x58) vtable for WS::Displays::BuiltinPresetInterface [NameNList, MangledNameNList, NList] 
                0x00000001db2ed2d0 (    0x30) vtable for WS::Displays::BuiltinUserAdjustmentInterface [NameNList, MangledNameNList, NList] 
                0x00000001db2ed300 (    0x60) CGXCursorInstanceGetTypeID.class [NameNList, MangledNameNList, NList] 
                0x00000001db2ed360 (    0x20) __block_literal_global.5 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed380 (    0x20) __block_literal_global.1545 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed3a0 (    0x20) __block_literal_global.1668 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed3c0 (    0x20) __block_literal_global.2 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed3e0 (    0x30) __block_descriptor_48_e8_32r_e27_v24?0^{PKGDisplay=}8i16i20l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed410 (    0x20) __block_literal_global.11 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed430 (    0x20) __block_literal_global.15 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed450 (    0x20) __block_literal_global.19 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed470 (    0x20) __block_literal_global.34 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed490 (    0x20) __block_literal_global.43 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed4b0 (    0x30) __block_descriptor_49_e8_32b_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed4e0 (    0x30) __block_descriptor_40_e8_32r_e145_v16?0^{?=I{CGRect={CGPoint=dd}{CGSize=dd}}B{CGRect={CGPoint=dd}{CGSize=dd}}dd^{PKGAnimation}{?=CCCCCCCCCCCCCCCC}Idd^v^v^{PKGAnimation}dddi}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed510 (    0x30) __block_descriptor_60_e8_32r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed540 (    0x30) __block_descriptor_40_e8_32b_e15_v28?0^v8d16B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed570 (    0x30) __block_descriptor_48_e8_32b_e12_v20?0^v8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed5a0 (    0x30) __block_descriptor_56_e8_32r40r_e145_v16?0^{?=I{CGRect={CGPoint=dd}{CGSize=dd}}B{CGRect={CGPoint=dd}{CGSize=dd}}dd^{PKGAnimation}{?=CCCCCCCCCCCCCCCC}Idd^v^v^{PKGAnimation}dddi}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed5d0 (    0x30) __block_descriptor_56_e8_32r_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed600 (    0x20) __block_literal_global.1676 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed620 (    0x20) __block_literal_global.11.1680 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed640 (    0x20) __block_literal_global.1691 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed660 (    0x20) __block_literal_global.1972 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed680 (    0x30) __block_descriptor_48_e8_32b40r_e58_v24?0?<^{OpaqueCUIRendererRef=}?>8?<"CUICatalog"?>16l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed6b0 (    0x30) __block_descriptor_56_e8_32o40o48r_e52_v16?0^{WSCAContextScopeTransaction=^{__CFArray}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed6e0 (    0x30) __block_descriptor_40_e8_32o_e28_^{OpaqueCUIRendererRef=}8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed710 (    0x20) __block_literal_global.88 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed730 (    0x30) __block_descriptor_40_e8_32o_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed760 (    0x20) __block_literal_global.134 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed780 (    0x20) __block_literal_global.137 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed7a0 (    0x30) __block_descriptor_60_e8_32o40o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2ed7d0 (    0x20) __block_literal_global.2133 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed7f0 (    0x30) CGXDisplayStreamCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ed820 (    0x30) __block_descriptor_tmp.2.2316 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed850 (    0x30) __block_descriptor_tmp.5.2318 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed880 (    0x20) __block_literal_global.2307 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed8a0 (    0x20) __block_literal_global.14 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed8c0 (    0x38) vtable for std::__1::__shared_ptr_emplace<XPCServiceClient, std::__1::allocator<XPCServiceClient>> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed8f8 (    0x20) __block_literal_global.20 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed918 (    0x20) __block_literal_global.23 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed938 (    0x20) __block_literal_global.26 [NameNList, MangledNameNList, NList] 
                0x00000001db2ed958 (    0x48) vtable for std::__1::__function::__func<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0, std::__1::allocator<XPCServiceClient::requestBrightnessRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*)::'block-literal'::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed9a0 (    0x48) vtable for std::__1::__function::__func<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1, std::__1::allocator<XPCServiceClient::requestBrightnessAbortRamp(SLSXPCServiceCommandType, unsigned long long, unsigned long long, SLSDisplayControlNotificationPayloadType, void const*, void*)::'block-literal'::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2ed9e8 (    0x48) vtable for std::__1::__function::__func<XPCServiceClient::sendInitialEDRState()::$_2, std::__1::allocator<XPCServiceClient::sendInitialEDRState()::$_2>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2eda30 (    0x20) __block_literal_global.2409 [NameNList, MangledNameNList, NList] 
                0x00000001db2eda50 (    0x20) __block_literal_global.76 [NameNList, MangledNameNList, NList] 
                0x00000001db2eda70 (    0x20) __block_literal_global.87.2420 [NameNList, MangledNameNList, NList] 
                0x00000001db2eda90 (    0x20) __block_literal_global.2469 [NameNList, MangledNameNList, NList] 
                0x00000001db2edab0 (    0xb0) vtable for CaptureSurfaceSW [NameNList, MangledNameNList, NList] 
                0x00000001db2edb60 (   0x7e0) PKGTransactionOpcodeInfos [NameNList, MangledNameNList, NList] 
                0x00000001db2ee340 (    0x30) __block_descriptor_tmp.2656 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee370 (    0x30) __block_descriptor_48_e8_32o40b_e17_v16?0"NSError"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee3a0 (    0x30) __block_descriptor_48_e8_32o40b_e38_v16?0"NSObject<OS_dispatch_source>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee3d0 (    0x30) __block_descriptor_44_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2ee400 (    0x20) __block_literal_global.2784 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee420 (    0x30) __block_descriptor_40_e8_32o_e50_v32?0"SLDataTimelineServerSnapshotEntry"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee450 (    0x30) __block_descriptor_40_e8_32b_e47_v32?0"<SLDataTimelineServerSnapshot>"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee480 (    0x30) __block_descriptor_40_e8_32o_e43_v32?0"SLDataTimelineSessionEntry"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee4b0 (    0x30) __block_descriptor_40_e8_32b_e40_v32?0"<SLDataTimelineSession>"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee4e0 (    0x30) __block_descriptor_40_e8_32o_e43_v32?0"SLDataTimelineProcessEntry"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee510 (    0x30) __block_descriptor_40_e8_32b_e40_v32?0"<SLDataTimelineProcess>"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee540 (    0x20) __block_literal_global.368 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee560 (    0x20) __block_literal_global.371 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee580 (    0x20) __block_literal_global.373 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee5a0 (    0x20) __block_literal_global.2906 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee5c0 (    0x30) __block_descriptor_tmp.112 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee5f0 (    0x30) __block_descriptor_tmp.116 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee620 (    0x20) __block_literal_global.128 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee640 (    0x20) __block_literal_global.131 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee660 (    0x20) __block_literal_global.134.2962 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee680 (    0x28) create_cf_block_dictionary.cf_block_dictionary_callbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ee6a8 (    0x30) __block_descriptor_tmp.136 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee6d8 (    0x28) cf_block_dictionary_copy_block_array.cf_array_block_callbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ee700 (    0x30) __block_descriptor_tmp.2987 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee730 (    0x30) __block_descriptor_tmp.3.2994 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee760 (    0x30) WSCaptureStreamCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ee790 (    0x30) __block_descriptor_tmp.10 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee7c0 (    0x30) __block_descriptor_tmp.16.2980 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee7f0 (    0x20) __block_literal_global.2976 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee810 (    0x48) __block_literal_global.3025 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee858 (    0x20) __block_literal_global.7 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee878 (    0x20) __block_literal_global.3053 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee898 (   0x108) vtable for CompositorSW [NameNList, MangledNameNList, NList] 
                0x00000001db2ee9a0 (    0x20) __block_literal_global.3077 [NameNList, MangledNameNList, NList] 
                0x00000001db2ee9c0 (    0x30) __block_descriptor_56_e8_32o40o48b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2ee9f0 (    0x20) __block_literal_global.3399 [NameNList, MangledNameNList, NList] 
                0x00000001db2eea10 (    0x20) __block_literal_global.4 [NameNList, MangledNameNList, NList] 
                0x00000001db2eea30 (    0x20) __block_literal_global.7.3406 [NameNList, MangledNameNList, NList] 
                0x00000001db2eea50 (    0x20) __block_literal_global.10 [NameNList, MangledNameNList, NList] 
                0x00000001db2eea70 (    0x30) __block_descriptor_tmp.19.3459 [NameNList, MangledNameNList, NList] 
                0x00000001db2eeaa0 (    0x30) __block_descriptor_40_e8_32o_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2eead0 (    0x30) __block_descriptor_101_e8_32o40o48o56b64b72r80r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eeb00 (    0x30) __block_descriptor_68_e8_32o40o48r56r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eeb30 (    0x30) __block_descriptor_49_e8_32o40o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eeb60 (    0x20) __block_literal_global.3550 [NameNList, MangledNameNList, NList] 
                0x00000001db2eeb80 (    0x30) __block_descriptor_49_e8_32b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eebb0 (    0x30) __block_descriptor_57_e8_32b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2eebe0 (    0x20) __block_literal_global.3687 [NameNList, MangledNameNList, NList] 
                0x00000001db2eec00 (    0x20) __block_literal_global.3819 [NameNList, MangledNameNList, NList] 
                0x00000001db2eec20 (    0x48) vtable for PKGDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2eec68 (    0x28) vtable for PKGDisplayOperationGroup [NameNList, MangledNameNList, NList] 
                0x00000001db2eec90 (    0x20) __block_literal_global.3873 [NameNList, MangledNameNList, NList] 
                0x00000001db2eecb0 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_masters()::$_0>, bool (std::__1::shared_ptr<WS::Displays::Display>)> [NameNList, MangledNameNList, NList] 
                0x00000001db2eecf8 (    0x48) vtable for (anonymous namespace)::MasterDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2eed40 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1, std::__1::allocator<(anonymous namespace)::WSDisplayWrapper::online_mirrors()::$_1>, bool (std::__1::shared_ptr<WS::Displays::Display>)> [NameNList, MangledNameNList, NList] 
                0x00000001db2eed88 (    0x48) vtable for (anonymous namespace)::MirrorDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2eedd0 (    0x28) vtable for (anonymous namespace)::PhysicalOperationGroup [NameNList, MangledNameNList, NList] 
                0x00000001db2eedf8 (    0x28) vtable for (anonymous namespace)::LogicalOperationGroup [NameNList, MangledNameNList, NList] 
                0x00000001db2eee20 (    0x30) vtable for (anonymous namespace)::DisplayCallbackByFunction [NameNList, MangledNameNList, NList] 
                0x00000001db2eee50 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByFunction, std::__1::allocator<(anonymous namespace)::DisplayCallbackByFunction>> [NameNList, MangledNameNList, NList] 
                0x00000001db2eee88 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::DisplayCallbackByBlock, std::__1::allocator<(anonymous namespace)::DisplayCallbackByBlock>> [NameNList, MangledNameNList, NList] 
                0x00000001db2eeec0 (    0x30) vtable for (anonymous namespace)::DisplayCallbackByBlock [NameNList, MangledNameNList, NList] 
                0x00000001db2eeef0 (    0x50) CGXCreateBundleInfoForPid.bundle_cache_attributes [NameNList, MangledNameNList, NList] 
                0x00000001db2eef40 (    0x30) __block_descriptor_tmp.3970 [NameNList, MangledNameNList, NList] 
                0x00000001db2eef70 (    0x30) __block_descriptor_tmp.86 [NameNList, MangledNameNList, NList] 
                0x00000001db2eefa0 (    0x20) __block_literal_global.3975 [NameNList, MangledNameNList, NList] 
                0x00000001db2eefc0 (    0x30) __block_descriptor_tmp.102.3989 [NameNList, MangledNameNList, NList] 
                0x00000001db2eeff0 (    0x20) __block_literal_global.105 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef010 (    0x20) __block_literal_global.136 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef030 (    0x20) __block_literal_global.139 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef050 (    0x20) __block_literal_global.142 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef070 (    0x20) vtable for Warp [NameNList, MangledNameNList, NList] 
                0x00000001db2ef090 (    0x20) vtable for MeshWarp [NameNList, MangledNameNList, NList] 
                0x00000001db2ef0b0 (    0x20) vtable for AffineWarp [NameNList, MangledNameNList, NList] 
                0x00000001db2ef0d0 (    0x20) vtable for Warp3D [NameNList, MangledNameNList, NList] 
                0x00000001db2ef0f0 (    0x20) __block_literal_global.4281 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef110 (    0x30) __block_descriptor_40_e8_32r_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef140 (    0x30) __block_descriptor_44_e8_32r_e26_v16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef170 (    0x30) __block_descriptor_52_e8_32r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef1a0 (    0x20) __block_literal_global.129 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef1c0 (    0x20) __block_literal_global.131.4308 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef1e0 (    0x20) __block_literal_global.134.4310 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef200 (    0x20) __block_literal_global.136.4319 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef220 (    0x20) __block_literal_global.139.4314 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef240 (    0x30) __block_descriptor_52_e8_32r_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef270 (    0x30) __block_descriptor_40_e8_32b_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef2a0 (    0x30) __block_descriptor_55_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef2d0 (    0x28) oldStyleArrayCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ef2f8 (    0x20) __block_literal_global.167 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef318 (    0x20) __block_literal_global.173 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef338 (    0x20) __block_literal_global.175 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef358 (    0x20) __block_literal_global.177 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef378 (    0x20) __block_literal_global.199 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef398 (    0x20) __block_literal_global.201 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef3b8 (    0x20) __block_literal_global.203 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef3d8 (    0x20) __block_literal_global.214 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef3f8 (    0x20) __block_literal_global.216 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef418 (    0x30) __block_descriptor_64_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef448 (    0x30) __block_descriptor_92_e8_32r40r48r56r64r_e66_B16?0^{?=QiiIIIIddIb1b1b1b1[2{CGRect={CGPoint=dd}{CGSize=dd}}]I}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef478 (    0x30) __block_descriptor_49_e8_32r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef4a8 (    0x30) __block_descriptor_56_e8_32r_e26_B16?0^{PKGManagedSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef4d8 (    0x20) __block_literal_global.277 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef4f8 (    0x30) __block_descriptor_65_e8_32b40r_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef528 (    0x30) __block_descriptor_40_e8_32r_e66_B16?0^{?=QiiIIIIddIb1b1b1b1[2{CGRect={CGPoint=dd}{CGSize=dd}}]I}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef558 (    0x30) __block_descriptor_48_e8_32r_e66_B16?0^{?=QiiIIIIddIb1b1b1b1[2{CGRect={CGPoint=dd}{CGSize=dd}}]I}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef588 (    0x30) __block_descriptor_56_e8_32r_e66_B16?0^{?=QiiIIIIddIb1b1b1b1[2{CGRect={CGPoint=dd}{CGSize=dd}}]I}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef5b8 (    0x30) __block_descriptor_40_e8_32r_e23_v24?0^{PKGSpace=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef5e8 (    0x30) __block_descriptor_52_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef618 (    0x20) __block_literal_global.300 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef638 (    0x30) __block_descriptor_113_e8_32r40r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef668 (    0x20) __block_literal_global.314.4389 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef688 (    0x20) __block_literal_global.320 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef6a8 (    0x30) __block_descriptor_72_e8_32r40r48r56r64r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2ef6d8 (    0x20) __block_literal_global.4529 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef6f8 (    0x28) sCGSmageCaptureCalbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ef720 (    0x20) __block_literal_global.4667 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef740 (    0x20) __block_literal_global.4671 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef760 (    0x60) SLPixelAccessGetTypeID.class [NameNList, MangledNameNList, NList] 
                0x00000001db2ef7c0 (    0x20) __block_literal_global.8.4692 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef7e0 (    0x28) __CGPixelAccessDataCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ef808 (    0x28) __CGPixelAccessAlphaCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2ef830 (    0x30) __block_descriptor_tmp.23.4800 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef860 (    0x30) __block_descriptor_tmp.130 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef890 (    0x20) __block_literal_global.134.4816 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef8b0 (    0x30) __block_descriptor_tmp.145 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef8e0 (    0x30) __block_descriptor_tmp.148 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef910 (    0x20) __block_literal_global.156 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef930 (    0x20) __block_literal_global.160 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef950 (    0x20) __block_literal_global.163 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef970 (    0x20) __block_literal_global.166 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef990 (    0x20) __block_literal_global.177.4762 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef9b0 (    0x20) __block_literal_global.189 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef9d0 (    0x20) __block_literal_global.204.4980 [NameNList, MangledNameNList, NList] 
                0x00000001db2ef9f0 (    0x20) __block_literal_global.209 [NameNList, MangledNameNList, NList] 
                0x00000001db2efa10 (    0x20) __block_literal_global.216.4772 [NameNList, MangledNameNList, NList] 
                0x00000001db2efa30 (    0x20) __block_literal_global.5055 [NameNList, MangledNameNList, NList] 
                0x00000001db2efa50 (    0x20) __block_literal_global.4.5085 [NameNList, MangledNameNList, NList] 
                0x00000001db2efa70 (    0x20) __block_literal_global.5186 [NameNList, MangledNameNList, NList] 
                0x00000001db2efa90 (    0x30) __block_descriptor_tmp.49 [NameNList, MangledNameNList, NList] 
                0x00000001db2efac0 (    0x20) __block_literal_global.54 [NameNList, MangledNameNList, NList] 
                0x00000001db2efae0 (    0x20) __block_literal_global.60 [NameNList, MangledNameNList, NList] 
                0x00000001db2efb00 (    0x20) __block_literal_global.71 [NameNList, MangledNameNList, NList] 
                0x00000001db2efb20 (    0x30) __block_descriptor_tmp.73 [NameNList, MangledNameNList, NList] 
                0x00000001db2efb50 (    0x20) __block_literal_global.85 [NameNList, MangledNameNList, NList] 
                0x00000001db2efb70 (    0x20) __block_literal_global.5272 [NameNList, MangledNameNList, NList] 
                0x00000001db2efb90 (    0x20) __block_literal_global.5.5274 [NameNList, MangledNameNList, NList] 
                0x00000001db2efbb0 (    0x30) __block_descriptor_40_e8_32b_e40_v16?0"<RBSProcessMonitorConfiguring>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2efbe0 (    0x60) SLDisplayStreamUpdateGetTypeID.displaystreamupdate_class [NameNList, MangledNameNList, NList] 
                0x00000001db2efc40 (    0x20) __block_literal_global.5.5293 [NameNList, MangledNameNList, NList] 
                0x00000001db2efc60 (    0x60) SLDisplayStreamGetTypeID.displaystream_class [NameNList, MangledNameNList, NList] 
                0x00000001db2efcc0 (    0x20) __block_literal_global.16 [NameNList, MangledNameNList, NList] 
                0x00000001db2efce0 (    0x20) __block_literal_global.20.5305 [NameNList, MangledNameNList, NList] 
                0x00000001db2efd00 (    0x28) DisplayStreamCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2efd28 (    0x20) __block_literal_global.5383 [NameNList, MangledNameNList, NList] 
                0x00000001db2efd48 (    0x20) __block_literal_global.6.5387 [NameNList, MangledNameNList, NList] 
                0x00000001db2efd68 (    0x20) __block_literal_global.9 [NameNList, MangledNameNList, NList] 
                0x00000001db2efd88 (    0x20) __block_literal_global.14.5408 [NameNList, MangledNameNList, NList] 
                0x00000001db2efda8 (    0x20) __block_literal_global.17 [NameNList, MangledNameNList, NList] 
                0x00000001db2efdc8 (    0x20) __block_literal_global.29 [NameNList, MangledNameNList, NList] 
                0x00000001db2efde8 (    0x20) __block_literal_global.32 [NameNList, MangledNameNList, NList] 
                0x00000001db2efe08 (    0x30) __block_descriptor_tmp.6.5666 [NameNList, MangledNameNList, NList] 
                0x00000001db2efe38 (    0x30) __block_descriptor_tmp.10.5670 [NameNList, MangledNameNList, NList] 
                0x00000001db2efe68 (    0x30) __block_descriptor_tmp.14.5680 [NameNList, MangledNameNList, NList] 
                0x00000001db2efe98 (    0x30) __block_descriptor_tmp.18.5683 [NameNList, MangledNameNList, NList] 
                0x00000001db2efec8 (    0x30) __block_descriptor_tmp.22.5685 [NameNList, MangledNameNList, NList] 
                0x00000001db2efef8 (    0x30) __block_descriptor_tmp.26.5687 [NameNList, MangledNameNList, NList] 
                0x00000001db2eff28 (    0x30) __block_descriptor_tmp.30.5689 [NameNList, MangledNameNList, NList] 
                0x00000001db2eff58 (    0x48) vtable for std::__1::__function::__func<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0, std::__1::allocator<update_session_cursor_window(CGXSession*, CGPoint const*, bool)::$_0>, void (WS::Displays::Display*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2effa0 (    0x48) vtable for std::__1::__function::__func<CGXMouseCursorActivity::$_1, std::__1::allocator<CGXMouseCursorActivity::$_1>, void (WS::Displays::Display*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2effe8 (    0x20) __block_literal_global.5946 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0008 (    0x30) __block_descriptor_tmp.61 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0038 (    0x30) __block_descriptor_tmp.66 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0068 (    0x20) __block_literal_global.5976 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0088 (    0x30) __block_descriptor_tmp.45 [NameNList, MangledNameNList, NList] 
                0x00000001db2f00b8 (    0x38) vtable for std::__1::__shared_ptr_emplace<ProcessStats, std::__1::allocator<ProcessStats>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f00f0 (    0x20) __block_literal_global.66 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0110 (    0x20) __block_literal_global.70 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0130 (    0x20) __block_literal_global.73 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0150 (    0x20) __block_literal_global.76.6022 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0170 (    0x20) __block_literal_global.80 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0190 (    0x38) vtable for std::__1::__shared_ptr_emplace<TimelineClient, std::__1::allocator<TimelineClient>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f01c8 (    0x30) __block_descriptor_tmp.6102 [NameNList, MangledNameNList, NList] 
                0x00000001db2f01f8 (    0x38) vtable for DisplayStreamStateSW [NameNList, MangledNameNList, NList] 
                0x00000001db2f0230 (    0x48) vtable for std::__1::__function::__func<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateSW::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f0278 (    0x20) __block_literal_global.6131 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0298 (    0x30) __block_descriptor_tmp.16.6144 [NameNList, MangledNameNList, NList] 
                0x00000001db2f02c8 (    0x60) SLEventGetTypeID::slruntimeclass [NameNList, MangledNameNList, NList] 
                0x00000001db2f0328 (    0x20) __block_literal_global.7.6171 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0348 (    0x20) __block_literal_global.10.6170 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0368 (   0xaf0) SLEventGetFieldDecodeDescriptor(SLEventToken)::descriptors [NameNList, MangledNameNList, NList] 
                0x00000001db2f0e58 (    0x10) SLEventGetFieldDecodeDescriptor(SLEventToken)::genericDescriptor [NameNList, MangledNameNList, NList] 
                0x00000001db2f0e68 (    0x30) __block_descriptor_tmp.13 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0e98 (    0x48) vtable for std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f0ee0 (    0x48) vtable for std::__1::__function::__func<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1, std::__1::allocator<PipZoomState::Update(CGSRegionObject*, CGSRegionObject*, int, int, unsigned long long)::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f0f28 (    0x20) __block_literal_global.6428 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0f48 (    0x20) __block_literal_global.43.6432 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0f68 (    0x20) __block_literal_global.47 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0f88 (    0x38) vtable for std::__1::__shared_ptr_emplace<ColorConverter, std::__1::allocator<ColorConverter>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f0fc0 (    0x20) __block_literal_global.6517 [NameNList, MangledNameNList, NList] 
                0x00000001db2f0fe0 (    0x38) vtable for std::__1::__shared_ptr_emplace<WSShadow, std::__1::allocator<WSShadow>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f1018 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1, std::__1::allocator<(anonymous namespace)::absolute_time_to_human_readable_time(double)::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f1060 (    0x30) vtable for (anonymous namespace)::SystemDefinedEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1090 (    0x30) vtable for (anonymous namespace)::EventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f10c0 (    0x30) vtable for (anonymous namespace)::MouseEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f10f0 (    0x30) vtable for (anonymous namespace)::OtherMouseEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1120 (    0x30) vtable for (anonymous namespace)::SecureKeyEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1150 (    0x30) vtable for (anonymous namespace)::KeyEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1180 (    0x30) vtable for (anonymous namespace)::MouseTrackingEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f11b0 (    0x30) vtable for (anonymous namespace)::FlagsChangedEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f11e0 (    0x30) vtable for (anonymous namespace)::ScrollWheelEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1210 (    0x30) vtable for (anonymous namespace)::ZoomEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1240 (    0x30) vtable for (anonymous namespace)::GestureEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f1270 (    0x30) vtable for (anonymous namespace)::FluidTouchEventLog [NameNList, MangledNameNList, NList] 
                0x00000001db2f12a0 (    0x20) __block_literal_global.6907 [NameNList, MangledNameNList, NList] 
                0x00000001db2f12c0 (    0x20) __block_literal_global.7054 [NameNList, MangledNameNList, NList] 
                0x00000001db2f12e0 (    0x20) __block_literal_global.123 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1300 (    0x20) __block_literal_global.128.7156 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1320 (    0x20) __block_literal_global.131.7159 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1340 (    0x20) __block_literal_global.133 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1360 (    0x20) __block_literal_global.159 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1380 (    0x20) __block_literal_global.161 [NameNList, MangledNameNList, NList] 
                0x00000001db2f13a0 (    0x20) __block_literal_global.190 [NameNList, MangledNameNList, NList] 
                0x00000001db2f13c0 (    0x20) __block_literal_global.215 [NameNList, MangledNameNList, NList] 
                0x00000001db2f13e0 (    0x30) __block_descriptor_40_e8_32b_e33_v16?0"NSObject<OS_xpc_object>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f1410 (    0x20) __block_literal_global.7185 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1430 (    0x60) SLSWindowQueryKeyExcludeProcesses_block_invoke.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2f1490 (    0x20) __block_literal_global.26.7200 [NameNList, MangledNameNList, NList] 
                0x00000001db2f14b0 (    0x60) SLSWindowQueryKeyExcludeProcesses_block_invoke_2.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2f1510 (    0x20) __block_literal_global.30 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1530 (    0x60) SLSWindowQueryKeyExcludeProcesses_block_invoke_3.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2f1590 (    0x20) __block_literal_global.34.7209 [NameNList, MangledNameNList, NList] 
                0x00000001db2f15b0 (    0x60) SLSWindowQueryKeyExcludeProcesses_block_invoke_4.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2f1610 (    0x20) __block_literal_global.38 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1630 (    0x60) SLSWindowQueryKeyExcludeProcesses_block_invoke_5.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2f1690 (    0x20) __block_literal_global.45 [NameNList, MangledNameNList, NList] 
                0x00000001db2f16b0 (    0x20) __block_literal_global.49 [NameNList, MangledNameNList, NList] 
                0x00000001db2f16d0 (    0x20) __block_literal_global.52 [NameNList, MangledNameNList, NList] 
                0x00000001db2f16f0 (    0x20) __block_literal_global.55 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1710 (    0x20) __block_literal_global.58 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1730 (    0x20) __block_literal_global.61 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1750 (    0x20) __block_literal_global.64 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1770 (    0x20) __block_literal_global.67 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1790 (    0x20) __block_literal_global.70.7214 [NameNList, MangledNameNList, NList] 
                0x00000001db2f17b0 (    0x20) __block_literal_global.73.7215 [NameNList, MangledNameNList, NList] 
                0x00000001db2f17d0 (    0x20) __block_literal_global.76.7216 [NameNList, MangledNameNList, NList] 
                0x00000001db2f17f0 (    0x20) __block_literal_global.79 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1810 (    0x20) __block_literal_global.82 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1830 (    0x20) __block_literal_global.85.7217 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1850 (    0x20) __block_literal_global.88.7218 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1870 (    0x20) __block_literal_global.91 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1890 (    0x20) __block_literal_global.95 [NameNList, MangledNameNList, NList] 
                0x00000001db2f18b0 (    0x20) __block_literal_global.113 [NameNList, MangledNameNList, NList] 
                0x00000001db2f18d0 (    0x20) __block_literal_global.116 [NameNList, MangledNameNList, NList] 
                0x00000001db2f18f0 (    0x20) __block_literal_global.7294 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1910 (    0x20) __block_literal_global.6.7295 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1930 (    0x30) __block_descriptor_tmp.7399 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1960 (    0x30) __block_descriptor_tmp.70.7353 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1990 (    0x20) __block_literal_global.7412 [NameNList, MangledNameNList, NList] 
                0x00000001db2f19b0 (    0x30) __block_descriptor_64_ea8_32s40s48s56s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f19e0 (    0x30) __block_descriptor_56_ea8_32s40s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f1a10 (    0x30) __block_descriptor_tmp.7649 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1a40 (    0x30) __block_descriptor_tmp.8.7658 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1a70 (    0x30) __block_descriptor_tmp.11.7637 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1aa0 (    0x30) __block_descriptor_tmp.14.7661 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1ad0 (    0x30) __block_descriptor_tmp.18.7667 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1b00 (    0x30) __block_descriptor_tmp.21.7670 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1b30 (    0x30) __block_descriptor_tmp.25.7677 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1b60 (    0x30) __block_descriptor_tmp.29.7676 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1b90 (    0x30) __block_descriptor_tmp.33 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1bc0 (    0x30) __block_descriptor_tmp.37 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1bf0 (    0x30) __block_descriptor_tmp.41.7680 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1c20 (    0x20) __block_literal_global.7685 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1c40 (    0x20) __block_literal_global.45.7690 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1c60 (    0x30) __block_descriptor_tmp.61.7620 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1c90 (    0x30) __block_descriptor_tmp.69.7897 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1cc0 (    0x20) __block_literal_global.73.7611 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1ce0 (    0x30) __block_descriptor_tmp.77.7626 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1d10 (    0x30) __block_descriptor_tmp.80.7657 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1d40 (    0x30) __block_descriptor_tmp.85.7760 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1d70 (    0x30) __block_descriptor_tmp.88.7763 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1da0 (    0x30) __block_descriptor_tmp.92.7764 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1dd0 (    0x20) __block_literal_global.95.7761 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1df0 (    0x30) __block_descriptor_tmp.99 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1e20 (    0x30) __block_descriptor_tmp.105 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1e50 (    0x30) __block_descriptor_tmp.108.7765 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1e80 (    0x20) __block_literal_global.113.7766 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1ea0 (    0x30) __block_descriptor_tmp.127 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1ed0 (    0x30) __block_descriptor_tmp.140.7790 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1f00 (    0x30) __block_descriptor_tmp.151 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1f30 (    0x30) __block_descriptor_tmp.155 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1f60 (    0x30) __block_descriptor_tmp.163 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1f90 (    0x20) __block_literal_global.169 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1fb0 (    0x30) __block_descriptor_tmp.178 [NameNList, MangledNameNList, NList] 
                0x00000001db2f1fe0 (    0x20) __block_literal_global.187 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2000 (    0x30) __block_descriptor_tmp.190 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2030 (    0x20) __block_literal_global.195 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2050 (    0x20) __block_literal_global.198 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2070 (    0x20) __block_literal_global.201.7740 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2090 (    0x20) __block_literal_global.204.7741 [NameNList, MangledNameNList, NList] 
                0x00000001db2f20b0 (    0x30) __block_descriptor_tmp.207.7733 [NameNList, MangledNameNList, NList] 
                0x00000001db2f20e0 (    0x20) __block_literal_global.214.7738 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2100 (    0x30) __block_descriptor_tmp.221 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2130 (    0x30) __block_descriptor_tmp.227 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2160 (    0x30) __block_descriptor_tmp.239 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2190 (    0x20) __block_literal_global.243 [NameNList, MangledNameNList, NList] 
                0x00000001db2f21b0 (    0x20) __block_literal_global.246 [NameNList, MangledNameNList, NList] 
                0x00000001db2f21d0 (    0x30) __block_descriptor_tmp.249 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2200 (    0x30) __block_descriptor_tmp.253 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2230 (    0x20) __block_literal_global.256 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2250 (    0x30) __block_descriptor_tmp.264 [NameNList, MangledNameNList, NList] 
                0x00000001db2f2280 (    0x20) __block_literal_global.8204 [NameNList, MangledNameNList, NList] 
                0x00000001db2f22a0 (   0x728) vtable for WS::Displays::SLCADisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2f29c8 (    0x20) __block_literal_global.133.8325 [NameNList, MangledNameNList, NList] 
                0x00000001db2f29e8 (    0x30) __block_descriptor_48_e8_32b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f2a18 (   0x728) vtable for WS::Displays::CAVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db2f3140 (    0x20) __block_literal_global.173.8248 [NameNList, MangledNameNList, NList] 
                0x00000001db2f3160 (    0x50) vtable for WS::Displays::CASurface [NameNList, MangledNameNList, NList] 
                0x00000001db2f31b0 (   0x6b8) vtable for WS::Displays::CAWSManager [NameNList, MangledNameNList, NList] 
                0x00000001db2f3868 (    0x20) __block_literal_global.648 [NameNList, MangledNameNList, NList] 
                0x00000001db2f3888 (    0x20) __block_literal_global.711 [NameNList, MangledNameNList, NList] 
                0x00000001db2f38a8 (    0x30) __block_descriptor_49_e8_32o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f38d8 (    0x30) __block_descriptor_72_e8_32b40r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f3908 (    0x20) __block_literal_global.765 [NameNList, MangledNameNList, NList] 
                0x00000001db2f3928 (    0x30) __block_descriptor_72_e8_32r40r48r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f3958 (    0x30) __block_descriptor_48_e8_32r_e864_v16?0^{CGXSession=IiIIIi{CGXCredentials=II}{CGXCredentials=II}B**^*BBBIBBBBII^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIB^{CGXSessionWindowData}^{ZoomManager}^{CGXSessionDisplayZoomData}^{WSSessionWorkspaceData}^{CGXSessionLegacyWorkspaceData}^{CGXSessionConnectionData}^{CGXSessionConfigurationData}^{WSSessionDisplayPreferencesData}^{CGXSessionDFRData}^{CGXSessionEventData}^{CGXSessionPackageData}^{CGXSessionProcessData}^{CGXSessionDisplayData}^{SessionData}^{WSSessionDisplayConfigData}^{WSCursorData}^{CGXSessionDisplayStreamData}^{WSMessageTraceSessionData}^{WSSessionStructuralRegionData}^{CGXSessionHMDData}^{WSSessionDisplayUpdateData}^{DesktopEffectsSessionData}^{SchedulerSessionData}^vQ^{WSSessionCaptureData}iiB^{CGXWindow}^{CGXWindow}^{CGXWindow}IBIdBB^{CGXSessionWindowOverrideResolutionData}^{CGXSessionWindowPixelDimensionsHintData}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f3988 (    0x20) __block_literal_global.845 [NameNList, MangledNameNList, NList] 
                0x00000001db2f39a8 (    0x28) vtable for WS::Displays::CASessionData [NameNList, MangledNameNList, NList] 
                0x00000001db2f39d0 (    0x20) __block_literal_global.1223 [NameNList, MangledNameNList, NList] 
                0x00000001db2f39f0 (    0x20) __block_literal_global.1228 [NameNList, MangledNameNList, NList] 
                0x00000001db2f3a10 (    0x58) vtable for WS::Displays::DefaultPresetInterface [NameNList, MangledNameNList, NList] 
                0x00000001db2f3a68 (    0x48) vtable for std::__1::__function::__func<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::PresetController::PresetController(std::__1::unique_ptr<WS::Displays::PresetInterface, std::__1::default_delete<WS::Displays::PresetInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3ab0 (    0x30) vtable for WS::Displays::DefaultUserAdjustmentInterface [NameNList, MangledNameNList, NList] 
                0x00000001db2f3ae0 (    0x48) vtable for std::__1::__function::__func<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'(), std::__1::allocator<WS::Displays::UserAdjustmentController::UserAdjustmentController(std::__1::unique_ptr<WS::Displays::UserAdjustmentInterface, std::__1::default_delete<WS::Displays::UserAdjustmentInterface>>, std::__1::function<void ()>)::'lambda'()>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3b28 (    0x48) vtable for WS::Displays::configuration_engine_dependencies [NameNList, MangledNameNList, NList] 
                0x00000001db2f3b70 (    0x68) vtable for WS::Displays::WSDisplayNotification [NameNList, MangledNameNList, NList] 
                0x00000001db2f3bd8 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_6, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_6>, NSDictionary* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3c20 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_7, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_7>, void (NSDictionary*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3c68 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_8, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_8>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3cb0 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_9, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_9>, NSDictionary* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3cf8 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_10, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_10>, void (NSDictionary*)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3d40 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::update_preset_support()::$_11, std::__1::allocator<WS::Displays::SLCADisplay::update_preset_support()::$_11>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3d88 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12, std::__1::allocator<WS::Displays::SLCADisplay::process_display_connect(unsigned int)::$_12>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3dd0 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Displays::SLCADisplay, std::__1::allocator<WS::Displays::SLCADisplay>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3e08 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Displays::CAVirtualDisplay, std::__1::allocator<WS::Displays::CAVirtualDisplay>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3e40 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Displays::CASurface, std::__1::allocator<WS::Displays::CASurface>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3e78 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13, std::__1::allocator<WS::Displays::SLCADisplay::present_iosurface(__IOSurface*, bool)::$_13>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3ec0 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17, std::__1::allocator<WS::Displays::SLCADisplay::mark_as_config_disabled(unsigned int)::$_17>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3f08 (    0x48) vtable for std::__1::__function::__func<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19, std::__1::allocator<WS::Displays::SLCADisplay::should_process_display_connect(unsigned int)::$_19>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3f50 (    0x48) vtable for std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayCreate(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)::$_23>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3f98 (    0x48) vtable for std::__1::__function::__func<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24, std::__1::allocator<WS::Displays::CAWSManager::virtualDisplayApplyWithDictionary(unsigned int, __CFDictionary const*)::$_24>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f3fe0 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Displays::CAWSManager::DimTimerDisplay, std::__1::allocator<WS::Displays::CAWSManager::DimTimerDisplay>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f4018 (    0x48) vtable for std::__1::__function::__func<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25, std::__1::allocator<WS::Displays::CAWSManager::mig_airplay_display_online(unsigned int, unsigned int*, void*, unsigned int)::$_25>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f4060 (    0x48) vtable for std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_29>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f40a8 (    0x48) vtable for std::__1::__function::__func<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30, std::__1::allocator<WS::Displays::CAWSManager::mig_display_get_user_adjustment_luminance_correction_factor(unsigned int, void*, unsigned int, float*)::$_30>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f40f0 (    0x20) __block_literal_global.8373 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4110 (    0x20) __block_literal_global.8383 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4130 (    0x20) __block_literal_global.8543 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4150 (    0x30) __block_descriptor_68_e8_32o_e28_v16?0"<MTLCommandBuffer>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f4180 (    0x20) __block_literal_global.8607 [NameNList, MangledNameNList, NList] 
                0x00000001db2f41a0 (    0x20) __block_literal_global.31 [NameNList, MangledNameNList, NList] 
                0x00000001db2f41c0 (    0x20) __block_literal_global.33 [NameNList, MangledNameNList, NList] 
                0x00000001db2f41e0 (    0x30) __block_descriptor_60_e8_32o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f4210 (    0x30) __block_descriptor_tmp.8644 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4240 (    0x30) __block_descriptor_tmp.10.8624 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4270 (    0x20) __block_literal_global.8625 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4290 (    0x20) __block_literal_global.17.8627 [NameNList, MangledNameNList, NList] 
                0x00000001db2f42b0 (    0x30) __block_descriptor_tmp.21.8628 [NameNList, MangledNameNList, NList] 
                0x00000001db2f42e0 (    0x20) __block_literal_global.8650 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4300 (    0x38) vtable for VMAllocation [NameNList, MangledNameNList, NList] 
                0x00000001db2f4338 (    0x38) vtable for StdlibAllocation [NameNList, MangledNameNList, NList] 
                0x00000001db2f4370 (    0x20) __block_literal_global.8702 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4390 (    0x20) __block_literal_global.3 [NameNList, MangledNameNList, NList] 
                0x00000001db2f43b0 (    0x20) __block_literal_global.9.8704 [NameNList, MangledNameNList, NList] 
                0x00000001db2f43d0 (    0x20) __block_literal_global.11.8707 [NameNList, MangledNameNList, NList] 
                0x00000001db2f43f0 (    0x20) __block_literal_global.13 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4410 (    0x20) __block_literal_global.18 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4430 (    0x20) __block_literal_global.21 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4450 (    0x30) __block_descriptor_40_e8_32r_e15_v32?0816^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2f4480 (    0x58) vtable for TransitionFlipMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f44d8 (    0x58) vtable for TransitionCubeMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f4530 (    0x58) vtable for TransitionSpiralMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f4588 (    0x58) vtable for TransitionBlendMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f45e0 (    0x58) vtable for TransitionDropMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f4638 (    0x58) vtable for TransitionSlideMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f4690 (    0x58) vtable for TransitionRadialBlurMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f46e8 (    0x58) vtable for TransitionShrinkMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2f4740 (    0x30) __block_descriptor_tmp.8.8841 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4770 (    0x30) __block_descriptor_tmp.24.8851 [NameNList, MangledNameNList, NList] 
                0x00000001db2f47a0 (    0x30) __block_descriptor_tmp.29.8860 [NameNList, MangledNameNList, NList] 
                0x00000001db2f47d0 (    0x20) __block_literal_global.8861 [NameNList, MangledNameNList, NList] 
                0x00000001db2f47f0 (    0x30) __block_descriptor_tmp.36.8866 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4820 (    0x30) __block_descriptor_tmp.40 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4850 (   0x5d0) PKGEventHandlers [NameNList, MangledNameNList, NList] 
                0x00000001db2f4e20 (    0x30) __block_descriptor_tmp.49.8900 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4e50 (    0x30) __block_descriptor_tmp.59.8925 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4e80 (    0x30) __block_descriptor_tmp.60.8921 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4eb0 (    0x20) __block_literal_global.63 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4ed0 (    0x20) __block_literal_global.66.8889 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4ef0 (    0x20) __block_literal_global.8938 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4f10 (    0x20) __block_literal_global.10.8990 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4f30 (    0x30) __block_descriptor_tmp.29.8993 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4f60 (    0x20) __block_literal_global.33.9051 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4f80 (    0x20) __block_literal_global.36 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4fa0 (    0x30) __block_descriptor_tmp.42.9057 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4fd0 (    0x20) __block_literal_global.47.9058 [NameNList, MangledNameNList, NList] 
                0x00000001db2f4ff0 (    0x20) __block_literal_global.57 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5010 (    0x20) __block_literal_global.60.8947 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5030 (    0x20) __block_literal_global.65 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5050 (    0x20) __block_literal_global.68 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5070 (    0x30) __block_descriptor_tmp.71.9165 [NameNList, MangledNameNList, NList] 
                0x00000001db2f50a0 (    0x30) __block_descriptor_tmp.74.9170 [NameNList, MangledNameNList, NList] 
                0x00000001db2f50d0 (    0x30) __block_descriptor_tmp.77.9175 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5100 (    0x30) __block_descriptor_tmp.79.9185 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5130 (    0x30) __block_descriptor_tmp.83.9205 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5160 (    0x20) __block_literal_global.91.9080 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5180 (    0x20) __block_literal_global.94.9081 [NameNList, MangledNameNList, NList] 
                0x00000001db2f51a0 (    0x20) __block_literal_global.97 [NameNList, MangledNameNList, NList] 
                0x00000001db2f51c0 (    0x30) __block_descriptor_tmp.100.9116 [NameNList, MangledNameNList, NList] 
                0x00000001db2f51f0 (    0x30) __block_descriptor_tmp.104 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5220 (    0x30) __block_descriptor_tmp.109.9128 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5250 (    0x30) __block_descriptor_tmp.121.8953 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5280 (    0x30) __block_descriptor_tmp.122 [NameNList, MangledNameNList, NList] 
                0x00000001db2f52b0 (    0x20) __block_literal_global.125 [NameNList, MangledNameNList, NList] 
                0x00000001db2f52d0 (    0x20) __block_literal_global.5.9743 [NameNList, MangledNameNList, NList] 
                0x00000001db2f52f0 (    0x40) vtable for ShaderComposer [NameNList, MangledNameNList, NList] 
                0x00000001db2f5330 (    0x20) __block_literal_global.9801 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5350 (    0x20) __block_literal_global.128.9818 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5370 (    0x20) __block_literal_global.130 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5390 (    0x20) __block_literal_global.9928 [NameNList, MangledNameNList, NList] 
                0x00000001db2f53b0 (    0x30) __block_descriptor_tmp.9958 [NameNList, MangledNameNList, NList] 
                0x00000001db2f53e0 (    0x20) __block_literal_global.10001 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5400 (    0x20) __block_literal_global.6.10004 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5420 (    0x30) __block_descriptor_64_e8_32o40b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5450 (    0x30) __block_descriptor_44_e8_32b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5480 (    0x20) __block_literal_global.9.10030 [NameNList, MangledNameNList, NList] 
                0x00000001db2f54a0 (    0x20) __block_literal_global.14.10031 [NameNList, MangledNameNList, NList] 
                0x00000001db2f54c0 (    0x30) __block_descriptor_52_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f54f0 (    0x20) __block_literal_global.21.10034 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5510 (    0x20) __block_literal_global.32.10060 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5530 (    0x30) __block_descriptor_48_e8_32o40o_e17_v16?0"NSError"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5560 (    0x30) __block_descriptor_72_e8_32o40o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5590 (    0x30) __block_descriptor_80_e8_32o40o48b_e38_v16?0"NSObject<OS_dispatch_source>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f55c0 (    0x38) vtable for std::__1::__shared_ptr_pointer<float const*, SLSScreenTelemetryResultsSnapshotData::sharedPointerFromXPCData(NSObject<OS_xpc_object>*)::$_0, std::__1::allocator<float const>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f55f8 (    0x38) vtable for std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneData>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f5630 (    0x38) vtable for std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotData>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f5668 (    0x38) vtable for std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotPanelData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotPanelData>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f56a0 (    0x38) vtable for std::__1::__shared_ptr_emplace<SLSScreenTelemetryResultsSnapshotZoneRowData, std::__1::allocator<SLSScreenTelemetryResultsSnapshotZoneRowData>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f56d8 (    0x20) __block_literal_global.10242 [NameNList, MangledNameNList, NList] 
                0x00000001db2f56f8 (    0x20) __block_literal_global.5.10239 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5718 (    0x30) __block_descriptor_tmp.6.10234 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5748 (    0x30) __block_descriptor_tmp.9.10232 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5778 (    0x30) __block_descriptor_48_e8_32o40b_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f57a8 (    0x30) __block_descriptor_40_e8_32b_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f57d8 (    0x30) __block_descriptor_40_e8_32r_e101_v16?0r^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5808 (    0x30) __block_descriptor_48_e8_32r_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f5838 (    0x30) __block_descriptor_44_e8_32r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5868 (    0x30) __block_descriptor_44_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5898 (    0x30) __block_descriptor_48_e8_32r_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f58c8 (    0x20) __block_literal_global.10725 [NameNList, MangledNameNList, NList] 
                0x00000001db2f58e8 (    0x20) __block_literal_global.26.10822 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5908 (    0x20) __block_literal_global.28.10823 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5928 (    0x30) __block_descriptor_40_e8_32r_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5958 (    0x20) __block_literal_global.36.10850 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5978 (    0x20) __block_literal_global.38.10851 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5998 (    0x30) __block_descriptor_40_e8_32b_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f59c8 (    0x30) __block_descriptor_48_e8_32r_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f59f8 (    0x20) __block_literal_global.44 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5a18 (    0x20) __block_literal_global.46 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5a38 (    0x30) __block_descriptor_56_e8_32r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5a68 (    0x20) __block_literal_global.52.10968 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5a88 (    0x20) __block_literal_global.54.10974 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5aa8 (    0x30) __block_descriptor_48_e8_32r_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5ad8 (    0x20) __block_literal_global.67.11065 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5af8 (    0x20) __block_literal_global.69 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5b18 (    0x20) __block_literal_global.72 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5b38 (    0x30) __block_descriptor_40_e8_32r_e13_v24?0^v8^B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5b68 (    0x20) __block_literal_global.82.10623 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5b88 (    0x30) __block_descriptor_40_e8_32r_e10_v16?0r^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5bb8 (    0x30) __block_descriptor_40_e8_32r_e8_B12?0i8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5be8 (    0x30) __block_descriptor_40_e8_32b_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f5c18 (    0x30) __block_descriptor_40_e8_32b_e193_B16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5c48 (    0x20) __block_literal_global.113.10561 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5c68 (    0x30) __block_descriptor_40_e8_32r_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5c98 (    0x30) __block_descriptor_40_e8_32b_e100_v16?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5cc8 (    0x20) __block_literal_global.134.10654 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5ce8 (    0x30) __block_descriptor_40_e8_32r_e22_v16?0^{WSWorkspace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5d18 (    0x30) __block_descriptor_40_e8_32r_e104_v24?0^{PKGSpace=Q^{CGXConnection}^{WSWorkspace}^{PKGManagedSpace}^{__CFString}iI^{__CFDictionary}}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5d48 (    0x30) __block_descriptor_56_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5d78 (    0x30) __block_descriptor_112_e8_32b40r48r56r_e970_v24?0Q8^{CGXConnection=^{CGXConnection}^{CGXConnection}I{WSConnectionDatagramInfo=Idd^{WSDatagramWriteStream}^{WSNotifyInterestSet}^{WSNotifyInterestSet}iBBBB}I^{CGXSession}i{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}{CGXConnectionNotificationContext=II^{CGXConnectionNotice}}b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^vI^{__CFDictionary}^{CGSRegionObject}IIIdd^QQQII^{CGSRegionObject}^{CGXCursor}^{__CFDictionary}^vIIIiI{CPSProcessSerNum=II}IIIb1b1b1b1b1b1b1b1b1b1b1b1b1^{CGXEventTap}^{CGXCaptureState}I^v^?dddddI^{CGXDirtyScreenState}IB^{PKGSpace}{WSSymbolicHotKeyBitMask=[8I]}iQ^{x_list_struct}b1b1b1IdId^{SLSStructuralRegionIDRange}{?=III{?=[2I]}{?=[8I]}}^{x_list_struct}^{CGSRegionObject}b1b1IBBQ{?=[8I]}^{CGSRegionObject}B^{CGSRegionObject}b1b1b1Qb1b1ii^{CGXConnectionLayerKitState}^{__CGXConnectionBox}Bd^{__CFString}b1b1b1b1b1b1b1b1b1b1b1b1^{SLSeedResolver}Q^{x_...
                0x00000001db2f5da8 (    0x20) __block_literal_global.197 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5dc8 (    0x30) __block_descriptor_56_e8_32r_e11_v20?0Q8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5df8 (    0x20) __block_literal_global.202 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5e18 (    0x20) __block_literal_global.204.10880 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5e38 (    0x20) __block_literal_global.206 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5e58 (    0x20) __block_literal_global.209.10902 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5e78 (    0x20) __block_literal_global.224 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5e98 (    0x20) __block_literal_global.227 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5eb8 (    0x20) __block_literal_global.229 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5ed8 (    0x20) __block_literal_global.248 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5ef8 (    0x30) __block_descriptor_64_e8_32r40r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f5f28 (    0x20) __block_literal_global.254 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5f48 (    0x20) __block_literal_global.256.10599 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5f68 (    0x20) __block_literal_global.258 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5f88 (    0x20) __block_literal_global.261 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5fa8 (    0x20) __block_literal_global.263.10927 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5fc8 (    0x20) __block_literal_global.277.10952 [NameNList, MangledNameNList, NList] 
                0x00000001db2f5fe8 (    0x20) __block_literal_global.300.10954 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6008 (    0x20) __block_literal_global.302 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6028 (    0x20) __block_literal_global.304 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6048 (    0x20) __block_literal_global.306 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6068 (    0x30) __block_descriptor_57_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6098 (    0x30) __block_descriptor_104_e8_32r40r48r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f60c8 (    0x20) __block_literal_global.323 [NameNList, MangledNameNList, NList] 
                0x00000001db2f60e8 (    0x30) __block_descriptor_88_e8_32r40r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6118 (    0x30) __block_descriptor_42_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6148 (    0x20) __block_literal_global.387 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6168 (    0x20) __block_literal_global.389 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6188 (    0x20) __block_literal_global.391 [NameNList, MangledNameNList, NList] 
                0x00000001db2f61a8 (    0x30) __block_descriptor_72_e8_32r40r_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f61d8 (    0x30) __block_descriptor_56_e8_32r40r_e193_v16?0^{PKGTileEntry=^{PKGTileManager}^{PKGSpace}^{CGXWindow}{CGRect={CGPoint=dd}{CGSize=dd}}BBBq^{CGXWindow}^{CGXConnection}f{PKGWindowDataConstraints={CGSize=dd}{CGSize=dd}{CGSize=dd}}BddII}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6208 (    0x30) __block_descriptor_56_e8_32r40r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6238 (    0x20) __block_literal_global.11087 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6258 (    0x30) __block_descriptor_56_e8_32b_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f6288 (    0x20) __block_literal_global.115.11305 [NameNList, MangledNameNList, NList] 
                0x00000001db2f62a8 (    0x30) __block_descriptor_tmp.11353 [NameNList, MangledNameNList, NList] 
                0x00000001db2f62d8 (    0x30) __block_descriptor_tmp.1.11357 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6308 (    0x30) __block_descriptor_tmp.4.11398 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6338 (    0x30) __block_descriptor_tmp.11.11369 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6368 (    0x20) g_edgeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001db2f6388 (    0x20) g_minEdgeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001db2f63a8 (    0x20) g_maxEdgeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001db2f63c8 (    0x20) g_perpendicularMinEdgeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001db2f63e8 (    0x20) g_perpendicularMaxEdgeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001db2f6408 (    0x60) CGXCursorGetTypeID.class [NameNList, MangledNameNList, NList] 
                0x00000001db2f6468 (    0x20) __block_literal_global.7.11455 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6488 (    0x20) __block_literal_global.11551 [NameNList, MangledNameNList, NList] 
                0x00000001db2f64a8 (    0x20) __block_literal_global.56 [NameNList, MangledNameNList, NList] 
                0x00000001db2f64c8 (    0x30) __block_descriptor_tmp.11882 [NameNList, MangledNameNList, NList] 
                0x00000001db2f64f8 (    0x30) __block_descriptor_tmp.10.11921 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6528 (    0x30) __block_descriptor_tmp.13.11926 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6558 (    0x30) __block_descriptor_tmp.17.11929 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6588 (    0x30) __block_descriptor_tmp.27.11947 [NameNList, MangledNameNList, NList] 
                0x00000001db2f65b8 (    0x30) __block_descriptor_tmp.30.11956 [NameNList, MangledNameNList, NList] 
                0x00000001db2f65e8 (    0x30) __block_descriptor_tmp.35 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6618 (    0x30) __block_descriptor_tmp.38.11961 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6648 (    0x20) __block_literal_global.11898 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6668 (    0x30) __block_descriptor_tmp.42.11903 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6698 (    0x30) __block_descriptor_tmp.45.11911 [NameNList, MangledNameNList, NList] 
                0x00000001db2f66c8 (    0x30) __block_descriptor_tmp.48.11944 [NameNList, MangledNameNList, NList] 
                0x00000001db2f66f8 (    0x20) __block_literal_global.11964 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6718 (   0x108) vtable for WSCAWindowBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2f6820 (    0x20) __block_literal_global.12093 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6840 (    0x20) __block_literal_global.49.12105 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6860 (    0x20) __block_literal_global.69.12127 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6880 (    0x20) __block_literal_global.90 [NameNList, MangledNameNList, NList] 
                0x00000001db2f68a0 (    0x20) __block_literal_global.12156 [NameNList, MangledNameNList, NList] 
                0x00000001db2f68c0 (    0x30) __block_descriptor_56_e8_32r40r48r_e28_v16?0"<MTLCommandBuffer>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f68f0 (    0x38) vtable for std::__1::__shared_ptr_pointer<WSDebugHUDList*, std::__1::shared_ptr<WSDebugHUDList>::__shared_ptr_default_delete<WSDebugHUDList, WSDebugHUDList>, std::__1::allocator<WSDebugHUDList>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f6928 (    0x20) __block_literal_global.12638 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6948 (    0x30) __block_descriptor_40_e8_32c28_ZTSN2WS5CFRefIP9__CFArrayEE_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6978 (    0x30) __block_descriptor_40_e8_32r_e25_v24?0^{__CFString=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f69a8 (    0x30) __block_descriptor_40_e8_32c34_ZTSN2WS5CFRefIP14__CFDictionaryEE_e25_v24?0^{__CFString=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f69d8 (    0x20) __block_literal_global.89 [NameNList, MangledNameNList, NList] 
                0x00000001db2f69f8 (    0x20) __block_literal_global.110.12592 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6a18 (    0x30) __block_descriptor_48_e8_32r_e25_v24?0^{__CFString=}8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6a48 (    0x30) __block_descriptor_tmp.12653 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6a78 (    0x20) __block_literal_global.12654 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6a98 (    0x30) __block_descriptor_tmp.69.12715 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6ac8 (    0x30) __block_descriptor_tmp.169 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6af8 (    0x30) __block_descriptor_tmp.207.12920 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6b28 (    0x30) __block_descriptor_tmp.215.12937 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6b58 (    0x30) __block_descriptor_48_e8_32r_e65_v16?0^{WSWindowActionGroup=Q^{x_list_struct}^{x_list_struct}BB}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6b88 (    0x30) __block_descriptor_48_e8_32b_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f6bb8 (    0x20) __block_literal_global.13083 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6bd8 (    0x20) __block_literal_global.10.13084 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6bf8 (    0x20) __block_literal_global.36.13031 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6c18 (    0x20) __block_literal_global.38.13027 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6c38 (    0x20) __block_literal_global.41 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6c58 (    0x20) __block_literal_global.43.13029 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6c78 (    0x20) __block_literal_global.50 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6c98 (    0x30) __block_descriptor_56_e8_32r40r48r_e8_v12?0B8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6cc8 (    0x30) __block_descriptor_56_e8_32r40r48r_e13_v24?0^v8^v16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6cf8 (    0x30) __block_descriptor_64_e8_32r40r48r56r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6d28 (    0x20) __block_literal_global.65.13006 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6d48 (    0x30) __block_descriptor_40_e8_32r_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f6d78 (    0x20) __block_literal_global.74 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6d98 (    0x30) __block_descriptor_72_e8_32o40o48o56b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f6dc8 (   0x108) vtable for WSWindowStructuralRegionData [NameNList, MangledNameNList, NList] 
                0x00000001db2f6ed0 (    0x20) __block_literal_global.13279 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6ef0 (    0x30) __block_descriptor_tmp.32.13426 [NameNList, MangledNameNList, NList] 
                0x00000001db2f6f20 (   0x108) vtable for (anonymous namespace)::structural_region_container [NameNList, MangledNameNList, NList] 
                0x00000001db2f7028 (    0x48) vtable for std::__1::__function::__func<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12, std::__1::allocator<WSWindowStructuralRegionData::opaque_tracking_root_at_location(CGPoint, bool)::$_12>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7070 (    0x48) vtable for std::__1::__function::__func<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13, std::__1::allocator<WSSessionStructuralRegionData::find_inside_regions(SLSEventRecord const*)::$_13>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f70b8 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::structural_region, std::__1::allocator<(anonymous namespace)::structural_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f70f0 (   0x230) vtable for (anonymous namespace)::structural_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f7320 (    0x20) vtable for (anonymous namespace)::proxy_shared_from_this<(anonymous namespace)::structural_region, WSStructuralRegion> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7340 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::tracking_region, std::__1::allocator<(anonymous namespace)::tracking_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7378 (   0x230) vtable for (anonymous namespace)::tracking_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f75a8 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15, std::__1::allocator<(anonymous namespace)::window_top_region_handling_event(CGXWindow const*, SLSEventRecord const*, CGPoint)::$_15>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f75f0 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14, std::__1::allocator<(anonymous namespace)::window_top_region_matching_event_location(CGXWindow*, SLSEventRecord const*, CGPoint)::$_14>, bool (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7638 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_surface_region, std::__1::allocator<(anonymous namespace)::ca_surface_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7670 (   0x248) vtable for (anonymous namespace)::ca_surface_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f78b8 (   0x248) vtable for (anonymous namespace)::ca_render_attaching_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f7b00 (   0x248) vtable for (anonymous namespace)::ca_context_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f7d48 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::ca_window_region, std::__1::allocator<(anonymous namespace)::ca_window_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f7d80 (   0x248) vtable for (anonymous namespace)::ca_window_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f7fc8 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::remote_region, std::__1::allocator<(anonymous namespace)::remote_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f8000 (   0x248) vtable for (anonymous namespace)::remote_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f8248 (   0x248) vtable for (anonymous namespace)::ca_render_subregion [NameNList, MangledNameNList, NList] 
                0x00000001db2f8490 (    0x48) vtable for std::__1::__function::__func<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16, std::__1::allocator<(anonymous namespace)::window_create_routing_dictionary_at_location(CGXWindow*, CGPoint)::$_16>, void (std::__1::shared_ptr<(anonymous namespace)::structural_region> const&)> [NameNList, MangledNameNList, NList] 
                0x00000001db2f84d8 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::resize_region, std::__1::allocator<(anonymous namespace)::resize_region>> [NameNList, MangledNameNList, NList] 
                0x00000001db2f8510 (   0x230) vtable for (anonymous namespace)::resize_region [NameNList, MangledNameNList, NList] 
                0x00000001db2f8740 (    0x20) vtable for WSStructuralRegion [NameNList, MangledNameNList, NList] 
                0x00000001db2f8760 (    0x20) vtable for (anonymous namespace)::refcounted_proxy<(anonymous namespace)::structural_region> [NameNList, MangledNameNList, NList] 
                0x00000001db2f8780 (    0x30) __block_descriptor_tmp.13561 [NameNList, MangledNameNList, NList] 
                0x00000001db2f87b0 (   0x100) vtable for WSCALayerBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2f88b0 (    0x30) __block_descriptor_76_e8_32r40r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f88e0 (    0x20) __block_literal_global.13697 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8900 (    0x20) __block_literal_global.9.13702 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8920 (    0x30) __block_descriptor_481_e8_32r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f8950 (    0x58) load(char const*)::callbacks [NameNList, MangledNameNList, NList] 
                0x00000001db2f89a8 (    0x30) __block_descriptor_tmp.13874 [NameNList, MangledNameNList, NList] 
                0x00000001db2f89d8 (    0x20) __block_literal_global.13881 [NameNList, MangledNameNList, NList] 
                0x00000001db2f89f8 (    0x50) _block_invoke.attributes [NameNList, MangledNameNList, NList] 
                0x00000001db2f8a48 (    0x20) __block_literal_global.13967 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8a68 (    0x20) __block_literal_global.14001 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8a88 (    0x20) __block_literal_global.14004 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8aa8 (    0x50) vtable for WS::Displays::config_command_origin [NameNList, MangledNameNList, NList] 
                0x00000001db2f8af8 (    0x50) vtable for WS::Displays::config_command_mirror [NameNList, MangledNameNList, NList] 
                0x00000001db2f8b48 (    0x50) vtable for WS::Displays::config_command_unmirror [NameNList, MangledNameNList, NList] 
                0x00000001db2f8b98 (    0x50) vtable for WS::Displays::config_command_softplug [NameNList, MangledNameNList, NList] 
                0x00000001db2f8be8 (    0x50) vtable for WS::Displays::config_command_mode [NameNList, MangledNameNList, NList] 
                0x00000001db2f8c38 (    0x50) vtable for WS::Displays::config_command_output_mode [NameNList, MangledNameNList, NList] 
                0x00000001db2f8c88 (    0x50) vtable for WS::Displays::config_command_rotation [NameNList, MangledNameNList, NList] 
                0x00000001db2f8cd8 (    0x78) vtable for WS::Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f8d50 (    0x48) vtable for std::__1::__function::__func<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23, std::__1::allocator<WS::Displays::configuration_engine::reconcile_panel_connection_power_states(bool, bool)::$_23>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f8d98 (    0x20) __block_literal_global.14267 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8db8 (    0x30) __block_descriptor_tmp.6.14269 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8de8 (    0x30) __block_descriptor_tmp.27.14314 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8e18 (    0x20) __block_literal_global.34.14343 [NameNList, MangledNameNList, NList] 
                0x00000001db2f8e38 (   0x690) vtable for WS::Displays::Manager [NameNList, MangledNameNList, NList] 
                0x00000001db2f94c8 (    0x60) __block_descriptor_tmp.228 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9528 (    0x48) vtable for std::__1::__function::__func<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0, std::__1::allocator<WS::Displays::Manager::best_display_for_capture(unsigned int const*, unsigned int, unsigned int) const::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2f9570 (    0x30) __block_descriptor_72_e8_32b_e45_v24?0"NSObject<OS_xpc_object>"8"NSError"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2f95a0 (    0x20) __block_literal_global.14449 [NameNList, MangledNameNList, NList] 
                0x00000001db2f95c0 (    0x20) __block_literal_global.14482 [NameNList, MangledNameNList, NList] 
                0x00000001db2f95e0 (    0x20) __block_literal_global.3.14468 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9600 (    0x30) __block_descriptor_tmp.14485 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9630 (    0x20) __block_literal_global.14507 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9650 (   0x708) vtable for WS::Displays::Display [NameNList, MangledNameNList, NList] 
                0x00000001db2f9d58 (    0x30) __block_descriptor_56_e8_32r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9d88 (    0x30) __block_descriptor_48_e8_32r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9db8 (    0x30) __block_descriptor_48_e8_32r_e251_B16?0r^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9de8 (    0x20) __block_literal_global.14950 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9e08 (    0x20) __block_literal_global.9.14956 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9e28 (    0x30) __block_descriptor_80_e8_32r48c48_ZTSNSt3__110shared_ptrIN2WS8Displays7DisplayEEE_e11_v16?0I8B12l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9e58 (    0x30) __block_descriptor_56_e8_32b_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f9e88 (    0x30) __block_descriptor_65_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9eb8 (    0x30) __block_descriptor_64_e8_32r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9ee8 (    0x30) __block_descriptor_40_e8_32r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9f18 (    0x30) __block_descriptor_60_e8_32b40r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9f48 (    0x30) __block_descriptor_40_e8_32r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2f9f78 (    0x20) __block_literal_global.64.15037 [NameNList, MangledNameNList, NList] 
                0x00000001db2f9f98 (    0x30) __block_descriptor_56_e8_32r40r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9fc8 (    0x30) __block_descriptor_59_e8_32r40r48r_e5_B8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2f9ff8 (    0x30) __block_descriptor_84_e8_32b40r48r56r64r72r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa028 (    0x30) __block_descriptor_48_e8_32b_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa058 (    0x30) __block_descriptor_48_e8_32b_e30_v16?0^{PKGManagedMenuSpace=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa088 (    0x30) __block_descriptor_48_e8_32b40r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa0b8 (    0x30) __block_descriptor_40_e8_32b_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa0e8 (    0x30) __block_descriptor_86_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa118 (    0x30) __block_descriptor_48_e8_32r40r_e9_B16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa148 (    0x30) __block_descriptor_48_e8_32r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fa178 (    0x20) __block_literal_global.192 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa198 (    0x20) __block_literal_global.194 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa1b8 (    0x20) __block_literal_global.196 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa1d8 (    0x30) __block_descriptor_57_e8_32r40r_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fa208 (    0x30) __block_descriptor_49_e8_32r40r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa238 (    0x30) __block_descriptor_41_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa268 (    0x30) __block_descriptor_73_e8_32r_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa298 (    0x30) __block_descriptor_58_e8_32r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa2c8 (    0x20) __block_literal_global.221 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa2e8 (    0x30) __block_descriptor_48_e8_32r_e250_B16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa318 (    0x20) __block_literal_global.227.14993 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa338 (    0x30) __block_descriptor_56_e8_32r40r48r_e250_v16?0^{SystemStatusBarItem_t=^{CGXWindow}ifffI{CGRect={CGPoint=dd}{CGSize=dd}}B^{PKGManagedMenuSpace}^{__CFString}^{PKGManagedMenuSpace}I{CGRect={CGPoint=dd}{CGSize=dd}}BBBBBBBBBB{CGRect={CGPoint=dd}{CGSize=dd}}^{SystemStatusBarItem_t}^{__CFArray}}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa368 (    0x30) __block_descriptor_48_e8_32o40o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fa398 (    0x30) __block_descriptor_48_e8_32o40o_e9_v16?0^v8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa3c8 (    0x30) __block_descriptor_56_e8_32o40o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa3f8 (    0x30) __block_descriptor_56_e8_32o40b48b_e38_v16?0"NSObject<OS_dispatch_source>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa428 (    0x30) __block_descriptor_56_e8_32o40o48b_e38_v16?0"NSObject<OS_dispatch_source>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa458 (    0x30) __block_descriptor_41_e8_32o_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa488 (    0x30) __block_descriptor_56_e8_32o40b48r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fa4b8 (    0x30) __block_descriptor_tmp.15400 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa4e8 (    0x30) __block_descriptor_tmp.7.15405 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa518 (    0x20) __block_literal_global.15427 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa538 (    0x30) __block_descriptor_56_e8_32r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fa568 (    0xb0) vtable for CaptureSurface [NameNList, MangledNameNList, NList] 
                0x00000001db2fa618 (    0x30) __block_descriptor_tmp.7.15571 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa648 (    0x30) __block_descriptor_tmp.8.15576 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa678 (    0x30) __block_descriptor_tmp.11.15581 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa6a8 (    0x30) __block_descriptor_tmp.14.15584 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa6d8 (    0x30) __block_descriptor_tmp.18.15593 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa708 (    0x30) __block_descriptor_tmp.25.15598 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa738 (    0x30) __block_descriptor_tmp.28.15608 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa768 (    0x30) __block_descriptor_tmp.24.15794 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa798 (    0x20) __block_literal_global.15797 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa7b8 (    0x30) __block_descriptor_tmp.33.15804 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa7e8 (    0x30) __block_descriptor_tmp.36.15807 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa818 (    0x30) __block_descriptor_tmp.42.15812 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa848 (    0x30) __block_descriptor_tmp.54.15687 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa878 (    0x20) __block_literal_global.69.15628 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa898 (    0x20) __block_literal_global.73.15816 [NameNList, MangledNameNList, NList] 
                0x00000001db2fa8b8 (    0x48) vtable for std::__1::__function::__func<SLSDisplayGetUnderscanParameters::$_0, std::__1::allocator<SLSDisplayGetUnderscanParameters::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fa900 (    0x48) vtable for std::__1::__function::__func<SLSDisplaySupportsHDRMode::$_1, std::__1::allocator<SLSDisplaySupportsHDRMode::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fa948 (    0x48) vtable for std::__1::__function::__func<SLSDisplayIsHDRModeEnabled::$_2, std::__1::allocator<SLSDisplayIsHDRModeEnabled::$_2>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fa990 (    0x48) vtable for std::__1::__function::__func<SLSDisplaySetHDRModeEnabled::$_4, std::__1::allocator<SLSDisplaySetHDRModeEnabled::$_4>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fa9d8 (    0x48) vtable for std::__1::__function::__func<SLSDisplayGetCapabilities::$_5, std::__1::allocator<SLSDisplayGetCapabilities::$_5>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2faa20 (    0x20) __block_literal_global.15877 [NameNList, MangledNameNList, NList] 
                0x00000001db2faa40 (    0x60) CGSConnectionGetTypeID::'block-literal'::cls [NameNList, MangledNameNList, NList] 
                0x00000001db2faaa0 (    0x20) __block_literal_global.7.15881 [NameNList, MangledNameNList, NList] 
                0x00000001db2faac0 (    0x20) __block_literal_global.19.15956 [NameNList, MangledNameNList, NList] 
                0x00000001db2faae0 (    0x20) __block_literal_global.33.15975 [NameNList, MangledNameNList, NList] 
                0x00000001db2fab00 (    0x20) __block_literal_global.49.15861 [NameNList, MangledNameNList, NList] 
                0x00000001db2fab20 (    0x30) __block_descriptor_44_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fab50 (    0x20) __block_literal_global.56.15858 [NameNList, MangledNameNList, NList] 
                0x00000001db2fab70 (    0x20) __block_literal_global.66.15882 [NameNList, MangledNameNList, NList] 
                0x00000001db2fab90 (    0x20) __block_literal_global.71.15867 [NameNList, MangledNameNList, NList] 
                0x00000001db2fabb0 (    0x20) __block_literal_global.80.15842 [NameNList, MangledNameNList, NList] 
                0x00000001db2fabd0 (    0x30) __block_descriptor_49_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fac00 (    0x48) vtable for std::__1::__function::__func<SLSSetConnectionProperty::$_0, std::__1::allocator<SLSSetConnectionProperty::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fac48 (    0x30) __block_descriptor_tmp.16032 [NameNList, MangledNameNList, NList] 
                0x00000001db2fac78 (    0x30) __block_descriptor_tmp.11.16030 [NameNList, MangledNameNList, NList] 
                0x00000001db2faca8 (    0x30) __block_descriptor_tmp.14.16071 [NameNList, MangledNameNList, NList] 
                0x00000001db2facd8 (    0x30) __block_descriptor_tmp.19.16041 [NameNList, MangledNameNList, NList] 
                0x00000001db2fad08 (    0x30) __block_descriptor_tmp.23.16042 [NameNList, MangledNameNList, NList] 
                0x00000001db2fad38 (    0x30) __block_descriptor_tmp.28.16038 [NameNList, MangledNameNList, NList] 
                0x00000001db2fad68 (    0x30) __block_descriptor_tmp.30.16055 [NameNList, MangledNameNList, NList] 
                0x00000001db2fad98 (    0x30) __block_descriptor_tmp.32.16048 [NameNList, MangledNameNList, NList] 
                0x00000001db2fadc8 (    0x20) __block_literal_global.16049 [NameNList, MangledNameNList, NList] 
                0x00000001db2fade8 (    0x30) __block_descriptor_tmp.37.16035 [NameNList, MangledNameNList, NList] 
                0x00000001db2fae18 (    0x20) __block_literal_global.16129 [NameNList, MangledNameNList, NList] 
                0x00000001db2fae38 (    0x20) __block_literal_global.16195 [NameNList, MangledNameNList, NList] 
                0x00000001db2fae58 (    0x60) _block_invoke.cls [NameNList, MangledNameNList, NList] 
                0x00000001db2faeb8 (    0x30) __block_descriptor_108_e8_32o40r48r56r64r72r80r_e13_i20?0r^v8I16l [NameNList, MangledNameNList, NList] 
                0x00000001db2faee8 (    0x30) __block_descriptor_45_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2faf18 (    0x30) __block_descriptor_48_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2faf48 (    0x20) __block_literal_global.16441 [NameNList, MangledNameNList, NList] 
                0x00000001db2faf68 (    0x48) vtable for std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_4>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fafb0 (    0x48) vtable for std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_5>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2faff8 (    0x48) vtable for std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_6>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb040 (    0x30) __block_descriptor_tmp.28.16604 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb070 (    0x48) vtable for std::__1::__function::__func<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3, std::__1::allocator<WS::Updater::ca_prepare_begin_surface_update(CGXWindow*, WS::Updater::UpdateState&)::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb0b8 (    0x20) __block_literal_global.33.16607 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb0d8 (    0x48) vtable for std::__1::__function::__func<display_comparator()::$_2, std::__1::allocator<display_comparator()::$_2>, bool (std::__1::shared_ptr<WS::Displays::Display>, std::__1::shared_ptr<WS::Displays::Display>)> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb120 (    0x70) vtable for std::__1::__function::__func<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7, std::__1::allocator<WS::Updater::UpdateDisplays(CGXConnection*, bool, std::__1::vector<std::__1::shared_ptr<WS::Displays::Display>, std::__1::allocator<std::__1::shared_ptr<WS::Displays::Display>>>)::$_7>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb190 (    0x30) __block_descriptor_tmp.4.16723 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb1c0 (    0x30) __block_descriptor_tmp.7.16727 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb1f0 (    0x60) SLDisplayModeGetTypeID.class [NameNList, MangledNameNList, NList] 
                0x00000001db2fb250 (    0x20) __block_literal_global.66.16797 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb270 (    0x20) __block_literal_global.70.16734 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb290 (    0x20) __block_literal_global.89.16848 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb2b0 (    0x20) __block_literal_global.113.16869 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb2d0 (    0x20) __block_literal_global.16894 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb2f0 (    0x30) __block_descriptor_tmp.17192 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb320 (    0x20) __block_literal_global.17071 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb340 (    0x30) __block_descriptor_tmp.86.17323 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb370 (    0x38) vtable for WS::SLSeedResolverBase [NameNList, MangledNameNList, NList] 
                0x00000001db2fb3a8 (    0x38) vtable for WS::SLSeedResolver [NameNList, MangledNameNList, NList] 
                0x00000001db2fb3e0 (    0x30) __block_descriptor_tmp.17355 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb410 (    0x20) vtable for CFArrayRefWrap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fb430 (    0x20) vtable for CFRefWrap<__CFArray const*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fb450 (    0x70) vtable for ScrollWheelEventItem [NameNList, MangledNameNList, NList] 
                0x00000001db2fb4c0 (    0x40) vtable for EventItemBase [NameNList, MangledNameNList, NList] 
                0x00000001db2fb500 (    0x70) vtable for DigitizerScrollEventItem [NameNList, MangledNameNList, NList] 
                0x00000001db2fb570 (    0x70) vtable for PointerEventItem [NameNList, MangledNameNList, NList] 
                0x00000001db2fb5e0 (    0x70) vtable for PointerEventItem2 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb650 (    0x20) __block_literal_global.17390 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb670 (    0x70) vtable for DockSwipeEventItem [NameNList, MangledNameNList, NList] 
                0x00000001db2fb6e0 (    0x40) vtable for DigitizerSTREventItem [NameNList, MangledNameNList, NList] 
                0x00000001db2fb720 (    0x40) vtable for EventItemOther [NameNList, MangledNameNList, NList] 
                0x00000001db2fb760 (    0x38) vtable for std::__1::__shared_ptr_emplace<EventInterpolator, std::__1::allocator<EventInterpolator>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb798 (    0x20) __block_literal_global.17828 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb7b8 (    0x30) __block_descriptor_tmp.17853 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb7e8 (    0x20) __block_literal_global.17879 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb808 (    0x20) __block_literal_global.4.17880 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb828 (    0x20) __block_literal_global.7.17881 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb848 (    0x20) __block_literal_global.10.17882 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb868 (    0x20) __block_literal_global.13.17883 [NameNList, MangledNameNList, NList] 
                0x00000001db2fb888 (    0x38) vtable for std::__1::__shared_ptr_pointer<CGSBacktrace*, void (*)(CGSBacktrace*), std::__1::allocator<CGSBacktrace>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fb8c0 (    0x30) __block_descriptor_48_e8_32o40b_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fb8f0 (    0x30) __block_descriptor_48_e8_32b_e45_v24?0"NSObject<OS_xpc_object>"8"NSError"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fb920 (    0x30) __block_descriptor_48_e8_32b40r_e17_v16?0"NSError"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fb950 (    0x30) __block_descriptor_48_e8_32b40b_e38_v16?0"NSObject<OS_dispatch_source>"8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fb980 (    0x30) __block_descriptor_48_e8_32b40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fb9b0 (    0x30) __block_descriptor_48_e8_32r40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fb9e0 (    0x30) __block_descriptor_48_e8_32b40b_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fba10 (    0x30) __block_descriptor_56_e8_32b40b48r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fba40 (    0x20) __block_literal_global.17939 [NameNList, MangledNameNList, NList] 
                0x00000001db2fba60 (    0x30) __block_descriptor_tmp.1.18483 [NameNList, MangledNameNList, NList] 
                0x00000001db2fba90 (    0x30) __block_descriptor_tmp.4.18489 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbac0 (    0x30) __block_descriptor_tmp.8.18499 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbaf0 (    0x20) __block_literal_global.18525 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbb10 (    0x30) __block_descriptor_tmp.13.18506 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbb40 (    0x30) __block_descriptor_tmp.16.18513 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbb70 (    0x20) __block_literal_global.21.18514 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbb90 (    0x30) __block_descriptor_tmp.25.18510 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbbc0 (    0x30) __block_descriptor_tmp.28.18507 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbbf0 (    0x20) __block_literal_global.31.18524 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbc10 (    0x20) __block_literal_global.34.18544 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbc30 (    0x30) __block_descriptor_tmp.35.18547 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbc60 (    0x20) __block_literal_global.39 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbc80 (    0x30) __block_descriptor_tmp.9.18601 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbcb0 (    0x30) __block_descriptor_tmp.13.18597 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbce0 (    0x20) __block_literal_global.18.18559 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbd00 (    0x20) __block_literal_global.18740 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbd20 (    0x20) __block_literal_global.8.18765 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbd40 (    0x30) __block_descriptor_40_e8_32o_e25_v32?0"NSString"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2fbd70 (    0x20) __block_literal_global.19072 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbd90 (    0x30) __block_descriptor_48_e8_32o40o_e25_v32?0"NSString"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2fbdc0 (    0x30) __block_descriptor_48_e8_32o40r_e25_v32?0"NSString"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2fbdf0 (    0x48) vtable for std::__1::__function::__func<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2, std::__1::allocator<-[SLDisplayPresetDevice getUserAdjustmentPowerLimit]::$_2>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fbe38 (    0x48) vtable for std::__1::__function::__func<CreateCalibrationHIDDeviceForContainerID::$_1, std::__1::allocator<CreateCalibrationHIDDeviceForContainerID::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fbe80 (    0x50) vtable for Transition [NameNList, MangledNameNList, NList] 
                0x00000001db2fbed0 (    0x20) __block_literal_global.19518 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbef0 (    0x30) __block_descriptor_tmp.74.19454 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbf20 (    0x20) vtable for HMD::HMDMachResponse [NameNList, MangledNameNList, NList] 
                0x00000001db2fbf40 (    0x20) vtable for HMD::HMDAsyncWaitState [NameNList, MangledNameNList, NList] 
                0x00000001db2fbf60 (    0x20) __block_literal_global.123.19583 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbf80 (    0x38) vtable for std::__1::__shared_ptr_emplace<HMD, std::__1::allocator<HMD>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fbfb8 (    0x30) __block_descriptor_tmp.134.19619 [NameNList, MangledNameNList, NList] 
                0x00000001db2fbfe8 (    0x30) __block_descriptor_tmp.143 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc018 (    0x38) vtable for std::__1::__shared_ptr_emplace<Drawable, std::__1::allocator<Drawable>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fc050 (    0x38) vtable for std::__1::__shared_ptr_emplace<DrawableQueue, std::__1::allocator<DrawableQueue>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fc088 (    0x30) __block_descriptor_tmp.19697 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc0b8 (    0x20) __block_literal_global.19687 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc0d8 (    0x30) __block_descriptor_tmp.49.19704 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc108 (    0x30) __block_descriptor_tmp.52.19707 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc138 (    0x20) __block_literal_global.19739 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc158 (    0x20) __block_literal_global.19818 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc178 (    0x60) SLSTransactionGetTypeID::'block-literal'::cls [NameNList, MangledNameNList, NList] 
                0x00000001db2fc1d8 (    0x20) __block_literal_global.10.19865 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc1f8 (    0x20) __block_literal_global.12 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc218 (    0x20) __block_literal_global.15.19869 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc238 (    0x20) __block_literal_global.18.19874 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc258 (    0x20) __block_literal_global.20.19876 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc278 (    0x20) __block_literal_global.25 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc298 (    0x20) __block_literal_global.27 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc2b8 (    0x20) __block_literal_global.31.19888 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc2d8 (    0x20) __block_literal_global.35 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc2f8 (    0x20) __block_literal_global.37 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc318 (    0x20) __block_literal_global.39.19909 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc338 (    0x20) __block_literal_global.43.19831 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc358 (    0x20) __block_literal_global.51 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc378 (    0x20) __block_literal_global.19993 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc398 (    0x20) __block_literal_global.3.19992 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc3b8 (    0x20) __block_literal_global.6.19996 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc3d8 (    0x30) __block_descriptor_48_e8_32r40r_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fc408 (    0x20) __block_literal_global.8.20007 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc428 (    0xb0) vtable for CaptureSurfaceMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2fc4d8 (    0x30) __block_descriptor_tmp.2.20197 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc508 (    0x20) __block_literal_global.20253 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc528 (    0x20) __block_literal_global.12.20247 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc548 (    0x20) __block_literal_global.15.20270 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc568 (    0x20) __block_literal_global.18.20221 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc588 (    0x20) __block_literal_global.37.20345 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc5a8 (    0x20) __block_literal_global.59 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc5c8 (    0x20) __block_literal_global.62 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc5e8 (    0x20) __block_literal_global.65.20236 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc608 (    0x20) __block_literal_global.71.20250 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc628 (    0x20) __block_literal_global.74.20213 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc648 (    0x20) __block_literal_global.77 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc668 (    0x20) __block_literal_global.80.20222 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc688 (    0x20) __block_literal_global.84 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc6a8 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter, std::__1::allocator<(anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fc6e0 (    0x28) vtable for (anonymous namespace)::EventMatchingKeyboardVirtualKeyCodeFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2fc708 (    0x38) vtable for std::__1::__shared_ptr_emplace<(anonymous namespace)::EventMatchingMouseButtonsFilter, std::__1::allocator<(anonymous namespace)::EventMatchingMouseButtonsFilter>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fc740 (    0x28) vtable for (anonymous namespace)::EventMatchingMouseButtonsFilter [NameNList, MangledNameNList, NList] 
                0x00000001db2fc768 (    0x20) __block_literal_global.20399 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc788 (    0x38) vtable for std::__1::__shared_ptr_emplace<WS::Shmem, std::__1::allocator<WS::Shmem>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fc7c0 (    0x20) __block_literal_global.20479 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc7e0 (    0x20) __block_literal_global.5.20512 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc800 (    0x30) __block_descriptor_tmp.6.20515 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc830 (    0x30) __block_descriptor_tmp.9.20483 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc860 (    0x20) __block_literal_global.15.20488 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc880 (    0x30) __block_descriptor_tmp.16.20489 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc8b0 (    0x20) __block_literal_global.19.20495 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc8d0 (    0x20) __block_literal_global.22 [NameNList, MangledNameNList, NList] 
                0x00000001db2fc8f0 (   0x128) vtable for MetalBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fca18 (   0x128) vtable for MetalIOSurfaceBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fcb40 (   0x158) vtable for MetalIOAccelBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fcc98 (   0x158) vtable for MetalIOAccelSurfaceBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fcdf0 (   0x158) vtable for MetalIOAccelHybridBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fcf48 (   0x128) vtable for MetalTiledBacking [NameNList, MangledNameNList, NList] 
                0x00000001db2fd070 (    0x50) vtable for SingleTexturePerDeviceData [NameNList, MangledNameNList, NList] 
                0x00000001db2fd0c0 (    0x50) vtable for DualTexturePerDeviceData [NameNList, MangledNameNList, NList] 
                0x00000001db2fd110 (    0x20) __block_literal_global.20853 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd130 (    0x20) __block_literal_global.21089 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd150 (    0x20) __block_literal_global.21229 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd170 (    0x30) __block_descriptor_40_e8_32o_e34_v24?0"<MTLDevice>"8"NSString"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fd1a0 (    0x20) __block_literal_global.18.21325 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd1c0 (   0x108) vtable for CompositorMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2fd2c8 (    0x48) vtable for std::__1::__function::__func<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6, std::__1::allocator<metal_composite_ripple(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_6>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd310 (    0x48) vtable for std::__1::__function::__func<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8, std::__1::allocator<metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_8>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd358 (    0x48) vtable for std::__1::__function::__func<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7, std::__1::allocator<metal_composite_group(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::$_7>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd3a0 (    0x48) vtable for std::__1::__function::__func<render_scaled_rect(MetalContext*, CGColorSpace*, CGColorSpace*, CGRect, id<MTLTexture>, CGRect, objc_object<MTLTexture>, objc_object<MTLTexture>, WSMatrix, float, bool, bool)::$_12, std::__1::allocator<WSMatrix>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd3e8 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_0, std::__1::allocator<CGAffineTransform const&>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd430 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::CopyTextureToTextureWithRegion(id<MTLTexture>, objc_object<MTLTexture>, CGSRegionObject*, CGAffineTransform const&, CGAffineTransform const, bool)::$_1, std::__1::allocator<CGAffineTransform const&>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd478 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_2, std::__1::allocator<CGSRegionObject*>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd4c0 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::InPlaceAlphaUnpremultiplyTextureInRegion(id<MTLTexture>, CGSRegionObject*)::$_3, std::__1::allocator<CGSRegionObject*>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd508 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_4, std::__1::allocator<CGSRegionObject*>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd550 (    0x48) vtable for std::__1::__function::__func<CompositorMetal::InPlaceSoverInRegion(id<MTLTexture>, CGSRegionObject*, float, float, float, float)::$_5, std::__1::allocator<CGSRegionObject*>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd598 (    0x20) __block_literal_global.21372 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd5b8 (    0x48) vtable for std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_5, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_5>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd600 (    0x48) vtable for std::__1::__function::__func<SamplePresetData(__CFUUID const*)::'block-literal'::$_6, std::__1::allocator<SamplePresetData(__CFUUID const*)::'block-literal'::$_6>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd648 (    0x48) vtable for std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd690 (    0x48) vtable for std::__1::__function::__func<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4, std::__1::allocator<FetchPresetData(__CFUUID const*, unsigned int, unsigned int, std::__1::unordered_map<int, CGXHIDDisplayReportingPresetData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, CGXHIDDisplayReportingPresetData>>>*)::$_4>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd6d8 (    0x30) __block_descriptor_56_e8_32o40r48r_e19_v16?0^{__CFData=}8l [NameNList, MangledNameNList, NList] 
                0x00000001db2fd708 (    0x48) vtable for std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_0, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd750 (    0x48) vtable for std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_1, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_1>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd798 (    0x48) vtable for std::__1::__function::__func<FetchReportingData(__CFString const*, IOReportingType)::$_2, std::__1::allocator<FetchReportingData(__CFString const*, IOReportingType)::$_2>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd7e0 (    0x20) __block_literal_global.89.21447 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd800 (    0x20) __block_literal_global.91.21492 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd820 (    0x20) __block_literal_global.131.21448 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd840 (    0x20) __block_literal_global.133.21449 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd860 (    0x48) vtable for std::__1::__function::__func<SampleDisplayInfo(int)::$_7, std::__1::allocator<SampleDisplayInfo(int)::$_7>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fd8a8 (    0x20) __block_literal_global.21540 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd8c8 (    0x20) __block_literal_global.4.21564 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd8e8 (    0x20) __block_literal_global.14.21551 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd908 (    0x20) __block_literal_global.21610 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd928 (    0x20) __block_literal_global.21.21663 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd948 (    0x20) __block_literal_global.27.21703 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd968 (    0x30) __block_descriptor_tmp.30.21704 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd998 (    0x20) __block_literal_global.34.21705 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd9b8 (    0x20) __block_literal_global.58.21679 [NameNList, MangledNameNList, NList] 
                0x00000001db2fd9d8 (    0x28) portNoticeArrayCallBacks [NameNList, MangledNameNList, NList] 
                0x00000001db2fda00 (    0x30) __block_descriptor_tmp.25.21859 [NameNList, MangledNameNList, NList] 
                0x00000001db2fda30 (    0x38) vtable for DisplayStreamVideoToolbox [NameNList, MangledNameNList, NList] 
                0x00000001db2fda68 (    0x20) __block_literal_global.21918 [NameNList, MangledNameNList, NList] 
                0x00000001db2fda88 (    0x20) __block_literal_global.59.21944 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdaa8 (    0x20) __block_literal_global.66.21961 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdac8 (    0x30) __block_descriptor_tmp.70.21962 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdaf8 (    0x20) __block_literal_global.84.21993 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdb18 (    0x20) __block_literal_global.91.22085 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdb38 (    0x20) __block_literal_global.95.22088 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdb58 (    0x20) __block_literal_global.100 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdb78 (    0x20) __block_literal_global.103 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdb98 (    0x20) __block_literal_global.22101 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdbb8 (    0x38) vtable for std::__1::__shared_ptr_emplace<GamepolicyClient, std::__1::allocator<GamepolicyClient>> [NameNList, MangledNameNList, NList] 
                0x00000001db2fdbf0 (    0x30) __block_descriptor_tmp.9.22110 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdc20 (    0x20) __block_literal_global.22178 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdc40 (    0x20) __block_literal_global.3.22145 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdc60 (    0x48) vtable for std::__1::__function::__func<render_scaled_iosurface_to_dest_internal::$_0, std::__1::allocator<render_scaled_iosurface_to_dest_internal::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fdca8 (    0x38) vtable for DisplayStreamStateMetal [NameNList, MangledNameNList, NList] 
                0x00000001db2fdce0 (    0x48) vtable for std::__1::__function::__func<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0, std::__1::allocator<DisplayStreamStateMetal::CopyFrame(CGXDisplayStream*, std::__1::shared_ptr<WS::Displays::Display>)::$_0>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db2fdd28 (   0x108) vtable for CompositorNoop [NameNList, MangledNameNList, NList] 
                0x00000001db2fde30 (    0x20) __block_literal_global.22249 [NameNList, MangledNameNList, NList] 
                0x00000001db2fde50 (    0x60) WSWindowMaskGetTypeID()::window_mask_class [NameNList, MangledNameNList, NList] 
                0x00000001db2fdeb0 (    0x20) __block_literal_global.15.22330 [NameNList, MangledNameNList, NList] 
                0x00000001db2fded0 (    0x20) __block_literal_global.18.22331 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdef0 (    0x20) __block_literal_global.26.22381 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdf10 (    0x20) __block_literal_global.36.22373 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdf30 (    0x20) __block_literal_global.22405 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdf50 (    0x20) __block_literal_global.6.22424 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdf70 (    0x20) __block_literal_global.9.22415 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdf90 (    0x30) __block_descriptor_53_ea8_32s40s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fdfc0 (    0x20) __block_literal_global.22671 [NameNList, MangledNameNList, NList] 
                0x00000001db2fdfe0 (    0x20) __block_literal_global.90.22845 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe000 (    0x20) __block_literal_global.93 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe020 (    0x30) __block_descriptor_44_ea8_32s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe050 (    0x30) __block_descriptor_40_ea8_32s_e47_v24?0"WMWindowTransaction"8"CAFenceHandle"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe080 (    0x30) __block_descriptor_40_ea8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe0b0 (    0x30) __block_descriptor_72_ea8_32s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe0e0 (    0x30) __block_descriptor_52_ea8_32s40s_e47_v24?0"WMWindowTransaction"8"CAFenceHandle"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe110 (    0x30) __block_descriptor_57_ea8_32s40s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe140 (    0x30) __block_descriptor_52_ea8_32s40s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe170 (    0x30) __block_descriptor_40_ea8_32s_e44_B32?0"SLSWMBridgedWindowChildInfo"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe1a0 (    0x30) __block_descriptor_48_ea8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe1d0 (    0x30) __block_descriptor_48_ea8_32s_e47_v24?0"WMWindowTransaction"8"CAFenceHandle"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe200 (    0x30) __block_descriptor_40_ea8_32bs_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe230 (    0x60) WSCompositeDestinationGetTypeID()::composite_destination_class [NameNList, MangledNameNList, NList] 
                0x00000001db2fe290 (    0x20) __block_literal_global.8.23009 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe2b0 (    0x30) __block_descriptor_40_e8_32o_e37_B24?0r*8"NSObject<OS_xpc_object>"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe2e0 (    0x30) __block_descriptor_40_e8_32o_e36_B24?0Q8"NSObject<OS_xpc_object>"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe310 (    0x30) __block_descriptor_48_e8_32o40o_e37_B24?0r*8"NSObject<OS_xpc_object>"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe340 (    0x30) __block_descriptor_40_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe370 (    0x30) __block_descriptor_40_e8_32o_e45_v24?0"NSObject<OS_xpc_object>"8"NSError"16l [NameNList, MangledNameNList, NList] 
                0x00000001db2fe3a0 (    0x30) __block_descriptor_40_e8_32o_e33_v16?0"NSObject<OS_xpc_object>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe3d0 (    0x30) __block_descriptor_48_e8_32o40b_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe400 (    0x30) __block_descriptor_40_e8_32b_e45_v24?0"NSObject<OS_xpc_object>"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe430 (    0x30) __block_descriptor_40_e8_32b_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe460 (    0x20) __block_literal_global.23117 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe480 (    0x20) __block_literal_global.23186 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe4a0 (    0x28) vtable for SLPolygon [NameNList, MangledNameNList, NList] 
                0x00000001db2fe4c8 (    0x28) vtable for FanPolygon [NameNList, MangledNameNList, NList] 
                0x00000001db2fe4f0 (    0x28) vtable for CenterPolygon [NameNList, MangledNameNList, NList] 
                0x00000001db2fe518 (    0x28) vtable for CurveCornerPolygon [NameNList, MangledNameNList, NList] 
                0x00000001db2fe540 (    0x38) vtable for LinePath [NameNList, MangledNameNList, NList] 
                0x00000001db2fe578 (    0x48) vtable for QuadraticCurvePath [NameNList, MangledNameNList, NList] 
                0x00000001db2fe5c0 (    0x48) vtable for BezierCurvePath [NameNList, MangledNameNList, NList] 
                0x00000001db2fe608 (    0x30) __block_descriptor_tmp.26.23198 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe638 (    0x30) __block_descriptor_tmp.30.23182 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe668 (    0x30) __block_descriptor_tmp.2.23224 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe698 (    0x20) __block_literal_global.23247 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe6b8 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db2fe6e8 (    0x20) __block_literal_global.4.23261 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe708 (    0x20) __block_literal_global.7.23252 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe728 (    0x20) __block_literal_global.9.23254 [NameNList, MangledNameNList, NList] 
                0x00000001db2fe748 (    0xe8) _DDXCGXHMD_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db2fe830 (   0xae8) _CGXCGXWindowServer_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db2ff318 (    0x70) _CGYCGYEventTap_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db2ff388 (   0x660) _CGXCGXRendezvous_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db2ff9e8 (    0x70) _CGYCGYSpinControl_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db2ffa58 (  0x5d40) _CGXCGXServices_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db305798 (   0x4a8) _WSXServicesRelocated_subsystem [NameNList, MangledNameNList, NList] 
                0x00000001db305c40 (   0x1b0) _WSXServerRelocated_subsystem [NameNList, MangledNameNList, NList] 
            0x00000001db305df0 (  0xc980) __AUTH_CONST __cfstring
            0x00000001db312770 (  0x5770) __AUTH_CONST __objc_const
                0x00000001db312770 (    0x48) _OBJC_METACLASS_RO_$_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001db3127b8 (    0x48) _OBJC_CLASS_RO_$_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001db312800 (    0x48) _OBJC_METACLASS_RO_$_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x00000001db312848 (    0x48) _OBJC_CLASS_RO_$_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x00000001db312890 (    0x48) _OBJC_METACLASS_RO_$_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x00000001db3128d8 (    0x48) _OBJC_CLASS_RO_$_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x00000001db312920 (    0x48) _OBJC_CLASS_RO_$_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001db312968 (    0x48) _OBJC_METACLASS_RO_$_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db3129b0 (    0x48) _OBJC_CLASS_RO_$_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db3129f8 (    0x48) _OBJC_METACLASS_RO_$_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db312a40 (    0x48) _OBJC_CLASS_RO_$_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001db312a88 (    0x48) _OBJC_CLASS_RO_$_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db312ad0 (    0x48) _OBJC_METACLASS_RO_$_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001db312b18 (    0x48) _OBJC_CLASS_RO_$_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001db312b60 (    0x48) _OBJC_CLASS_RO_$_SLWindowFilter [NameNList, MangledNameNList, NList] 
                0x00000001db312ba8 (    0x48) _OBJC_CLASS_RO_$_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x00000001db312bf0 (    0x48) _OBJC_CLASS_RO_$_SLSharingSession [NameNList, MangledNameNList, NList] 
                0x00000001db312c38 (    0x48) _OBJC_METACLASS_RO_$_SLSharingSessionManager [NameNList, MangledNameNList, NList] 
                0x00000001db312c80 (    0x48) _OBJC_CLASS_RO_$_SLSharingSessionManager [NameNList, MangledNameNList, NList] 
                0x00000001db312cc8 (    0x48) _OBJC_METACLASS_RO_$_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001db312d10 (    0x48) _OBJC_CLASS_RO_$_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001db312d58 (    0x48) _OBJC_METACLASS_RO_$_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001db312da0 (    0x48) _OBJC_CLASS_RO_$_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001db312de8 (    0x48) _OBJC_METACLASS_RO_$_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db312e30 (    0x48) _OBJC_CLASS_RO_$_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db312e78 (    0x48) _OBJC_METACLASS_RO_$_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db312ec0 (    0x48) _OBJC_CLASS_RO_$_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001db312f08 (    0x48) _OBJC_METACLASS_RO_$_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db312f50 (    0x48) _OBJC_CLASS_RO_$_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db312f98 (    0x40) _OBJC_$_CATEGORY_CALayer_$_PKGCoreUI [NameNList, MangledNameNList, NList] 
                0x00000001db312fd8 (    0x48) _OBJC_METACLASS_RO_$_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x00000001db313020 (    0x48) _OBJC_CLASS_RO_$_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x00000001db313068 (    0x48) _OBJC_CLASS_RO_$_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001db3130b0 (    0x48) _OBJC_CLASS_RO_$_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x00000001db3130f8 (    0x48) _OBJC_CLASS_RO_$_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db313140 (    0x48) _OBJC_CLASS_RO_$_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001db313188 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x00000001db3131d0 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineConfig [NameNList, MangledNameNList, NList] 
                0x00000001db313218 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db313260 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001db3132a8 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db3132f0 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db313338 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db313380 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001db3133c8 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313410 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313458 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001db3134a0 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001db3134e8 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313530 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313578 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db3135c0 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313608 (    0x48) _OBJC_METACLASS_RO_$_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313650 (    0x48) _OBJC_CLASS_RO_$_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001db313698 (    0x48) _OBJC_CLASS_RO_$_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001db3136e0 (    0x48) _OBJC_CLASS_RO_$_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db313728 (    0x48) _OBJC_METACLASS_RO_$_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001db313770 (    0x48) _OBJC_CLASS_RO_$_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001db3137b8 (    0x48) _OBJC_METACLASS_RO_$_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x00000001db313800 (    0x48) _OBJC_CLASS_RO_$_SLSecureCursorAssertion [NameNList, MangledNameNList, NList] 
                0x00000001db313848 (    0x48) _OBJC_METACLASS_RO_$_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001db313890 (    0x48) _OBJC_CLASS_RO_$_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001db3138d8 (    0x48) _OBJC_METACLASS_RO_$_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x00000001db313920 (    0x48) _OBJC_CLASS_RO_$_SLSessionOwner [NameNList, MangledNameNList, NList] 
                0x00000001db313968 (    0x48) _OBJC_CLASS_RO_$_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001db3139b0 (    0x48) _OBJC_CLASS_RO_$_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x00000001db3139f8 (    0x48) _OBJC_CLASS_RO_$_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x00000001db313a40 (    0x48) _OBJC_METACLASS_RO_$_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313a88 (    0x48) _OBJC_CLASS_RO_$_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313ad0 (    0x48) _OBJC_METACLASS_RO_$_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313b18 (    0x48) _OBJC_CLASS_RO_$_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313b60 (    0x48) _OBJC_METACLASS_RO_$_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313ba8 (    0x48) _OBJC_CLASS_RO_$_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313bf0 (    0x48) _OBJC_METACLASS_RO_$_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313c38 (    0x48) _OBJC_CLASS_RO_$_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001db313c80 (    0x48) _OBJC_METACLASS_RO_$_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db313cc8 (    0x48) _OBJC_CLASS_RO_$_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001db313d10 (    0x48) _OBJC_METACLASS_RO_$_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001db313d58 (    0x48) _OBJC_CLASS_RO_$_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001db313da0 (    0x48) _OBJC_METACLASS_RO_$_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x00000001db313de8 (    0x48) _OBJC_CLASS_RO_$_SLScreenTelemetryConnection [NameNList, MangledNameNList, NList] 
                0x00000001db313e30 (    0x48) _OBJC_CLASS_RO_$_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db313e78 (    0x48) _OBJC_CLASS_RO_$_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001db313ec0 (    0x48) _OBJC_CLASS_RO_$_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001db313f08 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x00000001db313f50 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x00000001db313f98 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db313fe0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db314028 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x00000001db314070 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x00000001db3140b8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x00000001db314100 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x00000001db314148 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x00000001db314190 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x00000001db3141d8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x00000001db314220 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x00000001db314268 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x00000001db3142b0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x00000001db3142f8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x00000001db314340 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x00000001db314388 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db3143d0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db314418 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x00000001db314460 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x00000001db3144a8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db3144f0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db314538 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x00000001db314580 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x00000001db3145c8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x00000001db314610 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x00000001db314658 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x00000001db3146a0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x00000001db3146e8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x00000001db314730 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x00000001db314778 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db3147c0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x00000001db314808 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x00000001db314850 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x00000001db314898 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x00000001db3148e0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x00000001db314928 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x00000001db314970 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x00000001db3149b8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x00000001db314a00 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x00000001db314a48 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db314a90 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x00000001db314ad8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x00000001db314b20 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x00000001db314b68 (    0x48) _OBJC_METACLASS_RO_$_SLSSynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314bb0 (    0x48) _OBJC_CLASS_RO_$_SLSSynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314bf8 (    0x48) _OBJC_METACLASS_RO_$_SLSAsynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314c40 (    0x48) _OBJC_CLASS_RO_$_SLSAsynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314c88 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314cd0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314d18 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314d60 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314da8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314df0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314e38 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314e80 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314ec8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314f10 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314f58 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314fa0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db314fe8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315030 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315078 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3150c0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315108 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315150 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315198 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3151e0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315228 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315270 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3152b8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315300 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315348 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315390 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3153d8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315420 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315468 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3154b0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3154f8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315540 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315588 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3155d0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315618 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315660 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3156a8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3156f0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315738 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315780 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3157c8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315810 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315858 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3158a0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3158e8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315930 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315978 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3159c0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315a08 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315a50 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315a98 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315ae0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315b28 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315b70 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315bb8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315c00 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315c48 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315c90 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315cd8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315d20 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315d68 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315db0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315df8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315e40 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315e88 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315ed0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315f18 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315f60 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315fa8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x00000001db315ff0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316038 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316080 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3160c8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316110 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316158 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3161a0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3161e8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316230 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316278 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedGetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3162c0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedGetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316308 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyManagedDisplaySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316350 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyManagedDisplaySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316398 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3163e0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316428 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyManagedDisplaysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316470 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyManagedDisplaysOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3164b8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316500 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316548 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316590 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3165d8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316620 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316668 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3166b0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3166f8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316740 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316788 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3167d0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316818 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316860 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3168a8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3168f0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316938 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316980 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3169c8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316a10 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316a58 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316aa0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316ae8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316b30 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316b78 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316bc0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316c08 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316c50 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316c98 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316ce0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316d28 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316d70 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316db8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316e00 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316e48 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316e90 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316ed8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316f20 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316f68 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316fb0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db316ff8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317040 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317088 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3170d0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317118 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317160 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3171a8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3171f0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317238 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317280 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3172c8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317310 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317358 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3173a0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3173e8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317430 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317478 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3174c0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317508 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317550 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317598 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3175e0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317628 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317670 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3176b8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317700 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317748 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317790 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3177d8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317820 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317868 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3178b0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3178f8 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317940 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317988 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db3179d0 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317a18 (    0x48) _OBJC_METACLASS_RO_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317a60 (    0x48) _OBJC_CLASS_RO_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001db317aa8 (    0x48) _OBJC_METACLASS_RO_$_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x00000001db317af0 (    0x48) _OBJC_CLASS_RO_$_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x00000001db317b38 (    0x48) _OBJC_METACLASS_RO_$_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x00000001db317b80 (    0x48) _OBJC_CLASS_RO_$_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x00000001db317bc8 (    0x48) _OBJC_CLASS_RO_$_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001db317c10 (    0x48) _OBJC_CLASS_RO_$_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001db317c58 (    0x48) _OBJC_METACLASS_RO_$_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db317ca0 (    0x48) _OBJC_CLASS_RO_$_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001db317ce8 (    0x48) _OBJC_METACLASS_RO_$_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001db317d30 (    0x48) _OBJC_CLASS_RO_$_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001db317d78 (    0x48) _OBJC_CLASS_RO_$_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001db317dc0 (    0x48) _OBJC_CLASS_RO_$_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001db317e08 (    0x48) _OBJC_CLASS_RO_$_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001db317e50 (    0x48) _OBJC_METACLASS_RO_$_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
                0x00000001db317e98 (    0x48) _OBJC_CLASS_RO_$_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
            0x00000001db317ee0 (   0x3a0) __AUTH_CONST __objc_doubleobj
            0x00000001db318280 (   0x3f0) __AUTH_CONST __objc_intobj
            0x00000001db318670 (    0x40) __AUTH_CONST __objc_floatobj
            0x00000001db3186b0 (   0x4d8) __AUTH_CONST __objc_dictobj
            0x00000001db318b88 (    0xd8) __AUTH_CONST __objc_arrayobj
            0x00000001db318c60 (    0x38) __AUTH_CONST __auth_ptr
            0x00000001db318c98 (  0x2c20) __AUTH_CONST __auth_got
        0x00000001d72638d0 (  0x2a48) __AUTH SEGMENT
            0x00000001d72638d0 (  0x29e0) __AUTH __objc_data
                0x00000001d72638d0 (    0x28) OBJC_METACLASS_$_SLVirtualDisplayConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001d72638f8 (    0x28) OBJC_CLASS_$_SLVirtualDisplayMode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263920 (    0x28) OBJC_METACLASS_$_SLVirtualDisplayMode [NameNList, MangledNameNList, NList] 
                0x00000001d7263948 (    0x28) OBJC_METACLASS_$_SLVirtualDisplaySettings [NameNList, MangledNameNList, NList] 
                0x00000001d7263970 (    0x28) OBJC_CLASS_$_SLVirtualDisplayCapabilities [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263998 (    0x28) OBJC_METACLASS_$_SLVirtualDisplayCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001d72639c0 (    0x28) OBJC_CLASS_$_SLVirtualDisplay [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72639e8 (    0x28) OBJC_METACLASS_$_SLVirtualDisplay [NameNList, MangledNameNList, NList] 
                0x00000001d7263a10 (    0x28) OBJC_CLASS_$_SLContentFilter [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263a38 (    0x28) OBJC_METACLASS_$_SLContentFilter [NameNList, MangledNameNList, NList] 
                0x00000001d7263a60 (    0x28) OBJC_CLASS_$_SLContentStreamUpdate [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263a88 (    0x28) OBJC_METACLASS_$_SLContentStreamUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d7263ab0 (    0x28) OBJC_CLASS_$_SLContentStream [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263ad8 (    0x28) OBJC_METACLASS_$_SLContentStream [NameNList, MangledNameNList, NList] 
                0x00000001d7263b00 (    0x28) OBJC_CLASS_$_SLWindowFilter [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263b28 (    0x28) OBJC_METACLASS_$_SLWindowFilter [NameNList, MangledNameNList, NList] 
                0x00000001d7263b50 (    0x28) OBJC_CLASS_$_SLSharingSessionContent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263b78 (    0x28) OBJC_METACLASS_$_SLSharingSessionContent [NameNList, MangledNameNList, NList] 
                0x00000001d7263ba0 (    0x28) OBJC_CLASS_$_SLSharingSession [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263bc8 (    0x28) OBJC_CLASS_$_SLSharingSessionManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263bf0 (    0x28) OBJC_METACLASS_$_SLSharingSession [NameNList, MangledNameNList, NList] 
                0x00000001d7263c18 (    0x28) OBJC_METACLASS_$_SLSharingSessionManager [NameNList, MangledNameNList, NList] 
                0x00000001d7263c40 (    0x28) OBJC_CLASS_$_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001d7263c68 (    0x28) OBJC_CLASS_$_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001d7263c90 (    0x28) OBJC_METACLASS_$_SLSSigningKey [NameNList, MangledNameNList, NList] 
                0x00000001d7263cb8 (    0x28) OBJC_METACLASS_$_SLSCCHmacContext [NameNList, MangledNameNList, NList] 
                0x00000001d7263ce0 (    0x28) OBJC_CLASS_$_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001d7263d08 (    0x28) OBJC_METACLASS_$_SLSEventAuthenticationMessageVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001d7263d30 (    0x28) OBJC_CLASS_$_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001d7263d58 (    0x28) OBJC_METACLASS_$_SLSEventAuthenticationMessageEventType [NameNList, MangledNameNList, NList] 
                0x00000001d7263d80 (    0x28) OBJC_CLASS_$_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001d7263da8 (    0x28) OBJC_METACLASS_$_SLSEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001d7263dd0 (    0x28) OBJC_CLASS_$_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001d7263df8 (    0x28) OBJC_METACLASS_$_PKGSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001d7263e20 (    0x28) OBJC_CLASS_$_SLSSpaceWindowManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263e48 (    0x28) OBJC_CLASS_$_SLSWindowManagerSpace [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263e70 (    0x28) OBJC_METACLASS_$_SLSSpaceWindowManager [NameNList, MangledNameNList, NList] 
                0x00000001d7263e98 (    0x28) OBJC_METACLASS_$_SLSWindowManagerDragContext [NameNList, MangledNameNList, NList] 
                0x00000001d7263ec0 (    0x28) OBJC_CLASS_$_SLSWindowManagerDragContext [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263ee8 (    0x28) OBJC_METACLASS_$_SLSWindowManagerSpace [NameNList, MangledNameNList, NList] 
                0x00000001d7263f10 (    0x28) OBJC_CLASS_$_SLVirtualDisplayConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263f38 (    0x28) OBJC_CLASS_$_SLVirtualDisplaySettings [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263f60 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263f88 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationResult [NameNList, MangledNameNList, NList] 
                0x00000001d7263fb0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSpaceIDResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7263fd8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSpaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264000 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264028 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationPropertyListDictionaryResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264050 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationPropertyListArrayResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264078 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationPropertyListArrayResult [NameNList, MangledNameNList, NList] 
                0x00000001d72640a0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationNumbersResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72640c8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationNumbersResult [NameNList, MangledNameNList, NList] 
                0x00000001d72640f0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationStringsResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264118 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationStringsResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264140 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationStringResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264168 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationStringResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264190 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationWorkspaceTypeResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72641b8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationWorkspaceTypeResult [NameNList, MangledNameNList, NList] 
                0x00000001d72641e0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationWorkspaceIDResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264208 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationWorkspaceIDResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264230 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationRegionResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264258 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationRegionResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264280 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72642a8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult [NameNList, MangledNameNList, NList] 
                0x00000001d72642d0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationFloatResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72642f8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationFloatResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264320 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationInt32Result [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264348 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationInt32Result [NameNList, MangledNameNList, NList] 
                0x00000001d7264370 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSpaceManagementModeResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264398 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSpaceManagementModeResult [NameNList, MangledNameNList, NList] 
                0x00000001d72643c0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationBoolResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72643e8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationBoolResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264410 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264438 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264460 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSpacerIndexesResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264488 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSpacerIndexesResult [NameNList, MangledNameNList, NList] 
                0x00000001d72644b0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationRectResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72644d8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationRectResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264500 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSizeResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264528 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSizeResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264550 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationSpacersResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264578 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationSpacersResult [NameNList, MangledNameNList, NList] 
                0x00000001d72645a0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationWindowIDResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72645c8 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationWindowIDResult [NameNList, MangledNameNList, NList] 
                0x00000001d72645f0 (    0x28) OBJC_CLASS_$_SLSBridgedWindowManagementOperationProcessIdentifierResult [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7264618 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowManagementOperationProcessIdentifierResult [NameNList, MangledNameNList, NList] 
                0x00000001d7264640 (    0x28) OBJC_METACLASS_$_SLSSynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264668 (    0x28) OBJC_METACLASS_$_SLSAsynchronousBridgedWindowManagementOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264690 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCreateOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72646b8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceDestroyOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72646e0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264708 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetValuesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264730 (    0x28) OBJC_METACLASS_$_SLSBridgedShowSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264758 (    0x28) OBJC_METACLASS_$_SLSBridgedResetWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264780 (    0x28) OBJC_METACLASS_$_SLSBridgedAddWindowsToSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72647a8 (    0x28) OBJC_METACLASS_$_SLSBridgedRemoveWindowsFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72647d0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72647f8 (    0x28) OBJC_METACLASS_$_SLSBridgedWillSwitchSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264820 (    0x28) OBJC_METACLASS_$_SLSBridgedHideSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264848 (    0x28) OBJC_METACLASS_$_SLSBridgedCopySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264870 (    0x28) OBJC_METACLASS_$_SLSBridgedCopySpacesForWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264898 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyAssociatedWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72648c0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceRemoveValuesForKeysOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72648e8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264910 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264938 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetTypeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264960 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264988 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetCompatIDOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72649b0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72649d8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetOwnersOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264a00 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceAddOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264a28 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceRemoveOwnerOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264a50 (    0x28) OBJC_METACLASS_$_SLSBridgedTileSpaceTakeOwnershipOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264a78 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264aa0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264ac8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264af0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetTransformOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264b18 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264b40 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetAlphaOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264b68 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264b90 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetAbsoluteLevelOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264bb8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceWithNameOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264be0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceResetMenuBarOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264c08 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetFrontPSNOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264c30 (    0x28) OBJC_METACLASS_$_SLSBridgedProcessAssignToSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264c58 (    0x28) OBJC_METACLASS_$_SLSBridgedProcessAssignToAllSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264c80 (    0x28) OBJC_METACLASS_$_SLSBridgedSetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264ca8 (    0x28) OBJC_METACLASS_$_SLSBridgedGetSpaceManagementModeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264cd0 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyManagedDisplaySpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264cf8 (    0x28) OBJC_METACLASS_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264d20 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyManagedDisplaysOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264d48 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyBestManagedDisplayForPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264d70 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyBestManagedDisplayForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264d98 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyManagedDisplayForWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264dc0 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyManagedDisplayForSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264de8 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplayGetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264e10 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264e38 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplayIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264e60 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplaySetIsAnimatingOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264e88 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264eb0 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplaySetRoleWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264ed8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyManagedShapeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264f00 (    0x28) OBJC_METACLASS_$_SLSBridgedSpacePreferCurrentDisplayOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264f28 (    0x28) OBJC_METACLASS_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264f50 (    0x28) OBJC_METACLASS_$_SLSBridgedMoveWindowsToManagedSpaceOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264f78 (    0x28) OBJC_METACLASS_$_SLSBridgedReassociateWindowsSpacesByGeometryOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264fa0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetOrderingWeightOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264fc8 (    0x28) OBJC_METACLASS_$_SLSBridgedGetTileSpaceDividerDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7264ff0 (    0x28) OBJC_METACLASS_$_SLSBridgedTileSpaceSetDividerWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265018 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265040 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265068 (    0x28) OBJC_METACLASS_$_SLSBridgedWindowGetTileRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265090 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72650b8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetEdgeReservationOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72650e0 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265108 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceSetInterTileSpacingOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265130 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCanCreateTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265158 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetSizeForProposedTileOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265180 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceGetSpacersAtPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72651a8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72651d0 (    0x28) OBJC_METACLASS_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72651f8 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265220 (    0x28) OBJC_METACLASS_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265248 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceFinishedResizeForRectOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265270 (    0x28) OBJC_METACLASS_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265298 (    0x28) OBJC_METACLASS_$_SLSBridgedSpaceCopyTileSpacesOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72652c0 (    0x28) OBJC_METACLASS_$_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [NameNList, MangledNameNList, NList] 
                0x00000001d72652e8 (    0x28) OBJC_METACLASS_$_SLSBridgedGetSpaceNeedsSafeApertureOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265310 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265338 (    0x28) OBJC_METACLASS_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [NameNList, MangledNameNList, NList] 
                0x00000001d7265360 (    0x28) OBJC_METACLASS_$_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001d7265388 (    0x28) OBJC_CLASS_$_ECTestOnlyEventType [NameNList, MangledNameNList, NList] 
                0x00000001d72653b0 (    0x28) OBJC_METACLASS_$_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001d72653d8 (    0x28) OBJC_CLASS_$_ECTestOnlyVersionedPID [NameNList, MangledNameNList, NList] 
                0x00000001d7265400 (    0x28) OBJC_CLASS_$_ECTestOnlyEventAuthenticationMessage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265428 (    0x28) OBJC_METACLASS_$_ECTestOnlyEventAuthenticationMessage [NameNList, MangledNameNList, NList] 
                0x00000001d7265450 (    0x28) OBJC_CLASS_$_SLSSynchronousBridgedWindowManagementOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265478 (    0x28) OBJC_CLASS_$_SLSAsynchronousBridgedWindowManagementOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72654a0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCreateOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72654c8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceDestroyOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72654f0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyValuesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265518 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetValuesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265540 (    0x28) OBJC_CLASS_$_SLSBridgedShowSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265568 (    0x28) OBJC_CLASS_$_SLSBridgedResetWindowsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265590 (    0x28) OBJC_CLASS_$_SLSBridgedAddWindowsToSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72655b8 (    0x28) OBJC_CLASS_$_SLSBridgedRemoveWindowsFromSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72655e0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265608 (    0x28) OBJC_CLASS_$_SLSBridgedWillSwitchSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265630 (    0x28) OBJC_CLASS_$_SLSBridgedHideSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265658 (    0x28) OBJC_CLASS_$_SLSBridgedCopySpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265680 (    0x28) OBJC_CLASS_$_SLSBridgedCopySpacesForWindowsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72656a8 (    0x28) OBJC_CLASS_$_SLSBridgedCopyAssociatedWindowsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72656d0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceRemoveValuesForKeysOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72656f8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyNameOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265720 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetNameOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265748 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetTypeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265770 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetCompatIDOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265798 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetCompatIDOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72657c0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyOwnersOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72657e8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetOwnersOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265810 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceAddOwnerOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265838 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceRemoveOwnerOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265860 (    0x28) OBJC_CLASS_$_SLSBridgedTileSpaceTakeOwnershipOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265888 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyShapeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72658b0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetShapeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72658d8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetTransformOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265900 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetTransformOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265928 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetAlphaOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265950 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetAlphaOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265978 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetAbsoluteLevelOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72659a0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetAbsoluteLevelOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72659c8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceWithNameOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72659f0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceResetMenuBarOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265a18 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetFrontPSNOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265a40 (    0x28) OBJC_CLASS_$_SLSBridgedProcessAssignToSpaceOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265a68 (    0x28) OBJC_CLASS_$_SLSBridgedProcessAssignToAllSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265a90 (    0x28) OBJC_CLASS_$_SLSBridgedSetSpaceManagementModeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ab8 (    0x28) OBJC_CLASS_$_SLSBridgedGetSpaceManagementModeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ae0 (    0x28) OBJC_CLASS_$_SLSBridgedCopyManagedDisplaySpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265b08 (    0x28) OBJC_CLASS_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265b30 (    0x28) OBJC_CLASS_$_SLSBridgedCopyManagedDisplaysOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265b58 (    0x28) OBJC_CLASS_$_SLSBridgedCopyBestManagedDisplayForPointOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265b80 (    0x28) OBJC_CLASS_$_SLSBridgedCopyBestManagedDisplayForRectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ba8 (    0x28) OBJC_CLASS_$_SLSBridgedCopyManagedDisplayForWindowOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265bd0 (    0x28) OBJC_CLASS_$_SLSBridgedCopyManagedDisplayForSpaceOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265bf8 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplayGetCurrentSpaceOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265c20 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265c48 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplayIsAnimatingOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265c70 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplaySetIsAnimatingOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265c98 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265cc0 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplaySetRoleWindowOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ce8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyManagedShapeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265d10 (    0x28) OBJC_CLASS_$_SLSBridgedSpacePreferCurrentDisplayOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265d38 (    0x28) OBJC_CLASS_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265d60 (    0x28) OBJC_CLASS_$_SLSBridgedMoveWindowsToManagedSpaceOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265d88 (    0x28) OBJC_CLASS_$_SLSBridgedReassociateWindowsSpacesByGeometryOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265db0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetOrderingWeightOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265dd8 (    0x28) OBJC_CLASS_$_SLSBridgedGetTileSpaceDividerDirectionsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265e00 (    0x28) OBJC_CLASS_$_SLSBridgedTileSpaceSetDividerWindowOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265e28 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCreateTileOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265e50 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetRectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265e78 (    0x28) OBJC_CLASS_$_SLSBridgedWindowGetTileRectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ea0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ec8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetEdgeReservationOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265ef0 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetInterTileSpacingOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265f18 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceSetInterTileSpacingOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265f40 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCanCreateTileOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265f68 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetSizeForProposedTileOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265f90 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceGetSpacersAtPointOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265fb8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7265fe0 (    0x28) OBJC_CLASS_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266008 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266030 (    0x28) OBJC_CLASS_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266058 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceFinishedResizeForRectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266080 (    0x28) OBJC_CLASS_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72660a8 (    0x28) OBJC_CLASS_$_SLSBridgedSpaceCopyTileSpacesOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72660d0 (    0x28) OBJC_CLASS_$_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d72660f8 (    0x28) OBJC_CLASS_$_SLSBridgedGetSpaceNeedsSafeApertureOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266120 (    0x28) OBJC_CLASS_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266148 (    0x28) OBJC_CLASS_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7266170 (    0x28) OBJC_METACLASS_$_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001d7266198 (    0x28) OBJC_CLASS_$_SLSWMBridgedWindowChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001d72661c0 (    0x28) OBJC_CLASS_$_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001d72661e8 (    0x28) OBJC_METACLASS_$_SLSWMBridgedWindow [NameNList, MangledNameNList, NList] 
                0x00000001d7266210 (    0x28) OBJC_CLASS_$_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001d7266238 (    0x28) OBJC_METACLASS_$_SLSWindowManagementFallbackBridge [NameNList, MangledNameNList, NList] 
                0x00000001d7266260 (    0x28) OBJC_CLASS_$_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
                0x00000001d7266288 (    0x28) OBJC_METACLASS_$_SLSFullScreenPidReporter [NameNList, MangledNameNList, NList] 
            0x00000001d72662b0 (    0x68) __AUTH __data
                0x00000001d72662b8 (    0x60) windowPluginVTable [NameNList, MangledNameNList, NList] 
        0x00000001d5c71e30 (  0xce31) __DATA SEGMENT
            0x00000001d5c71e30 (     0x8) __DATA __objc_protorefs
                0x00000001d5c71e30 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_MTLResourceSPI [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c71e38 (   0x6d8) __DATA __objc_classrefs
            0x00000001d5c72510 (   0x508) __DATA __objc_superrefs
            0x00000001d5c72a18 (   0x680) __DATA __objc_ivar
                0x00000001d5c72a18 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a1c (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._vendorID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a20 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._productID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a24 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._serialNumber [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a28 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._sizeInMillimeters [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a2c (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._maximumSizeInPixels [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a30 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._chromaticities [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a34 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._type [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a38 (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a3c (     0x4) OBJC_IVAR_$_SLVirtualDisplayConfiguration._uti [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a40 (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._sizeInPixels [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a44 (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._sizeInPoints [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a48 (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._refreshRate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a4c (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._refreshDeadline [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a50 (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._eotf [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a54 (     0x4) OBJC_IVAR_$_SLVirtualDisplayMode._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a58 (     0x4) OBJC_IVAR_$_SLVirtualDisplaySettings._nativeMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a5c (     0x4) OBJC_IVAR_$_SLVirtualDisplaySettings._preferredMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a60 (     0x4) OBJC_IVAR_$_SLVirtualDisplaySettings._optionalModes [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a64 (     0x4) OBJC_IVAR_$_SLVirtualDisplaySettings._rotations [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a68 (     0x4) OBJC_IVAR_$_SLVirtualDisplayCapabilities._maximumSizeInPixels [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a6c (     0x4) OBJC_IVAR_$_SLVirtualDisplayCapabilities._maximumPixelsPerPoint [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a70 (     0x4) OBJC_IVAR_$_SLVirtualDisplayCapabilities._minimumPixelsPerPoint [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a74 (     0x4) OBJC_IVAR_$_SLVirtualDisplayCapabilities._minimumRefreshRate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a78 (     0x4) OBJC_IVAR_$_SLVirtualDisplay._displayID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a7c (     0x4) OBJC_IVAR_$_SLVirtualDisplay._delegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a80 (     0x4) OBJC_IVAR_$_SLVirtualDisplay._config [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a84 (     0x4) OBJC_IVAR_$_SLVirtualDisplay._settings [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a88 (     0x4) OBJC_IVAR_$_SLVirtualDisplay._client [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a8c (     0x4) OBJC_IVAR_$_SLContentFilter._filterType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a90 (     0x4) OBJC_IVAR_$_SLContentFilter._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a94 (     0x4) OBJC_IVAR_$_SLContentFilter._displayID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a98 (     0x4) OBJC_IVAR_$_SLContentFilter._applicationID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72a9c (     0x4) OBJC_IVAR_$_SLContentFilter._shareAll [NameNList, MangledNameNList, NList] 
                0x00000001d5c72aa0 (     0x4) OBJC_IVAR_$_SLContentFilter._includedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72aa4 (     0x4) OBJC_IVAR_$_SLContentFilter._includedApplications [NameNList, MangledNameNList, NList] 
                0x00000001d5c72aa8 (     0x4) OBJC_IVAR_$_SLContentFilter._excludedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72aac (     0x4) OBJC_IVAR_$_SLContentFilter._excludedApplications [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ab0 (     0x4) OBJC_IVAR_$_SLContentFilter._hideMenuBar [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ab4 (     0x4) OBJC_IVAR_$_SLContentFilter._includedPIDS [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ab8 (     0x4) OBJC_IVAR_$_SLContentFilter._excludedPIDS [NameNList, MangledNameNList, NList] 
                0x00000001d5c72abc (     0x4) OBJC_IVAR_$_SLContentStreamUpdate._status [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ac0 (     0x4) OBJC_IVAR_$_SLContentStreamUpdate._displayTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ac4 (     0x4) OBJC_IVAR_$_SLContentStreamUpdate._frameSurface [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ac8 (     0x4) OBJC_IVAR_$_SLContentStreamUpdate._updateRef [NameNList, MangledNameNList, NList] 
                0x00000001d5c72acc (     0x4) OBJC_IVAR_$_SLContentStreamUpdate._metaData [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ad0 (     0x4) OBJC_IVAR_$_SLContentStream._session [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ad4 (     0x4) OBJC_IVAR_$_SLContentStream._filter [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ad8 (     0x4) OBJC_IVAR_$_SLContentStream._properties [NameNList, MangledNameNList, NList] 
                0x00000001d5c72adc (     0x4) OBJC_IVAR_$_SLContentStream._handler [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ae0 (     0x4) OBJC_IVAR_$_SLContentStream._queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ae4 (     0x4) OBJC_IVAR_$_SLContentStream._stream [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ae8 (     0x4) OBJC_IVAR_$_SLContentStream._running [NameNList, MangledNameNList, NList] 
                0x00000001d5c72aec (     0x4) OBJC_IVAR_$_SLContentStream._zeroWeakSelf [NameNList, MangledNameNList, NList] 
                0x00000001d5c72af0 (     0x4) OBJC_IVAR_$_SLContentStream._bridgingHandler [NameNList, MangledNameNList, NList] 
                0x00000001d5c72af4 (     0x4) OBJC_IVAR_$_SLWindowFilter._hide_menu_bar [NameNList, MangledNameNList, NList] 
                0x00000001d5c72af8 (     0x4) OBJC_IVAR_$_SLWindowFilter._includedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72afc (     0x4) OBJC_IVAR_$_SLWindowFilter._excludedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b00 (     0x4) OBJC_IVAR_$_SLWindowFilter._includedApplications [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b04 (     0x4) OBJC_IVAR_$_SLWindowFilter._excludedApplications [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b08 (     0x4) OBJC_IVAR_$_SLWindowFilter._includedPIDS [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b0c (     0x4) OBJC_IVAR_$_SLWindowFilter._excludedPIDS [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b10 (     0x4) OBJC_IVAR_$_SLWindowFilter._filterPolicy [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b14 (     0x4) OBJC_IVAR_$_SLSharingSessionContent._filter [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b18 (     0x4) OBJC_IVAR_$_SLSharingSessionContent._displayID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b1c (     0x4) OBJC_IVAR_$_SLSharingSessionContent._metaData [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b20 (     0x4) OBJC_IVAR_$_SLSharingSession._type [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b24 (     0x4) OBJC_IVAR_$_SLSharingSession._lifetimePort [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b28 (     0x4) OBJC_IVAR_$_SLSharingSession._title [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b2c (     0x4) OBJC_IVAR_$_SLSharingSession._uuid_internal [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b30 (     0x4) OBJC_IVAR_$_SLSharingSessionManager._delegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b34 (     0x4) OBJC_IVAR_$_SLSharingSessionManager._systemDelegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b38 (     0x4) OBJC_IVAR_$_SLSharingSessionManager._delegateBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b3c (     0x4) OBJC_IVAR_$_SLSharingSessionManager._clientContexts [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b40 (     0x4) OBJC_IVAR_$_SLSSigningKey._key [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b44 (     0x4) OBJC_IVAR_$_SLSCCHmacContext._digester [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b48 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessageVersionedPID._pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b4c (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessageVersionedPID._version [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b50 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessageEventType._hidType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b54 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessageEventType._cgType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b58 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessageEventType._cgSubType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b5c (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._timestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b60 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._originIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b64 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._targetProcess [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b68 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._context [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b6c (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._proxyTargetProcess [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b70 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._eventType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b74 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._capabilities [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b78 (     0x4) OBJC_IVAR_$_SLSEventAuthenticationMessage._signature [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b7c (     0x4) OBJC_IVAR_$_PKGCoreUIRenderer._rendererName [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b80 (     0x4) OBJC_IVAR_$_PKGCoreUIRenderer._renderer [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b84 (     0x4) OBJC_IVAR_$_PKGCoreUIWork.rendererWork [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b88 (     0x4) OBJC_IVAR_$_PKGCoreUIWork.mainThreadWork [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b8c (     0x4) OBJC_IVAR_$_PKGCoreUITransaction._renderer [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b90 (     0x4) OBJC_IVAR_$_PKGCoreUITransaction._workItems [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b94 (     0x4) OBJC_IVAR_$_PKGSpaceWindowManager._transactionCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b98 (     0x4) OBJC_IVAR_$_PKGSpaceWindowManager._transactionNotificationData [NameNList, MangledNameNList, NList] 
                0x00000001d5c72b9c (     0x4) OBJC_IVAR_$_PKGSpaceWindowManager._spaceIDToBatchReassociatedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ba0 (     0x4) OBJC_IVAR_$_PKGSpaceWindowManager._sessionID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ba4 (     0x4) OBJC_IVAR_$_CGXConnectionBox._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ba8 (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bac (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._updateBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bb0 (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._updateBlockQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bb4 (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._connectionQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bb8 (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._infoOptions [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bbc (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._reportIntervals [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bc0 (     0x4) OBJC_IVAR_$_SLDataTimelineConfig._sampleIntervals [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bc4 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._connected [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bc8 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._updateBlockEnqueued [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bcc (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bd0 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._collection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bd4 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bd8 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._connectionQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bdc (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._errorHandler [NameNList, MangledNameNList, NList] 
                0x00000001d5c72be0 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._updateBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72be4 (     0x4) OBJC_IVAR_$_SLDataTimelineConnection._updateBlockQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72be8 (     0x4) OBJC_IVAR_$_SLDataTimelineUpdate._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bec (     0x4) OBJC_IVAR_$_SLDataTimelineUpdate._collectionClaimed [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bf0 (     0x4) OBJC_IVAR_$_SLDataTimelineUpdate._action [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bf4 (     0x4) OBJC_IVAR_$_SLDataTimelineUpdate._collection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bf8 (     0x4) OBJC_IVAR_$_SLDataTimelineSnapshotCollection._snapshotsArray [NameNList, MangledNameNList, NList] 
                0x00000001d5c72bfc (     0x4) OBJC_IVAR_$_SLDataTimelineServerSnapshotEntry._timestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c00 (     0x4) OBJC_IVAR_$_SLDataTimelineServerSnapshotEntry._index [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c04 (     0x4) OBJC_IVAR_$_SLDataTimelineServerSnapshotEntry._sessionsArray [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c08 (     0x4) OBJC_IVAR_$_SLDataTimelineSessionEntry._cgID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c0c (     0x4) OBJC_IVAR_$_SLDataTimelineSessionEntry._auditID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c10 (     0x4) OBJC_IVAR_$_SLDataTimelineSessionSnapshotEntry._sessionSnapshotTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c14 (     0x4) OBJC_IVAR_$_SLDataTimelineSessionSnapshotEntry._sessionSnapshotIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c18 (     0x4) OBJC_IVAR_$_SLDataTimelineSessionSnapshotEntry._foregroundAppPID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c1c (     0x4) OBJC_IVAR_$_SLDataTimelineSessionSnapshotEntry._processesArray [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c20 (     0x4) OBJC_IVAR_$_SLDataTimelineProcessEntry._windowScreenStates [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c24 (     0x4) OBJC_IVAR_$_SLDataTimelineProcessEntry._pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c28 (     0x4) OBJC_IVAR_$_SLSDisplayController._notifyQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c2c (     0x4) OBJC_IVAR_$_SLSDisplayController._controlClient [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c30 (     0x4) OBJC_IVAR_$_SLSDisplayController._notificationBlocks [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c34 (     0x4) OBJC_IVAR_$_SLSDisplayController._brightnessTx [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c38 (     0x4) OBJC_IVAR_$_SLSDisplayController._brightnessTimeoutTx [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c3c (     0x4) OBJC_IVAR_$_SLSDisplayController._brightnessAvailable [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c40 (     0x4) OBJC_IVAR_$_SLSDisplayController._whitePointAvailable [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c44 (     0x4) OBJC_IVAR_$_SLSDisplayController._whitePointD50XYZ [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c48 (     0x4) OBJC_IVAR_$_SLSDisplayController._online [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c4c (     0x4) OBJC_IVAR_$_SLSDisplayController._displayId [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c50 (     0x4) OBJC_IVAR_$_SLSDisplayController._maximumLuminance [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c54 (     0x4) OBJC_IVAR_$_SLSDisplayController._displayType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c58 (     0x4) OBJC_IVAR_$_SLSDisplayController._productId [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c5c (     0x4) OBJC_IVAR_$_SLSDisplayController._vendorId [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c60 (     0x4) OBJC_IVAR_$_SLSDisplayController._uuid [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c64 (     0x4) OBJC_IVAR_$_SLSDisplayController._containerId [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c68 (     0x4) OBJC_IVAR_$_SLSDisplayController._nativeWhitePoint [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c6c (     0x4) OBJC_IVAR_$_SLSDisplayController._brightnessCapabilities [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c70 (     0x4) OBJC_IVAR_$_SLSDisplayController._serialNumber [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c74 (     0x4) OBJC_IVAR_$_SLSDisplayController._displayAttachmentSeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c78 (     0x4) OBJC_IVAR_$_SLSBrightnessControlClient._notifyBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c7c (     0x4) OBJC_IVAR_$_SLSBrightnessControlClient._service [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c80 (     0x4) OBJC_IVAR_$_SLSBrightnessControlClient._brightnessPolicyTx [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c84 (     0x4) OBJC_IVAR_$_SLSBrightnessControlClient._displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c88 (     0x4) OBJC_IVAR_$_SLSDisplayManager._connected [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c8c (     0x4) OBJC_IVAR_$_SLSDisplayManager._enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c90 (     0x4) OBJC_IVAR_$_SLSDisplayManager._runningInServer [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c94 (     0x4) OBJC_IVAR_$_SLSDisplayManager._lastPowerStateNotification [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c98 (     0x4) OBJC_IVAR_$_SLSDisplayManager._client [NameNList, MangledNameNList, NList] 
                0x00000001d5c72c9c (     0x4) OBJC_IVAR_$_SLSDisplayManager._semaphore [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ca0 (     0x4) OBJC_IVAR_$_SLSDisplayManager._registeredNotifiers [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ca4 (     0x4) OBJC_IVAR_$_SLSecureCursorAssertion._uuid [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ca8 (     0x4) OBJC_IVAR_$_SLSecureCursorAssertionManager._strongAssertionUUIDs [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cac (     0x4) OBJC_IVAR_$_SLSecureCursorAssertionManager._weakAssertionMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cb0 (     0x4) OBJC_IVAR_$_SLSessionOwner._port [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cb4 (     0x4) OBJC_IVAR_$_SLSessionOwner._auditSessionID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cb8 (     0x4) OBJC_IVAR_$_SLSessionOwner._sessionID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cbc (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._valid [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cc0 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._displaysHaveSeparateSpaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cc4 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._beganBatch [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cc8 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._connectionID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ccc (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._delegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cd0 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cd4 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._displayCurrentSpaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cd8 (     0x4) OBJC_IVAR_$_SLSSpaceWindowManager._nestedCalloutCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cdc (     0x4) OBJC_IVAR_$_SLSWindowManagerDragContext.windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ce0 (     0x4) OBJC_IVAR_$_SLSWindowManagerDragContext.timestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ce4 (     0x4) OBJC_IVAR_$_SLSWindowManagerDragContext.mouseLocation [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ce8 (     0x4) OBJC_IVAR_$_SLSWindowManagerDragContext.dragOffset [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cec (     0x4) OBJC_IVAR_$_SLSWindowManagerDragContext.proposedWindowOrigin [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cf0 (     0x4) OBJC_IVAR_$_SLSWindowManagerSpace.type [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cf4 (     0x4) OBJC_IVAR_$_SLSWindowManagerSpace.spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cf8 (     0x4) OBJC_IVAR_$_SLSWindowManagerSpace.displayUUID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72cfc (     0x4) OBJC_IVAR_$_SLSWindowManagerSpace.manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d00 (     0x4) OBJC_IVAR_$_SLSWindowManagerSpace.windowIDs [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d04 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryResultsSnapshotPanelDataWrapper._data [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d08 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryResultsSnapshotZoneDataWrapper._data [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d0c (     0x4) OBJC_IVAR_$_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper._data [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d10 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryResultsSnapshotDataWrapper._data [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d14 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryUpdate._action [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d18 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryUpdate._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d1c (     0x4) OBJC_IVAR_$_SLSScreenTelemetryUpdate._error [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d20 (     0x4) OBJC_IVAR_$_SLSScreenTelemetryUpdate._snapshot [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d24 (     0x4) OBJC_IVAR_$_SLSZeroingWeakContainer.reference [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d28 (     0x4) OBJC_IVAR_$_SLScreenTelemetryConnection._closed [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d2c (     0x4) OBJC_IVAR_$_SLScreenTelemetryConnection._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d30 (     0x4) OBJC_IVAR_$_SLScreenTelemetryConnection._queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d34 (     0x4) OBJC_IVAR_$_SLScreenTelemetryConnection._updateBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d38 (     0x4) OBJC_IVAR_$_SLScreenTelemetryConnection._zeroingContainer [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d3c (     0x4) OBJC_IVAR_$_SLSDisplayControlClient._configured [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d40 (     0x4) OBJC_IVAR_$_SLSDisplayControlClient._enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d44 (     0x4) OBJC_IVAR_$_SLSDisplayControlClient._notification [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d48 (     0x4) OBJC_IVAR_$_SLSDisplayControlClient._semaphore [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d4c (     0x4) OBJC_IVAR_$_SLSDisplayPowerControlClient._service [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d50 (     0x4) OBJC_IVAR_$_SLSXPCService._enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d54 (     0x4) OBJC_IVAR_$_SLSXPCService._connected [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d58 (     0x4) OBJC_IVAR_$_SLSXPCService._setTarget [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d5c (     0x4) OBJC_IVAR_$_SLSXPCService._autoreconnect [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d60 (     0x4) OBJC_IVAR_$_SLSXPCService._connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d64 (     0x4) OBJC_IVAR_$_SLSXPCService._notifyQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d68 (     0x4) OBJC_IVAR_$_SLSXPCService._errorBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d6c (     0x4) OBJC_IVAR_$_SLSXPCService._notificationBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d70 (     0x4) OBJC_IVAR_$_SLSXPCService._clientErrorBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d74 (     0x4) OBJC_IVAR_$_SLSXPCService._clientNotificationBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d78 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpaceIDResult._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d7c (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationPropertyListDictionaryResult._propertyListDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d80 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationPropertyListArrayResult._propertyListArray [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d84 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationNumbersResult._numbers [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d88 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationStringsResult._strings [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d8c (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationStringResult._string [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d90 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationWorkspaceTypeResult._workspaceType [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d94 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationWorkspaceIDResult._workspaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d98 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationRegionResult._region [NameNList, MangledNameNList, NList] 
                0x00000001d5c72d9c (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult._affineTransform [NameNList, MangledNameNList, NList] 
                0x00000001d5c72da0 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationAffineTransformWithOptionsResult._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72da4 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationFloatResult._floatValue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72da8 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationInt32Result._int32Value [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dac (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpaceManagementModeResult._spaceManagementMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c72db0 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationBoolResult._boolValue [NameNList, MangledNameNList, NList] 
                0x00000001d5c72db4 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpaceResizeDirectionsResult._spaceResizeDirections [NameNList, MangledNameNList, NList] 
                0x00000001d5c72db8 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpacerIndexesResult._verticalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dbc (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpacerIndexesResult._horizontalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dc0 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationRectResult._rect [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dc4 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSizeResult._size [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dc8 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpacersResult._verticalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dcc (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpacersResult._horizontalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dd0 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationSpacersResult._rect [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dd4 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationWindowIDResult._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dd8 (     0x4) OBJC_IVAR_$_SLSBridgedWindowManagementOperationProcessIdentifierResult._processIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ddc (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCreateOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72de0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCreateOperation._values [NameNList, MangledNameNList, NList] 
                0x00000001d5c72de4 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceDestroyOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72de8 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyValuesOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dec (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetValuesOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72df0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetValuesOperation._values [NameNList, MangledNameNList, NList] 
                0x00000001d5c72df4 (     0x4) OBJC_IVAR_$_SLSBridgedShowSpacesOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72df8 (     0x4) OBJC_IVAR_$_SLSBridgedResetWindowsOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72dfc (     0x4) OBJC_IVAR_$_SLSBridgedAddWindowsToSpacesOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e00 (     0x4) OBJC_IVAR_$_SLSBridgedAddWindowsToSpacesOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e04 (     0x4) OBJC_IVAR_$_SLSBridgedRemoveWindowsFromSpacesOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e08 (     0x4) OBJC_IVAR_$_SLSBridgedRemoveWindowsFromSpacesOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e0c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e10 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e14 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceAddWindowsAndRemoveFromSpacesOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e18 (     0x4) OBJC_IVAR_$_SLSBridgedWillSwitchSpacesOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e1c (     0x4) OBJC_IVAR_$_SLSBridgedHideSpacesOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e20 (     0x4) OBJC_IVAR_$_SLSBridgedCopySpacesOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e24 (     0x4) OBJC_IVAR_$_SLSBridgedCopySpacesForWindowsOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e28 (     0x4) OBJC_IVAR_$_SLSBridgedCopySpacesForWindowsOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e2c (     0x4) OBJC_IVAR_$_SLSBridgedCopyAssociatedWindowsOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e30 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceRemoveValuesForKeysOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e34 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceRemoveValuesForKeysOperation._keys [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e38 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyNameOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e3c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetNameOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e40 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetNameOperation._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e44 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetTypeOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e48 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetCompatIDOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e4c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetCompatIDOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e50 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetCompatIDOperation._compat_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e54 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyOwnersOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e58 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetOwnersOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e5c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetOwnersOperation._owners [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e60 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceAddOwnerOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e64 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceAddOwnerOperation._owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e68 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceRemoveOwnerOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e6c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceRemoveOwnerOperation._owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e70 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceTakeOwnershipOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e74 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyShapeOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e78 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetShapeOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e7c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetShapeOperation._shape [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e80 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetTransformOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e84 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetTransformOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e88 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetTransformOperation._transform [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e8c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetTransformOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e90 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetAlphaOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e94 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetAlphaOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e98 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetAlphaOperation._alpha [NameNList, MangledNameNList, NList] 
                0x00000001d5c72e9c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetAbsoluteLevelOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ea0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetAbsoluteLevelOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ea4 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetAbsoluteLevelOperation._level [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ea8 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceWithNameOperation._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c72eac (     0x4) OBJC_IVAR_$_SLSBridgedSpaceResetMenuBarOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72eb0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetFrontPSNOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72eb4 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetFrontPSNOperation._psn [NameNList, MangledNameNList, NList] 
                0x00000001d5c72eb8 (     0x4) OBJC_IVAR_$_SLSBridgedProcessAssignToSpaceOperation._process [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ebc (     0x4) OBJC_IVAR_$_SLSBridgedProcessAssignToSpaceOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ec0 (     0x4) OBJC_IVAR_$_SLSBridgedProcessAssignToAllSpacesOperation._process [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ec4 (     0x4) OBJC_IVAR_$_SLSBridgedSetSpaceManagementModeOperation._mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ec8 (     0x4) OBJC_IVAR_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ecc (     0x4) OBJC_IVAR_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ed0 (     0x4) OBJC_IVAR_$_SLSBridgedMoveManagedSpaceToDisplayIndexOperation._index [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ed4 (     0x4) OBJC_IVAR_$_SLSBridgedCopyBestManagedDisplayForPointOperation._point [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ed8 (     0x4) OBJC_IVAR_$_SLSBridgedCopyBestManagedDisplayForRectOperation._rect [NameNList, MangledNameNList, NList] 
                0x00000001d5c72edc (     0x4) OBJC_IVAR_$_SLSBridgedCopyManagedDisplayForWindowOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ee0 (     0x4) OBJC_IVAR_$_SLSBridgedCopyManagedDisplayForSpaceOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ee4 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplayGetCurrentSpaceOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ee8 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72eec (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetCurrentSpaceOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ef0 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplayIsAnimatingOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ef4 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetIsAnimatingOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ef8 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetIsAnimatingOperation._isAnimating [NameNList, MangledNameNList, NList] 
                0x00000001d5c72efc (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation._displayIdentifiers [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f00 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaysCopyRoleWindowsOperation._role [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f04 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetRoleWindowOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f08 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetRoleWindowOperation._role [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f0c (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplaySetRoleWindowOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f10 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyManagedShapeOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f14 (     0x4) OBJC_IVAR_$_SLSBridgedSpacePreferCurrentDisplayOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f18 (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation._displayIdentifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f1c (     0x4) OBJC_IVAR_$_SLSBridgedManagedDisplayCurrentSpaceAllowsWindowOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f20 (     0x4) OBJC_IVAR_$_SLSBridgedMoveWindowsToManagedSpaceOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f24 (     0x4) OBJC_IVAR_$_SLSBridgedMoveWindowsToManagedSpaceOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f28 (     0x4) OBJC_IVAR_$_SLSBridgedReassociateWindowsSpacesByGeometryOperation._windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f2c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetOrderingWeightOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f30 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetOrderingWeightOperation._weight [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f34 (     0x4) OBJC_IVAR_$_SLSBridgedGetTileSpaceDividerDirectionsOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f38 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceSetDividerWindowOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f3c (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceSetDividerWindowOperation._direction [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f40 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceSetDividerWindowOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f44 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCreateTileOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f48 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCreateTileOperation._values [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f4c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetRectOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f50 (     0x4) OBJC_IVAR_$_SLSBridgedWindowGetTileRectOperation._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f54 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation._tileID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f58 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation._parentID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f5c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceTileMoveToSpaceAtIndexOperation._index [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f60 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f64 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._edgeMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f68 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._left [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f6c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._right [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f70 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._top [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f74 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetEdgeReservationOperation._bottom [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f78 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetInterTileSpacingOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f7c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetInterTileSpacingOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f80 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceSetInterTileSpacingOperation._spacing [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f84 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCanCreateTileOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f88 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCanCreateTileOperation._minSize [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f8c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetSizeForProposedTileOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f90 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetSizeForProposedTileOperation._values [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f94 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetSpacersAtPointOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f98 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceGetSpacersAtPointOperation._point [NameNList, MangledNameNList, NList] 
                0x00000001d5c72f9c (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation._drivingSpaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fa0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation._verticalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fa4 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation._horizontalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fa8 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation._point [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fac (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fb0 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation._tileSpaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fb4 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceMoveSpacersForSizeOperation._size [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fb8 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._drivingSpaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fbc (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._verticalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fc0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._horizontalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fc4 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._point [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fc8 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fcc (     0x4) OBJC_IVAR_$_SLSBridgedSpaceClientDrivenMoveSpacersToPointFencedOperation._fencePort [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fd0 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation._tileSpaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fd4 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation._size [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fd8 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceMoveSpacersForSizeFencedOperation._fencePort [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fdc (     0x4) OBJC_IVAR_$_SLSBridgedSpaceFinishedResizeForRectOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fe0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceFinishedResizeForRectOperation._rect [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fe4 (     0x4) OBJC_IVAR_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fe8 (     0x4) OBJC_IVAR_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation._verticalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72fec (     0x4) OBJC_IVAR_$_SLSBridgedGetSpacePermittedResizeDirectionsOperation._horizontalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ff0 (     0x4) OBJC_IVAR_$_SLSBridgedSpaceCopyTileSpacesOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ff4 (     0x4) OBJC_IVAR_$_SLSBridgedTileSpaceReplaceWithSnapshotWindowOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ff8 (     0x4) OBJC_IVAR_$_SLSBridgedGetSpaceNeedsSafeApertureOperation._spaceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c72ffc (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation._owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c73000 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation._spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c73004 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c73008 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation._setTagsData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7300c (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsOperation._clearedTagsData [NameNList, MangledNameNList, NList] 
                0x00000001d5c73010 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation._owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c73014 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation._spaceOptions [NameNList, MangledNameNList, NList] 
                0x00000001d5c73018 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation._options [NameNList, MangledNameNList, NList] 
                0x00000001d5c7301c (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation._setTagsData [NameNList, MangledNameNList, NList] 
                0x00000001d5c73020 (     0x4) OBJC_IVAR_$_SLSBridgedCopyWindowsWithOptionsAndTagsAndSpaceOptionsOperation._clearedTagsData [NameNList, MangledNameNList, NList] 
                0x00000001d5c73024 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c73028 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._deviceEventBlock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7302c (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._notifyPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c73030 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._publishedNotifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c73034 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._terminatedNotifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c73038 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._mainThreadHoist [NameNList, MangledNameNList, NList] 
                0x00000001d5c7303c (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._devices [NameNList, MangledNameNList, NList] 
                0x00000001d5c73040 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._devicesByContainerId [NameNList, MangledNameNList, NList] 
                0x00000001d5c73044 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._devicesByService [NameNList, MangledNameNList, NList] 
                0x00000001d5c73048 (     0x4) OBJC_IVAR_$_SLDisplayPresetDeviceManager._pmAssertionID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7304c (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._service [NameNList, MangledNameNList, NList] 
                0x00000001d5c73050 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._regID [NameNList, MangledNameNList, NList] 
                0x00000001d5c73054 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._path [NameNList, MangledNameNList, NList] 
                0x00000001d5c73058 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._hidPresetInterface [NameNList, MangledNameNList, NList] 
                0x00000001d5c7305c (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._hidManagementInterface [NameNList, MangledNameNList, NList] 
                0x00000001d5c73060 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._hidUserAdjustInterface [NameNList, MangledNameNList, NList] 
                0x00000001d5c73064 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._containerId [NameNList, MangledNameNList, NList] 
                0x00000001d5c73068 (     0x4) OBJC_IVAR_$_SLDisplayPresetDevice._fields [NameNList, MangledNameNList, NList] 
                0x00000001d5c7306c (     0x4) OBJC_IVAR_$_ECTestOnlyEventAuthenticationMessage._valid [NameNList, MangledNameNList, NList] 
                0x00000001d5c73070 (     0x4) OBJC_IVAR_$_SLSGUIClient._service [NameNList, MangledNameNList, NList] 
                0x00000001d5c73074 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindowChildInfo.op [NameNList, MangledNameNList, NList] 
                0x00000001d5c73078 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindowChildInfo.window [NameNList, MangledNameNList, NList] 
                0x00000001d5c7307c (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._windowID [NameNList, MangledNameNList, NList] 
                0x00000001d5c73080 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._window [NameNList, MangledNameNList, NList] 
                0x00000001d5c73084 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._individuallyOrderedOut [NameNList, MangledNameNList, NList] 
                0x00000001d5c73088 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._parentWindow [NameNList, MangledNameNList, NList] 
                0x00000001d5c7308c (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._parentChildInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c73090 (     0x4) OBJC_IVAR_$_SLSWMBridgedWindow._children [NameNList, MangledNameNList, NList] 
                0x00000001d5c73094 (     0x4) OBJC_IVAR_$_SLSWindowManagementFallbackBridge._manager [NameNList, MangledNameNList, NList] 
            0x00000001d5c730a0 (  0x7340) __DATA __data
                0x00000001d5c730a0 (    0x60) _OBJC_PROTOCOL_$_SLSharingSessionManagerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c73100 (     0x4) gEventDeliveryType [NameNList, MangledNameNList, NList] 
                0x00000001d5c73104 (     0x4) hid_event_record_state [NameNList, MangledNameNList, NList] 
                0x00000001d5c73108 (     0x8) gKeyRepeatRateNS [NameNList, MangledNameNList, NList] 
                0x00000001d5c73110 (    0x60) _OBJC_PROTOCOL_$_ECAuthenticationKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c73170 (    0x60) _OBJC_PROTOCOL_$_ECAuthenticationMessageSigningContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c731d0 (    0x60) _OBJC_PROTOCOL_$_ECAuthenticationMessageSignable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c73230 (    0x60) _OBJC_PROTOCOL_$_ECAuthenticationMessageInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c73290 (     0x2) __generateDeviceID()::sNextDeviceID [NameNList, MangledNameNList, NList] 
                0x00000001d5c73292 (     0x2) __generateTabletID()::sNextTabletID [NameNList, MangledNameNList, NList] 
                0x00000001d5c73294 (     0x4) get_display_refresh_timing(unsigned int, unsigned int)::last_display_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c73298 (     0x4) gNumQuantizationBits [NameNList, MangledNameNList, NList] 
                0x00000001d5c7329c (     0x4) (anonymous namespace)::gQuantizeW [NameNList, MangledNameNList, NList] 
                0x00000001d5c732a0 (     0x8) (anonymous namespace)::gQuantizeH [NameNList, MangledNameNList, NList] 
                0x00000001d5c732a8 (     0x8) (anonymous namespace)::gTimeToRebalance [NameNList, MangledNameNList, NList] 
                0x00000001d5c732b0 (     0x8) (anonymous namespace)::gTimeToPurge [NameNList, MangledNameNList, NList] 
                0x00000001d5c732b8 (     0x8) (anonymous namespace)::gTimeToFree [NameNList, MangledNameNList, NList] 
                0x00000001d5c732c0 (     0x4) (anonymous namespace)::gUtilizationCutoff [NameNList, MangledNameNList, NList] 
                0x00000001d5c732c4 (  0x1fe7) (anonymous namespace)::Builtin2NitPresetsPlist [NameNList, MangledNameNList, NList] 
                0x00000001d5c752ab (  0x2068) (anonymous namespace)::Builtin2Nit600NitPresetsPlist [NameNList, MangledNameNList, NList] 
                0x00000001d5c77313 (  0x2075) (anonymous namespace)::BuiltinPresetsPlist [NameNList, MangledNameNList, NList] 
                0x00000001d5c79388 (    0x10) iofence_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c79398 (     0x8) tooling_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793a0 (     0x8) tracing_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793a8 (     0x8) watchdog_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793b0 (     0x8) cursor_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793b8 (     0x8) updater_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793c0 (     0x8) compositor_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793c8 (     0x8) wscalock_log [NameNList, MangledNameNList, NList] 
                0x00000001d5c793d0 (     0x4) gSuppressHWEventsForInterval [NameNList, MangledNameNList, NList] 
                0x00000001d5c793d4 (     0x4) _CGXDequeueHideOrShowServiceReq::sNextServiceRequestID [NameNList, MangledNameNList, NList] 
                0x00000001d5c793d8 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79438 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineSnapshotCollectionMetadata [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79498 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineUpdate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c794f8 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineSnapshotCollection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79558 (    0x60) _OBJC_PROTOCOL_$_SLXPCExportable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c795b8 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineServerSnapshot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79618 (    0x60) _OBJC_PROTOCOL_$_SLXPCImportable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79678 (    0x60) _OBJC_PROTOCOL_$_SLXPCConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c796d8 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79738 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineSessionProcessCollection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79798 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineProcess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c797f8 (    0x60) _OBJC_PROTOCOL_$_SLDataTimelineProcessWindows [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79858 (    0x60) _OBJC_PROTOCOL_$_SLSBrightnessTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c798b8 (    0x60) _OBJC_PROTOCOL_$_SLSBrightnessTimeoutsTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79918 (    0x60) _OBJC_PROTOCOL_$_SLSBrightnessControl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79978 (    0x60) _OBJC_PROTOCOL_$_SLSBrightnessPolicyTransaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c799d8 (     0x4) WSWindowSessionLogUpdateContributors::count [NameNList, MangledNameNList, NList] 
                0x00000001d5c799dc (     0x4) war_78493674_iosa_is_present()::available [NameNList, MangledNameNList, NList] 
                0x00000001d5c799e0 (     0x8) idleConnectionDelay()::delay [NameNList, MangledNameNList, NList] 
                0x00000001d5c799e8 (    0x40) copy_empty_image.sEmptyImageLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a28 (     0x4) cgdebug::ConnectionCopyAsyncGLState [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a2c (     0x4) gWSCompositorTileWidth [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a30 (     0x4) gWSCompositorTileHeight [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a34 (     0x4) gWSCompositorMipmapRotboxMinScale [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a38 (     0x4) sWSCAFlattenDelayOverrideValue [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a3c (     0x4) sWSBoxFilterOverride [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a40 (    0x40) SLSWindowIteratorCopyTitle.SLSWindowQueryResultLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a80 (     0x4) gWSSessionDebugTransitionDuration [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a84 (     0x4) gWSSessionTransitionAnimationEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a88 (     0x4) generate_session_id()::session_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a8c (     0x4) WS::Displays::SLCADisplay::update_preset_support()::builtin_preset_support [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a90 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::updater_wakeup_delay [NameNList, MangledNameNList, NList] 
                0x00000001d5c79a98 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::idle_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c79aa0 (    0x10) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::custom_shield_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c79ab0 (     0x4) WS::Displays::CAWSManager::move_cursor(CGPoint, bool)::prev_cursor_display_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c79ab4 (     0x4) WS::Displays::enable_display_presets()::enableDisplayPresets [NameNList, MangledNameNList, NList] 
                0x00000001d5c79ab8 (     0x8) sAppearanceUserIdleTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c79ac0 (     0x8) next_unique_window_id()::next_window_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c79ac8 (    0x40) localDisplayMapMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b08 (    0x60) _OBJC_PROTOCOL_$_SLSDisplayControlClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79b68 (     0x8) sCGXEventTapTimeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b70 (     0x8) perf_hud_attribution_limit [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b78 (     0x8) perf_hud_attribution_play [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b80 (     0x8) update_perf_hud_layer(void*, double)::last_timestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b88 (     0x8) cgdebug::gDisableCursorClipDisplayShape [NameNList, MangledNameNList, NList] 
                0x00000001d5c79b90 (    0x60) _OBJC_PROTOCOL_$_SLSDisplayPowerControlClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79bf0 (     0x8) fn_timeout_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c79bf8 (    0x68) WSTouchBarEventPluginData [NameNList, MangledNameNList, NList] 
                0x00000001d5c79c60 (     0x8) WSDisplayManagerInitialize::displays_sampling_interval [NameNList, MangledNameNList, NList] 
                0x00000001d5c79c68 (     0x8) SLSServerAbsoluteTimeToClientAbsoluteTime.server_to_client_scale [NameNList, MangledNameNList, NList] 
                0x00000001d5c79c70 (     0x8) SLSServerAbsoluteTimeToClientAbsoluteTime.identical_timebase [NameNList, MangledNameNList, NList] 
                0x00000001d5c79c78 (    0x68) _OBJC_PROTOCOL_$_SLSXPCServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79ce0 (    0x40) shutdown_server_connections(bool)::shutdown_mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c79d20 (    0x40) CGSConnectionsLock(void () block_pointer)::__CGSConnectionsLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c79d60 (     0x4) (anonymous namespace)::cgdebug::greedy_scheduler_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c79d64 (     0x4) (anonymous namespace)::cgdebug::greedy_video_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c79d68 (    0x40) cgs_window_mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c79da8 (    0x40) CGSLocalWindowLock.__CGSLocalWindowsLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c79de8 (     0x8) cgdebug::server_blur_method [NameNList, MangledNameNList, NList] 
                0x00000001d5c79df0 (     0x8) cgdebug::clpc_fudge_factor [NameNList, MangledNameNList, NList] 
                0x00000001d5c79df8 (     0x4) cgdebug::ids_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c79dfc (     0x4) gWSDisableUpdateTimeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e00 (     0x8) defer_lock_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e08 (    0x28) dict_key_value_pair_comparer.vals [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e30 (     0x8) CACurrentWindowPluginAPIVersion::plugin_version [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e38 (     0x4) CGXCreateSurfaceID::nextID [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e3c (     0x4) gWSSurfaceCAPurgeableOption [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e40 (     0x8) next_transition_id()::transition_serial_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e48 (     0x8) gWSMKTimerNextTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e50 (     0x4) console_default_keyboard_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e54 (     0x4) sCurrentKeyFocusID [NameNList, MangledNameNList, NList] 
                0x00000001d5c79e58 (    0x60) _OBJC_PROTOCOL_$_MTLResource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79eb8 (    0x60) _OBJC_PROTOCOL_$_MTLResourceSPI [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79f18 (    0x60) _OBJC_PROTOCOL_$_ECEventType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79f78 (    0x60) _OBJC_PROTOCOL_$_ECVersionedPID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c79fd8 (    0x60) _OBJC_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a038 (    0x60) _OBJC_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a098 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a0f8 (    0x60) _OBJC_PROTOCOL_$_ECAuthenticationMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a158 (    0x60) _OBJC_PROTOCOL_$_ECEventAuthenticationMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a1b8 (    0x60) _OBJC_PROTOCOL_$_SLSGUIClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a218 (    0x60) _OBJC_PROTOCOL_$_SLSDisplayControlServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a278 (     0x8) sCGXSpinControlTimeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a280 (    0x30) kWSTCCServiceScreenCapture [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a2b0 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a310 (    0x60) _OBJC_PROTOCOL_$_WMWindowDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a370 (    0x60) _OBJC_PROTOCOL_$_SLSWindowManagementBridgeDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d0 (     0x4) gCursorRestrictionMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d4 (     0x1) gCursorRestrictionCorners [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d5 (     0x1) gCursorTeleportMenuTracking [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d6 (     0x1) gEnableCursorTeleport [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d7 (     0x1) gEnableCursorRestrictionATLM [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a3d8 (     0x8) hibernate_count()::mib_len [NameNList, MangledNameNList, NList] 
            0x00000001d5c7a3e0 (    0x40) __DATA __crash_info
                0x00000001d5c7a3e0 (    0x40) gCRAnnotations [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c7a420 (  0x4841) __DATA __bss
                0x00000001d5c7a420 (     0x1) cgdebug::invert_ff_mt_present [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a421 (     0x7) cgdebug::invert_ff_mt_composite [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a428 (     0x8) shared.manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a430 (     0x8) shared.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a438 (     0x8) has_entitlement.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a440 (     0x1) has_entitlement.system_entitlement [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a441 (     0x7) has_entitlement.context_system_entitlement [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a448 (     0x8) WS::Displays::WSHIDDisplayEventListener::get_instance()::instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a450 (     0x8) guard variable for WS::Displays::WSHIDDisplayEventListener::get_instance()::instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a458 (     0x8) WS::Displays::policy_lock()::policy_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a460 (     0x8) guard variable for WS::Displays::policy_lock()::policy_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a468 (     0x8) __eventSystem [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a470 (     0x8) gIsLogEventInfoEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a478 (     0x8) gEventLatency [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a480 (     0x8) gEventBufferTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a488 (     0x8) sCumulativeMouseDelta (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a490 (     0x8) sCumulativeMouseDelta (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a498 (     0x8) sHIDMouseState [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4a0 (     0x4) gConsoleSessionUnifiedKeyMapping [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4a4 (     0x4) sHIDEventPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4a8 (     0x8) hid_event_record_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4b0 (     0x8) EventTranslator::instance()::event_translator_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4b8 (     0x8) guard variable for EventTranslator::instance()::event_translator_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4c0 (     0x8) EventTranslator::updateScrollMomentumDispatchRate(float, bool)::current_scroll_momentum_rate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4c8 (     0x8) pointer_service_lock_mutex()::pointer_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4d0 (     0x8) guard variable for pointer_service_lock_mutex()::pointer_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4d8 (     0x8) (anonymous namespace)::sHIDCursorInfo()::cursor_tracking_info [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4e0 (     0x8) guard variable for (anonymous namespace)::sHIDCursorInfo()::cursor_tracking_info [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4e8 (     0x8) event_lock_mutex()::event_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4f0 (     0x8) guard variable for event_lock_mutex()::event_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a4f8 (     0x8) eventQueue()::eventQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a500 (     0x8) guard variable for eventQueue()::eventQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a508 (     0x8) last_used_keyboard_lock_mutex()::keyboard_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a510 (     0x8) guard variable for last_used_keyboard_lock_mutex()::keyboard_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a518 (    0x10) event_interpolator()::interpolator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a528 (     0x8) guard variable for event_interpolator()::interpolator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a530 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::scrollWheelLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a538 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::scrollWheelLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a540 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::digitizerScrollLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a548 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::digitizerScrollLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a550 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a558 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a560 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::pointer2Log [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a568 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::pointer2Log [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a570 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::digitizerSTRLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a578 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::digitizerSTRLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a580 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::dockSwipeLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a588 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::dockSwipeLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a590 (     0x8) (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a598 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::rawLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5a0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::scrollWheelLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5a8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::scrollWheelLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5b0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::digitizerScrollLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5b8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::digitizerScrollLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5c0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5c8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5d0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::pointer2Log [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5d8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::pointer2Log [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5e0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::digitizerSTRLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5e8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::digitizerSTRLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5f0 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::dockSwipeLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a5f8 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::dockSwipeLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a600 (     0x8) (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a608 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::interpolatedLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a610 (     0x8) (anonymous namespace)::ServerInterpolationHarness::eventDeliveryLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a618 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::eventDeliveryLogForEventType(CEDEventType) const::pointerLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a620 (     0x8) (anonymous namespace)::ServerInterpolationHarness::eventDeliveryLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a628 (     0x8) guard variable for (anonymous namespace)::ServerInterpolationHarness::eventDeliveryLogForEventType(CEDEventType) const::otherLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a630 (     0x8) unified_key_mapping_lock_mutex()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a638 (     0x8) guard variable for unified_key_mapping_lock_mutex()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a640 (     0x8) keyboard_service_lock_mutex()::keyboard_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a648 (     0x8) guard variable for keyboard_service_lock_mutex()::keyboard_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a650 (     0x8) setup_event_sources(unsigned int)::'block-literal'::eventSource [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a658 (     0x8) guard variable for setup_event_sources(unsigned int)::'block-literal'::eventSource [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a660 (    0x30) get_next_event()::sLastClickData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a690 (     0x8) _serviceRemovalNotifications [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a698 (     0x8) match_device_set()::device_set [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6a0 (     0x8) guard variable for match_device_set()::device_set [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6a8 (     0x8) match_device_usage_dict_array()::matches [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6b0 (     0x8) device_create_dictionary(__IOHIDService*)::IOHID_properties_keys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6b8 (     0x8) device_create_dictionary(__IOHIDService*)::once_again [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6c0 (     0x8) hid_event_record_array()::event_record_array [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6c8 (     0x8) guard variable for hid_event_record_array()::event_record_array [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6d0 (     0x8) __keyboardTranslatorTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6d8 (     0x8) __keyboardTranslatorTypeInit [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6e0 (     0x8) hid_properties_keys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6e8 (     0x8) gIsFnDown [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6f0 (     0x8) gLastFnDownTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a6f8 (     0x8) WSHitchesTailspinLastDefaultCheckTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a700 (     0x8) WSHitchesTailspinCanGenerate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a708 (     0x8) WSHitchesTailspinMinimumTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a710 (     0x8) WSHitchesTailspinLastRequestTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a718 (     0x8) are_tailspins_force_enabled()::once_tailspin_enable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a720 (     0x8) are_tailspins_force_enabled()::are_tailspins_force_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a728 (     0x8) are_tailspins_pdse_enabled()::once_tailspin_enable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a730 (     0x8) are_tailspins_pdse_enabled()::are_tailspins_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a738 (     0x8) DiagnosticRequestLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a740 (     0x8) getDRTailspinRequestSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a748 (     0x8) ws_hitches_tailspin_request_queue()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a750 (     0x8) ws_hitches_tailspin_request_queue()::ws_hitches_tailspin_request_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a758 (     0x8) WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a760 (     0x8) guard variable for WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a768 (     0x8) WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel_is_vrr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a770 (     0x8) guard variable for WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel_is_vrr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a778 (     0x8) WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel_maximum_vrr_vbl_delta [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a780 (     0x8) guard variable for WS::Displays::Mode::Mode(unsigned int, unsigned int, unsigned int, unsigned int, float, float, float, bool, bool, bool, bool, bool, std::__1::vector<CADisplayMode*, std::__1::allocator<CADisplayMode*>> const&, WS::Displays::SLCADisplay*, float)::sel_maximum_vrr_vbl_delta [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a788 (     0x8) WS::Displays::AspectRatio::get_aspect_ratio(unsigned long, unsigned long)::aspect_ratios [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a790 (     0x8) guard variable for WS::Displays::AspectRatio::get_aspect_ratio(unsigned long, unsigned long)::aspect_ratios [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a798 (     0x8) WS::Displays::ca_supports_safe_aperture_offset()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7a0 (     0x8) WS::Displays::ca_supports_safe_aperture_offset()::spi_supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7a8 (     0x8) __pointerTranslatorTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7b0 (     0x8) __pointerTranslatorTypeInit [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7b8 (     0x8) gLastButtonStateChangeSenderID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7c0 (     0x8) gLastButtonStateChangeEventTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7c8 (     0x8) __IOHIDPointerEventTranslatorCreateScrollEvent(__IOHIDPointerEventTranslator*, EVENT_TRANSLATOR_CONTEXT*, __IOHIDEvent*, __IOHIDEvent*)::zoomStarted [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7d0 (     0x8) _HIDLog()::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7d8 (     0x8) SLSHMDGetTypeID::hmd_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7e0 (     0x8) SLSHMDGetTypeID::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7e8 (     0x4) gDFRModeEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7ec (     0x4) gGetSessionLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7f0 (     0x8) hmd_client_session [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a7f8 (     0x8) get_display_refresh_timing(unsigned int, unsigned int)::last_vbl_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a800 (     0x8) get_display_refresh_timing(unsigned int, unsigned int)::last_vbl_delta [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a808 (     0x8) get_display_refresh_timing(unsigned int, unsigned int)::last_check_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a810 (     0x8) SLSHMDDrawableGetTypeID()::drawable_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a818 (     0x8) SLSHMDDrawableGetTypeID()::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a820 (     0x1) cgdebug::allow_peer_transfer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a821 (     0x1) gQuantizeColors [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a822 (     0x6) Payload::update(Compositor*)::mps_loaded [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a828 (     0x8) guard variable for Payload::update(Compositor*)::mps_loaded [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a830 (     0x8) gEvaluateWhenAllOccluded [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a838 (    0x18) gCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a850 (     0x8) SLWaitForScreenUpdateRects::flushRgn [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a858 (     0x8) SLWaitForScreenUpdateRects::moveRgn [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a860 (     0x4) SLWaitForScreenUpdateRects::dX [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a864 (     0x4) SLWaitForScreenUpdateRects::dY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a868 (     0x8) gWaitForRectsInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a870 (     0x8) init_remote_operation()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a878 (     0x8) sGlobalHoister [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a880 (     0x8) CGSUpdateManager::CGSUpdateManager(_CGSConnection*)::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a888 (     0x8) guard variable for CGSUpdateManager::CGSUpdateManager(_CGSConnection*)::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a890 (    0x10) WS::Displays::BuiltinPresetInterface::chromatic_adaptation_transform() const::D65_xyY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8a0 (    0x10) guard variable for WS::Displays::BuiltinPresetInterface::chromatic_adaptation_transform() const::D65_xyY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8b0 (    0x10) WS::Displays::BuiltinPresetInterface::chromatic_adaptation_transform() const::D65a_xyY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8c0 (     0x8) guard variable for WS::Displays::BuiltinPresetInterface::chromatic_adaptation_transform() const::D65a_xyY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8c8 (     0x8) CGXCursorInstanceGetTypeID.cursor_instance_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8d0 (     0x8) _block_invoke.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8d8 (     0x8) leakedWindows()::leaked [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8e0 (     0x8) guard variable for leakedWindows()::leaked [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8e8 (     0x8) sSystemStatusIndicatorsAllowPrivacyIndicatorSuppression [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8f0 (     0x8) system_status_indicator_init()::sharedMediaDomain [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a8f8 (     0x8) system_status_indicator_init()::sharedLocationDomain [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a900 (     0x8) system_status_indicator_init()::mediaCoalescingQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a908 (     0x8) system_status_indicator_init()::scheduledMediaStatusChange [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a910 (     0x8) system_status_indicator_init()::latestMediaDomainData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a918 (     0x8) SystemStatusLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a920 (     0x8) getSTMediaStatusDomainClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a928 (     0x8) getSTLocationStatusDomainClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a930 (     0x8) getSystemOverrideClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a938 (     0x8) SystemOverrideLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a940 (     0x8) getkSOSuppressSWCameraIndicationOnExternalDisplaysSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a948 (     0x8) death_watcher()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a950 (     0x8) death_watcher()::watcher [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a958 (     0x8) gSuppressHWEventsForIntervalLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a960 (    0x18) cgdebug::capture_stream_write_counter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a978 (    0x18) cgdebug::display_stream_write_counter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a990 (     0x8) scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::allowlist [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a998 (     0x8) guard variable for scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::allowlist [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9a0 (     0x8) scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::disambiguators [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9a8 (     0x8) guard variable for scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::disambiguators [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9b0 (     0x8) scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::disambiguator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9b8 (     0x8) scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::known_frameworks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9c0 (     0x8) guard variable for scrub_iosurface_name(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)::known_frameworks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9c8 (     0x8) info_handler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9d0 (     0x8) get_mutex()::mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9d8 (     0x8) guard variable for get_mutex()::mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9e0 (     0x8) +[PKGCoreUIRenderer rendererForTheme:useAX:]::cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9e8 (     0x8) -[PKGCoreUITransaction updateLayer:key:rendererWork:]::materialLayerDataCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9f0 (     0x8) -[PKGCoreUITransaction updateLayer:key:rendererWork:]::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7a9f8 (     0x8) getCUICreateRendererSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa00 (     0x8) CoreUILibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa08 (     0x8) pkg_coreui_renderer_thread()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa10 (     0x8) pkg_coreui_renderer_thread()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa18 (     0x8) pkg_coreui_system_symbol_catalog()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa20 (     0x8) pkg_coreui_system_symbol_catalog()::coreGlyphsCatalog [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa28 (     0x8) getCUICatalogClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa30 (     0x8) getCUICreateOrUpdateLayerSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa38 (     0x8) FuseBoardServicesLibraryCore.frameworkLibrary [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa40 (     0x8) getFUSBInitializeSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa48 (     0x8) getFUSBBeginTrackingProcessSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa50 (     0x8) getFUSBEndTrackingProcessSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa58 (     0x8) getFUSBProcessSetFrontmostSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa60 (     0x8) getFUSBGetProcessSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa68 (     0x8) getFUSBGetWindowSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa70 (     0x8) getFUSBProcessAddWindowSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa78 (     0x8) getFUSBProcessGetWindowSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa80 (     0x8) getFUSBWindowSetOwnerSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa88 (     0x8) getFUSBWindowSetContentStateSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa90 (     0x8) getFUSBProcessRemoveWindowSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aa98 (     0x8) _PKGSystemShellWindowScreenStateChangeHandler.__PendingUpdates [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aaa0 (     0x8) cursor_asset_data.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aaa8 (     0x8) cursor_asset_data.asset_data [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aab0 (     0x8) next_buffer_id()::_current_buffer_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aab8 (     0x8) XPCServiceClient::getXPCServiceClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aac0 (     0x8) guard variable for XPCServiceClient::getXPCServiceClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aac8 (     0x8) deferredClientLock()::_mutex_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aad0 (     0x8) guard variable for deferredClientLock()::_mutex_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aad8 (     0x8) deferredCallbackMap()::callbackMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aae0 (     0x8) guard variable for deferredCallbackMap()::callbackMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aae8 (     0x8) XPCServiceClient::clientLock()::client_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aaf0 (     0x8) guard variable for XPCServiceClient::clientLock()::client_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aaf8 (     0x8) XPCServiceClient::getXPCServiceQueue()::xpcServiceQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab00 (     0x8) createXPCServiceDisplayPowerControl()::displayPowerConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab08 (     0x8) createXPCServiceDisplayPowerControl()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab10 (     0x8) createXPCServiceDisplayBrightnessControl()::displayBrightnessConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab18 (     0x8) createXPCServiceDisplayBrightnessControl()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab20 (     0x8) createXPCServiceDisplayGUIControl()::displayGUIConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab28 (     0x8) createXPCServiceDisplayGUIControl()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab30 (     0x8) createXPCServiceSelectiveSharing()::selectiveSharingConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab38 (     0x8) createXPCServiceSelectiveSharing()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab40 (     0x8) gNotifyRec (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab48 (     0x8) _LSNotificationQueue()::sLSNotificationQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab50 (     0x9) _LSNotificationQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab59 (     0x3) CGSRunningInServer.runningInServer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab5c (     0x4) get_hid_service_connection::s_io_connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab60 (     0x8) _sCurrentPKGTransactionOpName [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab68 (     0x8) _sCurrentPKGTransactionOpConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab70 (     0x8) getValidDataTimelineInfoOptionSet.validInfoOptions [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab78 (     0x8) getValidDataTimelineInfoOptionSet.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab80 (     0x8) getValidDataTimelineReportIntervalKeySet.validIntervalKeys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab88 (     0x8) getValidDataTimelineReportIntervalKeySet.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab90 (     0x8) getValidDataTimelineSampleIntervalKeySet.validIntervalKeys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ab98 (     0x8) getValidDataTimelineSampleIntervalKeySet.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aba0 (     0x1) sWSEnableDefenestratorOverride [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aba1 (     0x7) SLSFlushWindow.warned [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aba8 (     0x8) deprecated_window_type.pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abb0 (     0x8) get_empty_region_singleton.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abb8 (    0x10) get_empty_region_singleton.empty [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abc8 (     0x1) (anonymous namespace)::sCGXEnableCaptureAcceleration [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abc9 (     0x1) (anonymous namespace)::sCGXDensestCaptureResolution [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abca (     0x6) gWSEnableTranslateMove [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abd0 (    0x10) _WindowRightsGetGrantOfferedCallbackRecord.record [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abe0 (     0x8) _WindowRightsGetGrantOfferedCallbackRecord.pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abe8 (    0x10) _WindowRightsGetGrantCompletedCallbackRecord.record [NameNList, MangledNameNList, NList] 
                0x00000001d5c7abf8 (     0x8) _WindowRightsGetGrantCompletedCallbackRecord.pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac00 (     0x8) getSLCPSFrontTrackingLog::sResult [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac08 (     0x8) getSLCPSFrontTrackingLog::sOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac10 (     0x8) WSShadowGetCache::shadow_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac18 (     0x8) guard variable for WSShadowGetCache::shadow_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac20 (     0x1) iokit_waitquiet_complete [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac21 (     0x1) ws_initialization_complete [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac22 (     0x2) watchdog_initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac24 (     0x4) ws_stuck_reports [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac28 (     0x8) ws_triage_in_progress [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac30 (     0x8) ws_triage_information [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac38 (     0x8) main_thread_callback [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac40 (     0x8) gWSSessionDebugAllowStageManagerHints [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac48 (     0x8) get_display_manager()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac50 (     0x8) guard variable for get_display_manager()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac58 (     0x8) get_display_manager()::display_manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac60 (     0x8) get_display_manager_queue()::displayManagerQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac68 (     0x8) get_display_manager_queue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac70 (     0x8) cgdebug::allow_msr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac78 (     0x8) war_78493674_iosa_is_present()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac80 (     0x8) WS::system_scaler()::scaler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac88 (     0x8) guard variable for WS::system_scaler()::scaler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac90 (     0x4) SLSCreateKeyboardEvent::warned [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ac94 (     0xc) SLSCreateKeyboardEventWithFlagsAndStateOfLength::state [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aca0 (     0x8) gParsedKeymap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7aca8 (     0x8) do_init()::keymap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7acb0 (     0x8) do_init()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7acb8 (     0x8) normalizedCornerScaleX [NameNList, MangledNameNList, NList] 
                0x00000001d5c7acc0 (     0x8) normalizedCornerScaleY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7acc8 (    0x10) create_corner_image(CGSize, PKGDisplayCorner)::cachedSize [NameNList, MangledNameNList, NList] 
                0x00000001d5c7acd8 (     0x8) guard variable for create_corner_image(CGSize, PKGDisplayCorner)::cachedSize [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ace0 (    0x20) create_corner_image(CGSize, PKGDisplayCorner)::cornerImages [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad00 (     0x8) mach_time_scale()::scale [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad08 (     0x8) bundle_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad10 (     0x8) PKGMenuBarContext::PKGMenuBarContext(PKGManagedMenuSpace*, CGXWindow*, double)::menu_bar_solid_black_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad18 (     0x8) guard variable for PKGMenuBarContext::PKGMenuBarContext(PKGManagedMenuSpace*, CGXWindow*, double)::menu_bar_solid_black_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad20 (     0x8) configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_solid_dark_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad28 (     0x8) guard variable for configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_solid_dark_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad30 (     0x8) configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_solid_light_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad38 (     0x8) guard variable for configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_solid_light_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad40 (     0x8) configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_darken_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad48 (     0x8) guard variable for configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_darken_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad50 (     0x8) configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_lighten_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad58 (     0x8) guard variable for configure_menu_bar_layers_for_background(PKGMenuBarContext*, bool)::menu_bar_lighten_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad60 (     0x8) getkCUIWidgetKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad68 (     0x8) CoreUILibraryCore(char**)::frameworkLibrary (.0.4175) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad70 (     0x8) getkCUIWidgetVisualEffectViewSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad78 (     0x8) getkCUIVariantKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad80 (     0x8) getkCUIVariantMenuBarMaterialSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad88 (     0x8) getkCUIBezelTintColorSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad90 (     0x8) getkCUIPresentationStateKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ad98 (     0x8) getkCUIPresentationStateActiveKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ada0 (     0x8) getkCUIBackdropCompatibleKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ada8 (     0x8) getkCUIScaleKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adb0 (     0x8) getkCUIWidgetMenuTitleSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adb8 (     0x8) getkCUIStateKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adc0 (     0x8) getkCUIStatePressedSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adc8 (     0x8) getkCUIIndicatorOnlyKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7add0 (     0x8) getkCUIIsFlippedKeySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7add8 (     0x8) getkCUIPresentationStateInactiveSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ade0 (     0x8) check_runningboard_version()::goodVersion [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ade8 (     0x8) check_runningboard_version()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adf0 (     0x8) RunningBoardServicesLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7adf8 (     0x8) getrbs_set_appnap_windowserver_visibleSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae00 (     0x8) idleConnectionDelay()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae08 (     0x8) getrbs_set_appnap_windowserver_drawingSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae10 (     0x8) sharedManager.sharedManager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae18 (     0x8) sharedManager.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae20 (     0x8) gGlobalZoomState [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae28 (     0x8) _cgls_plugin [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae30 (     0x8) _cgls_max_displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae38 (     0x8) _cgls_services [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae40 (     0x8) _cgls_fbindices [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae48 (     0x8) _cgls_gli_dispatch_size [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae50 (     0x8) _cgls_dummy_disp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae58 (     0x8) WSCoreDisplayVTable.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ae60 (   0x200) WSCoreDisplayVTable.vtable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b060 (     0x8) WSCoreDisplayVTable.vtable_ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b068 (     0x8) copy_empty_image.sEmptyImage [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b070 (     0x1) cgdebug::disable_hw_indicator_for_vsync_off [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b071 (     0x7) cgdebug::disable_hw_indicator_for_rotated_displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b078 (     0x8) system_booted_in_safe_mode::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b080 (     0x1) system_booted_in_safe_mode::safe_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b081 (     0x7) uuid_callback_registered [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b088 (     0x8) display_map_list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b090 (     0x8) uuid_callback_list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b098 (    0x38) quartzcore_vtable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0d0 (     0x8) sw_context_key [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0d8 (     0x4) sCACurrentSeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0dc (     0x4) sCAFinishedSeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0e0 (     0x8) CGSTickleActivityMonitor::lastUpdateTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0e8 (     0x8) SLPixelAccessGetTypeID.pixel_access_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0f0 (     0x8) _block_invoke.once.4691 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b0f8 (     0x8) CGXRootWindowServerPort::rootPortPtr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b100 (     0x8) guard variable for CGXRootWindowServerPort::rootPortPtr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b108 (     0x1) CGXRootWindowServerPort::checkedIn [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b109 (     0x1) CGXActiveWindowServerPort::checkedIn [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b10a (     0x6) gIsMenubarTrackingOnConsole [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b110 (     0x8) WSConnectionGetNewInternalDisableUpdateToken::gLastConnDisableUpdateToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b118 (     0x8) port_to_connection_map()::connection_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b120 (     0x8) guard variable for port_to_connection_map()::connection_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b128 (     0x4) root_server_port_pointer()::sRootPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b12c (     0x4) active_server_port_pointer()::sActivePort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b130 (     0x8) menubar_tracking_display_update_lock()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b138 (     0x8) guard variable for menubar_tracking_display_update_lock()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b140 (    0x20) menubar_tracking_display_rect()::gMenubarTrackingDisplayOnConsole [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b160 (     0x8) guard variable for menubar_tracking_display_rect()::gMenubarTrackingDisplayOnConsole [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b168 (     0x8) global_semaphore_lock()::_mutex_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b170 (     0x8) guard variable for global_semaphore_lock()::_mutex_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b178 (     0x8) global_semaphore_set()::semaphore_set [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b180 (     0x8) guard variable for global_semaphore_set()::semaphore_set [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b188 (     0x8) evg_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b190 (     0x8) evg [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b198 (     0x4) desktopCursorFixed (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b19c (     0x4) desktopCursorFixed (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1a0 (     0x8) ev_driver [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1a8 (     0x8) _EVGSetCursorFrames::last_delay [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1b0 (     0x4) gCursorAndMouseTemporarilyDecoupled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1b4 (     0xc) gCGSEventShmemObject [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1c0 (     0x4) SLSGetKeys::lastKeySeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1c4 (    0x1d) SLSGetKeys::lastMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1e1 (     0x7) SLSRequestListenEventAccess::hasEntitlement [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1e8 (     0x8) SLSRequestListenEventAccess::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1f0 (     0x8) devices_console_dead_name_source [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b1f8 (     0x8) tccPostEventService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b200 (    0x10) guard variable for tccPostEventService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b210 (     0x8) tccScreenCaptureService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b218 (     0x8) guard variable for tccScreenCaptureService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b220 (     0x8) hp_radius_vec()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b228 (     0x8) guard variable for hp_radius_vec()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7b230 (  0x1000) get_shadow_shader_supported_high_priority_radius_array::radius_array [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c230 (     0x8) hp_radius_map()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c238 (     0x8) guard variable for hp_radius_map()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c240 (     0x8) lp_radius_vec()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c248 (     0x8) guard variable for lp_radius_vec()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c250 (     0x8) monitorRBProcessState.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c258 (     0x8) trackedPids [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c260 (     0x8) untrackedSuspendedPids [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c268 (     0x8) lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c270 (     0x8) processMonitor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c278 (     0x8) SLDisplayStreamUpdateGetTypeID.displaystreamupdate_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c280 (     0x8) _block_invoke.once.5292 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c288 (     0x8) SLDisplayStreamGetTypeID.displaystream_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c290 (     0x8) kSLDisplayStreamGPUBoost_block_invoke_2.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c298 (     0x8) SLSDFRDisplayStreamCreate.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2a0 (     0x8) SLSDFRDisplayStreamCreate._DFRDisplayStreamCreate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2a8 (     0x8) kSLDisplayStreamGPUBoost_block_invoke_3.handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2b0 (     0x8) compositor_noop [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2b8 (     0x8) compositor_sw [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2c0 (     0x8) WSCompositorSetupCARenderPassCommon::default_colorspace [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2c8 (     0x8) WSCompositorMaxWidth::max_width [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2d0 (     0x8) guard variable for WSCompositorMaxWidth::max_width [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2d8 (     0x8) WSCompositorMaxHeight::max_height [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2e0 (     0x8) guard variable for WSCompositorMaxHeight::max_height [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2e8 (     0x4) gWSDebugIgnoreAcceleration [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2ec (     0x4) active_compositor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f0 (     0x4) WSCompositorSetDebugOptions::old_hw_options [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f4 (     0x1) gWSCompositorFalsifyPreemptionSupport [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f5 (     0x1) bufferWaitWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f6 (     0x1) gWSDetachedLayersAllowDirectPresent [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f7 (     0x1) gWSGVAEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f8 (     0x1) gWSDetachedDefenestratorEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2f9 (     0x1) gWSCompositorMipmapEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2fa (     0x2) gWSCompositorMipmapRotbox [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c2fc (     0x4) gWSCompositorMipmapRotboxMaxScale [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c300 (     0x4) sWSCompositorSkippingEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c304 (     0x4) sWSCompositorSkippedPID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c308 (     0x4) sWSCompositorSkippedWID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c30c (     0x4) sWSCompositorSkippedSID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c310 (     0x8) metal_compositor_map()::metal_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c318 (     0x8) guard variable for metal_compositor_map()::metal_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c320 (     0x8) initialize_compositors()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c328 (     0x8) activate_compositor_default()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c330 (     0x8) activate_compositor_default()::default_to_metal [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c338 (     0x8) AmbientDisplayLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c340 (     0x8) getAMBDCreateIntentionContextSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c348 (     0x8) getAMBDWarpLUTbasedOnIntentionInContextSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c350 (     0x8) getAMBDDestroyIntentionContextSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c358 (     0x8) getAMBDapplyIntentionFromPreferencesForDisplayIDSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c360 (     0x8) getAMBDcontextSetDisplayIntentionSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c368 (     0x8) getAMBDLerpLUTinContextSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c370 (     0x8) getAMBDcopyDesiredPipelineState2SymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c378 (    0x10) update_session_cursor_window(CGXSession*, CGPoint const*, bool)::last_location [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c388 (     0x1) sWSCAFlattenAlways [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c389 (     0x1) sWSCAFlattenNever [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c38a (     0x1) sWSCAFlattenDefenestrator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c38b (     0x1) sWSCAFlattenForceIOSurface [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c38c (     0x4) sWSSqueegeeFilterType [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c390 (     0x8) sWSCARasterizationOverride [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c398 (     0x8) gStatsQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3a0 (     0x8) gSessionStats [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3a8 (     0x8) gDataTimelineEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3b0 (     0x8) TimelineClient::getLastSnapshotIndexTimestamp()::lastSnapshotIndexTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3b8 (     0x8) guard variable for TimelineClient::getLastSnapshotIndexTimestamp()::lastSnapshotIndexTimestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3c0 (     0x8) TimelineClient::getClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3c8 (     0x8) guard variable for TimelineClient::getClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3d0 (     0x8) TimelineClient::createRootConnectionEndpoint()::rootConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3d8 (     0x8) SkyLightConfiguration::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3e0 (     0x8) SkyLightConfiguration::config [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3e8 (     0x8) _SLSEventSourceGetDefault()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c3f0 (    0x11) _SLSEventSourceGetDefault()::source [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c401 (     0x7) convert_time(unsigned long long)::same_timebase [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c408 (     0x8) MetalContext::next_gpu_peer_shared_event_seed()::_shared_event_seed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c410 (     0x4) MetalContext::_next_capture_frames [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c414 (     0x1) (anonymous namespace)::cgdebug::gpu_restart_policy_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c415 (     0x1) (anonymous namespace)::cgdebug::wait_until_scheduled_on_final_flush_default [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c416 (     0x2) (anonymous namespace)::cgdebug::wait_until_scheduled_on_final_flush [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c418 (     0x8) get_next_device_hash()::hash [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c420 (     0x8) WSHIDEventDispatchQueue.queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c428 (     0x8) WSHIDEventDispatchQueue.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c430 (     0x8) radius_to_option_map()::map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c438 (     0x8) guard variable for radius_to_option_map()::map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c440 (     0x8) (anonymous namespace)::MessageLogger::shared_logger()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c448 (     0x8) guard variable for (anonymous namespace)::MessageLogger::shared_logger()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c450 (     0x8) (anonymous namespace)::get_application_name()::application_name [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c458 (     0x8) guard variable for (anonymous namespace)::get_application_name()::application_name [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c460 (     0x8) (anonymous namespace)::EventTranslationMessageLogger::event_translation_logger()::instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c468 (     0x8) guard variable for (anonymous namespace)::EventTranslationMessageLogger::event_translation_logger()::instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c470 (     0x8) (anonymous namespace)::get_event_name(CGSEventType)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c478 (     0x8) guard variable for (anonymous namespace)::get_event_name(CGSEventType)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c480 (     0x8) (anonymous namespace)::get_system_defined_subtype_name(CGSEventSystemDefinedSubtype)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c488 (     0x8) guard variable for (anonymous namespace)::get_system_defined_subtype_name(CGSEventSystemDefinedSubtype)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c490 (     0x8) (anonymous namespace)::get_scroll_phase_name(unsigned int)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c498 (     0x8) guard variable for (anonymous namespace)::get_scroll_phase_name(unsigned int)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4a0 (     0x8) (anonymous namespace)::get_momentum_scroll_phase_name(CGSMomentumScrollPhase)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4a8 (     0x8) guard variable for (anonymous namespace)::get_momentum_scroll_phase_name(CGSMomentumScrollPhase)::names [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4b0 (     0x4) gNotificationSequenceNumber [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4b4 (     0x4) dispatch_in_progress [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4b8 (     0x8) ordered_callback_record_stack()::stack [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4c0 (     0x8) guard variable for ordered_callback_record_stack()::stack [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4c8 (     0x8) (anonymous namespace)::get_server_notifier()::notifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4d0 (     0x8) guard variable for (anonymous namespace)::get_server_notifier()::notifier [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4d8 (     0x8) logger_list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4e0 (     0x8) SLSEventTapCreate::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4e8 (    0x10) SLSEventTapCreate::ax_priorities [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c4f8 (     0x8) SLSPackagesInitializeSessionPreferences::sOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c500 (    0x10) SLSPersistenceRegisterAsReady::beenHere [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c510 (     0x8) SLSGetSystemUIHasRTLDirectionLegacy::sResult [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c518 (     0x8) copySpacesConfiguration()::sSpacesConfig [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c520 (     0x8) copySpacesConfiguration()::sOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c528 (     0x8) SLSWindowQueryResultGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c530 (     0x8) SLSWindowQueryResultGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c538 (     0x8) SLSWindowQueryGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c540 (     0x8) SLSWindowQueryGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c548 (     0x8) SLSWindowIteratorGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c550 (     0x8) SLSWindowIteratorGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c558 (     0x8) SLSSpaceIteratorGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c560 (     0x8) SLSSpaceIteratorGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c568 (     0x8) SLSManagedDisplayIteratorGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c570 (     0x8) SLSManagedDisplayIteratorGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c578 (     0x1) cgdebug::force_non_ca_inner_rim [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c579 (     0x3) cgdebug::use_ca_window_shadows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c57c (     0x4) CGSMinSchedulerQuantum.gMinQuantum [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c580 (     0x8) timeout_reached.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c588 (     0x8) timeout_reached.time_scaler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c590 (     0x4) CGXUpdateExternalSessionList::sIOResourceService [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c594 (     0x4) sCGXRPCSequenceNumber [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c598 (     0x8) sDisplaySubsystemReady [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5a0 (     0x8) CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::sessionManagerPath [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5a8 (     0x8) guard variable for CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::sessionManagerPath [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5b0 (    0x10) CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::validPaths [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5c0 (     0x8) guard variable for CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::validPaths [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5c8 (     0x8) CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::validPathSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5d0 (     0x8) guard variable for CGSessionLaunchWorkspace(CGXSession*, __CFDictionary const*)::validPathSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5d8 (     0x8) WS::Displays::SLCADisplay::update_preset_support()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5e0 (     0x8) WS::Displays::SLCADisplay::user_adjustment_update()::sel_set_user_adjustment [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5e8 (     0x8) guard variable for WS::Displays::SLCADisplay::user_adjustment_update()::sel_set_user_adjustment [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5f0 (     0x8) WS::Displays::SLCADisplay::user_adjustment_update()::responds_to_set_user_adjustment [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c5f8 (     0x8) guard variable for WS::Displays::SLCADisplay::user_adjustment_update()::responds_to_set_user_adjustment [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c600 (     0x8) WS::Displays::SLCADisplay::process_display_disconnect(unsigned int, bool)::sel_reset_config [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c608 (     0x8) guard variable for WS::Displays::SLCADisplay::process_display_disconnect(unsigned int, bool)::sel_reset_config [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c610 (     0x4) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::preset_manager_enable_hotplug_in_flash_fix [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c614 (     0x4) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::defer_hotplug_seconds [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c618 (     0x8) _g_server [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c620 (     0x8) WS::Displays::SLCADisplay::update_realtime_data()::sel_min_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c628 (     0x8) guard variable for WS::Displays::SLCADisplay::update_realtime_data()::sel_min_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c630 (     0x8) WS::Displays::SLCADisplay::update_realtime_data()::sel_max_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c638 (     0x8) guard variable for WS::Displays::SLCADisplay::update_realtime_data()::sel_max_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c640 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::simulate_apt_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c641 (     0x7) WS::Displays::SLCADisplay::set_color_space(CGColorSpace*)::disable_apple_external_sRGB_22 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c648 (     0x8) WS::Displays::SLCADisplay::set_color_space(CGColorSpace*)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c650 (     0x8) WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_min_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c658 (     0x8) guard variable for WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_min_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c660 (     0x8) WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_max_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c668 (     0x8) guard variable for WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_max_frame_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c670 (     0x8) WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_struct_version [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c678 (     0x8) guard variable for WS::Displays::SLCADisplay::register_transaction_complete_callback(void (*)(DisplayPresentInfo))::'block-literal'::sel_struct_version [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c680 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::disable_user_calibration_mode_switch [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c681 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::disable_user_calibration_preset_switch [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c682 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::disable_user_calibration_color_space_switch [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c683 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::ws_managed_copy_forward [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c684 (     0x4) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::copy_forward_force_failure [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c688 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::dump_options [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c690 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::dump_frame_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c698 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::dump_run [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6a0 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::framebuffer_shared_events_default [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6a1 (     0x7) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::framebuffer_shared_events_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6a8 (     0x8) WS::Displays::SLCADisplay::finish_external_update(_CARenderUpdate*, unsigned int, unsigned long long, unsigned int)::sel_finish [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6b0 (     0x8) guard variable for WS::Displays::SLCADisplay::finish_external_update(_CARenderUpdate*, unsigned int, unsigned long long, unsigned int)::sel_finish [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6b8 (     0x8) WS::Displays::SLCADisplay::finish_external_update(_CARenderUpdate*, unsigned int, unsigned long long, unsigned int)::debug_bits_supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6c0 (     0x8) guard variable for WS::Displays::SLCADisplay::finish_external_update(_CARenderUpdate*, unsigned int, unsigned long long, unsigned int)::debug_bits_supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6c8 (     0x8) WS::Displays::SLCADisplay::supports_ca_indicator()::supports_indicator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6d0 (     0x8) WS::Displays::SLCADisplay::supports_ca_indicator()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6d8 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::allow_vsync_off [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6e0 (     0x8) WS::Displays::SLCADisplay::get_hmd_swap_lock()::hmd_swap_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6e8 (     0x8) guard variable for WS::Displays::SLCADisplay::get_hmd_swap_lock()::hmd_swap_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6f0 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::safe_aperture_disable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6f1 (     0x7) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::safe_aperture_engage [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c6f8 (     0x8) WS::Displays::SLCADisplay::commit_safe_aperture_offset(double)::sel [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c700 (     0x8) guard variable for WS::Displays::SLCADisplay::commit_safe_aperture_offset(double)::sel [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c708 (     0x8) WS::Displays::SLCADisplay::create_safe_aperture_mode(WS::Displays::Mode const&)::unsupported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c710 (     0x8) guard variable for WS::Displays::SLCADisplay::create_safe_aperture_mode(WS::Displays::Mode const&)::unsupported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c718 (     0x1) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::use_custom_shield_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c719 (     0x7) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::deferred_virtual_displays_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c720 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::deferred_virtual_displays_delay_seconds [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c728 (     0x8) WS::Displays::CAWSManager::virtualDisplayCreateColorModes(bool) const::force_pq_virtual_displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c730 (     0x8) WS::Displays::CAWSManager::virtualDisplayCreateColorModes(bool) const::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c738 (     0x8) WS::Displays::CAWSManager::create_watchdog_triage_string() const::sel_display_wd_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c740 (     0x8) guard variable for WS::Displays::CAWSManager::create_watchdog_triage_string() const::sel_display_wd_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c748 (     0x8) WS::Displays::CAWSManager::create_watchdog_triage_string() const::responds_to_display_wd_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c750 (     0x8) guard variable for WS::Displays::CAWSManager::create_watchdog_triage_string() const::responds_to_display_wd_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c758 (     0x8) WS::Displays::CAWSManager::initialize_accelerated_compositing()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c760 (     0x8) WS::Displays::CAWSManager::brightness_policy_engine()::_cb_policy [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c768 (     0x8) guard variable for WS::Displays::CAWSManager::brightness_policy_engine()::_cb_policy [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c770 (     0x8) WS::Displays::CAManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c778 (     0x8) guard variable for WS::Displays::CAManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c780 (     0x8) WS::Displays::(anonymous namespace)::(anonymous namespace)::cgdebug::disable_debug_user_calibration_toolbox_commands [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c788 (     0x8) WS::Displays::CAWSManager::mig_service_for_display(unsigned int, int, int, unsigned int*)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c790 (     0x8) WS::Displays::CAWSManager::mig_service_for_display(unsigned int, int, int, unsigned int*)::fake_fb_service [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c798 (     0x8) WSCAWindowServerInitialize::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7a0 (     0x8) WS::Displays::getColorSyncMakeProfileSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7a8 (     0x8) WS::Displays::ColorSyncLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7b0 (     0x8) WS::Displays::getColorSyncProfileCopyDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7b8 (     0x8) WS::Displays::getColorSyncProfileCreateSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7c0 (     0x8) WS::Displays::getColorSyncProfileCopyTagSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7c8 (     0x8) WS::Displays::getColorSyncProfileCreateMutableCopySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7d0 (     0x8) WS::Displays::getColorSyncProfileSetParametricTRCTagSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7d8 (     0x8) WS::Displays::CAWSManager::deferred_hot_plugs_lock()::hpd_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7e0 (     0x8) guard variable for WS::Displays::CAWSManager::deferred_hot_plugs_lock()::hpd_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7e8 (     0x8) WS::Displays::get_iosurface_ready_lock()::iosr_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7f0 (     0x8) guard variable for WS::Displays::get_iosurface_ready_lock()::iosr_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c7f8 (     0x8) WS::Displays::get_iosurface_ready_callback_map()::_iosurface_ready_callback_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c800 (     0x8) guard variable for WS::Displays::get_iosurface_ready_callback_map()::_iosurface_ready_callback_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c808 (     0x8) WS::Displays::enable_display_presets()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c810 (     0x8) WS::Displays::init_is_virtual_machine()::_is_vm [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c818 (     0x8) WS::Displays::init_is_virtual_machine()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c820 (     0x8) WS::Displays::getColorSyncDisplayServicesUpdateProfilesSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c828 (     0x8) WS::Displays::getColorSyncGetDisplayTransferFormulaFromVCGTSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c830 (    0x10) WS::Displays::getColorSyncCreateGammaTablesFromVCGTSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c840 (     0x8) SLSSystemIsInternalBuild.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c848 (     0x8) SLSSystemIsInternalBuild.internal [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c850 (     0x8) gPendingUpdatePresents [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c858 (     0x8) gDisplayPresentQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c860 (     0x8) gDisplayPresents [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c868 (     0x8) gRegisteredDisplays [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c870 (     0x8) gDisplayFrameDataList [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c878 (     0x8) gDisplayPreviousPresentTimeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c880 (     0x1) cgdebug::displayPresentEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c881 (     0x1) cgdebug::displayPresentUpdateTiming [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c882 (     0x2) gIsInMirrorConfig [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c884 (     0x4) gMainDisplayId [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c888 (    0x10) gOnlineDisplayIdRefreshTimeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c898 (     0x8) CGSLogOpen.appName [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8a0 (     0x8) (anonymous namespace)::EventSourceManager::sharedManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8a8 (    0x10) guard variable for (anonymous namespace)::EventSourceManager::sharedManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8b8 (    0x10) initializing_thread [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8c8 (     0x8) (anonymous namespace)::global::next_collection_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8d0 (     0x8) (anonymous namespace)::global::sampling_interval [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8d8 (     0x8) (anonymous namespace)::global::context_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8e0 (     0x4) (anonymous namespace)::global::zone_width [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8e4 (     0x4) (anonymous namespace)::global::zone_height [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8e8 (     0x4) (anonymous namespace)::global::zone_columns [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8ec (     0x4) (anonymous namespace)::global::zone_rows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8f0 (     0x1) (anonymous namespace)::global::screen_telemetry_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8f1 (     0x7) (anonymous namespace)::cgdebug::screen_telemetry_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c8f8 (     0x8) (anonymous namespace)::TelemetryClient::TelemetryQueue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c900 (     0x8) guard variable for (anonymous namespace)::TelemetryClient::TelemetryQueue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c908 (     0x8) (anonymous namespace)::TelemetryClient::SharedClient()::client [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c910 (     0x8) guard variable for (anonymous namespace)::TelemetryClient::SharedClient()::client [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c918 (     0x8) (anonymous namespace)::TelemetryClient::createRootConnectionEndpoint()::rootConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c920 (     0x8) perform_with_connection(void (dispatch_queue_s*, _xpc_connection_s*) block_pointer)::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c928 (     0x8) perform_with_connection(void (dispatch_queue_s*, _xpc_connection_s*) block_pointer)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c930 (     0x8) allocations()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c938 (     0x8) allocations()::allocations [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c940 (    0x28) sBlueLightStatus [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c968 (     0x8) get_transition_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c970 (     0x8) get_transition_queue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c978 (     0x8) get_shared_blue_light_client()::client [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c980 (     0x8) get_shared_blue_light_client()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c988 (     0x8) getCBBlueLightClientClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c990 (     0x8) CoreBrightnessLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c998 (     0x8) CGSGetDisplayStateNull()::CGSDisplayStateNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9a0 (     0x8) guard variable for CGSGetDisplayStateNull()::CGSDisplayStateNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9a8 (     0x1) startedWindowDrag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9a9 (     0x1) cgdebug::ignore_sfx_overlay_context [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9aa (     0x1) cgdebug::ignore_window_masks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9ab (     0x1) cgdebug::use_ca_window_shadows (.9011) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9ac (     0x1) cgdebug::track_window_display_intersection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9ad (     0x1) cgdebug::is_targeting_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9ae (     0x2) cgdebug::is_target_by_wid_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9b0 (     0x4) cgdebug::target_wid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9b4 (     0x4) cgdebug::is_target_by_cid_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9b8 (     0x4) cgdebug::target_cid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9bc (     0x4) cgdebug::is_target_by_age_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9c0 (     0x4) cgdebug::cutoff_wid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9c4 (     0x4) cgdebug::is_target_by_pid_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9c8 (     0x4) cgdebug::target_pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9cc (     0x1) cgdebug::is_target_by_name_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9cd (    0x20) cgdebug::target_name [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9ed (     0x3) cgdebug::is_target_by_ca_context_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9f0 (     0x4) cgdebug::target_context_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9f4 (     0x1) cgdebug::shun_dishonorable_windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9f5 (     0x3) next_unique_window_id()::did_wrap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9f8 (     0x4) cgdebug::last_used_window_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7c9fc (     0x4) (anonymous namespace)::window_fade_active [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca00 (     0x8) logging_null_check_break()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca08 (     0x8) SLEventSourceGetTypeID.type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca10 (     0x8) _block_invoke.once.9742 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca18 (     0x8) EnablePrecompiledShadowBlur [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca20 (     0x8) get_basic_vertex_descriptor()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca28 (     0x8) get_basic_vertex_descriptor()::descriptor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca30 (     0x8) shadow_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca38 (     0x8) guard variable for shadow_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca40 (     0x8) get_basic_color_vertex_descriptor()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca48 (     0x8) get_basic_color_vertex_descriptor()::descriptor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca50 (     0x8) ubershader_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca58 (     0x8) guard variable for ubershader_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca60 (     0x8) get_uber_composite_vertex_descriptor()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca68 (     0x8) get_uber_composite_vertex_descriptor()::descriptor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca70 (     0x8) shadow_blur_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca78 (     0x8) guard variable for shadow_blur_options_to_constant_values(unsigned long long)::cvmap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca80 (     0x8) get_external_keys.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca88 (     0x8) get_external_keys.external_keys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca90 (     0x8) (anonymous namespace)::ca_context_id_mapper::shared_mapper()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ca98 (     0x8) guard variable for (anonymous namespace)::ca_context_id_mapper::shared_mapper()::shared_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7caa0 (     0x8) localDisplayMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7caa8 (     0x8) notification_register_ca_local_display()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cab0 (     0x8) (anonymous namespace)::schedule::request_pending [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cab8 (     0x8) (anonymous namespace)::schedule::next_earliest_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cac0 (     0x8) da_dm_exist()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cac8 (     0x8) da_dm_exist()::available [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cad0 (     0x8) DiskManagementLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cad8 (     0x8) DiskArbitrationLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cae0 (     0x8) request_preboot_update()::'block-literal'::apfs_once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cae8 (     0x8) request_preboot_update()::'block-literal'::is_apfs [NameNList, MangledNameNList, NList] 
                0x00000001d5c7caf0 (     0x8) getDASessionCreateSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7caf8 (     0x8) getDMManagerClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb00 (     0x8) getDMAPFSClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb08 (     0x8) watcher_queue()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb10 (     0x8) watcher_queue()::watcher_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb18 (     0x8) global_transition_list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb20 (     0x8) transition_init()::registered [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb28 (     0x8) -[SLSDisplayControlClient encodeCommand:withUUID:payloadType:payload:]::x_uuid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb30 (     0x8) PKGSpace_did_create_session_handler(CGSNotificationType, void*, unsigned int, void*)::first_session [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb38 (     0x8) sCGXEventTapMasterList [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb40 (    0x30) sCGXEventTap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb70 (     0x8) gLastAllTapsLoggingEnabledSetting [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb78 (     0x8) sCGXHIDEventTap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb80 (     0x8) secure_event_permitted()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb88 (     0x4) secure_event_permitted()::sEventPermittedMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb8c (     0x4) get_screen_lock_state()::chosen_device_entry [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb90 (     0x8) CGXCursorGetTypeID.cursor_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cb98 (     0x8) _block_invoke.once.11454 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cba0 (     0x1) cgdebug::show_safe_aperture_indicators [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cba1 (     0x1) cgdebug::use_ca_window_shadows (.11523) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cba2 (     0x1) cgdebug::highlight_ca_inner_rim [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cba3 (     0x5) cgdebug::hide_ca_inner_rim [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cba8 (     0x8) QuartzCoreLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbb0 (     0x8) getCARenderUpdateSetIsSnapshotSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbb8 (     0x8) sCachedSpaceSnapshotSeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbc0 (    0x10) _spaces_notification_blocks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbd0 (     0x4) space_state_snapshot_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbd4 (     0x4) space_display_cache_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbd8 (     0x8) set_spaces_notification_block.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbe0 (     0x8) get_space_state_snapshot.cachedData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbe8 (     0x8) get_space_state_snapshot.cachedCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cbf0 (    0x10) CGSBacktraceCreate::capture_backtrace [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc00 (     0x8) cgdebug::sa_indicators [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc08 (     0x8) WSCAWindowBacking::SetRasterizing(bool)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc10 (     0x8) WSCAWindowBacking::SetRasterizing(bool)::rpwsab_sel [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc18 (     0x1) WSCAWindowBacking::SetRasterizing(bool)::rpwsab_supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc19 (     0x7) cgdebug::use_ca_window_shadows (.12103) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc20 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc28 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_punchout_shadow [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc30 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_rim_width [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc38 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_rim_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc40 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_rim_opacity [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc48 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_rim_path_is_bounds [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc50 (     0x8) WSCAWindowBacking::SetContextShadowProperties(WSShadowProperties const*, bool, CGPath const*, WSWindowMask*)::sel_set_soft_rim [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc58 (     0x8) WSCAWindowBacking::SetContextInnerRim(WSShadowProperties const*, bool)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc60 (     0x8) WSCAWindowBacking::SetContextInnerRim(WSShadowProperties const*, bool)::sel_set_border_path_is_bounds [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc68 (     0x1) cgdebug::highlight_ca_inner_rim (.12125) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc69 (     0x7) cgdebug::hide_ca_inner_rim (.12126) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc70 (     0x8) ca_supports_window_shadows()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc78 (     0x8) ca_supports_window_shadows()::spi_supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc80 (     0x8) CGXColorSpaceRegistryGetDefaultColorSpace::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc88 (     0x8) CGXColorSpaceRegistryGetDefaultColorSpace::default_space [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc90 (     0x8) CGXColorSpaceRegistryGetExtendedSRGBSpace::extended_srgb [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cc98 (     0x8) guard variable for CGXColorSpaceRegistryGetExtendedSRGBSpace::extended_srgb [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cca0 (     0x8) color_spaces()::spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cca8 (     0x8) guard variable for color_spaces()::spaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccb0 (     0x8) cursor_trail [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccb8 (     0x4) perf_hud_attribution [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccbc (     0x4) override_fps_target [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccc0 (     0x8) gpu_color_good_high [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccc8 (     0x8) gpu_color_good_low [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccd0 (     0x8) gpu_color_bad_high [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccd8 (     0x8) gpu_color_bad_low [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cce0 (     0x8) cpu_color_good_high [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cce8 (     0x8) cpu_color_good_low [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccf0 (     0x8) cpu_color_bad_high [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ccf8 (     0x8) cpu_color_bad_low [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd00 (     0x8) attribution_selected_gpu_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd08 (     0x8) attribution_selected_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd10 (     0x8) cursor_distances_trail_visible [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd18 (     0x8) _CGColorCreateUncalibratedRGB(double, double, double, double)::uncalibrated_color_space [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd20 (     0x8) guard variable for _CGColorCreateUncalibratedRGB(double, double, double, double)::uncalibrated_color_space [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cd28 (   0x200) update_perf_hud_layer(void*, double)::last_update_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf28 (     0x1) cursor_spacetime_visible [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf29 (     0x7) cursor_trail_visible [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf30 (     0x8) sarlacc()::sarlacc [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf38 (     0x8) guard variable for sarlacc()::sarlacc [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf40 (     0x8) WS::Displays::Prefs::prefs_from_preboot(unsigned int)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf48 (     0x8) WS::Displays::Prefs::preboot::display_sets [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf50 (     0x8) WS::Displays::Prefs::preboot::uuid_map [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf58 (     0x8) WS::Displays::Prefs::preboot::presets [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf60 (     0x8) WS::Displays::Prefs::preboot::user_adjustments [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf68 (     0x8) WS::Displays::Prefs::system_uuid_version()::uuid_version [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf70 (     0x8) WS::Displays::Prefs::system_uuid_version()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf78 (     0x8) WS::Displays::Prefs::load_uuid_map()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf80 (     0x8) get_cacheable_surfaces()::list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf88 (     0x8) guard variable for get_cacheable_surfaces()::list [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf90 (     0x8) gWSCustomValueEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cf98 (     0x8) gWSCustomValueString [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cfa0 (     0x1) set_debug_options(unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int)::debugOptionsMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cfa1 (     0x7) _glInitalizeOK [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cfa8 (     0x8) QuartzCoreLibraryCore(char**)::frameworkLibrary (.0.13653) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cfb0 (     0x8) getCARenderUpdateSetIsSnapshotSymbolLoc()::ptr (.0.13650) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7cfb8 (    0x70) g_snappingPrefs [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d028 (     0x8) CGSharedSnappingPrefs.initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d030 (     0x8) get_tap_trim_radius::trim_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d038 (     0x8) guard variable for get_tap_trim_radius::trim_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d040 (     0x8) enable_mux_behavior.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d048 (     0x8) _block_invoke.CAMetalLayerDidQueryMetalDeviceFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d050 (     0x8) WS::Displays::configuration_engine::determine_startup_logo_display_id() const::logo_display_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d058 (     0x8) WS::Displays::configuration_engine::determine_startup_logo_display_id() const::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d060 (     0x8) WS::Displays::Manager::update_power_assertions(bool)::options [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d068 (     0x8) WS::Displays::Manager::update_power_assertions(bool)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d070 (     0x8) WS::Displays::Manager::get_display_request_queue()::_display_request_block_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d078 (     0x8) guard variable for WS::Displays::Manager::get_display_request_queue()::_display_request_block_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d080 (     0x8) WS::Displays::Manager::get_display_request_lock()::display_request_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d088 (     0x8) guard variable for WS::Displays::Manager::get_display_request_lock()::display_request_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d090 (     0x8) WS::Displays::Manager::displays_request_dequeue_run_one_pass(SLSDisplayControlRequestType)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d098 (     0x8) IOKitLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0a0 (     0x8) getIOPMSetDesktopModeWithOptionsSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0a8 (     0x8) gCredentialsConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0b0 (     0x8) get_credentials_queue()::credentialsQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0b8 (     0x8) get_credentials_queue()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0c0 (     0x8) SLSServerAbsoluteTimeToClientAbsoluteTime.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0c8 (     0x1) cgdebug::display_timing_bucketize_legacy [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0c9 (     0x7) WS::Displays::Display::create_sarlacc_physical_path(unsigned int) const::fake_it [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0d0 (     0x8) guard variable for WS::Displays::Display::create_sarlacc_physical_path(unsigned int) const::fake_it [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0d8 (     0x8) WS::Displays::Display::has_physical_sarlacc() const::fake_it [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0e0 (     0x8) guard variable for WS::Displays::Display::has_physical_sarlacc() const::fake_it [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0e8 (     0x1) cgdebug::vrr_lfc_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0e9 (     0x7) cgdebug::vrr_lfc_forced [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0f0 (     0x8) CoreUILibraryCore(char**)::frameworkLibrary (.0.14790) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d0f8 (     0x8) getCUICreateDisplayShapeSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d100 (     0x8) -[SLSXPCService getConnectionQueue]::connection_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d108 (     0x8) cgdebug::enable_ax_matrix [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d110 (     0x8) get_AXSPhotosensitiveMitigationSetEnabledSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d118 (     0x8) libAccessibilityLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d120 (     0x8) _force_capture_surface_incompleteness [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d128 (     0x8) __sessionControlRef [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d130 (    0x10) display_system_state_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d140 (     0x9) gCGSAppAbusesPermanentSettings [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d149 (     0x1) gCGSWillReconfigureSeen [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d14a (     0x6) gCGSDidReconfigureSeen [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d150 (     0x8) SLSDFRSetDimmingStep::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d158 (     0x8) SLSDFRSetDimmingStep::_DFRDSetDimmingStep [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d160 (     0x8) SLSDFRSetDimmingStep::'block-literal'::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d168 (     0x4) gThreadSafeLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d16c (     0x4) gRealtimeDisplayShmemPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d170 (    0x10) (anonymous namespace)::_realtime_data_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d180 (     0x8) display_notify_proc(CGSNotificationType, void*, unsigned int, void*)::receiving_console_notifications [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d188 (     0x8) getCUICreateDisplayShapeSymbolLoc()::ptr (.0.15685) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d190 (     0x8) CoreUILibraryCore(char**)::frameworkLibrary (.0.15689) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d198 (    0x10) initDisplayState()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1a8 (     0x8) (anonymous namespace)::_deathwatch_block_registered [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1b0 (     0x8) CGSConnectionGetTypeID::typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1b8 (     0xc) CGSConnectionGetTypeID::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1c4 (     0x4) sDataForPortMappingLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1c8 (     0x8) sDataForPortMapping [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1d0 (     0x8) CGSGetPerUserPerMachineKeys::per_user_per_machine_keys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1d8 (    0x10) CGSGetPerUserPerMachineKeys::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1e8 (     0x8) CGSKnownConnections()::__CGSKnownConnections [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1f0 (     0x8) CGSKnownConnections()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d1f8 (     0x8) task_id_token()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d200 (     0x8) task_id_token()::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d208 (     0x8) guard variable for shutdown_server_connections(bool)::shutdown_mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d210 (     0x8) shutdown_server_connections(bool)::shutdown_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d218 (     0x8) CGSRetainedConnections()::__CGSRetainedConnections [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d220 (     0x8) CGSRetainedConnections()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d228 (     0x8) set_compat_session_owner(__SLSessionOwner const*)::cached_owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d230 (     0x4) gConnectionNotesLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d234 (     0x4) gConnectionNotes (.init) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d238 (     0x8) coordinated_distnote_continuations_pthread_key()::key [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d240 (     0x8) coordinated_distnote_continuations_pthread_key()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d248 (     0x4) gConnectionNotes (.body.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d24c (     0x4) gConnectionNotes (.body.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d250 (     0x8) gConnectionNotes (.body.2) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d258 (     0x1) gWSDisableFSMMFade [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d259 (     0x7) gScheduledDragFadeTimer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d260 (     0x8) get_ctx_ids::ctx_ids_per_session [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d268 (     0x8) guard variable for get_ctx_ids::ctx_ids_per_session [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d270 (     0x1) (anonymous namespace)::cgdebug::force_greedy_displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d271 (     0x3) (anonymous namespace)::cgdebug::ignore_off_screen_contexts [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d274 (     0x4) (anonymous namespace)::cgdebug::defer_lock_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d278 (     0x4) (anonymous namespace)::cgdebug::only_updated_display [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d27c (     0x1) (anonymous namespace)::cgdebug::enable_display_idle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d27d (     0x3) (anonymous namespace)::cgdebug::force_scheduling_one_display_per_update_for_ids [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d280 (     0x8) WSSchedulerRegisterSessionHandler::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d288 (     0x8) CGSWindowGetTypeID.typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d290 (    0x10) CGSWindowGetTypeID.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2a0 (     0x8) _block_invoke_2.lastPruneTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2a8 (     0x8) __CGSLocalRetainedWindows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2b0 (     0x8) (anonymous namespace)::global::deferred_updates_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2b8 (    0x30) cgdebug::frame_samples [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2e8 (     0x1) cgdebug::ca_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2e9 (     0x1) cgdebug::color_match_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2ea (     0x1) cgdebug::visualize_shadow_geometry [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2eb (     0x1) cgdebug::use_ca_window_shadows (.16423) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2ec (     0x1) cgdebug::cgs_surfaces_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2ed (     0x1) cgdebug::force_vsync_off [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2ee (     0x1) cgdebug::filtering_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2ef (     0x1) cgdebug::always_filter_windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f0 (     0x1) cgdebug::always_filter_surfaces [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f1 (     0x1) cgdebug::ignore_client_disabled_updates [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f2 (     0x1) cgdebug::ignore_opaque_shapes [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f3 (     0x1) cgdebug::force_exclude_obedience [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f4 (     0x1) cgdebug::force_fullscreen_flush [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f5 (     0x1) cgdebug::content_protection_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f6 (     0x1) cgdebug::eye_candy_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f7 (     0x1) cgdebug::selective_sharing_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f8 (     0x1) cgdebug::force_video_toolbox [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2f9 (     0x1) cgdebug::presentation_mode_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2fa (     0x2) cgdebug::frame_time_logging_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d2fc (     0x4) cgdebug::bubble_delay [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d300 (     0x4) cgdebug::bubble_preparation_delay_ms [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d304 (     0x4) cgdebug::bubble_delay_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d308 (     0x4) cgdebug::bubble_composition_delay_ms [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d30c (     0x4) cgdebug::bubble_presentation_delay_ms [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d310 (     0x1) cgdebug::bubble_chaos_monkey_mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d311 (     0x1) cgdebug::bubble_delay_alternate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d312 (     0x1) cgdebug::force_privacy_wart_purging [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d313 (     0x1) cgdebug::allow_privacy_wart_CA_path [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d314 (     0x4) cgdebug::overdrive_rate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d318 (     0x8) cgdebug::clpc_work_interval_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d320 (     0x8) (anonymous namespace)::global::clpc_wi_handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d328 (     0x8) (anonymous namespace)::global::clpc_wi_instance [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d330 (     0x8) (anonymous namespace)::global::updater_mem_arena [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d338 (     0x4) (anonymous namespace)::global::disable_deferred_updates_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d33c (     0x1) (anonymous namespace)::global::surface_accelerator_change_scheduled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d33d (     0x3) CGXInitialEnableOfDisplayUpdates::isEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d340 (     0x8) gUpdaterPredicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d348 (     0x8) gUpdaterPredicateData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d350 (     0x4) cgdebug::update_rect_threshold [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d354 (     0x4) cgdebug::skipping_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d358 (     0x8) cgdebug::skipped_process [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d360 (     0x4) cgdebug::skipped_pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d364 (     0x4) cgdebug::skipped_inverse_wid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d368 (     0x4) cgdebug::skipped_wid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d36c (     0x4) cgdebug::skipped_sid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d370 (     0x8) cgdebug::skip_targeted_windows [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d378 (     0x8) WS::Updater::UpdateState::next_update_seed()::seed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d380 (     0x8) (anonymous namespace)::global::ca_update_depth [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d388 (    0x28) cgdebug::update_window_blurs()::win2radiusMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3b0 (     0x8) guard variable for cgdebug::update_window_blurs()::win2radiusMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3b8 (     0x8) global_unique_server_disable_update_seed()::seed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3c0 (     0x8) get_display_zoom()::gDisplayZoom [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3c8 (     0x8) WS::Updater::ca_supports_plugin_id_gather()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3d0 (     0x8) WS::Updater::ca_supports_plugin_id_gather()::supported [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3d8 (     0x8) get_CA_window_context_delegate_creator.creator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3e0 (     0x8) get_RIP_window_context_delegate_creator.creator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3e8 (     0x4) sCGSAllDisplaysCaptured [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3ec (     0xc) sCGSAllDisplaysCaptureOptions [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d3f8 (     0x8) _block_invoke.once.16796 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d400 (     0x1) _SLDisplayCapturedByPsn.warned [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d401 (     0xf) initDisplays.runningInServer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d410 (     0x8) sPendingNoteList [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d418 (     0x8) received_initial_kCGSDisplayWillReconfigure [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d420 (     0x8) big_dumb_buffer.buffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d428 (     0x8) big_dumb_buffer.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d430 (     0x8) dict_key_value_pair_comparer.alwaysIgnore [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d438 (     0x8) dict_key_value_pair_comparer.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d440 (     0x8) CACurrentWindowPluginAPIVersion::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d448 (     0x1) CGXSynchronizeSurfaceVisibility::errLogged [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d449 (     0x1) gDeactivateSurfaceAccelerator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d44a (     0x1) gWSSurfaceExclusiveIOPModeEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d44b (     0x1) gWSSurfaceCAPlaceholderCached [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d44c (     0x1) gWSSurfaceCAPlaceholderUncached [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d44d (     0x1) gWSSurfaceCAPlaceholderStale [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d44e (     0x2) cgdebug::event_delivery_interpolation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d450 (     0x4) cgdebug::event_delivery_override_input_rate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d454 (     0x1) cgdebug::event_delivery_verbose_debug [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d455 (     0x1) cgdebug::event_delivery_3rd_party_disable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d456 (     0xa) cgdebug::event_interpolation_always_on_pointer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d460 (    0x80) ScrollWheelEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d4e0 (     0x8) guard variable for ScrollWheelEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d4e8 (     0x8) ScrollWheelEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d4f0 (    0x10) guard variable for ScrollWheelEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d500 (    0x80) DigitizerScrollEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d580 (     0x8) guard variable for DigitizerScrollEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d588 (     0x8) DigitizerScrollEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d590 (    0x10) guard variable for DigitizerScrollEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d5a0 (    0x80) PointerEventItem2::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d620 (     0x8) guard variable for PointerEventItem2::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d628 (     0x8) PointerEventItem2::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d630 (    0x10) guard variable for PointerEventItem2::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d640 (    0x80) PointerEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d6c0 (     0x8) guard variable for PointerEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d6c8 (     0x8) PointerEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d6d0 (    0x10) guard variable for PointerEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d6e0 (    0x80) DockSwipeEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d760 (     0x8) guard variable for DockSwipeEventItem::odometer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d768 (     0x8) DockSwipeEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d770 (     0x8) guard variable for DockSwipeEventItem::prev_issued_event [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d778 (     0x8) EventInterpolator::DistributingEventTracker::addEvent(EventInterpolationHarness*, __IOHIDEvent*, __IOHIDService*)::prevT [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d780 (    0x10) EventInterpolator::DistributingEventTracker::addEvent(EventInterpolationHarness*, __IOHIDEvent*, __IOHIDService*)::lastAcceleratedDelta [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d790 (     0x8) guard variable for EventInterpolator::DistributingEventTracker::addEvent(EventInterpolationHarness*, __IOHIDEvent*, __IOHIDService*)::lastAcceleratedDelta [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d798 (     0x8) PointerEventItem::drag_ended_event_is_waiting_to_be_emitted [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7a0 (     0x8) PointerEventItem::pending_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7a8 (     0x8) guard variable for PointerEventItem::pending_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7b0 (     0x1) ScrollWheelEventItem::is_gesture_started [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7b1 (     0x1) DigitizerScrollEventItem::is_gesture_started [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7b2 (     0x6) PointerEventItem::has_pointer_drag_started [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7b8 (     0x8) PointerEventItem2::insert_event(EventInterpolationHarness*, EventSet*, EventSet*, double, double, __IOHIDEvent*, __IOHIDService*, bool)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7c0 (     0x4) PointerEventItem2::prev_button_state [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7c4 (     0xc) DockSwipeEventItem::is_gesture_started [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7d0 (    0x10) DigitizerSTREventItem::original_scale_rotation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7e0 (    0x10) DigitizerSTREventItem::original_translation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d7f0 (    0x10) DigitizerSTREventItem::interpolated_scale_rotation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d800 (    0x10) DigitizerSTREventItem::interpolated_translation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d810 (     0x8) gLastSTRState [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d818 (     0x1) DigitizerSTREventItem::is_gesture_started [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d819 (     0x3) (anonymous namespace)::gWSIOSurfaceSimulateNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d81c (     0x4) WSIOSurfaceLabelPrefix::ws_pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d820 (     0x8) guard variable for WSIOSurfaceLabelPrefix::ws_pid [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d828 (    0x80) WSIOSurfaceLabelPrefix::prefix [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8a8 (     0x8) WSIOSurfaceLabelPrefix::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8b0 (    0x30) hid_translation_state_append_wrapped_nxevent(hid_translation_state_t*, __IOHIDEvent*, bool)::sLastClickData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8e0 (     0x8) (anonymous namespace)::get_registry()::registry (.17905) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8e8 (     0x8) guard variable for (anonymous namespace)::get_registry()::registry (.17904) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8f0 (     0x8) gBootstrapConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d8f8 (     0x8) get_bootstrap_queue()::bootstrapQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d900 (     0x8) get_bootstrap_queue()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d908 (     0x8) current_message [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d910 (     0x8) current_connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d918 (    0x10) current_connection_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d928 (    0x10) finalize_mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d938 (     0x8) app_permitted_to_connect_or_launch.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d940 (     0x8) +[SLDisplayPresetDeviceManager instance]::inst [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d948 (     0x8) guard variable for +[SLDisplayPresetDeviceManager instance]::inst [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d950 (     0x8) _debugDeferArrivalSeconds [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d958 (     0x8) HIDDisplayLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d960 (     0x8) getHIDDisplayCreatePresetInterfaceWithServiceSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d968 (     0x8) getHIDDisplayCreateDeviceManagementInterfaceWithServiceSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d970 (     0x8) getHIDDisplayCreateUserAdjustmentInterfaceWithServiceSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d978 (     0x8) getHIDDisplayGetContainerIDSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d980 (     0x8) getHIDDisplayGetPresetCountSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d988 (     0x8) getHIDDisplayGetFactoryDefaultPresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d990 (     0x8) getHIDDisplayGetActivePresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d998 (     0x8) getHIDDisplaySetActivePresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9a0 (     0x8) getHIDDisplayIsPresetValidSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9a8 (     0x8) getHIDDisplayIsPresetWritableSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9b0 (     0x8) getHIDDisplayCopyPresetUniqueIDSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9b8 (     0x8) getHIDDisplayGetPresetCapabilitiesSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9c0 (     0x8) getHIDDisplaySetPresetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9c8 (     0x8) enable_display_presets_dump()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9d0 (     0x8) enable_display_presets_dump()::dump [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9d8 (     0x8) getHIDDisplayDeviceManagementGetSecurityTokenSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9e0 (     0x8) getHIDDisplayDeviceManagementSetFactoryResetDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9e8 (     0x8) getHIDDisplayCopyPresetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9f0 (     0x8) getHIDDisplayUserAdjustmentCopyDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7d9f8 (     0x8) getHIDDisplayUserAdjustmentSetDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da00 (     0x8) getHIDDisplayUserAdjustmentIsValidSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da08 (     0x8) getHIDDisplayUserAdjustmentInvalidateSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da10 (     0x4) HMD::SetWorkInterval(unsigned int, unsigned int)::hmdWorkIntervalPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da14 (     0x8) HMD::WaitForThreadToStop(char const*, HMD::HMDThreadState&)::timebase [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da1c (     0x1) gWSHMDFakeEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da1d (     0x3) gWSHMDEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da20 (     0x4) get_next_unique_id()::current_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da24 (     0xc) set_realtime_thread_priority(unsigned int)::timebase [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da30 (     0x8) get_set_enabled_lock()::_set_enabled_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da38 (     0x8) guard variable for get_set_enabled_lock()::_set_enabled_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da40 (     0x8) get_hmd_root_queue()::_hmd_root_queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da48 (     0x8) get_hmd_root_queue()::_predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da50 (     0x8) get_system_hmd_state()::gSystemHMDState [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da58 (     0x8) guard variable for get_system_hmd_state()::gSystemHMDState [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da60 (     0x8) iosurface_save_tga(__IOSurface*, char const*, bool, int)::dump_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7da68 (    0x88) gMainThreadQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7daf0 (     0x4) gWSEnableNonCoalescedUpdateCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7daf4 (     0x4) gWSMKTimerPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7daf8 (    0x88) gCriticalQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7db80 (    0x88) gIdleQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc08 (    0x60) gMachSendDurations [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc68 (     0x8) reschedule_callback_on_session.pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc70 (     0x8) SLSTransactionGetTypeID::typeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc78 (     0x8) SLSTransactionGetTypeID::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc80 (     0x8) SLSTransactionInlineBufferSize::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc88 (     0x8) SLSTransactionInlineBufferSize::buffer_size [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc90 (     0x8) sls_transaction_generate_next_id()::current_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dc98 (     0x8) _SLSTransactionWriteStreamKey()::key [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dca0 (     0x8) _SLSTransactionWriteStreamKey()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dca8 (     0x8) gBlitArena [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcb0 (     0x4) CGXSoftwareComposite::gBlitNesting [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcb4 (     0x4) inFlightBlitOps [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcb8 (     0x1) gSignedEventEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcb9 (     0x3) gEventDebugSideCar2Allowed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcbc (     0x4) gEventPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcc0 (     0x4) WSSetEventCapture::done_init [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcc4 (     0x4) console_devices_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcc8 (     0x8) console_devices_data [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcd0 (     0x8) console_sidecar2_device_ids [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcd8 (     0x8) device_ids_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dce0 (     0x8) WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregatorQueue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dce8 (     0x8) WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregatorQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcf0 (     0x8) WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregator()::sharedAggregator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dcf8 (     0x8) guard variable for WSBackgroundHIDSystemSetPropertyAggregator::SharedAggregator()::sharedAggregator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd00 (     0x8) WS::Displays::next_update_seed()::seed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd08 (     0x8) CGSRegisterProcessAsApp.sRegisterApplicationFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd10 (     0x8) WS::Displays::CinematicBootRecord::ensure_window()::kBackgroundColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd18 (     0x8) guard variable for WS::Displays::CinematicBootRecord::ensure_window()::kBackgroundColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd20 (     0x8) CGSGetDisplayModeNull()::CGSDisplayModeNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd28 (     0x8) guard variable for CGSGetDisplayModeNull()::CGSDisplayModeNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd30 (     0x1) cgdebug::visualize_shadow_geometry (.20679) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd31 (     0x7) gWSMetalBackingFenceEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd38 (     0x8) metal_ioaf_pseudofence_available()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd40 (     0x8) metal_ioaf_pseudofence_available()::enabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd48 (     0x8) gProcControl.0 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd50 (     0x1) gProcControl.1 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd51 (     0x7) death_notification_init.registered [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd58 (     0x8) WSCAContextServerOptions::options [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd60 (     0x8) WSCAContextServerOptions::options_init [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd68 (     0x8) server_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd70 (     0x8) get_server_port_mutex()::mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd78 (     0x8) guard variable for get_server_port_mutex()::mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd80 (     0x8) get_cache()::cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd88 (     0x8) guard variable for get_cache()::cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd90 (     0x8) WSSystemCanCompositeWithMetal::metal_lovin [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dd98 (     0x8) WSSystemCanCompositeWithMetal::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dda0 (     0x8) MetalValidationLayerEnabled::active [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dda8 (     0x8) guard variable for MetalValidationLayerEnabled::active [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddb0 (     0x8) WSGetDefaultMetalAccelerator::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddb8 (     0x8) WSGetDefaultMetalAccelerator::accelerator [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddc0 (    0x10) metalCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddd0 (    0x10) metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::clear_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dde0 (     0x8) guard variable for metal_composite_legacy_background_blur(MetalContext*, WSCompositeSourceLayer*, WSCompositeDestination*)::clear_color [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dde8 (     0x8) gPendingPresetContainerID [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddf0 (     0x8) gShouldLogDisplay [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ddf8 (     0x8) HIDDisplayReportingQueue()::sHIDDisplayReportingQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de00 (     0x8) HIDDisplayReportingQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de08 (     0x8) GetDisplayPresetInfoMapLock()::preset_info_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de10 (     0x8) guard variable for GetDisplayPresetInfoMapLock()::preset_info_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de18 (     0x8) HIDDisplayReportingPresetInfo()::sDisplayPresetInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de20 (     0x8) guard variable for HIDDisplayReportingPresetInfo()::sDisplayPresetInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de28 (     0x8) getHIDDisplayCreateIOReportingInterfaceWithContainerIDSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de30 (     0x8) HIDDisplayLibraryCore(char**)::frameworkLibrary (.0.21419) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de38 (     0x8) getHIDDisplayIOReportingSetInputDataHandlerSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de40 (     0x8) HIDDisplayReportingDataHandler(__CFData const*, void (__CFData const*) block_pointer)::accumulatedData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de48 (     0x8) getHIDDisplayIOReportingSetDispatchQueueSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de50 (     0x8) getHIDDisplayIOReportingActivateSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de58 (     0x8) getHIDDisplayIOReportingSetOutputDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de60 (     0x8) getHIDDisplayIOReportingCancelSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de68 (     0x8) getADIOReportingInterfaceClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de70 (     0x8) AppleDisplayTCONControlLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de78 (     0x8) GetDisplayReportingDataMapLock()::display_reporting_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de80 (     0x8) guard variable for GetDisplayReportingDataMapLock()::display_reporting_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de88 (     0x8) HIDDisplayReportingData()::sDisplayData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de90 (     0x8) guard variable for HIDDisplayReportingData()::sDisplayData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7de98 (     0x8) check_time_of_day()::initialized_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dea0 (     0x8) check_time_of_day()::'block-literal'::timer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dea8 (     0x8) check_time_of_day()::'block-literal'::'block-literal'::last_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c7deb0 (     0x8) getanalytics_send_event_lazySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7deb8 (     0x8) CoreAnalyticsLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dec0 (     0x8) HIDDisplayInfo()::sDisplayInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dec8 (     0x8) guard variable for HIDDisplayInfo()::sDisplayInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ded0 (     0x8) get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*)::sHasGEOTimeZoneLocation [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ded8 (     0x8) get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*)::sGEOTimeZoneLocation (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dee0 (     0x8) get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*)::sGEOTimeZoneLocation (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dee8 (     0x8) get_location_by_heuristic(bool, bool, GEOLocationCoordinate2D*)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7def0 (     0x8) getGEOCityClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7def8 (     0x8) GeoKitLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df00 (     0x8) getGEOManagedObjectContextSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df08 (     0x8) get_geo_almanac(bool)::sAlmanac [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df10 (     0x8) get_geo_almanac(bool)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df18 (     0x8) getGEOAlmanacClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df20 (     0x8) GeoServicesLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df28 (     0x8) sCurrentTrailer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df30 (    0x28) CGSErrorString.buffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df58 (     0x4) gServiceSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df5c (     0x4) gMainDispatchQueuePort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df60 (    0x20) gTimerSignalingRecord [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df80 (     0x8) gPortDataNotes [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df88 (     0x8) gOutMsg [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df90 (     0x1) gOutMsgPending [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df91 (     0x1) gServerRunningAsDaemon [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df92 (     0x1) gServerRunningInSafeMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df93 (     0x5) sCGXVirtualConsoleOnly [NameNList, MangledNameNList, NList] 
                0x00000001d5c7df98 (     0x8) gDyingPortNotes [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfa0 (     0x8) gPortNotes [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfa8 (     0xc) sCGXSpinNotifyPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfb4 (     0x4) sCGXSpinControlDemandLaunchlookupDone [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfb8 (     0x8) WSSetSIGTERMHandler.sigterm_source [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfc0 (     0x8) WSSetSIGTERMHandler.setup_predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfc8 (     0x8) WSSetSIGTERMHandler.resume_predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfd0 (     0x8) gWSRootQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfd8 (     0x4) run_one_server_pass.errorCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfdc (     0x4) get_notify_port.notify_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dfe0 (    0x10) sCGXLastSeqNumber [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dff0 (     0x1) gWSKtraceEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dff1 (     0x1) gWSSignpostEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dff2 (     0x6) gWSDisplayUpdateSignpostEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c7dff8 (     0x8) gTotalUpdateCounter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e000 (     0x8) _gPerformanceData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e008 (   0x200) gPerDisplayUpdateCounter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e208 (     0x8) notify_ports [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e210 (   0x478) update_signpost_data [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e688 (   0x108) update_frame_drop_data [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e790 (     0x8) update_begin_time_mct [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e798 (     0x8) WSUpdateKtraceSignpostContentChanged::phase_2_3 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7a0 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__display_update [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7a8 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__ca_prep_states [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7b0 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__compositing [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7b8 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__presenting [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7c0 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__capture_update [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7c8 (     0x8) WSUpdateSignpostSignalWithArgs::signpost_id__display_stream_update [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7d0 (     0x8) connection_flush_tracker [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7d8 (     0x8) update_flush_pids [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e7e0 (    0x20) performance_task_update()::gLastInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e800 (     0x8) performance_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e808 (     0x8) guard variable for performance_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e810 (     0x8) persist_glitch_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e818 (     0x8) guard variable for persist_glitch_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e820 (     0x8) in_memory_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e828 (     0x8) guard variable for in_memory_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e830 (     0x8) display_update_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e838 (     0x8) guard variable for display_update_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e840 (     0x8) SignpostMetricsLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e848 (     0x8) get_MXSignpostMetricsSnapshotSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e850 (     0x8) WSSystemUsesAppleInternalSecurityPolicies.isAppleInternal [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e858 (     0x8) WSSystemUsesAppleInternalSecurityPolicies.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e860 (     0x8) gBootstrapQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e868 (     0x8) gCredentialsQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e870 (     0x8) gCredentialsHoist [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e878 (     0x8) WSDoWithCredentials.once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e880 (    0x40) WSDoWithCredentials._mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8c0 (     0x8) getProcessCredentialCache.processCredentialCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8c8 (     0x8) getProcessCredentialCache.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8d0 (     0x8) audit_token_check_tcc_access.TCCAccessPreflightWithAuditToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8d8 (     0x8) tcc_lookup_symbol.tcc_framework_handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8e0 (     0x8) WSAuditTokenIsListenEventTCCApproved.useListenEventService [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8e8 (     0x8) WSAuditTokenIsListenEventTCCApproved.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8f0 (     0x8) createRootBootstrapConnectionEndpoint.rootConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e8f8 (     0x8) createRootBootstrapConnectionEndpoint.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e900 (     0x8) createRootCredentialsConnectionEndpoint.rootConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e908 (     0x8) createRootCredentialsConnectionEndpoint.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e910 (     0x8) gGamepolicyQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e918 (     0x8) GamepolicyClient::createRootConnectionEndpoint()::rootConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e920 (     0x8) GamepolicyClient::getClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e928 (     0x8) guard variable for GamepolicyClient::getClientMap()::clients [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e930 (     0x8) get_full_screen_tracker()::gGameFullScreenData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e938 (     0x8) guard variable for get_full_screen_tracker()::gGameFullScreenData [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e940 (     0x8) WSGVAInitialize::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e948 (     0x8) gGVASupportedFormats [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e950 (     0x8) get_avf_vtable()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e958 (    0x78) get_avf_vtable()::vtable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e9d0 (     0x8) get_avf_vtable()::vtable_ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e9d8 (     0x8) get_avf_cache()::cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e9e0 (     0x8) guard variable for get_avf_cache()::cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7e9e8 (    0x88) ZoomManager::get_session_zoom_data()::default_zoom_data [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea70 (     0x8) ZoomManager::get_session_zoom_data()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea78 (     0x8) gCGSUnifiedKeyMapping [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea80 (     0x8) gCGSDefault_uchr [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea88 (     0x8) gCGSDefault_uchr_malloced [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea90 (     0x8) WSWindowMaskGetMaskForContinuousRadiusAndScale::kExpansionFactor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ea98 (     0x8) guard variable for WSWindowMaskGetMaskForContinuousRadiusAndScale::kExpansionFactor [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eaa0 (     0x8) WSWindowMaskGetTypeID()::window_mask_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eaa8 (     0x8) WSWindowMaskGetTypeID()::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eab0 (     0x8) get_window_mask_cache()::window_mask_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eab8 (     0x8) get_window_mask_cache()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eac0 (     0x8) get_window_sfx_mask_cache()::window_sfx_mask_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eac8 (    0x10) get_window_sfx_mask_cache()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ead8 (     0x4) gCGMouseDeltaX [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eadc (     0xc) gCGMouseDeltaY [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eae8 (     0x8) sWindowManagementBridgeDelegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eaf0 (     0x8) SLSWindowManagementClientOperationsEnabled::enableBridgedOperations [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eaf8 (     0x8) SLSWindowManagementClientOperationsEnabled::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb00 (     0x8) SLSWMBridgeDelegate()::fallbackDelegate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb08 (     0x8) sGlobalHotKeys [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb10 (     0x8) hot_key_setup_is_untrusted(CGSInputDeviceClass, unsigned int, unsigned short, unsigned short, CGSSymbolicHotKey)::alnum_set [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb18 (     0x8) checkButtons(SLSEventRecord const*)::currentState (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb20 (     0x8) WSCompositeDestinationGetTypeID()::composite_destination_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb28 (     0x8) WSCompositeDestinationGetTypeID()::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb30 (     0x8) sProccessesSeed [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb38 (     0x8) sMessageHandler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb40 (     0x8) sDisconnectHandler [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb48 (     0x8) sLastAuditTokens [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb50 (     0x8) +[SLSFullScreenPidReporter sharedReporter]::sharedReporter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb58 (     0x8) +[SLSFullScreenPidReporter sharedReporter]::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb60 (     0x8) gGamepolicyConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb68 (     0x8) get_gamepolicy_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb70 (     0x8) get_gamepolicy_queue()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb78 (     0x8) is_cursor_under_corner [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb80 (    0x10) prev_cursor_pos [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb90 (     0x8) WSGetSarlaccPath::polygon [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eb98 (     0x8) guard variable for WSGetSarlaccPath::polygon [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eba0 (     0x8) WSGetOriginalSarlaccPath::polygon [NameNList, MangledNameNList, NList] 
                0x00000001d5c7eba8 (     0x8) guard variable for WSGetOriginalSarlaccPath::polygon [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebb0 (    0x10) cursor_projection [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebc0 (     0x8) WSCursorRestriction::prev_delta (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebc8 (     0x4) WSCursorRestriction::prev_move [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebcc (     0x4) CurveCornerPolygon::CurveCornerPolygon(CGPath const*)::counter [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebd0 (     0x8) get_ATLM_restriction()::polygons [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebd8 (     0x8) guard variable for get_ATLM_restriction()::polygons [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebe0 (     0x8) restriction_path_lock()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebe8 (     0x8) guard variable for restriction_path_lock()::lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebf0 (     0x8) gLayerKitBlockHoist [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebf8 (     0x1) WSIsPortableMachine::isPortable [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebf9 (     0x1) WSIsPortableMachine::isSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ebfa (     0x6) WSRunningMacBuddy::isNormalConfig [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec00 (     0x8) WSIsFirstRunSinceBoot::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec08 (     0x1) WSIsFirstRunSinceBoot::first_run [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec09 (     0x1) (anonymous namespace)::hibernate::slept_since_last_check [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec0a (     0x2) (anonymous namespace)::hibernate::is_wake_from_hibernate [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec0c (     0x4) (anonymous namespace)::hibernate::last_count [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec10 (     0x8) is_m1_mac::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec18 (     0x8) is_m1_mac::is_m1 [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec20 (     0x8) initialize_hibernate_count()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec28 (     0x8) hibernate_count()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec30 (    0x30) hibernate_count()::mib [NameNList, MangledNameNList, NList] 
                0x00000001d5c7ec60 (     0x1) hibernate_count()::hibernate_count_supported [NameNList, MangledNameNList, NList] 
        0x00000001d6d745e0 (  0x1098) __DATA_DIRTY SEGMENT
            0x00000001d6d745e0 (   0xa00) __DATA_DIRTY __objc_data
                0x00000001d6d745e0 (    0x28) OBJC_CLASS_$_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x00000001d6d74608 (    0x28) OBJC_METACLASS_$_PKGCoreUIRenderer [NameNList, MangledNameNList, NList] 
                0x00000001d6d74630 (    0x28) OBJC_CLASS_$_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001d6d74658 (    0x28) OBJC_METACLASS_$_PKGCoreUIWork [NameNList, MangledNameNList, NList] 
                0x00000001d6d74680 (    0x28) OBJC_CLASS_$_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x00000001d6d746a8 (    0x28) OBJC_METACLASS_$_PKGCoreUITransaction [NameNList, MangledNameNList, NList] 
                0x00000001d6d746d0 (    0x28) OBJC_CLASS_$_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001d6d746f8 (    0x28) OBJC_METACLASS_$_CGXConnectionBox [NameNList, MangledNameNList, NList] 
                0x00000001d6d74720 (    0x28) OBJC_CLASS_$_SLDataTimelineConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74748 (    0x28) OBJC_CLASS_$_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001d6d74770 (    0x28) OBJC_METACLASS_$_SLDataTimelineConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74798 (    0x28) OBJC_CLASS_$_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001d6d747c0 (    0x28) OBJC_CLASS_$_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d6d747e8 (    0x28) OBJC_METACLASS_$_SLDataTimelineConnection [NameNList, MangledNameNList, NList] 
                0x00000001d6d74810 (    0x28) OBJC_METACLASS_$_SLDataTimelineUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d6d74838 (    0x28) OBJC_CLASS_$_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d74860 (    0x28) OBJC_METACLASS_$_SLDataTimelineSnapshotCollection [NameNList, MangledNameNList, NList] 
                0x00000001d6d74888 (    0x28) OBJC_CLASS_$_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d748b0 (    0x28) OBJC_METACLASS_$_SLDataTimelineServerSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d748d8 (    0x28) OBJC_CLASS_$_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d74900 (    0x28) OBJC_CLASS_$_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d74928 (    0x28) OBJC_METACLASS_$_SLDataTimelineSessionEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d74950 (    0x28) OBJC_METACLASS_$_SLDataTimelineSessionPlaceholderEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d74978 (    0x28) OBJC_CLASS_$_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d749a0 (    0x28) OBJC_METACLASS_$_SLDataTimelineSessionSnapshotEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d749c8 (    0x28) OBJC_METACLASS_$_SLDataTimelineProcessEntry [NameNList, MangledNameNList, NList] 
                0x00000001d6d749f0 (    0x28) OBJC_CLASS_$_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001d6d74a18 (    0x28) OBJC_METACLASS_$_SLSDisplayController [NameNList, MangledNameNList, NList] 
                0x00000001d6d74a40 (    0x28) OBJC_CLASS_$_SLSBrightnessControlClient [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74a68 (    0x28) OBJC_METACLASS_$_SLSBrightnessControlClient [NameNList, MangledNameNList, NList] 
                0x00000001d6d74a90 (    0x28) OBJC_METACLASS_$_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ab8 (    0x28) OBJC_CLASS_$_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ae0 (    0x28) OBJC_CLASS_$_SLSecureCursorAssertion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74b08 (    0x28) OBJC_METACLASS_$_SLSecureCursorAssertion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74b30 (    0x28) OBJC_METACLASS_$_SLSecureCursorAssertionManager [NameNList, MangledNameNList, NList] 
                0x00000001d6d74b58 (    0x28) OBJC_CLASS_$_SLSessionOwner [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74b80 (    0x28) OBJC_METACLASS_$_SLSessionOwner [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74ba8 (    0x28) OBJC_CLASS_$_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74bd0 (    0x28) OBJC_METACLASS_$_SLSScreenTelemetryResultsSnapshotPanelDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74bf8 (    0x28) OBJC_CLASS_$_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74c20 (    0x28) OBJC_METACLASS_$_SLSScreenTelemetryResultsSnapshotZoneDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74c48 (    0x28) OBJC_CLASS_$_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74c70 (    0x28) OBJC_METACLASS_$_SLSScreenTelemetryResultsSnapshotZoneRowDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74c98 (    0x28) OBJC_CLASS_$_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74cc0 (    0x28) OBJC_METACLASS_$_SLSScreenTelemetryResultsSnapshotDataWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ce8 (    0x28) OBJC_CLASS_$_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d6d74d10 (    0x28) OBJC_METACLASS_$_SLSScreenTelemetryUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d6d74d38 (    0x28) OBJC_CLASS_$_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001d6d74d60 (    0x28) OBJC_METACLASS_$_SLSZeroingWeakContainer [NameNList, MangledNameNList, NList] 
                0x00000001d6d74d88 (    0x28) OBJC_CLASS_$_SLScreenTelemetryConnection [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74db0 (    0x28) OBJC_METACLASS_$_SLScreenTelemetryConnection [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74dd8 (    0x28) OBJC_CLASS_$_SLSDisplayManager [NameNList, MangledNameNList, NList] 
                0x00000001d6d74e00 (    0x28) OBJC_CLASS_$_SLSDisplayPowerControlClient [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74e28 (    0x28) OBJC_METACLASS_$_SLSDisplayPowerControlClient [NameNList, MangledNameNList, NList] 
                0x00000001d6d74e50 (    0x28) OBJC_CLASS_$_SLSXPCService [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74e78 (    0x28) OBJC_METACLASS_$_SLSXPCService [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ea0 (    0x28) OBJC_METACLASS_$_SLDisplayPresetDeviceManager [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ec8 (    0x28) OBJC_CLASS_$_SLDisplayPresetDevice [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74ef0 (    0x28) OBJC_METACLASS_$_SLDisplayPresetDevice [NameNList, MangledNameNList, NList] 
                0x00000001d6d74f18 (    0x28) OBJC_CLASS_$_SLSGUIClient [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74f40 (    0x28) OBJC_METACLASS_$_SLSDisplayControlClient [NameNList, MangledNameNList, NList] 
                0x00000001d6d74f68 (    0x28) OBJC_METACLASS_$_SLSGUIClient [NameNList, MangledNameNList, NList] 
                0x00000001d6d74f90 (    0x28) OBJC_CLASS_$_SLSDisplayControlClient [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d74fb8 (    0x28) OBJC_CLASS_$_SLDisplayPresetDeviceManager [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d6d74fe0 (    0x88) __DATA_DIRTY __data
                0x00000001d6d74fe0 (     0x8) default_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d74fe8 (     0x8) screencapture_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ff0 (     0x8) packages_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d74ff8 (     0x8) displayreconfig_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d75000 (    0x10) display_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d75010 (     0x8) processes_log [NameNList, MangledNameNList, NList] 
                0x00000001d6d75018 (    0x10) get_bundle_id_for_this_process()::bundleId [NameNList, MangledNameNList, NList] 
                0x00000001d6d75028 (    0x40) gDisplayLock [NameNList, MangledNameNList, NList] 
            0x00000001d6d75070 (   0x608) __DATA_DIRTY __bss
                0x00000001d6d75078 (     0x8) SLSLogBreak.once [NameNList, MangledNameNList, NList] 
                0x00000001d6d75080 (     0x8) SLSLogInit.once [NameNList, MangledNameNList, NList] 
                0x00000001d6d75088 (     0x8) CGSRunningInServer.didInit [NameNList, MangledNameNList, NList] 
                0x00000001d6d75090 (    0x10) get_remote_context_callback_record.record [NameNList, MangledNameNList, NList] 
                0x00000001d6d750a0 (     0x8) get_remote_context_callback_record.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d750a8 (    0x10) gCGSScoreboard [NameNList, MangledNameNList, NList] 
                0x00000001d6d750b8 (     0x8) SLSCurrentEventTimestamp::once [NameNList, MangledNameNList, NList] 
                0x00000001d6d750c0 (     0x8) SLSCurrentEventTimestamp::tbi [NameNList, MangledNameNList, NList] 
                0x00000001d6d750c8 (     0x8) devices_dictionary [NameNList, MangledNameNList, NList] 
                0x00000001d6d750d0 (    0x10) SLSDevicesInit::connected [NameNList, MangledNameNList, NList] 
                0x00000001d6d750e0 (     0x8) get_devices_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d6d750e8 (    0x10) get_devices_queue()::once [NameNList, MangledNameNList, NList] 
                0x00000001d6d750f8 (     0x8) (anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*)::frameworkAccessPreflight [NameNList, MangledNameNList, NList] 
                0x00000001d6d75100 (     0x8) (anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*)::frameworkAccessRequest [NameNList, MangledNameNList, NList] 
                0x00000001d6d75108 (     0x8) (anonymous namespace)::SLSTCCService::TCCAccessCheck((anonymous namespace)::SLSTCCService::TCCAccessCheckType, __CFString const*, __CFDictionary const*)::lookupFlag [NameNList, MangledNameNList, NList] 
                0x00000001d6d75110 (     0x8) tccListenEventService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d6d75118 (    0x10) guard variable for tccListenEventService()::service [NameNList, MangledNameNList, NList] 
                0x00000001d6d75128 (     0x8) SLEventGetTypeID::event_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d6d75130 (     0x8) SLEventGetTypeID::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d6d75138 (     0x8) convert_time(unsigned long long)::to_base [NameNList, MangledNameNList, NList] 
                0x00000001d6d75140 (     0x8) convert_time(unsigned long long)::lock [NameNList, MangledNameNList, NList] 
                0x00000001d6d75148 (     0x8) guard variable for convert_time(unsigned long long)::lock [NameNList, MangledNameNList, NList] 
                0x00000001d6d75150 (    0x10) convert_time(unsigned long long)::is_timebase_init [NameNList, MangledNameNList, NList] 
                0x00000001d6d75160 (     0x8) SLSCoordinatedLocalNotificationCenter::center [NameNList, MangledNameNList, NList] 
                0x00000001d6d75168 (     0x8) SLSCoordinatedLocalNotificationCenter::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d6d75170 (     0x8) _CGSVersion [NameNList, MangledNameNList, NList] 
                0x00000001d6d75178 (    0x10) SLSGetSystemUIHasRTLDirectionLegacy::sOnce [NameNList, MangledNameNList, NList] 
                0x00000001d6d75188 (     0x8) SLSRunningOnInstallerDisk.isNormalConfig [NameNList, MangledNameNList, NList] 
                0x00000001d6d75190 (    0x10) CGSUpdateDebugOptions.debugOptionsInit [NameNList, MangledNameNList, NList] 
                0x00000001d6d751a0 (    0x10) did_initialize [NameNList, MangledNameNList, NList] 
                0x00000001d6d751b0 (     0x8) SLSInitialize.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d751b8 (     0x8) (anonymous namespace)::get_registry()::registry [NameNList, MangledNameNList, NList] 
                0x00000001d6d751c0 (     0x8) guard variable for (anonymous namespace)::get_registry()::registry [NameNList, MangledNameNList, NList] 
                0x00000001d6d751c8 (     0x8) space_display_cached_id [NameNList, MangledNameNList, NList] 
                0x00000001d6d751d0 (     0x8) space_display_cached_seed [NameNList, MangledNameNList, NList] 
                0x00000001d6d751d8 (     0x8) CGSBacktraceCreate::once [NameNList, MangledNameNList, NList] 
                0x00000001d6d751e0 (     0x8) is_cursor_registered.once [NameNList, MangledNameNList, NList] 
                0x00000001d6d751e8 (     0x8) is_cursor_registered.cursor_cache [NameNList, MangledNameNList, NList] 
                0x00000001d6d751f0 (     0x8) CGSNotifierInitialize::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d751f8 (     0x8) (anonymous namespace)::notifications_enabled [NameNList, MangledNameNList, NList] 
                0x00000001d6d75200 (     0x8) (anonymous namespace)::get_process_notifier()::notifier [NameNList, MangledNameNList, NList] 
                0x00000001d6d75208 (    0x10) guard variable for (anonymous namespace)::get_process_notifier()::notifier [NameNList, MangledNameNList, NList] 
                0x00000001d6d75218 (     0x8) timestamp_scale.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d75220 (    0x10) timestamp_scale.scale [NameNList, MangledNameNList, NList] 
                0x00000001d6d75230 (     0x8) (anonymous namespace)::RunElsewhere::instance()::singleton [NameNList, MangledNameNList, NList] 
                0x00000001d6d75238 (    0x10) guard variable for (anonymous namespace)::RunElsewhere::instance()::singleton [NameNList, MangledNameNList, NList] 
                0x00000001d6d75248 (    0x10) display_system_state_seed [NameNList, MangledNameNList, NList] 
                0x00000001d6d75258 (    0x10) sCGSDisplayStatus [NameNList, MangledNameNList, NList] 
                0x00000001d6d75268 (     0x8) current_display_status [NameNList, MangledNameNList, NList] 
                0x00000001d6d75270 (     0x8) gDisplayState [NameNList, MangledNameNList, NList] 
                0x00000001d6d75278 (    0x10) sCGSDisplayInfo [NameNList, MangledNameNList, NList] 
                0x00000001d6d75288 (     0x8) current_display_info [NameNList, MangledNameNList, NList] 
                0x00000001d6d75290 (     0x4) gSLSDisplayChangedSeed [NameNList, MangledNameNList, NList] 
                0x00000001d6d75294 (     0x4) gSLSDisplayMappingChangedSeed [NameNList, MangledNameNList, NList] 
                0x00000001d6d75298 (    0x10) CGSDisplayInitialize::gDspyDidInit [NameNList, MangledNameNList, NList] 
                0x00000001d6d752a8 (     0x8) SLSGetWindowServerTimebase::lock [NameNList, MangledNameNList, NList] 
                0x00000001d6d752b0 (     0x8) guard variable for SLSGetWindowServerTimebase::lock [NameNList, MangledNameNList, NList] 
                0x00000001d6d752b8 (     0x8) SLSGetWindowServerTimebase::is_timebase_init [NameNList, MangledNameNList, NList] 
                0x00000001d6d752c0 (     0x8) SLSGetWindowServerTimebase::tinfo [NameNList, MangledNameNList, NList] 
                0x00000001d6d752c8 (     0x8) cached_display_system_state [NameNList, MangledNameNList, NList] 
                0x00000001d6d752d0 (   0x280) unit_status [NameNList, MangledNameNList, NList] 
                0x00000001d6d75550 (     0xc) (anonymous namespace)::_display_map [NameNList, MangledNameNList, NList] 
                0x00000001d6d7555c (     0x4) is_initialized [NameNList, MangledNameNList, NList] 
                0x00000001d6d75560 (     0x1) deny_future_windowserver_connections [NameNList, MangledNameNList, NList] 
                0x00000001d6d75561 (     0x7) SLSNewConnection::is_ui_process [NameNList, MangledNameNList, NList] 
                0x00000001d6d75568 (     0x8) SLSNewConnection::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d75570 (    0x10) process_launched_before_log_in [NameNList, MangledNameNList, NList] 
                0x00000001d6d75580 (     0x8) main_connection [NameNList, MangledNameNList, NList] 
                0x00000001d6d75588 (     0x8) get_default_connection_tls_key()::key [NameNList, MangledNameNList, NList] 
                0x00000001d6d75590 (     0x8) get_default_connection_tls_key()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d75598 (    0x10) __CGSLocalWindows [NameNList, MangledNameNList, NList] 
                0x00000001d6d755a8 (     0x8) gDisplayList [NameNList, MangledNameNList, NList] 
                0x00000001d6d755b0 (    0x20) sReconfigNotifierControl [NameNList, MangledNameNList, NList] 
                0x00000001d6d755d0 (     0x8) SLDisplayModeGetTypeID.display_mode_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d6d755d8 (     0x8) initDisplays.pred [NameNList, MangledNameNList, NList] 
                0x00000001d6d755e0 (     0x8) loginframework_vtable.table [NameNList, MangledNameNList, NList] 
                0x00000001d6d755e8 (     0x8) loginframework_vtable.once [NameNList, MangledNameNList, NList] 
                0x00000001d6d755f0 (     0xc) SLSServerPortInitialize.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d755fc (     0x4) gCGSServerSessionPort [NameNList, MangledNameNList, NList] 
                0x00000001d6d75600 (     0x8) is_server_connected [NameNList, MangledNameNList, NList] 
                0x00000001d6d75608 (     0x8) primary_connection_port [NameNList, MangledNameNList, NList] 
                0x00000001d6d75610 (     0x8) gOurPSN [NameNList, MangledNameNList, NList] 
                0x00000001d6d75618 (     0x8) _SLPSGetCurrentProcess.sOurPSN [NameNList, MangledNameNList, NList] 
                0x00000001d6d75620 (     0x8) primary_connection_id [NameNList, MangledNameNList, NList] 
                0x00000001d6d75628 (     0x8) get_primary_connection_queue.once [NameNList, MangledNameNList, NList] 
                0x00000001d6d75630 (     0x8) get_primary_connection_queue.queue [NameNList, MangledNameNList, NList] 
                0x00000001d6d75638 (     0x8) cf_typified<(anonymous namespace)::event_appendix>::get_type_id()::flag [NameNList, MangledNameNList, NList] 
                0x00000001d6d75640 (     0x8) cf_typified<(anonymous namespace)::event_appendix>::_type_id [NameNList, MangledNameNList, NList] 
                0x00000001d6d75648 (     0x8) cf_typified<(anonymous namespace)::event_appendix>::get_type_id()::'lambda'()::operator()() const::'block-literal'::once [NameNList, MangledNameNList, NList] 
                0x00000001d6d75650 (    0x10) SLSEventInitialize::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d6d75660 (     0x8) (anonymous namespace)::IndirectAddressManager::sharedManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d6d75668 (     0x8) guard variable for (anonymous namespace)::IndirectAddressManager::sharedManager()::manager [NameNList, MangledNameNList, NList] 
                0x00000001d6d75670 (     0x8) (anonymous namespace)::IndirectAddressManager::sharedManager()::registerFlag [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
