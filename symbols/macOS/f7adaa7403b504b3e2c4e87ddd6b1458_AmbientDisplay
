/System/Library/PrivateFrameworks/AmbientDisplay.framework/Versions/A/AmbientDisplay [arm64e, 0.154423 seconds]:
    E7965948-D637-341A-844A-B1B79C9A883E /System/Library/PrivateFrameworks/AmbientDisplay.framework/Versions/A/AmbientDisplay [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000019a176000 ( 0x2c000) __TEXT SEGMENT
            0x000000019a176000 (  0x2bd4) MACH_HEADER
            0x000000019a178bd4 ( 0x198ac) __TEXT __text
                0x000000019a178bd4 (   0x154) warmMathLib [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a178d28 (    0xe8) AMBDLogMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a178e10 (    0xb0) createInvertedMatrix3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a178ec0 (   0x144) inplaceInvertedMatrix3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179004 (   0x168) inplaceInvertedMatrix3inner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17916c (    0x84) vectorContainsNaN [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1791f0 (    0xa0) vectorExceedsOrderOfMagnitude [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179290 (    0xd4) lockAMBDagent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179364 (    0x44) displayServicesQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1793a8 (    0x54) __displayServicesQueue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1793fc (    0x78) loadIntentionFromPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179474 (   0x1a0) AMBDapplyIntentionFromPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179614 (    0x34) AMBDinitiate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179648 (   0x1e8) serviceSendMessageWithReplyAndTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179830 (    0x84) AMBDterminate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1798b4 (    0x18) HDRBrightnessAnimation::HDRBrightnessAnimation() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1798cc (    0x18) HDRBrightnessAnimation::HDRBrightnessAnimation() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1798e4 (    0x28) HDRBrightnessAnimation::Start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17990c (     0x4) HDRBrightnessAnimation::Stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179910 (    0x68) HDRBrightnessAnimation::SetEndpoints(float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179978 (    0x64) HDRBrightnessAnimation::UpdateTransitionAnimationDuration() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1799dc (     0xc) HDRBrightnessAnimation::SetEndpointsWithDuration(float, float, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1799e8 (    0x64) HDRBrightnessAnimation::SetCurrentBrightness(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179a4c (     0x8) HDRBrightnessAnimation::SetAnimationCurve(float (*)(float, float, float)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179a54 (     0x8) HDRBrightnessAnimation::SetTimeStepFunction(double (*)(float, float, double)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179a5c (    0x38) HDRBrightnessAnimation::TimeStep() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179a94 (    0x80) HDRBrightnessAnimation::ValueAtTime(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179b14 (     0x8) HDRBrightnessAnimation::ValueAtEnd() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179b1c (    0x34) HDRBrightnessAnimation::Completed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179b50 (    0x44) dynamicallyLoadCoreDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179b94 (   0x10c) __dynamicallyLoadCoreDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179ca0 (   0x1ec) getCustomWhitePointXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179e8c (     0xc) cacheCoreDisplayDesiredWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179e98 (    0x90) setOptimizationMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a179f28 (   0x160) setTuning [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a088 (    0x74) getCoreDisplayDesiredWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a0fc (   0x140) __getCoreDisplayDesiredWhitePointMode_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a23c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000019a17a258 (   0x17c) modifyAndSetIntentionForWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a3d4 (   0x144) modifyAndSetIntentionForWhitePointOnEveryDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a518 (    0x5c) copyDeviceContextListForReading [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a574 (    0xd0) setDisplayRemovedStateAndUnregisterCallbacks [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a644 (   0x180) findAndCopyDeviceContextByDeviceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a7c4 (   0x218) markDisplayContextsNotOnlineAsRemoved [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17a9dc (    0xfc) isSameDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17aad8 (   0x230) addOnlineDisplaysNotOnContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ad08 (    0x50) addDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ad58 (    0x34) getIODisplayServiceForDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ad8c (    0x20) validDeviceContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17adac (    0xa0) _updateImmutableDeviceContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ae4c (    0x78) initDeviceContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17aec4 (    0x84) addContextToDeviceContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17af48 (    0xcc) showUI [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b014 (   0x170) CreateUUIDFromDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b184 (   0x230) findDisplayIDbyHIDcontainerID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b3b4 (    0x60) copyUserIntentionForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b414 (   0x148) onlineDisplaysOnDeviceContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b55c (    0xc8) copyUserPrefsIntentionForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b624 (   0x354) saveSettingsToPreferencesByDisplayUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b978 (    0x7c) saveSettingsToPreferencesByDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17b9f4 (   0x160) saveIntentionToPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bb54 (   0x138) loadIntentionFromPreferencesByUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bc8c (    0xd4) saveAmbientAdaptationStateToPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bd60 (   0x1f4) pollCurrentBacklightLinear [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bf54 (    0x40) __pollCurrentBacklightLinear_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bf94 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17bfe4 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c028 (    0xd4) getBacklightMaxNit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c0fc (    0xb8) pollBackLightNits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c1b4 (    0xc0) queryStaticAspectsOfDisplayContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c274 (    0xb0) queryDynamicAspectsOfDisplayContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c324 (   0x2c8) createAndAddDeviceContextByDeviceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c5ec (    0x68) getCompensationState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17c654 (   0x3e8) calculateBlackPointAndGammaBasedOnParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ca3c (    0x8c) createIntentionWithBlackPointAndCurrentIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17cac8 (   0x4fc) computeAndAddWhitePointIntentionToIntentionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17cfc4 (  0x143c) setIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e400 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a17e410 (   0x1ac) addScreens [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e5bc (    0x84) initDevices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e640 (    0x7c) setOverridesFound [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e6bc (    0x3c) overridesExistForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e6f8 (    0xb8) getAnimationString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e7b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a17e7c0 (    0x30) getBrightnessUpdateThreshold [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e7f0 (    0xb4) getInternalDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e8a4 (    0xd8) computeRGBscaleFromHueSaturation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17e97c (   0x230) computeGestaltLuxFromAllALSonContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ebac (   0x160) getUpdatedSensorValuesAndStoreToContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ed0c (    0x88) createIntentionWithGammaAndCurrentIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ed94 (   0x2c0) LERPedIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f054 (   0x2d0) createLERPedIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f324 (    0xd4) setBlackPointAndGammaOnCurrentIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f3f8 (    0xf0) recalculateAndApplyBlackpoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f4e8 (    0xac) getUpdatedALSluxValueAndStoreToContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f594 (    0xe8) setDisplayParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f67c (    0xa8) setWhitePointXYZandAnimate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f724 (   0x178) setWhitePointDeltaxyAndAnimate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f89c (    0x84) setNativeWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f920 (    0xa4) applyWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17f9c4 (    0xbc) setWhitePointKelvinAndAnimate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fa80 (    0xa4) setStaticGammaAndAnimate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fb24 (    0x78) getWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fb9c (    0xa8) setWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fc44 (     0x4) stopAccessingLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fc48 (    0xb0) getWhitePointAttenuatedBackLightNits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fcf8 (    0xb8) getInstanteneousAdaptationLux [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fdb0 (    0x30) systemGammaBasedOnSystemGammaMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17fde0 (   0x1d0) calculateAndSetBlackPointsForAllDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a17ffb0 (    0x80) getUpdatedBacklightValueAndStoreToContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180030 (    0xc8) storeBackLightToDeviceContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1800f8 (   0x15c) updateAllBackLightSensorsOnContextList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180254 (   0x178) createWhitePointAdaptationMatrixDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1803cc (   0x100) getUpdatedLuxValueViaLMU [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1804cc (     0x8) getMostRecentLuxValuesForHIDservice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1804d4 (     0x8) getMostRecentLuxValuesForDisplayIDviaHID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1804dc (     0xc) setALSLMUdataPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1804e8 (     0xc) getALSLMUdataPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1804f4 (    0xd0) setALSserviceForDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1805c4 (    0x9c) setCompensationFlagOnDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180660 (   0x168) anyDisplayCompensationStateEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1807c8 (    0xb4) canEnableCompensation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18087c (    0xc0) setSystemGammaModeHelper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18093c (    0xc4) setAndAnimateToGammaHelper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180a00 (    0x68) getSystemGammaMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180a68 (    0x70) getStaticGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180ad8 (   0x100) setAndApplyALSluxToDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180bd8 (    0x88) setALSluxOnDeviceWithDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180c60 (    0x88) setAndApplyALSluxToDeviceWithDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180ce8 (    0x94) requestAndWaitForAnimationToEndOnDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180d7c (    0x24) proxySetDisplayIntentionWiper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a180da0 (   0x2ec) -[DeviceGammaContext initWithCount:withDisplayID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18108c (    0xbc) -[DeviceGammaContext dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181148 (    0x4c) -[DeviceGammaContext preemptableAnimationSleepSeconds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181194 (    0x30) -[DeviceGammaContext resetAnimationSemaphore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1811c4 (     0xc) -[DeviceGammaContext signalAnimationToEnd] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1811d0 (   0x110) -[DeviceGammaContext waitForAnimationToEndLocking] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1812e0 (    0xfc) -[DeviceGammaContext requestAndWaitForAnimationToEndLocking] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1813dc (    0x44) -[DeviceGammaContext requestAndWaitForAnimationToEndNonLocking] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181420 (     0x8) -[DeviceGammaContext releaseAnimationLock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181428 (    0xf0) -[DeviceGammaContext getCurrentAttenuation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181518 (   0x220) -[DeviceGammaContext interpolateCurrentTableToDestinationTableOverTime:withUpdateRatePerSecond:withPreemption:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181738 (   0x384) __111-[DeviceGammaContext interpolateCurrentTableToDestinationTableOverTime:withUpdateRatePerSecond:withPreemption:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181abc (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181acc (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181ad8 (    0xd4) -[DeviceGammaContext setupInterpolationWithDuration:withUpdateRateFPS:direction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181bac (   0x1c8) -[DeviceGammaContext updateWipeWithActualIntervalInSeconds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181d74 (    0x18) leftShiftWithLSBextention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181d8c (    0x80) hue2RGB [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181e0c (    0xd4) HSL2RGB [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a181ee0 (   0x218) warpLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1820f8 (   0x194) lerpLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18228c (    0xc0) createContainerIDstringRefByDisplayIDusingSkylight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18234c (   0x180) createContainerIDstringRefByDisplayIDusingIOservice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1824cc (     0x8) -[DeviceGammaContext getDisplayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1824d4 (     0x8) -[DeviceGammaContext setDisplayID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1824dc (     0x8) -[DeviceGammaContext getIODisplayService] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1824e4 (    0x40) -[DeviceGammaContext setFrontALSservice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182524 (    0x40) -[DeviceGammaContext setRearALSservice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182564 (    0x28) -[DeviceGammaContext frontALSserviceValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18258c (    0x10) -[DeviceGammaContext invalidateALSservices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18259c (     0x8) -[DeviceGammaContext getDisplayContainerID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1825a4 (    0x90) -[DeviceGammaContext isNativeICCvalidOrRetry] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182634 (    0x58) -[DeviceGammaContext isInternal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18268c (     0x8) -[DeviceGammaContext setInternal:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182694 (    0x7c) -[DeviceGammaContext registerHIDservices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182710 (    0x14) -[DeviceGammaContext setDisplayParametersWithLeakage:lowestLevel:lowestMeasured:backlight:darkReflection:brightReflection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182724 (   0x16c) -[DeviceGammaContext setWhitePointXYZandAnimateToX:Y:Z:duration:thawIntention:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182890 (   0x228) -[DeviceGammaContext setNativeWhitePointAndAnimateWithDuration:thawIntention:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182ab8 (    0xa4) -[DeviceGammaContext setAndAnimateToGamma:thawIntention:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182b5c (    0x5c) -[DeviceGammaContext setStaticGamma:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182bb8 (     0xc) -[DeviceGammaContext getStaticGamma] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182bc4 (   0x220) -[DeviceGammaContext cacheColorSpaceFromICC] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182de4 (    0x78) -[DeviceGammaContext createNativeWhitePointVector] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182e5c (   0x11c) -[DeviceGammaContext createNativeColorSpaceVectorsWithRedXYZ:greenXYZ:blueXYZ:whitePointXYZ:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a182f78 (   0x148) -[DeviceGammaContext queryAndSetIntentionForWhitePoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1830c0 (    0x48) -[DeviceGammaContext getDesiredWhitePointXYZ] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183108 (    0x88) -[DeviceGammaContext setDesiredWhitePointXYZ:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183190 (    0x70) -[DeviceGammaContext desiredWhitePointXYZisNative] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183200 (    0x48) -[DeviceGammaContext getTargetWhitePointXYZ] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183248 (    0x88) -[DeviceGammaContext setTargetWhitePointXYZ:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1832d0 (    0x74) -[DeviceGammaContext setTargetLinearBlackpoint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183344 (    0x44) -[DeviceGammaContext getTargetLinearBlackpoint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183388 (    0x78) -[DeviceGammaContext setTargetOverGamma:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183400 (    0x44) -[DeviceGammaContext getTargetOverGamma] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183444 (     0x8) -[DeviceGammaContext setWhitePointMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18344c (     0x8) -[DeviceGammaContext getWhitePointMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183454 (    0x58) -[DeviceGammaContext setTargetWhitePointMatrix:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1834ac (    0x60) -[DeviceGammaContext copyTargetWhitePointMatrix] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18350c (    0x54) -[DeviceGammaContext setDesiredHue:Saturation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183560 (    0x60) -[DeviceGammaContext getDesiredHueSaturation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835c0 (     0x8) -[DeviceGammaContext getLowestLevel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835c8 (     0x8) -[DeviceGammaContext getFullBacklightLeakageNits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835d0 (     0x8) -[DeviceGammaContext getMaxBackLightNits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835d8 (     0xc) -[DeviceGammaContext setMaxBackLight:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835e4 (     0xc) -[DeviceGammaContext getBackLightNits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835f0 (     0xc) -[DeviceGammaContext getLinearBacklight] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1835fc (    0x20) -[DeviceGammaContext getBackLightLux] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18361c (     0x8) -[DeviceGammaContext setBackLightNits:withLinearBacklight:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183624 (    0xe4) -[DeviceGammaContext pollAndUpdateALSlux] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183708 (    0x50) -[DeviceGammaContext pollAndupdateBacklightNits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183758 (    0xd4) -[DeviceGammaContext updateDisplayIsInternal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18382c (   0x110) -[DeviceGammaContext updateDisplayHasBrightnessSmoothing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18393c (     0x8) -[DeviceGammaContext setRemovedState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183944 (     0x8) -[DeviceGammaContext getRemovedState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18394c (     0x8) -[DeviceGammaContext getHardwareBrightnessSmoothingState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183954 (     0x8) -[DeviceGammaContext getDarkReflection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18395c (    0x14) -[DeviceGammaContext getDarkReflectivity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183970 (    0x18) -[DeviceGammaContext setALSlux:withALSlocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183988 (    0x1c) -[DeviceGammaContext getALSluxWithLocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1839a4 (     0x8) -[DeviceGammaContext animationCompleted] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1839ac (     0x8) -[DeviceGammaContext animationPreemptable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1839b4 (     0x8) -[DeviceGammaContext animationMatrixCompleted] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1839bc (     0x8) -[DeviceGammaContext animationMatrixPreemptive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1839c4 (    0x64) -[DeviceGammaContext setOverridesFound:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183a28 (     0x8) -[DeviceGammaContext overridesFound] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183a30 (   0x32c) -[DeviceGammaContext readDisplayOverrides:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183d5c (    0x88) -[DeviceGammaContext fetchAndSetCompositionalEnvironementOnce] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183de4 (    0x68) __62-[DeviceGammaContext fetchAndSetCompositionalEnvironementOnce]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183e4c (     0xc) -[DeviceGammaContext getCompositionalWhiteReferenceNits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183e58 (     0xc) -[DeviceGammaContext getCompositionalAmbientEnvironmentLux] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183e64 (    0x4c) -[DeviceGammaContext setpreferencesRead] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183eb0 (     0x8) -[DeviceGammaContext preferencesRead] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183eb8 (     0x8) -[DeviceGammaContext enableCompensation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183ec0 (     0x8) -[DeviceGammaContext getCompensationState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183ec8 (     0x8) -[DeviceGammaContext setSystemGammaMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183ed0 (     0x8) -[DeviceGammaContext getSystemGammaMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a183ed8 (   0x144) -[DeviceGammaContext setIntentionDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18401c (    0xa8) -[DeviceGammaContext setPrefsIntentionDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1840c4 (    0xc4) -[DeviceGammaContext copyNextIntentionDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184188 (    0x8c) -[DeviceGammaContext copyPrefsIntentionDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184214 (    0x40) AMBDInitializeDisplayHDRState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184254 (    0xa8) HDRManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1842fc (    0x40) AMBDRemoveDisplayHDRState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18433c (    0x50) AMBDEnableHDR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18438c (    0x50) AMBDXRPresent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1843dc (    0x68) AMBDSetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184444 (    0x58) AMBDGetCurrentDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18449c (    0x5c) AMBDGetTargetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1844f8 (   0x114) HDRDisplay::HDRDisplay(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18460c (     0x4) HDRDisplay::HDRDisplay(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184610 (     0x8) HDRDisplay::DisplayID() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184618 (    0x5c) HDRDisplay::Initialize(float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184674 (    0x24) HDRDisplay::Initialized() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184698 (    0x6c) HDRDisplay::SetEnableHDR(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184704 (    0x9c) HDRDisplay::UpdateHDROn() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1847a0 (    0x6c) HDRDisplay::SetXRPresent(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18480c (   0x120) HDRDisplay::SetBrightness(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18492c (     0x8) HDRDisplay::TargetBrightnessImpl() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184934 (    0x94) HDRDisplay::CurrentBrightnessImpl() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1849c8 (    0x68) HDRDisplay::CurrentBrightness() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184a30 (    0x60) HDRDisplay::TargetBrightness() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184a90 (   0x10c) HDRDisplay::TimeStep() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184b9c (    0xe8) HDRDisplay::ScheduleSetBrightnessIn(double, _xpc_connection_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184c84 (   0x188) invocation function for block in HDRDisplay::ScheduleSetBrightnessIn(double, _xpc_connection_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184e0c (    0x30) HDRDisplay::HDRDisplay(unsigned int)::$_0::__invoke(float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184e3c (    0x5c) HDRDisplay::HDRDisplay(unsigned int)::$_1::__invoke(float, float, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184e98 (     0xc) HDRDisplay::HDRDisplay(unsigned int)::$_2::__invoke(float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184ea4 (     0xc) HDRDisplay::HDRDisplay(unsigned int)::$_3::__invoke(float, float, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184eb0 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184efc (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a184f40 (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185074 (    0x8c) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__emplace_multi<std::__1::pair<double, HDRDisplay::ActiveSetBrightnessState>>(std::__1::pair<double, HDRDisplay::ActiveSetBrightnessState>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185100 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185134 (   0x158) std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__node_insert_multi_prepare(unsigned long, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18528c (    0xe8) std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__node_insert_multi_perform(std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185374 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__rehash<false>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185464 (   0x174) void std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__do_rehash<false>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1855d8 (    0x4c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*>, std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*>> std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::__equal_range_multi<double>(double const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185624 (    0xc0) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::hash<double>, std::__1::equal_to<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>, std::__1::equal_to<double>, std::__1::hash<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, HDRDisplay::ActiveSetBrightnessState>>>::find<double>(double const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1856e4 (    0x5c) assertionFailureWarn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185740 (    0x6c) copyCFStringToCString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1857ac (   0x338) loadAMBDpreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185ae4 (    0x70) GetCurrentTimeInMilliseconds [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185b54 (    0x94) WaitFor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185be8 (    0x84) WaitUntil [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185c6c (     0xc) invocation function for block in GetTimebaseInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185c78 (    0x4c) ALSHIDManager_start [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185cc4 (    0x4c) ALSHIDManager_stop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185d10 (    0x54) +[ALSHIDManager singleton] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185d64 (    0x40) __26+[ALSHIDManager singleton]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185da4 (    0x94) getHIDserviceLocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185e38 (    0x6c) getHIDserviceContainerID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a185ea4 (   0x190) -[ALSHIDManager start] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186034 (   0x21c) ALSHIDAdded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186250 (   0x2ac) ALSHIDEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1864fc (    0x34) __22-[ALSHIDManager start]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186530 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186538 (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186540 (    0x6c) -[ALSHIDManager stop] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1865ac (   0x148) ALSHIDRemoved [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1866f4 (   0x154) __ALSHIDAdded_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186848 (    0xf8) getDisplayIDassociatedWithService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186940 (    0x60) __copy_helper_block_e8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1869a0 (    0x50) __destroy_helper_block_e8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1869f0 (    0x80) __ALSHIDRemoved_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186a70 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186a80 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186a8c (    0x78) HIDALSisBuiltIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186b04 (    0xec) createLinearizationTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186bf0 (   0x170) GetHWLinearizationConfigID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186d60 (   0x114) createLinearizationTableWithType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186e74 (    0xec) createGammaTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a186f60 (   0x17c) createRGBscaledGammaTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1870dc (    0x70) createIOPmatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18714c (    0x60) IsClassPresent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1871ac (    0x5c) setAllowableAdaptationOverDisplayBrightnessRatio [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187208 (    0x10) equality [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187218 (     0xc) max2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187224 (    0x14) max3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187238 (    0x20) clip [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187258 (    0x44) normalize3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18729c (    0x1c) max3VectorValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1872b8 (    0x30) normalize3Y [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1872e8 (    0xb8) createNormalizedXYZvector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1873a0 (    0x54) createVectorFromPointer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1873f4 (    0x48) matrixScalarMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18743c (    0x10) scalarBlackPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18744c (    0x14) lerpValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187460 (    0x34) geometricDistance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187494 (   0x120) AMBDsynthAttenuationTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1875b4 (    0x98) AMBDLERPedTableLookup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18764c (    0x4c) AMBDLogMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187698 (     0xc) allocateMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1876a4 (     0x8) allocate3Matrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1876ac (     0x8) allocateVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1876b4 (     0xc) releaseMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1876c0 (     0xc) releaseVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1876cc (    0xbc) printMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187788 (     0xc) print3Matrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187794 (    0x64) printMatrixString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1877f8 (     0xc) printVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187804 (    0x58) printVectorString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18785c (    0x58) lerpMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1878b4 (    0x4c) lerp3Matrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187900 (    0x30) maxVectorValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187930 (    0x38) maxAbsVectorValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187968 (    0x74) subtractMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1879dc (    0x6c) createSubtractMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187a48 (    0x74) addMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187abc (    0x6c) createAddMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187b28 (    0x78) maxMatrixDifference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187ba0 (    0x28) differentMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187bc8 (    0x94) matrixIsIdentity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187c5c (    0x90) matrix3IsIdentity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187cec (    0xb8) matrixIsLUTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187da4 (    0x54) matrix3Vector3Multiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187df8 (    0x7c) createMatrix3Vector3Multiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187e74 (    0x5c) matrix3Matrix3Multiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187ed0 (    0x84) createMatrix3Matrix3Multiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187f54 (    0x24) matrix3Matrix3elementMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187f78 (    0x38) matrix3scalarMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a187fb0 (    0x8c) createMatrixScalarMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18803c (    0x6c) createMatrix3scalarMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1880a8 (    0x1c) copyPointerToVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1880c4 (    0x1c) diagonalVectorFromMatrix3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1880e0 (    0x60) sumAbsVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188140 (    0x74) createvectorXYZfromxyY [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1881b4 (    0x80) xyYtoXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188234 (    0x58) createVector3scalarMultiply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18828c (    0x70) createVector3power [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1882fc (    0x5c) copyMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188358 (    0x5c) copy3Matrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1883b4 (    0x58) createMatrixfromPointer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18840c (    0x80) createIdentityMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18848c (   0x148) createWhiteRatioMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1885d4 (   0x13c) createRGBtoXYZmatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188710 (    0x24) inplaceFlipMatrix3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188734 (   0x13c) createXYZWhitePointAdaptationMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188870 (    0x8c) getXYZfromProfileDataRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1888fc (    0x68) createtXYZvectorFromProfileDataRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188964 (   0x1ec) extractXYZtagFromICCProfileAndUnAdapt [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188b50 (   0x428) getPrimariesFromColorSyncProfileRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a188f78 (   0x428) createWhitePointAdaptationMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1893a0 (   0x128) createScaledAdaptationMatrixToAvoidClipping [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1894c8 (    0x14) vectorSwap [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1894dc (    0x2c) lutableMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189508 (    0xf8) lutableMatrixRGB [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189600 (    0xc0) lerpMatrix31DLUTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1896c0 (    0xc0) lerpMatrix31DLUTableRGB [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189780 (    0x6c) xytoXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1897ec (    0x3c) XYZtoxyY [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189828 (   0x1c8) convertTemperatureToXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1899f0 (    0xa0) convertXYZtoLMS [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189a90 (   0x12c) RGB2HSL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189bbc (    0xa0) XYZtosRGB [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189c5c (    0xa0) sRGBtoXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189cfc (    0xe0) createRGBtoXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189ddc (    0xb8) createRGBwithWhitePointandBlackpoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189e94 (    0x78) create3VectorBlackpoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a189f0c (   0x21c) createRGBtoXYZwithWhitePointandBlackpointAndEnvironment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a128 (   0x224) createPedestalAffectedXYZnits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a34c (   0x170) XYZtoLab [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a4bc (    0x4c) createXYZtoLab [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a508 (    0x10) luxToNit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a518 (    0x10) nitToLux [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a528 (    0xa4) brightContentToEnvironmentSystemGammaWithHysteresis [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a5cc (    0xcc) calculateSystemGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a698 (    0xa0) createLeakedLightXYZnits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a738 (   0x100) createReflectedXYZnits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a838 (    0x90) createDisplayNitsScaledXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18a8c8 (   0x188) createLinearRGBasMatrixedtoXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18aa50 (     0x8) perceptualBrightnessLoss [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18aa58 (    0xf8) createScaleDisplayNormalizedXYZToAdaptation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ab50 (   0x108) calculateInstanteneousAdaptationBasedOnParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ac58 (    0xa8) createNormalizedXYZtoReference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ad00 (    0xd8) perceptibleDistanceReference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18add8 (   0x24c) perceptualDistanceComputingReference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b024 (    0x68) perceptibleDistance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b08c (   0x2b8) LUTperceptualDifference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b344 (    0xd4) lerpTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b418 (     0xc) calculateBlackPointLinearFromBlackPointGammad [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b424 (   0x11c) createMonoPurePowerTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b540 (   0x140) createMonoPurePowerScaledTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b680 (   0x140) createMonoPiecewisePurePowerTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b7c0 (    0xe0) createsRGBLinearizationTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b8a0 (    0xd8) createsRGBGammaTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b978 (    0x7c) HDRDisplayManager::HDRDisplayManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b9f4 (     0x4) invocation function for block in HDRDisplayManager::HDRDisplayManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b9f8 (     0x4) HDRDisplayManager::HDRDisplayManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18b9fc (    0x38) HDRDisplayManager::~HDRDisplayManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ba34 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ba40 (     0x4) HDRDisplayManager::~HDRDisplayManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ba44 (    0x9c) HDRDisplayManager::AddDisplay(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bae0 (    0x2c) HDRDisplayManager::RemoveDisplay(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bb0c (    0x38) HDRDisplayManager::Display(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bb44 (    0x70) HDRDisplayManager::Display(unsigned int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bbb4 (    0x40) HDRDisplayManager::SetEnableHDR(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bbf4 (    0x40) HDRDisplayManager::SetXRPresent(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bc34 (    0x8c) HDRDisplayManager::ScheduleNextBrightnessUpdate() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bcc0 (    0x70) HDRDisplayManager::ScheduleNextBrightnessUpdate(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bd30 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bd6c (    0x48) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bdb4 (    0x8c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__emplace_unique_impl<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&>, std::__1::tuple<unsigned int&>>(std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&>&&, std::__1::tuple<unsigned int&>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18be40 (    0xa0) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>>>> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&>, std::__1::tuple<unsigned int&>>(std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&>&&, std::__1...
                0x000000019a18bee0 (    0x58) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18bf38 (   0x108) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__node_insert_unique_prepare[abi:v160006](unsigned long, std::__1::__hash_value_type<unsigned int, HDRDisplay>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c040 (    0xb8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__node_insert_unique_perform[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c0f8 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c1e8 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c344 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c3a0 (    0x38) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::__erase_unique<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c3d8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::find<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c48c (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, HDRDisplay>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, HDRDisplay>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, HDRDisplay>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c4d8 (    0x4c) AMBDShowUI [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c524 (    0xe0) createConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c604 (   0x114) AmbientDisplayTerminate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c718 (   0x140) AMBDsetCompensationState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c858 (   0x13c) AMBDgetCompensationState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18c994 (   0x13c) AMBDcanEnableCompensation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18cad0 (    0xe4) AMBDsetSystemGammaMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18cbb4 (    0x70) serviceSendMessageWithoutReply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18cc24 (    0xfc) AMBDTest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18cd20 (   0x2c8) AMBDsetIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18cfe8 (   0x1f8) AMBDsetDisplayParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d1e0 (   0x17c) AMBDSetWhitePointXYZ [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d35c (   0x100) AMBDSetGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d45c (    0xd4) AMBDSetNativeWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d530 (   0x1bc) AMBDSetWhitePointxyWithDuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d6ec (   0x148) AMBDSetWhitePointDeltaxyWithDuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d834 (     0x8) AMBDSetWhitePointxy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d83c (    0xf8) AMBDSetWhitePointKelvin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18d934 (    0xd4) AMBDSetWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18da08 (    0xbc) AMBDSetOptimizationMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18dac4 (   0x14c) AMBDSetTuning [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18dc10 (   0x104) AMBDstopAccessingLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18dd14 (    0xcc) AMBDnotifyAssemblyBufferFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18dde0 (    0xe4) AMBDsetUpdateRateLimitState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18dec4 (   0x288) AMBDcopyUserIntentionForDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e14c (   0x14c) AMBDverifySession [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e298 (   0x620) AMBDapplyIntentionFromPreferencesForDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e8b8 (    0x34) __AMBDapplyIntentionFromPreferencesForDisplayID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e8ec (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e8fc (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e908 (    0x34) __AMBDapplyIntentionFromPreferencesForDisplayID_block_invoke.98 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e93c (    0x34) __AMBDapplyIntentionFromPreferences_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18e970 (   0x118) AMBDcalculateBlackPointBasedOnParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ea88 (   0x138) __createConnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ebc0 (   0x120) __serviceSendMessageWithReplyAndTimeout_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ece0 (    0x50) __copy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ed30 (    0x44) __destroy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ed74 (   0x14c) AMBDintentionDictionaryCreateWithValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18eec0 (   0x10c) AMBDintentionDictionaryCreateNeutral [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18efcc (    0x48) AMBDrectifyIntentionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18f014 (    0x80) AMBDintentionDictionaryCreateUnmatchable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18f094 (   0x708) AMBDintentionDictionaryCreateWithCFDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18f79c (   0x3f8) AMBDintentionDictionaryCreateCFDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fb94 (    0x48) AMBDcopyIntentionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fbdc (     0xc) AMBDintentionDictionaryRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fbe8 (    0x4c) AMBDintentionDictionarySetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fc34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a18fc44 (     0x8) AMBDintentionDictionarySetDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fc4c (    0x54) AMBDintentionDictionaryGetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fca0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a18fcb0 (     0x4) logIntentionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fcb4 (    0xd8) AMBDintentionDictionaryEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fd8c (    0x50) initializeBufferLinear [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18fddc (   0x1a0) AMBDCreateIntentionContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a18ff7c (   0x140) AMBDDestroyIntentionContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1900bc (   0x1e4) AMBDStoreIntentionToContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1902a0 (   0x294) validLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190534 (    0x74) copyToPreviousWarpedLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1905a8 (    0x74) copyToPreviousNotWarpedLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a19061c (    0x7c) copyToWarpedLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190698 (    0x7c) copyToSetLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190714 (   0x300) warpPreviousNotWarpedToNextWarpedbyIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190a14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a190a24 (   0x20c) warpPreviousNotWarpedToPreviousWarpedByIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190c30 (   0x338) AMBDWarpLUTbasedOnIntentionInContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a190f68 (   0x6d8) allocateAndEnsureContextLUTsMatchSampleCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191640 (   0x618) AMBDLerpLUTinContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191c58 (   0x1a4) AMBDcopyDesiredPipelineState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191dfc (   0x1b8) AMBDcopyDesiredPipelineState2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191fb4 (    0x34) AMBDgetCachedLUT [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191fe8 (    0x14) AMBDpipelineFrozen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a191ffc (    0x34) AMBDthawIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a192030 (    0x14) AMBDsetPipelineFreezeState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a192044 (   0x210) AMBDsetWakeState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a192254 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019a192264 (    0x50) AMBDstateMachineConsistent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1922b4 (    0xf0) AMBDcontextSetDisplayIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1923a4 (    0x2c) HDRBrightnessAnimation::TimeStep() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1923d0 (    0x2c) HDRBrightnessAnimation::ValueAtTime(double) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a1923fc (    0x2c) HDRBrightnessAnimation::ValueAtTime(double) (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a192428 (    0x2c) HDRDisplayManager::Display(unsigned int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019a192454 (    0x2c) HDRDisplayManager::Display(unsigned int, float, float) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000019a192480 (   0xb20) __TEXT __auth_stubs
                0x000000019a192480 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192490 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924a0 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924b0 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924c0 (    0x10) DYLD-STUB$$CFBundleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924d0 (    0x10) DYLD-STUB$$CFBundleGetMainBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924e0 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1924f0 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192500 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192510 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192520 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192530 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192540 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192550 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192560 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192570 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192580 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192590 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925a0 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925b0 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925c0 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925d0 (    0x10) DYLD-STUB$$CFPreferencesSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925e0 (    0x10) DYLD-STUB$$CFPreferencesSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1925f0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192600 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192610 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192620 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192630 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192640 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192650 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192660 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192670 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192680 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192690 (    0x10) DYLD-STUB$$CFStringLowercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926a0 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926b0 (    0x10) DYLD-STUB$$CFUUIDCreateString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926c0 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926d0 (    0x10) DYLD-STUB$$CGDisplayCreateUUIDFromDisplayID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926e0 (    0x10) DYLD-STUB$$CGDisplayGammaTableCapacity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1926f0 (    0x10) DYLD-STUB$$CGDisplayGetDisplayIDFromUUID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192700 (    0x10) DYLD-STUB$$CGDisplayIOServicePort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192710 (    0x10) DYLD-STUB$$CGDisplayIsBuiltin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192720 (    0x10) DYLD-STUB$$CGGetOnlineDisplayList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192730 (    0x10) DYLD-STUB$$CGSCopyDisplayInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192740 (    0x10) DYLD-STUB$$CGSCopyDisplayUUID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192750 (    0x10) DYLD-STUB$$CGSDisplayStatusQuery [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192760 (    0x10) DYLD-STUB$$CGSServiceForDisplayNumber [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192770 (    0x10) DYLD-STUB$$ColorSyncProfileCopyDescriptionString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192780 (    0x10) DYLD-STUB$$ColorSyncProfileCopyTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192790 (    0x10) DYLD-STUB$$ColorSyncProfileCreateWithDisplayID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927a0 (    0x10) DYLD-STUB$$CoreDisplay_CopyDisplayContainerID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927b0 (    0x10) DYLD-STUB$$CoreDisplay_DisplayCreateInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927c0 (    0x10) DYLD-STUB$$DisplayServicesAmbientLightCompensationEnabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927d0 (    0x10) DYLD-STUB$$DisplayServicesGetLinearBrightness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927e0 (    0x10) DYLD-STUB$$DisplayServicesHasAmbientLightCompensation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1927f0 (    0x10) DYLD-STUB$$DisplayServicesIsBuiltInDisplay [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192800 (    0x10) DYLD-STUB$$IOConnectCallScalarMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192810 (    0x10) DYLD-STUB$$IODisplayCreateInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192820 (    0x10) DYLD-STUB$$IOHIDEventGetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192830 (    0x10) DYLD-STUB$$IOHIDEventGetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192840 (    0x10) DYLD-STUB$$IOHIDEventGetTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192850 (    0x10) DYLD-STUB$$IOHIDEventGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192860 (    0x10) DYLD-STUB$$IOHIDEventSystemClientActivate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192870 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192880 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCopyServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192890 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCreateWithType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928a0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterDeviceMatchingCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928b0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928c0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetCancelHandler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928d0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928e0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetMatchingMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1928f0 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterDeviceMatchingBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192900 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192910 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192920 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192930 (    0x10) DYLD-STUB$$IOHIDServiceClientGetRegistryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192940 (    0x10) DYLD-STUB$$IOHIDServiceClientRegisterRemovalCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192950 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192960 (    0x10) DYLD-STUB$$IOPresentmentCapabilitiesStructureFree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192970 (    0x10) DYLD-STUB$$IOPresentmentCapabilitiesStructureFromDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192980 (    0x10) DYLD-STUB$$IOPresentmentCopyCapabilities [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192990 (    0x10) DYLD-STUB$$IOServiceGetMatchingServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929a0 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929b0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929c0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929d0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929e0 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a1929f0 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a00 (    0x10) DYLD-STUB$$std::__1::mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a10 (    0x10) DYLD-STUB$$std::__1::mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a20 (    0x10) DYLD-STUB$$std::__1::mutex::~mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a30 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a40 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a50 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a60 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a70 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a80 (    0x10) DYLD-STUB$$__cxa_atexit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192a90 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192aa0 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ab0 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ac0 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ad0 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ae0 (    0x10) DYLD-STUB$$__exp10 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192af0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b00 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b10 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b20 (    0x10) DYLD-STUB$$cblas_dgemm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b30 (    0x10) DYLD-STUB$$cblas_dgemv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b40 (    0x10) DYLD-STUB$$dgetrf_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b50 (    0x10) DYLD-STUB$$dgetri_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b60 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b70 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b80 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192b90 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_qos_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ba0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192bb0 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192bc0 (    0x10) DYLD-STUB$$dispatch_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192bd0 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192be0 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192bf0 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c00 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c10 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c20 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c30 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c40 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c50 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c60 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c70 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c80 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192c90 (    0x10) DYLD-STUB$$logf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ca0 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192cb0 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192cc0 (    0x10) DYLD-STUB$$mach_wait_until [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192cd0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ce0 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192cf0 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d00 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d10 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d20 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d30 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d40 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d50 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d60 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d70 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d80 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192d90 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192da0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192db0 (    0x10) DYLD-STUB$$pow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192dc0 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192dd0 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192de0 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192df0 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e00 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e10 (    0x10) DYLD-STUB$$putchar [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e20 (    0x10) DYLD-STUB$$rand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e30 (    0x10) DYLD-STUB$$sleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e40 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e50 (    0x10) DYLD-STUB$$sranddev [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e60 (    0x10) DYLD-STUB$$vasprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e70 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e80 (    0x10) DYLD-STUB$$xpc_connection_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192e90 (    0x10) DYLD-STUB$$xpc_connection_get_name [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ea0 (    0x10) DYLD-STUB$$xpc_connection_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192eb0 (    0x10) DYLD-STUB$$xpc_connection_send_message [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ec0 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ed0 (    0x10) DYLD-STUB$$xpc_connection_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ee0 (    0x10) DYLD-STUB$$xpc_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192ef0 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f00 (    0x10) DYLD-STUB$$xpc_dictionary_create_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f10 (    0x10) DYLD-STUB$$xpc_dictionary_get_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f20 (    0x10) DYLD-STUB$$xpc_dictionary_get_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f30 (    0x10) DYLD-STUB$$xpc_dictionary_get_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f40 (    0x10) DYLD-STUB$$xpc_dictionary_get_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f50 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f60 (    0x10) DYLD-STUB$$xpc_dictionary_set_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f70 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f80 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000019a192f90 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000019a192fa0 (   0x470) __TEXT __objc_methlist
                0x000000019a192fa0 (   0x438) _OBJC_$_INSTANCE_METHODS_DeviceGammaContext [NameNList, MangledNameNList, NList] 
                0x000000019a1933d8 (    0x18) _OBJC_$_CLASS_METHODS_ALSHIDManager [NameNList, MangledNameNList, NList] 
                0x000000019a1933f0 (    0x20) _OBJC_$_INSTANCE_METHODS_ALSHIDManager [NameNList, MangledNameNList, NList] 
            0x000000019a193410 (   0x898) __TEXT __const
                0x000000019a193560 (     0x8) defaultOptimizationMode [EXT, NameNList, MangledNameNList, NList] 
                0x000000019a193568 (   0x650) backlightDimLimit [EXT, NameNList, MangledNameNList, NList] 
                0x000000019a193bb8 (    0xf0) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
            0x000000019a193ca8 (  0xbc70) __TEXT __cstring
            0x000000019a19f918 (   0x18c) __TEXT __gcc_except_tab
                0x000000019a19f918 (    0x14) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000019a19f92c (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x000000019a19f93c (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000019a19f960 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000019a19f970 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000019a19f980 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000019a19f9a0 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000019a19f9b0 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000019a19f9c0 (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000019a19f9e4 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000019a19f9f8 (    0x24) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa1c (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa2c (    0x20) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa4c (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa60 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa70 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa80 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000019a19fa90 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
            0x000000019a19faa4 (    0x14) __TEXT __oslogstring
            0x000000019a19fab8 (   0x750) __TEXT __unwind_info
            0x000000019a1a0208 (    0x38) __TEXT __eh_frame
            0x000000019a1a0240 (    0x21) __TEXT __objc_classname
            0x000000019a1a0262 (   0xeb9) __TEXT __objc_methname
            0x000000019a1a111b (   0x29d) __TEXT __objc_methtype
            0x000000019a1a13c0 (   0xc40) __TEXT __objc_stubs
                0x000000019a1a13c0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a13e0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1400 (    0x20) objc_msgSend$animationCompleted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1420 (    0x20) objc_msgSend$arrayWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1440 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1460 (    0x20) objc_msgSend$cacheColorSpaceFromICC [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1480 (    0x20) objc_msgSend$copyNextIntentionDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a14a0 (    0x20) objc_msgSend$copyPrefsIntentionDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a14c0 (    0x20) objc_msgSend$copyTargetWhitePointMatrix [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a14e0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1500 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1520 (    0x20) objc_msgSend$createNativeColorSpaceVectorsWithRedXYZ:greenXYZ:blueXYZ:whitePointXYZ: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1540 (    0x20) objc_msgSend$createNativeWhitePointVector [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1560 (    0x20) objc_msgSend$desiredWhitePointXYZisNative [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1580 (    0x20) objc_msgSend$dictionaryWithObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a15a0 (    0x20) objc_msgSend$enableCompensation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a15c0 (    0x20) objc_msgSend$fetchAndSetCompositionalEnvironementOnce [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a15e0 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1600 (    0x20) objc_msgSend$frontALSserviceValid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1620 (    0x20) objc_msgSend$getALSluxWithLocation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1640 (    0x20) objc_msgSend$getBackLightNits [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1660 (    0x20) objc_msgSend$getCompensationState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1680 (    0x20) objc_msgSend$getCompositionalAmbientEnvironmentLux [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a16a0 (    0x20) objc_msgSend$getCompositionalWhiteReferenceNits [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a16c0 (    0x20) objc_msgSend$getCurrentAttenuation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a16e0 (    0x20) objc_msgSend$getDarkReflectivity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1700 (    0x20) objc_msgSend$getDesiredHueSaturation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1720 (    0x20) objc_msgSend$getDesiredWhitePointXYZ [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1740 (    0x20) objc_msgSend$getDisplayContainerID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1760 (    0x20) objc_msgSend$getDisplayID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1780 (    0x20) objc_msgSend$getFullBacklightLeakageNits [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a17a0 (    0x20) objc_msgSend$getHardwareBrightnessSmoothingState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a17c0 (    0x20) objc_msgSend$getLinearBacklight [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a17e0 (    0x20) objc_msgSend$getLowestLevel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1800 (    0x20) objc_msgSend$getMaxBackLightNits [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1820 (    0x20) objc_msgSend$getRemovedState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1840 (    0x20) objc_msgSend$getStaticGamma [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1860 (    0x20) objc_msgSend$getSystemGammaMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1880 (    0x20) objc_msgSend$getTargetLinearBlackpoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a18a0 (    0x20) objc_msgSend$getTargetOverGamma [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a18c0 (    0x20) objc_msgSend$getWhitePointMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a18e0 (    0x20) objc_msgSend$initWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1900 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1920 (    0x20) objc_msgSend$initWithCount:withDisplayID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1940 (    0x20) objc_msgSend$interpolateCurrentTableToDestinationTableOverTime:withUpdateRatePerSecond:withPreemption: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1960 (    0x20) objc_msgSend$invalidateALSservices [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1980 (    0x20) objc_msgSend$isNativeICCvalidOrRetry [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a19a0 (    0x20) objc_msgSend$launchApplicationAtURL:options:configuration:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a19c0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a19e0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1a00 (    0x20) objc_msgSend$overridesFound [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1a20 (    0x20) objc_msgSend$pollAndUpdateALSlux [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1a40 (    0x20) objc_msgSend$pollAndupdateBacklightNits [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1a60 (    0x20) objc_msgSend$preemptableAnimationSleepSeconds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1a80 (    0x20) objc_msgSend$preferencesRead [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1aa0 (    0x20) objc_msgSend$queryAndSetIntentionForWhitePoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ac0 (    0x20) objc_msgSend$readDisplayOverrides: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ae0 (    0x20) objc_msgSend$registerHIDservices [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1b00 (    0x20) objc_msgSend$releaseAnimationLock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1b20 (    0x20) objc_msgSend$requestAndWaitForAnimationToEndLocking [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1b40 (    0x20) objc_msgSend$requestAndWaitForAnimationToEndNonLocking [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1b60 (    0x20) objc_msgSend$resetAnimationSemaphore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1b80 (    0x20) objc_msgSend$setALSlux:withALSlocation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ba0 (    0x20) objc_msgSend$setAndAnimateToGamma:thawIntention: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1bc0 (    0x20) objc_msgSend$setBackLightNits:withLinearBacklight: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1be0 (    0x20) objc_msgSend$setDesiredHue:Saturation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1c00 (    0x20) objc_msgSend$setDesiredWhitePointXYZ: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1c20 (    0x20) objc_msgSend$setDisplayID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1c40 (    0x20) objc_msgSend$setDisplayParametersWithLeakage:lowestLevel:lowestMeasured:backlight:darkReflection:brightReflection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1c60 (    0x20) objc_msgSend$setFrontALSservice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1c80 (    0x20) objc_msgSend$setIntentionDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ca0 (    0x20) objc_msgSend$setInternal: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1cc0 (    0x20) objc_msgSend$setNativeWhitePointAndAnimateWithDuration:thawIntention: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ce0 (    0x20) objc_msgSend$setOverridesFound: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1d00 (    0x20) objc_msgSend$setPrefsIntentionDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1d20 (    0x20) objc_msgSend$setRearALSservice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1d40 (    0x20) objc_msgSend$setRemovedState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1d60 (    0x20) objc_msgSend$setStaticGamma: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1d80 (    0x20) objc_msgSend$setSystemGammaMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1da0 (    0x20) objc_msgSend$setTargetLinearBlackpoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1dc0 (    0x20) objc_msgSend$setTargetOverGamma: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1de0 (    0x20) objc_msgSend$setTargetWhitePointMatrix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1e00 (    0x20) objc_msgSend$setTargetWhitePointXYZ: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1e20 (    0x20) objc_msgSend$setWhitePointMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1e40 (    0x20) objc_msgSend$setWhitePointXYZandAnimateToX:Y:Z:duration:thawIntention: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1e60 (    0x20) objc_msgSend$setpreferencesRead [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1e80 (    0x20) objc_msgSend$setupInterpolationWithDuration:withUpdateRateFPS:direction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ea0 (    0x20) objc_msgSend$sharedWorkspace [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ec0 (    0x20) objc_msgSend$signalAnimationToEnd [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1ee0 (    0x20) objc_msgSend$singleton [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1f00 (    0x20) objc_msgSend$start [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1f20 (    0x20) objc_msgSend$stop [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1f40 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1f60 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1f80 (    0x20) objc_msgSend$unsignedLongLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1fa0 (    0x20) objc_msgSend$updateDisplayHasBrightnessSmoothing [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1fc0 (    0x20) objc_msgSend$updateDisplayIsInternal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019a1a1fe0 (    0x20) objc_msgSend$updateWipeWithActualIntervalInSeconds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001dccbcf80 (   0xe08) __DATA_CONST SEGMENT
            0x00000001dccbcf80 (    0xe8) __DATA_CONST __got
            0x00000001dccbd068 (   0x170) __DATA_CONST __const
                0x00000001dccbd068 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbd088 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dccbd0a8 (    0x40) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dccbd0e8 (    0x40) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dccbd128 (    0xb0) __block_descriptor_tmp.133 [NameNList, MangledNameNList, NList] 
            0x00000001dccbd1d8 (    0x10) __DATA_CONST __objc_classlist
            0x00000001dccbd1e8 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001dccbd1f0 (   0x7d8) __DATA_CONST __objc_const
                0x00000001dccbd1f0 (    0x48) _OBJC_METACLASS_RO_$_DeviceGammaContext [NameNList, MangledNameNList, NList] 
                0x00000001dccbd238 (   0x768) _OBJC_$_INSTANCE_VARIABLES_DeviceGammaContext [NameNList, MangledNameNList, NList] 
                0x00000001dccbd9a0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_ALSHIDManager [NameNList, MangledNameNList, NList] 
            0x00000001dccbd9c8 (   0x370) __DATA_CONST __objc_selrefs
            0x00000001dccbdd38 (    0x50) __DATA_CONST __objc_arraydata
                0x00000001dccbdd38 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x00000001dccbdd48 (    0x10) _unnamed_array_storage.43 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdd58 (    0x10) _unnamed_array_storage.49 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdd68 (    0x10) _unnamed_array_storage.50 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdd78 (    0x10) _unnamed_array_storage.52 [NameNList, MangledNameNList, NList] 
        0x00000001dccbdd88 (   0xfa8) __AUTH_CONST SEGMENT
            0x00000001dccbdd88 (   0x2a0) __AUTH_CONST __const
                0x00000001dccbdd88 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dccbdda8 (    0x20) __block_literal_global.25 [NameNList, MangledNameNList, NList] 
                0x00000001dccbddc8 (    0x20) __block_literal_global.39 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdde8 (    0x30) __block_descriptor_52_e8_32r40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbde18 (    0x30) __block_descriptor_58_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbde48 (    0x30) __block_descriptor_40_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbde78 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dccbde98 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dccbdeb8 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbdee8 (    0x30) __block_descriptor_60_e8_32r40r48r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbdf18 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dccbdf48 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dccbdf68 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dccbdf98 (    0x30) __block_descriptor_tmp.101 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdfc8 (    0x30) __block_descriptor_tmp.121 [NameNList, MangledNameNList, NList] 
                0x00000001dccbdff8 (    0x30) __block_descriptor_tmp.141 [NameNList, MangledNameNList, NList] 
            0x00000001dccbe028 (   0x5c0) __AUTH_CONST __cfstring
            0x00000001dccbe5e8 (    0xd8) __AUTH_CONST __objc_const
                0x00000001dccbe5e8 (    0x48) _OBJC_CLASS_RO_$_DeviceGammaContext [NameNList, MangledNameNList, NList] 
                0x00000001dccbe630 (    0x48) _OBJC_METACLASS_RO_$_ALSHIDManager [NameNList, MangledNameNList, NList] 
                0x00000001dccbe678 (    0x48) _OBJC_CLASS_RO_$_ALSHIDManager [NameNList, MangledNameNList, NList] 
            0x00000001dccbe6c0 (    0x60) __AUTH_CONST __objc_intobj
            0x00000001dccbe720 (    0x50) __AUTH_CONST __objc_dictobj
            0x00000001dccbe770 (    0x18) __AUTH_CONST __objc_arrayobj
            0x00000001dccbe788 (   0x5a8) __AUTH_CONST __auth_got
        0x00000001d746b980 (    0xa0) __AUTH SEGMENT
            0x00000001d746b980 (    0xa0) __AUTH __objc_data
                0x00000001d746b980 (    0x28) OBJC_CLASS_$_DeviceGammaContext [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d746b9a8 (    0x28) OBJC_METACLASS_$_DeviceGammaContext [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d746b9d0 (    0x28) OBJC_CLASS_$_ALSHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d746b9f8 (    0x28) OBJC_METACLASS_$_ALSHIDManager [EXT, NameNList, MangledNameNList, NList] 
        0x00000001d5f08558 (   0x3e1) __DATA SEGMENT
            0x00000001d5f08558 (    0x48) __DATA __objc_classrefs
            0x00000001d5f085a0 (     0x8) __DATA __objc_superrefs
            0x00000001d5f085a8 (    0xf0) __DATA __objc_ivar
                0x00000001d5f085a8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.deviceID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085ac (     0x4) OBJC_IVAR_$_DeviceGammaContext.IODisplayService [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085b0 (     0x4) OBJC_IVAR_$_DeviceGammaContext.frontALSservice [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085b4 (     0x4) OBJC_IVAR_$_DeviceGammaContext.rearALSservice [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085b8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.ALS_LMUdataPort [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085bc (     0x4) OBJC_IVAR_$_DeviceGammaContext.displayContainerID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085c0 (     0x4) OBJC_IVAR_$_DeviceGammaContext.numSamples [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085c4 (     0x4) OBJC_IVAR_$_DeviceGammaContext.epsilon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085c8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.currentWipe [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085cc (     0x4) OBJC_IVAR_$_DeviceGammaContext.wipeIncrement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085d0 (     0x4) OBJC_IVAR_$_DeviceGammaContext.updateRate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085d4 (     0x4) OBJC_IVAR_$_DeviceGammaContext.currentMatrixWipe [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085d8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.wipeMatrixIncrement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085dc (     0x4) OBJC_IVAR_$_DeviceGammaContext.internal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085e0 (     0x4) OBJC_IVAR_$_DeviceGammaContext.hasOverrides [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085e4 (     0x4) OBJC_IVAR_$_DeviceGammaContext.preferencesRead [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085e8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.previousWiperUpdateTimeMS [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085ec (     0x4) OBJC_IVAR_$_DeviceGammaContext.leakage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085f0 (     0x4) OBJC_IVAR_$_DeviceGammaContext.lowestLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085f4 (     0x4) OBJC_IVAR_$_DeviceGammaContext.lowestMeasured [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085f8 (     0x4) OBJC_IVAR_$_DeviceGammaContext.maxBacklight [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f085fc (     0x4) OBJC_IVAR_$_DeviceGammaContext.darkReflection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08600 (     0x4) OBJC_IVAR_$_DeviceGammaContext.brightReflection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08604 (     0x4) OBJC_IVAR_$_DeviceGammaContext.desiredWhitePointXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08608 (     0x4) OBJC_IVAR_$_DeviceGammaContext.targetWhitePointXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0860c (     0x4) OBJC_IVAR_$_DeviceGammaContext.targetWhitePointMatrix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08610 (     0x4) OBJC_IVAR_$_DeviceGammaContext.targetLinearBlack [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08614 (     0x4) OBJC_IVAR_$_DeviceGammaContext.targetOverGamma [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08618 (     0x4) OBJC_IVAR_$_DeviceGammaContext.nativeICCvalid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0861c (     0x4) OBJC_IVAR_$_DeviceGammaContext.nativeRedXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08620 (     0x4) OBJC_IVAR_$_DeviceGammaContext.nativeGreenXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08624 (     0x4) OBJC_IVAR_$_DeviceGammaContext.nativeBlueXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08628 (     0x4) OBJC_IVAR_$_DeviceGammaContext.nativeWhitePointXYZ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0862c (     0x4) OBJC_IVAR_$_DeviceGammaContext.hue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08630 (     0x4) OBJC_IVAR_$_DeviceGammaContext.saturation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08634 (     0x4) OBJC_IVAR_$_DeviceGammaContext.whitePointMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08638 (     0x4) OBJC_IVAR_$_DeviceGammaContext.frontALSlux [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0863c (     0x4) OBJC_IVAR_$_DeviceGammaContext.rearALSlux [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08640 (     0x4) OBJC_IVAR_$_DeviceGammaContext.backLightNits [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08644 (     0x4) OBJC_IVAR_$_DeviceGammaContext.linearBacklight [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08648 (     0x4) OBJC_IVAR_$_DeviceGammaContext.wiperAnimationRequestSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0864c (     0x4) OBJC_IVAR_$_DeviceGammaContext.animationCompleted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08650 (     0x4) OBJC_IVAR_$_DeviceGammaContext.animationPreemptable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08654 (     0x4) OBJC_IVAR_$_DeviceGammaContext.animationMatrixCompleted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08658 (     0x4) OBJC_IVAR_$_DeviceGammaContext.animationMatrixPreemptive [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0865c (     0x4) OBJC_IVAR_$_DeviceGammaContext.compensationState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08660 (     0x4) OBJC_IVAR_$_DeviceGammaContext._intentionDictionaryMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08664 (     0x4) OBJC_IVAR_$_DeviceGammaContext._nextIntentionDictionary [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08668 (     0x4) OBJC_IVAR_$_DeviceGammaContext._previousIntentionDictionary [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0866c (     0x4) OBJC_IVAR_$_DeviceGammaContext._prefsIntentionDictionaryMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08670 (     0x4) OBJC_IVAR_$_DeviceGammaContext._prefsIntentionDictionary [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08674 (     0x4) OBJC_IVAR_$_DeviceGammaContext._timeOfLastAssemblyBufferFlushListMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08678 (     0x4) OBJC_IVAR_$_DeviceGammaContext.removedState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0867c (     0x4) OBJC_IVAR_$_DeviceGammaContext.hardwareBrightnessSmoothing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08680 (     0x4) OBJC_IVAR_$_DeviceGammaContext.compositionalWhiteReferenceNits [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08684 (     0x4) OBJC_IVAR_$_DeviceGammaContext.compositionalAmbientEnvironmentLux [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08688 (     0x4) OBJC_IVAR_$_DeviceGammaContext.systemGammaMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f0868c (     0x4) OBJC_IVAR_$_DeviceGammaContext.staticGamma [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08690 (     0x4) OBJC_IVAR_$_DeviceGammaContext.animationSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08694 (     0x4) OBJC_IVAR_$_ALSHIDManager.hidEventClient [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5f08698 (   0x178) __DATA __data
                0x00000001d5f08698 (     0x8) _gWhitePointMode [NameNList, MangledNameNList, NList] 
                0x00000001d5f086a0 (    0x40) _updateImmutableDeviceContextList.mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5f086e0 (    0x40) addContextToDeviceContextList.mutex [NameNList, MangledNameNList, NList] 
                0x00000001d5f08720 (     0x8) dynamicallyLoadCoreDisplay.cdSymbols [NameNList, MangledNameNList, NList] 
                0x00000001d5f08728 (     0x8) dynamicallyLoadCoreDisplay.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5f08730 (     0x8) getCoreDisplayDesiredWhitePointMode.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5f08738 (     0x8) displayServicesQueue.displayServicesQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5f08740 (     0x8) displayServicesQueue.once [NameNList, MangledNameNList, NList] 
                0x00000001d5f08748 (     0x8) privateDeviceContextListMutable [NameNList, MangledNameNList, NList] 
                0x00000001d5f08750 (     0x8) privateDeviceContextListImmutable [NameNList, MangledNameNList, NList] 
                0x00000001d5f08758 (     0x8) GetTimebaseInfo()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5f08760 (     0x8) GetTimebaseInfo()::timebaseInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5f08768 (     0x8) CGSSetDisplayIntentionPtr [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08770 (     0x8) CGSSetDisplayIntentionWiperPtr [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f08778 (    0x64) AMBDwhitePointModeUnitUse [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5f087dc (     0x4) _gOptimizationMode [NameNList, MangledNameNList, NList] 
                0x00000001d5f087e0 (     0x8) _gThresholdDeltaE [NameNList, MangledNameNList, NList] 
                0x00000001d5f087e8 (     0x8) _gStepsPerDeltaE [NameNList, MangledNameNList, NList] 
                0x00000001d5f087f0 (     0x8) _gUpdateRateFPS [NameNList, MangledNameNList, NList] 
                0x00000001d5f087f8 (     0x8) _gMaxUpdateRateFPS [NameNList, MangledNameNList, NList] 
                0x00000001d5f08800 (     0x8) _gSlowDuration [NameNList, MangledNameNList, NList] 
                0x00000001d5f08808 (     0x8) _gAllowableAdaptationOverDisplayBrightnessRatio [NameNList, MangledNameNList, NList] 
            0x00000001d5f08810 (   0x129) __DATA __bss
                0x00000001d5f08810 (     0x8) CreateUUIDFromDisplayID.displayIDtoUUIDcache [NameNList, MangledNameNList, NList] 
                0x00000001d5f08818 (     0x8) gALSLMUdataPort [NameNList, MangledNameNList, NList] 
                0x00000001d5f08820 (     0x8) interpolateCurrentTableToDestinationTableOverTime:withUpdateRatePerSecond:withPreemption:.animationDispatchQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5f08828 (     0x8) fetchAndSetCompositionalEnvironementOnce.predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5f08830 (    0x38) HDRManager()::hdrManager [NameNList, MangledNameNList, NList] 
                0x00000001d5f08868 (     0x8) guard variable for HDRManager()::hdrManager [NameNList, MangledNameNList, NList] 
                0x00000001d5f08870 (     0x8) singleton.instance [NameNList, MangledNameNList, NList] 
                0x00000001d5f08878 (     0x8) singleton.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5f08880 (    0xb8) GetHWLinearizationConfigID.caps [NameNList, MangledNameNList, NList] 
                0x00000001d5f08938 (     0x1) GetHWLinearizationConfigID.inited [NameNList, MangledNameNList, NList] 
        0x00000001d6ec6138 (    0x18) __DATA_DIRTY SEGMENT
            0x00000001d6ec6138 (     0x9) __DATA_DIRTY __bss
                0x00000001d6ec6138 (     0x8) gConnection [NameNList, MangledNameNList, NList] 
                0x00000001d6ec6140 (     0x1) gSentTermination [NameNList, MangledNameNList, NList] 
            0x00000001d6ec6148 (     0x8) __DATA_DIRTY __common
                0x00000001d6ec6148 (     0x8) AMBDuserPreferences [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
