Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/usr/lib/libnwswifttls.dylib [arm64e, 0.059721 seconds]:
    8FF5BD4E-8390-3CE9-AE61-F4808F0F8E08 /usr/lib/libnwswifttls.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000221120000 ( 0xc8000) __TEXT SEGMENT
            0x0000000221120000 (  0x4390) MACH_HEADER
            0x0000000221124390 ( 0xb70a0) __TEXT __text
                0x0000000221124390 (     0xc) nwswifttls_dispatch_data_from_nsdata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112439c (   0x14c) nwswifttls_serialize_xpc_array [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211244e8 (    0xbc) nwswifttls_get_encryption_level [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211245a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211245b8 (    0xe8) nwswifttls_update_encryption_level [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211246a0 (    0x1c) __nwswifttls_update_encryption_level_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211246bc (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211246cc (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211246d4 (    0xc8) nwswifttls_get_encryption_key_label [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112479c (   0x244) ssl_log_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211249e0 (   0x178) nwswifttls_update_encryption_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124b58 (    0x18) __nwswifttls_update_encryption_secret_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124b70 (    0xb8) nwswifttls_update_quic_transport_parameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124c28 (    0x58) __nwswifttls_update_quic_transport_parameters_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124c80 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124c88 (   0x184) nwswifttls_update_session_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124e0c (    0x2c) __nwswifttls_update_session_state_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124e38 (    0x6c) nwswifttls_copy_serialized_session [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124ea4 (    0x14) __nwswifttls_update_session_state_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124eb8 (    0x48) __copy_helper_block_e8_32s40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124f00 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124f3c (    0x84) nwswifttls_update_early_data_accepted [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124fc0 (    0x28) __nwswifttls_update_early_data_accepted_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221124fe8 (    0xb0) nwswifttls_allow_exported_authenticators [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125098 (    0x2c) __nwswifttls_allow_exported_authenticators_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211250c4 (   0x27c) nwswifttls_copy_copy_authenticator_trust [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125340 (    0xb8) __nwswifttls_copy_copy_authenticator_trust_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211253f8 (    0x58) -[NWConcrete_nwswifttls dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125450 (    0x14) __32-[NWConcrete_nwswifttls dealloc]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125464 (    0xc8) -[NWConcrete_nwswifttls .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112552c (    0x6c) nwswifttls_disconnect [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125598 (    0x80) nwswifttls_send_error [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125618 (    0x44) nwswifttls_identifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112565c (   0x12c) __nwswifttls_identifier_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125788 (   0x110) nwswifttls_add_input_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125898 (   0x17c) nwswifttls_remove_input_handler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125a14 (   0x154) nwswifttls_input_available [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125b68 (     0x8) nwswifttls_get_input_frames [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125b70 (   0x2e8) nwswifttls_connected [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125e58 (    0xbc) nwswifttls_copy_info [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125f14 (     0x8) nwswifttls_supports_external_data [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125f1c (    0x94) nwswifttls_create [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221125fb0 (    0x54) nwswifttls_copy_definition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126004 (   0x100) __nwswifttls_copy_definition_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126104 (     0xc) nwswifttls_allocate_options [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126110 (   0x1ac) nwswifttls_copy_options [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211262bc (   0x1a0) nwswifttls_deallocate_options [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112645c (    0x10) nwswifttls_options_are_equal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112646c (    0x14) nwswifttls_options_compare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126480 (     0xc) nwswifttls_allocate_metadata [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112648c (    0xc4) nwswifttls_deallocate_metadata [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126550 (    0x84) nwswifttls_complete_handshake [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211265d4 (   0x184) nwswifttls_add_message [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126758 (    0x9c) nwswifttls_send_messages [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211267f4 (    0x7c) nwswifttls_send_alert [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126870 (    0x54) __nwswifttls_finalize_output_frame_arrays_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211268c4 (   0x1a4) __nwswifttls_input_available_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126a68 (   0x10c) nwswifttls_update_encryption_secrets [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126b74 (   0x104) nwswifttls_get_transport_protocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126c78 (   0x204) nwswifttls_configure_server_name [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126e7c (   0x164) nwswifttls_configure_application_protocols [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221126fe0 (    0xe4) nwswifttls_configure_server_raw_public_key_certificate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211270c4 (    0xd0) nwswifttls_configure_with_sec_protocol_options [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221127194 (   0x288) __nwswifttls_configure_with_sec_protocol_options_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112741c (    0xc0) nwswifttls_get_endpoint_name [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211274dc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211274f0 (    0x84) one-time initialization function for logger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221127574 (    0x18) variable initialization expression of STLSHandshaker.stateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112758c (    0x18) variable initialization expression of STLSHandshaker.partialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211275a4 (    0x74) variable initialization expression of STLSHandshaker.stateMachine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221127618 (     0xc) variable initialization expression of STLSHandshaker.receivedSessionTickets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221127624 (     0x8) STLSHandshaker.isImplemented() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112762c (     0x8) @objc STLSHandshaker.isImplemented() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221127634 (    0x74) STLSHandshaker.__allocating_init(_:serverName:quicTransportParameters:alpn:sessionState:ticketRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211276a8 (   0xf08) STLSHandshaker.init(_:serverName:quicTransportParameters:alpn:sessionState:ticketRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211285b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211285c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211285d0 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221128614 (    0x38) __swift_project_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112864c (    0xb4) @objc STLSHandshaker.init(_:serverName:quicTransportParameters:alpn:sessionState:ticketRequest:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221128700 (   0x3b0) STLSHandshaker.startHandshake() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221128ab0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221128ac0 (    0x4c) @objc STLSHandshaker.startHandshake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221128b0c (   0x540) STLSHandshaker.continueHandshake(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112904c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112905c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112906c (    0x70) @objc STLSHandshaker.continueHandshake(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211290dc (   0x34c) STLSHandshaker.getEncryptionLevel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129428 (    0x3c) @objc STLSHandshaker.getEncryptionLevel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129464 (   0x458) STLSHandshaker.getClientRandom() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211298bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211298cc (    0x4c) @objc STLSHandshaker.getClientRandom() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129918 (   0x504) STLSHandshaker.getEncryptionSecret(write:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129e1c (    0xcc) closure #1 in STLSHandshaker.getEncryptionSecret(write:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129ee8 (    0x5c) @objc STLSHandshaker.getEncryptionSecret(write:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221129f44 (   0x1d8) STLSHandshaker.getPeerQUICTransportParameters() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a11c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112a12c (    0x4c) @objc STLSHandshaker.getPeerQUICTransportParameters() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a178 (   0x1ac) STLSHandshaker.getNegotiatedCiphersuite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a324 (    0x3c) @objc STLSHandshaker.getNegotiatedCiphersuite() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a360 (    0x1c) STLSHandshaker.hasSessionState() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a37c (    0x1c) @objc STLSHandshaker.hasSessionState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a398 (    0x80) STLSHandshaker.getSessionState() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a418 (    0x4c) @objc STLSHandshaker.getSessionState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a464 (   0x13c) STLSHandshaker.getEarlyDataAccepted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a5a0 (   0x150) @objc STLSHandshaker.getEarlyDataAccepted() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a6f0 (     0xc) STLSHandshaker.validateAuthenticator(authenticator:context:keyParser:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a6fc (   0x158) @objc STLSHandshaker.validateAuthenticator(authenticator:context:keyParser:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a854 (    0x88) thunk for @callee_unowned @convention(block) (@unowned NSData) -> (@autoreleased NSData?) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a8dc (    0x34) STLSHandshaker.__allocating_init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a910 (    0x30) STLSHandshaker.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a940 (    0x30) @objc STLSHandshaker.init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a970 (    0x38) STLSHandshaker.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112a9a8 (    0x6c) @objc STLSHandshaker.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aa14 (    0x64) outlined copy of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aa78 (    0x58) outlined consume of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aad0 (    0x14) outlined copy of ByteBuffer? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aae4 (    0x14) outlined consume of ByteBuffer? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aaf8 (    0x64) outlined assign with take of HandshakeStateMachine? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ab5c (    0x10) outlined init with take of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ab6c (    0x54) lazy protocol witness table accessor for type Data and conformance Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112abc0 (   0x1d4) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ad94 (   0x108) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ae9c (    0x14) outlined consume of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aeb0 (    0x14) outlined copy of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112aec4 (    0x5c) outlined destroy of HandshakeStateMachine? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112af20 (    0x68) outlined init with take of HandshakeStateMachine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112af88 (    0x64) outlined init with copy of PartialHandshakeResult.NewEncryptionLevel? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112afec (   0x114) specialized Data.InlineData.init(_:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b100 (    0xf4) specialized Data.InlineData.init(_:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b1f4 (   0x144) specialized Data.InlineSlice.init(_:range:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b338 (    0x68) outlined init with copy of PartialHandshakeResult [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b3a0 (    0xc8) specialized Data.InlineData.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b468 (    0x7c) specialized Data.LargeSlice.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b4e4 (    0x84) specialized Data.InlineSlice.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b568 (   0x21c) specialized Array.replaceSubrange<A>(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112b784 (   0x328) specialized STLSHandshaker.validateAuthenticator(authenticator:context:keyParser:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112baac (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112babc (     0x8) ObjC metadata update function for STLSHandshaker [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bac4 (    0x4c) type metadata accessor for STLSHandshaker [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bb10 (   0x10c) type metadata completion function for STLSHandshaker [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bc1c (    0x54) type metadata accessor for HandshakeStateMachine? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bc70 (     0x8) partial apply for thunk for @callee_unowned @convention(block) (@unowned NSData) -> (@autoreleased NSData?) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bc78 (    0x60) outlined destroy of PartialHandshakeResult [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bcd8 (    0x44) __swift_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bd1c (    0x50) __swift_destroy_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bd6c (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bd70 (    0x64) __swift_allocate_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bdd4 (     0x4) CertificateVerify.algorithm.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bdd8 (     0x8) CertificateVerify.algorithm.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bde0 (    0x20) CertificateVerify.algorithm.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112be00 (     0x4) CertificateVerify.algorithm.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112be04 (    0x48) CertificateVerify.signature.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112be4c (    0x40) CertificateVerify.signature.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112be8c (    0x20) CertificateVerify.signature.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112beac (     0x4) CertificateVerify.signature.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112beb0 (    0x5c) CertificateVerify.init(algorithm:signature:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bf0c (    0xe8) CertificateVerify.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112bff4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c004 (    0x30) static CertificateVerify.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c034 (    0xfc) CertificateVerify.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c130 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c140 (    0x10) protocol witness for Hashable.hashValue.getter in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c150 (    0xe8) protocol witness for Hashable.hash(into:) in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c238 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c248 (    0xf4) protocol witness for Hashable._rawHashValue(seed:) in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c33c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c34c (    0x2c) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c378 (     0x8) static CertificateVerify.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c380 (   0x25c) CertificateVerify.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c5dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c5ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c5fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c60c (    0x18) CertificateVerify.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c624 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c62c (    0x10) protocol witness for HandshakeMessageProtocol.write(into:) in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c63c (    0x34) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c670 (     0x4) default argument 1 of ByteBuffer.writeInteger<A>(_:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c674 (     0x4) default argument 2 of ByteBuffer.setInteger<A>(_:at:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c678 (    0x30) variable initialization expression of ExportedAuthenticator.parser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6a8 (     0x4) variable initialization expression of ExportedAuthenticator.serializer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6ac (     0x4) default argument 0 of ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6b0 (    0x30) variable initialization expression of HandshakeStateMachine.parser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6e0 (     0x4) variable initialization expression of HandshakeStateMachine.serializer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6e4 (    0x10) variable initialization expression of SessionTicket.alpn [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c6f4 (    0x1c) variable initialization expression of Extension.EarlyData.maxEarlyDataSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c710 (    0x18) variable initialization expression of HandshakeState.IdleState.sessionToResume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c728 (    0x18) variable initialization expression of HandshakeState.ClientHelloState.sessionToResume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c740 (    0x10) variable initialization expression of HandshakeState.EncryptedExtensionsState.serverALPN [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c750 (    0x10) variable initialization expression of HandshakeState.EncryptedExtensionsState.serverQUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c760 (     0x8) variable initialization expression of HandshakeState.EncryptedExtensionsState.earlyDataAccepted [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c768 (     0xc) variable initialization expression of HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c774 (    0x10) variable initialization expression of HandshakeState.ServerCertificateState.serverALPN [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c784 (    0x10) variable initialization expression of HandshakeState.ServerCertificateState.serverQUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c794 (    0x10) variable initialization expression of HandshakeState.ServerCertificateVerifyState.serverALPN [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7a4 (    0x10) variable initialization expression of HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7b4 (    0x10) variable initialization expression of HandshakeState.ReadyState.serverALPN [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7c4 (    0x10) variable initialization expression of HandshakeState.ReadyState.serverQUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7d4 (     0xc) variable initialization expression of HandshakeStateMachine.Configuration.serverName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7e0 (    0x10) variable initialization expression of HandshakeStateMachine.Configuration.quicTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c7f0 (    0x10) variable initialization expression of HandshakeStateMachine.Configuration.alpn [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c800 (    0x10) variable initialization expression of HandshakeStateMachine.Configuration.ticketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c810 (     0x8) default argument 2 of SessionKeyManager.postServerHello(ecdheSecret:serverHelloBytes:resumptionFailed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c818 (    0x10) variable initialization expression of HandshakeMessageParser.bufferedBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c828 (    0x10) variable initialization expression of PartialHandshakeResult.handshakeBytesToSend [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c838 (    0x18) variable initialization expression of PartialHandshakeResult.newEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c850 (    0x74) variable initialization expression of HandshakeState.IdleState.sessionToResume [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c8c4 (     0xc) variable initialization expression of PartialHandshakeResult.sessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c8d0 (    0x2c) closure #1 in Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c8fc (    0xe4) specialized ByteBuffer.setInteger<A>(_:at:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112c9e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112c9f0 (   0x240) specialized CertificateVerify.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cc30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112cc40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112cc50 (     0x4) base witness table accessor for Equatable in CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cc54 (    0x54) lazy protocol witness table accessor for type CertificateVerify and conformance CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cca8 (    0x34) initializeBufferWithCopyOfBuffer for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ccdc (     0xc) destroy for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cce8 (    0x54) initializeWithCopy for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cd3c (    0x5c) assignWithCopy for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cd98 (    0x4c) assignWithTake for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cde4 (    0x54) getEnumTagSinglePayload for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ce38 (    0x50) storeEnumTagSinglePayload for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ce88 (    0x10) type metadata accessor for CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ce98 (    0xdc) specialized ByteBuffer.setInteger<A>(_:at:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112cf74 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112cf84 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112d008 (   0x84c) PeerCertificateBundle.init(expectedCertificateType:peerCertificateMessage:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112d854 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112d864 (   0x890) PeerCertificateBundle.verifyServerCertificateVerifySignature(message:validKeys:keyScheduler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112e0f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112e104 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112e114 (   0x3b4) specialized SessionKeyManager.dataToSignInServerCertificateVerify() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112e4c8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022112e4dc (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022112e4f0 (   0x1b0) PeerCertificateBundle.wouldBeTrusted(forKeys:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112e6a0 (    0x8c) closure #1 in PeerCertificateBundle.wouldBeTrusted(forKeys:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112e72c (   0x2c8) specialized Sequence.contains(where:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112e9f4 (    0x3c) one-time initialization function for serverCertificateTypes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ea30 (    0x4c) PeerCertificateBundle.serverCertificateTypes.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ea7c (    0x70) static PeerCertificateBundle.serverCertificateTypes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112eaec (     0x4) static PeerCertificateBundle.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112eaf0 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112eaf4 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112eaf8 (   0x2f0) ByteBuffer.writePeerCertificateBundle(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112ede8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112edf8 (   0x644) ByteBuffer.readPeerCertificateBundle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112f43c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112f44c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112f45c (   0x528) specialized Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112f984 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112f994 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112f9a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112f9b4 (   0x3e4) specialized Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112fd98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112fda8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112fdb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112fdc8 (   0x134) specialized Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022112fefc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022112ff0c (   0x298) specialized SessionKeyManager.State.HandshakeSecret.dataToSignInServerCertificateVerify.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211301a4 (    0x10) serialize(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211301b4 (    0x3c) closure #1 in osLogInternal(_:log:type:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211301f0 (    0x30) thunk for @escaping @callee_guaranteed () -> (@unowned Int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130220 (    0x44) closure #1 in serialize<A>(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130264 (    0x10) closure #1 in OSLogArguments.append(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130274 (    0x28) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:align:privacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113029c (    0x8c) closure #1 in OSLogArguments.append(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130328 (    0xd4) getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211303fc (   0x134) specialized _StringGuts._deconstructUTF8<A>(scratch:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130530 (    0x98) _StringGuts._allocateForDeconstruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211305c8 (    0x9c) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130664 (    0xec) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130750 (    0x20) type metadata accessor for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130770 (    0x64) outlined init with copy of PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211307d4 (    0x20) partial apply for closure #1 in PeerCertificateBundle.wouldBeTrusted(forKeys:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211307f4 (   0x148) specialized Sequence._copyContents(initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113093c (    0x98) specialized String.UTF8View.withContiguousStorageIfAvailable<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211309d4 (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130aac (    0x94) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130b40 (    0x68) specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130ba8 (   0x27c) specialized static PeerCertificateBundle.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221130e24 (   0x27c) specialized static PeerCertificateBundle.Bundle.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211310a0 (    0x20) type metadata accessor for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211310c0 (    0x38) type metadata accessor for PeerCertificateBundle.Bundle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211310f8 (   0x154) initializeBufferWithCopyOfBuffer for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113124c (     0x4) destroy for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131250 (   0x10c) initializeWithCopy for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113135c (   0x178) assignWithCopy for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211314d4 (   0x10c) initializeWithTake for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211315e0 (   0x178) assignWithTake for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131758 (    0x14) getEnumTagSinglePayload for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113176c (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000002211317d8 (    0x14) storeEnumTagSinglePayload for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211317ec (    0x70) (null) [FUNC, FunctionStarts] 
                0x000000022113185c (    0x8c) type metadata completion function for PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211318e8 (   0x14c) initializeBufferWithCopyOfBuffer for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131a34 (     0x4) destroy for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131a38 (    0xd0) destroy for PeerCertificateBundle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131b08 (   0x110) initializeWithCopy for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131c18 (   0x174) assignWithCopy for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131d8c (   0x110) initializeWithTake for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221131e9c (   0x174) assignWithTake for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132010 (    0x14) getEnumTagSinglePayload for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132024 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x0000000221132090 (    0x14) storeEnumTagSinglePayload for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211320a4 (    0x80) (null) [FUNC, FunctionStarts] 
                0x0000000221132124 (    0x68) getEnumTag for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113218c (     0x4) destructiveProjectEnumData for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132190 (    0x70) destructiveInjectEnumTag for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132200 (    0x78) type metadata completion function for PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132278 (    0x5c) outlined destroy of PeerCertificateBundle.Bundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211322d4 (    0x3c) partial apply for specialized closure #3 in Data.append<A>(contentsOf:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132310 (    0x1c) partial apply for closure #1 in Data.append<A>(contentsOf:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113232c (    0xd8) specialized closure #3 in Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132404 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022113243c (    0x44) partial apply for specialized closure #3 in Data.append<A>(contentsOf:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132480 (    0x78) specialized closure #3 in Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211324f8 (    0x64) outlined init with take of P256.Signing.PublicKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113255c (    0x5c) outlined destroy of P256.Signing.PublicKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211325b8 (    0x1c) partial apply for closure #1 in SessionKeyManager.State.HandshakeSecret.dataToSignInServerCertificateVerify.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211325d4 (    0x48) lazy protocol witness table accessor for type SHA384 and conformance SHA384 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113261c (    0x50) __swift_destroy_boxed_opaque_existential_1Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113266c (    0x5c) outlined init with copy of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211326c8 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211326cc (    0x18) closure #1 in Data.append<A>(contentsOf:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211326e4 (    0x1c) closure #1 in PeerCertificateBundle.wouldBeTrusted(forKeys:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132700 (   0x1a0) LegacySessionID.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211328a0 (    0x90) static LegacySessionID.random() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132930 (    0x10) static LegacySessionID.zero.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132940 (    0x70) static LegacySessionID.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211329b0 (    0x58) LegacySessionID.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132a08 (    0x84) LegacySessionID.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132a8c (    0x90) protocol witness for Hashable.hashValue.getter in conformance LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132b1c (    0x64) protocol witness for Hashable.hash(into:) in conformance LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132b80 (    0x8c) protocol witness for Hashable._rawHashValue(seed:) in conformance LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132c0c (    0x70) protocol witness for static Equatable.== infix(_:_:) in conformance LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132c7c (   0x238) ByteBuffer.writeLegacySessionID(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132eb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221132ec4 (    0x50) specialized Collection.prefix(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221132f14 (   0x41c) ByteBuffer.readLegacySessionID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221133330 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221133340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221133350 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221133360 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221133370 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221133380 (    0x6c) lazy protocol witness table accessor for type Slice<UnsafeRawBufferPointer> and conformance <> Slice<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211333ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211333fc (    0x1c) partial apply for closure #1 in Data.append<A>(contentsOf:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221133418 (   0x284) specialized LegacySessionID.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113369c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211336ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211336bc (     0x4) base witness table accessor for Equatable in LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211336c0 (    0x54) lazy protocol witness table accessor for type LegacySessionID and conformance LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221133714 (    0x34) initializeBufferWithCopyOfBuffer for LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221133748 (    0x14) __swift_memcpy40_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113375c (    0x20) getEnumTagSinglePayload for LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113377c (    0x34) storeEnumTagSinglePayload for LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211337b0 (    0x10) type metadata accessor for LegacySessionID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211337c0 (    0xf4) Extension.type.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211338b4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211338ec (   0x6cc) Extension.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221133fb8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221133ff0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134000 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134010 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134020 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134030 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134040 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134050 (     0x4) static Extension.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221134054 (    0x40) Extension.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221134094 (    0x50) protocol witness for Hashable.hashValue.getter in conformance Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211340e4 (    0x40) protocol witness for Hashable.hash(into:) in conformance Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221134124 (    0x54) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221134178 (    0x4c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211341c4 (   0x228) ByteBuffer.writeExtension(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211343ec (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221134424 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134434 (   0x954) closure #1 in ByteBuffer.writeExtension(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221134d88 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221134dc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134dd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134de0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134df0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134e00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134e10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221134e20 (   0x2f4) ByteBuffer.readExtension(messageType:helloRetryRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221135114 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221135124 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221135134 (   0x318) closure #1 in ByteBuffer.readExtension(messageType:helloRetryRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113544c (    0xec) (null) [FUNC, FunctionStarts] 
                0x0000000221135538 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221135548 (   0x114) specialized Array<A>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113565c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113566c (   0x120) specialized Array<A>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113578c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113579c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211357d4 (    0x30) outlined retain of Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221135804 (   0x11c) specialized Array<A>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221135920 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221135930 (    0x30) outlined retain of Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221135960 (   0x1cc) specialized Array<A>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221135b2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221135b3c (   0x644) specialized static Extension.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136180 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211361b8 (     0x4) base witness table accessor for Equatable in Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211361bc (    0x54) lazy protocol witness table accessor for type Extension and conformance Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136210 (    0x34) initializeBufferWithCopyOfBuffer for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136244 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022113627c (    0x14) destroy for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136290 (    0x64) initializeWithCopy for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211362f4 (    0x74) assignWithCopy for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136368 (    0x14) __swift_memcpy33_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113637c (    0x4c) assignWithTake for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211363c8 (    0x48) getEnumTagSinglePayload for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136410 (    0x48) storeEnumTagSinglePayload for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136458 (     0x8) getEnumTag for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136460 (     0x4) destructiveProjectEnumData for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136464 (     0x8) destructiveInjectEnumTag for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113646c (    0x10) type metadata accessor for Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113647c (    0x40) outlined release of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211364bc (    0x68) outlined init with take of UInt32? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136524 (     0x4) outlined retain of Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136528 (     0x4) ProtocolVersion.major.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113652c (     0x8) ProtocolVersion.major.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136534 (    0x20) ProtocolVersion.major.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136554 (     0x4) ProtocolVersion.major.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136558 (     0x8) ProtocolVersion.minor.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136560 (     0x8) ProtocolVersion.minor.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136568 (    0x20) ProtocolVersion.minor.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136588 (     0x4) ProtocolVersion.minor.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113658c (     0x8) ProtocolVersion.init(major:minor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136594 (     0xc) ProtocolVersion.sslv3.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365a0 (     0x8) static ProtocolVersion.sslv3.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365a8 (     0xc) ProtocolVersion.tlsv10.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365b4 (     0x8) static ProtocolVersion.tlsv10.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365bc (     0xc) ProtocolVersion.tlsv11.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365c8 (     0x8) static ProtocolVersion.tlsv11.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365d0 (     0xc) ProtocolVersion.tlsv12.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365dc (     0x8) static ProtocolVersion.tlsv12.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365e4 (     0xc) ProtocolVersion.tlsv13.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365f0 (     0x8) static ProtocolVersion.tlsv13.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211365f8 (    0x34) ProtocolVersion.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113662c (    0x10) static ProtocolVersion.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113663c (    0x60) ProtocolVersion.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113669c (    0x60) protocol witness for Hashable.hashValue.getter in conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211366fc (    0x40) protocol witness for Hashable.hash(into:) in conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113673c (    0x5c) protocol witness for Hashable._rawHashValue(seed:) in conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136798 (    0x20) protocol witness for static Equatable.== infix(_:_:) in conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211367b8 (   0x1b0) ProtocolVersion.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136968 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022113697c (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136984 (    0x8c) ByteBuffer.writeProtocolVersion(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136a10 (     0xc) ByteBuffer.setProtocolVersion(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136a1c (   0x150) ByteBuffer.readProtocolVersion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136b6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221136b7c (     0x4) base witness table accessor for Equatable in ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136b80 (    0x54) lazy protocol witness table accessor for type ProtocolVersion and conformance ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136bd4 (     0xc) __swift_memcpy2_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136be0 (    0x70) getEnumTagSinglePayload for ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136c50 (    0xb4) storeEnumTagSinglePayload for ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136d04 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221136d18 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221136d2c (    0x10) type metadata accessor for ProtocolVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136d3c (    0xdc) static HashFunction.zeroHash.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136e18 (    0x88) static HMAC.authenticationCode<A>(bytes:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136ea0 (    0x78) partial apply for closure #1 in static HMAC.authenticationCode<A>(bytes:using:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136f18 (    0x1c) static Extension.SupportedGroups.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221136f34 (   0x194) ByteBuffer.writeSupportedGroups(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211370c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211370d8 (   0x3cc) ByteBuffer.readSupportedGroups(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211374a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211374b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211374c4 (     0x4) Extension.SupportedGroups.groups.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211374c8 (    0x2c) Extension.SupportedGroups.groups.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211374f4 (    0x20) Extension.SupportedGroups.groups.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137514 (     0x4) Extension.SupportedGroups.groups.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137518 (     0x4) Extension.SupportedGroups.init(groups:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113751c (    0x50) Extension.SupportedGroups.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113756c (    0x70) Extension.SupportedGroups.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211375dc (     0x8) protocol witness for Hashable.hashValue.getter in conformance Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211375e4 (    0x54) protocol witness for Hashable.hash(into:) in conformance Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137638 (    0x6c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211376a4 (    0x24) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211376c8 (     0xc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211376d4 (     0xc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211376e0 (   0x114) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211377f4 (   0x108) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211378fc (   0x108) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137a04 (     0xc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137a10 (    0xe8) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137af8 (     0xc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137b04 (     0xc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137b10 (    0xf8) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137c08 (   0x108) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137d10 (   0x11c) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137e2c (    0xfc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221137f28 (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138000 (    0xb8) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211380b8 (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211380bc (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211380c0 (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211380c4 (    0x5c) lazy protocol witness table accessor for type Range<Int> and conformance Range<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138120 (    0x48) __swift_instantiateConcreteTypeFromMangledNameAbstract [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138168 (     0x4) base witness table accessor for Equatable in Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113816c (    0x54) lazy protocol witness table accessor for type Extension.SupportedGroups and conformance Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211381c0 (    0x10) type metadata accessor for Extension.SupportedGroups [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211381d0 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211381d4 (    0x80) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138254 (   0x510) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138764 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138774 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138784 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138794 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211387a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211387b4 (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211387b8 (    0x6c) specialized static Array<A>.== infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138824 (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138828 (     0x4) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113882c (    0x6c) specialized static Array<A>.== infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138898 (   0x534) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221138dcc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138ddc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138dec (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138dfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138e0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221138e1c (   0x534) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221139350 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221139360 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221139370 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221139380 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221139390 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211393a0 (   0x110) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211394b0 (  0x190c) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113adbc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113adcc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113addc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113adec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113adfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae0c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022113ae44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae64 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae74 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ae94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aea4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aeb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aec4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aed4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aee4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113aef4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af04 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113af64 (    0x60) outlined copy of Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113afc4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022113affc (    0x14) outlined copy of Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b010 (     0xc) outlined copy of Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b01c (    0x28) outlined copy of Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b044 (    0x40) outlined copy of Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b084 (    0x60) outlined consume of Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b0e4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022113b11c (    0x14) outlined consume of Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b130 (     0xc) outlined consume of Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b13c (    0x28) outlined consume of Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b164 (    0x40) outlined consume of Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b1a4 (    0x5c) outlined init with take of Extension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b200 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b240 (     0x4) Random.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b244 (   0x184) Random.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b3c8 (    0x4c) one-time initialization function for helloRetryRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b414 (    0x4c) Random.helloRetryRequest.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b460 (    0x54) static Random.helloRetryRequest.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b4b4 (    0x18) static Random.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b4cc (    0x54) Random.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b520 (    0x88) Random.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b5a8 (    0x80) protocol witness for Hashable.hashValue.getter in conformance Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b628 (    0x58) protocol witness for Hashable.hash(into:) in conformance Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b680 (    0x7c) protocol witness for Hashable._rawHashValue(seed:) in conformance Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b6fc (    0x3c) protocol witness for static Equatable.== infix(_:_:) in conformance Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b738 (    0x90) ByteBuffer.writeRandom(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b7c8 (   0x1c0) ByteBuffer.readRandom() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113b988 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113b998 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113b9a8 (    0x88) specialized Random.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113ba30 (   0x224) specialized Random.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bc54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113bc64 (     0x4) base witness table accessor for Equatable in Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bc68 (    0x54) lazy protocol witness table accessor for type Random and conformance Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bcbc (    0x34) initializeBufferWithCopyOfBuffer for Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bcf0 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bcf4 (     0xc) __swift_memcpy32_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bd00 (    0x20) getEnumTagSinglePayload for Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bd20 (    0x2c) storeEnumTagSinglePayload for Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bd4c (    0x10) type metadata accessor for Random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bd5c (    0x58) lazy protocol witness table accessor for type Data.Iterator and conformance Data.Iterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113bdb4 (    0x60) outlined destroy of EnumeratedSequence<Data>.Iterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113be14 (    0x38) static Extension.ServerName.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113be4c (   0x204) ByteBuffer.writeServerName(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c050 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c060 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c070 (   0x27c) ByteBuffer.readServerName(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c2ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c2fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c30c (    0x40) Extension.ServerName.Names.hostName.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c34c (    0x40) Extension.ServerName.Names.hostName.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c38c (    0x20) Extension.ServerName.Names.hostName.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c3ac (     0x4) Extension.ServerName.Names.hostName.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c3b0 (     0x4) Extension.ServerName.Names.init(hostName:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c3b4 (   0x114) Extension.ServerName.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c4c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c4d8 (     0x4) static Extension.ServerName.Names.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c4dc (   0x114) Extension.ServerName.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c5f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c600 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c60c (     0xc) protocol witness for Hashable.hash(into:) in conformance Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c618 (   0x10c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c724 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c734 (    0x48) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c77c (    0xe0) Extension.ServerName.Names.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c85c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c86c (    0xe4) Extension.ServerName.Names.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c950 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113c960 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113c96c (    0xdc) protocol witness for Hashable.hash(into:) in conformance Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113ca48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113ca58 (    0xe4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113cb3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113cb4c (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113cb68 (   0x8f0) closure #1 in ByteBuffer.readServerName(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d458 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d468 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d478 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d488 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d498 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d4f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022113d508 (     0x4) base witness table accessor for Equatable in Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d50c (    0x54) lazy protocol witness table accessor for type Extension.ServerName and conformance Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d560 (     0x4) base witness table accessor for Equatable in Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d564 (    0x54) lazy protocol witness table accessor for type Extension.ServerName.Names and conformance Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d5b8 (    0x64) initializeBufferWithCopyOfBuffer for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d61c (    0x18) destroy for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d634 (    0x64) initializeWithCopy for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d698 (    0xa4) assignWithCopy for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d73c (    0x6c) assignWithTake for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d7a8 (    0x54) getEnumTagSinglePayload for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d7fc (    0x54) storeEnumTagSinglePayload for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d850 (    0x28) getEnumTag for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d878 (     0x4) destructiveProjectEnumData for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d87c (    0x34) destructiveInjectEnumTag for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d8b0 (    0x10) type metadata accessor for Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d8c0 (    0x4c) initializeBufferWithCopyOfBuffer for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d90c (     0xc) destroy for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d918 (    0x4c) initializeWithCopy for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d964 (    0x54) assignWithCopy for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d9b8 (    0x44) assignWithTake for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113d9fc (    0x54) getEnumTagSinglePayload for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113da50 (    0x50) storeEnumTagSinglePayload for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113daa0 (    0x10) type metadata accessor for Extension.ServerName.Names [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113dab0 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113db34 (    0x74) ExportedAuthenticator.init(authenticator:handshakeStateMachine:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113dba8 (    0x4c) type metadata accessor for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022113dbf4 (  0x37ec) ExportedAuthenticator.validate(keyParser:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211413e0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221141400 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221141420 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221141440 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221141450 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221141460 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221141470 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221141480 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221141490 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211414a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211414b0 (    0x68) closure #1 in ExportedAuthenticator.validate(keyParser:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221141518 (   0x194) ExportedAuthenticator.generateDataToSignInAuthenticatorCertificateVerify(authenticatorTranscriptHash:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211416ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211416bc (   0x1b0) ExportedAuthenticator.extractKey(certificateMessage:keyParser:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114186c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114187c (   0x2e4) specialized static HKDF.tlsExporter<A>(secret:label:context:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221141b60 (   0x554) specialized SessionKeyManager.generateTLSExporterKey(label:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211420b4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211420c8 (   0x3c4) specialized SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114248c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114249c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211424ac (   0x1e4) specialized SessionKeyManager.generateHMACForAuthenticator(transcript:key:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142690 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211426a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211426b0 (    0x54) lazy protocol witness table accessor for type TLSError and conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142704 (    0x5c) outlined init with take of HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142760 (   0x104) outlined copy of HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142864 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221142884 (    0x64) outlined release of HandshakeMessageParser.ParseResult? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211428e8 (    0xf0) outlined consume of HandshakeMessageParser.ParseResult? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211429d8 (   0x104) outlined consume of HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142adc (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221142afc (    0x64) outlined retain of HandshakeMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142b60 (    0x64) outlined init with copy of HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142bc4 (    0x1c) partial apply for closure #1 in ExportedAuthenticator.validate(keyParser:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142be0 (    0x68) outlined init with take of HandshakeStateMachine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142c48 (    0x60) outlined destroy of HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142ca8 (    0x54) lazy protocol witness table accessor for type Data and conformance Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142cfc (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142d1c (   0x108) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142e24 (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142efc (    0xa8) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221142fa4 (   0x1e4) specialized static Data.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221143188 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221143198 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211431a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211431b8 (  0x2af8) initializeBufferWithCopyOfBuffer for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221145cb0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221145ccc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145cdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145cec (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145cfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145d0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145d1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145d2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221145d3c (  0x1410) destroy for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114714c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221147168 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221147178 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221147188 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221147198 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211471a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211471b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211471c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211471d8 (  0x2ad4) initializeWithCopy for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221149cac (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221149cc8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149cd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149ce8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149cf8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149d08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149d18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149d28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221149d38 (  0x2b40) assignWithCopy for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114c878 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022114c894 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c8f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114c904 (    0x54) outlined destroy of ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114c958 (   0x230) __swift_assign_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114cb88 (  0x2398) initializeWithTake for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022114ef20 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022114ef3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114ef9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022114efac (  0x22c4) assignWithTake for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151270 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022115128c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115129c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211512fc (    0x14) getEnumTagSinglePayload for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151310 (    0xb4) (null) [FUNC, FunctionStarts] 
                0x00000002211513c4 (    0x14) storeEnumTagSinglePayload for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211513d8 (    0xb0) (null) [FUNC, FunctionStarts] 
                0x0000000221151488 (    0xa4) type metadata completion function for ExportedAuthenticator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115152c (    0x68) outlined init with copy of SessionKeyManager<SHA384>.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151594 (    0x64) outlined init with take of HandshakeMessageParser.ParseResult? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211515f8 (    0x5c) outlined destroy of SymmetricKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151654 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151658 (    0x1c) partial apply for specialized closure #1 in static HMAC.authenticationCode<A>(bytes:using:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151674 (    0x1c) partial apply for closure #1 in SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151690 (    0x48) lazy protocol witness table accessor for type SHA384 and conformance SHA384 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211516d8 (     0xc) ExtensionType.serverName.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211516e4 (     0xc) ExtensionType.supportedGroups.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211516f0 (     0xc) ExtensionType.supportedVersions.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211516fc (     0xc) ExtensionType.applicationLayerProtocolNegotiation.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151708 (     0xc) ExtensionType.keyShare.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151714 (     0xc) ExtensionType.earlyData.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151720 (     0xc) ExtensionType.signatureAlgorithms.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115172c (     0xc) ExtensionType.serverCertificateType.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151738 (     0xc) ExtensionType.quicTransportParameters.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151744 (     0xc) ExtensionType.preSharedKeyKexModes.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151750 (     0xc) ExtensionType.preSharedKey.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115175c (     0xc) ExtensionType.ticketRequest.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151768 (    0x94) ByteBuffer.writeExtensionType(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211517fc (   0x158) ByteBuffer.readExtensionType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151954 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221151964 (     0x4) ExtensionType.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151968 (     0x8) ExtensionType.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151970 (    0x20) ExtensionType.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151990 (     0x4) ExtensionType.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151994 (     0x4) ExtensionType.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151998 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519a8 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519b4 (     0x8) static ExtensionType.serverName.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519bc (     0x8) static ExtensionType.supportedGroups.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519c4 (     0x8) static ExtensionType.signatureAlgorithms.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519cc (     0x8) static ExtensionType.applicationLayerProtocolNegotiation.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519d4 (     0x8) static ExtensionType.serverCertificateType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519dc (     0x8) static ExtensionType.earlyData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519e4 (     0x8) static ExtensionType.supportedVersions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519ec (     0x8) static ExtensionType.keyShare.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519f4 (     0x8) static ExtensionType.quicTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211519fc (     0x8) static ExtensionType.preSharedKeyKexModes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151a04 (     0x8) static ExtensionType.preSharedKey.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151a0c (     0x8) static ExtensionType.ticketRequest.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151a14 (    0x48) protocol witness for Hashable.hashValue.getter in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151a5c (    0x2c) protocol witness for Hashable.hash(into:) in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151a88 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151acc (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151ae0 (   0x21c) ExtensionType.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151cfc (    0xec) (null) [FUNC, FunctionStarts] 
                0x0000000221151de8 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151df0 (     0x4) base witness table accessor for Equatable in ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151df4 (    0x54) lazy protocol witness table accessor for type ExtensionType and conformance ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151e48 (    0x10) type metadata accessor for ExtensionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151e58 (     0x4) TLSMessageSerializer.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151e5c (   0x10c) TLSMessageSerializer.writeHandshakeMessage(_:into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221151f68 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221151f88 (   0x1ac) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152134 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152144 (   0x1ac) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211522f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152300 (   0x194) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152494 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211524a4 (   0x1bc) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152660 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152670 (   0x29c) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115290c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115291c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115292c (   0x1bc) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152ae8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152af8 (   0x1a8) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152ca0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152cb0 (   0x1ac) specialized ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152e5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221152e6c (    0x10) type metadata accessor for TLSMessageSerializer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221152e7c (   0x1c4) HandshakeStateMachine.generateTLSExporterKey(label:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221153040 (    0x4c) type metadata accessor for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115308c (   0x1ac) HandshakeStateMachine.generateHashForAuthenticator(transcript:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221153238 (   0x1bc) HandshakeStateMachine.generateHMACForAuthenticator(transcript:key:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211533f4 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221153478 (   0x25c) HandshakeStateMachine.init(configuration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211536d4 (   0x12c) HandshakeStateMachine.init(sessionTicket:configuration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221153800 (   0x408) HandshakeStateMachine.init(sessionTicket:configuration:clock:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221153c08 (  0x1328) HandshakeStateMachine.startHandshake() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221154f30 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221154f4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221154f5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221154f6c (   0x190) HandshakeStateMachine.receivedNetworkData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211550fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115510c (  0x20e4) HandshakeStateMachine.processHandshake() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211571f0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022115720c (   0x430) HandshakeStateMachine.handleReadServerHello() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115763c (   0x420) HandshakeStateMachine.handleReadServerFinished() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221157a5c (   0x470) HandshakeStateMachine.handleReadNewSessionTicket() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221157ecc (   0x39c) HandshakeStateMachine.peerQUICTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221158268 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221158284 (   0x39c) HandshakeStateMachine.peerALPN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221158620 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022115863c (   0x63c) HandshakeStateMachine.negotiatedCiphersuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221158c78 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221158c94 (   0x330) HandshakeStateMachine.earlyDataAccepted.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221158fc4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221158fe0 (    0xd4) HandshakeStateMachine.clientRandom.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211590b4 (   0x470) HandshakeStateMachine.logUnexpectedMessage(message:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159524 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221159540 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221159560 (   0x100) Collection<>.confirmNegotiated(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159660 (   0x320) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159980 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221159990 (   0x328) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159cb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221159cc8 (    0xb4) specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159d7c (    0xb8) specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159e34 (    0x8c) specialized closure #1 in closure #3 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159ec0 (    0x68) outlined assign with take of SessionTicket? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159f28 (    0x78) outlined release of HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221159fa0 (    0x64) outlined init with copy of SwiftTLSClock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a004 (     0xc) outlined copy of Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a010 (    0x68) outlined init with copy of SessionTicket? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a078 (    0x7c) outlined retain of HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a0f4 (   0x514) specialized Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a608 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115a618 (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000022115a638 (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000022115a658 (    0x68) outlined init with copy of HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a6c0 (    0x60) outlined destroy of HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115a720 (  0x2990) initializeBufferWithCopyOfBuffer for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115d0b0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022115d0cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d0dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d0ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d0fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d10c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d11c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d12c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115d13c (  0x13e4) destroy for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022115e520 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022115e53c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e54c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e55c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e56c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e57c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e58c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e59c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022115e5ac (  0x2aa4) initializeWithCopy for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221161050 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022116106c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116107c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116108c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116109c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211610ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211610bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211610cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211610dc (  0x2aa0) assignWithCopy for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221163b7c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221163b98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163ba8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163bb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163bc8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163bd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163be8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163bf8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221163c08 (  0x236c) initializeWithTake for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221165f74 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221165f90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165fa0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165fb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165fc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165fd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165fe0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221165ff0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221166000 (  0x2258) assignWithTake for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168258 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000221168274 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221168284 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221168294 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211682a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211682b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211682c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211682d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211682e4 (    0x14) getEnumTagSinglePayload for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211682f8 (    0xc8) (null) [FUNC, FunctionStarts] 
                0x00000002211683c0 (    0x14) storeEnumTagSinglePayload for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211683d4 (    0xc4) (null) [FUNC, FunctionStarts] 
                0x0000000221168498 (    0xb8) type metadata completion function for HandshakeStateMachine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168550 (     0x8) type metadata instantiation function for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168558 (    0x7c) type metadata completion function for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211685d4 (   0x13c) initializeBufferWithCopyOfBuffer for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168710 (    0xc4) destroy for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211687d4 (    0xf8) initializeWithCopy for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211688cc (   0x16c) assignWithCopy for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168a38 (    0xf8) initializeWithTake for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168b30 (   0x16c) assignWithTake for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168c9c (   0x190) getEnumTagSinglePayload for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221168e2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221168e3c (   0x23c) storeEnumTagSinglePayload for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169078 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022116908c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211690a0 (    0x30) getEnumTag for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211690d0 (     0x4) destructiveProjectEnumData for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211690d4 (    0x30) destructiveInjectEnumTag for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169104 (    0x18) type metadata accessor for HandshakeStateMachine.ProcessStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116911c (    0x68) outlined init with take of HandshakeMessageParser.ParseResult? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169184 (    0x5c) outlined release of HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211691e0 (    0x68) outlined init with take of HandshakeState.ReadyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169248 (    0x5c) outlined destroy of SessionTicket? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211692a4 (    0x68) partial apply for specialized closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116930c (    0x14) outlined consume of Data._Representation? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169320 (    0x18) outlined init with take of ContiguousBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169338 (    0x1c) partial apply for specialized closure #1 in closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169354 (    0x6c) specialized UnsafeMutableRawBufferPointer.withMemoryRebound<A, B>(to:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211693c0 (    0x30) __swift_instantiateGenericMetadata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211693f0 (     0xc) CipherSuite.TLS_AES_256_GCM_SHA384.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211693fc (     0x4) CipherSuite.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169400 (     0x8) CipherSuite.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169408 (    0x20) CipherSuite.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169428 (     0x4) CipherSuite.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116942c (     0x4) CipherSuite.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169430 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169440 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116944c (     0x8) static CipherSuite.TLS_AES_256_GCM_SHA384.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169454 (    0x48) protocol witness for Hashable.hashValue.getter in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116949c (    0x2c) protocol witness for Hashable.hash(into:) in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211694c8 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116950c (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169520 (    0x98) CipherSuite.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211695b8 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211695c0 (    0x94) ByteBuffer.writeCipherSuite(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169654 (   0x158) ByteBuffer.readCipherSuite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211697ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211697bc (     0x4) base witness table accessor for Equatable in CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211697c0 (    0x54) lazy protocol witness table accessor for type CipherSuite and conformance CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169814 (    0x10) type metadata accessor for CipherSuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169824 (    0x40) FinishedMessage.verifyData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169864 (    0x40) FinishedMessage.verifyData.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211698a4 (    0x20) FinishedMessage.verifyData.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211698c4 (     0x4) FinishedMessage.verifyData.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211698c8 (     0x4) FinishedMessage.init(verifyData:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211698cc (    0xe0) FinishedMessage.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211699ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211699bc (     0x4) static FinishedMessage.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211699c0 (    0xe4) FinishedMessage.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169aa4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169ab4 (     0xc) protocol witness for Hashable.hashValue.getter in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169ac0 (    0xdc) protocol witness for Hashable.hash(into:) in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169b9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169bac (    0xe4) protocol witness for Hashable._rawHashValue(seed:) in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169c90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169ca0 (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169cbc (     0x8) static FinishedMessage.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169cc4 (    0x30) FinishedMessage.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169cf4 (    0x18) FinishedMessage.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169d0c (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169d14 (    0x30) protocol witness for HandshakeMessageProtocol.write(into:) in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169d44 (    0x30) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169d74 (   0x160) specialized FinishedMessage.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169ed4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169ee4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169ef4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221169f04 (     0x4) base witness table accessor for Equatable in FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169f08 (    0x54) lazy protocol witness table accessor for type FinishedMessage and conformance FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169f5c (    0x4c) initializeBufferWithCopyOfBuffer for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169fa8 (     0xc) destroy for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221169fb4 (    0x4c) initializeWithCopy for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a000 (    0x54) assignWithCopy for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a054 (    0x44) assignWithTake for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a098 (    0x54) getEnumTagSinglePayload for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a0ec (    0x50) storeEnumTagSinglePayload for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a13c (    0x10) type metadata accessor for FinishedMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a14c (     0x4) static ByteBuffer.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a150 (   0x128) ByteBuffer.writeImmutableBuffer(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a278 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a288 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a298 (   0x1d4) ByteBuffer.writeVariableLengthVector<A>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a46c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a47c (    0x4c) ByteBuffer.readableBytes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a4c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a4d8 (   0x124) ByteBuffer.readSlice(length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a5fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a60c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a61c (    0x48) ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a664 (    0x5c) ByteBuffer.readableBytesView.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a6c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116a6d0 (   0x18c) ByteBuffer.writeInteger<A>(_:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116a85c (   0x2b8) ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ab14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116ab24 (    0x48) ByteBuffer.writeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ab6c (   0x20c) ByteBuffer.setInteger<A>(_:at:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ad78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116ad88 (    0x44) ByteBuffer.writerIndex.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116adcc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116addc (    0x84) ByteBuffer.moveReaderIndex(to:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ae60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116ae70 (    0x84) ByteBuffer.init(data:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116aef4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116af04 (    0x80) ByteBuffer.init<A>(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116af84 (     0x8) ByteBuffer.readerIndex.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116af8c (    0x40) static FixedWidthInteger.byteWidth.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116afcc (    0x80) closure #1 in ByteBuffer.writeInteger<A>(_:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b04c (    0x64) closure #1 in ByteBuffer.setInteger<A>(_:at:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b0b0 (    0xb4) closure #1 in ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b164 (   0x36c) ByteBuffer.setImmutableBuffer(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b4d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b4e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b4f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b500 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b510 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b520 (    0x70) ByteBuffer.writeBuffer(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b590 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b5a0 (    0xdc) ByteBuffer.readBytes(length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b67c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b68c (    0x40) ByteBuffer.writeBytes(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b6cc (    0x10) ByteBuffer.moveWriterIndex(forwardBy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b6dc (   0x17c) ByteBuffer.writeVariableLengthVectorUInt24(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b858 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116b868 (    0xf8) ByteBuffer.writeUInt24(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b960 (    0x68) ByteBuffer.setUInt24(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116b9c8 (   0x24c) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116bc14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116bc24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116bc34 (   0x368) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116bf9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116bfac (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116bfbc (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c01c (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c07c (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c0dc (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c13c (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c19c (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c1fc (    0x60) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c25c (   0x248) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c4a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c4b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c4c4 (   0x1dc) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c6a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c6b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c6c0 (   0x244) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116c904 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c914 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116c924 (   0x224) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116cb48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116cb58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116cb68 (   0x3d0) specialized closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116cf38 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116cf48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116cf58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116cf68 (   0xa70) closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116d9d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116d9e8 (   0x218) ByteBuffer.rewindOnNilOrError<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116dc00 (    0x40) ByteBuffer.readVariableLengthVectorUInt24<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116dc40 (   0x24c) specialized closure #1 in ByteBuffer.readVariableLengthVectorUInt24<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116de8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116de9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116deac (   0x344) closure #1 in ByteBuffer.readVariableLengthVectorUInt24<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e1f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e200 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e210 (   0x158) ByteBuffer.readUInt24() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e368 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e378 (    0xb4) ByteBuffer.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e42c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e43c (    0xc8) ByteBuffer.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e504 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e514 (    0xc4) protocol witness for Hashable.hashValue.getter in conformance ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e5d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e5e8 (    0xac) protocol witness for Hashable.hash(into:) in conformance ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e694 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e6a4 (    0xc0) protocol witness for Hashable._rawHashValue(seed:) in conformance ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e764 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116e774 (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e790 (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e868 (    0xdc) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e944 (    0xa0) UnsafeMutableRawBufferPointer.withMemoryRebound<A, B>(to:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116e9e4 (    0xcc) closure #2 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116eab0 (    0xc4) closure #3 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116eb74 (   0x144) closure #1 in closure #3 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ecb8 (    0xa8) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ed60 (   0x1c0) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116ef20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116ef30 (   0x130) specialized static ByteBuffer.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f060 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116f070 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116f080 (    0x54) lazy protocol witness table accessor for type Int and conformance Int [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f0d4 (    0x24) partial apply for closure #1 in ByteBuffer.readVariableLengthVector<A, B>(lengthFieldType:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f0f8 (    0x1c) partial apply for closure #1 in ByteBuffer.writeInteger<A>(_:as:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f114 (    0x1c) partial apply for closure #1 in ByteBuffer.readInteger<A>(as:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f130 (    0x60) partial apply for closure #1 in ByteBuffer.setInteger<A>(_:at:as:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f190 (   0x188) specialized ByteBuffer.writeVariableLengthVectorUInt24(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f318 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116f328 (    0xa0) specialized Data._Representation.init(count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f3c8 (   0x588) specialized Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f950 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116f960 (    0x88) specialized ByteBuffer.init<A>(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116f9e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116f9f8 (    0x20) partial apply for closure #1 in ByteBuffer.readVariableLengthVectorUInt24<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fa18 (     0x4) base witness table accessor for Equatable in ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fa1c (    0x54) lazy protocol witness table accessor for type ByteBuffer and conformance ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fa70 (    0x4c) initializeBufferWithCopyOfBuffer for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fabc (     0xc) destroy for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fac8 (    0x4c) initializeWithCopy for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fb14 (    0x54) assignWithCopy for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fb68 (    0x44) assignWithTake for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fbac (    0x54) getEnumTagSinglePayload for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fc00 (    0x50) storeEnumTagSinglePayload for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fc50 (    0x10) type metadata accessor for ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fc60 (   0x174) specialized ByteBuffer.writeVariableLengthVectorUInt24(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fdd4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022116fde4 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fde8 (    0x60) outlined destroy of ContiguousBytes? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fe48 (    0x20) partial apply for closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fe68 (    0x20) partial apply for closure #1 in closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022116fe88 (   0x2a0) static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170128 (   0x130) specialized Array.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170258 (   0x230) specialized Array.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170488 (    0xec) closure #1 in static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170574 (    0xf0) static HKDF.deriveSecret<A>(secret:label:transcriptHash:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170664 (   0x23c) static HKDF.tlsExporter<A>(secret:label:context:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211708a0 (    0x74) static HKDF.extract(inputKeyMaterial:salt:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170914 (    0x1c) partial apply for closure #1 in static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170930 (    0x5c) lazy protocol witness table accessor for type [UInt8] and conformance <A> [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117098c (    0x78) partial apply for closure #1 in static HKDF.extract(inputKeyMaterial:salt:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170a04 (    0x7c) _StringGuts._slowEnsureMatchingEncoding(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170a80 (     0x4) static Extension.QUICTransportParameters.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170a84 (     0x4) ByteBuffer.writeQUICTransportParameters(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170a88 (   0x1b0) ByteBuffer.readQUICTransportParameters(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170c38 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170c48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170c58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170c68 (     0x4) Extension.QUICTransportParameters.init(opaqueOffer:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170c6c (    0x40) Extension.QUICTransportParameters.opaqueOffer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170cac (    0x40) Extension.QUICTransportParameters.opaqueOffer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170cec (    0x20) Extension.QUICTransportParameters.opaqueOffer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170d0c (     0x4) Extension.QUICTransportParameters.opaqueOffer.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170d10 (    0xe0) Extension.QUICTransportParameters.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170df0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170e00 (    0xe4) Extension.QUICTransportParameters.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170ee4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170ef4 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170f00 (    0xdc) protocol witness for Hashable.hash(into:) in conformance Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221170fdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221170fec (    0xe4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211710d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211710e0 (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211710fc (     0x4) base witness table accessor for Equatable in Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171100 (    0x54) lazy protocol witness table accessor for type Extension.QUICTransportParameters and conformance Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171154 (    0x4c) initializeBufferWithCopyOfBuffer for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211711a0 (     0xc) destroy for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211711ac (    0x4c) initializeWithCopy for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211711f8 (    0x54) assignWithCopy for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117124c (    0x44) assignWithTake for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171290 (    0x54) getEnumTagSinglePayload for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211712e4 (    0x50) storeEnumTagSinglePayload for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171334 (    0x10) type metadata accessor for Extension.QUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171344 (    0x24) static TLSError.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171368 (     0x4) protocol witness for Error._domain.getter in conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117136c (     0x4) protocol witness for Error._code.getter in conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171370 (     0x4) protocol witness for Error._userInfo.getter in conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171374 (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171378 (    0x3c) protocol witness for static Equatable.== infix(_:_:) in conformance TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211713b4 (   0x128) specialized static TLSError.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211714dc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000221171508 (    0x14) __swift_memcpy5_2 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117151c (    0x20) getEnumTagSinglePayload for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117153c (    0x2c) storeEnumTagSinglePayload for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171568 (    0x1c) getEnumTag for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171584 (     0x4) destructiveProjectEnumData for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171588 (    0x20) destructiveInjectEnumTag for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211715a8 (    0x10) type metadata accessor for TLSError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211715b8 (    0x84) specialized Data.replaceSubrange<A>(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117163c (     0x8) ServerHello.legacyVersion.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171644 (     0x8) ServerHello.legacyVersion.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117164c (    0x20) ServerHello.legacyVersion.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117166c (     0x4) ServerHello.legacyVersion.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171670 (     0xc) ServerHello.random.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117167c (     0xc) ServerHello.random.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171688 (    0x20) ServerHello.random.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211716a8 (     0x4) ServerHello.random.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211716ac (    0x18) ServerHello.legacySessionIDEcho.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211716c4 (    0x18) ServerHello.legacySessionIDEcho.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211716dc (    0x20) ServerHello.legacySessionIDEcho.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211716fc (     0x4) ServerHello.legacySessionIDEcho.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171700 (     0x8) ServerHello.cipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171708 (     0x8) ServerHello.cipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171710 (    0x20) ServerHello.cipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171730 (     0x4) ServerHello.cipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171734 (     0x8) ServerHello.legacyCompressionMethod.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117173c (     0x8) ServerHello.legacyCompressionMethod.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171744 (    0x20) ServerHello.legacyCompressionMethod.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171764 (     0x4) ServerHello.legacyCompressionMethod.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171768 (     0x8) ServerHello.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171770 (    0x2c) ServerHello.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117179c (    0x20) ServerHello.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211717bc (     0x4) ServerHello.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211717c0 (    0x3c) ServerHello.init(legacyVersion:random:legacySessionIDEcho:cipherSuite:legacyCompressionMethod:extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211717fc (    0x98) ServerHello.isHelloRetryRequest.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171894 (    0x80) ServerHello.supportedVersion.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171914 (   0x144) ServerHello.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171a58 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221171a90 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171ad0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221171b08 (     0x4) static ServerHello.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171b0c (   0x180) ServerHello.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171c8c (    0x44) protocol witness for Hashable.hashValue.getter in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171cd0 (    0x44) protocol witness for Hashable.hash(into:) in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171d14 (   0x1ac) protocol witness for Hashable._rawHashValue(seed:) in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171ec0 (    0x5c) protocol witness for static Equatable.== infix(_:_:) in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171f1c (     0x8) static ServerHello.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221171f24 (   0x5e8) ServerHello.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117250c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117251c (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221172554 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172564 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172574 (    0x4c) ServerHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211725c0 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211725c8 (    0x44) protocol witness for HandshakeMessageProtocol.write(into:) in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117260c (    0x4c) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172658 (   0x10c) specialized static ServerHello.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172764 (   0x774) specialized ServerHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172ed8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172ee8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172ef8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172f08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172f18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172f28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221172f38 (     0x4) base witness table accessor for Equatable in ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172f3c (    0x54) lazy protocol witness table accessor for type ServerHello and conformance ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172f90 (    0x34) initializeBufferWithCopyOfBuffer for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172fc4 (     0x8) destroy for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221172fcc (    0x70) initializeWithCopy for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117303c (    0xa4) assignWithCopy for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211730e0 (    0x1c) __swift_memcpy96_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211730fc (    0x74) assignWithTake for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173170 (    0x48) getEnumTagSinglePayload for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211731b8 (    0x58) storeEnumTagSinglePayload for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173210 (    0x10) type metadata accessor for ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173220 (    0x64) outlined init with take of Random? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173284 (     0xc) CertificateType.rawPublicKey.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173290 (     0xc) CertificateType.x509.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117329c (     0x4) CertificateType.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732a0 (     0x8) CertificateType.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732a8 (    0x20) CertificateType.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732c8 (     0x4) CertificateType.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732cc (     0x4) CertificateType.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732d0 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732e0 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732ec (     0x8) static CertificateType.x509.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732f4 (     0x8) static CertificateType.rawPublicKey.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211732fc (    0x48) protocol witness for Hashable.hashValue.getter in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173344 (    0x2c) protocol witness for Hashable.hash(into:) in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173370 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211733b4 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211733c8 (    0xf0) CertificateType.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211734b8 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211734c0 (    0x8c) ByteBuffer.writeCertificateType(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117354c (   0x150) ByteBuffer.readCertificateType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117369c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211736ac (     0x4) base witness table accessor for Equatable in CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211736b0 (    0x54) lazy protocol witness table accessor for type CertificateType and conformance CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173704 (    0x10) type metadata accessor for CertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173714 (     0xc) HandshakeType.certificateVerify.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173720 (     0xc) HandshakeType.clientHello.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117372c (     0xc) HandshakeType.encryptedExtensions.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173738 (     0xc) HandshakeType.finished.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173744 (     0xc) HandshakeType.serverHello.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173750 (     0x4) HandshakeType.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173754 (     0x8) HandshakeType.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117375c (    0x20) HandshakeType.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117377c (     0x4) HandshakeType.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173780 (     0x4) HandshakeType.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173784 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173794 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737a0 (     0x8) static HandshakeType.clientHello.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737a8 (     0x8) static HandshakeType.serverHello.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737b0 (     0xc) HandshakeType.newSessionTicket.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737bc (     0x8) static HandshakeType.newSessionTicket.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737c4 (     0xc) HandshakeType.endOfEarlyData.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737d0 (     0x8) static HandshakeType.endOfEarlyData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737d8 (     0x8) static HandshakeType.encryptedExtensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737e0 (     0xc) HandshakeType.certificate.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737ec (     0x8) static HandshakeType.certificate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211737f4 (     0xc) HandshakeType.certificateRequest.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173800 (     0x8) static HandshakeType.certificateRequest.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173808 (     0x8) static HandshakeType.certificateVerify.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173810 (     0x8) static HandshakeType.finished.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173818 (     0xc) HandshakeType.keyUpdate.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173824 (     0x8) static HandshakeType.keyUpdate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117382c (     0xc) HandshakeType.messageHash.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173838 (     0x8) static HandshakeType.messageHash.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173840 (    0x48) protocol witness for Hashable.hashValue.getter in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173888 (    0x2c) protocol witness for Hashable.hash(into:) in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211738b4 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211738f8 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117390c (   0x218) HandshakeType.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173b24 (    0x60) (null) [FUNC, FunctionStarts] 
                0x0000000221173b84 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173b8c (    0x8c) ByteBuffer.writeHandshakeType(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173c18 (   0x150) ByteBuffer.readHandshakeType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173d68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221173d78 (     0x4) base witness table accessor for Equatable in HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173d7c (    0x54) lazy protocol witness table accessor for type HandshakeType and conformance HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173dd0 (    0x10) type metadata accessor for HandshakeType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173de0 (     0x4) static Extension.KeyShare.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221173de4 (   0x490) ByteBuffer.writeKeyShare(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174274 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174284 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174294 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211742a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211742b4 (   0x33c) ByteBuffer.readKeyShare(messageType:helloRetryRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211745f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174600 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174610 (    0x5c) Extension.KeyShare.KeyShareEntry.init(group:keyExchange:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117466c (   0x178) Extension.KeyShare.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211747e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211747f4 (    0x30) static Extension.KeyShare.KeyShareEntry.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174824 (   0x15c) Extension.KeyShare.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174980 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174990 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117499c (     0xc) protocol witness for Hashable.hash(into:) in conformance Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211749a8 (   0x150) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174af8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174b08 (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b24 (     0x4) Extension.KeyShare.KeyShareEntry.group.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b28 (     0x8) Extension.KeyShare.KeyShareEntry.group.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b30 (    0x20) Extension.KeyShare.KeyShareEntry.group.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b50 (     0x4) Extension.KeyShare.KeyShareEntry.group.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b54 (    0x48) Extension.KeyShare.KeyShareEntry.keyExchange.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174b9c (    0x40) Extension.KeyShare.KeyShareEntry.keyExchange.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174bdc (    0x20) Extension.KeyShare.KeyShareEntry.keyExchange.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174bfc (     0x4) Extension.KeyShare.KeyShareEntry.keyExchange.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174c00 (    0xe8) Extension.KeyShare.KeyShareEntry.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174ce8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174cf8 (    0xfc) Extension.KeyShare.KeyShareEntry.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174df4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174e04 (    0x10) protocol witness for Hashable.hashValue.getter in conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174e14 (    0xe8) protocol witness for Hashable.hash(into:) in conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221174efc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221174f0c (    0xf4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175000 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175010 (    0x2c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117503c (   0x158) Extension.KeyShare.KeyShareEntry.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175194 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211751a4 (    0x10) protocol witness for CustomStringConvertible.description.getter in conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211751b4 (   0x16c) ByteBuffer.writeKeyShareEntry(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175320 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175330 (   0x338) ByteBuffer.readKeyShareEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175668 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175678 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175688 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175698 (   0x644) closure #1 in ByteBuffer.readKeyShare(messageType:helloRetryRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175cdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175cec (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175cfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221175d5c (    0xb0) specialized static Extension.KeyShare.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175e0c (     0x4) base witness table accessor for Equatable in Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175e10 (    0x54) lazy protocol witness table accessor for type Extension.KeyShare and conformance Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175e64 (     0x4) base witness table accessor for Equatable in Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175e68 (    0x54) lazy protocol witness table accessor for type Extension.KeyShare.KeyShareEntry and conformance Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175ebc (    0x10) destroy for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175ecc (    0x58) initializeWithCopy for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175f24 (    0x64) assignWithCopy for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175f88 (    0x40) assignWithTake for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221175fc8 (    0x48) getEnumTagSinglePayload for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176010 (    0x4c) storeEnumTagSinglePayload for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117605c (     0xc) getEnumTag for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176068 (    0x10) destructiveProjectEnumData for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176078 (    0x14) destructiveInjectEnumTag for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117608c (    0x10) type metadata accessor for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117609c (    0x34) initializeBufferWithCopyOfBuffer for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211760d0 (     0xc) destroy for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211760dc (    0x54) initializeWithCopy for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176130 (    0x5c) assignWithCopy for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117618c (    0x4c) assignWithTake for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211761d8 (    0x54) getEnumTagSinglePayload for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117622c (    0x50) storeEnumTagSinglePayload for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117627c (    0x10) type metadata accessor for Extension.KeyShare.KeyShareEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117628c (     0x4) initializeBufferWithCopyOfBuffer for Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176290 (     0x4) static Extension.ApplicationLayerProtocolNegotiation.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176294 (   0x124) ByteBuffer.writeALPN(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211763b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211763c8 (   0x24c) ByteBuffer.readALPN(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176614 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221176624 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221176634 (     0x4) Extension.ApplicationLayerProtocolNegotiation.init(opaqueOffer:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176638 (    0x40) Extension.ApplicationLayerProtocolNegotiation.opaqueOffer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176678 (    0x40) Extension.ApplicationLayerProtocolNegotiation.opaqueOffer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211766b8 (    0x20) Extension.ApplicationLayerProtocolNegotiation.opaqueOffer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211766d8 (     0x4) Extension.ApplicationLayerProtocolNegotiation.opaqueOffer.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211766dc (    0xe0) Extension.ApplicationLayerProtocolNegotiation.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211767bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211767cc (    0xe4) Extension.ApplicationLayerProtocolNegotiation.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211768b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211768c0 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211768cc (    0xdc) protocol witness for Hashable.hash(into:) in conformance Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211769a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211769b8 (    0xe4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176a9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221176aac (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176ac8 (     0x4) base witness table accessor for Equatable in Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176acc (    0x54) lazy protocol witness table accessor for type Extension.ApplicationLayerProtocolNegotiation and conformance Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176b20 (    0x4c) initializeBufferWithCopyOfBuffer for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176b6c (     0xc) destroy for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176b78 (    0x4c) initializeWithCopy for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176bc4 (    0x54) assignWithCopy for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176c18 (    0x44) assignWithTake for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176c5c (    0x54) getEnumTagSinglePayload for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176cb0 (    0x50) storeEnumTagSinglePayload for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d00 (    0x10) type metadata accessor for Extension.ApplicationLayerProtocolNegotiation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d10 (     0x8) NewSessionTicket.ticketLifetime.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d18 (     0x8) NewSessionTicket.ticketLifetime.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d20 (    0x20) NewSessionTicket.ticketLifetime.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d40 (     0x4) NewSessionTicket.ticketLifetime.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d44 (     0x8) NewSessionTicket.ticketAgeAdd.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d4c (     0x8) NewSessionTicket.ticketAgeAdd.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d54 (    0x20) NewSessionTicket.ticketAgeAdd.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d74 (     0x4) NewSessionTicket.ticketAgeAdd.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176d78 (    0x44) NewSessionTicket.ticketNonce.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176dbc (    0x40) NewSessionTicket.ticketNonce.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176dfc (    0x20) NewSessionTicket.ticketNonce.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176e1c (     0x4) NewSessionTicket.ticketNonce.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176e20 (    0x44) NewSessionTicket.ticket.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176e64 (    0x40) NewSessionTicket.ticket.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176ea4 (    0x20) NewSessionTicket.ticket.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176ec4 (     0x4) NewSessionTicket.ticket.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176ec8 (     0x8) NewSessionTicket.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176ed0 (    0x2c) NewSessionTicket.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176efc (    0x20) NewSessionTicket.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176f1c (     0x4) NewSessionTicket.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221176f20 (    0xe8) NewSessionTicket.init(ticketLifetime:ticketAgeAdd:ticketNonce:ticket:extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177008 (   0x224) NewSessionTicket.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117722c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117723c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117724c (    0x9c) static NewSessionTicket.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211772e8 (    0x40) NewSessionTicket.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177328 (    0x54) protocol witness for Hashable.hashValue.getter in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117737c (    0x3c) protocol witness for Hashable.hash(into:) in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211773b8 (    0x50) protocol witness for Hashable._rawHashValue(seed:) in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177408 (    0xd0) protocol witness for static Equatable.== infix(_:_:) in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211774d8 (     0x8) static NewSessionTicket.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211774e0 (   0x678) NewSessionTicket.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177b58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177b68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177b78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177b88 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221177bc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177bd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177be0 (    0x44) NewSessionTicket.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177c24 (   0x158) readEntireBuffer #1 (_:) in NewSessionTicket.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221177d7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177d8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177d9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221177dac (   0x50c) readExtensions #1 (_:) in NewSessionTicket.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211782b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211782c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211782d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211782e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211782f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221178308 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178310 (    0x3c) protocol witness for HandshakeMessageProtocol.write(into:) in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117834c (    0x44) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178390 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211783c8 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178408 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221178440 (   0x304) specialized NewSessionTicket.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178744 (     0x4) base witness table accessor for Equatable in NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178748 (    0x54) lazy protocol witness table accessor for type NewSessionTicket and conformance NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117879c (    0x34) initializeBufferWithCopyOfBuffer for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211787d0 (    0x48) destroy for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178818 (    0x74) initializeWithCopy for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117888c (    0xa0) assignWithCopy for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117892c (    0x14) __swift_memcpy64_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178940 (    0x6c) assignWithTake for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211789ac (    0x48) getEnumTagSinglePayload for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211789f4 (    0x50) storeEnumTagSinglePayload for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a44 (    0x10) type metadata accessor for NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a54 (     0x4) CertificateMessage.certificateRequestContext.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a58 (    0x20) CertificateMessage.certificateRequestContext.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a78 (     0x4) CertificateMessage.certificateRequestContext.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a7c (     0x8) CertificateMessage.certificateList.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178a84 (    0x20) CertificateMessage.certificateList.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178aa4 (     0x4) CertificateMessage.certificateList.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178aa8 (   0x100) CertificateMessage.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178ba8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221178bb8 (    0x38) static CertificateMessage.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178bf0 (   0x10c) CertificateMessage.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178cfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221178d0c (     0xc) protocol witness for Hashable.hashValue.getter in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178d18 (    0x18) protocol witness for Hashable.hash(into:) in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178d30 (   0x100) protocol witness for Hashable._rawHashValue(seed:) in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178e30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221178e40 (    0x18) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178e58 (    0x40) CertificateMessage.CertificateEntry.opaqueCertificateData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178e98 (     0x4) CertificateMessage.CertificateEntry.opaqueCertificateData.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178e9c (    0x40) CertificateMessage.certificateRequestContext.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178edc (    0x20) CertificateMessage.CertificateEntry.opaqueCertificateData.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178efc (     0x4) CertificateMessage.CertificateEntry.opaqueCertificateData.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f00 (     0x8) CertificateMessage.CertificateEntry.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f08 (    0x2c) CertificateMessage.CertificateEntry.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f34 (    0x20) CertificateMessage.CertificateEntry.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f54 (     0x4) CertificateMessage.CertificateEntry.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f58 (     0x4) CertificateMessage.CertificateEntry.init(opaqueCertificateData:extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178f5c (    0x7c) CertificateMessage.init(certificateRequestContext:certificateList:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221178fd8 (   0x164) CertificateMessage.CertificateEntry.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117913c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117914c (    0x38) static CertificateMessage.CertificateEntry.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179184 (    0x7c) static CertificateMessage.__derived_struct_equals(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179200 (    0x68) CertificateMessage.CertificateEntry.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179268 (    0x60) protocol witness for Hashable.hashValue.getter in conformance CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211792c8 (    0x18) protocol witness for Hashable.hash(into:) in conformance CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211792e0 (    0x14) protocol witness for Hashable.hash(into:) in conformance CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211792f4 (    0x5c) protocol witness for Hashable._rawHashValue(seed:) in conformance CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179350 (    0x18) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179368 (    0x7c) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211793e4 (     0x8) static CertificateMessage.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211793ec (   0x184) CertificateMessage.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179570 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179580 (   0x9cc) closure #2 in CertificateMessage.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221179f4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179f5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179f6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179f7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179f8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179f9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179fac (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221179fe4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221179ff4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a004 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a014 (   0x4fc) ByteBuffer.writeCertificateEntry(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a510 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a520 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022117a558 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a568 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a578 (    0x18) CertificateMessage.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a590 (   0x110) readCertificateEntries #1 (_:) in CertificateMessage.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a6a0 (   0x2e8) ByteBuffer.readCertificateEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a988 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a998 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117a9a8 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a9b0 (     0xc) protocol witness for HandshakeMessageProtocol.write(into:) in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a9bc (    0x30) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117a9ec (   0x50c) readExtensions #1 (_:) in ByteBuffer.readCertificateEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117aef8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117af08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117af18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117af28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117af38 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117af48 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022117af80 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117afc0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022117aff8 (   0x2e8) specialized CertificateMessage.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b2e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117b2f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117b300 (     0x4) base witness table accessor for Equatable in CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b304 (    0x54) lazy protocol witness table accessor for type CertificateMessage and conformance CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b358 (     0x4) base witness table accessor for Equatable in CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b35c (    0x54) lazy protocol witness table accessor for type CertificateMessage.CertificateEntry and conformance CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3b0 (     0x4) destroy for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3b4 (     0x4) initializeWithCopy for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3b8 (     0x4) assignWithCopy for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3bc (     0x4) assignWithTake for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3c0 (     0x4) getEnumTagSinglePayload for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3c4 (     0x4) storeEnumTagSinglePayload for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3c8 (    0x10) type metadata accessor for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b3d8 (    0x34) initializeBufferWithCopyOfBuffer for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b40c (     0x4) destroy for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b410 (    0x40) destroy for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b450 (     0x4) initializeWithCopy for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b454 (    0x50) initializeWithCopy for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b4a4 (     0x4) assignWithCopy for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b4a8 (    0x6c) assignWithCopy for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b514 (     0x4) assignWithTake for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b518 (    0x4c) assignWithTake for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b564 (     0x4) getEnumTagSinglePayload for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b568 (    0x48) getEnumTagSinglePayload for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b5b0 (     0x4) storeEnumTagSinglePayload for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b5b4 (    0x40) storeEnumTagSinglePayload for CertificateMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b5f4 (    0x10) type metadata accessor for CertificateMessage.CertificateEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b604 (     0x4) CertificateMessage.certificateList.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b608 (     0x4) CertificateMessage.init(certificateRequestContext:certificateList:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b60c (     0x4) initializeBufferWithCopyOfBuffer for CertificateMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b610 (     0x4) CertificateMessage.certificateRequestContext.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b614 (    0xec) specialized ByteBuffer.writeLengthPrefixedBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b700 (    0xe8) specialized ByteBuffer.writeLengthPrefixedBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b7e8 (    0xe0) ByteBuffer.writeLengthPrefixedBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117b8c8 (   0x380) ByteBuffer.readLengthPrefixed<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117bc48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117bc58 (   0xa1c) SessionTicket.init(serialized:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117c674 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117c684 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117c694 (   0x664) SessionTicket.isCompatibleWith(_:configuration:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117ccf8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117cd08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117cd18 (   0x3c8) specialized Sequence<>.contains(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d0e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117d0f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117d100 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117d110 (    0x60) specialized Sequence<>.contains(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d170 (    0x60) specialized Sequence<>.contains(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d1d0 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d254 (    0x68) SessionTicket.issued.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d2bc (    0x68) SessionTicket.issued.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d324 (    0x20) SessionTicket.issued.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d344 (     0x4) SessionTicket.issued.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d348 (    0x24) SessionTicket.lifetime.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d36c (    0x30) SessionTicket.lifetime.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d39c (    0x48) SessionTicket.lifetime.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d3e4 (     0x4) SessionTicket.lifetime.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d3e8 (    0x24) SessionTicket.ticketAgeAdd.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d40c (    0x30) SessionTicket.ticketAgeAdd.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d43c (    0x48) SessionTicket.ticketAgeAdd.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d484 (     0x4) SessionTicket.ticketAgeAdd.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d488 (    0x54) SessionTicket.nonce.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d4dc (    0x50) SessionTicket.nonce.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d52c (    0x48) SessionTicket.nonce.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d574 (     0x4) SessionTicket.nonce.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d578 (    0x54) SessionTicket.ticket.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d5cc (    0x50) SessionTicket.ticket.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d61c (    0x48) SessionTicket.ticket.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d664 (     0x4) SessionTicket.ticket.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d668 (    0x78) SessionTicket.psk.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d6e0 (    0x78) SessionTicket.psk.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d758 (    0x48) SessionTicket.psk.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d7a0 (     0x4) SessionTicket.psk.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d7a4 (    0x24) SessionTicket.maxEarlyDataSize.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d7c8 (    0x30) SessionTicket.maxEarlyDataSize.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d7f8 (    0x48) SessionTicket.maxEarlyDataSize.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d840 (     0x4) SessionTicket.maxEarlyDataSize.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d844 (    0x24) SessionTicket.cipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d868 (    0x30) SessionTicket.cipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d898 (    0x48) SessionTicket.cipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d8e0 (     0x4) SessionTicket.cipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d8e4 (    0x58) SessionTicket.alpn.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d93c (    0x54) SessionTicket.alpn.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d990 (    0x48) SessionTicket.alpn.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d9d8 (     0x4) SessionTicket.alpn.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117d9dc (    0x4c) SessionTicket.certificateBundle.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117da28 (    0x44) SessionTicket.certificateBundle.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117da6c (    0x48) SessionTicket.certificateBundle.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117dab4 (     0x4) SessionTicket.certificateBundle.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117dab8 (   0xbd8) SessionTicket.init(message:psk:cipherSuite:alpn:certificateBundle:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117e690 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022117e6c8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022117e700 (   0x68c) SessionTicket.serialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117ed8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117ed9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117edac (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117edbc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117edcc (   0x108) ByteBuffer.writeLengthPrefixedImmutableBuffer(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117eed4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117eee4 (   0x290) ByteBuffer.writeOptional<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f174 (   0x3d0) ByteBuffer.readOptional<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f544 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117f554 (    0x8c) SessionTicket.obfuscatedTicketAge(currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f5e0 (     0x4) static SessionTicket.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f5e4 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f5e8 (    0x54) ByteBuffer.writeLengthPrefixedString(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f63c (   0x2fc) ByteBuffer.readLengthPrefixedString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117f938 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117f948 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117f958 (   0x5b4) specialized Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022117ff0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117ff1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117ff2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022117ff3c (   0x120) specialized Set._Variant.insert(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118005c (   0x2ac) specialized _NativeSet.resize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180308 (   0x150) specialized _NativeSet.insertNew(_:at:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180458 (   0x17c) specialized _NativeSet.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211805d4 (   0x268) specialized _NativeSet.copyAndResize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118083c (    0x78) specialized static String._fromNonContiguousUnsafeBitcastUTF8Repairing<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211808b4 (    0x3c) closure #2 in String.init<A, B>(decoding:as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211808f0 (   0x22c) specialized static SessionTicket.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180b1c (    0x4c) type metadata accessor for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180b68 (    0x14) outlined consume of ByteBuffer?? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180b7c (    0x68) outlined init with take of PeerCertificateBundle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180be4 (    0x2c) outlined release of [Extension] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180c10 (    0x20) partial apply for closure #1 in PeerCertificateBundle.wouldBeTrusted(forKeys:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180c30 (    0x58) lazy protocol witness table accessor for type Date and conformance Date [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180c88 (    0x18) partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180ca0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221180cd8 (    0x68) outlined init with copy of PeerCertificateBundle.Bundle [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180d40 (    0x64) outlined assign with take of PeerCertificateBundle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180da4 (    0x30) outlined retain of ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180dd4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221180e0c (    0x60) outlined destroy of SessionTicket [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180e6c (    0x54) outlined release of NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180ec0 (    0x2c) partial apply for closure #1 in SessionTicket.serialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180eec (    0x5c) outlined destroy of SymmetricKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180f48 (    0x18) outlined init with take of _HasContiguousBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221180f60 (   0x2bc) initializeBufferWithCopyOfBuffer for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118121c (   0x1a0) destroy for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211813bc (   0x26c) initializeWithCopy for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181628 (   0x33c) assignWithCopy for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181964 (   0x208) initializeWithTake for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181b6c (   0x2d4) assignWithTake for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181e40 (    0x14) getEnumTagSinglePayload for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181e54 (   0x190) (null) [FUNC, FunctionStarts] 
                0x0000000221181fe4 (    0x14) storeEnumTagSinglePayload for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221181ff8 (   0x18c) (null) [FUNC, FunctionStarts] 
                0x0000000221182184 (   0x138) type metadata completion function for SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211822bc (    0x40) CertificateRequest.certificateRequestContext.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211822fc (    0x40) CertificateRequest.certificateRequestContext.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118233c (    0x20) CertificateRequest.certificateRequestContext.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118235c (     0x4) CertificateRequest.certificateRequestContext.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182360 (     0x8) CertificateRequest.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182368 (    0x2c) CertificateRequest.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182394 (    0x20) CertificateRequest.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211823b4 (     0x4) CertificateRequest.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211823b8 (    0x7c) CertificateRequest.init(certificateRequestContext:extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182434 (   0x164) CertificateRequest.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182598 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211825a8 (    0x60) static CertificateRequest.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182608 (    0x68) CertificateRequest.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182670 (    0x60) protocol witness for Hashable.hashValue.getter in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211826d0 (     0xc) protocol witness for Hashable.hash(into:) in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211826dc (    0x5c) protocol witness for Hashable._rawHashValue(seed:) in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182738 (    0x64) protocol witness for static Equatable.== infix(_:_:) in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118279c (     0x8) static CertificateRequest.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211827a4 (   0x570) CertificateRequest.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182d14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221182d24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221182d34 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221182d6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221182d7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221182d8c (    0x18) CertificateRequest.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221182da4 (   0x50c) readExtensions #1 (_:) in CertificateRequest.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211832b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211832c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211832d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211832e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211832f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221183300 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183308 (     0xc) protocol witness for HandshakeMessageProtocol.write(into:) in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183314 (    0x30) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183344 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022118337c (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211833bc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211833f4 (   0x1dc) specialized CertificateRequest.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211835d0 (     0x4) base witness table accessor for Equatable in CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211835d4 (    0x54) lazy protocol witness table accessor for type CertificateRequest and conformance CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183628 (    0x34) initializeBufferWithCopyOfBuffer for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118365c (    0x40) destroy for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118369c (    0x50) initializeWithCopy for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211836ec (    0x6c) assignWithCopy for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183758 (    0x4c) assignWithTake for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211837a4 (    0x48) getEnumTagSinglePayload for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211837ec (    0x40) storeEnumTagSinglePayload for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118382c (    0x10) type metadata accessor for CertificateRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118383c (    0x94) ByteBuffer.writeSignatureScheme(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211838d0 (   0x158) ByteBuffer.readSignatureScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221183a38 (     0xc) SignatureScheme.ecdsa_secp256r1_sha256.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a44 (     0x4) SignatureScheme.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a48 (     0x8) SignatureScheme.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a50 (    0x20) SignatureScheme.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a70 (     0x4) SignatureScheme.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a74 (     0x4) SignatureScheme.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a78 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a88 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a94 (     0x8) static SignatureScheme.ecdsa_secp256r1_sha256.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183a9c (     0xc) SignatureScheme.ecdsa_secp384r1_sha384.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183aa8 (     0x8) static SignatureScheme.ecdsa_secp384r1_sha384.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183ab0 (     0xc) SignatureScheme.rsa_pss_rsae_sha256.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183abc (     0x8) static SignatureScheme.rsa_pss_rsae_sha256.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183ac4 (    0x48) protocol witness for Hashable.hashValue.getter in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183b0c (    0x2c) protocol witness for Hashable.hash(into:) in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183b38 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183b7c (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183b90 (   0x100) SignatureScheme.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183c90 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183c98 (   0x148) specialized ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183de0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221183df0 (     0x4) base witness table accessor for Equatable in SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183df4 (    0x54) lazy protocol witness table accessor for type SignatureScheme and conformance SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183e48 (    0x10) type metadata accessor for SignatureScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183e58 (   0x140) specialized ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221183f98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221183fa8 (   0x140) specialized ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211840e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211840f8 (   0x14c) specialized ByteBuffer.readInteger<A>(as:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184244 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221184254 (    0x24) static Extension.EarlyData.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184278 (    0x9c) ByteBuffer.writeEarlyDataExtension(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184314 (   0x1d0) ByteBuffer.readEarlyDataExtension(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211844e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211844f4 (    0x1c) Extension.EarlyData.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184510 (    0x10) Extension.EarlyData.maxEarlyDataSize.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184520 (    0x20) Extension.EarlyData.maxEarlyDataSize.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184540 (     0x4) Extension.EarlyData.maxEarlyDataSize.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184544 (    0x18) Extension.EarlyData.init(maxEarlyDataSize:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118455c (    0x44) Extension.EarlyData.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211845a0 (    0x64) Extension.EarlyData.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184604 (    0x70) protocol witness for Hashable.hashValue.getter in conformance Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184674 (    0x50) protocol witness for Hashable.hash(into:) in conformance Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211846c4 (    0x6c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184730 (    0x38) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184768 (     0x4) base witness table accessor for Equatable in Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118476c (    0x54) lazy protocol witness table accessor for type Extension.EarlyData and conformance Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211847c0 (    0x14) __swift_memcpy5_4 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211847d4 (    0x20) getEnumTagSinglePayload for Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211847f4 (    0x2c) storeEnumTagSinglePayload for Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184820 (    0x10) type metadata accessor for Extension.EarlyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184830 (     0x4) Extension.EarlyData.maxEarlyDataSize.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184834 (   0x1f4) ByteBuffer.writeHandshakeMessage<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184a28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221184a38 (    0x94) ByteBuffer.writeNamedGroup(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184acc (   0x158) ByteBuffer.readNamedGroup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221184c34 (     0xc) NamedGroup.secp384.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c40 (     0x4) NamedGroup.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c44 (     0x8) NamedGroup.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c4c (    0x20) NamedGroup.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c6c (     0x4) NamedGroup.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c70 (     0x4) NamedGroup.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c74 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c84 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c90 (     0xc) NamedGroup.secp256.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184c9c (     0x8) static NamedGroup.secp256.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184ca4 (     0x8) static NamedGroup.secp384.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184cac (    0x48) protocol witness for Hashable.hashValue.getter in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184cf4 (    0x2c) protocol witness for Hashable.hash(into:) in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184d20 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184d64 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184d78 (    0xec) NamedGroup.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184e64 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184e6c (     0x4) base witness table accessor for Equatable in NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184e70 (    0x54) lazy protocol witness table accessor for type NamedGroup and conformance NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184ec4 (    0x10) type metadata accessor for NamedGroup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184ed4 (   0x128) HandshakeMessage.logDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221184ffc (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000022118501c (   0x4cc) HandshakeMessage.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211854e8 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221185508 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221185518 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221185528 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221185538 (     0x4) static HandshakeMessage.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118553c (    0x40) HandshakeMessage.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118557c (    0x50) protocol witness for Hashable.hashValue.getter in conformance HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211855cc (    0x40) protocol witness for Hashable.hash(into:) in conformance HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118560c (    0x54) protocol witness for Hashable._rawHashValue(seed:) in conformance HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185660 (    0x4c) protocol witness for static Equatable.== infix(_:_:) in conformance HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211856ac (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000002211856cc (    0x30) outlined retain of CertificateVerify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211856fc (    0x30) outlined release of ByteBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118572c (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221185764 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211857a4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211857dc (   0x4c0) specialized static HandshakeMessage.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185c9c (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221185cbc (     0x4) base witness table accessor for Equatable in HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185cc0 (    0x54) lazy protocol witness table accessor for type HandshakeMessage and conformance HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185d14 (    0x34) initializeBufferWithCopyOfBuffer for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185d48 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000221185d68 (    0x4c) destroy for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185db4 (    0xe4) initializeWithCopy for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185e98 (   0x110) assignWithCopy for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185fa8 (    0x2c) __swift_memcpy105_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221185fd4 (    0x88) assignWithTake for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118605c (    0x48) getEnumTagSinglePayload for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211860a4 (    0x60) storeEnumTagSinglePayload for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186104 (     0x8) getEnumTag for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118610c (     0x4) destructiveProjectEnumData for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186110 (     0x8) destructiveInjectEnumTag for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186118 (    0x10) type metadata accessor for HandshakeMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186128 (    0x18) specialized closure #1 in static HMAC.authenticationCode<A>(bytes:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186140 (    0xb4) specialized closure #1 in static HMAC.authenticationCode<A>(bytes:using:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211861f4 (   0x138) HandshakeState.IdleState.init(configuration:sessionToResume:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118632c (    0x20) type metadata accessor for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118634c (   0x190) HandshakeState.logDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211864dc (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000002211864f8 (    0x20) type metadata accessor for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186518 (   0x450) HandshakeState.sendingClientHello(_:sessionToResume:diffieHellmanKey:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186968 (    0x20) type metadata accessor for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186988 (    0xe4) HandshakeState.EncryptedExtensionsState.isResumption.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186a6c (    0x50) HandshakeState.ReadyState.generateTLSExporterKey(label:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186abc (    0x50) HandshakeState.ReadyState.generateHashForAuthenticator(transcript:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186b0c (    0x60) HandshakeState.ReadyState.generateHMACForAuthenticator(transcript:key:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186b6c (   0x150) HandshakeState.EncryptedExtensionsState.SessionData.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221186cbc (   0x508) HandshakeState.receivedServerHello(_:bytes:clock:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211871c4 (   0x288) HandshakeState.receivedServerEncryptedExtensions(_:extensionBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118744c (   0x2c4) HandshakeState.receivedServerCertificate(_:certificateBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221187710 (   0x2c0) HandshakeState.receivedServerCertificateVerify(certificateVerify:certificateVerifyBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211879d0 (   0xa40) HandshakeState.receievedServerFinished(serverFinished:serverFinishedBytes:serializer:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221188410 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022118842c (   0x5e4) HandshakeState.receivedNewSessionTicket(newSessionTicket:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221188a10 (   0x368) specialized static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221188d78 (   0x358) specialized static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211890d0 (   0x360) specialized static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221189430 (   0x370) specialized static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211897a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211897b0 (    0xb8) specialized closure #1 in static HKDF.extract(inputKeyMaterial:salt:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221189868 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211898ec (   0x660) static HandshakeState.ClientHelloState.sendingClientHello(originalState:clientHello:sessionToResume:diffieHellmanKey:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221189f4c (    0x60) outlined destroy of HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221189fac (    0x68) outlined init with take of HandshakeState.IdleState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a014 (   0x204) specialized SessionKeyManager.clientEarlyTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a218 (    0x20) type metadata accessor for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a238 (    0x20) type metadata accessor for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a258 (    0x68) outlined init with copy of HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a2c0 (    0x20) type metadata accessor for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118a2e0 (  0x21c0) HandshakeState.ServerHelloState.init(originalState:serverHello:serverHelloBytes:clock:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118c4a0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022118c4d8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022118c510 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022118c520 (   0x2ec) specialized SessionKeyManager.clientHandshakeTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118c80c (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022118c820 (   0x2ec) specialized SessionKeyManager.serverHandshakeTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118cb0c (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022118cb20 (  0x1138) HandshakeState.EncryptedExtensionsState.init(originalState:encryptedExtensions:extensionBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118dc58 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022118dc90 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000022118dcc8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000022118dce0 (   0xa0c) HandshakeState.ServerCertificateState.init(originalState:serverCertificate:certificateBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118e6ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022118e6fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022118e70c (   0x574) HandshakeState.ServerCertificateVerifyState.init(originalState:certificateVerify:certificateVerifyBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118ec80 (   0x7e8) static HandshakeState.ReadyState.receivingServerFinished(originalState:serverFinished:serverFinishedBytes:serializer:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118f468 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022118f478 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022118f488 (   0x2f8) specialized SessionKeyManager.clientApplicationTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118f780 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022118f794 (   0x2ec) specialized SessionKeyManager.serverApplicationTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022118fa80 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022118fa94 (   0xa94) static HandshakeState.ReadyState.receivingServerFinished(originalState:serverFinished:serverFinishedBytes:serializer:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190528 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221190538 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221190548 (   0x2a8) HandshakeState.ReadyState.prepareSessionTicket(message:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211907f0 (     0x4) HandshakeState.IdleState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211907f4 (     0x4) HandshakeState.IdleState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211907f8 (    0x20) HandshakeState.IdleState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190818 (     0x4) HandshakeState.IdleState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119081c (    0x34) HandshakeState.IdleState.sessionToResume.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190850 (    0x34) HandshakeState.IdleState.sessionToResume.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190884 (    0x48) HandshakeState.IdleState.sessionToResume.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211908cc (     0x4) HandshakeState.IdleState.sessionToResume.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211908d0 (    0x18) HandshakeState.IdleState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211908e8 (    0x18) HandshakeState.IdleState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190900 (    0x48) HandshakeState.IdleState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190948 (     0x4) HandshakeState.IdleState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119094c (     0x4) HandshakeState.ClientHelloState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190950 (     0x4) HandshakeState.ClientHelloState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190954 (    0x20) HandshakeState.ClientHelloState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190974 (     0x4) HandshakeState.ClientHelloState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190978 (    0x14) HandshakeState.ClientHelloState.expectedLegacySessionID.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119098c (    0x14) HandshakeState.ClientHelloState.expectedLegacySessionID.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211909a0 (    0x20) HandshakeState.ClientHelloState.expectedLegacySessionID.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211909c0 (     0x4) HandshakeState.ClientHelloState.expectedLegacySessionID.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211909c4 (     0x8) HandshakeState.ClientHelloState.allowedCipherSuites.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211909cc (    0x2c) HandshakeState.ClientHelloState.allowedCipherSuites.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211909f8 (    0x20) HandshakeState.ClientHelloState.allowedCipherSuites.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a18 (     0x4) HandshakeState.ClientHelloState.allowedCipherSuites.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a1c (     0x8) HandshakeState.ClientHelloState.serverCertificateTypes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a24 (    0x2c) HandshakeState.ClientHelloState.serverCertificateTypes.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a50 (    0x20) HandshakeState.ClientHelloState.serverCertificateTypes.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a70 (     0x4) HandshakeState.ClientHelloState.serverCertificateTypes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190a74 (    0x78) HandshakeState.ClientHelloState.diffieHellmanKey.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190aec (    0x78) HandshakeState.ClientHelloState.diffieHellmanKey.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190b64 (    0x48) HandshakeState.ClientHelloState.diffieHellmanKey.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190bac (     0x4) HandshakeState.ClientHelloState.diffieHellmanKey.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190bb0 (    0x40) HandshakeState.ClientHelloState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190bf0 (    0x40) HandshakeState.ClientHelloState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190c30 (    0x48) HandshakeState.ClientHelloState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190c78 (     0x4) HandshakeState.ClientHelloState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190c7c (    0x40) HandshakeState.ClientHelloState.sessionToResume.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190cbc (    0x40) HandshakeState.ClientHelloState.sessionToResume.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190cfc (    0x48) HandshakeState.ClientHelloState.sessionToResume.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190d44 (     0x4) HandshakeState.ClientHelloState.sessionToResume.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190d48 (    0x20) HandshakeState.ServerHelloState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190d68 (     0x4) HandshakeState.ServerHelloState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190d6c (    0x40) HandshakeState.ServerHelloState.sessionData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190dac (    0x58) HandshakeState.IdleState.sessionToResume.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190e04 (    0x40) HandshakeState.ServerHelloState.sessionData.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190e44 (    0x54) HandshakeState.IdleState.sessionToResume.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190e98 (    0x48) HandshakeState.ServerHelloState.sessionData.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190ee0 (     0x4) HandshakeState.ServerHelloState.sessionData.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190ee4 (    0x18) HandshakeState.ServerHelloState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190efc (    0x48) HandshakeState.IdleState.keyScheduler.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190f44 (    0x18) HandshakeState.ServerHelloState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190f5c (    0x44) HandshakeState.IdleState.keyScheduler.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190fa0 (    0x48) HandshakeState.ServerHelloState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190fe8 (     0x4) HandshakeState.ServerHelloState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221190fec (    0x24) HandshakeState.ServerHelloState.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191010 (    0x30) HandshakeState.ServerHelloState.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191040 (    0x48) HandshakeState.ServerHelloState.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191088 (     0x4) HandshakeState.ServerHelloState.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119108c (     0x4) HandshakeState.ServerHelloState.SessionData.NewSession.init(negotiatedCipherSuite:serverCertificateTypes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191090 (   0x544) specialized SessionKeyManager.postServerHello(ecdheSecret:serverHelloBytes:resumptionFailed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211915d4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211915e8 (     0x4) HandshakeState.ServerHelloState.SessionData.NewSession.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211915ec (     0x8) HandshakeState.ServerHelloState.SessionData.NewSession.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211915f4 (    0x20) HandshakeState.ServerHelloState.SessionData.NewSession.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191614 (     0x4) HandshakeState.ServerHelloState.SessionData.NewSession.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191618 (     0x8) HandshakeState.ServerHelloState.SessionData.NewSession.serverCertificateTypes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191620 (    0x2c) HandshakeState.ServerHelloState.SessionData.NewSession.serverCertificateTypes.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119164c (    0x20) HandshakeState.ServerHelloState.SessionData.NewSession.serverCertificateTypes.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119166c (     0x4) HandshakeState.ServerHelloState.SessionData.NewSession.serverCertificateTypes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191670 (    0x20) HandshakeState.EncryptedExtensionsState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191690 (     0x4) HandshakeState.EncryptedExtensionsState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191694 (    0x40) HandshakeState.EncryptedExtensionsState.sessionData.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211916d4 (    0x40) HandshakeState.EncryptedExtensionsState.sessionData.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191714 (    0x48) HandshakeState.EncryptedExtensionsState.sessionData.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119175c (     0x4) HandshakeState.EncryptedExtensionsState.sessionData.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191760 (    0x58) HandshakeState.EncryptedExtensionsState.serverALPN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211917b8 (    0x54) HandshakeState.EncryptedExtensionsState.serverALPN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119180c (    0x48) HandshakeState.EncryptedExtensionsState.serverALPN.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191854 (     0x4) HandshakeState.EncryptedExtensionsState.serverALPN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191858 (    0x58) HandshakeState.EncryptedExtensionsState.serverQUICTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211918b0 (    0x54) HandshakeState.EncryptedExtensionsState.serverQUICTransportParameters.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191904 (    0x48) HandshakeState.EncryptedExtensionsState.serverQUICTransportParameters.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119194c (     0x4) HandshakeState.EncryptedExtensionsState.serverQUICTransportParameters.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191950 (    0x24) HandshakeState.EncryptedExtensionsState.earlyDataAccepted.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191974 (    0x30) HandshakeState.EncryptedExtensionsState.earlyDataAccepted.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211919a4 (    0x48) HandshakeState.EncryptedExtensionsState.earlyDataAccepted.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211919ec (     0x4) HandshakeState.EncryptedExtensionsState.earlyDataAccepted.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211919f0 (    0x40) HandshakeState.EncryptedExtensionsState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191a30 (    0x40) HandshakeState.EncryptedExtensionsState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191a70 (    0x48) HandshakeState.EncryptedExtensionsState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ab8 (     0x4) HandshakeState.EncryptedExtensionsState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191abc (    0x18) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.init(negotiatedCipherSuite:serverCertificateType:serverName:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ad4 (   0x3e8) specialized SessionKeyManager.addPreFinishedMessageToTransportHash(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ebc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221191ed0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221191ee4 (     0x4) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ee8 (     0x8) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ef0 (    0x20) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f10 (     0x4) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f14 (     0x8) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverCertificateType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f1c (     0x8) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverCertificateType.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f24 (    0x20) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverCertificateType.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f44 (     0x4) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverCertificateType.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f48 (    0x34) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverName.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191f7c (    0x38) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverName.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191fb4 (    0x20) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverName.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191fd4 (     0x4) HandshakeState.EncryptedExtensionsState.SessionData.NewSession.serverName.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191fd8 (    0x20) HandshakeState.ServerCertificateState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ff8 (     0x4) HandshakeState.ServerCertificateState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221191ffc (     0x8) HandshakeState.ServerCertificateState.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192004 (     0x8) HandshakeState.ServerCertificateState.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119200c (    0x20) HandshakeState.ServerCertificateState.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119202c (     0x4) HandshakeState.ServerCertificateState.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192030 (    0x48) HandshakeState.ServerCertificateState.serverALPN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192078 (    0x44) HandshakeState.ServerCertificateState.serverALPN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211920bc (    0x20) HandshakeState.ServerCertificateState.serverALPN.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211920dc (     0x4) HandshakeState.ServerCertificateState.serverALPN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211920e0 (    0x48) HandshakeState.ServerCertificateState.serverQUICTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192128 (    0x44) HandshakeState.ServerCertificateState.serverQUICTransportParameters.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119216c (    0x20) HandshakeState.ServerCertificateState.serverQUICTransportParameters.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119218c (     0x4) HandshakeState.ServerCertificateState.serverQUICTransportParameters.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192190 (     0x8) HandshakeState.ServerCertificateState.earlyDataAccepted.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192198 (     0x8) HandshakeState.ServerCertificateState.earlyDataAccepted.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211921a0 (    0x20) HandshakeState.ServerCertificateState.earlyDataAccepted.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211921c0 (     0x4) HandshakeState.ServerCertificateState.earlyDataAccepted.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211921c4 (    0x4c) HandshakeState.ServerCertificateState.certificates.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192210 (    0x4c) HandshakeState.ServerCertificateState.certificates.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119225c (    0x48) HandshakeState.ServerCertificateState.certificates.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211922a4 (     0x4) HandshakeState.ServerCertificateState.certificates.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211922a8 (    0x40) HandshakeState.ServerCertificateState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211922e8 (    0x40) HandshakeState.ServerCertificateState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192328 (    0x48) HandshakeState.ServerCertificateState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192370 (     0x4) HandshakeState.ServerCertificateState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192374 (    0x20) HandshakeState.ServerCertificateVerifyState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192394 (     0x4) HandshakeState.ServerCertificateVerifyState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192398 (    0x20) HandshakeState.ServerCertificateVerifyState.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211923b8 (     0x4) HandshakeState.ServerCertificateVerifyState.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211923bc (    0x18) HandshakeState.ServerCertificateVerifyState.certificates.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211923d4 (    0x18) HandshakeState.ServerCertificateVerifyState.certificates.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211923ec (    0x48) HandshakeState.ServerCertificateVerifyState.certificates.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192434 (     0x4) HandshakeState.ServerCertificateVerifyState.certificates.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192438 (    0x18) HandshakeState.ServerCertificateVerifyState.serverALPN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192450 (    0x18) HandshakeState.ServerCertificateVerifyState.serverALPN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192468 (    0x48) HandshakeState.ServerCertificateVerifyState.serverALPN.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211924b0 (     0x4) HandshakeState.ServerCertificateVerifyState.serverALPN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211924b4 (    0x18) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211924cc (    0x18) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211924e4 (    0x48) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119252c (     0x4) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192530 (    0x24) HandshakeState.ServerCertificateVerifyState.earlyDataAccepted.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192554 (    0x30) HandshakeState.ServerCertificateVerifyState.earlyDataAccepted.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192584 (    0x48) HandshakeState.ServerCertificateVerifyState.earlyDataAccepted.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211925cc (     0x4) HandshakeState.ServerCertificateVerifyState.earlyDataAccepted.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211925d0 (    0x18) HandshakeState.ServerCertificateVerifyState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211925e8 (    0x18) HandshakeState.ServerCertificateVerifyState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192600 (    0x48) HandshakeState.ServerCertificateVerifyState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192648 (     0x4) HandshakeState.ServerCertificateVerifyState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119264c (    0xc0) HandshakeState.IdleState.configuration.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119270c (    0x94) HandshakeState.IdleState.configuration.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211927a0 (    0x20) HandshakeState.ReadyState.configuration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211927c0 (     0x4) HandshakeState.ReadyState.configuration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211927c4 (    0x20) HandshakeState.ReadyState.negotiatedCipherSuite.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211927e4 (     0x4) HandshakeState.ReadyState.negotiatedCipherSuite.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211927e8 (    0x18) HandshakeState.ReadyState.certificates.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192800 (    0x54) HandshakeState.ServerCertificateVerifyState.certificates.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192854 (    0x18) HandshakeState.ReadyState.certificates.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119286c (    0x50) HandshakeState.ServerCertificateVerifyState.certificates.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211928bc (    0x48) HandshakeState.ReadyState.certificates.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192904 (     0x4) HandshakeState.ReadyState.certificates.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192908 (    0x18) HandshakeState.ReadyState.serverALPN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192920 (    0x60) HandshakeState.ServerCertificateVerifyState.serverALPN.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192980 (    0x18) HandshakeState.ReadyState.serverALPN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192998 (    0x58) HandshakeState.ServerCertificateVerifyState.serverALPN.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211929f0 (    0x48) HandshakeState.ReadyState.serverALPN.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192a38 (     0x4) HandshakeState.ReadyState.serverALPN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192a3c (    0x18) HandshakeState.ReadyState.serverQUICTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192a54 (    0x60) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192ab4 (    0x18) HandshakeState.ReadyState.serverQUICTransportParameters.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192acc (    0x58) HandshakeState.ServerCertificateVerifyState.serverQUICTransportParameters.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192b24 (    0x48) HandshakeState.ReadyState.serverQUICTransportParameters.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192b6c (     0x4) HandshakeState.ReadyState.serverQUICTransportParameters.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192b70 (    0x24) HandshakeState.ReadyState.earlyDataAccepted.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192b94 (    0x30) HandshakeState.ReadyState.earlyDataAccepted.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192bc4 (    0x48) HandshakeState.ReadyState.earlyDataAccepted.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192c0c (     0x4) HandshakeState.ReadyState.earlyDataAccepted.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192c10 (    0x18) HandshakeState.ReadyState.keyScheduler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192c28 (    0x48) HandshakeState.ServerCertificateVerifyState.keyScheduler.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192c70 (    0x18) HandshakeState.ReadyState.keyScheduler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192c88 (    0x44) HandshakeState.ServerCertificateVerifyState.keyScheduler.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192ccc (    0x48) HandshakeState.ReadyState.keyScheduler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192d14 (     0x4) HandshakeState.ReadyState.keyScheduler.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221192d18 (   0x4ac) specialized SessionKeyManager.generateSessionTicketPSK(ticketNonce:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211931c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211931d4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211931e8 (   0x648) specialized SessionKeyManager.serverFinishedPayload() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221193830 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221193844 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221193858 (   0x490) specialized SessionKeyManager.postServerFinished(serverFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221193ce8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221193cfc (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221193d10 (   0x648) specialized SessionKeyManager.clientFinishedPayload() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221194358 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022119436c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221194380 (   0x490) specialized SessionKeyManager.postClientFinished(clientFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221194810 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221194824 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000221194838 (    0x20) type metadata accessor for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221194858 (    0x2c) outlined retain of ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221194884 (    0x20) type metadata accessor for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211948a4 (    0x20) type metadata accessor for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211948c4 (    0x54) outlined retain of NewSessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221194918 (   0xfb0) specialized static SessionKeyManager.State.EarlySecret.create(clientHello:sessionToResume:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211958c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211958d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211958e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211958f8 (   0x9ac) specialized SessionKeyManager.State.HandshakeSecret.init(earlySecret:ecdheSecret:serverHelloBytes:resumptionFailed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211962a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211962b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211962c4 (   0x164) specialized SessionKeyManager.State.HandshakeSecret.addMessageToTranscriptHash(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221196428 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221196438 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221196448 (   0x6d0) specialized SessionKeyManager.State.MasterSecret.init(handshakeSecret:serverFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221196b18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221196b28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221196b38 (   0x4ec) specialized SessionKeyManager.State.AllSecrets.init(masterSecret:clientFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221197024 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221197034 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221197044 (    0x78) closure #1 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211970bc (   0x12c) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211971e8 (    0xc4) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211972ac (    0xe0) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119738c (    0xa4) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221197430 (    0x6c) specialized Data._Representation.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119749c (   0x194) specialized ByteBuffer.init<A>(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221197630 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221197640 (   0xeb0) specialized static SessionKeyManager.State.EarlySecret.tryToResume(session:binderSecret:clientHello:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211984f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198500 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198510 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198520 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198530 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198540 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000221198550 (    0x2c) outlined release of ServerHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119857c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211985b4 (    0x54) lazy protocol witness table accessor for type UInt16 and conformance UInt16 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198608 (    0x38) (null) [FUNC, FunctionStarts] 
                0x0000000221198640 (    0x1c) outlined consume of Extension.KeyShare.KeyShareEntry? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119865c (    0x1c) outlined copy of Extension.KeyShare.KeyShareEntry? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198678 (    0x20) type metadata accessor for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198698 (    0x38) type metadata accessor for HandshakeState.IdleState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211986d0 (    0x64) __swift_allocate_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198734 (    0x64) outlined assign with take of SessionTicket? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198798 (    0x68) outlined assign with take of HandshakeState.ServerHelloState.SessionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000221198800 (  0x35b0) initializeBufferWithCopyOfBuffer for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119bdb0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022119bdcc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119bddc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119bdec (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119bdfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119be0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119be1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119be2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119be3c (  0x13f4) destroy for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119d230 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022119d24c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d25c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d26c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d27c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d28c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d29c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d2ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119d2bc (  0x2a90) initializeWithCopy for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022119fd4c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000022119fd68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fd78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fd88 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fd98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fda8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fdb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fdc8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022119fdd8 (  0x2b4c) assignWithCopy for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a2924 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000002211a2940 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a2950 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a2960 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a2970 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a2980 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a2990 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a29a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a29b0 (  0x235c) initializeWithTake for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a4d0c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d38 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d88 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a4d98 (  0x2380) assignWithTake for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a7118 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000002211a7134 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7144 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7154 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7164 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7174 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7184 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7194 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a71a4 (     0x4) getEnumTagSinglePayload for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a71a8 (     0x4) storeEnumTagSinglePayload for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a71ac (     0x4) getEnumTag for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a71b0 (     0x4) destructiveProjectEnumData for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a71b4 (    0x10) destructiveInjectEnumTag for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a71c4 (   0x1f0) type metadata completion function for HandshakeState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a73b4 (   0x898) initializeBufferWithCopyOfBuffer for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a7c4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a7c5c (   0x5c8) destroy for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a8224 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a8234 (   0x83c) initializeWithCopy for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a8a70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a8a80 (   0xc60) assignWithCopy for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a96e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a96f0 (   0x734) initializeWithTake for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211a9e24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211a9e34 (   0xaf4) assignWithTake for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aa928 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211aa938 (    0x14) getEnumTagSinglePayload for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aa94c (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000002211aaa80 (    0x14) storeEnumTagSinglePayload for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aaa94 (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000002211aabc8 (    0xd4) type metadata completion function for HandshakeState.IdleState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aac9c (    0x58) type metadata accessor for SessionTicket? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aacf4 (    0x94) type metadata accessor for SessionKeyManager<SHA384>.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aad88 (   0x924) initializeBufferWithCopyOfBuffer for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ab6ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ab6bc (   0x5ec) destroy for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211abca8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211abcb8 (   0x8d0) initializeWithCopy for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ac588 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ac598 (   0xd28) assignWithCopy for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ad2c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ad2d0 (   0x7d4) initializeWithTake for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211adaa4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211adab4 (   0xb98) assignWithTake for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ae64c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ae65c (    0x14) getEnumTagSinglePayload for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ae670 (   0x180) (null) [FUNC, FunctionStarts] 
                0x00000002211ae7f0 (    0x14) storeEnumTagSinglePayload for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ae804 (   0x180) (null) [FUNC, FunctionStarts] 
                0x00000002211ae984 (   0x128) type metadata completion function for HandshakeState.ClientHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211aeaac (   0x864) initializeBufferWithCopyOfBuffer for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211af310 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211af320 (   0x5b8) destroy for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211af8d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211af8e8 (   0x814) initializeWithCopy for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b00fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b010c (   0x91c) assignWithCopy for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b0a28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b0a38 (   0x720) initializeWithTake for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b1158 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b1168 (   0x824) assignWithTake for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b198c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b199c (    0x14) getEnumTagSinglePayload for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b19b0 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b1ae0 (    0x14) storeEnumTagSinglePayload for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b1af4 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b1c24 (    0xe0) type metadata completion function for HandshakeState.ServerHelloState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b1d04 (   0x318) initializeBufferWithCopyOfBuffer for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b201c (   0x1dc) destroy for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b21f8 (   0x2c8) initializeWithCopy for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b24c0 (   0x2f4) assignWithCopy for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27b4 (     0x4) initializeWithTake for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27b8 (    0x2c) assignWithTake for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27e4 (     0x4) getEnumTagSinglePayload for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27e8 (     0x4) storeEnumTagSinglePayload for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27ec (     0x4) getEnumTag for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27f0 (     0x4) destructiveProjectEnumData for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b27f4 (    0x10) destructiveInjectEnumTag for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2804 (     0xc) type metadata completion function for HandshakeState.ServerHelloState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2810 (    0x38) initializeBufferWithCopyOfBuffer for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2848 (     0x8) destroy for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2850 (    0x38) initializeWithCopy for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2888 (    0x44) assignWithCopy for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b28cc (     0xc) __swift_memcpy16_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b28d8 (    0x3c) assignWithTake for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2914 (    0x48) getEnumTagSinglePayload for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b295c (    0x3c) storeEnumTagSinglePayload for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b2998 (    0x10) type metadata accessor for HandshakeState.ServerHelloState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b29a8 (   0x8e4) initializeBufferWithCopyOfBuffer for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b328c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b329c (   0x5f8) destroy for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b3894 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b38a4 (   0x888) initializeWithCopy for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b412c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b413c (   0xa54) assignWithCopy for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b4b90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b4ba0 (   0x724) initializeWithTake for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b52c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b52d4 (   0x8b0) assignWithTake for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b5b84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b5b94 (    0x14) getEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b5ba8 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b5cd8 (    0x14) storeEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b5cec (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b5e1c (    0xe8) type metadata completion function for HandshakeState.EncryptedExtensionsState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b5f04 (   0x320) initializeBufferWithCopyOfBuffer for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6224 (   0x1dc) destroy for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6400 (   0x2d0) initializeWithCopy for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b66d0 (   0x304) assignWithCopy for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b69d4 (     0x4) initializeWithTake for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b69d8 (   0x26c) initializeWithTake for HandshakeState.ServerHelloState.SessionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6c44 (    0x2c) assignWithTake for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6c70 (   0x284) assignWithTake for HandshakeState.ServerHelloState.SessionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6ef4 (     0x4) getEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6ef8 (    0x28) getEnumTagSinglePayload for HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f20 (     0x4) storeEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f24 (    0x28) storeEnumTagSinglePayload for HandshakeState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f4c (     0x4) getEnumTag for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f50 (     0x4) destructiveProjectEnumData for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f54 (    0x10) destructiveInjectEnumTag for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f64 (     0xc) type metadata completion function for HandshakeState.EncryptedExtensionsState.SessionData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6f70 (    0x8c) type metadata completion function for HandshakeState.ServerHelloState.SessionData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b6ffc (    0x40) initializeBufferWithCopyOfBuffer for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b703c (     0x8) destroy for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b7044 (    0x40) initializeWithCopy for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b7084 (    0x54) assignWithCopy for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b70d8 (    0x44) assignWithTake for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b711c (    0x5c) getEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b7178 (    0x54) storeEnumTagSinglePayload for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b71cc (    0x10) type metadata accessor for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b71dc (   0x714) initializeBufferWithCopyOfBuffer for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b78f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b7900 (   0x4f4) destroy for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b7df4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b7e04 (   0x6b8) initializeWithCopy for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b84bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b84cc (   0x8b0) assignWithCopy for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b8d7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b8d8c (   0x5a4) initializeWithTake for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9330 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b9340 (   0x790) assignWithTake for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9ad0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211b9ae0 (    0x14) getEnumTagSinglePayload for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9af4 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b9c24 (    0x14) storeEnumTagSinglePayload for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9c38 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000002211b9d68 (    0xf8) type metadata completion function for HandshakeState.ServerCertificateState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e60 (     0x4) initializeBufferWithCopyOfBuffer for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e64 (     0x4) destroy for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e68 (     0x4) initializeWithCopy for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e6c (     0x4) assignWithCopy for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e70 (     0x4) initializeWithTake for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e74 (     0x4) assignWithTake for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e78 (    0x14) getEnumTagSinglePayload for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9e8c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002211b9e90 (    0x14) storeEnumTagSinglePayload for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9ea4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002211b9ea8 (     0x4) type metadata completion function for HandshakeState.ServerCertificateVerifyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9eac (     0x4) initializeBufferWithCopyOfBuffer for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211b9eb0 (   0x70c) initializeBufferWithCopyOfBuffer for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ba5bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ba5cc (     0x4) destroy for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ba5d0 (   0x504) destroy for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211baad4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211baae4 (     0x4) initializeWithCopy for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211baae8 (   0x6b0) initializeWithCopy for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bb198 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bb1a8 (     0x4) assignWithCopy for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bb1ac (   0x8a4) assignWithCopy for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bba50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bba60 (     0x4) initializeWithTake for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bba64 (   0x5b8) initializeWithTake for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc01c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bc02c (     0x4) assignWithTake for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc030 (   0x77c) assignWithTake for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc7ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bc7bc (    0x14) getEnumTagSinglePayload for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc7d0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002211bc7d4 (   0x130) __swift_get_extra_inhabitant_index.21Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc904 (    0x14) storeEnumTagSinglePayload for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bc918 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002211bc91c (   0x130) __swift_store_extra_inhabitant_index.22Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bca4c (    0xf4) type metadata completion function for HandshakeState.ServerCertificateVerifyState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcb40 (    0x1c) partial apply for closure #1 in static HKDF.expandLabel<A, B>(secret:label:context:length:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcb5c (    0x48) lazy protocol witness table accessor for type SharedSecret and conformance SharedSecret [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcba4 (    0x1c) partial apply for specialized closure #1 in static HMAC.authenticationCode<A>(bytes:using:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcbc0 (    0x54) lazy protocol witness table accessor for type UnsafeRawBufferPointer and conformance UnsafeRawBufferPointer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcc14 (    0x64) outlined init with take of PartialHandshakeResult.NewEncryptionLevel? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcc78 (    0x44) lazy protocol witness table accessor for type HashedAuthenticationCode<SHA384> and conformance HashedAuthenticationCode<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bccbc (    0x1c) partial apply for specialized closure #1 in static HKDF.extract(inputKeyMaterial:salt:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bccd8 (    0x64) outlined init with copy of SessionKeyManager<SHA384> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcd3c (    0x48) outlined retain of ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcd84 (    0x48) outlined release of ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcdcc (    0x5c) outlined destroy of SymmetricKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce28 (     0x4) type metadata completion function for HandshakeState.ReadyState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce2c (     0x4) HandshakeState.ServerCertificateVerifyState.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce30 (     0x4) HandshakeState.ReadyState.negotiatedCipherSuite.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce34 (    0x18) closure #1 in static HMAC.authenticationCode<A>(bytes:using:)specialized partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce4c (    0x18) closure #1 in static HKDF.extract(inputKeyMaterial:salt:)specialized partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce64 (    0x18) closure #1 in static HKDF.expandLabel<A, B>(secret:label:context:length:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce7c (    0x18) closure #1 in static HMAC.authenticationCode<A>(bytes:using:)specialized partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce94 (     0x4) HandshakeState.ServerHelloState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce98 (     0x4) HandshakeState.ServerHelloState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bce9c (     0x4) HandshakeState.EncryptedExtensionsState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcea0 (     0x4) HandshakeState.EncryptedExtensionsState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcea4 (     0x4) HandshakeState.ServerCertificateState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcea8 (     0x4) HandshakeState.ServerCertificateState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bceac (     0x4) HandshakeState.ServerCertificateVerifyState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bceb0 (     0x4) HandshakeState.ServerCertificateVerifyState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bceb4 (     0x4) HandshakeState.ReadyState.configuration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bceb8 (     0x4) HandshakeState.ReadyState.configuration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcebc (     0x4) HandshakeState.ServerCertificateVerifyState.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcec0 (     0x4) HandshakeState.ReadyState.negotiatedCipherSuite.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcec4 (    0x30) HandshakeStateMachine.Configuration.serverName.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcef4 (    0x38) HandshakeStateMachine.Configuration.serverName.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcf2c (    0x20) HandshakeStateMachine.Configuration.serverName.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcf4c (     0x4) HandshakeStateMachine.Configuration.serverName.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcf50 (     0x8) HandshakeStateMachine.Configuration.validPublicKeys.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcf58 (    0x2c) HandshakeStateMachine.Configuration.validPublicKeys.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcf84 (    0x20) HandshakeStateMachine.Configuration.validPublicKeys.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcfa4 (     0x4) HandshakeStateMachine.Configuration.validPublicKeys.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcfa8 (    0x48) HandshakeStateMachine.Configuration.quicTransportParameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bcff0 (    0x44) HandshakeStateMachine.Configuration.quicTransportParameters.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd034 (    0x20) HandshakeStateMachine.Configuration.quicTransportParameters.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd054 (     0x4) HandshakeStateMachine.Configuration.quicTransportParameters.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd058 (    0x48) HandshakeStateMachine.Configuration.alpn.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd0a0 (    0x44) HandshakeStateMachine.Configuration.alpn.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd0e4 (    0x20) HandshakeStateMachine.Configuration.alpn.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd104 (     0x4) HandshakeStateMachine.Configuration.alpn.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd108 (    0x18) HandshakeStateMachine.Configuration.ticketRequest.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd120 (    0x10) HandshakeStateMachine.Configuration.ticketRequest.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd130 (    0x20) HandshakeStateMachine.Configuration.ticketRequest.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd150 (     0x4) HandshakeStateMachine.Configuration.ticketRequest.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd154 (    0xf4) HandshakeStateMachine.Configuration.init(serverName:validPublicKeys:quicTransportParameters:alpn:ticketRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd248 (     0x4) static HandshakeStateMachine.Configuration.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd24c (   0x490) HandshakeStateMachine.Configuration.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd6dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bd6ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bd6fc (    0x40) HandshakeStateMachine.Configuration.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd73c (    0x5c) protocol witness for Hashable.hashValue.getter in conformance HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd798 (    0x44) protocol witness for Hashable.hash(into:) in conformance HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd7dc (    0x58) protocol witness for Hashable._rawHashValue(seed:) in conformance HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd834 (    0x5c) protocol witness for static Equatable.== infix(_:_:) in conformance HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bd890 (   0x204) closure #1 in static Data.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bda94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bdaa4 (   0xdac) specialized static HandshakeStateMachine.Configuration.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be850 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211be860 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211be870 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211be880 (    0x2c) outlined release of [P256.Signing.PublicKey] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be8ac (     0x4) base witness table accessor for Equatable in HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be8b0 (    0x54) lazy protocol witness table accessor for type HandshakeStateMachine.Configuration and conformance HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be904 (    0x34) initializeBufferWithCopyOfBuffer for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be938 (    0x78) destroy for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211be9b0 (    0xec) initializeWithCopy for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bea9c (   0x1c0) assignWithCopy for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bec5c (    0x24) __swift_memcpy75_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bec80 (   0x118) assignWithTake for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bed98 (    0x48) getEnumTagSinglePayload for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bede0 (    0x58) storeEnumTagSinglePayload for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bee38 (    0x10) type metadata accessor for HandshakeStateMachine.Configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bee48 (    0x2c) outlined retain of [P256.Signing.PublicKey] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bee74 (    0x68) outlined init with take of (P256.Signing.PublicKey, P256.Signing.PublicKey) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211beedc (    0x5c) outlined destroy of P256.Signing.PublicKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bef38 (     0x4) static Extension.PreSharedKeyKexModes.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bef3c (   0x178) ByteBuffer.writePreSharedKeyKexModes(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf0b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211bf0c4 (   0x110) ByteBuffer.readPreSharedKeyKexModes(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf1d4 (     0xc) Extension.PreSharedKeyKexModes.Mode.pskAndDHE.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf1e0 (     0x4) Extension.PreSharedKeyKexModes.init(modes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf1e4 (     0x4) Extension.PreSharedKeyKexModes.modes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf1e8 (    0x2c) Extension.PreSharedKeyKexModes.modes.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf214 (    0x20) Extension.PreSharedKeyKexModes.modes.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf234 (     0x4) Extension.PreSharedKeyKexModes.modes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf238 (     0x4) Extension.PreSharedKeyKexModes.Mode.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf23c (     0x8) Extension.PreSharedKeyKexModes.Mode.rawValue.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf244 (    0x20) Extension.PreSharedKeyKexModes.Mode.rawValue.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf264 (     0x4) Extension.PreSharedKeyKexModes.Mode.rawValue.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf268 (     0x4) Extension.PreSharedKeyKexModes.Mode.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf26c (     0xc) Extension.PreSharedKeyKexModes.Mode.pskOnly.unsafeMutableAddressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf278 (     0x8) static Extension.PreSharedKeyKexModes.Mode.pskOnly.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf280 (     0x8) static Extension.PreSharedKeyKexModes.Mode.pskAndDHE.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf288 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf298 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf2a4 (    0x48) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf2ec (    0x2c) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf318 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf35c (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf370 (    0x50) Extension.PreSharedKeyKexModes.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf3c0 (    0x70) Extension.PreSharedKeyKexModes.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf430 (     0x8) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf438 (    0x54) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf48c (    0x6c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf4f8 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf504 (     0x4) base witness table accessor for Equatable in Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf508 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKeyKexModes.Mode and conformance Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf55c (     0x4) base witness table accessor for Equatable in Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf560 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKeyKexModes and conformance Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf5b4 (    0x10) type metadata accessor for Extension.PreSharedKeyKexModes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf5c4 (    0x10) type metadata accessor for Extension.PreSharedKeyKexModes.Mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf5d4 (   0x2b0) SessionKeyManager.dataToSignInServerCertificateVerify() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf884 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211bf898 (    0x18) type metadata accessor for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf8b0 (    0x18) type metadata accessor for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bf8c8 (   0x288) SessionKeyManager.clientEarlyTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bfb50 (   0x3d4) SessionKeyManager.clientHandshakeTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211bff24 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211bff38 (   0x3d4) SessionKeyManager.serverHandshakeTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c030c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c0320 (   0x3cc) SessionKeyManager.clientApplicationTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c06ec (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c0700 (   0x3d4) SessionKeyManager.serverApplicationTrafficSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c0ad4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c0ae8 (    0x4c) SessionKeyManager.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c0b34 (   0x23c) SessionKeyManager.sendingClientHello(clientHello:sessionToResume:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c0d70 (   0x48c) SessionKeyManager.postServerHello(ecdheSecret:serverHelloBytes:resumptionFailed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c11fc (   0x2ec) SessionKeyManager.addPreFinishedMessageToTransportHash(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c14e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c14fc (   0x2ac) SessionKeyManager.generateSessionTicketPSK(ticketNonce:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c17a8 (   0x2a8) SessionKeyManager.serverFinishedPayload() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c1a50 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c1a64 (   0x3e0) SessionKeyManager.postServerFinished(serverFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c1e44 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c1e58 (   0x2a8) SessionKeyManager.clientFinishedPayload() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c2100 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c2114 (   0x3e0) SessionKeyManager.postClientFinished(clientFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c24f4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c2508 (   0x298) SessionKeyManager.generateTLSExporterKey(label:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c27a0 (   0x2e4) SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c2a84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c2a94 (   0x1c4) SessionKeyManager.generateHMACForAuthenticator(transcript:key:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c2c58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c2c68 (    0x88) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c2cf0 (   0x288) SessionKeyManager.binderKey.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c2f78 (   0x288) SessionKeyManager.earlyExporterMasterSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c3200 (   0x3d4) SessionKeyManager.exporterMasterSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c35d4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c35e8 (   0x284) SessionKeyManager.resumptionMasterSecret.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c386c (   0xd34) static SessionKeyManager.State.EarlySecret.create(clientHello:sessionToResume:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c45a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c45b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c45c0 (   0x7d0) SessionKeyManager.State.HandshakeSecret.init(earlySecret:ecdheSecret:serverHelloBytes:resumptionFailed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c4d90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c4da0 (   0x194) SessionKeyManager.State.logDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c4f34 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c4f48 (   0x1c4) Logger.logInvalidStateTransition(stateName:event:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c510c (   0x5ac) SessionKeyManager.State.MasterSecret.init(handshakeSecret:serverFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c56b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c56c8 (   0x42c) SessionKeyManager.State.AllSecrets.init(masterSecret:clientFinishedBytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c5af4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c5b04 (   0x264) SessionKeyManager.State.HandshakeSecret.dataToSignInServerCertificateVerify.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c5d68 (    0x18) type metadata accessor for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c5d80 (    0x18) type metadata accessor for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c5d98 (    0x18) type metadata accessor for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c5db0 (   0x288) SessionKeyManager.State.HandshakeSecret.serverFinishedPayload.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6038 (   0x2ec) SessionKeyManager.addPreClientFinishedMessageToTransportHash(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6324 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c6338 (    0xdc) SessionKeyManager.State.HandshakeSecret.addMessageToTranscriptHash(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6414 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c6424 (   0x288) SessionKeyManager.State.MasterSecret.clientFinishedPayload.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c66ac (   0x184) SessionKeyManager.State.AllSecrets.generateSessionTicketPSK(ticketNonce:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6830 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c6840 (    0x58) lazy protocol witness table accessor for type SymmetricKey and conformance SymmetricKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6898 (    0x18) closure #1 in SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c68b0 (   0x15c) SessionKeyManager.State.EarlySecret.init(transcriptHasher:derivedSecret:binderKey:clientEarlyTrafficSecret:earlyExporterMasterSecret:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c6a0c (   0xd98) static SessionKeyManager.State.EarlySecret.tryToResume(session:binderSecret:clientHello:currentTime:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c77a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c77b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c77c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c77d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c77e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c77f4 (   0x170) specialized BidirectionalCollection.dropLast(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7964 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7974 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7984 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7994 (    0x18) closure #1 in SessionKeyManager.State.HandshakeSecret.dataToSignInServerCertificateVerify.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c79ac (    0x68) closure #1 in SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7a14 (    0x1c) partial apply for closure #1 in SessionKeyManager.generateHashForAuthenticator(transcript:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7a30 (   0x220) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7c50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7c60 (    0x14) specialized _ArrayBuffer._consumeAndCreateNew() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7c74 (    0x98) specialized Data.InlineSlice.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7d0c (    0x6c) specialized RandomAccessCollection<>.index(_:offsetBy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7d78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7d88 (    0xcc) specialized RandomAccessCollection<>.distance(from:to:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7e54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7e64 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c7e74 (    0xa0) specialized Data.init(count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7f14 (     0x8) type metadata instantiation function for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7f1c (    0x90) type metadata completion function for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fac (     0x4) initializeBufferWithCopyOfBuffer for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fb0 (     0x4) destroy for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fb4 (     0x4) initializeWithCopy for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fb8 (     0x4) assignWithCopy for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fbc (     0x4) initializeWithTake for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fc0 (     0x4) assignWithTake for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fc4 (     0x4) getEnumTagSinglePayload for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fc8 (     0x4) storeEnumTagSinglePayload for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fcc (    0x18) type metadata accessor for SessionKeyManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fe4 (     0x8) type metadata instantiation function for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c7fec (    0x90) type metadata completion function for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c807c (   0x120) initializeBufferWithCopyOfBuffer for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c819c (    0xd8) destroy for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8274 (    0xd0) initializeWithCopy for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8344 (    0xd0) assignWithCopy for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8414 (    0xd0) initializeWithTake for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c84e4 (    0xd0) assignWithTake for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c85b4 (    0x14) getEnumTagSinglePayload for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c85c8 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000002211c8634 (    0x14) storeEnumTagSinglePayload for SessionKeyManager.State.AllSecrets [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8648 (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000002211c86b8 (     0x8) type metadata instantiation function for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c86c0 (    0xd4) type metadata completion function for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8794 (   0x268) initializeBufferWithCopyOfBuffer for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c89fc (   0x168) destroy for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8b64 (   0x190) initializeWithCopy for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8cf4 (   0x190) assignWithCopy for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c8e84 (   0x190) initializeWithTake for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9014 (   0x190) assignWithTake for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c91a4 (   0x2a0) getEnumTagSinglePayload for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9444 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211c9454 (   0x334) storeEnumTagSinglePayload for SessionKeyManager.State.MasterSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9788 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c979c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211c97b0 (     0x8) type metadata instantiation function for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c97b8 (    0xd0) type metadata completion function for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9888 (   0x208) initializeBufferWithCopyOfBuffer for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9a90 (   0x128) destroy for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9bb8 (   0x140) initializeWithCopy for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9cf8 (   0x140) assignWithCopy for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9e38 (   0x140) initializeWithTake for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211c9f78 (   0x140) assignWithTake for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca0b8 (   0x290) getEnumTagSinglePayload for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca348 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ca358 (   0x324) storeEnumTagSinglePayload for SessionKeyManager.State.EarlySecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca67c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ca690 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ca6a4 (     0x8) type metadata instantiation function for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca6ac (   0x168) type metadata completion function for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca814 (     0x4) initializeBufferWithCopyOfBuffer for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ca818 (   0x574) initializeBufferWithCopyOfBuffer for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cad8c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cada0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cadb0 (     0x4) destroy for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cadb4 (   0x40c) destroy for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cb1c0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cb1d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cb1e4 (     0x4) initializeWithCopy for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cb1e8 (   0x530) initializeWithCopy for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cb718 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cb72c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cb73c (     0x4) assignWithCopy for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cb740 (   0x7c4) assignWithCopy for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cbf04 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cbf18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cbf28 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cbf3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cbf4c (     0x4) initializeWithTake for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cbf50 (   0x530) initializeWithTake for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cc480 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cc494 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cc4a4 (     0x4) assignWithTake for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cc4a8 (   0x7c4) assignWithTake for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ccc6c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ccc80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ccc90 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ccca4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cccb4 (     0x4) getEnumTagSinglePayload for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cccb8 (   0x22c) getEnumTagSinglePayload for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ccee4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ccef4 (     0x4) storeEnumTagSinglePayload for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ccef8 (   0x2a4) storeEnumTagSinglePayload for SessionKeyManager [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd19c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cd1b0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cd1c4 (   0x184) getEnumTag for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd348 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211cd35c (     0x4) destructiveProjectEnumData for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd360 (   0x264) destructiveInjectEnumTag for SessionKeyManager.State [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd5c4 (     0x8) type metadata instantiation function for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd5cc (    0xd0) type metadata completion function for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd69c (   0x1d8) initializeBufferWithCopyOfBuffer for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd874 (   0x108) destroy for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cd97c (   0x118) initializeWithCopy for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cda94 (   0x118) assignWithCopy for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cdbac (   0x118) initializeWithTake for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cdcc4 (   0x118) assignWithTake for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cdddc (   0x288) getEnumTagSinglePayload for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce064 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ce074 (   0x31c) storeEnumTagSinglePayload for SessionKeyManager.State.HandshakeSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce390 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ce3a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211ce3b8 (    0x48) lazy protocol witness table accessor for type [UInt8] and conformance <A> [A] [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce400 (    0x5c) outlined destroy of SymmetricKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce45c (    0x64) outlined init with copy of SessionTicket? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce4c0 (    0x64) outlined init with take of SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce524 (    0x5c) outlined destroy of SessionTicket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce580 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211ce5b8 (    0x18) partial apply for closure #1 in SessionKeyManager.State.HandshakeSecret.dataToSignInServerCertificateVerify.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce5d0 (    0x30) static Extension.ServerCertificateType.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce600 (   0x1c8) ByteBuffer.writeServerCertificateType(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ce7c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ce7d8 (   0x4b8) ByteBuffer.readServerCertificateType(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cec90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211ceca0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cecb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cecc0 (    0x70) Extension.ServerCertificateType.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ced30 (    0xa0) Extension.ServerCertificateType.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cedd0 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ceddc (     0xc) protocol witness for Hashable.hash(into:) in conformance Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cede8 (    0x4c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cee34 (    0x44) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cee78 (     0xc) outlined consume of Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cee84 (     0x4) base witness table accessor for Equatable in Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cee88 (    0x54) lazy protocol witness table accessor for type Extension.ServerCertificateType and conformance Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211ceedc (    0x48) initializeBufferWithCopyOfBuffer for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cef24 (    0x10) destroy for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cef34 (    0x48) initializeWithCopy for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cef7c (    0x54) assignWithCopy for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cefd0 (    0x40) assignWithTake for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf010 (    0x48) getEnumTagSinglePayload for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf058 (    0x44) storeEnumTagSinglePayload for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf09c (     0x8) getEnumTag for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0a4 (     0x4) destructiveProjectEnumData for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0a8 (     0xc) destructiveInjectEnumTag for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0b4 (    0x10) type metadata accessor for Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0c4 (     0x4) static EncryptedExtensions.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0c8 (     0x4) EncryptedExtensions.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0cc (    0x2c) EncryptedExtensions.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf0f8 (    0x20) EncryptedExtensions.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf118 (     0x4) EncryptedExtensions.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf11c (     0x4) EncryptedExtensions.init(extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf120 (    0xc0) EncryptedExtensions.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf1e0 (    0xc8) EncryptedExtensions.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf2a8 (     0x8) protocol witness for Hashable.hashValue.getter in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf2b0 (     0x8) protocol witness for Hashable.hash(into:) in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf2b8 (    0xc4) protocol witness for Hashable._rawHashValue(seed:) in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf37c (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf388 (     0x8) static EncryptedExtensions.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf390 (   0x4ac) EncryptedExtensions.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf83c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cf84c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211cf884 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cf894 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cf8a4 (    0x18) EncryptedExtensions.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cf8bc (   0x50c) readExtensions #1 (_:) in EncryptedExtensions.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cfdc8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cfdd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cfde8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cfdf8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cfe08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211cfe18 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cfe20 (     0x8) protocol witness for HandshakeMessageProtocol.write(into:) in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cfe28 (    0x2c) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cfe54 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211cfe8c (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cfecc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211cff04 (    0xd4) specialized EncryptedExtensions.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cffd8 (     0x4) base witness table accessor for Equatable in EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211cffdc (    0x54) lazy protocol witness table accessor for type EncryptedExtensions and conformance EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0030 (    0x10) type metadata accessor for EncryptedExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0040 (    0x34) static Extension.TicketRequest.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0074 (   0x124) ByteBuffer.writeTicketRequestExtension(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0198 (   0x1d0) ByteBuffer.readTicketRequestExtension(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0368 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d0378 (    0x5c) Extension.TicketRequest.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d03d4 (    0x10) static ClientTicketRequest.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d03e4 (    0x10) static Extension.TicketRequest.ServerTicketRequestHint.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d03f4 (    0x84) Extension.TicketRequest.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0478 (    0x88) protocol witness for Hashable.hashValue.getter in conformance Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0500 (    0x64) protocol witness for Hashable.hash(into:) in conformance Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0564 (    0x84) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d05e8 (    0x3c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0624 (     0x4) ClientTicketRequest.newSessionCount.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0628 (     0x8) ClientTicketRequest.newSessionCount.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0630 (    0x20) ClientTicketRequest.newSessionCount.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0650 (     0x4) ClientTicketRequest.newSessionCount.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0654 (     0x8) ClientTicketRequest.resumptionCount.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d065c (     0x8) ClientTicketRequest.resumptionCount.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0664 (    0x20) ClientTicketRequest.resumptionCount.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0684 (     0x4) ClientTicketRequest.resumptionCount.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0688 (     0x8) ClientTicketRequest.init(newSessionCount:resumptionCount:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0690 (   0x110) ClientTicketRequest.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d07a0 (    0x34) ClientTicketRequest.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d07d4 (    0x60) ClientTicketRequest.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0834 (    0x60) protocol witness for Hashable.hashValue.getter in conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0894 (    0x40) protocol witness for Hashable.hash(into:) in conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d08d4 (    0x5c) protocol witness for Hashable._rawHashValue(seed:) in conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0930 (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0938 (    0x20) protocol witness for static Equatable.== infix(_:_:) in conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0958 (     0x4) Extension.TicketRequest.ServerTicketRequestHint.expectedCount.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d095c (     0x8) Extension.TicketRequest.ServerTicketRequestHint.expectedCount.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0964 (    0x20) Extension.TicketRequest.ServerTicketRequestHint.expectedCount.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0984 (     0x4) Extension.TicketRequest.ServerTicketRequestHint.expectedCount.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0988 (     0x4) Extension.TicketRequest.ServerTicketRequestHint.init(expectedCount:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d098c (    0x28) Extension.TicketRequest.ServerTicketRequestHint.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d09b4 (    0x48) Extension.TicketRequest.ServerTicketRequestHint.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d09fc (    0x48) protocol witness for Hashable.hashValue.getter in conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0a44 (    0x2c) protocol witness for Hashable.hash(into:) in conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0a70 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0ab4 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0ac8 (    0xa4) Extension.TicketRequest.ServerTicketRequestHint.description.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0b6c (     0x8) protocol witness for CustomStringConvertible.description.getter in conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0b74 (     0x4) base witness table accessor for Equatable in Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0b78 (    0x54) lazy protocol witness table accessor for type Extension.TicketRequest and conformance Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0bcc (     0x4) base witness table accessor for Equatable in ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0bd0 (    0x54) lazy protocol witness table accessor for type ClientTicketRequest and conformance ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0c24 (     0x4) base witness table accessor for Equatable in Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0c28 (    0x54) lazy protocol witness table accessor for type Extension.TicketRequest.ServerTicketRequestHint and conformance Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0c7c (    0x14) __swift_memcpy3_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0c90 (    0x74) getEnumTagSinglePayload for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0d04 (    0x8c) storeEnumTagSinglePayload for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0d90 (     0x8) getEnumTag for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0d98 (     0x4) destructiveProjectEnumData for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0d9c (     0xc) destructiveInjectEnumTag for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0da8 (    0x10) type metadata accessor for Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0db8 (    0x70) getEnumTagSinglePayload for ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0e28 (    0xb4) storeEnumTagSinglePayload for ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0edc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211d0ef0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002211d0f04 (    0x10) type metadata accessor for ClientTicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0f14 (    0x10) type metadata accessor for Extension.TicketRequest.ServerTicketRequestHint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0f24 (    0x30) HandshakeMessageParser.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d0f54 (   0x1c0) HandshakeMessageParser.appendBytes(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d1114 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d1124 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d1134 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d1144 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d1154 (   0x14c) HandshakeMessageParser.parseHandshakeMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d12a0 (    0x84) one-time initialization function for logger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d1324 (   0xe44) closure #1 in HandshakeMessageParser.parseHandshakeMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2168 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000002211d21b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d21c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d21d8 (    0x84) HandshakeMessageParser.ParseResult.init(messageBytes:message:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d225c (    0x44) HandshakeMessageParser.ParseResult.messageBytes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d22a0 (    0x40) HandshakeMessageParser.ParseResult.messageBytes.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d22e0 (    0x20) HandshakeMessageParser.ParseResult.messageBytes.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2300 (     0x4) HandshakeMessageParser.ParseResult.messageBytes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2304 (    0xe4) HandshakeMessageParser.ParseResult.message.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d23e8 (    0x6c) HandshakeMessageParser.ParseResult.message.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2454 (    0x20) HandshakeMessageParser.ParseResult.message.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2474 (     0x4) HandshakeMessageParser.ParseResult.message.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2478 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000002211d2498 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000002211d24b8 (    0x68) initializeBufferWithCopyOfBuffer for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2520 (    0x1c) destroy for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d253c (    0x68) initializeWithCopy for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d25a4 (    0xc4) assignWithCopy for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2668 (    0x14) __swift_memcpy24_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d267c (    0x74) assignWithTake for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d26f0 (    0x5c) getEnumTagSinglePayload for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d274c (    0x50) storeEnumTagSinglePayload for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d279c (    0x10) type metadata accessor for HandshakeMessageParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d27ac (    0x34) initializeBufferWithCopyOfBuffer for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d27e0 (    0x64) destroy for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2844 (   0x104) initializeWithCopy for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2948 (   0x140) assignWithCopy for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2a88 (    0x34) __swift_memcpy129_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2abc (    0x9c) assignWithTake for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2b58 (    0x48) getEnumTagSinglePayload for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2ba0 (    0x68) storeEnumTagSinglePayload for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2c08 (    0x10) type metadata accessor for HandshakeMessageParser.ParseResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2c18 (     0x4) static Extension.SignatureAlgorithms.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2c1c (   0x194) ByteBuffer.writeSignatureAlgorithms(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d2db0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d2dc0 (   0x3bc) ByteBuffer.readSignatureAlgorithms(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d317c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d318c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d319c (     0x4) Extension.SignatureAlgorithms.init(schemes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d31a0 (     0x4) Extension.SignatureAlgorithms.schemes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d31a4 (    0x2c) Extension.SignatureAlgorithms.schemes.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d31d0 (    0x20) Extension.SignatureAlgorithms.schemes.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d31f0 (     0x4) Extension.SignatureAlgorithms.schemes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d31f4 (    0x50) Extension.SignatureAlgorithms.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3244 (    0x70) Extension.SignatureAlgorithms.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d32b4 (     0x8) protocol witness for Hashable.hashValue.getter in conformance Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d32bc (    0x54) protocol witness for Hashable.hash(into:) in conformance Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3310 (    0x6c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d337c (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3388 (     0x4) base witness table accessor for Equatable in Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d338c (    0x54) lazy protocol witness table accessor for type Extension.SignatureAlgorithms and conformance Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d33e0 (    0x10) type metadata accessor for Extension.SignatureAlgorithms [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d33f0 (    0x34) ClientHello.init(legacyVersion:random:legacySessionID:cipherSuites:legacyCompressionMethods:extensions:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3424 (     0x4) static ClientHello.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3428 (    0x28) ClientHello.serverCertificateTypes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3450 (    0x60) ClientHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34b0 (     0x8) ClientHello.legacyVersion.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34b8 (     0x8) ClientHello.legacyVersion.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34c0 (    0x20) ClientHello.legacyVersion.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34e0 (     0x4) ClientHello.legacyVersion.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34e4 (     0xc) ClientHello.random.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34f0 (     0xc) ClientHello.random.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d34fc (    0x20) ClientHello.random.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d351c (     0x4) ClientHello.random.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3520 (    0x18) ClientHello.legacySessionID.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3538 (    0x18) ClientHello.legacySessionID.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3550 (    0x20) ClientHello.legacySessionID.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3570 (     0x4) ClientHello.legacySessionID.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3574 (     0x8) ClientHello.cipherSuites.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d357c (    0x2c) ClientHello.cipherSuites.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d35a8 (    0x20) ClientHello.cipherSuites.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d35c8 (     0x4) ClientHello.cipherSuites.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d35cc (     0x8) ClientHello.legacyCompressionMethods.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d35d4 (    0x2c) ClientHello.legacyCompressionMethods.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3600 (    0x20) ClientHello.legacyCompressionMethods.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3620 (     0x4) ClientHello.legacyCompressionMethods.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3624 (     0x8) ClientHello.extensions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d362c (    0x2c) ClientHello.extensions.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3658 (    0x20) ClientHello.extensions.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3678 (     0x4) ClientHello.extensions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d367c (   0x198) ClientHello.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3814 (    0x40) ClientHello.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3854 (    0x68) protocol witness for Hashable.hashValue.getter in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d38bc (    0x4c) protocol witness for Hashable.hash(into:) in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d3908 (    0x64) protocol witness for Hashable._rawHashValue(seed:) in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d396c (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d39d8 (     0x8) static ClientHello.handshakeType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d39e0 (   0x7c0) ClientHello.write(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d41a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d41b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d41c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d41d0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211d4208 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4218 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4228 (   0x118) readCompressionMethods #1 (_:) in ClientHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4350 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4360 (   0x4f0) readExtensions #1 (_:) in ClientHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4850 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4860 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4870 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4880 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d4890 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d48a0 (     0x8) protocol witness for static HandshakeMessageProtocol.handshakeType.getter in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d48a8 (    0x4c) protocol witness for HandshakeMessageProtocol.write(into:) in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d48f4 (    0x60) protocol witness for HandshakeMessageProtocol.init(bytes:) in conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4954 (   0x144) specialized static ClientHello.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4a98 (   0x294) specialized ClientHello.init(bytes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4d2c (    0x90) specialized ClientHello.serverCertificateTypes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4dbc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211d4df4 (    0x40) outlined retain of Extension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4e34 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002211d4e6c (    0x2c) outlined release of [CipherSuite] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4e98 (    0x5c) outlined init with take of Extension.TicketRequest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4ef4 (    0x5c) outlined init with take of Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4f50 (    0x5c) outlined init with take of Extension.ServerCertificateType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d4fac (    0x5c) outlined init with take of Extension.KeyShare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5008 (    0x5c) outlined init with take of Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5064 (    0x5c) outlined init with take of Extension.ServerName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d50c0 (     0x4) base witness table accessor for Equatable in ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d50c4 (    0x54) lazy protocol witness table accessor for type ClientHello and conformance ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5118 (    0x34) initializeBufferWithCopyOfBuffer for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d514c (    0x44) destroy for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5190 (    0x78) initializeWithCopy for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5208 (    0xd0) assignWithCopy for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d52d8 (    0x2c) __swift_memcpy104_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5304 (    0x80) assignWithTake for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5384 (    0x48) getEnumTagSinglePayload for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d53cc (    0x58) storeEnumTagSinglePayload for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5424 (    0x10) type metadata accessor for ClientHello [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5434 (    0x64) outlined init with take of Random? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5498 (    0x6c) static Extension.PreSharedKey.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5504 (    0xcc) ByteBuffer.writePreSharedKey(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d55d0 (   0x1e0) ByteBuffer.readPreSharedKey(messageType:helloRetryRequest:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d57c0 (     0x4) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.init(identity:obfuscatedTicketAge:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57c4 (     0x4) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.init(serializedBinder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57c8 (     0x4) Extension.PreSharedKey.OfferedPSKs.init(identities:binders:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57cc (     0x4) Extension.PreSharedKey.OfferedPSKs.identities.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57d0 (    0x2c) Extension.PreSharedKey.OfferedPSKs.identities.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d57fc (    0x20) Extension.PreSharedKey.OfferedPSKs.identities.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d581c (     0x4) Extension.PreSharedKey.OfferedPSKs.identities.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5820 (     0x8) Extension.PreSharedKey.OfferedPSKs.binders.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5828 (    0x2c) Extension.PreSharedKey.OfferedPSKs.binders.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5854 (    0x20) Extension.PreSharedKey.OfferedPSKs.binders.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5874 (     0x4) Extension.PreSharedKey.OfferedPSKs.binders.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5878 (    0x40) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.identity.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d58b8 (    0x40) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.identity.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d58f8 (    0x20) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.identity.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5918 (     0x4) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.identity.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d591c (     0x8) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.obfuscatedTicketAge.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5924 (     0x8) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.obfuscatedTicketAge.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d592c (    0x20) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.obfuscatedTicketAge.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d594c (     0x4) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.obfuscatedTicketAge.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5950 (    0x40) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.serializedBinder.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5990 (    0x40) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.serializedBinder.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d59d0 (    0x20) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.serializedBinder.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d59f0 (     0x4) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.serializedBinder.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d59f4 (    0xa0) Extension.PreSharedKey.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5a94 (    0x58) static Extension.PreSharedKey.OfferedPSKs.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5aec (    0xb0) Extension.PreSharedKey.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5b9c (    0xac) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5c48 (    0xac) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5cf4 (    0xa8) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5d9c (    0x80) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5e1c (    0x74) Extension.PreSharedKey.OfferedPSKs.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5e90 (    0x78) Extension.PreSharedKey.OfferedPSKs.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5f08 (    0x74) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5f7c (    0x70) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d5fec (    0x70) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d605c (    0x5c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d60b8 (    0xe0) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6198 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d61a8 (    0x40) static Extension.PreSharedKey.OfferedPSKs.PSKIdentity.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d61e8 (    0xfc) Extension.PreSharedKey.OfferedPSKs.PSKIdentity.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d62e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d62f4 (    0x10) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6304 (    0xe8) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d63ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d63fc (    0xf4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d64f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d6500 (    0x4c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d654c (    0xe0) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d662c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d663c (     0x4) static Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.__derived_struct_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6640 (    0xe4) Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6724 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d6734 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6740 (    0xdc) protocol witness for Hashable.hash(into:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d681c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d682c (    0xe4) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d6910 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d6920 (    0x1c) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d693c (   0x834) ByteBuffer.writeOfferedPSKs(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7180 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7190 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d71f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7200 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7210 (   0x130) ByteBuffer.readOfferedPSKs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7340 (   0x11c) readIdentities #1 (_:) in ByteBuffer.readOfferedPSKs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d745c (   0x2b8) ByteBuffer.readPSKIdentity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7714 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7724 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7734 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7744 (   0x114) readBinderEntries #1 (_:) in ByteBuffer.readOfferedPSKs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7858 (   0x37c) ByteBuffer.readPSKBinderEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7bd4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7be4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7bf4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7c04 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211d7c14 (     0x4) base witness table accessor for Equatable in Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7c18 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKey and conformance Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7c6c (     0x4) base witness table accessor for Equatable in Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7c70 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKey.OfferedPSKs and conformance Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7cc4 (     0x4) base witness table accessor for Equatable in Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7cc8 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKey.OfferedPSKs.PSKIdentity and conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7d1c (     0x4) base witness table accessor for Equatable in Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7d20 (    0x54) lazy protocol witness table accessor for type Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry and conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7d74 (    0x4c) initializeBufferWithCopyOfBuffer for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7dc0 (    0x10) destroy for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7dd0 (    0x4c) initializeWithCopy for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7e1c (    0x58) assignWithCopy for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7e74 (    0x14) __swift_memcpy17_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7e88 (    0x48) assignWithTake for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7ed0 (    0x48) getEnumTagSinglePayload for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f18 (    0x44) storeEnumTagSinglePayload for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f5c (     0x8) getEnumTag for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f64 (     0x4) destructiveProjectEnumData for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f68 (     0xc) destructiveInjectEnumTag for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f74 (    0x10) type metadata accessor for Extension.PreSharedKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7f84 (    0x38) initializeBufferWithCopyOfBuffer for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7fbc (    0x3c) destroy for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d7ff8 (    0x38) initializeWithCopy for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8030 (    0x60) assignWithCopy for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8090 (    0x48) assignWithTake for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d80d8 (    0x48) getEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8120 (    0x3c) storeEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d815c (    0x10) type metadata accessor for Extension.PreSharedKey.OfferedPSKs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d816c (    0x34) initializeBufferWithCopyOfBuffer for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d81a0 (     0xc) destroy for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d81ac (    0x54) initializeWithCopy for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8200 (    0x5c) assignWithCopy for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d825c (    0x14) __swift_memcpy28_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8270 (    0x4c) assignWithTake for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d82bc (    0x54) getEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8310 (    0x54) storeEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8364 (    0x10) type metadata accessor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8374 (    0x4c) initializeBufferWithCopyOfBuffer for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d83c0 (    0x4c) initializeWithCopy for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d840c (    0x54) assignWithCopy for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8460 (    0x44) assignWithTake for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d84a4 (    0x54) getEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d84f8 (    0x50) storeEnumTagSinglePayload for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8548 (    0x10) type metadata accessor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8558 (     0x4) destroy for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d855c (    0x6c) PartialHandshakeResult.init(handshakeBytesToSend:newEncryptionLevel:sessionTicket:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d85c8 (    0x20) type metadata accessor for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d85e8 (    0x68) outlined init with take of PartialHandshakeResult.NewEncryptionLevel? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8650 (    0x48) PartialHandshakeResult.handshakeBytesToSend.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8698 (    0x44) PartialHandshakeResult.handshakeBytesToSend.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d86dc (    0x20) PartialHandshakeResult.handshakeBytesToSend.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d86fc (     0x4) PartialHandshakeResult.handshakeBytesToSend.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8700 (    0x44) PartialHandshakeResult.newEncryptionLevel.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8744 (    0x68) outlined init with copy of PartialHandshakeResult.NewEncryptionLevel? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d87ac (    0x44) PartialHandshakeResult.newEncryptionLevel.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d87f0 (    0x68) outlined assign with take of PartialHandshakeResult.NewEncryptionLevel? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8858 (    0x48) PartialHandshakeResult.newEncryptionLevel.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d88a0 (     0x4) PartialHandshakeResult.newEncryptionLevel.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d88a4 (    0x44) PartialHandshakeResult.sessionTicket.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d88e8 (    0x48) PartialHandshakeResult.sessionTicket.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8930 (    0x48) PartialHandshakeResult.sessionTicket.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8978 (     0x4) PartialHandshakeResult.sessionTicket.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d897c (    0xa4) PartialHandshakeResult.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8a20 (    0x20) type metadata accessor for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8a40 (    0x38) type metadata accessor for PartialHandshakeResult [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8a78 (   0x334) initializeBufferWithCopyOfBuffer for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8dac (   0x194) destroy for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d8f40 (   0x2e4) initializeWithCopy for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d9224 (   0x4ac) assignWithCopy for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d96d0 (    0x5c) outlined destroy of PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d972c (    0x54) outlined destroy of Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d9780 (   0x278) initializeWithTake for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d99f8 (   0x434) assignWithTake for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d9e2c (    0x14) getEnumTagSinglePayload for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d9e40 (    0xb8) (null) [FUNC, FunctionStarts] 
                0x00000002211d9ef8 (    0x14) storeEnumTagSinglePayload for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211d9f0c (    0xb4) (null) [FUNC, FunctionStarts] 
                0x00000002211d9fc0 (    0xa0) type metadata completion function for PartialHandshakeResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da060 (    0x58) type metadata accessor for PartialHandshakeResult.NewEncryptionLevel? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da0b8 (   0x1e4) initializeBufferWithCopyOfBuffer for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da29c (    0xf8) destroy for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da394 (   0x11c) initializeWithCopy for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da4b0 (   0x12c) assignWithCopy for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da5dc (   0x11c) initializeWithTake for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da6f8 (   0x12c) assignWithTake for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da824 (    0x28) getEnumTagSinglePayload for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da84c (    0x28) storeEnumTagSinglePayload for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da874 (     0x4) getEnumTag for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da878 (     0x4) destructiveProjectEnumData for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da87c (    0x10) destructiveInjectEnumTag for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da88c (    0xc0) type metadata completion function for PartialHandshakeResult.NewEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da94c (    0x30) static Extension.SupportedVersions.__derived_enum_equals(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211da97c (   0x1e0) ByteBuffer.writeSupportedVersions(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211dab5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211dab6c (   0x3fc) ByteBuffer.readSupportedVersions(messageType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211daf68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211daf78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002211daf88 (    0x88) Extension.SupportedVersions.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db010 (    0xc0) Extension.SupportedVersions.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db0d0 (     0xc) protocol witness for Hashable.hashValue.getter in conformance Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db0dc (     0xc) protocol witness for Hashable.hash(into:) in conformance Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db0e8 (    0x4c) protocol witness for Hashable._rawHashValue(seed:) in conformance Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db134 (    0x44) protocol witness for static Equatable.== infix(_:_:) in conformance Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db178 (     0x4) base witness table accessor for Equatable in Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db17c (    0x54) lazy protocol witness table accessor for type Extension.SupportedVersions and conformance Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db1d0 (    0x48) initializeBufferWithCopyOfBuffer for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db218 (    0x10) destroy for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db228 (    0x48) initializeWithCopy for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db270 (    0x54) assignWithCopy for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db2c4 (    0x14) __swift_memcpy9_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db2d8 (    0x40) assignWithTake for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db318 (    0x48) getEnumTagSinglePayload for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db360 (    0x44) storeEnumTagSinglePayload for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3a4 (     0x8) getEnumTag for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3ac (     0x4) destructiveProjectEnumData for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3b0 (     0xc) destructiveInjectEnumTag for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3bc (    0x10) type metadata accessor for Extension.SupportedVersions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3cc (     0x4) SwiftTLSDefaultClock.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3d0 (     0x4) SwiftTLSDefaultClock.now() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3d4 (     0x4) protocol witness for SwiftTLSClock.now() in conformance SwiftTLSDefaultClock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3d8 (    0x10) type metadata accessor for SwiftTLSDefaultClock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002211db3e8 (    0x48) nwswifttls_get_encryption_level.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000002211db430 (  0x11f0) __TEXT __auth_stubs
                0x00000002211db430 (    0x10) DYLD-STUB$$DataProtocol.copyBytes<A>(to:from:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db440 (    0x10) DYLD-STUB$$__DataStorage.init(bytes:length:copy:deallocator:offset:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db450 (    0x10) DYLD-STUB$$__DataStorage.init(bytes:length:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db460 (    0x10) DYLD-STUB$$__DataStorage._bytes.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db470 (    0x10) DYLD-STUB$$__DataStorage.init(length:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db480 (    0x10) DYLD-STUB$$__DataStorage._length.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db490 (    0x10) DYLD-STUB$$__DataStorage._offset.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4a0 (    0x10) DYLD-STUB$$type metadata accessor for __DataStorage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4b0 (    0x10) DYLD-STUB$$dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4c0 (    0x10) DYLD-STUB$$NSFastEnumerationIterator.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4d0 (    0x10) DYLD-STUB$$type metadata accessor for NSFastEnumerationIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4e0 (    0x10) DYLD-STUB$$Data.LargeSlice.ensureUniqueReference() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db4f0 (    0x10) DYLD-STUB$$Data.InlineSlice.ensureUniqueReference() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db500 (    0x10) DYLD-STUB$$Data._copyContents(initializing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db510 (    0x10) DYLD-STUB$$type metadata accessor for Data.RangeReference [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db520 (    0x10) DYLD-STUB$$Data._Representation.resetBytes(in:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db530 (    0x10) DYLD-STUB$$Data._Representation.replaceSubrange(_:with:count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db540 (    0x10) DYLD-STUB$$Data._Representation.withUnsafeMutableBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db550 (    0x10) DYLD-STUB$$Data._Representation.append(contentsOf:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db560 (    0x10) DYLD-STUB$$Data._Representation.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db570 (    0x10) DYLD-STUB$$Data._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db580 (    0x10) DYLD-STUB$$static Data._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db590 (    0x10) DYLD-STUB$$Data.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5a0 (    0x10) DYLD-STUB$$Data.append<A>(contentsOf:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5b0 (    0x10) DYLD-STUB$$Data.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5c0 (    0x10) DYLD-STUB$$type metadata accessor for Data.Iterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5d0 (    0x10) DYLD-STUB$$Data.Iterator.init(_:at:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5e0 (    0x10) DYLD-STUB$$Date.init(timeIntervalSinceReferenceDate:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db5f0 (    0x10) DYLD-STUB$$Date.timeIntervalSinceReferenceDate.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db600 (    0x10) DYLD-STUB$$Date.timeIntervalSince(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db610 (    0x10) DYLD-STUB$$Date.addingTimeInterval(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db620 (    0x10) DYLD-STUB$$static Date.< infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db630 (    0x10) DYLD-STUB$$static Date.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db640 (    0x10) DYLD-STUB$$Date.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db650 (    0x10) DYLD-STUB$$type metadata accessor for Date [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db660 (    0x10) DYLD-STUB$$Logger.logObject.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db670 (    0x10) DYLD-STUB$$Logger.init(subsystem:category:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db680 (    0x10) DYLD-STUB$$type metadata accessor for Logger [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db690 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.update(bufferPointer:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6a0 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.finalize() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6b0 (    0x10) DYLD-STUB$$static HashFunction.hash<A>(data:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6c0 (    0x10) DYLD-STUB$$HashFunction.update<A>(data:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6d0 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6e0 (    0x10) DYLD-STUB$$type metadata accessor for SHA384Digest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db6f0 (    0x10) DYLD-STUB$$type metadata accessor for SharedSecret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db700 (    0x10) DYLD-STUB$$SymmetricKey.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db710 (    0x10) DYLD-STUB$$static SymmetricKey.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db720 (    0x10) DYLD-STUB$$SymmetricKey.init<A>(data:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db730 (    0x10) DYLD-STUB$$type metadata accessor for SymmetricKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db740 (    0x10) DYLD-STUB$$type metadata accessor for HashedAuthenticationCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db750 (    0x10) DYLD-STUB$$static MessageAuthenticationCode.== infix<A>(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db760 (    0x10) DYLD-STUB$$static HKDF.expand<A, B>(pseudoRandomKey:info:outputByteCount:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db770 (    0x10) DYLD-STUB$$static HKDF.extract<A>(inputKeyMaterial:salt:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db780 (    0x10) DYLD-STUB$$static HMAC.authenticationCode<A>(for:using:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db790 (    0x10) DYLD-STUB$$P256.Signing.ECDSASignature.init<A>(derRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7a0 (    0x10) DYLD-STUB$$type metadata accessor for P256.Signing.ECDSASignature [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7b0 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.isValidSignature<A>(_:for:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7c0 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.init<A>(derRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7d0 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.rawRepresentation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7e0 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.init<A>(rawRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db7f0 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db800 (    0x10) DYLD-STUB$$type metadata accessor for P256.Signing.PublicKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db810 (    0x10) DYLD-STUB$$P384.KeyAgreement.PublicKey.x963Representation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db820 (    0x10) DYLD-STUB$$P384.KeyAgreement.PublicKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db830 (    0x10) DYLD-STUB$$type metadata accessor for P384.KeyAgreement.PublicKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db840 (    0x10) DYLD-STUB$$P384.KeyAgreement.PrivateKey.sharedSecretFromKeyAgreement(with:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db850 (    0x10) DYLD-STUB$$P384.KeyAgreement.PrivateKey.publicKey.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db860 (    0x10) DYLD-STUB$$P384.KeyAgreement.PrivateKey.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db870 (    0x10) DYLD-STUB$$type metadata accessor for P384.KeyAgreement.PrivateKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db880 (    0x10) DYLD-STUB$$dispatch thunk of static Digest.byteCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db890 (    0x10) DYLD-STUB$$type metadata accessor for SHA384 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8a0 (    0x10) DYLD-STUB$$dispatch thunk of static Comparable.< infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8b0 (    0x10) DYLD-STUB$$static String._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8c0 (    0x10) DYLD-STUB$$String.init<A>(describing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8d0 (    0x10) DYLD-STUB$$static String._fromUTF8Repairing(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8e0 (    0x10) DYLD-STUB$$String.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db8f0 (    0x10) DYLD-STUB$$String.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db900 (    0x10) DYLD-STUB$$String.UTF8View._foreignCount() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db910 (    0x10) DYLD-STUB$$String.UTF8View._foreignIndex(after:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db920 (    0x10) DYLD-STUB$$String.UTF8View._foreignIndex(_:offsetBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db930 (    0x10) DYLD-STUB$$String.UTF8View._foreignSubscript(position:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db940 (    0x10) DYLD-STUB$$String.UTF16View.index(_:offsetBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db950 (    0x10) DYLD-STUB$$String.init<A>(_:radix:uppercase:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db960 (    0x10) DYLD-STUB$$dispatch thunk of Sequence._copyContents(initializing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db970 (    0x10) DYLD-STUB$$dispatch thunk of Sequence.underestimatedCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db980 (    0x10) DYLD-STUB$$dispatch thunk of Sequence.withContiguousStorageIfAvailable<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db990 (    0x10) DYLD-STUB$$Sequence<>.contains(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9a0 (    0x10) DYLD-STUB$$Array._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9b0 (    0x10) DYLD-STUB$$static Array._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9c0 (    0x10) DYLD-STUB$$static Array._allocateBufferUninitialized(minimumCapacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9d0 (    0x10) DYLD-STUB$$dispatch thunk of Collection.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9e0 (    0x10) DYLD-STUB$$static os_log_type_t.debug.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211db9f0 (    0x10) DYLD-STUB$$static os_log_type_t.error.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba00 (    0x10) DYLD-STUB$$static os_log_type_t.default.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba10 (    0x10) DYLD-STUB$$NSArray.makeIterator() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba20 (    0x10) DYLD-STUB$$type metadata accessor for Optional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba30 (    0x10) DYLD-STUB$$UnsafeMutableBufferPointer.init(start:count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba40 (    0x10) DYLD-STUB$$dispatch thunk of IteratorProtocol.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba50 (    0x10) DYLD-STUB$$UnsafeMutableRawBufferPointer.copyBytes<A>(from:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba60 (    0x10) DYLD-STUB$$dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba70 (    0x10) DYLD-STUB$$dispatch thunk of BinaryInteger._lowWord.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba80 (    0x10) DYLD-STUB$$dispatch thunk of BinaryInteger.bitWidth.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dba90 (    0x10) DYLD-STUB$$dispatch thunk of static BinaryInteger.isSigned.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbaa0 (    0x10) DYLD-STUB$$dispatch thunk of BinaryInteger.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbab0 (    0x10) DYLD-STUB$$static _SetStorage.copy(original:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbac0 (    0x10) DYLD-STUB$$static _SetStorage.resize(original:capacity:move:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbad0 (    0x10) DYLD-STUB$$_StringGuts.grow(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbae0 (    0x10) DYLD-STUB$$_StringGuts.copyUTF8(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbaf0 (    0x10) DYLD-STUB$$_StringObject.sharedUTF8.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb00 (    0x10) DYLD-STUB$$withUnsafeBytes<A, B>(of:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb10 (    0x10) DYLD-STUB$$dispatch thunk of static FixedWidthInteger.bitWidth.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb20 (    0x10) DYLD-STUB$$dispatch thunk of FixedWidthInteger.bigEndian.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb30 (    0x10) DYLD-STUB$$dispatch thunk of FixedWidthInteger.init(bigEndian:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb40 (    0x10) DYLD-STUB$$dispatch thunk of static AdditiveArithmetic.zero.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb50 (    0x10) DYLD-STUB$$dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb60 (    0x10) DYLD-STUB$$dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb70 (    0x10) DYLD-STUB$$withUnsafeMutableBytes<A, B>(of:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb80 (    0x10) DYLD-STUB$$dispatch thunk of CustomStringConvertible.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbb90 (    0x10) DYLD-STUB$$dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbba0 (    0x10) DYLD-STUB$$_stringCompareWithSmolCheck(_:_:expecting:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbbb0 (    0x10) DYLD-STUB$$dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbbc0 (    0x10) DYLD-STUB$$ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbbd0 (    0x10) DYLD-STUB$$Error._getEmbeddedNSError() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbbe0 (    0x10) DYLD-STUB$$Error._code.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbbf0 (    0x10) DYLD-STUB$$Error._domain.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc00 (    0x10) DYLD-STUB$$Error._userInfo.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc10 (    0x10) DYLD-STUB$$Slice<>.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc20 (    0x10) DYLD-STUB$$Hasher.init(_seed:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc30 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc40 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc50 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc60 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc70 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc80 (    0x10) DYLD-STUB$$Hasher._finalize() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbc90 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbca0 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbcb0 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbcc0 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbcd0 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbce0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbcf0 (    0x10) DYLD-STUB$$SecCertificateCopyKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd00 (    0x10) DYLD-STUB$$SecCertificateCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd10 (    0x10) DYLD-STUB$$SecKeyCopyPublicBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd20 (    0x10) DYLD-STUB$$SecPolicyCreateSSLWithKeyUsage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd30 (    0x10) DYLD-STUB$$SecTrustCreateWithCertificates [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd40 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd50 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd60 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd70 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd80 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbd90 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbda0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbdb0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbdc0 (    0x10) DYLD-STUB$$_swift_stdlib_reportUnimplementedInitializer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbdd0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbde0 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbdf0 (    0x10) DYLD-STUB$$cc_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe00 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe10 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe20 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe30 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe40 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe50 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe60 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe70 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe80 (    0x10) DYLD-STUB$$nw_array_append [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbe90 (    0x10) DYLD-STUB$$nw_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbea0 (    0x10) DYLD-STUB$$nw_endpoint_copy_address_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbeb0 (    0x10) DYLD-STUB$$nw_endpoint_copy_parent_endpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbec0 (    0x10) DYLD-STUB$$nw_endpoint_copy_proxy_original_endpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbed0 (    0x10) DYLD-STUB$$nw_endpoint_get_bonjour_fullname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbee0 (    0x10) DYLD-STUB$$nw_endpoint_get_hostname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbef0 (    0x10) DYLD-STUB$$nw_endpoint_get_parent_endpoint_domain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf00 (    0x10) DYLD-STUB$$nw_endpoint_get_srv_name [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf10 (    0x10) DYLD-STUB$$nw_endpoint_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf20 (    0x10) DYLD-STUB$$nw_frame_array_append [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf30 (    0x10) DYLD-STUB$$nw_frame_array_first [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf40 (    0x10) DYLD-STUB$$nw_frame_array_foreach [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf50 (    0x10) DYLD-STUB$$nw_frame_array_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf60 (    0x10) DYLD-STUB$$nw_frame_array_is_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf70 (    0x10) DYLD-STUB$$nw_frame_array_remove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf80 (    0x10) DYLD-STUB$$nw_frame_claim [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbf90 (    0x10) DYLD-STUB$$nw_frame_collapse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbfa0 (    0x10) DYLD-STUB$$nw_frame_finalize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbfb0 (    0x10) DYLD-STUB$$nw_frame_unclaim [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbfc0 (    0x10) DYLD-STUB$$nw_frame_unclaimed_bytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbfd0 (    0x10) DYLD-STUB$$nw_parameters_copy_default_protocol_stack [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbfe0 (    0x10) DYLD-STUB$$nw_parameters_copy_protocol_options_legacy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dbff0 (    0x10) DYLD-STUB$$nw_parameters_get_enable_tls_keylog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc000 (    0x10) DYLD-STUB$$nw_parameters_get_server_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc010 (    0x10) DYLD-STUB$$nw_protocol_copy_quic_connection_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc020 (    0x10) DYLD-STUB$$nw_protocol_copy_quic_stream_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc030 (    0x10) DYLD-STUB$$nw_protocol_copy_swift_tls_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc040 (    0x10) DYLD-STUB$$nw_protocol_copy_tcp_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc050 (    0x10) DYLD-STUB$$nw_protocol_definition_create_with_identifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc060 (    0x10) DYLD-STUB$$nw_protocol_definition_is_equal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc070 (    0x10) DYLD-STUB$$nw_protocol_definition_set_metadata_allocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc080 (    0x10) DYLD-STUB$$nw_protocol_definition_set_options_allocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc090 (    0x10) DYLD-STUB$$nw_protocol_definition_set_options_comparator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0a0 (    0x10) DYLD-STUB$$nw_protocol_definition_set_options_equality_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0b0 (    0x10) DYLD-STUB$$nw_protocol_metadata_access_handle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0c0 (    0x10) DYLD-STUB$$nw_protocol_metadata_create_singleton [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0d0 (    0x10) DYLD-STUB$$nw_protocol_options_access_handle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0e0 (    0x10) DYLD-STUB$$nw_protocol_options_copy_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc0f0 (    0x10) DYLD-STUB$$nw_protocol_register [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc100 (    0x10) DYLD-STUB$$nw_protocol_set_default_one_to_one_callbacks [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc110 (    0x10) DYLD-STUB$$nw_protocol_stack_copy_original_proxied_transport_protocol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc120 (    0x10) DYLD-STUB$$nw_protocol_stack_copy_transport_protocol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc130 (    0x10) DYLD-STUB$$nw_tls_copy_sec_protocol_metadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc140 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc150 (    0x10) DYLD-STUB$$objc_allocWithZone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc160 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc170 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc180 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc190 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1a0 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1b0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1c0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1d0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1e0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc1f0 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc200 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc210 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc220 (    0x10) DYLD-STUB$$os_variant_allows_internal_security_policies [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc230 (    0x10) DYLD-STUB$$sec_protocol_options_contents_compare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc240 (    0x10) DYLD-STUB$$sec_trust_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc250 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc260 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc270 (    0x10) DYLD-STUB$$swift_allocBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc280 (    0x10) DYLD-STUB$$swift_allocError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc290 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2a0 (    0x10) DYLD-STUB$$swift_allocateGenericValueMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2b0 (    0x10) DYLD-STUB$$swift_arrayAssignWithTake [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2c0 (    0x10) DYLD-STUB$$swift_arrayDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2d0 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2e0 (    0x10) DYLD-STUB$$swift_arrayInitWithTakeBackToFront [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc2f0 (    0x10) DYLD-STUB$$swift_arrayInitWithTakeFrontToBack [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc300 (    0x10) DYLD-STUB$$swift_beginAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc310 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc320 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc330 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc340 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc350 (    0x10) DYLD-STUB$$swift_checkMetadataState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc360 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc370 (    0x10) DYLD-STUB$$swift_deallocPartialClassInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc380 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc390 (    0x10) DYLD-STUB$$swift_endAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3a0 (    0x10) DYLD-STUB$$swift_errorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3b0 (    0x10) DYLD-STUB$$swift_errorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3c0 (    0x10) DYLD-STUB$$swift_getAssociatedConformanceWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3d0 (    0x10) DYLD-STUB$$swift_getAssociatedTypeWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3e0 (    0x10) DYLD-STUB$$swift_getEnumCaseMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc3f0 (    0x10) DYLD-STUB$$swift_getEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc400 (    0x10) DYLD-STUB$$swift_getGenericMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc410 (    0x10) DYLD-STUB$$swift_getObjectType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc420 (    0x10) DYLD-STUB$$swift_getSingletonMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc430 (    0x10) DYLD-STUB$$swift_getTupleTypeLayout2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc440 (    0x10) DYLD-STUB$$swift_getTupleTypeMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc450 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc460 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContextInMetadataState2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc470 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc480 (    0x10) DYLD-STUB$$swift_initEnumMetadataMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc490 (    0x10) DYLD-STUB$$swift_initEnumMetadataSinglePayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4a0 (    0x10) DYLD-STUB$$swift_initStaticObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4b0 (    0x10) DYLD-STUB$$swift_initStructMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4c0 (    0x10) DYLD-STUB$$swift_isUniquelyReferenced_nonNull_native [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4d0 (    0x10) DYLD-STUB$$swift_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4e0 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc4f0 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc500 (    0x10) DYLD-STUB$$swift_slowAlloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc510 (    0x10) DYLD-STUB$$swift_slowDealloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc520 (    0x10) DYLD-STUB$$swift_stdlib_random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc530 (    0x10) DYLD-STUB$$swift_storeEnumTagMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc540 (    0x10) DYLD-STUB$$swift_storeEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc550 (    0x10) DYLD-STUB$$swift_unexpectedError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc560 (    0x10) DYLD-STUB$$swift_unknownObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc570 (    0x10) DYLD-STUB$$swift_updateClassMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc580 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc590 (    0x10) DYLD-STUB$$uuid_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5a0 (    0x10) DYLD-STUB$$xpc_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5b0 (    0x10) DYLD-STUB$$xpc_array_get_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5c0 (    0x10) DYLD-STUB$$xpc_array_get_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5d0 (    0x10) DYLD-STUB$$xpc_array_get_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5e0 (    0x10) DYLD-STUB$$xpc_array_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc5f0 (    0x10) DYLD-STUB$$xpc_array_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc600 (    0x10) DYLD-STUB$$xpc_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002211dc610 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000002211dc620 (    0xdc) __TEXT __objc_methlist
                0x00000002211dc620 (    0x20) _OBJC_$_INSTANCE_METHODS_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
                0x00000002211dc640 (    0xbc) _OBJC_$_INSTANCE_METHODS__TtC10nwswifttls14STLSHandshaker [NameNList, MangledNameNList, NList] 
            0x00000002211dc700 (  0x20b6) __TEXT __const
                0x00000002211dc700 (    0x30) nwswifttlsVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc730 (    0x60) nwswifttlsVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc790 (    0x40) protocol conformance descriptor for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc7d0 (    0x28) protocol conformance descriptor for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc7f8 (    0x10) protocol conformance descriptor for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc808 (    0x38) property descriptor for CertificateVerify.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dc840 (    0x60) protocol conformance descriptor for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc8a0 (    0x28) protocol conformance descriptor for PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc8c8 (    0x40) protocol conformance descriptor for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc908 (    0x28) protocol conformance descriptor for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc930 (    0x20) property descriptor for LegacySessionID.hashValue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc950 (    0x40) protocol conformance descriptor for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc990 (    0x28) protocol conformance descriptor for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dc9b8 (    0x18) property descriptor for Extension.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dc9d0 (    0x40) protocol conformance descriptor for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dca10 (    0x28) protocol conformance descriptor for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dca38 (    0x28) protocol conformance descriptor for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dca60 (    0x20) property descriptor for ProtocolVersion.major [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dca80 (    0x40) protocol conformance descriptor for Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcac0 (    0x28) protocol conformance descriptor for Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcae8 (    0x14) property descriptor for Extension.SupportedGroups.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dcafc (    0x40) protocol conformance descriptor for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcb3c (    0x28) protocol conformance descriptor for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcb64 (    0x14) property descriptor for Random.hashValue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcb78 (    0x40) protocol conformance descriptor for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcbb8 (    0x28) protocol conformance descriptor for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcbe0 (    0x40) protocol conformance descriptor for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcc20 (    0x28) protocol conformance descriptor for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcc48 (    0x58) property descriptor for Extension.ServerName.Names.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dcca0 (     0x4) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcca4 (    0x38) protocol conformance descriptor for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dccdc (    0x40) protocol conformance descriptor for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcd1c (    0x28) protocol conformance descriptor for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcd44 (    0x28) protocol conformance descriptor for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcd6c (    0x94) property descriptor for ExtensionType.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dce00 (    0x80) property descriptor for HandshakeStateMachine.earlyDataAccepted [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dce80 (    0x10) generic type metadata pattern for HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dce90 (    0x38) protocol conformance descriptor for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcec8 (    0x40) protocol conformance descriptor for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcf08 (    0x28) protocol conformance descriptor for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcf30 (    0x28) protocol conformance descriptor for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcf58 (    0x1c) property descriptor for CipherSuite.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dcf74 (    0x40) protocol conformance descriptor for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcfb4 (    0x28) protocol conformance descriptor for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcfdc (    0x10) protocol conformance descriptor for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dcfec (    0x20) property descriptor for FinishedMessage.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd00c (    0x40) protocol conformance descriptor for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd04c (    0x28) protocol conformance descriptor for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd074 (    0x2c) property descriptor for ByteBuffer.writerIndex [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd0a0 (    0x40) protocol conformance descriptor for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd0e0 (    0x28) protocol conformance descriptor for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd108 (    0x20) property descriptor for Extension.QUICTransportParameters.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd128 (    0x40) protocol conformance descriptor for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd168 (    0x3c) protocol conformance descriptor for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd1a4 (    0x40) protocol conformance descriptor for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd1e4 (    0x28) protocol conformance descriptor for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd20c (    0x10) protocol conformance descriptor for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd21c (    0x1c) property descriptor for ServerHello.extensions [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd238 (    0x38) protocol conformance descriptor for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd270 (    0x40) protocol conformance descriptor for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd2b0 (    0x28) protocol conformance descriptor for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd2d8 (    0x28) protocol conformance descriptor for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd300 (    0x20) property descriptor for CertificateType.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd320 (    0x38) protocol conformance descriptor for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd358 (    0x40) protocol conformance descriptor for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd398 (    0x28) protocol conformance descriptor for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd3c0 (    0x28) protocol conformance descriptor for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd3e8 (    0x38) property descriptor for HandshakeType.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd420 (    0x40) protocol conformance descriptor for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd460 (    0x28) protocol conformance descriptor for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd488 (    0x40) protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd4c8 (    0x28) protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd4f0 (    0x28) protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd518 (    0x28) property descriptor for Extension.KeyShare.KeyShareEntry.keyExchange [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd540 (    0x40) protocol conformance descriptor for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd580 (    0x28) protocol conformance descriptor for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd5a8 (    0x38) property descriptor for Extension.ApplicationLayerProtocolNegotiation.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd5e0 (    0x40) protocol conformance descriptor for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd620 (    0x28) protocol conformance descriptor for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd648 (    0x10) protocol conformance descriptor for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd658 (    0x38) property descriptor for NewSessionTicket.ticketNonce [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd690 (    0x40) protocol conformance descriptor for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd6d0 (    0x28) protocol conformance descriptor for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd6f8 (    0x40) protocol conformance descriptor for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd738 (    0x28) protocol conformance descriptor for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd760 (    0x10) protocol conformance descriptor for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd770 (    0x48) property descriptor for CertificateMessage.CertificateEntry.extensions [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd7b8 (    0x28) protocol conformance descriptor for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd7e0 (    0x50) property descriptor for SessionTicket.ticketAgeAdd [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd830 (    0x40) protocol conformance descriptor for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd870 (    0x28) protocol conformance descriptor for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd898 (    0x10) protocol conformance descriptor for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd8a8 (    0x2c) property descriptor for CertificateRequest.extensions [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd8d4 (    0x38) protocol conformance descriptor for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd90c (    0x40) protocol conformance descriptor for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd94c (    0x28) protocol conformance descriptor for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd974 (    0x28) protocol conformance descriptor for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd99c (    0x20) property descriptor for SignatureScheme.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dd9bc (    0x40) protocol conformance descriptor for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dd9fc (    0x28) protocol conformance descriptor for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dda24 (    0x48) property descriptor for Extension.EarlyData.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dda6c (    0x38) protocol conformance descriptor for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddaa4 (    0x40) protocol conformance descriptor for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddae4 (    0x28) protocol conformance descriptor for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddb0c (    0x28) protocol conformance descriptor for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddb34 (    0x1c) property descriptor for NamedGroup.rawValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211ddb50 (    0x40) protocol conformance descriptor for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddb90 (    0x28) protocol conformance descriptor for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddbb8 (    0x48) property descriptor for HandshakeMessage.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211ddc00 (   0x178) property descriptor for HandshakeState.ClientHelloState.configuration [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211ddd78 (    0x40) protocol conformance descriptor for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dddb8 (    0x28) protocol conformance descriptor for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddde0 (    0x20) property descriptor for HandshakeStateMachine.Configuration.ticketRequest [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211dde00 (    0x38) protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dde38 (    0x40) protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dde78 (    0x28) protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddea0 (    0x40) protocol conformance descriptor for Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddee0 (    0x28) protocol conformance descriptor for Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddf08 (    0x28) property descriptor for Extension.PreSharedKeyKexModes.modes [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211ddf30 (    0x28) property descriptor for SessionKeyManager.exporterMasterSecret [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211ddf58 (    0x20) generic type metadata pattern for SessionKeyManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddf78 (    0x20) generic type metadata pattern for SessionKeyManager.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddf98 (    0x20) generic type metadata pattern for SessionKeyManager.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddfb8 (    0x18) generic type metadata pattern for SessionKeyManager.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddfd0 (    0x20) generic type metadata pattern for SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211ddff0 (    0x10) generic type metadata pattern for SessionKeyManager.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de000 (    0x40) protocol conformance descriptor for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de040 (    0x28) protocol conformance descriptor for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de068 (    0x28) property descriptor for Extension.ServerCertificateType.hashValue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de090 (    0x40) protocol conformance descriptor for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de0d0 (    0x28) protocol conformance descriptor for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de0f8 (    0x10) protocol conformance descriptor for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de108 (    0x38) property descriptor for EncryptedExtensions.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de140 (    0x40) protocol conformance descriptor for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de180 (    0x28) protocol conformance descriptor for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de1a8 (    0x40) protocol conformance descriptor for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de1e8 (    0x28) protocol conformance descriptor for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de210 (    0x28) protocol conformance descriptor for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de238 (    0x40) protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de278 (    0x28) protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de2a0 (    0x28) protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de2c8 (    0x68) property descriptor for ClientTicketRequest.newSessionCount [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de330 (    0x40) property descriptor for HandshakeMessageParser.ParseResult.message [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de370 (    0x40) protocol conformance descriptor for Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de3b0 (    0x28) protocol conformance descriptor for Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de3d8 (    0x1c) property descriptor for Extension.SignatureAlgorithms.hashValue [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de3f4 (    0x40) protocol conformance descriptor for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de434 (    0x28) protocol conformance descriptor for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de45c (    0x10) protocol conformance descriptor for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de46c (    0x1c) property descriptor for ClientHello.cipherSuites [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de488 (    0x40) protocol conformance descriptor for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de4c8 (    0x28) protocol conformance descriptor for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de4f0 (    0x40) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de530 (    0x28) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de558 (    0x40) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de598 (    0x28) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de5c0 (    0x40) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de600 (    0x28) protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de628 (    0x38) property descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity.obfuscatedTicketAge [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de660 (    0x80) property descriptor for PartialHandshakeResult.newEncryptionLevel [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000002211de6e0 (    0x40) protocol conformance descriptor for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de720 (    0x28) protocol conformance descriptor for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de748 (    0x28) property descriptor for Extension.SupportedVersions.hashValue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211de770 (    0x46) protocol conformance descriptor for SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211de7b8 (    0x20) __TEXT __gcc_except_tab
                0x00000002211de7b8 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
            0x00000002211de7d8 (    0x1c) __TEXT __oslogstring
            0x00000002211de800 (  0x153c) __TEXT __cstring
            0x00000002211dfd3c (   0x72a) __TEXT __swift5_typeref
                0x00000002211dfd3c (     0x8) symbolic _____Sg 8SwiftTLS22PartialHandshakeResultV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd44 (     0x8) symbolic _____Sg 8SwiftTLS21HandshakeStateMachineV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd4c (     0x8) symbolic _____Sg 8SwiftTLS22PartialHandshakeResultV18NewEncryptionLevelO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd54 (    0x22) symbolic _____12clientSecret_AA06serverB0t 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd76 (     0xe) symbolic So8NSObjectC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd84 (     0x6) symbolic _____ 10nwswifttls14STLSHandshakerC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd8a (     0xa) symbolic Say_____G 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfd94 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfda2 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdb0 (     0x8) associated conformance 8SwiftTLS17CertificateVerifyVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdb8 (     0x6) symbolic _____ 8SwiftTLS21PeerCertificateBundleV0E033_1D40D8F284D82B2FD416E2B21533F412LLO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdbe (     0x6) symbolic _____ 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdc4 (     0xa) symbolic ______AAt 8SwiftTLS21PeerCertificateBundleV0E033_1D40D8F284D82B2FD416E2B21533F412LLO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdce (     0x6) symbolic _____ SS8UTF8ViewV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdd4 (     0xe) symbolic _____y_____G s8RepeatedV s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfde2 (     0xa) symbolic _____ySWG s5SliceV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdec (     0x8) associated conformance 8SwiftTLS15LegacySessionIDVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdf4 (     0x8) associated conformance 8SwiftTLS9ExtensionOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfdfc (     0x6) symbolic _____ 8SwiftTLS9ExtensionO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe02 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO10ServerNameO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe08 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO17SupportedVersionsO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe0e (     0x6) symbolic _____ 8SwiftTLS9ExtensionO35ApplicationLayerProtocolNegotiationV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe14 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO9EarlyDataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe1a (     0x6) symbolic _____ 8SwiftTLS9ExtensionO19SignatureAlgorithmsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe20 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO21ServerCertificateTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe26 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO23QUICTransportParametersV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe2c (     0x6) symbolic _____ 8SwiftTLS9ExtensionO12PreSharedKeyO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe32 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO13TicketRequestO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe38 (     0xe) symbolic ___________t 8SwiftTLS13ExtensionTypeV AA10ByteBufferV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe46 (     0x8) associated conformance 8SwiftTLS15ProtocolVersionVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe4e (     0x8) symbolic SnySiG [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe56 (     0x8) associated conformance 8SwiftTLS9ExtensionO15SupportedGroupsVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe5e (     0x6) symbolic _____ 8SwiftTLS9ExtensionO15SupportedGroupsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe64 (     0xa) symbolic Say_____G 8SwiftTLS10NamedGroupV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe6e (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS18CertificateMessageV0F5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe7c (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV14PSKBinderEntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe8a (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV11PSKIdentityV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfe98 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS15CertificateTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfea6 (     0x8) associated conformance 8SwiftTLS6RandomVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfeae (     0x6) symbolic _____ 8SwiftTLS6RandomV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfeb4 (     0xc) symbolic ______A3At s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfec0 (     0xe) symbolic _____y______G s18EnumeratedSequenceV8IteratorV 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfece (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfedc (     0x8) associated conformance 8SwiftTLS9ExtensionO10ServerNameOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfee4 (     0x8) associated conformance 8SwiftTLS9ExtensionO10ServerNameO5NamesVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfeec (     0x6) symbolic _____ 8SwiftTLS9ExtensionO10ServerNameO5NamesV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfef2 (     0x8) symbolic _____Sg 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfefa (     0x8) symbolic _____Sg 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff02 (     0x8) symbolic _____Sg 8SwiftTLS22HandshakeMessageParserV11ParseResultV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff0a (     0x8) symbolic _____Sg 8SwiftTLS13SessionTicketV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff12 (     0xe) symbolic _____y______G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff20 (    0x10) symbolic _____y_______G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO11EarlySecretV 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff30 (    0x10) symbolic _____y_______G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO15HandshakeSecretV 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff40 (    0x10) symbolic _____y_______G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO12MasterSecretV 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff50 (    0x10) symbolic _____y_______G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO10AllSecretsV 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff60 (     0x6) symbolic _____ 8SwiftTLS21ExportedAuthenticatorV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff66 (     0x6) symbolic _____ 8SwiftTLS22HandshakeMessageParserV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff6c (     0x6) symbolic _____ 8SwiftTLS20TLSMessageSerializerV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff72 (     0x6) symbolic _____ 8SwiftTLS21HandshakeStateMachineV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff78 (     0xe) symbolic _____y_____G 9CryptoKit24HashedAuthenticationCodeV AA6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff86 (     0x6) symbolic _____ 8SwiftTLS13ExtensionTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff8c (     0x8) associated conformance 8SwiftTLS13ExtensionTypeVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dff94 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS9ExtensionO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffa2 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS10NamedGroupV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffb0 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS15ProtocolVersionV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffbe (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS9ExtensionO8KeyShareO0gH5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffcc (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS15SignatureSchemeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffda (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS9ExtensionO20PreSharedKeyKexModesV4ModeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dffe8 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 8SwiftTLS11CipherSuiteV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211dfff6 (     0xe) symbolic _____y______G 8SwiftTLS21HandshakeStateMachineV11ProcessStep33_2019CDD63E0771378D444E74421139B1LLO AA07PartialC6ResultV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0004 (     0x8) symbolic ______p s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e000c (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0012 (     0x8) symbolic ______p 8SwiftTLS0A8TLSClockP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e001a (     0x6) symbolic _____ 8SwiftTLS21HandshakeStateMachineV11ProcessStep33_2019CDD63E0771378D444E74421139B1LLO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0020 (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0022 (     0x8) symbolic ______p 10Foundation15ContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e002a (     0xa) symbolic ______pSg 10Foundation15ContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0034 (     0x8) associated conformance 8SwiftTLS11CipherSuiteVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e003c (     0x8) associated conformance 8SwiftTLS15FinishedMessageVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0044 (     0x6) symbolic _____ 8SwiftTLS15FinishedMessageV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e004a (     0x8) associated conformance 8SwiftTLS10ByteBufferVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0052 (     0x6) symbolic _____ 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0058 (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e005c (     0x8) associated conformance 8SwiftTLS9ExtensionO23QUICTransportParametersVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0064 (     0x6) symbolic _____ 8SwiftTLS8TLSErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e006a (    0x28) symbolic _____11messageType______09extensionB0t 8SwiftTLS13HandshakeTypeV AA09ExtensionD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0092 (     0x8) associated conformance 8SwiftTLS11ServerHelloVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e009a (     0x6) symbolic _____ 8SwiftTLS11ServerHelloV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00a0 (     0x6) symbolic _____ s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00a6 (     0x8) associated conformance 8SwiftTLS15CertificateTypeVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00ae (     0x6) symbolic _____ 8SwiftTLS13HandshakeTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00b4 (     0x8) associated conformance 8SwiftTLS13HandshakeTypeVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00bc (     0x8) associated conformance 8SwiftTLS9ExtensionO8KeyShareOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00c4 (     0x8) associated conformance 8SwiftTLS9ExtensionO8KeyShareO0dE5EntryVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00cc (     0x6) symbolic _____ 8SwiftTLS9ExtensionO8KeyShareO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00d2 (     0xa) symbolic Say_____G 8SwiftTLS9ExtensionO8KeyShareO0dE5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00dc (     0x6) symbolic _____ 8SwiftTLS9ExtensionO8KeyShareO0dE5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00e2 (     0x8) associated conformance 8SwiftTLS9ExtensionO35ApplicationLayerProtocolNegotiationVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00ea (     0x8) associated conformance 8SwiftTLS16NewSessionTicketVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00f2 (     0x8) associated conformance 8SwiftTLS18CertificateMessageVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e00fa (     0x8) associated conformance 8SwiftTLS18CertificateMessageV0C5EntryVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0102 (     0xa) symbolic Say_____G 8SwiftTLS18CertificateMessageV0C5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e010c (     0x6) symbolic _____ 8SwiftTLS18CertificateMessageV0C5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0112 (     0x8) symbolic _____Sg 8SwiftTLS21PeerCertificateBundleV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e011a (     0x8) symbolic _____Sg s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0122 (     0x8) symbolic ______p s19_HasContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e012a (     0xa) symbolic ______pSg s19_HasContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0134 (     0x6) symbolic _____ 10Foundation4DateV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e013a (     0x6) symbolic _____ s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0140 (     0x6) symbolic _____ 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0146 (     0xe) symbolic _____y_____G s11_SetStorageC 8SwiftTLS13ExtensionTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0154 (     0x8) associated conformance 8SwiftTLS18CertificateRequestVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e015c (     0x6) symbolic _____ s6UInt16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0162 (     0x6) symbolic _____ 8SwiftTLS15SignatureSchemeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0168 (     0x6) symbolic $sSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e016e (     0x8) associated conformance 8SwiftTLS15SignatureSchemeVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0176 (     0x8) associated conformance 8SwiftTLS9ExtensionO9EarlyDataVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e017e (    0x28) symbolic $s8SwiftTLS24HandshakeMessageProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01a6 (     0x6) symbolic _____ 8SwiftTLS10NamedGroupV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01ac (     0x8) associated conformance 8SwiftTLS10NamedGroupVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01b4 (     0x8) associated conformance 8SwiftTLS16HandshakeMessageOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01bc (     0x6) symbolic _____ 8SwiftTLS19EncryptedExtensionsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01c2 (     0x6) symbolic _____ 8SwiftTLS18CertificateRequestV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01c8 (     0x6) symbolic _____ 8SwiftTLS18CertificateMessageV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01ce (     0x6) symbolic _____ 8SwiftTLS17CertificateVerifyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01d4 (     0x6) symbolic _____ 8SwiftTLS16NewSessionTicketV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01da (     0xe) symbolic _____y_____G 8SwiftTLS17SessionKeyManagerV 9CryptoKit6SHA384V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01e8 (     0x8) symbolic _____Sg 8SwiftTLS9ExtensionO8KeyShareO0dE5EntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01f0 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO04IdleD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01f6 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO011ClientHelloD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e01fc (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO011ServerHelloD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0202 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO019EncryptedExtensionsD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0208 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO017ServerCertificateD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e020e (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO023ServerCertificateVerifyD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0214 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO05ReadyD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e021a (     0x6) symbolic _____ 8SwiftTLS21HandshakeStateMachineV13ConfigurationV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0220 (     0x6) symbolic _____ 8SwiftTLS15LegacySessionIDV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0226 (     0xa) symbolic Say_____G 8SwiftTLS11CipherSuiteV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0230 (     0xa) symbolic Say_____G 8SwiftTLS15CertificateTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e023a (     0x6) symbolic _____ 9CryptoKit4P384O12KeyAgreementO07PrivateD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0240 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO011ServerHelloD0V11SessionDataO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0246 (     0x6) symbolic _____ 8SwiftTLS11CipherSuiteV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e024c (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO011ServerHelloD0V11SessionDataO03NewG0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0252 (     0x6) symbolic _____ 8SwiftTLS13SessionTicketV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0258 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO019EncryptedExtensionsD0V11SessionDataO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e025e (     0x4) symbolic Sb [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0262 (     0x6) symbolic _____ 8SwiftTLS14HandshakeStateO019EncryptedExtensionsD0V11SessionDataO03NewG0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0268 (     0x6) symbolic _____ 8SwiftTLS15CertificateTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e026e (     0x6) symbolic SSSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0274 (     0x6) symbolic _____ 8SwiftTLS21PeerCertificateBundleV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e027a (     0xa) symbolic Say_____G s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0284 (     0x8) associated conformance 8SwiftTLS21HandshakeStateMachineV13ConfigurationVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e028c (     0xa) symbolic Say_____G 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0296 (     0x8) symbolic _____Sg 8SwiftTLS19ClientTicketRequestV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e029e (     0xa) symbolic ______AAt 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02a8 (     0xc) symbolic ______AAtSg 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02b4 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO20PreSharedKeyKexModesV4ModeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02ba (     0x8) associated conformance 8SwiftTLS9ExtensionO20PreSharedKeyKexModesV4ModeVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02c2 (     0x8) associated conformance 8SwiftTLS9ExtensionO20PreSharedKeyKexModesVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02ca (     0x6) symbolic _____ 8SwiftTLS9ExtensionO20PreSharedKeyKexModesV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02d0 (     0xa) symbolic Say_____G 8SwiftTLS9ExtensionO20PreSharedKeyKexModesV4ModeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02da (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02e0 (     0xa) symbolic _____yx_G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02ea (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO15HandshakeSecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02f0 (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e02f6 (     0xc) symbolic _____yx__G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO11EarlySecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0302 (     0xc) symbolic _____yx__G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO15HandshakeSecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e030e (     0xc) symbolic _____yx__G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO12MasterSecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e031a (     0xc) symbolic _____yx__G 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO10AllSecretsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0326 (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO11EarlySecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e032c (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO12MasterSecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0332 (     0x6) symbolic _____ 8SwiftTLS17SessionKeyManagerV5State33_BECB9E0D58BD55F969B88420A6B610BBLLO10AllSecretsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0338 (     0x8) associated conformance 8SwiftTLS9ExtensionO21ServerCertificateTypeOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0340 (     0x8) associated conformance 8SwiftTLS19EncryptedExtensionsVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0348 (     0x8) associated conformance 8SwiftTLS9ExtensionO13TicketRequestOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0350 (     0x8) associated conformance 8SwiftTLS19ClientTicketRequestVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0358 (     0x8) associated conformance 8SwiftTLS9ExtensionO13TicketRequestO06ServerdE4HintVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0360 (     0x6) symbolic _____ 8SwiftTLS19ClientTicketRequestV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0366 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO13TicketRequestO06ServerdE4HintV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e036c (     0x8) symbolic _____Sg 8SwiftTLS10ByteBufferV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0374 (     0x6) symbolic _____ 8SwiftTLS22HandshakeMessageParserV11ParseResultV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e037a (     0x6) symbolic _____ 8SwiftTLS10ByteBufferV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0380 (     0x6) symbolic _____ 8SwiftTLS16HandshakeMessageO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0386 (     0x8) associated conformance 8SwiftTLS9ExtensionO19SignatureAlgorithmsVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e038e (     0xa) symbolic Say_____G 8SwiftTLS15SignatureSchemeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0398 (     0x8) associated conformance 8SwiftTLS11ClientHelloVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03a0 (     0x6) symbolic _____ 8SwiftTLS11ClientHelloV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03a6 (     0x6) symbolic _____ 8SwiftTLS15ProtocolVersionV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03ac (     0xa) symbolic Say_____G 8SwiftTLS9ExtensionO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03b6 (     0x8) symbolic _____Sg 8SwiftTLS6RandomV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03be (     0x8) symbolic _____Sg 8SwiftTLS15LegacySessionIDV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03c6 (     0x8) associated conformance 8SwiftTLS9ExtensionO12PreSharedKeyOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03ce (     0x8) associated conformance 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03d6 (     0x8) associated conformance 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV11PSKIdentityVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03de (     0x8) associated conformance 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV14PSKBinderEntryVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03e6 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03ec (     0xa) symbolic Say_____G 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV11PSKIdentityV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e03f6 (     0xa) symbolic Say_____G 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV14PSKBinderEntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0400 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV11PSKIdentityV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0406 (     0x6) symbolic _____ 8SwiftTLS9ExtensionO12PreSharedKeyO11OfferedPSKsV14PSKBinderEntryV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e040c (     0x6) symbolic _____ 8SwiftTLS22PartialHandshakeResultV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0412 (     0x8) symbolic _____Sg 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e041a (     0x6) symbolic _____ 8SwiftTLS22PartialHandshakeResultV18NewEncryptionLevelO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0420 (    0x16) symbolic _____12clientSecret_t 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0436 (     0x8) associated conformance 8SwiftTLS9ExtensionO17SupportedVersionsOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e043e (     0xa) symbolic Say_____G 8SwiftTLS15ProtocolVersionV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0448 (    0x18) symbolic $s8SwiftTLS0A8TLSClockP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0460 (     0x6) symbolic _____ 8SwiftTLS0A15TLSDefaultClockV [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211e0468 (   0xa88) __TEXT __constg_swiftt
                0x00000002211e0468 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0474 (    0x40) nominal type descriptor for STLSHandshaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e04b4 (     0x8) method descriptor for STLSHandshaker.__allocating_init(_:serverName:quicTransportParameters:alpn:sessionState:ticketRequest:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e04bc (    0x1c) nominal type descriptor for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e04d8 (    0x28) nominal type descriptor for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0500 (     0x8) anonymous descriptor PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0508 (    0x28) nominal type descriptor for PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0530 (    0x1c) nominal type descriptor for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e054c (    0x1c) nominal type descriptor for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0568 (    0x1c) nominal type descriptor for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0584 (    0x1c) nominal type descriptor for Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e05a0 (    0x1c) nominal type descriptor for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e05bc (    0x1c) nominal type descriptor for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e05d8 (    0x1c) nominal type descriptor for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e05f4 (    0x28) nominal type descriptor for ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e061c (    0x1c) nominal type descriptor for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0638 (    0x1c) nominal type descriptor for TLSMessageSerializer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0654 (    0x28) nominal type descriptor for HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e067c (    0x14) anonymous descriptor HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0690 (    0x30) nominal type descriptor for HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e06c0 (    0x1c) nominal type descriptor for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e06dc (    0x1c) nominal type descriptor for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e06f8 (    0x1c) nominal type descriptor for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0714 (    0x1c) nominal type descriptor for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0730 (    0x1c) nominal type descriptor for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e074c (    0x1c) nominal type descriptor for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0768 (    0x1c) nominal type descriptor for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0784 (    0x1c) nominal type descriptor for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e07a0 (    0x1c) nominal type descriptor for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e07bc (    0x1c) nominal type descriptor for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e07d8 (    0x1c) nominal type descriptor for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e07f4 (    0x1c) nominal type descriptor for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0810 (    0x1c) nominal type descriptor for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e082c (    0x1c) nominal type descriptor for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0848 (    0x28) nominal type descriptor for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0870 (    0x1c) nominal type descriptor for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e088c (    0x1c) nominal type descriptor for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e08a8 (    0x1c) nominal type descriptor for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e08c4 (    0x10) protocol descriptor for HandshakeMessageProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e08d4 (    0x20) protocol requirements base descriptor for HandshakeMessageProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e08f4 (    0x1c) nominal type descriptor for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0910 (    0x1c) nominal type descriptor for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e092c (    0x28) nominal type descriptor for HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0954 (    0x28) nominal type descriptor for HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e097c (    0x28) nominal type descriptor for HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e09a4 (    0x28) nominal type descriptor for HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e09cc (    0x28) nominal type descriptor for HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e09f4 (    0x1c) nominal type descriptor for HandshakeState.ServerHelloState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0a10 (    0x28) nominal type descriptor for HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0a38 (    0x28) nominal type descriptor for HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0a60 (    0x1c) nominal type descriptor for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0a7c (    0x28) nominal type descriptor for HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0aa4 (    0x28) nominal type descriptor for HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0acc (    0x28) nominal type descriptor for HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0af4 (    0x1c) nominal type descriptor for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0b10 (    0x1c) nominal type descriptor for Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0b2c (    0x1c) nominal type descriptor for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0b48 (    0x3c) nominal type descriptor for SessionKeyManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0b84 (    0x3c) nominal type descriptor for SessionKeyManager.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0bc0 (    0x3c) nominal type descriptor for SessionKeyManager.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0bfc (    0x3c) nominal type descriptor for SessionKeyManager.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0c38 (    0x20) anonymous descriptor SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0c58 (    0x3c) nominal type descriptor for SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0c94 (    0x3c) nominal type descriptor for SessionKeyManager.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0cd0 (    0x1c) nominal type descriptor for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0cec (    0x1c) nominal type descriptor for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d08 (    0x1c) nominal type descriptor for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d24 (    0x1c) nominal type descriptor for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d40 (    0x1c) nominal type descriptor for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d5c (    0x1c) nominal type descriptor for HandshakeMessageParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d78 (    0x1c) nominal type descriptor for HandshakeMessageParser.ParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0d94 (    0x1c) nominal type descriptor for Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0db0 (    0x1c) nominal type descriptor for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0dcc (    0x1c) nominal type descriptor for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0de8 (    0x1c) nominal type descriptor for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0e04 (    0x1c) nominal type descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0e20 (    0x1c) nominal type descriptor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0e3c (    0x28) nominal type descriptor for PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0e64 (    0x28) nominal type descriptor for PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0e8c (    0x1c) nominal type descriptor for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0ea8 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0eb4 (    0x10) protocol descriptor for SwiftTLSClock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0ec4 (    0x10) protocol requirements base descriptor for SwiftTLSClock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e0ed4 (    0x1c) nominal type descriptor for SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211e0ef0 (   0xce1) __TEXT __swift5_reflstr
            0x00000002211e1bd4 (   0xf70) __TEXT __swift5_fieldmd
                0x00000002211e1bd4 (    0x34) reflection metadata field descriptor STLSHandshaker [NameNList, MangledNameNList, NList] 
                0x00000002211e1c08 (    0x28) reflection metadata field descriptor CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1c30 (    0x1c) reflection metadata field descriptor PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1c4c (    0x28) reflection metadata field descriptor PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1c74 (    0x28) reflection metadata field descriptor LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1c9c (    0xb8) reflection metadata field descriptor Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1d54 (    0x28) reflection metadata field descriptor ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1d7c (    0x1c) reflection metadata field descriptor Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1d98 (    0x1c) reflection metadata field descriptor Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1db4 (    0x28) reflection metadata field descriptor Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1ddc (    0x1c) reflection metadata field descriptor Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1df8 (    0x34) reflection metadata field descriptor ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1e2c (    0x1c) reflection metadata field descriptor ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1e48 (    0x10) reflection metadata field descriptor TLSMessageSerializer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1e58 (    0x4c) reflection metadata field descriptor HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1ea4 (    0x28) reflection metadata field descriptor HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1ecc (    0x1c) reflection metadata field descriptor CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1ee8 (    0x1c) reflection metadata field descriptor FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1f04 (    0x28) reflection metadata field descriptor ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1f2c (    0x1c) reflection metadata field descriptor Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1f48 (    0xa0) reflection metadata field descriptor TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e1fe8 (    0x58) reflection metadata field descriptor ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2040 (    0x1c) reflection metadata field descriptor CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e205c (    0x1c) reflection metadata field descriptor HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2078 (    0x34) reflection metadata field descriptor Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e20ac (    0x28) reflection metadata field descriptor Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e20d4 (    0x1c) reflection metadata field descriptor Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e20f0 (    0x4c) reflection metadata field descriptor NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e213c (    0x28) reflection metadata field descriptor CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2164 (    0x28) reflection metadata field descriptor CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e218c (    0x88) reflection metadata field descriptor SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2214 (    0x28) reflection metadata field descriptor CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e223c (    0x1c) reflection metadata field descriptor SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2258 (    0x1c) reflection metadata field descriptor Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2274 (    0x10) reflection metadata field descriptor HandshakeMessageProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2284 (    0x1c) reflection metadata field descriptor NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e22a0 (    0x70) reflection metadata field descriptor HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2310 (    0x64) reflection metadata field descriptor HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2374 (    0x34) reflection metadata field descriptor HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e23a8 (    0x64) reflection metadata field descriptor HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e240c (    0x40) reflection metadata field descriptor HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e244c (    0x28) reflection metadata field descriptor HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2474 (    0x28) reflection metadata field descriptor HandshakeState.ServerHelloState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e249c (    0x58) reflection metadata field descriptor HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e24f4 (    0x28) reflection metadata field descriptor HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e251c (    0x34) reflection metadata field descriptor HandshakeState.EncryptedExtensionsState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2550 (    0x64) reflection metadata field descriptor HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e25b4 (    0x64) reflection metadata field descriptor HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2618 (    0x64) reflection metadata field descriptor HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e267c (    0x4c) reflection metadata field descriptor HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e26c8 (    0x1c) reflection metadata field descriptor Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e26e4 (    0x1c) reflection metadata field descriptor Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2700 (    0x1c) reflection metadata field descriptor SessionKeyManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e271c (    0x40) reflection metadata field descriptor SessionKeyManager.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e275c (    0x4c) reflection metadata field descriptor SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e27a8 (    0x4c) reflection metadata field descriptor SessionKeyManager.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e27f4 (    0x64) reflection metadata field descriptor SessionKeyManager.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2858 (    0x40) reflection metadata field descriptor SessionKeyManager.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2898 (    0x28) reflection metadata field descriptor Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e28c0 (    0x1c) reflection metadata field descriptor EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e28dc (    0x28) reflection metadata field descriptor Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2904 (    0x28) reflection metadata field descriptor ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e292c (    0x1c) reflection metadata field descriptor Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2948 (    0x1c) reflection metadata field descriptor HandshakeMessageParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2964 (    0x28) reflection metadata field descriptor HandshakeMessageParser.ParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e298c (    0x1c) reflection metadata field descriptor Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e29a8 (    0x58) reflection metadata field descriptor ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2a00 (    0x28) reflection metadata field descriptor Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2a28 (    0x28) reflection metadata field descriptor Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2a50 (    0x28) reflection metadata field descriptor Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2a78 (    0x1c) reflection metadata field descriptor Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2a94 (    0x34) reflection metadata field descriptor PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2ac8 (    0x34) reflection metadata field descriptor PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2afc (    0x28) reflection metadata field descriptor Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2b24 (    0x10) reflection metadata field descriptor SwiftTLSClock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2b34 (    0x10) reflection metadata field descriptor SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211e2b44 (   0x128) __TEXT __swift5_types
            0x00000002211e2c6c (     0x8) __TEXT __swift5_protos
            0x00000002211e2c74 (   0x1cc) __TEXT __swift5_proto
            0x00000002211e2e40 (    0x20) __TEXT __swift5_capture
            0x00000002211e2e60 (    0xa8) __TEXT __swift5_assocty
                0x00000002211e2e60 (    0x18) reflection metadata associated type descriptor ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2e78 (    0x18) reflection metadata associated type descriptor CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2e90 (    0x18) reflection metadata associated type descriptor CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2ea8 (    0x18) reflection metadata associated type descriptor HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2ec0 (    0x18) reflection metadata associated type descriptor SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2ed8 (    0x18) reflection metadata associated type descriptor NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2ef0 (    0x18) reflection metadata associated type descriptor Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211e2f08 (    0x8c) __TEXT __swift5_builtin
                0x00000002211e2f08 (    0x14) reflection metadata builtin descriptor Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f1c (    0x14) reflection metadata builtin descriptor Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f30 (    0x14) reflection metadata builtin descriptor HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f44 (    0x14) reflection metadata builtin descriptor Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f58 (    0x14) reflection metadata builtin descriptor Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f6c (    0x14) reflection metadata builtin descriptor Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e2f80 (    0x14) reflection metadata builtin descriptor Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002211e2f94 (    0x40) __TEXT __swift5_mpenum
            0x00000002211e2fd4 (  0x22d8) __TEXT __unwind_info
            0x00000002211e52b0 (  0x2158) __TEXT __eh_frame
            0x00000002211e7408 (    0x33) __TEXT __objc_classname
            0x00000002211e743c (   0x5c4) __TEXT __objc_methname
            0x00000002211e7a00 (   0x313) __TEXT __objc_methtype
            0x00000002211e7d20 (   0x2e0) __TEXT __objc_stubs
                0x00000002211e7d20 (    0x20) objc_msgSend$_createDispatchData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7d40 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7d60 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7d80 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7da0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7dc0 (    0x20) objc_msgSend$continueHandshake: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7de0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7e00 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7e20 (    0x20) objc_msgSend$getClientRandom [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7e40 (    0x20) objc_msgSend$getEarlyDataAccepted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7e60 (    0x20) objc_msgSend$getEncryptionLevel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7e80 (    0x20) objc_msgSend$getEncryptionSecretWithWrite: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7ea0 (    0x20) objc_msgSend$getNegotiatedCiphersuite [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7ec0 (    0x20) objc_msgSend$getPeerQUICTransportParameters [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7ee0 (    0x20) objc_msgSend$getSessionState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7f00 (    0x20) objc_msgSend$hasSessionState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7f20 (    0x20) objc_msgSend$init:serverName:quicTransportParameters:alpn:sessionState:ticketRequest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7f40 (    0x20) objc_msgSend$initWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7f60 (    0x20) objc_msgSend$initWithCString:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7f80 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7fa0 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7fc0 (    0x20) objc_msgSend$startHandshake [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000002211e7fe0 (    0x20) objc_msgSend$validateAuthenticatorWithAuthenticator:context:keyParser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000235824118 (   0xc28) __DATA_CONST SEGMENT
            0x0000000235824118 (   0x1f8) __DATA_CONST __got
            0x0000000235824310 (   0x140) __DATA_CONST __const
                0x0000000235824310 (    0x20) __block_descriptor_34_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824330 (    0x20) __block_descriptor_33_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824350 (    0x20) __block_descriptor_32_e24_"NSData"16?0"NSData"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824370 (    0x20) __block_descriptor_32_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824390 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243b0 (    0x20) __block_descriptor_40_e31_B16?0"NSObject<OS_nw_frame>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243d0 (     0x8) _swift_FORCE_LOAD_$_swiftos_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243d8 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243e0 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243e8 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243f0 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358243f8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824400 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824408 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824410 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824418 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824420 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824428 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824430 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824438 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824440 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824448 (     0x8) _swift_FORCE_LOAD_$_swiftos_$_SwiftTLS [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000235824450 (    0x10) __DATA_CONST __objc_classlist
            0x0000000235824460 (    0x10) __DATA_CONST __objc_protolist
                0x0000000235824460 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824468 (     0x8) _OBJC_LABEL_PROTOCOL_$_OS_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000235824470 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000235824478 (   0x7f0) __DATA_CONST __objc_const
                0x0000000235824478 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000235824648 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000235824668 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000002358246b0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000235824750 (    0x18) _OBJC_$_PROTOCOL_REFS_OS_nwswifttls [NameNList, MangledNameNList, NList] 
                0x0000000235824768 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
                0x0000000235824780 (    0x48) _OBJC_METACLASS_RO_$_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
                0x00000002358247c8 (   0x3a8) _OBJC_$_INSTANCE_VARIABLES_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
                0x0000000235824b70 (    0x48) _OBJC_$_PROP_LIST_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
                0x0000000235824bb8 (    0x48) _METACLASS_DATA__TtC10nwswifttls14STLSHandshaker [NameNList, MangledNameNList, NList] 
                0x0000000235824c00 (    0x68) _IVARS__TtC10nwswifttls14STLSHandshaker [NameNList, MangledNameNList, NList] 
            0x0000000235824c68 (    0xd8) __DATA_CONST __objc_selrefs
        0x0000000235824d40 (  0x33f8) __AUTH_CONST SEGMENT
            0x0000000235824d40 (  0x2a00) __AUTH_CONST __const
                0x0000000235824d40 (    0x30) __block_descriptor_45_e8_32bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824d70 (    0x30) __block_descriptor_40_e8_32s_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824da0 (    0x30) __block_descriptor_48_e8_32s40bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824dd0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000235824df0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000235824e10 (    0x20) __block_literal_global.92 [NameNList, MangledNameNList, NList] 
                0x0000000235824e30 (    0x20) __block_literal_global.95 [NameNList, MangledNameNList, NList] 
                0x0000000235824e50 (    0x30) __block_descriptor_48_e8_32s_e31_B16?0"NSObject<OS_nw_frame>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824e80 (    0xa0) __block_descriptor_48_e8_32s_e9_B16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824f20 (    0x28) protocol witness table for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824f48 (    0x58) value witness table for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824fa0 (    0x10) full type metadata for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824fb0 (    0x40) type metadata for CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235824ff0 (    0xf8) full type metadata for PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358250e8 (    0x58) value witness table for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825140 (    0x10) full type metadata for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825150 (    0x68) type metadata for LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358251b8 (    0x70) value witness table for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825228 (    0x10) full type metadata for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825238 (    0xd0) type metadata for Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825308 (    0x58) value witness table for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825360 (    0x10) full type metadata for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825370 (    0x60) type metadata for ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358253d0 (    0x10) full type metadata for Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358253e0 (    0xb8) type metadata for Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825498 (    0x58) value witness table for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358254f0 (    0x10) full type metadata for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825500 (    0x78) type metadata for Random [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825578 (    0x78) value witness table for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358255f0 (    0x10) full type metadata for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825600 (    0x10) type metadata for Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825610 (    0x58) value witness table for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825668 (    0x10) full type metadata for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825678 (   0x110) type metadata for Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825788 (    0x10) full type metadata for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825798 (    0x18) type metadata for ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358257b0 (    0x10) full type metadata for TLSMessageSerializer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358257c0 (    0xc8) type metadata for TLSMessageSerializer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825888 (    0xf0) value witness table for HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825978 (    0x10) full type metadata for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825988 (    0x50) type metadata for CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358259d8 (    0x28) protocol witness table for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825a00 (    0x58) value witness table for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825a58 (    0x10) full type metadata for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825a68 (    0x58) type metadata for FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825ac0 (    0x58) value witness table for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825b18 (    0x10) full type metadata for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825b28 (    0x78) type metadata for ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825ba0 (    0x60) value witness table for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825c00 (    0x10) full type metadata for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825c10 (    0x58) type metadata for Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825c68 (    0x70) value witness table for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825cd8 (    0x10) full type metadata for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825ce8 (    0x58) type metadata for TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825d40 (    0x28) protocol witness table for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825d68 (    0x58) value witness table for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825dc0 (    0x10) full type metadata for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825dd0 (    0xc8) type metadata for ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825e98 (    0x10) full type metadata for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825ea8 (    0x88) type metadata for CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825f30 (    0x10) full type metadata for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825f40 (    0x60) type metadata for HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235825fa0 (    0x78) value witness table for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826018 (    0x10) full type metadata for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826028 (    0x18) type metadata for Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826040 (    0x58) value witness table for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826098 (    0x10) full type metadata for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358260a8 (    0x58) type metadata for Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826100 (    0x60) value witness table for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826160 (    0x10) full type metadata for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826170 (    0x58) type metadata for Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358261c8 (    0x28) protocol witness table for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358261f0 (    0x58) value witness table for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826248 (    0x10) full type metadata for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826258 (    0x78) type metadata for NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358262d0 (    0x28) protocol witness table for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358262f8 (    0x58) value witness table for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826350 (    0x10) full type metadata for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826360 (    0x20) type metadata for CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826380 (    0x58) value witness table for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358263d8 (    0x10) full type metadata for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358263e8 (    0xb0) type metadata for CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826498 (    0x28) protocol witness table for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358264c0 (    0x58) value witness table for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826518 (    0x10) full type metadata for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826528 (    0x98) type metadata for CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358265c0 (    0x10) full type metadata for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358265d0 (    0x50) type metadata for SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826620 (    0x60) value witness table for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826680 (    0x10) full type metadata for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826690 (    0x90) type metadata for Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826720 (    0x10) full type metadata for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826730 (    0x50) type metadata for NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826780 (    0x70) value witness table for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358267f0 (    0x10) full type metadata for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826800 (    0xd8) type metadata for HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358268d8 (    0x58) value witness table for HandshakeState.ServerHelloState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826930 (    0x10) full type metadata for HandshakeState.ServerHelloState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826940 (    0x20) type metadata for HandshakeState.ServerHelloState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826960 (    0x58) value witness table for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358269b8 (    0x10) full type metadata for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358269c8 (    0x88) type metadata for HandshakeState.EncryptedExtensionsState.SessionData.NewSession [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826a50 (    0x60) value witness table for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826ab0 (    0x10) full type metadata for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826ac0 (    0xa0) type metadata for HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826b60 (    0x10) full type metadata for Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826b70 (    0x18) type metadata for Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826b88 (    0x10) full type metadata for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826b98 (    0x20) type metadata for Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826bb8 (    0x60) value witness table for SessionKeyManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826c18 (    0x58) value witness table for SessionKeyManager.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826c70 (    0x58) value witness table for SessionKeyManager.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826cc8 (    0x58) value witness table for SessionKeyManager.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826d20 (    0x70) value witness table for SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826d90 (    0xb8) value witness table for SessionKeyManager.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826e48 (    0x78) value witness table for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826ec0 (    0x10) full type metadata for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826ed0 (    0x50) type metadata for Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826f20 (    0x28) protocol witness table for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826f48 (    0x10) full type metadata for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826f58 (    0x68) type metadata for EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235826fc0 (    0x78) value witness table for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827038 (    0x10) full type metadata for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827048 (    0x10) type metadata for Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827058 (    0x58) value witness table for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358270b0 (    0x10) full type metadata for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358270c0 (    0x20) type metadata for ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358270e0 (    0x10) full type metadata for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358270f0 (    0x18) type metadata for Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827108 (    0x58) value witness table for HandshakeMessageParser [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827160 (    0x10) full type metadata for HandshakeMessageParser [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827170 (    0x20) type metadata for HandshakeMessageParser [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827190 (    0x58) value witness table for HandshakeMessageParser.ParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358271e8 (    0x10) full type metadata for HandshakeMessageParser.ParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358271f8 (    0x60) type metadata for HandshakeMessageParser.ParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827258 (    0x10) full type metadata for Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827268 (    0x58) type metadata for Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358272c0 (    0x28) protocol witness table for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358272e8 (    0x58) value witness table for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827340 (    0x10) full type metadata for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827350 (    0xa0) type metadata for ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358273f0 (    0x78) value witness table for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827468 (    0x10) full type metadata for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827478 (    0x18) type metadata for Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827490 (    0x58) value witness table for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358274e8 (    0x10) full type metadata for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358274f8 (    0x18) type metadata for Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827510 (    0x58) value witness table for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827568 (    0x10) full type metadata for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827578 (    0x28) type metadata for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358275a0 (    0x58) value witness table for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358275f8 (    0x10) full type metadata for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827608 (    0x68) type metadata for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827670 (    0x78) value witness table for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358276e8 (    0x10) full type metadata for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002358276f8 (    0x18) type metadata for Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827710 (    0x10) protocol witness table for SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827720 (    0x10) full type metadata for SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000235827730 (    0x10) type metadata for SwiftTLSDefaultClock [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000235827740 (    0x40) __AUTH_CONST __cfstring
            0x0000000235827780 (    0x48) __AUTH_CONST __objc_const
                0x0000000235827780 (    0x48) _OBJC_CLASS_RO_$_NWConcrete_nwswifttls [NameNList, MangledNameNList, NList] 
            0x00000002358277c8 (    0x68) __AUTH_CONST __auth_ptr
            0x0000000235827830 (   0x908) __AUTH_CONST __auth_got
        0x000000023330bb28 (   0xae0) __AUTH SEGMENT
            0x000000023330bb28 (   0x128) __AUTH __objc_data
                0x000000023330bb28 (    0x28) OBJC_CLASS_$_NWConcrete_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bb50 (    0x28) OBJC_METACLASS_$_NWConcrete_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bb78 (    0x50) _DATA__TtC10nwswifttls14STLSHandshaker [NameNList, MangledNameNList, NList] 
                0x000000023330bbc8 (    0x18) full type metadata for STLSHandshaker [NameNList, MangledNameNList, NList] 
                0x000000023330bbe0 (    0x70) OBJC_CLASS_$__TtC10nwswifttls14STLSHandshaker [PEXT, NameNList, MangledNameNList, Merged, NList] 
            0x000000023330bc50 (   0x9b8) __AUTH __data
                0x000000023330bc50 (    0x28) OBJC_METACLASS_$__TtC10nwswifttls14STLSHandshaker [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bc78 (    0x58) value witness table for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bcd0 (    0x10) full type metadata for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bce0 (    0x18) type metadata for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bcf8 (    0x70) value witness table for PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bd68 (    0x58) value witness table for ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bdc0 (    0x10) full type metadata for ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bdd0 (    0x20) type metadata for ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bdf0 (    0x58) value witness table for HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330be48 (    0x10) full type metadata for HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330be58 (    0x28) type metadata for HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330be80 (    0x58) value witness table for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bed8 (    0x10) full type metadata for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bee8 (    0x38) type metadata for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bf20 (    0x70) value witness table for HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bf90 (    0x10) full type metadata for HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bfa0 (    0x18) type metadata for HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330bfb8 (    0x58) value witness table for HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c010 (    0x10) full type metadata for HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c020 (    0x20) type metadata for HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c040 (    0x58) value witness table for HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c098 (    0x10) full type metadata for HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c0a8 (    0x30) type metadata for HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c0d8 (    0x58) value witness table for HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c130 (    0x10) full type metadata for HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c140 (    0x20) type metadata for HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c160 (    0x70) value witness table for HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c1d0 (    0x10) full type metadata for HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c1e0 (    0x18) type metadata for HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c1f8 (    0x58) value witness table for HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c250 (    0x10) full type metadata for HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c260 (    0x28) type metadata for HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c288 (    0x70) value witness table for HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c2f8 (    0x10) full type metadata for HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c308 (    0x18) type metadata for HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c320 (    0x58) value witness table for HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c378 (    0x10) full type metadata for HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c388 (    0x30) type metadata for HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c3b8 (    0x58) value witness table for HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c410 (    0x10) full type metadata for HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c420 (    0x30) type metadata for HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c450 (    0x58) value witness table for HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c4a8 (    0x10) full type metadata for HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c4b8 (    0x30) type metadata for HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c4e8 (    0x58) value witness table for PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c540 (    0x10) full type metadata for PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c550 (    0x20) type metadata for PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c570 (    0x70) value witness table for PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c5e0 (    0x10) full type metadata for PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023330c5f0 (    0x18) type metadata for PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
        0x0000000231b4b460 (  0x4394) __DATA SEGMENT
            0x0000000231b4b460 (    0x40) __DATA __objc_classrefs
            0x0000000231b4b4a0 (     0x8) __DATA __objc_superrefs
            0x0000000231b4b4a8 (    0x74) __DATA __objc_ivar
                0x0000000231b4b4a8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.protocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4ac (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.options [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4b0 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.metadata [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4b4 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.initial_output_handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4b8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.early_output_handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4bc (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.handshake_output_handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4c0 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.application_output_handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4c4 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.output_initial_frame_array [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4c8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.output_early_frame_array [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4cc (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.output_handshake_frame_array [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4d0 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.output_application_frame_array [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4d4 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.tls_secret_update_block [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4d8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.tls_encryption_level_update_block [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4dc (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.tls_encryption_level_update_queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4e0 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.session_update_block [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4e4 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.session_update_queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4e8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.session_state [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4ec (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.spki [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4f0 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.quic_transport_parameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4f4 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.application_transport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4f8 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.application_protocols [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b4fc (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.server_name [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b500 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.new_session_ticket_request [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b504 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.resumed_session_ticket_request [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b508 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.enable_tls_keylog [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b50c (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.started_handshake [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b510 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.connected [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b514 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.sent_error [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b518 (     0x4) OBJC_IVAR_$_NWConcrete_nwswifttls.handshaker [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231b4b520 (   0xc00) __DATA __data
                0x0000000231b4b520 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b580 (    0x60) _OBJC_PROTOCOL_$_OS_nwswifttls [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b5e0 (     0x8) demangling cache variable for type metadata for PartialHandshakeResult? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b5e8 (     0x8) demangling cache variable for type metadata for HandshakeStateMachine? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b5f0 (     0x8) lazy protocol witness table cache variable for type Data and conformance Data [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b5f8 (     0x8) demangling cache variable for type metadata for PartialHandshakeResult.NewEncryptionLevel? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b600 (     0x8) demangling cache variable for type metadata for (clientSecret: SymmetricKey, serverSecret: SymmetricKey) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b608 (     0x8) lazy cache variable for type metadata for HandshakeStateMachine? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b610 (     0x8) lazy cache variable for type metadata for PartialHandshakeResult? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b618 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Data> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b620 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<P256.Signing.PublicKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b628 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b630 (     0x8) one-time initialization token for serverCertificateTypes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b638 (     0x8) one-time initialization token for helloRetryRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b640 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b648 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b650 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b658 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b660 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b668 (     0x8) one-time initialization token for logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b670 (    0x30) outlined variable #0 of one-time initialization function for serverCertificateTypes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b6a0 (    0x48) outlined variable #0 of one-time initialization function for helloRetryRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b6e8 (    0x30) outlined variable #0 of ClientHello.serverCertificateTypes.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b718 (    0x30) outlined variable #0 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b748 (    0x30) outlined variable #1 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b778 (    0x30) outlined variable #2 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b7a8 (    0x30) outlined variable #3 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b7d8 (    0x30) outlined variable #4 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b808 (    0x30) outlined variable #5 of HandshakeStateMachine.startHandshake() [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b838 (     0x8) lazy protocol witness table cache variable for type CertificateVerify and conformance CertificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b840 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b858 (    0x10) type metadata singleton initialization cache for PeerCertificateBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b868 (    0x10) type metadata singleton initialization cache for PeerCertificateBundle.Bundle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b878 (     0x8) demangling cache variable for type metadata for (PeerCertificateBundle.Bundle, PeerCertificateBundle.Bundle) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b880 (     0x8) demangling cache variable for type metadata for Repeated<UInt8> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b888 (     0x8) demangling cache variable for type metadata for Slice<UnsafeRawBufferPointer> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b890 (     0x8) lazy protocol witness table cache variable for type Slice<UnsafeRawBufferPointer> and conformance <> Slice<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b898 (     0x8) lazy protocol witness table cache variable for type LegacySessionID and conformance LegacySessionID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8a0 (     0x8) lazy protocol witness table cache variable for type Extension and conformance Extension [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8a8 (     0x2) static ProtocolVersion.sslv3 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8aa (     0x2) static ProtocolVersion.tlsv10 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8ac (     0x2) static ProtocolVersion.tlsv11 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8ae (     0x2) static ProtocolVersion.tlsv12 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8b0 (     0x8) static ProtocolVersion.tlsv13 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8b8 (     0x8) lazy protocol witness table cache variable for type ProtocolVersion and conformance ProtocolVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8c0 (     0x8) demangling cache variable for type metadata for Range<Int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8c8 (     0x8) lazy protocol witness table cache variable for type Range<Int> and conformance Range<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8d0 (     0x8) lazy protocol witness table cache variable for type Extension.SupportedGroups and conformance Extension.SupportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8d8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<CertificateMessage.CertificateEntry> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8e0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8e8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Extension.PreSharedKey.OfferedPSKs.PSKIdentity> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8f0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<CertificateType> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b8f8 (     0x8) lazy protocol witness table cache variable for type Random and conformance Random [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b900 (     0x8) demangling cache variable for type metadata for EnumeratedSequence<Data>.Iterator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b908 (     0x8) lazy protocol witness table cache variable for type Data.Iterator and conformance Data.Iterator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b910 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b918 (     0x8) lazy protocol witness table cache variable for type Extension.ServerName and conformance Extension.ServerName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b920 (     0x8) lazy protocol witness table cache variable for type Extension.ServerName.Names and conformance Extension.ServerName.Names [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b928 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b940 (     0x8) demangling cache variable for type metadata for P256.Signing.PublicKey? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b948 (     0x8) demangling cache variable for type metadata for SymmetricKey? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b950 (     0x8) demangling cache variable for type metadata for HandshakeMessageParser.ParseResult? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b958 (     0x8) lazy protocol witness table cache variable for type TLSError and conformance TLSError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b960 (     0x8) lazy protocol witness table cache variable for type Data and conformance Data [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b968 (     0x8) demangling cache variable for type metadata for SessionTicket? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b970 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384>.State [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b978 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384>.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b980 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384>.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b988 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384>.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b990 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384>.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b998 (    0x10) type metadata singleton initialization cache for ExportedAuthenticator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9a8 (     0x8) lazy protocol witness table cache variable for type SHA384 and conformance SHA384 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9b0 (     0x8) lazy protocol witness table cache variable for type SHA384Digest and conformance SHA384Digest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9b8 (     0x8) demangling cache variable for type metadata for HashedAuthenticationCode<SHA384> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9c0 (     0x8) lazy protocol witness table cache variable for type SHA384Digest and conformance SHA384Digest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9c8 (     0x2) static ExtensionType.supportedGroups [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9ca (     0x2) static ExtensionType.signatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9cc (     0x2) static ExtensionType.applicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9ce (     0x2) static ExtensionType.serverCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9d0 (     0x2) static ExtensionType.earlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9d2 (     0x2) static ExtensionType.supportedVersions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9d4 (     0x2) static ExtensionType.keyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9d6 (     0x2) static ExtensionType.quicTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9d8 (     0x2) static ExtensionType.preSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9da (     0x2) static ExtensionType.preSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9dc (     0x4) static ExtensionType.ticketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9e0 (     0x8) lazy protocol witness table cache variable for type ExtensionType and conformance ExtensionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4b9e8 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba00 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Extension> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba08 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<NamedGroup> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba10 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ProtocolVersion> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba18 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Extension.KeyShare.KeyShareEntry> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba20 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<SignatureScheme> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba28 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Extension.PreSharedKeyKexModes.Mode> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba30 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<CipherSuite> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba38 (     0x8) demangling cache variable for type metadata for HandshakeStateMachine.ProcessStep<PartialHandshakeResult> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba40 (     0x8) demangling cache variable for type metadata for Error [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba48 (    0x10) type metadata singleton initialization cache for HandshakeStateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4ba58 (    0x80) type metadata instantiation cache for HandshakeStateMachine.ProcessStep [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bad8 (     0x8) demangling cache variable for type metadata for ContiguousBytes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bae0 (     0x8) demangling cache variable for type metadata for ContiguousBytes? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bae8 (     0x8) static CipherSuite.TLS_AES_256_GCM_SHA384 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4baf0 (     0x8) lazy protocol witness table cache variable for type CipherSuite and conformance CipherSuite [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4baf8 (     0x8) lazy protocol witness table cache variable for type FinishedMessage and conformance FinishedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb00 (     0x8) lazy protocol witness table cache variable for type Int and conformance Int [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb08 (     0x8) lazy protocol witness table cache variable for type ByteBuffer and conformance ByteBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb10 (     0x8) lazy protocol witness table cache variable for type Extension.QUICTransportParameters and conformance Extension.QUICTransportParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb18 (     0x8) lazy protocol witness table cache variable for type ServerHello and conformance ServerHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb20 (     0x8) static CertificateType.rawPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb28 (     0x8) lazy protocol witness table cache variable for type CertificateType and conformance CertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb30 (     0x1) static HandshakeType.clientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb31 (     0x1) static HandshakeType.serverHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb32 (     0x1) static HandshakeType.newSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb33 (     0x1) static HandshakeType.endOfEarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb34 (     0x1) static HandshakeType.encryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb35 (     0x1) static HandshakeType.certificate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb36 (     0x1) static HandshakeType.certificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb37 (     0x1) static HandshakeType.certificateVerify [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb38 (     0x1) static HandshakeType.finished [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb39 (     0x1) static HandshakeType.keyUpdate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb3a (     0x6) static HandshakeType.messageHash [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb40 (     0x8) lazy protocol witness table cache variable for type HandshakeType and conformance HandshakeType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb48 (     0x8) lazy protocol witness table cache variable for type Extension.KeyShare and conformance Extension.KeyShare [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb50 (     0x8) lazy protocol witness table cache variable for type Extension.KeyShare.KeyShareEntry and conformance Extension.KeyShare.KeyShareEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb58 (     0x8) lazy protocol witness table cache variable for type Extension.ApplicationLayerProtocolNegotiation and conformance Extension.ApplicationLayerProtocolNegotiation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb60 (     0x8) lazy protocol witness table cache variable for type NewSessionTicket and conformance NewSessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb68 (     0x8) lazy protocol witness table cache variable for type CertificateMessage and conformance CertificateMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb70 (     0x8) lazy protocol witness table cache variable for type CertificateMessage.CertificateEntry and conformance CertificateMessage.CertificateEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb78 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb90 (     0x8) demangling cache variable for type metadata for PeerCertificateBundle? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bb98 (     0x8) lazy protocol witness table cache variable for type Date and conformance Date [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bba0 (     0x8) demangling cache variable for type metadata for UInt32? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bba8 (     0x8) demangling cache variable for type metadata for _HasContiguousBytes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbb0 (     0x8) demangling cache variable for type metadata for _HasContiguousBytes? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbb8 (    0x10) type metadata singleton initialization cache for SessionTicket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbc8 (     0x8) demangling cache variable for type metadata for _SetStorage<ExtensionType> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbd0 (     0x8) lazy protocol witness table cache variable for type CertificateRequest and conformance CertificateRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbd8 (     0x2) static SignatureScheme.ecdsa_secp256r1_sha256 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbda (     0x2) static SignatureScheme.ecdsa_secp384r1_sha384 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbdc (     0x4) static SignatureScheme.rsa_pss_rsae_sha256 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbe0 (     0x8) lazy protocol witness table cache variable for type SignatureScheme and conformance SignatureScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbe8 (     0x8) lazy protocol witness table cache variable for type Extension.EarlyData and conformance Extension.EarlyData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbf0 (     0x2) static NamedGroup.secp256 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbf2 (     0x6) static NamedGroup.secp384 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bbf8 (     0x8) lazy protocol witness table cache variable for type NamedGroup and conformance NamedGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc00 (     0x8) lazy protocol witness table cache variable for type HandshakeMessage and conformance HandshakeMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc08 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc20 (     0x8) demangling cache variable for type metadata for SessionKeyManager<SHA384> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc28 (     0x8) lazy protocol witness table cache variable for type UInt16 and conformance UInt16 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc30 (     0x8) demangling cache variable for type metadata for Extension.KeyShare.KeyShareEntry? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc38 (     0x8) lazy protocol witness table cache variable for type SharedSecret and conformance SharedSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc40 (     0x8) lazy protocol witness table cache variable for type HashedAuthenticationCode<SHA384> and conformance HashedAuthenticationCode<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc48 (     0x8) lazy protocol witness table cache variable for type HashedAuthenticationCode<SHA384> and conformance HashedAuthenticationCode<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc50 (    0x10) type metadata singleton initialization cache for HandshakeState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc60 (    0x10) type metadata singleton initialization cache for HandshakeState.IdleState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc70 (     0x8) lazy cache variable for type metadata for SessionTicket? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc78 (     0x8) lazy cache variable for type metadata for SessionKeyManager<SHA384>.State [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc80 (    0x10) type metadata singleton initialization cache for HandshakeState.ClientHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bc90 (    0x10) type metadata singleton initialization cache for HandshakeState.ServerHelloState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bca0 (    0x10) type metadata singleton initialization cache for HandshakeState.ServerHelloState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bcb0 (    0x10) type metadata singleton initialization cache for HandshakeState.EncryptedExtensionsState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bcc0 (    0x10) type metadata singleton initialization cache for HandshakeState.EncryptedExtensionsState.SessionData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bcd0 (    0x10) type metadata singleton initialization cache for HandshakeState.ServerCertificateState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bce0 (    0x10) type metadata singleton initialization cache for HandshakeState.ServerCertificateVerifyState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bcf0 (    0x10) type metadata singleton initialization cache for HandshakeState.ReadyState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd00 (     0x8) demangling cache variable for type metadata for [UInt8] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd08 (     0x8) lazy protocol witness table cache variable for type SymmetricKey and conformance SymmetricKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd10 (     0x8) lazy protocol witness table cache variable for type [UInt8] and conformance <A> [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd18 (     0x8) lazy protocol witness table cache variable for type UnsafeRawBufferPointer and conformance UnsafeRawBufferPointer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd20 (     0x8) lazy protocol witness table cache variable for type [UInt8] and conformance <A> [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd28 (     0x8) lazy protocol witness table cache variable for type HandshakeStateMachine.Configuration and conformance HandshakeStateMachine.Configuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd30 (     0x8) demangling cache variable for type metadata for (P256.Signing.PublicKey, P256.Signing.PublicKey) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd38 (     0x8) demangling cache variable for type metadata for (P256.Signing.PublicKey, P256.Signing.PublicKey)? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd40 (     0x8) static Extension.PreSharedKeyKexModes.Mode.pskAndDHE [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd48 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKeyKexModes.Mode and conformance Extension.PreSharedKeyKexModes.Mode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd50 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKeyKexModes and conformance Extension.PreSharedKeyKexModes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd58 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bd70 (    0x80) type metadata instantiation cache for SessionKeyManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bdf0 (    0x80) type metadata instantiation cache for SessionKeyManager.State.AllSecrets [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4be70 (    0x80) type metadata instantiation cache for SessionKeyManager.State.MasterSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bef0 (    0x80) type metadata instantiation cache for SessionKeyManager.State.EarlySecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bf70 (    0x80) type metadata instantiation cache for SessionKeyManager.State [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4bff0 (    0x80) type metadata instantiation cache for SessionKeyManager.State.HandshakeSecret [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c070 (     0x8) lazy protocol witness table cache variable for type Extension.ServerCertificateType and conformance Extension.ServerCertificateType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c078 (     0x8) lazy protocol witness table cache variable for type EncryptedExtensions and conformance EncryptedExtensions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c080 (     0x8) lazy protocol witness table cache variable for type Extension.TicketRequest and conformance Extension.TicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c088 (     0x8) lazy protocol witness table cache variable for type ClientTicketRequest and conformance ClientTicketRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c090 (     0x8) lazy protocol witness table cache variable for type Extension.TicketRequest.ServerTicketRequestHint and conformance Extension.TicketRequest.ServerTicketRequestHint [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c098 (    0x18) logger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0b0 (     0x8) lazy protocol witness table cache variable for type Extension.SignatureAlgorithms and conformance Extension.SignatureAlgorithms [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0b8 (     0x8) lazy protocol witness table cache variable for type ClientHello and conformance ClientHello [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0c0 (     0x8) demangling cache variable for type metadata for Random? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0c8 (     0x8) demangling cache variable for type metadata for LegacySessionID? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0d0 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKey and conformance Extension.PreSharedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0d8 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKey.OfferedPSKs and conformance Extension.PreSharedKey.OfferedPSKs [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0e0 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKey.OfferedPSKs.PSKIdentity and conformance Extension.PreSharedKey.OfferedPSKs.PSKIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0e8 (     0x8) lazy protocol witness table cache variable for type Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry and conformance Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c0f0 (    0x10) type metadata singleton initialization cache for PartialHandshakeResult [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c100 (     0x8) lazy cache variable for type metadata for PartialHandshakeResult.NewEncryptionLevel? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c108 (    0x10) type metadata singleton initialization cache for PartialHandshakeResult.NewEncryptionLevel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4c118 (     0x8) lazy protocol witness table cache variable for type Extension.SupportedVersions and conformance Extension.SupportedVersions [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231b4c120 (  0x36a0) __DATA __bss
                0x0000000231b4c120 (     0x8) nwswifttls_identifier.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231b4c128 (    0x28) g_nwswifttls_identifier [NameNList, MangledNameNList, NList] 
                0x0000000231b4c150 (   0x110) g_nwswifttls_callbacks [NameNList, MangledNameNList, NList] 
                0x0000000231b4c260 (     0x8) nwswifttls_copy_definition.definition [NameNList, MangledNameNList, NList] 
                0x0000000231b4c268 (     0x8) nwswifttls_copy_definition.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000231b4c270 (     0x8) one-time initialization token for logger [NameNList, MangledNameNList, NList] 
                0x0000000231b4c278 (    0x18) logger [NameNList, MangledNameNList, NList] 
                0x0000000231b4c290 (     0x8) direct field offset for STLSHandshaker.stateMachine [NameNList, MangledNameNList, NList] 
                0x0000000231b4c298 (     0x8) direct field offset for STLSHandshaker.partialHandshakeResult [NameNList, MangledNameNList, NList] 
                0x0000000231b4c2a0 (     0x8) direct field offset for STLSHandshaker.receivedSessionTickets [NameNList, MangledNameNList, NList] 
                0x0000000231b4c2a8 (    0x18) type metadata singleton initialization cache for STLSHandshaker [NameNList, MangledNameNList, NList] 
                0x0000000231b4c2c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateVerify [NameNList, MangledNameNList, NList] 
                0x0000000231b4c340 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateVerify [NameNList, MangledNameNList, NList] 
                0x0000000231b4c3c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for PeerCertificateBundle [NameNList, MangledNameNList, NList] 
                0x0000000231b4c440 (    0x80) metadata instantiation cache for protocol conformance descriptor for PeerCertificateBundle.Bundle [NameNList, MangledNameNList, NList] 
                0x0000000231b4c4c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for LegacySessionID [NameNList, MangledNameNList, NList] 
                0x0000000231b4c540 (    0x80) metadata instantiation cache for protocol conformance descriptor for LegacySessionID [NameNList, MangledNameNList, NList] 
                0x0000000231b4c5c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension [NameNList, MangledNameNList, NList] 
                0x0000000231b4c640 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension [NameNList, MangledNameNList, NList] 
                0x0000000231b4c6c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ProtocolVersion [NameNList, MangledNameNList, NList] 
                0x0000000231b4c740 (    0x80) metadata instantiation cache for protocol conformance descriptor for ProtocolVersion [NameNList, MangledNameNList, NList] 
                0x0000000231b4c7c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ProtocolVersion [NameNList, MangledNameNList, NList] 
                0x0000000231b4c840 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SupportedGroups [NameNList, MangledNameNList, NList] 
                0x0000000231b4c8c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SupportedGroups [NameNList, MangledNameNList, NList] 
                0x0000000231b4c940 (    0x80) metadata instantiation cache for protocol conformance descriptor for Random [NameNList, MangledNameNList, NList] 
                0x0000000231b4c9c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Random [NameNList, MangledNameNList, NList] 
                0x0000000231b4ca40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerName [NameNList, MangledNameNList, NList] 
                0x0000000231b4cac0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerName [NameNList, MangledNameNList, NList] 
                0x0000000231b4cb40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerName.Names [NameNList, MangledNameNList, NList] 
                0x0000000231b4cbc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerName.Names [NameNList, MangledNameNList, NList] 
                0x0000000231b4cc40 (    0x80) metadata instantiation cache for protocol conformance descriptor for ExtensionType [NameNList, MangledNameNList, NList] 
                0x0000000231b4ccc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ExtensionType [NameNList, MangledNameNList, NList] 
                0x0000000231b4cd40 (    0x80) metadata instantiation cache for protocol conformance descriptor for ExtensionType [NameNList, MangledNameNList, NList] 
                0x0000000231b4cdc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ExtensionType [NameNList, MangledNameNList, NList] 
                0x0000000231b4ce40 (    0x80) metadata instantiation cache for protocol conformance descriptor for CipherSuite [NameNList, MangledNameNList, NList] 
                0x0000000231b4cec0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CipherSuite [NameNList, MangledNameNList, NList] 
                0x0000000231b4cf40 (    0x80) metadata instantiation cache for protocol conformance descriptor for CipherSuite [NameNList, MangledNameNList, NList] 
                0x0000000231b4cfc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CipherSuite [NameNList, MangledNameNList, NList] 
                0x0000000231b4d040 (    0x80) metadata instantiation cache for protocol conformance descriptor for FinishedMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4d0c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for FinishedMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4d140 (    0x80) metadata instantiation cache for protocol conformance descriptor for ByteBuffer [NameNList, MangledNameNList, NList] 
                0x0000000231b4d1c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ByteBuffer [NameNList, MangledNameNList, NList] 
                0x0000000231b4d240 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.QUICTransportParameters [NameNList, MangledNameNList, NList] 
                0x0000000231b4d2c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.QUICTransportParameters [NameNList, MangledNameNList, NList] 
                0x0000000231b4d340 (    0x80) metadata instantiation cache for protocol conformance descriptor for TLSError [NameNList, MangledNameNList, NList] 
                0x0000000231b4d3c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for TLSError [NameNList, MangledNameNList, NList] 
                0x0000000231b4d440 (    0x80) metadata instantiation cache for protocol conformance descriptor for ServerHello [NameNList, MangledNameNList, NList] 
                0x0000000231b4d4c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ServerHello [NameNList, MangledNameNList, NList] 
                0x0000000231b4d540 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d5c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d640 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d6c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d740 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d7c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d840 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d8c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeType [NameNList, MangledNameNList, NList] 
                0x0000000231b4d940 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.KeyShare [NameNList, MangledNameNList, NList] 
                0x0000000231b4d9c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.KeyShare [NameNList, MangledNameNList, NList] 
                0x0000000231b4da40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4dac0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4db40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.KeyShare.KeyShareEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4dbc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ApplicationLayerProtocolNegotiation [NameNList, MangledNameNList, NList] 
                0x0000000231b4dc40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ApplicationLayerProtocolNegotiation [NameNList, MangledNameNList, NList] 
                0x0000000231b4dcc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for NewSessionTicket [NameNList, MangledNameNList, NList] 
                0x0000000231b4dd40 (    0x80) metadata instantiation cache for protocol conformance descriptor for NewSessionTicket [NameNList, MangledNameNList, NList] 
                0x0000000231b4ddc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4de40 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4dec0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateMessage.CertificateEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4df40 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateMessage.CertificateEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4dfc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for SessionTicket [NameNList, MangledNameNList, NList] 
                0x0000000231b4e040 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4e0c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CertificateRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4e140 (    0x80) metadata instantiation cache for protocol conformance descriptor for SignatureScheme [NameNList, MangledNameNList, NList] 
                0x0000000231b4e1c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for SignatureScheme [NameNList, MangledNameNList, NList] 
                0x0000000231b4e240 (    0x80) metadata instantiation cache for protocol conformance descriptor for SignatureScheme [NameNList, MangledNameNList, NList] 
                0x0000000231b4e2c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for SignatureScheme [NameNList, MangledNameNList, NList] 
                0x0000000231b4e340 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.EarlyData [NameNList, MangledNameNList, NList] 
                0x0000000231b4e3c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.EarlyData [NameNList, MangledNameNList, NList] 
                0x0000000231b4e440 (    0x80) metadata instantiation cache for protocol conformance descriptor for NamedGroup [NameNList, MangledNameNList, NList] 
                0x0000000231b4e4c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for NamedGroup [NameNList, MangledNameNList, NList] 
                0x0000000231b4e540 (    0x80) metadata instantiation cache for protocol conformance descriptor for NamedGroup [NameNList, MangledNameNList, NList] 
                0x0000000231b4e5c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for NamedGroup [NameNList, MangledNameNList, NList] 
                0x0000000231b4e640 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4e6c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeMessage [NameNList, MangledNameNList, NList] 
                0x0000000231b4e740 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeStateMachine.Configuration [NameNList, MangledNameNList, NList] 
                0x0000000231b4e7c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for HandshakeStateMachine.Configuration [NameNList, MangledNameNList, NList] 
                0x0000000231b4e840 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [NameNList, MangledNameNList, NList] 
                0x0000000231b4e8c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [NameNList, MangledNameNList, NList] 
                0x0000000231b4e940 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKeyKexModes.Mode [NameNList, MangledNameNList, NList] 
                0x0000000231b4e9c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKeyKexModes [NameNList, MangledNameNList, NList] 
                0x0000000231b4ea40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKeyKexModes [NameNList, MangledNameNList, NList] 
                0x0000000231b4eac0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerCertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4eb40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.ServerCertificateType [NameNList, MangledNameNList, NList] 
                0x0000000231b4ebc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for EncryptedExtensions [NameNList, MangledNameNList, NList] 
                0x0000000231b4ec40 (    0x80) metadata instantiation cache for protocol conformance descriptor for EncryptedExtensions [NameNList, MangledNameNList, NList] 
                0x0000000231b4ecc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.TicketRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4ed40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.TicketRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4edc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ClientTicketRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4ee40 (    0x80) metadata instantiation cache for protocol conformance descriptor for ClientTicketRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4eec0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ClientTicketRequest [NameNList, MangledNameNList, NList] 
                0x0000000231b4ef40 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [NameNList, MangledNameNList, NList] 
                0x0000000231b4efc0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [NameNList, MangledNameNList, NList] 
                0x0000000231b4f040 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.TicketRequest.ServerTicketRequestHint [NameNList, MangledNameNList, NList] 
                0x0000000231b4f0c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SignatureAlgorithms [NameNList, MangledNameNList, NList] 
                0x0000000231b4f140 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SignatureAlgorithms [NameNList, MangledNameNList, NList] 
                0x0000000231b4f1c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ClientHello [NameNList, MangledNameNList, NList] 
                0x0000000231b4f240 (    0x80) metadata instantiation cache for protocol conformance descriptor for ClientHello [NameNList, MangledNameNList, NList] 
                0x0000000231b4f2c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey [NameNList, MangledNameNList, NList] 
                0x0000000231b4f340 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey [NameNList, MangledNameNList, NList] 
                0x0000000231b4f3c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs [NameNList, MangledNameNList, NList] 
                0x0000000231b4f440 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs [NameNList, MangledNameNList, NList] 
                0x0000000231b4f4c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [NameNList, MangledNameNList, NList] 
                0x0000000231b4f540 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKIdentity [NameNList, MangledNameNList, NList] 
                0x0000000231b4f5c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4f640 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.PreSharedKey.OfferedPSKs.PSKBinderEntry [NameNList, MangledNameNList, NList] 
                0x0000000231b4f6c0 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SupportedVersions [NameNList, MangledNameNList, NList] 
                0x0000000231b4f740 (    0x80) metadata instantiation cache for protocol conformance descriptor for Extension.SupportedVersions [NameNList, MangledNameNList, NList] 
            0x0000000231b4f7c0 (    0x34) __DATA __common
                0x0000000231b4f7c0 (    0x10) static PeerCertificateBundle.serverCertificateTypes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4f7d0 (    0x20) static Random.helloRetryRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4f7f0 (     0x2) static ExtensionType.serverName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4f7f2 (     0x1) static CertificateType.x509 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b4f7f3 (     0x1) static Extension.PreSharedKeyKexModes.Mode.pskOnly [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
