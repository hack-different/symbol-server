Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis [arm64e, 0.024878 seconds]:
    1A18E0D7-A64E-3366-A53D-D578C80A4FC7 /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000019054e000 ( 0x30000) __TEXT SEGMENT
            0x000000019054e000 (  0x49d4) MACH_HEADER
            0x00000001905529d4 ( 0x1f104) __TEXT __text
                0x00000001905529d4 (    0x40) SpokenNotificationsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552a14 (    0xc8) SpokenNotificationsEnabledForProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552adc (    0xc0) TalkingAlertsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552b9c (    0x58) __TalkingAlertsEnabled_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552bf4 (    0xb8) CountVoices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552cac (    0xa8) BuildDefaultVoiceList(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552d54 (    0x2c) invocation function for block in BuildDefaultVoiceList(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552d80 (    0xc4) invocation function for block in BuildDefaultVoiceList(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552e44 (    0x9c) SpeechChannelHandle::PermitAllVoices() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552ee0 (   0x10c) SpeechChannelHandle::CopyVoices(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190552fec (   0x138) SSDSetCFValue(void*, char const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553124 (    0x48) invocation function for block in SpeechGlobals::Instance() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055316c (   0x1e4) SpeechGlobals::SpeechGlobals() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553350 (    0x38) __CountVoices_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553388 (   0x110) GetIndVoice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553498 (    0x88) __GetIndVoice_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553520 (    0xb4) SpeechChannelHandle::MakeVoiceSpecForIdentifierString(__CFString const*, VoiceSpec*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905535d4 (   0x280) SpeechGlobals::CopyVoiceDescription(__CFString const*, VoiceDescription*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553854 (    0x90) invocation function for block in SpeechGlobals::CopyVoiceDescription(__CFString const*, VoiceDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905538e4 (    0x5c) CopyIdentifierStringForVoiceSpec [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553940 (    0x74) SpeechChannelHandle::CopyIdentifierStringForVoiceSpec(VoiceSpec const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905539b4 (   0x148) SpeechGlobals::CopyVoiceID(VoiceSpec const*, __CFString const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553afc (    0x58) invocation function for block in SpeechGlobals::CopyVoiceID(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553b54 (    0x70) SSDSetVoiceSpec(void*, VoiceSpec const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553bc4 (   0x170) invocation function for block in SpeechGlobals::CopyVoiceID(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553d34 (    0x68) MakeVoiceSpecForIdentifierString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553d9c (   0x12c) GetVoiceInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553ec8 (    0x6c) SpeechChannelHandle::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190553f34 (   0x148) SpeechGlobals::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055407c (    0x58) invocation function for block in SpeechGlobals::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905540d4 (   0x170) invocation function for block in SpeechGlobals::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554244 (    0xb8) NewSpeechChannel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905542fc (     0x4) SpeechChannelHandle::SpeechChannelHandle() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554300 (   0x110) SpeechChannelHandle::SpeechChannelHandle() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554410 (   0x11c) invocation function for block in SpeechGlobals::RegisterChannel(SpeechChannelHandle*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055452c (    0xcc) SpeechChannelHandle::Initialize(VoiceSpec*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905545f8 (    0x6c) CreateSSDMessage(int, SpeechChannelHandle*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554664 (    0xb0) SSDEnableCallback(SpeechChannelHandle*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554714 (    0x70) GetSpeechRate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554784 (   0x340) GetSpeechInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554ac4 (    0x64) SpeechChannelHandle::FromChannel(SpeechChannelRecord*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554b28 (    0xbc) SpeechGlobals::ValidateChannel(SpeechChannelHandle*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554be4 (    0x44) invocation function for block in SpeechGlobals::ValidateChannel(SpeechChannelHandle*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554c28 (    0xb4) SpeechChannelHandle::CopySpeechProperty(__CFString const*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554cdc (    0x74) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554d50 (    0xe8) SpeechChannelHandle::CachedProperty(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554e38 (   0x138) invocation function for block in SpeechChannelHandle::CachedProperty(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190554f70 (    0xf4) SpeechChannelHandle::TrackProperty(char const*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555064 (   0x1c4) invocation function for block in SpeechChannelHandle::TrackProperty(char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555228 (   0x104) SpeechChannelHandle::CopySpeechProperty(__CFString const*, SpeechStatusInfo*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055532c (   0x50c) SetSpeechInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555838 (    0x5c) SpeechChannelHandle::OutputToFile(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555894 (   0x284) SpeechChannelHandle::SetSpeechProperty(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555b18 (   0x118) SSDSetSpeechProperty(SpeechChannelHandle*, __CFString const*, void*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555c30 (     0xc) SpeechChannelHandle::SetRefCon(void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555c3c (     0xc) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555c48 (    0x18) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, unsigned int)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555c60 (   0x398) SetSpeechProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190555ff8 (    0x20) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, __CFError*)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556018 (    0x18) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, short)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556030 (    0x20) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, __CFString const*, CFRange)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556050 (    0x98) SpeakCFString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905560e8 (   0x55c) SpeechChannelHandle::SpeakCFString(__CFString const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556644 (   0x15c) invocation function for block in SpeechChannelHandle::SpeakCFString(__CFString const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905567a0 (    0xdc) SpeechSynthesisConsoleLogCFString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055687c (    0x48) invocation function for block in CreateMessagePort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905568c4 (   0x1ec) SpeechChannelHandle::HandleCallback(void*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556ab0 (     0xc) invocation function for block in SpeechChannelHandle::HandleCallback(void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556abc (    0xd4) specFromDictionary(NSDictionary*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556b90 (   0x118) specToDictionary(VoiceSpec) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556ca8 (    0x44) ShouldRedirectCallsToBabelfish() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556cec (    0xcc) invocation function for block in ShouldRedirectCallsToBabelfish() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556db8 (    0x1c) numberFromFixed(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556dd4 (    0x1c) numberToFixed(NSNumber*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556df0 (    0x5c) BFSpeechBusy() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190556e4c (   0x1e8) BFNewSpeechChannel(VoiceSpec*, SpeechChannelRecord**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557034 (    0xe8) BFDisposeSpeechChannel(SpeechChannelRecord*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055711c (   0x108) BFSpeakBuffer(SpeechChannelRecord*, void const*, unsigned long, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557224 (   0x140) BFSpeakCFString(SpeechChannelRecord*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557364 (     0xc) invocation function for block in BFSpeakCFString(SpeechChannelRecord*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557370 (   0x140) BFStopSpeechChannel(SpeechChannelRecord*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905574b0 (     0xc) invocation function for block in BFStopSpeechChannel(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905574bc (   0x140) BFPauseSpeechAt(SpeechChannelRecord*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905575fc (     0xc) invocation function for block in BFPauseSpeechAt(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557608 (    0xf0) BFContinueSpeech(SpeechChannelRecord*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905576f8 (     0x8) invocation function for block in BFContinueSpeech(SpeechChannelRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557700 (    0xc8) BFSetSpeechRate(SpeechChannelRecord*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905577c8 (   0x158) invocation function for block in BFSetSpeechRate(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557920 (    0xc4) BFGetSpeechRate(SpeechChannelRecord*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905579e4 (    0x8c) invocation function for block in BFGetSpeechRate(SpeechChannelRecord*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557a70 (    0xc4) BFGetSpeechPitch(SpeechChannelRecord*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557b34 (    0x8c) invocation function for block in BFGetSpeechPitch(SpeechChannelRecord*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557bc0 (    0xc8) BFSetSpeechPitch(SpeechChannelRecord*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557c88 (   0x158) invocation function for block in BFSetSpeechPitch(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190557de0 (   0x254) BFGetSpeechInfo(SpeechChannelRecord*, __CFString const*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190558034 (   0x154) BFCopySpeechProperty(SpeechChannelRecord*, __CFString const*, void const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190558188 (   0x4ec) invocation function for block in BFCopySpeechProperty(SpeechChannelRecord*, __CFString const*, void const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190558674 (   0x3e8) BFSetSpeechInfo(SpeechChannelRecord*, __CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190558a5c (   0x148) BFSetSpeechProperty(SpeechChannelRecord*, __CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190558ba4 (   0x88c) invocation function for block in BFSetSpeechProperty(SpeechChannelRecord*, __CFString const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190559430 (   0x1b8) BFCountVoices(short*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905595e8 (   0x188) BFGetIndVoice(short, VoiceSpec*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190559770 (   0x828) BFGetVoiceInfo(VoiceSpec const*, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190559f98 (   0x268) BFCopyIdentifierStringForVoiceSpec(VoiceSpec const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a200 (    0xe0) BFMakeVoiceSpecForIdentifierString(__CFString const*, VoiceSpec*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a2e0 (    0xe4) BFCopyIdentifierStringForPreferredVoiceInListWithLocale(__CFArray const*, __CFLocale const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a3c4 (    0xbc) BFCopyIdentifierStringForPreferredVoiceWithLocale(__CFLocale const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a480 (   0x4cc) BFCopySpeechSynthesisVoicesForMode(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a94c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a968 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a988 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a9a4 (    0x1c) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a9c0 (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055a9d8 (    0x80) SpeechSynthesisConsoleLogTextBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055aa58 (    0xfc) IsLogging() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ab54 (   0x144) ConsoleLog(int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ac98 (    0x40) invocation function for block in CreateMessagePort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055acd8 (    0x3c) SpeechManagerVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ad14 (    0x44) SpeechBusy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ad58 (    0x48) SpeechBusySystemWide [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ada0 (    0x6c) DisposeSpeechChannel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ae0c (    0x58) SpeakString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ae64 (    0xa8) SpeakBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055af0c (     0x8) SpeakText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055af14 (     0x8) StopSpeechAt [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055af1c (    0x98) StopSpeechChannel(SpeechChannelRecord*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055afb4 (     0xc) StopSpeech [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055afc0 (    0x80) PauseSpeechAt [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b040 (    0x74) ContinueSpeech [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b0b4 (    0xbc) TextToPhonemes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b170 (    0x70) CopyPhonemesFromText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b1e0 (    0x74) SetSpeechRate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b254 (    0x70) GetSpeechPitch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b2c4 (    0x74) SetSpeechPitch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b338 (    0xa0) CopySpeechProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b3d8 (    0x80) UseDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b458 (    0x70) UseDictionaryPtr(SpeechChannelRecord*, void const*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b4c8 (    0x5c) UseSpeechDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b524 (    0x1c) MakeVoiceSpec [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b540 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b550 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b55c (    0x1c) GetVoiceDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b578 (     0x8) SpeechSynthesisRegisterModuleURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b580 (     0x8) SpeechSynthesisUnregisterModuleURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b588 (    0x68) CopyIdentifierStringForPreferredVoiceInListWithLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b5f0 (    0x68) CopyIdentifierStringForPreferredVoiceWithLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b658 (    0x28) GetIdentifierStringForPreferredVoiceInListWithLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b680 (    0x84) SSDPoorMansCFStringAutoRelease(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b704 (    0x28) GetIdentifierStringForPreferredVoiceWithLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b72c (     0xc) CopyPreferredVoiceIdentifierForLocale(__CFLocale const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b738 (     0x4) SetPreferredVoiceIdentifierForLocale(__CFLocale const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b73c (    0x5c) CopySpeechSynthesisVoicesForMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b798 (   0x228) CreateSpeechLanguageLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b9c0 (     0x4) SpeechDaemonEnvironment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b9c4 (     0x4) SpeechDaemonSetLogging [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b9c8 (     0x4) SpeechDaemonShutdown [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055b9cc (    0x3c) TTSStartSpeakingSelection_XPC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ba08 (    0x5c) __TTSStartSpeakingSelection_XPC_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ba64 (    0x48) TTSStartSpeakingSelectionWithString_XPC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055baac (    0x5c) __TTSStartSpeakingSelectionWithString_XPC_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bb08 (    0x38) TTSStopSpeakingSelection_XPC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bb40 (    0x5c) __TTSStopSpeakingSelection_XPC_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bb9c (    0x84) TTSIsSpeakingSelection_XPC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bc20 (    0x80) __TTSIsSpeakingSelection_XPC_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bca0 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bcb0 (     0xc) __destroy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bcbc (    0x28) SpeechAPITimer::Setup() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bce4 (     0xc) invocation function for block in SpeechAPITimer::Setup() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bcf0 (    0x4c) SpeechElapsedTimer::ElapsedTime() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bd3c (    0x44) +[SpeechSynthesisApps sharedManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bd80 (    0x28) __36+[SpeechSynthesisApps sharedManager]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bda8 (    0x90) -[SpeechSynthesisApps init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055be38 (    0x64) -[SpeechSynthesisApps startSpeakingSelectionWithFallback:completionHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055be9c (    0x30) __76-[SpeechSynthesisApps startSpeakingSelectionWithFallback:completionHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055becc (    0x54) -[SpeechSynthesisApps stopSpeakingSelectionWithCompletionHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bf20 (    0x30) __66-[SpeechSynthesisApps stopSpeakingSelectionWithCompletionHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bf50 (    0x54) -[SpeechSynthesisApps getSpeakingStateWithCompletionHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bfa4 (    0x30) __61-[SpeechSynthesisApps getSpeakingStateWithCompletionHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bfd4 (     0x8) -[SpeechSynthesisApps connectionToService] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bfdc (     0x8) -[SpeechSynthesisApps setConnectionToService:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055bfe4 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c000 (    0x6c) -[NSString(BFUtilities) numberValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c06c (    0x54) +[BFRegexCache sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c0c0 (    0x40) __30+[BFRegexCache sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c100 (    0x78) -[BFRegexCache init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c178 (     0x8) -[BFRegexCache regexForString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c180 (   0x1c0) -[BFRegexCache regexForString:atStart:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c340 (     0x8) -[BFRegexCache cache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c348 (     0xc) -[BFRegexCache setCache:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c354 (     0xc) -[BFRegexCache .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c360 (   0x144) -[BFProsodicState copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c4a4 (    0x60) -[BFProsodicState setRate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c504 (    0x8c) -[BFProsodicState setVolume:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c590 (    0x7c) -[BFProsodicState setPitchBase:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c60c (    0x7c) -[BFProsodicState setPitchModulation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c688 (     0x8) -[BFProsodicState rate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c690 (     0x8) -[BFProsodicState pitchModulation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c698 (     0x8) -[BFProsodicState pitchBase] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6a0 (     0x8) -[BFProsodicState volume] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6a8 (     0x8) -[BFProsodicState textLiteralMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6b0 (     0x8) -[BFProsodicState setTextLiteralMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6b8 (     0x8) -[BFProsodicState numberLiteralMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6c0 (     0x8) -[BFProsodicState setNumberLiteralMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c6c8 (    0x5c) -[BFProsodicState .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c724 (    0x50) -[BFSpeechElement initWithRange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c774 (     0xc) -[BFSpeechElement originalRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c780 (     0x8) -[BFSpeechElement setOriginalRange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c788 (    0x94) -[BFPauseSpeechElement initWithMSDuration:andRange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c81c (    0x10) -[BFPauseSpeechElement milliseconds] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c82c (    0x10) -[BFPauseSpeechElement setMilliseconds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c83c (    0x9c) -[BFSyncSpeechElement initWithName:andRange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c8d8 (    0x10) -[BFSyncSpeechElement name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c8e8 (    0x14) -[BFSyncSpeechElement setName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c8fc (    0x14) -[BFSyncSpeechElement .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c910 (    0xe0) -[BFIsoProsodicTextSpeechElement initWithText:originalRange:prosodicState:mode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055c9f0 (    0x10) -[BFIsoProsodicTextSpeechElement text] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca00 (    0x14) -[BFIsoProsodicTextSpeechElement setText:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca14 (    0x10) -[BFIsoProsodicTextSpeechElement mode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca24 (    0x10) -[BFIsoProsodicTextSpeechElement setMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca34 (    0x10) -[BFIsoProsodicTextSpeechElement prosodicState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca44 (    0x14) -[BFIsoProsodicTextSpeechElement setProsodicState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ca58 (    0x54) -[BFIsoProsodicTextSpeechElement .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055caac (    0xfc) -[BFPlaintalkParser initWithText:andProsodicState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055cba8 (    0xdc) -[BFPlaintalkParser parse] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055cc84 (   0x100) -[BFPlaintalkParser _parse] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055cd84 (   0x378) -[BFPlaintalkParser _parseText] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055d0fc (   0x9cc) -[BFPlaintalkParser _parseCommand] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dac8 (    0x6c) -[BFPlaintalkParser tail] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055db34 (    0xe4) -[BFPlaintalkParser _nextCommandAtStartOfTail] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dc18 (    0xe4) -[BFPlaintalkParser _nextNumericStringRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dcfc (   0x144) -[BFPlaintalkParser _nextTextStringRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de40 (     0x8) -[BFPlaintalkParser firstNonCommandCharacterIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de48 (     0x8) -[BFPlaintalkParser setFirstNonCommandCharacterIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de50 (     0x8) -[BFPlaintalkParser lastNonCommandCharacterIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de58 (     0x8) -[BFPlaintalkParser setLastNonCommandCharacterIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de60 (     0x8) -[BFPlaintalkParser plaintalkString] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de68 (     0xc) -[BFPlaintalkParser setPlaintalkString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de74 (     0x8) -[BFPlaintalkParser currentIndex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de7c (     0x8) -[BFPlaintalkParser setCurrentIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de84 (     0x8) -[BFPlaintalkParser contextSkipperState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de8c (     0x8) -[BFPlaintalkParser setContextSkipperState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de94 (     0x8) -[BFPlaintalkParser contextSkipStart] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055de9c (     0x8) -[BFPlaintalkParser setContextSkipStart:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dea4 (     0x8) -[BFPlaintalkParser product] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055deac (     0xc) -[BFPlaintalkParser setProduct:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055deb8 (     0x8) -[BFPlaintalkParser initialProsodicState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dec0 (     0xc) -[BFPlaintalkParser setInitialProsodicState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055decc (     0x8) -[BFPlaintalkParser currentProsodicState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055ded4 (     0xc) -[BFPlaintalkParser setCurrentProsodicState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055dee0 (    0x5c) -[BFPlaintalkParser .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055df3c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055df58 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055df6c (     0xc) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055df78 (   0x228) -[BFSpeechChannel initWithVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e1a0 (    0xe4) getTTSSpeechSynthesizerClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e284 (    0x54) -[BFSpeechChannel accurateWordCallbacks] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e2d8 (    0x40) -[BFSpeechChannel setVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e318 (    0x4c) -[BFSpeechChannel setChannelState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e364 (    0x94) -[BFSpeechChannel setOutputUrl:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e3f8 (   0x154) -[BFSpeechChannel continueSpeech] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e54c (   0x12c) -[BFSpeechChannel pause:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e678 (   0x29c) -[BFSpeechChannel stop:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019055e914 (  0x1b58) -[BFSpeechChannel speak:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056046c (     0x8) __25-[BFSpeechChannel speak:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560474 (     0x8) __copy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056047c (     0x8) __destroy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560484 (    0xa0) __25-[BFSpeechChannel speak:]_block_invoke.31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560524 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560534 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056053c (    0xfc) __25-[BFSpeechChannel speak:]_block_invoke.36 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560638 (    0x10) __copy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560648 (     0xc) __destroy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560654 (   0x240) __25-[BFSpeechChannel speak:]_block_invoke.38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560894 (     0xc) __copy_helper_block_ea8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905608a0 (     0x8) __destroy_helper_block_ea8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905608a8 (    0xf0) __25-[BFSpeechChannel speak:]_block_invoke.41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560998 (    0x44) __copy_helper_block_ea8_32s40w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905609dc (    0x3c) __destroy_helper_block_ea8_32s40w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560a18 (    0xd0) -[BFSpeechChannel terminate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560ae8 (    0x78) -[BFSpeechChannel reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560b60 (    0x20) -[BFSpeechChannel speechPaused] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560b80 (    0xac) -[BFSpeechChannel speechActive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560c2c (   0x334) -[BFSpeechChannel supportsPhatics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190560f60 (   0x104) -[BFSpeechChannel speechSynthesizer:didFinishSpeakingRequest:successfully:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561064 (     0x8) -[BFSpeechChannel speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056106c (    0x6c) -[BFSpeechChannel speechSynthesizer:didPauseSpeakingRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905610d8 (    0x6c) -[BFSpeechChannel speechSynthesizer:didContinueSpeakingRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561144 (   0x448) -[BFSpeechChannel speechSynthesizer:didEncounterMarker:forRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056158c (    0xb8) -[BFSpeechChannel _safelyCallPendingStopBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561644 (    0xbc) -[BFSpeechChannel _callSpeechDone] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561700 (    0x58) -[BFSpeechChannel _closeAudioFile] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561758 (   0x160) -[BFSpeechChannel _resetSynthesizer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905618b8 (   0x304) -[BFSpeechChannel _forceResetChannel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561bbc (   0x110) -[BFSpeechChannel _subscribeToDefaultDeviceChanges] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561ccc (    0xb8) __51-[BFSpeechChannel _subscribeToDefaultDeviceChanges]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561d84 (     0x8) -[BFSpeechChannel setAudioDeviceId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190561d8c (   0x354) -[BFSpeechChannel _createExtFileForUrl:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905620e0 (    0x54) -[BFSpeechChannel badStartingCharacterSet] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562134 (    0xb0) __42-[BFSpeechChannel badStartingCharacterSet]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905621e4 (    0xf0) -[BFSpeechChannel description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905622d4 (     0x8) -[BFSpeechChannel legacyIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905622dc (     0x8) -[BFSpeechChannel setLegacyIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905622e4 (     0x8) -[BFSpeechChannel voice] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905622ec (     0x8) -[BFSpeechChannel rate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905622f4 (     0xc) -[BFSpeechChannel setRate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562300 (     0x8) -[BFSpeechChannel pitch] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562308 (     0xc) -[BFSpeechChannel setPitch:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562314 (     0x8) -[BFSpeechChannel volume] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056231c (     0xc) -[BFSpeechChannel setVolume:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562328 (     0x8) -[BFSpeechChannel pitchMod] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562330 (     0xc) -[BFSpeechChannel setPitchMod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056233c (     0x8) -[BFSpeechChannel phonemeSubstitutions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562344 (     0xc) -[BFSpeechChannel setPhonemeSubstitutions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562350 (     0x8) -[BFSpeechChannel outputUrl] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562358 (     0x8) -[BFSpeechChannel audioFile] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562360 (     0x8) -[BFSpeechChannel setAudioFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562368 (     0x8) -[BFSpeechChannel numberLiteralMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562370 (     0x8) -[BFSpeechChannel setNumberLiteralMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562378 (     0x8) -[BFSpeechChannel characterLiteralMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562380 (     0x8) -[BFSpeechChannel setCharacterLiteralMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562388 (     0x8) -[BFSpeechChannel audioDeviceId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562390 (     0x8) -[BFSpeechChannel refCon] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562398 (     0x8) -[BFSpeechChannel setRefCon:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623a0 (     0x8) -[BFSpeechChannel speechSource] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623a8 (     0xc) -[BFSpeechChannel setSpeechSource:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623b4 (     0x8) -[BFSpeechChannel setSpeechActive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623bc (     0x8) -[BFSpeechChannel setSpeechPaused:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623c4 (     0x8) -[BFSpeechChannel cfWordCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623cc (     0x8) -[BFSpeechChannel setCfWordCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623d4 (     0x8) -[BFSpeechChannel wordCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623dc (     0x8) -[BFSpeechChannel setWordCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623e4 (     0x8) -[BFSpeechChannel syncCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623ec (     0x8) -[BFSpeechChannel setSyncCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623f4 (     0x8) -[BFSpeechChannel errorCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905623fc (     0x8) -[BFSpeechChannel setErrorCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562404 (     0x8) -[BFSpeechChannel phonemeCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056240c (     0x8) -[BFSpeechChannel setPhonemeCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562414 (     0x8) -[BFSpeechChannel speechDoneCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056241c (     0x8) -[BFSpeechChannel setSpeechDoneCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562424 (     0x8) -[BFSpeechChannel synthesizer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056242c (     0xc) -[BFSpeechChannel setSynthesizer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562438 (     0x8) -[BFSpeechChannel channelOperationQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562440 (     0xc) -[BFSpeechChannel setChannelOperationQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056244c (     0x8) -[BFSpeechChannel callbackQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562454 (     0xc) -[BFSpeechChannel setCallbackQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562460 (     0x8) -[BFSpeechChannel currentRequest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562468 (     0xc) -[BFSpeechChannel setCurrentRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562474 (     0x8) -[BFSpeechChannel currentSpeechString] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056247c (     0xc) -[BFSpeechChannel setCurrentSpeechString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562488 (     0x8) -[BFSpeechChannel channelState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562490 (     0x8) -[BFSpeechChannel synthesizerShouldReset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562498 (     0x8) -[BFSpeechChannel setSynthesizerShouldReset:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624a0 (     0x8) -[BFSpeechChannel processIsVo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624a8 (     0x8) -[BFSpeechChannel setProcessIsVo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624b0 (     0x8) -[BFSpeechChannel pendingStopBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624b8 (     0x8) -[BFSpeechChannel setPendingStopBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624c0 (     0x8) -[BFSpeechChannel speechFinished] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624c8 (     0xc) -[BFSpeechChannel setSpeechFinished:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905624d4 (    0xe0) -[BFSpeechChannel .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905625b4 (    0xfc) invocation function for block in getTTSSpeechSynthesizerClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905626b0 (   0x188) TextToSpeechLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562838 (    0x74) invocation function for block in TextToSpeechLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905628ac (    0xfc) invocation function for block in getTTSSpeechStringClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905629a8 (   0x294) invocation function for block in getAXEmojiUtilitiesClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562c3c (    0x98) invocation function for block in libAXSpeechManagerLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562cd4 (   0x1bc) invocation function for block in getgryphon_HasPhaticResponsesSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562e90 (    0x74) invocation function for block in SiriTTSLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562f04 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562f1c (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562f38 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562f50 (    0x9c) ReadDefaultVoiceSpecFromPrefs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190562fec (    0x54) +[BabelFish sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563040 (    0x40) __27+[BabelFish sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563080 (    0x4c) +[BabelFish specForTTSVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905630cc (    0xac) +[BabelFish stringKeyForVoiceSpec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563178 (    0xf0) -[BabelFish init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563268 (   0x3b8) -[BabelFish devicesChanged] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563620 (    0x50) -[BabelFish _monitorAudioDevices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563670 (    0x20) AudioHardwareChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563690 (    0x90) -[BabelFish resourceCacheDidReceiveUpdate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563720 (    0x44) __42-[BabelFish resourceCacheDidReceiveUpdate]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563764 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056376c (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563774 (    0x98) -[BabelFish characterRangesForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056380c (   0x22c) -[BabelFish _characterRangesForLocaleCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563a38 (   0x43c) -[BabelFish exemplarCharacterRangesForLocaleString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563e74 (   0x110) __52-[BabelFish exemplarCharacterRangesForLocaleString:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563f84 (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190563fcc (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056400c (   0x15c) -[BabelFish speechBusy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564168 (   0x230) -[BabelFish newChannel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564398 (   0x1ec) -[BabelFish killChannel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564584 (    0xc4) -[BabelFish getChannel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564648 (   0x104) -[BabelFish performForChannel:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056474c (    0x44) -[BabelFish voiceForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564790 (   0x11c) -[BabelFish _voiceForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905648ac (   0x30c) -[BabelFish voiceForSpec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564bb8 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564bc8 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564bd0 (    0x90) __26-[BabelFish voiceForSpec:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564c60 (    0x50) __copy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564cb0 (    0x48) __destroy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564cf8 (    0xc0) -[BabelFish substitutionsForMap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564db8 (   0x13c) __33-[BabelFish substitutionsForMap:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564ef4 (    0xac) -[BabelFish nextChannelIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190564fa0 (   0x128) voiceSortFn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905650c8 (   0x1c8) -[BabelFish setCachedVoices:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565290 (   0x1cc) -[BabelFish _ensureCachedVoicesLoaded] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056545c (    0x94) __38-[BabelFish _ensureCachedVoicesLoaded]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905654f0 (   0x124) -[BabelFish allVoices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565614 (    0x6c) __22-[BabelFish allVoices]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565680 (    0xd4) -[BabelFish _disambiguationKeyForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565754 (   0x1ec) -[BabelFish _disambiguationMatrixForVoices:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565940 (   0x2c4) -[BabelFish nameForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565c04 (   0x1c8) -[BabelFish nameForLocale:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565dcc (     0x8) -[BabelFish voiceForLocale:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190565dd4 (   0x834) -[BabelFish voiceForLocale:allowedIdentifiers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566608 (    0x90) __47-[BabelFish voiceForLocale:allowedIdentifiers:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566698 (   0x144) -[BabelFish _voiceInAllowList:allowList:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905667dc (    0x60) -[BabelFish hasSiriEntitlement] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056683c (    0xf0) +[BabelFish axSettings] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056692c (    0xf0) +[BabelFish axLanguageManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566a1c (    0xf0) +[BabelFish localeUtilities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566b0c (    0xf0) +[BabelFish resourceManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566bfc (    0xf0) +[BabelFish migrationUtils] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566cec (     0x8) -[BabelFish speechChannelMap] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566cf4 (     0xc) -[BabelFish setSpeechChannelMap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d00 (     0x8) -[BabelFish siriLegacyToTTSMappings] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d08 (     0xc) -[BabelFish setSiriLegacyToTTSMappings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d14 (     0x8) -[BabelFish languageToCharacterRangesCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d1c (     0xc) -[BabelFish setLanguageToCharacterRangesCache:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d28 (     0x8) -[BabelFish cachedVoices] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d30 (     0x8) -[BabelFish voicesBySpec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d38 (     0xc) -[BabelFish setVoicesBySpec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d44 (     0x8) -[BabelFish localeNameCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d4c (     0xc) -[BabelFish setLocaleNameCache:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d58 (     0x8) -[BabelFish disambiguationMap] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d60 (     0xc) -[BabelFish setDisambiguationMap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d6c (     0x8) -[BabelFish voiceAccessQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d74 (     0xc) -[BabelFish setVoiceAccessQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566d80 (    0x8c) -[BabelFish .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566e0c (    0x58) __getTTSSpeechSynthesizerClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566e64 (    0xf4) TextToSpeechLibrary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566f58 (    0x74) __TextToSpeechLibraryCore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190566fcc (    0x58) __getTTSSubstitutionClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567024 (    0x50) __getAXSpeechSourceKeySpeechFeaturesSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567074 (    0xf8) AccessibilityUtilitiesLibrary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056716c (    0x74) __AccessibilityUtilitiesLibraryCore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905671e0 (    0x58) __getAXSettingsClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567238 (    0x58) __getAXLanguageManagerClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567290 (    0x58) __getTTSLocaleUtilitiesClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905672e8 (    0x58) __getTTSAXResourceManagerClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567340 (    0x58) __getTTSAXResourceMigrationUtilitiesClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567398 (    0x38) operator<(VoiceSpec const&, VoiceSpec const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905673d0 (    0x44) SpeechGlobals::Instance() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567414 (     0x4) SpeechGlobals::SpeechGlobals() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567418 (    0x50) SpeechGlobals::ConnectionForArch(SpeechArch) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567468 (   0x198) SpeechGlobals::SetupConnection(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567600 (   0x178) invocation function for block in SpeechGlobals::SetupConnection(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567778 (    0x4c) invocation function for block in SpeechGlobals::SetupConnection(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905677c4 (   0x128) SpeechChannelHandle::RecoverChannel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905678ec (    0xb0) SpeechGlobals::GetChannelById(unsigned long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056799c (    0x10) SpeechGlobals::SessionSwitch(CGSNotificationType, void*, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905679ac (   0x10c) SpeechGlobals::SendXPCMessage(void*, SpeechArch) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567ab8 (    0x14) invocation function for block in SpeechGlobals::SendXPCMessage(void*, SpeechArch) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567acc (    0xc8) SpeechGlobals::SetSessionState(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567b94 (   0x120) _PerformForAllArchs(void (SpeechArch, bool*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567cb4 (    0x6c) invocation function for block in SpeechGlobals::SetSessionState(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567d20 (    0x74) SpeechGlobals::RegisterChannel(SpeechChannelHandle*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567d94 (    0x74) SpeechGlobals::UnregisterChannel(SpeechChannelHandle*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567e08 (    0x20) invocation function for block in SpeechGlobals::UnregisterChannel(SpeechChannelHandle*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567e28 (    0x40) invocation function for block in SpeechGlobals::GetChannelById(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567e68 (    0x84) SpeechChannelHandle::PrivateChannel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567eec (     0x4) SpeechChannelHandle::~SpeechChannelHandle() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567ef0 (   0x104) SpeechChannelHandle::SpeechBusy(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190567ff4 (    0x88) invocation function for block in SpeechChannelHandle::SpeechBusy(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056807c (    0x7c) SendSSDMessage(void*, SpeechArch) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905680f8 (    0xb4) SpeechGlobals::PerformOnCorrectArch(VoiceSpec const*, void (SpeechArch, bool*) block_pointer) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905681ac (    0xb0) SSDGetVoiceInfo(VoiceSpec const*, long long, SpeechArch) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056825c (    0x90) invocation function for block in SpeechGlobals::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905682ec (   0x178) SpeechGlobals::CopyVoiceDescription(VoiceSpec const*, VoiceDescription*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568464 (    0x80) invocation function for block in SpeechGlobals::CopyVoiceDescription(VoiceSpec const*, VoiceDescription*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905684e4 (   0x180) invocation function for block in SpeechGlobals::CopyVoiceDescription(VoiceSpec const*, VoiceDescription*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568664 (    0x58) invocation function for block in SpeechGlobals::CopyVoiceDescription(VoiceSpec const*, VoiceDescription*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905686bc (    0x98) SpeechGlobals::AddArchForVoiceSpec(VoiceSpec const*, SpeechArch) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568754 (    0x64) __copy_helper_block_e8_32r48c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905687b8 (    0x48) __destroy_helper_block_e8_32r48c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568800 (   0x240) invocation function for block in SpeechGlobals::CopyVoiceDescription(__CFString const*, VoiceDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568a40 (    0x60) invocation function for block in SpeechGlobals::CopyVoiceDescription(__CFString const*, VoiceDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568aa0 (     0xc) __copy_helper_block_e8_40c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568aac (    0x14) __destroy_helper_block_e8_40c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568ac0 (    0x6c) SpeechGlobals::AddArchForVoiceIdentifier(__CFString const*, SpeechArch) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568b2c (    0x64) __copy_helper_block_e8_32r64c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568b90 (    0x48) __destroy_helper_block_e8_32r64c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568bd8 (    0x98) SpeechGlobals::MayHaveNonNativeEngines() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568c70 (     0x8) invocation function for block in SpeechGlobals::MayHaveNonNativeEngines() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568c78 (   0x138) SpeechGlobals::RecomputeMayHaveNonNativeEngines() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568db0 (    0x90) invocation function for block in SpeechGlobals::CopyVoiceID(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568e40 (   0x148) SpeechGlobals::CopyVoicePath(VoiceSpec const*, __CFString const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568f88 (    0x58) invocation function for block in SpeechGlobals::CopyVoicePath(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190568fe0 (   0x170) invocation function for block in SpeechGlobals::CopyVoicePath(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569150 (    0x90) invocation function for block in SpeechGlobals::CopyVoicePath(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905691e0 (    0x58) SpeechGlobals::BuildArchForVoiceIdentifier(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569238 (    0x5c) SpeechGlobals::BuildArchForVoiceSpec(VoiceSpec const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569294 (   0x15c) SpeechGlobals::ArchForVoiceSpec(VoiceSpec const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905693f0 (    0xf4) SpeechGlobals::ArchForVoiceIdentifier(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905694e4 (    0x70) SpeechChannelHandle::CopyVoiceDescription(VoiceSpec const*, VoiceDescription*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569554 (    0x6c) SpeechChannelHandle::CopyVoiceBundlePath(VoiceSpec const*, __CFString const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905695c0 (   0x178) SpeechChannelHandle::CopyIdentifierStringForPreferredVoice(__CFArray const*, __CFLocale const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569738 (   0x114) invocation function for block in SpeechChannelHandle::CopyIdentifierStringForPreferredVoice(__CFArray const*, __CFLocale const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056984c (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056989c (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905698e0 (   0x18c) invocation function for block in SpeechChannelHandle::CopyVoices(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569a6c (    0x70) SpeechChannelHandle::RegisterModule(__CFURL const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569adc (    0x58) SSDSetFileURL(void*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569b34 (    0xfc) SendSSDMessageReturningErrorAllArchs(void*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569c30 (    0x70) SpeechChannelHandle::UnregisterModule(__CFURL const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569ca0 (   0x124) SpeechChannelHandle::Environment(char const**, char const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569dc4 (    0xcc) SpeechChannelHandle::SetLogging(int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569e90 (    0x70) SpeechChannelHandle::Shutdown() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190569f00 (   0x244) SpeechChannelHandle::~SpeechChannelHandle() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a144 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a150 (    0x78) invocation function for block in SpeechChannelHandle::~SpeechChannelHandle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a1c8 (    0x4c) invocation function for block in SpeechChannelHandle::~SpeechChannelHandle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a214 (   0x1f0) SpeechChannelHandle::SpeakBuffer(void const*, unsigned long, long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a404 (    0x3c) invocation function for block in SpeechChannelHandle::SpeakBuffer(void const*, unsigned long, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a440 (    0x90) SendSSDMessageReturningError(void*, SpeechArch, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a4d0 (     0xc) invocation function for block in SpeechChannelHandle::SpeakBuffer(void const*, unsigned long, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a4dc (     0xc) invocation function for block in SpeechChannelHandle::SpeakCFString(__CFString const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a4e8 (    0x80) SpeechChannelHandle::StopSpeech(long long, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a568 (    0x60) SpeechChannelHandle::PauseSpeech(long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a5c8 (    0x90) SpeechChannelHandle::ContinueSpeech() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a658 (   0x168) SpeechChannelHandle::TextToPhonemes(void const*, unsigned long, void**, long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a7c0 (   0x134) SpeechChannelHandle::CopyPhonemesFromText(__CFString const*, __CFString const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a8f4 (    0xb0) SpeechChannelHandle::CopySpeechProperty(__CFString const*, long long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056a9a4 (   0x2bc) SSDCopySpeechProperty(SpeechChannelHandle*, __CFString const*, short*, SpeechArch, void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ac60 (    0xb0) SpeechChannelHandle::CopySpeechProperty(__CFString const*, bool*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ad10 (    0xd4) SpeechChannelHandle::CopySpeechProperty(__CFString const*, unsigned int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ade4 (    0xd4) SpeechChannelHandle::CopySpeechProperty(__CFString const*, VoiceSpec*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056aeb8 (    0x50) SSDXPCToOSType(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056af08 (   0x108) SpeechChannelHandle::CopySpeechProperty(__CFString const*, SpeechErrorInfo*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b010 (   0x26c) SpeechChannelHandle::CopySpeechProperty(__CFString const*, SpeechVersionInfo*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b27c (     0x8) SpeechChannelHandle::CopySpeechProperty(__CFString const*, PhonemeDescriptor***) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b284 (    0xe4) SpeechChannelHandle::CopySpeechProperty(__CFString const*, SpeechXtndData*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b368 (    0xb0) SpeechChannelHandle::CopySpeechProperty(__CFString const*, void const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b418 (    0x28) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, unsigned long, unsigned short)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b440 (    0x28) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, short, long)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b468 (    0x18) SpeechChannelHandle::SetCallback(void (*)(SpeechChannelRecord*, void*, void const**, unsigned long*, int*)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b480 (    0x18) SpeechChannelHandle::SetLatencyCallback(void (*)(SpeechChannelRecord*, void*, unsigned int)) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b498 (    0x4c) SpeechChannelHandle::SetSpeechProperty(__CFString const*, long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b4e4 (    0x58) SpeechChannelHandle::SetSpeechProperty(__CFString const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b53c (    0x54) SpeechChannelHandle::SetSpeechProperty(__CFString const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b590 (    0x4c) SpeechChannelHandle::SetSpeechProperty(__CFString const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b5dc (   0x108) SpeechChannelHandle::SetSpeechProperty(__CFString const*, DelimiterInfo const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b6e4 (    0x88) SpeechChannelHandle::SetSpeechProperty(__CFString const*, VoiceSpec const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b76c (   0x1d0) SpeechChannelHandle::SetSpeechProperty(__CFString const*, SpeechXtndData const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056b93c (   0x2b4) SpeechChannelHandle::OutputToFile(OpaqueExtAudioFile*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bbf0 (    0x84) SpeechChannelHandle::OutputToAudioDevice(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bc74 (    0xb4) SpeechChannelHandle::OutputToAudioDevice(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bd28 (    0xa4) invocation function for block in SpeechChannelHandle::OutputToFile(OpaqueExtAudioFile*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bdcc (    0x3c) invocation function for block in SpeechChannelHandle::OutputToFile(OpaqueExtAudioFile*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056be08 (    0x84) SpeechChannelHandle::OutputToFileDescriptor(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056be8c (    0x70) SpeechChannelHandle::UseDictionary(void const*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056befc (    0x60) SpeechChannelHandle::UseDictionary(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bf5c (     0x8) SpeechChannelHandle::CurrentVoice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bf64 (    0x7c) invocation function for block in SpeechChannelHandle::RecoverChannel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056bfe0 (    0xa4) invocation function for block in SpeechChannelHandle::RecoverChannel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c084 (    0xe8) invocation function for block in SpeechChannelHandle::RecoverChannel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c16c (    0x10) invocation function for block in SpeechChannelHandle::RecoverChannel() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c17c (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c18c (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c198 (    0xd8) invocation function for block in SpeechChannelHandle::HandleCallback(void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c270 (   0x2c0) invocation function for block in SpeechChannelHandle::HandleCallback(void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c530 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000019056c54c (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c5ec (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c604 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c660 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c694 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c6c8 (    0x44) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c70c (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c724 (    0x50) invocation function for block in SendSSDMessageReturningErrorAllArchs(void*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c774 (    0x84) invocation function for block in _NativeArch() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c7f8 (    0x54) std::__1::__tree<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, VoiceDescription>>>::destroy(std::__1::__tree_node<std::__1::__value_type<VoiceSpec, VoiceDescription>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c84c (    0x64) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c8b0 (    0x18) std::__1::vector<SpeechChannelHandle*, std::__1::allocator<SpeechChannelHandle*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c8c8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SpeechChannelHandle*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SpeechChannelHandle*>>(std::__1::allocator<SpeechChannelHandle*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c900 (    0x88) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<VoiceSpec, __CFString const*>, std::__1::__tree_node<std::__1::__value_type<VoiceSpec, __CFString const*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<VoiceSpec, __CFString const*>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, __CFString const*>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, __CFString const*>>>::__emplace_unique_key_args<VoiceSpec, std::__1::piecewise_construct_t const&, std::__1::tuple<VoiceSpec const&>, std::__1::tuple<>>(VoiceSpec const&, std::__1::piecewise_construct_t const&, std::__1::tuple<VoiceSpec const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c988 (    0x6c) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<VoiceSpec, __CFString const*>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, __CFString const*>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, __CFString const*>>>::__find_equal<VoiceSpec>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, VoiceSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056c9f4 (    0x58) std::__1::__tree<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, VoiceDescription>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ca4c (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056cbe4 (    0x54) unsigned long std::__1::__tree<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, VoiceDescription>>>::__count_unique<VoiceSpec>(VoiceSpec const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056cc38 (    0xe8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__tree_node<std::__1::__value_type<VoiceSpec, VoiceDescription>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, VoiceDescription>>>::__emplace_unique_key_args<VoiceSpec, std::__1::piecewise_construct_t const&, std::__1::tuple<VoiceSpec const&>, std::__1::tuple<>>(VoiceSpec const&, std::__1::piecewise_construct_t const&, std::__1::tuple<VoiceSpec const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056cd20 (    0x6c) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::__map_value_compare<VoiceSpec, std::__1::__value_type<VoiceSpec, VoiceDescription>, std::__1::less<VoiceSpec>, true>, std::__1::allocator<std::__1::__value_type<VoiceSpec, VoiceDescription>>>::__find_equal<VoiceSpec>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, VoiceSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056cd8c (    0x80) unsigned long std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>>>::__count_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ce0c (    0x88) std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ce94 (    0x98) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x000000019056cf2c (    0xa0) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>>>::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, P...
                0x000000019056cfcc (    0xc8) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_...
                0x000000019056d094 (    0x60) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, VoiceDescription>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d0f4 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d140 (    0x38) unsigned long std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::__erase_unique<unsigned long long>(unsigned long long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d178 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __CFString const*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::find<unsigned long long>(unsigned long long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d22c (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __CFString const*>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d270 (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __CFString const*>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d3a4 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __CFString const*>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::__emplace_unique_key_args<unsigned long long, std::__1::pair<unsigned long long const, __CFString const*>>(unsigned long long const&, std::__1::pair<unsigned long long const, __CFString const*>&&) [FUNC, PEXT, Name...
                0x000000019056d5b4 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d6a4 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __CFString const*>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __CFString const*>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d800 (    0x5c) std::__1::__throw_out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d85c (    0x34) std::out_of_range::out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056d890 (   0x1b4) RegisterSpokenNotificationForProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056da44 (    0x44) CancelSpokenNotificationForProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056da88 (     0x4) CancelSpokenNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056da8c (   0x220) RegisterTalkingAlertWithProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056dcac (   0x12c) SanitizeStringForXPCDeliveryInDictionaryForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ddd8 (    0x74) CreateTAMessage [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056de4c (    0x74) SendTAMessageNoReply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056dec0 (    0x68) CancelTalkingAlert [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056df28 (     0xc) TalkingAlertsPrefChangeNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056df34 (    0xa4) CancelTalkingAlertForPID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056dfd8 (   0x190) SUCopyPhraseArrayFromDisk [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e168 (    0x84) __TAMessagingConnnection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e1ec (    0x70) __TAMessagingConnnection_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e25c (    0xb0) SetTimeAnnouncementsPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e30c (   0x198) CopyTimeAnnouncementsPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e4a4 (    0xa0) CopyAvailablePhrases [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e544 (    0x8c) IntervalListApplierFunction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e5d0 (    0xa0) CopyAvailableIntervals [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e670 (    0xa8) LocalizeStringValueApplierFunction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e718 (    0xdc) TimeAnnouncementsDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e7f4 (    0x38) midiToHertz [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e82c (    0x54) +[BFConversionUtils sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e880 (    0x40) __35+[BFConversionUtils sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e8c0 (    0x5c) -[BFConversionUtils init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e91c (    0x98) -[BFConversionUtils _registerForNotifications] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056e9b4 (    0x90) -[BFConversionUtils dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ea44 (   0x384) -[BFConversionUtils _rebuildVoiceDefaultsFromPrefs] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056edc8 (    0xcc) -[BFConversionUtils _keyForVoiceDataRecord:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ee94 (     0xc) -[BFConversionUtils defaultPitchForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056eea0 (    0x90) -[BFConversionUtils defaultRateForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ef30 (     0xc) -[BFConversionUtils defaultPitchModulationForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ef3c (    0x90) -[BFConversionUtils defaultVolumeForVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056efcc (   0x160) -[BFConversionUtils _defaultsForVoiceId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f12c (    0xe8) -[BFConversionUtils convertAbsolutePitch:forVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f214 (     0x8) -[BFConversionUtils convertPitchModulation:forVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f21c (    0xb4) -[BFConversionUtils convertWPMRate:forVoice:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f2d0 (    0x3c) -[BFConversionUtils _assymetricLinearlyScaledValueForNumber:sourceMin:sourceMiddle:sourceMax:destinationMin:destinationMiddle:destinationMax:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f30c (     0x8) -[BFConversionUtils voiceDefaults] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f314 (     0xc) -[BFConversionUtils setVoiceDefaults:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f320 (     0xc) -[BFConversionUtils .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f32c (   0x24c) SendMessageToSpeechSynthesisServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f578 (     0x4) TTSStartSpeakingSelection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f57c (     0x4) TTSStartSpeakingSelectionWithString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f580 (     0x4) TTSStopSpeakingSelection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f584 (     0x4) TTSIsSpeakingSelection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f588 (    0x3c) SUAddAppPathToLoginStartupList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f5c4 (   0x1f8) ModifyLoginStartupList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f7bc (   0x1e4) RemoveAppPathFromOldLoginStartupList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f9a0 (    0x3c) SURemoveAppPathFromLoginStartupList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056f9dc (    0xc8) SUCopyKeyNamesPropertyList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056faa4 (   0x148) SUPostKeyCodeWithModifiers [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056fbec (    0xc8) SUCopyAXUIElementExceptionsDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056fcb4 (    0x88) SUIsMainBundleUsingEnglishLocalization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056fd3c (    0xc4) IsLocalizationNameAnEnglishVariant [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056fe00 (   0x128) SUIsProcessUsingEnglishLocalization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ff28 (    0x44) InitServerConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ff6c (    0x30) DisposeServerConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019056ff9c (    0x98) StartServerConnection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570034 (   0x12c) SendMessagePrimitive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570160 (    0x18) SendMessageToServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570178 (    0x6c) IsAppAlreadyRunning [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905701e4 (    0x28) IsValueCArrayOK [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057020c (   0x16c) SRSetSecurityFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570378 (    0xfc) MTUOpenResourceFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570474 (    0xd0) MTUReadResourceDataFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570544 (     0x4) NewSpeechTextDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570548 (     0x4) NewSpeechDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057054c (     0x4) NewSpeechSyncUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570550 (     0x4) NewSpeechErrorUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570554 (     0x4) NewSpeechPhonemeUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570558 (     0x4) NewSpeechWordUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057055c (     0x4) DisposeSpeechTextDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570560 (     0x4) DisposeSpeechDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570564 (     0x4) DisposeSpeechSyncUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570568 (     0x4) DisposeSpeechErrorUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057056c (     0x4) DisposeSpeechPhonemeUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570570 (     0x4) DisposeSpeechWordUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570574 (     0x4) InvokeSpeechTextDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570578 (     0x4) InvokeSpeechDoneUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057057c (     0x4) InvokeSpeechSyncUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570580 (     0x4) InvokeSpeechErrorUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570584 (     0x4) InvokeSpeechPhonemeUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570588 (     0x4) InvokeSpeechWordUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057058c (    0x44) BFNewSpeechChannel(VoiceSpec*, SpeechChannelRecord**) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905705d0 (    0x3c) BFDisposeSpeechChannel(SpeechChannelRecord*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057060c (    0x3c) BFSpeakBuffer(SpeechChannelRecord*, void const*, unsigned long, int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570648 (    0x3c) BFSpeakCFString(SpeechChannelRecord*, __CFString const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570684 (    0x3c) BFStopSpeechChannel(SpeechChannelRecord*, int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905706c0 (    0x3c) BFPauseSpeechAt(SpeechChannelRecord*, int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905706fc (    0x3c) BFContinueSpeech(SpeechChannelRecord*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570738 (    0x54) invocation function for block in BFSetSpeechRate(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057078c (    0x54) invocation function for block in BFSetSpeechPitch(SpeechChannelRecord*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905707e0 (    0x48) BFCopySpeechProperty(SpeechChannelRecord*, __CFString const*, void const**) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570828 (    0x48) BFSetSpeechInfo(SpeechChannelRecord*, __CFString const*, void const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570870 (    0x48) BFSetSpeechProperty(SpeechChannelRecord*, __CFString const*, void const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905708b8 (    0x3c) BFGetIndVoice(short, VoiceSpec*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905708f4 (    0x68) BFGetVoiceInfo(VoiceSpec const*, unsigned int, void*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057095c (    0x68) BFMakeVoiceSpecForIdentifierString(__CFString const*, VoiceSpec*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905709c4 (    0x3c) __76-[SpeechSynthesisApps startSpeakingSelectionWithFallback:completionHandler:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570a00 (    0x3c) __66-[SpeechSynthesisApps stopSpeakingSelectionWithCompletionHandler:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570a3c (    0x3c) __61-[SpeechSynthesisApps getSpeakingStateWithCompletionHandler:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570a78 (    0x6c) -[BFRegexCache regexForString:atStart:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570ae4 (    0x94) -[BFPlaintalkParser _parse].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570b78 (    0x34) -[BFPlaintalkParser _parseCommand].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570bac (    0x34) -[BFPlaintalkParser _parseCommand].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570be0 (    0x34) -[BFPlaintalkParser _parseCommand].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570c14 (    0x34) -[BFPlaintalkParser _parseCommand].cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570c48 (    0x34) -[BFPlaintalkParser _parseCommand].cold.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570c7c (    0x6c) -[BFPlaintalkParser _parseCommand].cold.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570ce8 (    0x60) -[BFSpeechChannel continueSpeech].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570d48 (    0x60) -[BFSpeechChannel pause:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570da8 (    0x60) -[BFSpeechChannel stop:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570e08 (    0x60) -[BFSpeechChannel speak:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570e68 (    0x60) -[BFSpeechChannel speak:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570ec8 (    0x68) -[BFSpeechChannel speak:].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570f30 (    0x78) -[BFSpeechChannel speak:].cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190570fa8 (    0x58) -[BFSpeechChannel speak:].cold.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571000 (    0x40) __25-[BFSpeechChannel speak:]_block_invoke.38.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571040 (    0x7c) __25-[BFSpeechChannel speak:]_block_invoke.41.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905710bc (    0x48) -[BFSpeechChannel terminate].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571104 (    0x44) -[BFSpeechChannel speechSynthesizer:didFinishSpeakingRequest:successfully:withError:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571148 (    0x40) -[BFSpeechChannel _createExtFileForUrl:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571188 (    0x40) -[BFSpeechChannel _createExtFileForUrl:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905711c8 (    0x40) -[BFSpeechChannel _createExtFileForUrl:].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571208 (    0x44) -[BabelFish devicesChanged].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057124c (    0x88) -[BabelFish voiceForLocale:allowedIdentifiers:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905712d4 (    0x78) -[BabelFish voiceForLocale:allowedIdentifiers:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057134c (    0x8c) __getTTSSpeechSynthesizerClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905713d8 (    0x90) TextToSpeechLibrary.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571468 (    0x8c) __getTTSSubstitutionClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905714f4 (    0x90) AccessibilityUtilitiesLibrary.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571584 (    0x8c) __getAXSettingsClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571610 (    0x8c) __getAXLanguageManagerClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057169c (    0x8c) __getTTSLocaleUtilitiesClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571728 (    0x8c) __getTTSAXResourceManagerClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905717b4 (    0x8c) __getTTSAXResourceMigrationUtilitiesClass_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571840 (    0x80) invocation function for block in SpeechGlobals::SetupConnection(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905718c0 (    0x2c) invocation function for block in SpeechGlobals::SetupConnection(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905718ec (    0x2c) invocation function for block in SpeechGlobals::CopyVoiceAttributes(VoiceSpec const*, __CFDictionary const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571918 (    0x2c) invocation function for block in SpeechGlobals::CopyVoiceID(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571944 (    0x2c) invocation function for block in SpeechGlobals::CopyVoicePath(VoiceSpec const*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571970 (    0x2c) invocation function for block in SpeechChannelHandle::CopyVoices(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019057199c (    0x2c) SpeechChannelHandle::CopyPhonemesFromText(__CFString const*, __CFString const**) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001905719c8 (    0x48) RegisterTalkingAlertWithProperties.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571a10 (    0x48) CreateTAMessage.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000190571a58 (    0x80) __TAMessagingConnnection_block_invoke_2.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x0000000190571ad8 (  0x1170) __TEXT __auth_stubs
                0x0000000190571ad8 (    0x10) DYLD-STUB$$AXCLanguageCanonicalFormToGeneralLanguage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ae8 (    0x10) DYLD-STUB$$AXCLanguageConvertToCanonicalForm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571af8 (    0x10) DYLD-STUB$$AXTTSLogCommon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b08 (    0x10) DYLD-STUB$$AudioConverterSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b18 (    0x10) DYLD-STUB$$AudioFileGetGlobalInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b28 (    0x10) DYLD-STUB$$AudioFileGetGlobalInfoSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b38 (    0x10) DYLD-STUB$$AudioObjectAddPropertyListener [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b48 (    0x10) DYLD-STUB$$AudioObjectAddPropertyListenerBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b58 (    0x10) DYLD-STUB$$AudioObjectGetPropertyData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b68 (    0x10) DYLD-STUB$$AudioObjectGetPropertyDataSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b78 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b88 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571b98 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ba8 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571bb8 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571bc8 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571bd8 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571be8 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571bf8 (    0x10) DYLD-STUB$$CFArrayGetFirstIndexOfValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c08 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c18 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c28 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c38 (    0x10) DYLD-STUB$$CFAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c48 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c58 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c68 (    0x10) DYLD-STUB$$CFBundleCopyBundleLocalizations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c78 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationsForPreferences [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c88 (    0x10) DYLD-STUB$$CFBundleCopyLocalizedString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571c98 (    0x10) DYLD-STUB$$CFBundleCopyPreferredLocalizationsFromArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ca8 (    0x10) DYLD-STUB$$CFBundleCopyResourceURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571cb8 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571cc8 (    0x10) DYLD-STUB$$CFBundleGetBundleWithIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571cd8 (    0x10) DYLD-STUB$$CFBundleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ce8 (    0x10) DYLD-STUB$$CFBundleGetMainBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571cf8 (    0x10) DYLD-STUB$$CFBundleGetValueForInfoDictionaryKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d08 (    0x10) DYLD-STUB$$CFBundleGetVersionNumber [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d18 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d28 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d38 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d48 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d58 (    0x10) DYLD-STUB$$CFDateCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d68 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d78 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d88 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571d98 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571da8 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571db8 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571dc8 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571dd8 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571de8 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571df8 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e08 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e18 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e28 (    0x10) DYLD-STUB$$CFLocaleCopyPreferredLanguages [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e38 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e48 (    0x10) DYLD-STUB$$CFLocaleCreateCanonicalLanguageIdentifierFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e58 (    0x10) DYLD-STUB$$CFLocaleCreateCanonicalLocaleIdentifierFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e68 (    0x10) DYLD-STUB$$CFLocaleCreateComponentsFromLocaleIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e78 (    0x10) DYLD-STUB$$CFLocaleCreateLocaleIdentifierFromComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e88 (    0x10) DYLD-STUB$$CFLocaleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571e98 (    0x10) DYLD-STUB$$CFLocaleGetSystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ea8 (    0x10) DYLD-STUB$$CFLocaleGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571eb8 (    0x10) DYLD-STUB$$CFMessagePortCreateRemote [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ec8 (    0x10) DYLD-STUB$$CFMessagePortInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ed8 (    0x10) DYLD-STUB$$CFMessagePortSendRequest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ee8 (    0x10) DYLD-STUB$$CFNotificationCenterAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ef8 (    0x10) DYLD-STUB$$CFNotificationCenterGetDistributedCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f08 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f18 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f28 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f38 (    0x10) DYLD-STUB$$CFPreferencesAppSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f48 (    0x10) DYLD-STUB$$CFPreferencesCopyAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f58 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f68 (    0x10) DYLD-STUB$$CFPreferencesSetAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f78 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f88 (    0x10) DYLD-STUB$$CFPropertyListCreateFromXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571f98 (    0x10) DYLD-STUB$$CFPropertyListCreateWithStream [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571fa8 (    0x10) DYLD-STUB$$CFPropertyListCreateXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571fb8 (    0x10) DYLD-STUB$$CFReadStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571fc8 (    0x10) DYLD-STUB$$CFReadStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571fd8 (    0x10) DYLD-STUB$$CFReadStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571fe8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190571ff8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572008 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572018 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572028 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572038 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572048 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572058 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572068 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572078 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572088 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572098 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720a8 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720b8 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720c8 (    0x10) DYLD-STUB$$CFStringGetCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720d8 (    0x10) DYLD-STUB$$CFStringGetCharactersPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720e8 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905720f8 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572108 (    0x10) DYLD-STUB$$CFStringGetPascalString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572118 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572128 (    0x10) DYLD-STUB$$CFStringInsert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572138 (    0x10) DYLD-STUB$$CFStringReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572148 (    0x10) DYLD-STUB$$CFURLCopyFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572158 (    0x10) DYLD-STUB$$CFURLCreateBookmarkData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572168 (    0x10) DYLD-STUB$$CFURLCreateDataAndPropertiesFromResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572178 (    0x10) DYLD-STUB$$CFURLCreateFromFSRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572188 (    0x10) DYLD-STUB$$CFURLWriteDataAndPropertiesToResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572198 (    0x10) DYLD-STUB$$CGEnableEventStateCombining [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721a8 (    0x10) DYLD-STUB$$CGPostKeyboardEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721b8 (    0x10) DYLD-STUB$$CGSRegisterNotifyProc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721c8 (    0x10) DYLD-STUB$$CGSetLocalEventsFilterDuringSuppressionState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721d8 (    0x10) DYLD-STUB$$CGSetLocalEventsSuppressionInterval [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721e8 (    0x10) DYLD-STUB$$ExtAudioFileCreateWithURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905721f8 (    0x10) DYLD-STUB$$ExtAudioFileDispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572208 (    0x10) DYLD-STUB$$ExtAudioFileGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572218 (    0x10) DYLD-STUB$$ExtAudioFileSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572228 (    0x10) DYLD-STUB$$ExtAudioFileWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572238 (    0x10) DYLD-STUB$$FSCompareFSRefs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572248 (    0x10) DYLD-STUB$$FSPathMakeRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572258 (    0x10) DYLD-STUB$$GetCurrentProcess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572268 (    0x10) DYLD-STUB$$GetHandleSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572278 (    0x10) DYLD-STUB$$GetProcessBundleLocation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572288 (    0x10) DYLD-STUB$$GetProcessPID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572298 (    0x10) DYLD-STUB$$LSCopyDisplayNameForRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722a8 (    0x10) DYLD-STUB$$LSSharedFileListCopySnapshot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722b8 (    0x10) DYLD-STUB$$LSSharedFileListCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722c8 (    0x10) DYLD-STUB$$LSSharedFileListInsertItemFSRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722d8 (    0x10) DYLD-STUB$$LSSharedFileListItemRemove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722e8 (    0x10) DYLD-STUB$$LSSharedFileListItemResolve [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905722f8 (    0x10) DYLD-STUB$$MGGetBoolAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572308 (    0x10) DYLD-STUB$$MPCreateCriticalRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572318 (    0x10) DYLD-STUB$$MPDeleteCriticalRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572328 (    0x10) DYLD-STUB$$MPEnterCriticalRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572338 (    0x10) DYLD-STUB$$MPExitCriticalRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572348 (    0x10) DYLD-STUB$$MemError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572358 (    0x10) DYLD-STUB$$NSIntersectionRange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572368 (    0x10) DYLD-STUB$$ProcessInformationCopyDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572378 (    0x10) DYLD-STUB$$SecTaskCopyValueForEntitlement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572388 (    0x10) DYLD-STUB$$SecTaskCreateFromSelf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572398 (    0x10) DYLD-STUB$$SetHandleSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723a8 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723b8 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723c8 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723d8 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723e8 (    0x10) DYLD-STUB$$_CFXPCCreateCFObjectFromXPCObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905723f8 (    0x10) DYLD-STUB$$_CFXPCCreateXPCObjectFromCFObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572408 (    0x10) DYLD-STUB$$_LSCopyMatchingApplicationsWithItems [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572418 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572428 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572438 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572448 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572458 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572468 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572478 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572488 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572498 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724a8 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724b8 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724c8 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724d8 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724e8 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905724f8 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572508 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572518 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572528 (    0x10) DYLD-STUB$$_os_feature_enabled_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572538 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572548 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572558 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572568 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572578 (    0x10) DYLD-STUB$$_sl_dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572588 (    0x10) DYLD-STUB$$access [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572598 (    0x10) DYLD-STUB$$arc4random_uniform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725a8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725b8 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725c8 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725d8 (    0x10) DYLD-STUB$$dispatch_after [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725e8 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905725f8 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572608 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572618 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_autorelease_frequency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572628 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572638 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572648 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572658 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572668 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572678 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572688 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572698 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726a8 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726b8 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726c8 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726d8 (    0x10) DYLD-STUB$$exp2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726e8 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905726f8 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572708 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572718 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572728 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572738 (    0x10) DYLD-STUB$$ioctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572748 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572758 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572768 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572778 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572788 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572798 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727a8 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727b8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727c8 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727d8 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727e8 (    0x10) DYLD-STUB$$objc_copyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905727f8 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572808 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572818 (    0x10) DYLD-STUB$$objc_getClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572828 (    0x10) DYLD-STUB$$objc_initWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572838 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572848 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572858 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572868 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572878 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572888 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572898 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728a8 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728b8 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728c8 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728d8 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728e8 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905728f8 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572908 (    0x10) DYLD-STUB$$objc_sync_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572918 (    0x10) DYLD-STUB$$objc_sync_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572928 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572938 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572948 (    0x10) DYLD-STUB$$os_variant_is_basesystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572958 (    0x10) DYLD-STUB$$pipe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572968 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572978 (    0x10) DYLD-STUB$$sscanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572988 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572998 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729a8 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729b8 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729c8 (    0x10) DYLD-STUB$$xpc_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729d8 (    0x10) DYLD-STUB$$xpc_array_set_fd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729e8 (    0x10) DYLD-STUB$$xpc_array_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001905729f8 (    0x10) DYLD-STUB$$xpc_bool_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a08 (    0x10) DYLD-STUB$$xpc_bool_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a18 (    0x10) DYLD-STUB$$xpc_connection_create_mach_service [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a28 (    0x10) DYLD-STUB$$xpc_connection_get_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a38 (    0x10) DYLD-STUB$$xpc_connection_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a48 (    0x10) DYLD-STUB$$xpc_connection_send_message [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a58 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a68 (    0x10) DYLD-STUB$$xpc_connection_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a78 (    0x10) DYLD-STUB$$xpc_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a88 (    0x10) DYLD-STUB$$xpc_copy_description [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572a98 (    0x10) DYLD-STUB$$xpc_data_get_bytes_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572aa8 (    0x10) DYLD-STUB$$xpc_data_get_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572ab8 (    0x10) DYLD-STUB$$xpc_dictionary_apply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572ac8 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572ad8 (    0x10) DYLD-STUB$$xpc_dictionary_get_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572ae8 (    0x10) DYLD-STUB$$xpc_dictionary_get_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572af8 (    0x10) DYLD-STUB$$xpc_dictionary_get_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b08 (    0x10) DYLD-STUB$$xpc_dictionary_get_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b18 (    0x10) DYLD-STUB$$xpc_dictionary_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b28 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b38 (    0x10) DYLD-STUB$$xpc_dictionary_set_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b48 (    0x10) DYLD-STUB$$xpc_dictionary_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b58 (    0x10) DYLD-STUB$$xpc_dictionary_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b68 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b78 (    0x10) DYLD-STUB$$xpc_dictionary_set_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b88 (    0x10) DYLD-STUB$$xpc_double_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572b98 (    0x10) DYLD-STUB$$xpc_double_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572ba8 (    0x10) DYLD-STUB$$xpc_equal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572bb8 (    0x10) DYLD-STUB$$xpc_fd_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572bc8 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572bd8 (    0x10) DYLD-STUB$$xpc_int64_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572be8 (    0x10) DYLD-STUB$$xpc_int64_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572bf8 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572c08 (    0x10) DYLD-STUB$$xpc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572c18 (    0x10) DYLD-STUB$$xpc_string_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572c28 (    0x10) DYLD-STUB$$xpc_string_get_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000190572c38 (    0x10) DYLD-STUB$$xpc_string_get_string_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000190572c48 (   0xb84) __TEXT __objc_methlist
                0x0000000190572c48 (    0x18) _OBJC_$_CLASS_METHODS_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x0000000190572c60 (    0x50) _OBJC_$_INSTANCE_METHODS_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x0000000190572cb0 (    0x18) _OBJC_$_CLASS_METHODS_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x0000000190572cc8 (    0x68) _OBJC_$_INSTANCE_METHODS_BFIsoProsodicTextSpeechElement [NameNList, MangledNameNList, NList] 
                0x0000000190572d30 (    0x30) _OBJC_$_INSTANCE_METHODS_BFPauseSpeechElement [NameNList, MangledNameNList, NList] 
                0x0000000190572d60 (   0x158) _OBJC_$_INSTANCE_METHODS_BFPlaintalkParser [NameNList, MangledNameNList, NList] 
                0x0000000190572eb8 (    0xb0) _OBJC_$_INSTANCE_METHODS_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x0000000190572f68 (    0x50) _OBJC_$_INSTANCE_METHODS_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x0000000190572fb8 (    0x30) _OBJC_$_INSTANCE_METHODS_BFSpeechElement [NameNList, MangledNameNList, NList] 
                0x0000000190572fe8 (    0x38) _OBJC_$_INSTANCE_METHODS_BFSyncSpeechElement [NameNList, MangledNameNList, NList] 
                0x0000000190573020 (    0x18) _OBJC_$_INSTANCE_METHODS_NSString(BFUtilities) [NameNList, MangledNameNList, NList] 
                0x0000000190573038 (   0x428) _OBJC_$_INSTANCE_METHODS_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x0000000190573460 (    0x68) _OBJC_$_CLASS_METHODS_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001905734c8 (   0x218) _OBJC_$_INSTANCE_METHODS_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001905736e0 (    0x18) _OBJC_$_CLASS_METHODS_BFConversionUtils [NameNList, MangledNameNList, NList] 
                0x00000001905736f8 (    0xd4) _OBJC_$_INSTANCE_METHODS_BFConversionUtils [NameNList, MangledNameNList, NList] 
            0x00000001905737cc (  0x16b4) __TEXT __gcc_except_tab
                0x00000001905737cc (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001905737e8 (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000190573800 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000190573814 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000190573824 (    0x40) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000190573864 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000190573880 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000190573894 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001905738b4 (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001905738d4 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001905738f4 (    0x1c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000190573910 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x0000000190573924 (    0x34) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000190573958 (    0x14) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000019057396c (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000190573980 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000190573994 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001905739a8 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001905739bc (    0x34) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001905739f0 (    0x20) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000190573a10 (    0xb8) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x0000000190573ac8 (    0x18) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000190573ae0 (    0x20) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x0000000190573b00 (   0x188) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x0000000190573c88 (    0x30) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x0000000190573cb8 (    0x34) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000190573cec (   0x138) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000190573e24 (    0x5c) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000190573e80 (    0x1c) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x0000000190573e9c (    0x20) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x0000000190573ebc (    0x20) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x0000000190573edc (    0xb4) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x0000000190573f90 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000190573fa4 (    0x60) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000190574004 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000190574014 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000190574024 (    0x24) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000190574048 (    0x24) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000019057406c (    0x68) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001905740d4 (   0x480) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000190574554 (    0x18) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000019057456c (    0x1c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000190574588 (    0x58) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001905745e0 (    0x2c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000019057460c (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000190574620 (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000190574630 (    0x1c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000019057464c (    0x80) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001905746cc (    0x24) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001905746f0 (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x0000000190574700 (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000190574710 (    0xb0) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001905747c0 (    0x20) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001905747e0 (    0x44) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x0000000190574824 (    0x80) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001905748a4 (    0x1c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001905748c0 (    0x1c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001905748dc (    0x68) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x0000000190574944 (    0x18) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000019057495c (    0x18) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x0000000190574974 (    0x1c) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x0000000190574990 (    0x1c) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001905749ac (    0x1c) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001905749c8 (    0x34) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001905749fc (    0x1c) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x0000000190574a18 (    0x50) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000190574a68 (    0x64) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000190574acc (    0x28) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000190574af4 (    0x30) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000190574b24 (    0x2c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000190574b50 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000190574b64 (    0x20) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000190574b84 (    0x18) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000190574b9c (    0x34) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000190574bd0 (    0x18) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000190574be8 (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x0000000190574bf8 (    0x34) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x0000000190574c2c (    0x18) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x0000000190574c44 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x0000000190574c54 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x0000000190574c64 (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x0000000190574c74 (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x0000000190574c84 (    0x10) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x0000000190574c94 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000190574ca4 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000190574cb4 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000190574cc4 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000190574cd8 (    0x14) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x0000000190574cec (    0x14) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x0000000190574d00 (    0x28) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x0000000190574d28 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x0000000190574d38 (    0x10) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x0000000190574d48 (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x0000000190574d5c (    0x14) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x0000000190574d70 (    0x14) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x0000000190574d84 (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x0000000190574d98 (    0x10) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x0000000190574da8 (    0x20) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x0000000190574dc8 (    0x24) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x0000000190574dec (    0x28) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x0000000190574e14 (    0x14) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x0000000190574e28 (    0x10) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x0000000190574e38 (     0xc) GCC_except_table172 [NameNList, MangledNameNList, NList] 
                0x0000000190574e44 (    0x14) GCC_except_table195 [NameNList, MangledNameNList, NList] 
                0x0000000190574e58 (    0x18) GCC_except_table206 [NameNList, MangledNameNList, NList] 
                0x0000000190574e70 (    0x10) GCC_except_table209 [NameNList, MangledNameNList, NList] 
            0x0000000190574e80 (   0x100) __TEXT __const
                0x0000000190574e88 (    0x28) sAudioFormatMono [NameNList, MangledNameNList, NList] 
                0x0000000190574eb0 (    0xac) kBFVoiceCreator [NameNList, MangledNameNList, NList] 
                0x0000000190574f5c (    0x24) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
            0x0000000190574f80 (  0x18fc) __TEXT __cstring
            0x000000019057687c (   0x9d4) __TEXT __oslogstring
            0x0000000190577250 (   0x162) __TEXT __dlopen_cstrs
                0x0000000190577250 (    0x56) audit_stringTextToSpeech [NameNList, MangledNameNList, NList] 
                0x00000001905772a6 (    0x4c) audit_stringSiriTTS [NameNList, MangledNameNList, NList] 
                0x00000001905772f2 (    0x56) audit_stringTextToSpeech [NameNList, MangledNameNList, NList] 
                0x0000000190577348 (    0x6a) audit_stringAccessibilityUtilities [NameNList, MangledNameNList, NList] 
            0x00000001905773b4 (   0xb04) __TEXT __unwind_info
            0x0000000190577eb8 (    0x38) __TEXT __eh_frame
            0x0000000190577ef0 (   0x167) __TEXT __objc_classname
            0x0000000190578058 (  0x2d97) __TEXT __objc_methname
            0x000000019057adef (   0x750) __TEXT __objc_methtype
            0x000000019057b540 (  0x2ac0) __TEXT __objc_stubs
                0x000000019057b540 (    0x20) objc_msgSend$URLForResource:withExtension: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b560 (    0x20) objc_msgSend$_assymetricLinearlyScaledValueForNumber:sourceMin:sourceMiddle:sourceMax:destinationMin:destinationMiddle:destinationMax: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b580 (    0x20) objc_msgSend$_callSpeechDone [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b5a0 (    0x20) objc_msgSend$_characterRangesForLocaleCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b5c0 (    0x20) objc_msgSend$_closeAudioFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b5e0 (    0x20) objc_msgSend$_createExtFileForUrl: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b600 (    0x20) objc_msgSend$_defaultsForVoiceId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b620 (    0x20) objc_msgSend$_disambiguationKeyForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b640 (    0x20) objc_msgSend$_disambiguationMatrixForVoices: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b660 (    0x20) objc_msgSend$_ensureCachedVoicesLoaded [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b680 (    0x20) objc_msgSend$_forceResetChannel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b6a0 (    0x20) objc_msgSend$_keyForVoiceDataRecord: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b6c0 (    0x20) objc_msgSend$_monitorAudioDevices [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b6e0 (    0x20) objc_msgSend$_nextCommandAtStartOfTail [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b700 (    0x20) objc_msgSend$_nextNumericStringRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b720 (    0x20) objc_msgSend$_nextTextStringRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b740 (    0x20) objc_msgSend$_parse [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b760 (    0x20) objc_msgSend$_parseCommand [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b780 (    0x20) objc_msgSend$_parseText [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b7a0 (    0x20) objc_msgSend$_rebuildVoiceDefaultsFromPrefs [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b7c0 (    0x20) objc_msgSend$_registerForNotifications [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b7e0 (    0x20) objc_msgSend$_resetSynthesizer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b800 (    0x20) objc_msgSend$_safelyCallPendingStopBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b820 (    0x20) objc_msgSend$_subscribeToDefaultDeviceChanges [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b840 (    0x20) objc_msgSend$_voiceForIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b860 (    0x20) objc_msgSend$_voiceInAllowList:allowList: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b880 (    0x20) objc_msgSend$accurateWordCallbacks [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b8a0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b8c0 (    0x20) objc_msgSend$addObserver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b8e0 (    0x20) objc_msgSend$addObserver:selector:name:object:suspensionBehavior: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b900 (    0x20) objc_msgSend$allAvailableLanguages [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b920 (    0x20) objc_msgSend$allObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b940 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b960 (    0x20) objc_msgSend$allVoices [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b980 (    0x20) objc_msgSend$allVoices: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b9a0 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b9c0 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057b9e0 (    0x20) objc_msgSend$attributesForLegacyVoiceSpec: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ba00 (    0x20) objc_msgSend$audioBufferList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ba20 (    0x20) objc_msgSend$audioDeviceId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ba40 (    0x20) objc_msgSend$audioFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ba60 (    0x20) objc_msgSend$axLanguageManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ba80 (    0x20) objc_msgSend$axSettings [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057baa0 (    0x20) objc_msgSend$ax_filteredArrayUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bac0 (    0x20) objc_msgSend$badStartingCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bae0 (    0x20) objc_msgSend$bitmapRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bb00 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bb20 (    0x20) objc_msgSend$broadcast [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bb40 (    0x20) objc_msgSend$bundleForClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bb60 (    0x20) objc_msgSend$cache [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bb80 (    0x20) objc_msgSend$cachedVoices [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bba0 (    0x20) objc_msgSend$callbackQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bbc0 (    0x20) objc_msgSend$cfWordCallback [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bbe0 (    0x20) objc_msgSend$channelOperationQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bc00 (    0x20) objc_msgSend$channelState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bc20 (    0x20) objc_msgSend$characterAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bc40 (    0x20) objc_msgSend$characterIsMember: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bc60 (    0x20) objc_msgSend$characterLiteralMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bc80 (    0x20) objc_msgSend$characterRangesForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bca0 (    0x20) objc_msgSend$characterSetWithCharactersInString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bcc0 (    0x20) objc_msgSend$checkResourceIsReachableAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bce0 (    0x20) objc_msgSend$combinedProsodyMarkupForIdentifier:string:rate:pitch:volume: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bd00 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bd20 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bd40 (    0x20) objc_msgSend$connectionToService [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bd60 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bd80 (    0x20) objc_msgSend$contentPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bda0 (    0x20) objc_msgSend$contextSkipStart [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bdc0 (    0x20) objc_msgSend$contextSkipperState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bde0 (    0x20) objc_msgSend$continueSpeakingRequest:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057be00 (    0x20) objc_msgSend$continueSpeech [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057be20 (    0x20) objc_msgSend$convertAbsolutePitch:forVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057be40 (    0x20) objc_msgSend$convertWPMRate:forVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057be60 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057be80 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bea0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bec0 (    0x20) objc_msgSend$currentHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bee0 (    0x20) objc_msgSend$currentIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bf00 (    0x20) objc_msgSend$currentProsodicState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bf20 (    0x20) objc_msgSend$currentRequest [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bf40 (    0x20) objc_msgSend$currentSpeechString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bf60 (    0x20) objc_msgSend$dateWithTimeIntervalSinceNow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bf80 (    0x20) objc_msgSend$defaultCStringEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bfa0 (    0x20) objc_msgSend$defaultCenter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bfc0 (    0x20) objc_msgSend$defaultPitchForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057bfe0 (    0x20) objc_msgSend$defaultPitchModulationForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c000 (    0x20) objc_msgSend$defaultRateForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c020 (    0x20) objc_msgSend$defaultVoiceIdentifierForGeneralLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c040 (    0x20) objc_msgSend$defaultVolumeForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c060 (    0x20) objc_msgSend$devicesChanged [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c080 (    0x20) objc_msgSend$dialectForCurrentRegion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c0a0 (    0x20) objc_msgSend$dialectForLanguageID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c0c0 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c0e0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c100 (    0x20) objc_msgSend$disambiguationMap [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c120 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c140 (    0x20) objc_msgSend$encapsulateSubstringAtRange:withPrefix:andSuffix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c160 (    0x20) objc_msgSend$enumerateByteRangesUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c180 (    0x20) objc_msgSend$enumerateEmojiCharactersInString:languageCode:withBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c1a0 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c1c0 (    0x20) objc_msgSend$enumerateMatchesInString:options:range:usingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c1e0 (    0x20) objc_msgSend$exemplarCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c200 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c220 (    0x20) objc_msgSend$fileURLWithPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c240 (    0x20) objc_msgSend$firstMatchInString:options:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c260 (    0x20) objc_msgSend$firstNonCommandCharacterIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c280 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c2a0 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c2c0 (    0x20) objc_msgSend$footprint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c2e0 (    0x20) objc_msgSend$formUnionWithCharacterSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c300 (    0x20) objc_msgSend$format [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c320 (    0x20) objc_msgSend$frameLength [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c340 (    0x20) objc_msgSend$gender [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c360 (    0x20) objc_msgSend$genericMarkMarkupForIdentifier:name: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c380 (    0x20) objc_msgSend$getBytes:maxLength:usedLength:encoding:options:range:remainingRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c3a0 (    0x20) objc_msgSend$getChannel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c3c0 (    0x20) objc_msgSend$getIdentifierForLegacyVoiceSpec: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c3e0 (    0x20) objc_msgSend$getSpeakingStateWithCompletionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c400 (    0x20) objc_msgSend$handleFailureInFunction:file:lineNumber:description: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c420 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c440 (    0x20) objc_msgSend$hasSiriEntitlement [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c460 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c480 (    0x20) objc_msgSend$identifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c4a0 (    0x20) objc_msgSend$initWithContentsOfURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c4c0 (    0x20) objc_msgSend$initWithMSDuration:andRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c4e0 (    0x20) objc_msgSend$initWithName:andRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c500 (    0x20) objc_msgSend$initWithOriginalString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c520 (    0x20) objc_msgSend$initWithPattern:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c540 (    0x20) objc_msgSend$initWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c560 (    0x20) objc_msgSend$initWithServiceName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c580 (    0x20) objc_msgSend$initWithText:andProsodicState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c5a0 (    0x20) objc_msgSend$initWithText:originalRange:prosodicState:mode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c5c0 (    0x20) objc_msgSend$initWithVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c5e0 (    0x20) objc_msgSend$initialProsodicState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c600 (    0x20) objc_msgSend$insertAtLocation:string: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c620 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c640 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c660 (    0x20) objc_msgSend$isDefault [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c680 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c6a0 (    0x20) objc_msgSend$isFirstParty [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c6c0 (    0x20) objc_msgSend$isPersonalVoice [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c6e0 (    0x20) objc_msgSend$isSpeaking [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c700 (    0x20) objc_msgSend$killChannel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c720 (    0x20) objc_msgSend$language [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c740 (    0x20) objc_msgSend$languageNameAndLocaleInCurrentLocale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c760 (    0x20) objc_msgSend$languageToCharacterRangesCache [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c780 (    0x20) objc_msgSend$lastNonCommandCharacterIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c7a0 (    0x20) objc_msgSend$lastObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c7c0 (    0x20) objc_msgSend$legacyIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c7e0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c800 (    0x20) objc_msgSend$localeIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c820 (    0x20) objc_msgSend$localeNameCache [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c840 (    0x20) objc_msgSend$localeUtilities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c860 (    0x20) objc_msgSend$localeWithLocaleIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c880 (    0x20) objc_msgSend$localizedName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c8a0 (    0x20) objc_msgSend$localizedNameWithFootprint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c8c0 (    0x20) objc_msgSend$localizedStandardCompare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c8e0 (    0x20) objc_msgSend$lowercaseString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c900 (    0x20) objc_msgSend$manufacturerName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c920 (    0x20) objc_msgSend$markType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c940 (    0x20) objc_msgSend$matchesInString:options:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c960 (    0x20) objc_msgSend$migrationUtils [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c980 (    0x20) objc_msgSend$milliseconds [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c9a0 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c9c0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057c9e0 (    0x20) objc_msgSend$nameForLocale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ca00 (    0x20) objc_msgSend$nameForVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ca20 (    0x20) objc_msgSend$newChannel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ca40 (    0x20) objc_msgSend$nextChannelIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ca60 (    0x20) objc_msgSend$numberFromString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ca80 (    0x20) objc_msgSend$numberLiteralMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057caa0 (    0x20) objc_msgSend$numberValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cac0 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cae0 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cb00 (    0x20) objc_msgSend$numberWithFloat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cb20 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cb40 (    0x20) objc_msgSend$numberWithLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cb60 (    0x20) objc_msgSend$numberWithShort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cb80 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cba0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cbc0 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cbe0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cc00 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cc20 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cc40 (    0x20) objc_msgSend$originalRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cc60 (    0x20) objc_msgSend$originalString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cc80 (    0x20) objc_msgSend$outputUrl [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cca0 (    0x20) objc_msgSend$parse [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ccc0 (    0x20) objc_msgSend$pathExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cce0 (    0x20) objc_msgSend$pause: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cd00 (    0x20) objc_msgSend$pauseSpeakingRequest:atNextBoundary:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cd20 (    0x20) objc_msgSend$pendingStopBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cd40 (    0x20) objc_msgSend$performForChannel:block: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cd60 (    0x20) objc_msgSend$personalVoiceAuthorizationStatus [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cd80 (    0x20) objc_msgSend$phonemeSubstitutions [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cda0 (    0x20) objc_msgSend$pitch [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cdc0 (    0x20) objc_msgSend$pitchBase [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cde0 (    0x20) objc_msgSend$pitchMod [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ce00 (    0x20) objc_msgSend$pitchModulation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ce20 (    0x20) objc_msgSend$plaintalkString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ce40 (    0x20) objc_msgSend$preferredLanguages [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ce60 (    0x20) objc_msgSend$preferredLocalizationsFromArray:forPreferences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ce80 (    0x20) objc_msgSend$processInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cea0 (    0x20) objc_msgSend$processIsVo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cec0 (    0x20) objc_msgSend$processName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cee0 (    0x20) objc_msgSend$product [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cf00 (    0x20) objc_msgSend$prosodicState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cf20 (    0x20) objc_msgSend$punctuationCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cf40 (    0x20) objc_msgSend$range [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cf60 (    0x20) objc_msgSend$rangeWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cf80 (    0x20) objc_msgSend$rate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cfa0 (    0x20) objc_msgSend$refCon [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cfc0 (    0x20) objc_msgSend$regexForString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057cfe0 (    0x20) objc_msgSend$regexForString:atStart: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d000 (    0x20) objc_msgSend$remoteObjectProxy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d020 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d040 (    0x20) objc_msgSend$removeObserver:name:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d060 (    0x20) objc_msgSend$reset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d080 (    0x20) objc_msgSend$resourceManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d0a0 (    0x20) objc_msgSend$resourceWithVoiceId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d0c0 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d0e0 (    0x20) objc_msgSend$sampleStringForVoiceIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d100 (    0x20) objc_msgSend$scanHexInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d120 (    0x20) objc_msgSend$scanInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d140 (    0x20) objc_msgSend$scannerWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d160 (    0x20) objc_msgSend$set [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d180 (    0x20) objc_msgSend$setAudioBufferCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d1a0 (    0x20) objc_msgSend$setAudioDeviceId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d1c0 (    0x20) objc_msgSend$setAudioFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d1e0 (    0x20) objc_msgSend$setCache: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d200 (    0x20) objc_msgSend$setCachedVoices: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d220 (    0x20) objc_msgSend$setCfWordCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d240 (    0x20) objc_msgSend$setChannelState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d260 (    0x20) objc_msgSend$setCharacterLiteralMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d280 (    0x20) objc_msgSend$setContextSkipStart: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d2a0 (    0x20) objc_msgSend$setContextSkipperState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d2c0 (    0x20) objc_msgSend$setCurrentIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d2e0 (    0x20) objc_msgSend$setCurrentProsodicState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d300 (    0x20) objc_msgSend$setCurrentRequest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d320 (    0x20) objc_msgSend$setCurrentSpeechString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d340 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d360 (    0x20) objc_msgSend$setDelegateTargetQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d380 (    0x20) objc_msgSend$setDisambiguationMap: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d3a0 (    0x20) objc_msgSend$setErrorCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d3c0 (    0x20) objc_msgSend$setFirstNonCommandCharacterIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d3e0 (    0x20) objc_msgSend$setInvalidationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d400 (    0x20) objc_msgSend$setLastNonCommandCharacterIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d420 (    0x20) objc_msgSend$setLocaleNameCache: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d440 (    0x20) objc_msgSend$setNumberLiteralMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d460 (    0x20) objc_msgSend$setNumberStyle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d480 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d4a0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d4c0 (    0x20) objc_msgSend$setOriginalString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d4e0 (    0x20) objc_msgSend$setOutputUrl: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d500 (    0x20) objc_msgSend$setPendingStopBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d520 (    0x20) objc_msgSend$setPhonemeCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d540 (    0x20) objc_msgSend$setPhonemeSubstitutions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d560 (    0x20) objc_msgSend$setPhonemes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d580 (    0x20) objc_msgSend$setPitch: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d5a0 (    0x20) objc_msgSend$setPitchBase: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d5c0 (    0x20) objc_msgSend$setPitchMod: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d5e0 (    0x20) objc_msgSend$setPitchModulation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d600 (    0x20) objc_msgSend$setRate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d620 (    0x20) objc_msgSend$setRefCon: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d640 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d660 (    0x20) objc_msgSend$setSpeechDoneCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d680 (    0x20) objc_msgSend$setSpeechSource: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d6a0 (    0x20) objc_msgSend$setSupportsAccurateWordCallbacks: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d6c0 (    0x20) objc_msgSend$setSyncCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d6e0 (    0x20) objc_msgSend$setSynthesizeSilently: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d700 (    0x20) objc_msgSend$setSynthesizer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d720 (    0x20) objc_msgSend$setSynthesizerShouldReset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d740 (    0x20) objc_msgSend$setTextLiteralMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d760 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d780 (    0x20) objc_msgSend$setVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d7a0 (    0x20) objc_msgSend$setVoiceIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d7c0 (    0x20) objc_msgSend$setVolume: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d7e0 (    0x20) objc_msgSend$setWordCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d800 (    0x20) objc_msgSend$sharedInstance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d820 (    0x20) objc_msgSend$sharedManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d840 (    0x20) objc_msgSend$sortDescriptorWithKey:ascending: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d860 (    0x20) objc_msgSend$sortedArrayUsingComparator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d880 (    0x20) objc_msgSend$sortedArrayUsingDescriptors: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d8a0 (    0x20) objc_msgSend$sortedArrayUsingFunction:context: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d8c0 (    0x20) objc_msgSend$speak: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d8e0 (    0x20) objc_msgSend$specForTTSVoice: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d900 (    0x20) objc_msgSend$specificLanguageID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d920 (    0x20) objc_msgSend$speechActive [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d940 (    0x20) objc_msgSend$speechBusy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d960 (    0x20) objc_msgSend$speechChannelMap [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d980 (    0x20) objc_msgSend$speechDoneCallback [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d9a0 (    0x20) objc_msgSend$speechFinished [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d9c0 (    0x20) objc_msgSend$speechMarkupStringForType:forIdentifier:string: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057d9e0 (    0x20) objc_msgSend$speechPaused [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057da00 (    0x20) objc_msgSend$speechSource [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057da20 (    0x20) objc_msgSend$speechSynthesizer:didFinishSpeakingRequest:successfully:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057da40 (    0x20) objc_msgSend$speechVoiceIdentifierForLanguage:sourceKey:exists: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057da60 (    0x20) objc_msgSend$startSpeakingSelectionWithFallback:completionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057da80 (    0x20) objc_msgSend$startSpeakingString:withLanguageCode:request:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057daa0 (    0x20) objc_msgSend$stop: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dac0 (    0x20) objc_msgSend$stopSpeakingAtNextBoundary:synchronously:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dae0 (    0x20) objc_msgSend$stopSpeakingRequest:atNextBoundary:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057db00 (    0x20) objc_msgSend$stopSpeakingSelectionWithCompletionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057db20 (    0x20) objc_msgSend$streamDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057db40 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057db60 (    0x20) objc_msgSend$stringByPaddingToLength:withString:startingAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057db80 (    0x20) objc_msgSend$stringByReplacingCharactersInRange:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dba0 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dbc0 (    0x20) objc_msgSend$stringByTrimmingCharactersInSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dbe0 (    0x20) objc_msgSend$stringKeyForVoiceSpec: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dc00 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dc20 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dc40 (    0x20) objc_msgSend$substitutionsForMap: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dc60 (    0x20) objc_msgSend$substringFromIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dc80 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dca0 (    0x20) objc_msgSend$supportsPhatics [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dcc0 (    0x20) objc_msgSend$syncCallback [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dce0 (    0x20) objc_msgSend$synthesisProviderVoice [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dd00 (    0x20) objc_msgSend$synthesizer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dd20 (    0x20) objc_msgSend$synthesizerShouldReset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dd40 (    0x20) objc_msgSend$tail [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dd60 (    0x20) objc_msgSend$terminate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dd80 (    0x20) objc_msgSend$textLiteralMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dda0 (    0x20) objc_msgSend$transformRange:to: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057ddc0 (    0x20) objc_msgSend$transformedString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dde0 (    0x20) objc_msgSend$translateRangeInTransformedString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057de00 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057de20 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057de40 (    0x20) objc_msgSend$voice [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057de60 (    0x20) objc_msgSend$voiceAccessQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057de80 (    0x20) objc_msgSend$voiceDefaults [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dea0 (    0x20) objc_msgSend$voiceForIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dec0 (    0x20) objc_msgSend$voiceForLocale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dee0 (    0x20) objc_msgSend$voiceForLocale:allowedIdentifiers: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057df00 (    0x20) objc_msgSend$voiceForSpec: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057df20 (    0x20) objc_msgSend$voiceType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057df40 (    0x20) objc_msgSend$voicesBySpec [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057df60 (    0x20) objc_msgSend$volume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057df80 (    0x20) objc_msgSend$waitUntilDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dfa0 (    0x20) objc_msgSend$whitespaceCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dfc0 (    0x20) objc_msgSend$wordCallback [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000019057dfe0 (    0x20) objc_msgSend$wordRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001dbd412e8 (  0x2c30) __DATA_CONST SEGMENT
            0x00000001dbd412e8 (   0x108) __DATA_CONST __got
            0x00000001dbd413f0 (   0x698) __DATA_CONST __const
                0x00000001dbd413f0 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41410 (    0x20) __block_descriptor_40_e25_s16?0"BFSpeechChannel"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41430 (    0x20) __block_descriptor_36_e25_s16?0"BFSpeechChannel"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41450 (    0x20) __block_descriptor_32_e25_s16?0"BFSpeechChannel"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41470 (    0x20) __block_descriptor_44_e25_s16?0"BFSpeechChannel"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41490 (    0x20) __block_descriptor_48_e25_s16?0"BFSpeechChannel"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd414b0 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dbd414d0 (    0x38) __block_descriptor_tmp.5 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41508 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dbd41528 (    0x40) __block_descriptor_tmp.6 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41568 (    0x20) __block_descriptor_tmp.20 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41588 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dbd415a8 (    0x20) kPlainTalkCommandRegex [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd415c8 (    0x50) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41618 (    0x20) __block_descriptor_34_e31_B32?0"TTSSpeechVoice"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41638 (    0x50) __block_descriptor_32_e43_q24?0"TTSSpeechVoice"8"TTSSpeechVoice"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41688 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dbd416a8 (    0x20) __block_descriptor_tmp.35 [NameNList, MangledNameNList, NList] 
                0x00000001dbd416c8 (    0x20) __block_descriptor_tmp.39 [NameNList, MangledNameNList, NList] 
                0x00000001dbd416e8 (    0x20) __block_descriptor_tmp.41 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41708 (    0x20) __block_descriptor_tmp.43 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41728 (    0x20) __block_descriptor_tmp.44 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41748 (    0x20) __block_descriptor_tmp.45 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41768 (    0x20) __block_descriptor_tmp.53 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41788 (    0x20) __block_descriptor_tmp.55 [NameNList, MangledNameNList, NList] 
                0x00000001dbd417a8 (    0x20) __block_descriptor_tmp.63 [NameNList, MangledNameNList, NList] 
                0x00000001dbd417c8 (    0x20) __block_descriptor_tmp.71 [NameNList, MangledNameNList, NList] 
                0x00000001dbd417e8 (    0x20) __block_descriptor_tmp.72 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41808 (    0x20) __block_descriptor_tmp.74 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41828 (    0x20) __block_descriptor_tmp.78 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41848 (    0x20) __block_descriptor_tmp.80 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41868 (    0x20) __block_descriptor_tmp.86 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41888 (    0x20) __block_descriptor_tmp.98 [NameNList, MangledNameNList, NList] 
                0x00000001dbd418a8 (    0x20) __block_descriptor_tmp.99 [NameNList, MangledNameNList, NList] 
                0x00000001dbd418c8 (    0x20) __block_descriptor_tmp.100 [NameNList, MangledNameNList, NList] 
                0x00000001dbd418e8 (    0x20) __block_descriptor_tmp.108 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41908 (    0x20) __block_descriptor_tmp.140 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41928 (    0x20) __block_descriptor_tmp.141 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41948 (    0x20) __block_descriptor_tmp.156 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41968 (    0x20) __block_descriptor_tmp.157 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41988 (    0x20) __block_descriptor_tmp.158 [NameNList, MangledNameNList, NList] 
                0x00000001dbd419a8 (    0x20) __block_descriptor_tmp.159 [NameNList, MangledNameNList, NList] 
                0x00000001dbd419c8 (    0x20) __block_descriptor_tmp.164 [NameNList, MangledNameNList, NList] 
                0x00000001dbd419e8 (    0x20) __block_descriptor_tmp.165 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41a08 (    0x20) __block_descriptor_tmp.178 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41a28 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dbd41a48 (    0x20) __block_descriptor_tmp.56 [NameNList, MangledNameNList, NList] 
                0x00000001dbd41a68 (    0x20) __block_descriptor_tmp.65 [NameNList, MangledNameNList, NList] 
            0x00000001dbd41a88 (    0x60) __DATA_CONST __objc_classlist
            0x00000001dbd41ae8 (     0x8) __DATA_CONST __objc_catlist
            0x00000001dbd41af0 (    0x28) __DATA_CONST __objc_protolist
                0x00000001dbd41af0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SpeechSynthesisServerXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41af8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41b00 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41b08 (     0x8) _OBJC_LABEL_PROTOCOL_$_TTSSpeechSynthesizerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd41b10 (     0x8) _OBJC_LABEL_PROTOCOL_$_TTSAXResourceManagerObserver [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001dbd41b18 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001dbd41b20 (  0x1808) __DATA_CONST __objc_const
                0x00000001dbd41b20 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SpeechSynthesisServerXPCProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dbd41b70 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_SpeechSynthesisServerXPCProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dbd41b88 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x00000001dbd41ba0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x00000001dbd41bc8 (    0x18) _OBJC_$_PROP_LIST_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x00000001dbd41be0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x00000001dbd41c08 (    0x18) _OBJC_$_PROP_LIST_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x00000001dbd41c20 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001dbd41c40 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001dbd41c48 (    0x18) _OBJC_CLASS_PROTOCOLS_$_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x00000001dbd41c60 (    0x48) _OBJC_METACLASS_RO_$_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x00000001dbd41ca8 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x00000001dbd41d70 (    0x68) _OBJC_$_PROP_LIST_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x00000001dbd41dd8 (    0x48) _OBJC_METACLASS_RO_$_BFSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41e20 (    0x28) _OBJC_$_INSTANCE_VARIABLES_BFSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41e48 (    0x18) _OBJC_$_PROP_LIST_BFSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41e60 (    0x48) _OBJC_METACLASS_RO_$_BFPauseSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41ea8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_BFPauseSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41ed0 (    0x18) _OBJC_$_PROP_LIST_BFPauseSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41ee8 (    0x48) _OBJC_METACLASS_RO_$_BFSyncSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41f30 (    0x28) _OBJC_$_INSTANCE_VARIABLES_BFSyncSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41f58 (    0x18) _OBJC_$_PROP_LIST_BFSyncSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41f70 (    0x48) _OBJC_METACLASS_RO_$_BFIsoProsodicTextSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd41fb8 (    0x68) _OBJC_$_INSTANCE_VARIABLES_BFIsoProsodicTextSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd42020 (    0x38) _OBJC_$_PROP_LIST_BFIsoProsodicTextSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd42058 (    0x48) _OBJC_METACLASS_RO_$_BFSkipSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd420a0 (    0x48) _OBJC_CLASS_RO_$_BFSkipSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd420e8 (    0x48) _OBJC_METACLASS_RO_$_BFPlaintalkParser [NameNList, MangledNameNList, NList] 
                0x00000001dbd42130 (   0x128) _OBJC_$_INSTANCE_VARIABLES_BFPlaintalkParser [NameNList, MangledNameNList, NList] 
                0x00000001dbd42258 (    0x98) _OBJC_$_PROP_LIST_BFPlaintalkParser [NameNList, MangledNameNList, NList] 
                0x00000001dbd422f0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd424c0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd424e0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd42528 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd425c8 (    0x18) _OBJC_$_PROTOCOL_REFS_TTSSpeechSynthesizerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dbd425e0 (    0xb0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_TTSSpeechSynthesizerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dbd42690 (    0x38) _OBJC_$_PROTOCOL_METHOD_TYPES_TTSSpeechSynthesizerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dbd426c8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x00000001dbd426e0 (    0x48) _OBJC_METACLASS_RO_$_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x00000001dbd42728 (   0x408) _OBJC_$_INSTANCE_VARIABLES_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x00000001dbd42b30 (   0x258) _OBJC_$_PROP_LIST_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x00000001dbd42d88 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd42f58 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd42f78 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd42fc0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dbd43060 (    0x18) _OBJC_$_PROTOCOL_REFS_TTSAXResourceManagerObserver [NameNList, MangledNameNList, NList] 
                0x00000001dbd43078 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_TTSAXResourceManagerObserver [NameNList, MangledNameNList, NList] 
                0x00000001dbd430e0 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_TTSAXResourceManagerObserver [NameNList, MangledNameNList, NList] 
                0x00000001dbd43100 (    0x18) _OBJC_CLASS_PROTOCOLS_$_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001dbd43118 (   0x108) _OBJC_$_INSTANCE_VARIABLES_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001dbd43220 (    0xc8) _OBJC_$_PROP_LIST_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001dbd432e8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_BFConversionUtils [NameNList, MangledNameNList, NList] 
                0x00000001dbd43310 (    0x18) _OBJC_$_PROP_LIST_BFConversionUtils [NameNList, MangledNameNList, NList] 
            0x00000001dbd43328 (   0xbf0) __DATA_CONST __objc_selrefs
        0x00000001dbd43f18 (  0x32f8) __AUTH_CONST SEGMENT
            0x00000001dbd43f18 (  0x1bc0) __AUTH_CONST __cfstring
            0x00000001dbd45ad8 (   0x940) __AUTH_CONST __const
                0x00000001dbd45ad8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45af8 (    0x20) __block_literal_global.17 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45b18 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45b38 (    0x20) __block_literal_global.7 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45b58 (    0x30) __block_descriptor_tmp.2 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45b88 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45ba8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45bc8 (    0x20) __block_literal_global.2 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45be8 (    0x20) __block_literal_global.4 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45c08 (    0x30) __block_descriptor_40_e8_32b_e8_v12?0B8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45c38 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45c58 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45c78 (    0x20) __block_literal_global.11 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45c98 (    0x20) __block_literal_global.13 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45cb8 (    0x20) __block_literal_global.15 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45cd8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45cf8 (    0x30) __block_descriptor_40_ea8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45d28 (    0x30) __block_descriptor_40_ea8_32s_e33_v32?0{_NSRange=QQ}8"NSString"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45d58 (    0x30) __block_descriptor_40_ea8_32r_e37_v32?0"NSTextCheckingResult"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45d88 (    0x30) __block_descriptor_40_ea8_32w_e23_v16?0"AVAudioBuffer"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45db8 (    0x30) __block_descriptor_48_ea8_32s40w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45de8 (    0x30) __block_descriptor_40_ea8_32w_e44_v20?0I8r^{AudioObjectPropertyAddress=III}12l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45e18 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45e38 (    0x30) __block_descriptor_40_ea8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45e68 (    0x30) __block_descriptor_48_ea8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45e98 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd45eb8 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45ee8 (    0x30) __block_descriptor_48_e8_32s40r_e29_v40?0r^v8{_NSRange=QQ}16^B32l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45f18 (    0x30) __block_descriptor_56_e8_32s40s48r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45f48 (    0x30) __block_descriptor_40_e8_32s_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45f78 (    0x30) __block_descriptor_48_e8_32s40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45fa8 (    0x20) __block_literal_global.275 [NameNList, MangledNameNList, NList] 
                0x00000001dbd45fc8 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbd45ff8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd46018 (    0x30) __block_descriptor_tmp.46 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46048 (    0x30) __block_descriptor_tmp.49 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46078 (    0x30) __block_descriptor_tmp.52 [NameNList, MangledNameNList, NList] 
                0x00000001dbd460a8 (    0x30) __block_descriptor_tmp.58 [NameNList, MangledNameNList, NList] 
                0x00000001dbd460d8 (    0x30) __block_descriptor_tmp.61 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46108 (    0x30) __block_descriptor_tmp.66 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46138 (    0x30) __block_descriptor_tmp.67 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46168 (    0x30) __block_descriptor_tmp.69 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46198 (    0x30) __block_descriptor_tmp.70 [NameNList, MangledNameNList, NList] 
                0x00000001dbd461c8 (    0x30) __block_descriptor_tmp.77 [NameNList, MangledNameNList, NList] 
                0x00000001dbd461f8 (    0x30) __block_descriptor_tmp.83 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46228 (    0x30) __block_descriptor_tmp.84 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46258 (    0x30) __block_descriptor_tmp.96 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46288 (    0x30) __block_descriptor_tmp.106 [NameNList, MangledNameNList, NList] 
                0x00000001dbd462b8 (    0x30) __block_descriptor_tmp.151 [NameNList, MangledNameNList, NList] 
                0x00000001dbd462e8 (    0x30) __block_descriptor_tmp.154 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46318 (    0x30) __block_descriptor_tmp.162 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46348 (    0x30) __block_descriptor_tmp.172 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46378 (    0x20) __block_literal_global.180 [NameNList, MangledNameNList, NList] 
                0x00000001dbd46398 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dbd463b8 (    0x20) __block_literal_global.58 [NameNList, MangledNameNList, NList] 
                0x00000001dbd463d8 (    0x20) __block_literal_global.67 [NameNList, MangledNameNList, NList] 
                0x00000001dbd463f8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
            0x00000001dbd46418 (    0x60) __AUTH_CONST __objc_intobj
            0x00000001dbd46478 (   0x478) __AUTH_CONST __objc_const
                0x00000001dbd46478 (    0x48) _OBJC_METACLASS_RO_$_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x00000001dbd464c0 (    0x48) _OBJC_CLASS_RO_$_SpeechSynthesisApps [NameNList, MangledNameNList, NList] 
                0x00000001dbd46508 (    0x40) _OBJC_$_CATEGORY_NSString_$_BFUtilities [NameNList, MangledNameNList, NList] 
                0x00000001dbd46548 (    0x48) _OBJC_METACLASS_RO_$_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x00000001dbd46590 (    0x48) _OBJC_CLASS_RO_$_BFRegexCache [NameNList, MangledNameNList, NList] 
                0x00000001dbd465d8 (    0x48) _OBJC_CLASS_RO_$_BFProsodicState [NameNList, MangledNameNList, NList] 
                0x00000001dbd46620 (    0x48) _OBJC_CLASS_RO_$_BFSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd46668 (    0x48) _OBJC_CLASS_RO_$_BFPauseSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd466b0 (    0x48) _OBJC_CLASS_RO_$_BFSyncSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd466f8 (    0x48) _OBJC_CLASS_RO_$_BFIsoProsodicTextSpeechElement [NameNList, MangledNameNList, NList] 
                0x00000001dbd46740 (    0x48) _OBJC_CLASS_RO_$_BFPlaintalkParser [NameNList, MangledNameNList, NList] 
                0x00000001dbd46788 (    0x48) _OBJC_CLASS_RO_$_BFSpeechChannel [NameNList, MangledNameNList, NList] 
                0x00000001dbd467d0 (    0x48) _OBJC_METACLASS_RO_$_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001dbd46818 (    0x48) _OBJC_CLASS_RO_$_BabelFish [NameNList, MangledNameNList, NList] 
                0x00000001dbd46860 (    0x48) _OBJC_METACLASS_RO_$_BFConversionUtils [NameNList, MangledNameNList, NList] 
                0x00000001dbd468a8 (    0x48) _OBJC_CLASS_RO_$_BFConversionUtils [NameNList, MangledNameNList, NList] 
            0x00000001dbd468f0 (    0x10) __AUTH_CONST __objc_doubleobj
            0x00000001dbd46900 (    0x40) __AUTH_CONST __objc_floatobj
            0x00000001dbd46940 (   0x8d0) __AUTH_CONST __auth_got
        0x00000001d736e820 (   0x3c0) __AUTH SEGMENT
            0x00000001d736e820 (   0x3c0) __AUTH __objc_data
                0x00000001d736e820 (    0x28) OBJC_CLASS_$_SpeechSynthesisApps [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e848 (    0x28) OBJC_METACLASS_$_SpeechSynthesisApps [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e870 (    0x28) OBJC_CLASS_$_BFRegexCache [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e898 (    0x28) OBJC_METACLASS_$_BFRegexCache [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e8c0 (    0x28) OBJC_CLASS_$_BFProsodicState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e8e8 (    0x28) OBJC_METACLASS_$_BFProsodicState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e910 (    0x28) OBJC_CLASS_$_BFSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e938 (    0x28) OBJC_METACLASS_$_BFSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e960 (    0x28) OBJC_CLASS_$_BFPauseSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e988 (    0x28) OBJC_METACLASS_$_BFPauseSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e9b0 (    0x28) OBJC_CLASS_$_BFSyncSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736e9d8 (    0x28) OBJC_METACLASS_$_BFSyncSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736ea00 (    0x28) OBJC_CLASS_$_BFIsoProsodicTextSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736ea28 (    0x28) OBJC_METACLASS_$_BFIsoProsodicTextSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736ea50 (    0x28) OBJC_METACLASS_$_BFSkipSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736ea78 (    0x28) OBJC_CLASS_$_BFSkipSpeechElement [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eaa0 (    0x28) OBJC_CLASS_$_BFPlaintalkParser [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eac8 (    0x28) OBJC_METACLASS_$_BFPlaintalkParser [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eaf0 (    0x28) OBJC_CLASS_$_BFSpeechChannel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eb18 (    0x28) OBJC_METACLASS_$_BFSpeechChannel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eb40 (    0x28) OBJC_CLASS_$_BabelFish [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eb68 (    0x28) OBJC_METACLASS_$_BabelFish [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736eb90 (    0x28) OBJC_CLASS_$_BFConversionUtils [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d736ebb8 (    0x28) OBJC_METACLASS_$_BFConversionUtils [EXT, NameNList, MangledNameNList, NList] 
        0x00000001d5dc8778 (   0xdf8) __DATA SEGMENT
            0x00000001d5dc8778 (     0x8) __DATA __objc_protorefs
                0x00000001d5dc8778 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_SpeechSynthesisServerXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5dc8780 (   0x120) __DATA __objc_classrefs
            0x00000001d5dc88a0 (    0x50) __DATA __objc_superrefs
            0x00000001d5dc88f0 (   0x100) __DATA __objc_ivar
                0x00000001d5dc88f0 (     0x4) OBJC_IVAR_$_SpeechSynthesisApps._connectionToService [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc88f4 (     0x4) OBJC_IVAR_$_BFRegexCache._cache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc88f8 (     0x4) OBJC_IVAR_$_BFProsodicState._textLiteralMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc88fc (     0x4) OBJC_IVAR_$_BFProsodicState._numberLiteralMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8900 (     0x4) OBJC_IVAR_$_BFProsodicState._rate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8904 (     0x4) OBJC_IVAR_$_BFProsodicState._pitchModulation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8908 (     0x4) OBJC_IVAR_$_BFProsodicState._pitchBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc890c (     0x4) OBJC_IVAR_$_BFProsodicState._volume [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8910 (     0x4) OBJC_IVAR_$_BFSpeechElement._originalRange [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8914 (     0x4) OBJC_IVAR_$_BFPauseSpeechElement._milliseconds [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8918 (     0x4) OBJC_IVAR_$_BFSyncSpeechElement._name [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc891c (     0x4) OBJC_IVAR_$_BFIsoProsodicTextSpeechElement._mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8920 (     0x4) OBJC_IVAR_$_BFIsoProsodicTextSpeechElement._prosodicState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8924 (     0x4) OBJC_IVAR_$_BFIsoProsodicTextSpeechElement._text [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8928 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._firstNonCommandCharacterIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc892c (     0x4) OBJC_IVAR_$_BFPlaintalkParser._lastNonCommandCharacterIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8930 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._plaintalkString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8934 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._currentIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8938 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._contextSkipperState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc893c (     0x4) OBJC_IVAR_$_BFPlaintalkParser._contextSkipStart [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8940 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._product [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8944 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._initialProsodicState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8948 (     0x4) OBJC_IVAR_$_BFPlaintalkParser._currentProsodicState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc894c (     0x4) OBJC_IVAR_$_BFSpeechChannel._numberLiteralMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8950 (     0x4) OBJC_IVAR_$_BFSpeechChannel._characterLiteralMode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8954 (     0x4) OBJC_IVAR_$_BFSpeechChannel._speechActive [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8958 (     0x4) OBJC_IVAR_$_BFSpeechChannel._speechPaused [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc895c (     0x4) OBJC_IVAR_$_BFSpeechChannel._synthesizerShouldReset [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8960 (     0x4) OBJC_IVAR_$_BFSpeechChannel._processIsVo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8964 (     0x4) OBJC_IVAR_$_BFSpeechChannel._audioDeviceId [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8968 (     0x4) OBJC_IVAR_$_BFSpeechChannel._legacyIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc896c (     0x4) OBJC_IVAR_$_BFSpeechChannel._voice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8970 (     0x4) OBJC_IVAR_$_BFSpeechChannel._rate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8974 (     0x4) OBJC_IVAR_$_BFSpeechChannel._pitch [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8978 (     0x4) OBJC_IVAR_$_BFSpeechChannel._volume [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc897c (     0x4) OBJC_IVAR_$_BFSpeechChannel._pitchMod [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8980 (     0x4) OBJC_IVAR_$_BFSpeechChannel._phonemeSubstitutions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8984 (     0x4) OBJC_IVAR_$_BFSpeechChannel._outputUrl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8988 (     0x4) OBJC_IVAR_$_BFSpeechChannel._audioFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc898c (     0x4) OBJC_IVAR_$_BFSpeechChannel._refCon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8990 (     0x4) OBJC_IVAR_$_BFSpeechChannel._speechSource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8994 (     0x4) OBJC_IVAR_$_BFSpeechChannel._cfWordCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8998 (     0x4) OBJC_IVAR_$_BFSpeechChannel._wordCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc899c (     0x4) OBJC_IVAR_$_BFSpeechChannel._syncCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89a0 (     0x4) OBJC_IVAR_$_BFSpeechChannel._errorCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89a4 (     0x4) OBJC_IVAR_$_BFSpeechChannel._phonemeCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89a8 (     0x4) OBJC_IVAR_$_BFSpeechChannel._speechDoneCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89ac (     0x4) OBJC_IVAR_$_BFSpeechChannel._synthesizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89b0 (     0x4) OBJC_IVAR_$_BFSpeechChannel._channelOperationQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89b4 (     0x4) OBJC_IVAR_$_BFSpeechChannel._callbackQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89b8 (     0x4) OBJC_IVAR_$_BFSpeechChannel._currentRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89bc (     0x4) OBJC_IVAR_$_BFSpeechChannel._currentSpeechString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89c0 (     0x4) OBJC_IVAR_$_BFSpeechChannel._channelState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89c4 (     0x4) OBJC_IVAR_$_BFSpeechChannel._pendingStopBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89c8 (     0x4) OBJC_IVAR_$_BFSpeechChannel._speechFinished [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89cc (     0x4) OBJC_IVAR_$_BabelFish._speechChannelMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89d0 (     0x4) OBJC_IVAR_$_BabelFish._siriLegacyToTTSMappings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89d4 (     0x4) OBJC_IVAR_$_BabelFish._languageToCharacterRangesCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89d8 (     0x4) OBJC_IVAR_$_BabelFish._cachedVoices [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89dc (     0x4) OBJC_IVAR_$_BabelFish._voicesBySpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89e0 (     0x4) OBJC_IVAR_$_BabelFish._localeNameCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89e4 (     0x4) OBJC_IVAR_$_BabelFish._disambiguationMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89e8 (     0x4) OBJC_IVAR_$_BabelFish._voiceAccessQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc89ec (     0x4) OBJC_IVAR_$_BFConversionUtils._voiceDefaults [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5dc89f0 (   0x6dc) __DATA __data
                0x00000001d5dc89f0 (     0x8) sInit [NameNList, MangledNameNList, NList] 
                0x00000001d5dc89f8 (     0x8) sTimebaseInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a00 (     0x8) sInitSpeechGlobals [NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a08 (     0x8) TalkingAlertsEnabled.sInitTalkingAlertsNotification [NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a10 (     0x8) sPrefsNeedSyncing [NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a18 (     0x8) SpeechGlobals::sInstance [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a20 (     0x8) kSpeechVoiceSynthesizerNumericID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a28 (     0x8) kSpeechVoiceNumericID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a30 (     0x8) kSpeechVoiceName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a38 (     0x8) kSpeechVoiceLocalizedNames [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a40 (     0x8) kSpeechVoiceNameRoot [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a48 (     0x8) kSpeechVoiceIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a50 (     0x8) kSpeechVoiceAge [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a58 (     0x8) kSpeechVoiceGender [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a60 (     0x8) kSpeechVoiceDemoText [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a68 (     0x8) kSpeechVoiceLanguage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a70 (     0x8) kSpeechVoiceLocaleIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a78 (     0x8) kSpeechVoiceSupportedCharacters [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a80 (     0x8) kSpeechVoiceIndividuallySpokenCharacters [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a88 (     0x8) kSpeechVoiceVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a90 (     0x8) kSpeechVoiceRelativeDesirability [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8a98 (     0x8) kSpeechVoiceGenderNeuter [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8aa0 (     0x8) kSpeechVoiceGenderNeutral [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8aa8 (     0x8) kSpeechVoiceGenderMale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ab0 (     0x8) kSpeechVoiceGenderFemale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ab8 (     0x8) kSpeechVoiceUnicodeCharBegin [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ac0 (     0x8) kSpeechVoiceUnicodeCharEnd [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ac8 (     0x8) kVoiceConstantRateOnly [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ad0 (     0x8) kVoiceShowInFullListOnly [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ad8 (     0x8) kVoiceSupportedCharacters [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ae0 (     0x8) kVoiceIndividuallySpokenCharacters [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ae8 (     0x8) kSpeechStatusProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8af0 (     0x8) kSpeechErrorsProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8af8 (     0x8) kSpeechInputModeProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b00 (     0x8) kSpeechCharacterModeProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b08 (     0x8) kSpeechNumberModeProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b10 (     0x8) kSpeechRateProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b18 (     0x8) kSpeechPitchBaseProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b20 (     0x8) kSpeechPitchModProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b28 (     0x8) kSpeechVolumeProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b30 (     0x8) kSpeechSynthesizerInfoProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b38 (     0x8) kSpeechRecentSyncProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b40 (     0x8) kSpeechPhonemeSymbolsProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b48 (     0x8) kSpeechCurrentVoiceProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b50 (     0x8) kSpeechCommandDelimiterProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b58 (     0x8) kSpeechResetProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b60 (     0x8) kSpeechOutputToFileURLProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b68 (     0x8) kSpeechOutputToExtAudioFileProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b70 (     0x8) kSpeechOutputToAudioDeviceProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b78 (     0x8) kSpeechOutputToFileDescriptorProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b80 (     0x8) kSpeechAudioOutputFormatProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b88 (     0x8) kSpeechRefConProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b90 (     0x8) kSpeechTextDoneCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8b98 (     0x8) kSpeechSpeechDoneCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ba0 (     0x8) kSpeechSyncCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ba8 (     0x8) kSpeechErrorCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bb0 (     0x8) kSpeechPhonemeCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bb8 (     0x8) kSpeechWordCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bc0 (     0x8) kSpeechErrorCFCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bc8 (     0x8) kSpeechWordCFCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bd0 (     0x8) kSpeechLatencyCallBack [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bd8 (     0x8) kSpeechBlockTemporarilyProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8be0 (     0x8) kSpeechPhonemeOptionsProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8be8 (     0x8) kSpeechAudioUnitProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bf0 (     0x8) kSpeechAudioGraphProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8bf8 (     0x8) kSpeechOfflineModeProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c00 (     0x8) kSpeechAudioDuckingProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c08 (     0x8) kSpeechCustomVoiceProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c10 (     0x8) kSpeechOutputChannelMapProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c18 (     0x8) kSpeechSynthExtensionProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c20 (     0x8) kSpeechDiphoneOptionsProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c28 (     0x8) kSpeechDiphoneLogProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c30 (     0x8) kSpeechDiphoneStatisticsProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c38 (     0x8) kSpeechPreloadVoiceMetadataProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c40 (     0x8) kSpeechPitchCoeffProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c48 (     0x8) kSpeechSourceProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c50 (     0x8) kSpeechModeText [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c58 (     0x8) kSpeechModePhoneme [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c60 (     0x8) kSpeechModeTune [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c68 (     0x8) kSpeechModeNormal [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c70 (     0x8) kSpeechModeLiteral [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c78 (     0x8) kSpeechNoEndingProsody [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c80 (     0x8) kSpeechNoSpeechInterrupt [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c88 (     0x8) kSpeechPreflightThenPause [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c90 (     0x8) kSpeechStatusOutputBusy [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8c98 (     0x8) kSpeechStatusOutputPaused [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ca0 (     0x8) kSpeechStatusNumberOfCharactersLeft [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ca8 (     0x8) kSpeechStatusPhonemeCode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cb0 (     0x8) kSpeechErrorCount [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cb8 (     0x8) kSpeechErrorOldest [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cc0 (     0x8) kSpeechErrorOldestCharacterOffset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cc8 (     0x8) kSpeechErrorNewest [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cd0 (     0x8) kSpeechErrorNewestCharacterOffset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cd8 (     0x8) kSpeechSynthesizerInfoIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ce0 (     0x8) kSpeechSynthesizerInfoManufacturer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ce8 (     0x8) kSpeechSynthesizerInfoVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cf0 (     0x8) kSpeechPhonemeInfoOpcode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8cf8 (     0x8) kSpeechPhonemeInfoSymbol [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d00 (     0x8) kSpeechPhonemeInfoExample [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d08 (     0x8) kSpeechPhonemeInfoHiliteStart [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d10 (     0x8) kSpeechPhonemeInfoHiliteEnd [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d18 (     0x8) kSpeechCommandPrefix [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d20 (     0x8) kSpeechCommandSuffix [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d28 (     0x8) kSpeechVoiceCreator [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d30 (     0x8) kSpeechVoiceID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d38 (     0x8) kSpeechDictionaryLocaleIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d40 (     0x8) kSpeechDictionaryModificationDate [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d48 (     0x8) kSpeechDictionaryPronunciations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d50 (     0x8) kSpeechDictionaryAbbreviations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d58 (     0x8) kSpeechDictionaryEntrySpelling [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d60 (     0x8) kSpeechDictionaryEntryPhonemes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d68 (     0x8) kSpeechErrorCallbackSpokenString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d70 (     0x8) kSpeechErrorCallbackCharacterOffset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d78 (     0x8) kSpeechAudioDuckingValue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d80 (     0x8) kSpeechAudioDuckingFadeIn [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d88 (     0x8) kSpeechAudioDuckingEndPadding [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d90 (     0x8) kSpeechAudioDuckingFadeOut [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8d98 (     0x8) kSpeechVoiceGroup [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8da0 (     0x8) kSpeechVoiceGroupCompact [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8da8 (     0x8) kSpeechVoiceGroupDefault [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8db0 (     0x8) kSpeechVoiceGroupCustom [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8db8 (     0x8) kSpeechVoiceGroupCustomCompact [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8dc0 (    0x60) _OBJC_PROTOCOL_$_SpeechSynthesisServerXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8e20 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8e80 (    0x28) stateNames [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ea8 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8f08 (    0x60) _OBJC_PROTOCOL_$_TTSSpeechSynthesizerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8f68 (    0x60) _OBJC_PROTOCOL_$_TTSAXResourceManagerObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8fc8 (     0x8) kSSDKeyMessage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8fd0 (     0x8) kSSDKeySystemWide [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8fd8 (     0x8) kSSDKeyReply [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8fe0 (     0x8) kSSDKeyError [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8fe8 (     0x8) kSSDKeyVoiceSpec [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ff0 (     0x8) kSSDKeyVoiceID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc8ff8 (     0x8) kSSDKeyVoiceDesc [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9000 (     0x8) kSSDKeyEncoding [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9008 (     0x8) kSSDKeyPath [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9010 (     0x8) kSSDKeyVoiceAttr [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9018 (     0x8) kSSDKeyLocale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9020 (     0x8) kSSDKeyVoiceList [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9028 (     0x8) kSSDKeyMode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9030 (     0x8) kSSDKeyChannel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9038 (     0x8) kSSDKeyText [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9040 (     0x8) kSSDKeyFlags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9048 (     0x8) kSSDKeyTextID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9050 (     0x8) kSSDKeyWhere [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9058 (     0x8) kSSDKeyProperty [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9060 (     0x8) kSSDKeyCallback [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9068 (     0x8) kSSDKeyEnabled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9070 (     0x8) kSSDKeyValue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9078 (     0x8) kSSDKeyOffset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9080 (     0x8) kSSDKeyLength [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9088 (     0x8) kSSDKeySetEnv [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9090 (     0x8) kSSDKeyUnsetEnv [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9098 (     0x8) kSSDKeyAllVoices [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90a0 (     0x8) kSSDKeyTARegProps [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90a8 (     0x8) kSSDKeyTARegID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90b0 (     0x8) kSSDKeyTAEnabled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90b8 (     0x8) kSSDKeyTAAppPID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90c0 (     0x8) kSSDKeyTANotifyType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc90c8 (     0x4) SpeechChannelHandle::PermitAllVoices()::sAllVoices [NameNList, MangledNameNList, NList] 
            0x00000001d5dc90d0 (   0x488) __DATA __bss
                0x00000001d5dc90d0 (     0x8) ShouldRedirectCallsToBabelfish()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc90d8 (     0x8) ShouldRedirectCallsToBabelfish()::_unifiedSpeechEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5dc90e0 (     0x8) sMessagePort [NameNList, MangledNameNList, NList] 
                0x00000001d5dc90e8 (     0x8) sTryLogging [NameNList, MangledNameNList, NList] 
                0x00000001d5dc90f0 (     0x8) sWantNotification [NameNList, MangledNameNList, NList] 
                0x00000001d5dc90f8 (     0x8) sProcessID [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9100 (     0x8) sDefaultVoiceQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9108 (     0x8) sDefaultVoices [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9110 (     0x8) BuildDefaultVoiceList(bool)::sDefaultVoiceQueueOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9118 (   0x320) SSDPoorMansCFStringAutoRelease(__CFString const*)::sPool [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9438 (     0x8) SSDPoorMansCFStringAutoRelease(__CFString const*)::sNextIdx [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9440 (     0x8) sharedManager.sSpeechSynthesisAppsInstance [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9448 (     0x8) sharedManager.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9450 (     0x8) sharedInstance.sSharedInstance [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9458 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9460 (     0x8) -[BFSpeechChannel badStartingCharacterSet]::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9468 (     0x8) -[BFSpeechChannel badStartingCharacterSet]::charSet [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9470 (     0x8) getTTSSpeechSynthesizerClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9478 (     0x8) TextToSpeechLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9480 (     0x8) getTTSSpeechStringClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9488 (     0x8) getAXEmojiUtilitiesClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9490 (     0x8) libAXSpeechManagerLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9498 (     0x8) getgryphon_HasPhaticResponsesSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94a0 (     0x8) SiriTTSLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94a8 (     0x8) sharedInstance.sSharedInstance [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94b0 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94b8 (     0x8) getTTSSpeechSynthesizerClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94c0 (     0x8) TextToSpeechLibraryCore.frameworkLibrary [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94c8 (     0x8) getTTSSubstitutionClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94d0 (     0x8) getAXSpeechSourceKeySpeechFeaturesSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94d8 (     0x8) AccessibilityUtilitiesLibraryCore.frameworkLibrary [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94e0 (     0x8) getAXSettingsClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94e8 (     0x8) getAXLanguageManagerClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94f0 (     0x8) getTTSLocaleUtilitiesClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc94f8 (     0x8) getTTSAXResourceManagerClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9500 (     0x8) getTTSAXResourceMigrationUtilitiesClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9508 (     0x8) SpeechChannelHandle::PrivateChannel()::sPrivateChannel [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9510 (     0x8) SpeechGlobals::MayHaveNonNativeEngines()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9518 (     0x8) _NativeArch()::dispatchOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9520 (     0x8) _NativeArch()::_nativeArch [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9528 (     0x8) TalkingAlertsEnabled.sTalkingAlertIsEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9530 (     0x8) TAMessagingConnnection.sInitTalkingAlerts [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9538 (     0x8) sXPC [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9540 (     0x8) sharedInstance.sSharedInstance [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9548 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5dc9550 (     0x8) sSRConnectionDataPtr [NameNList, MangledNameNList, NList] 
            0x00000001d5dc9558 (    0x18) __DATA __common
                0x00000001d5dc9558 (     0x8) sCachedTimeAnnouncementsDictionary [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9560 (     0x8) gOurCGSConnectionID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5dc9568 (     0x8) gServerConnections [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
