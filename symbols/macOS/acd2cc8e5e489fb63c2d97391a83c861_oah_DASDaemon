Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/DASDaemon.framework/Versions/A/DASDaemon [arm64e, 0.030313 seconds]:
    D5895624-4036-3B03-8B88-E93006B2FC70 /System/Library/PrivateFrameworks/DASDaemon.framework/Versions/A/DASDaemon [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001fa1d6000 (  0xc000) __TEXT SEGMENT
            0x00000001fa1d6000 (  0x1eb4) MACH_HEADER
            0x00000001fa1d7eb4 (  0x71bc) __TEXT __text
                0x00000001fa1d7eb4 (    0x50) -[_DASLogValueInterval isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d7f04 (    0xf8) -[_DASLogValueInterval intervalString] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d7ffc (    0x54) defaultFormatter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8050 (    0xa0) -[_DASLogValueInterval description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d80f0 (    0x98) -[_DASLogValueInterval duration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8188 (    0xcc) -[_DASLogValueInterval durationString] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8254 (     0x8) -[_DASLogValueInterval startDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d825c (     0xc) -[_DASLogValueInterval setStartDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8268 (     0x8) -[_DASLogValueInterval endDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8270 (     0xc) -[_DASLogValueInterval setEndDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d827c (     0x8) -[_DASLogValueInterval value] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8284 (     0xc) -[_DASLogValueInterval setValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8290 (    0x50) -[_DASLogValueInterval .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d82e0 (    0xb0) +[_DASLogEntry logEntryForDate:category:message:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8390 (    0xa8) -[_DASLogEntry description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8438 (     0x8) -[_DASLogEntry date] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8440 (     0xc) -[_DASLogEntry setDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d844c (     0x8) -[_DASLogEntry category] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8454 (     0xc) -[_DASLogEntry setCategory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8460 (     0x8) -[_DASLogEntry message] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8468 (     0xc) -[_DASLogEntry setMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8474 (    0x50) -[_DASLogEntry .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d84c4 (    0x60) +[_DASLogCondition withCondition:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8524 (     0x8) -[_DASLogCondition description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d852c (     0x8) -[_DASLogCondition condition] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8534 (     0xc) -[_DASLogCondition setCondition:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8540 (     0x8) -[_DASLogCondition isIdeal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8548 (     0x8) -[_DASLogCondition setIsIdeal:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8550 (     0xc) -[_DASLogCondition .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d855c (    0x90) -[_DASLogConditionHistory initWithCondition:fromDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d85ec (    0x84) +[_DASLogConditionHistory condition:fromDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8670 (    0xac) -[_DASLogConditionHistory addCondition:atDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d871c (   0x1bc) -[_DASLogConditionHistory idealIntervals] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d88d8 (   0x358) -[_DASLogConditionHistory description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8c30 (    0xf8) __38-[_DASLogConditionHistory description]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d28 (     0x8) -[_DASLogConditionHistory conditions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d30 (     0xc) -[_DASLogConditionHistory setConditions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d3c (     0x8) -[_DASLogConditionHistory intervals] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d44 (     0xc) -[_DASLogConditionHistory setIntervals:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d50 (    0x44) -[_DASLogConditionHistory .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8d94 (    0x60) +[_DASLogExtractor extractorForArchive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8df4 (    0xf0) -[_DASLogExtractor initWithArchive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8ee4 (     0x8) __36-[_DASLogExtractor initWithArchive:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8eec (    0x94) -[_DASLogExtractor getDefaultFilterPredicate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d8f80 (    0xe4) __45-[_DASLogExtractor getDefaultFilterPredicate]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9064 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d906c (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9074 (   0x188) -[_DASLogExtractor handleLogEventsLogEvents:sinceDate:withHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d91fc (   0x2a8) __67-[_DASLogExtractor handleLogEventsLogEvents:sinceDate:withHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d94a4 (    0x84) __67-[_DASLogExtractor handleLogEventsLogEvents:sinceDate:withHandler:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9528 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9538 (    0x58) __67-[_DASLogExtractor handleLogEventsLogEvents:sinceDate:withHandler:]_block_invoke.162 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9590 (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d95d8 (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9618 (    0x68) __copy_helper_block_e8_32s40s48s56b64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9680 (    0x58) __destroy_helper_block_e8_32s40s48s56s64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d96d8 (   0x304) -[_DASLogExtractor getScheduledBlocksOfMessages:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d99dc (   0x294) -[_DASLogExtractor getMessagesBeforeRunning:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9c70 (   0x248) -[_DASLogExtractor getActivityStartBeforeDate:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9eb8 (    0xf0) getSubstring [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1d9fa8 (   0x140) -[_DASLogExtractor didActivityRun:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1da0e8 (   0x240) -[_DASLogExtractor getMessagesAfterRunning:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1da328 (   0x18c) -[_DASLogExtractor didActivityFinish:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1da4b4 (   0x38c) -[_DASLogExtractor summarizeRuntimeOverMessages:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1da840 (   0x134) getIntervalString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1da974 (   0x214) -[_DASLogExtractor getPolicyDenialReasonsFromMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dab88 (   0xab4) -[_DASLogExtractor getpolicyToIntervals:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1db63c (   0x520) -[_DASLogExtractor descriptionOfPolicyToIntervalsMap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dbb5c (   0x4c4) -[_DASLogExtractor getIncompatibilityReasons:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dc020 (   0x24c) -[_DASLogExtractor descriptionOfIncompatibilityDenials:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dc26c (   0x370) -[_DASLogExtractor getInstancesOfHigherThreshold:forActivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dc5dc (   0x22c) -[_DASLogExtractor descriptionOfHigherThresholds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dc808 (   0x46c) -[_DASLogExtractor summarizePolicyDenialsOverMessages:maxDuration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dcc74 (   0x11c) __67-[_DASLogExtractor summarizePolicyDenialsOverMessages:maxDuration:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dcd90 (   0x260) -[_DASLogExtractor summarizeAllDenialsOverMessages:forActivity:detail:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dcff0 (   0x724) -[_DASLogExtractor getSummaryFromLogs:forActivity:detail:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dd714 (    0x58) -[_DASLogExtractor summarizeActivity:startDate:endDate:detail:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dd76c (   0x258) -[_DASLogExtractor copyActivitySummary:startDate:endDate:detail:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dd9c4 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dd9d4 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dd9dc (    0xdc) __71-[_DASLogExtractor copyActivitySummary:startDate:endDate:detail:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1ddab8 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1ddac8 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1ddad4 (   0x540) -[_DASLogExtractor objectForTrigger:fromCondition:compactRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1de014 (   0x3e8) -[_DASLogExtractor addConditionToHistory:fromMessage:atTimestamp:compactRepresentation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1de3fc (    0x28) __88-[_DASLogExtractor addConditionToHistory:fromMessage:atTimestamp:compactRepresentation:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1de424 (   0x814) -[_DASLogExtractor sysConditionsLog:startDate:endDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dec38 (    0x98) __55-[_DASLogExtractor sysConditionsLog:startDate:endDate:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1decd0 (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1ded0c (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1ded48 (   0x13c) __55-[_DASLogExtractor sysConditionsLog:startDate:endDate:]_block_invoke.509 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dee84 (     0x8) -[_DASLogExtractor logStore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dee8c (     0xc) -[_DASLogExtractor setLogStore:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1dee98 (     0x8) -[_DASLogExtractor dateFormatter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deea0 (     0xc) -[_DASLogExtractor setDateFormatter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deeac (     0x8) -[_DASLogExtractor eventStream] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deeb4 (     0xc) -[_DASLogExtractor setEventStream:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deec0 (     0x8) -[_DASLogExtractor subsystem] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deec8 (     0xc) -[_DASLogExtractor setSubsystem:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deed4 (     0x8) -[_DASLogExtractor category] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deedc (     0xc) -[_DASLogExtractor setCategory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1deee8 (    0x68) -[_DASLogExtractor .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1def50 (    0x90) __defaultFormatter_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fa1defe0 (    0x90) __timeOnlyFormatter_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001fa1df070 (   0x190) __TEXT __auth_stubs
                0x00000001fa1df070 (    0x10) DYLD-STUB$$NSLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df080 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df090 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0a0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0b0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0c0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0d0 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0e0 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df0f0 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df100 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df110 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df120 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df130 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df140 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df150 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df160 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df170 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df180 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df190 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1a0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1b0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1c0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1d0 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1e0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fa1df1f0 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001fa1df200 (   0x3e0) __TEXT __objc_methlist
                0x00000001fa1df200 (    0x18) _OBJC_$_CLASS_METHODS__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x00000001fa1df218 (    0x18) _OBJC_$_CLASS_METHODS__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x00000001fa1df230 (    0x18) _OBJC_$_CLASS_METHODS__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x00000001fa1df248 (    0x18) _OBJC_$_CLASS_METHODS__DASLogExtractor [NameNList, MangledNameNList, NList] 
                0x00000001fa1df260 (    0x50) _OBJC_$_INSTANCE_METHODS__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x00000001fa1df2b0 (    0x78) _OBJC_$_INSTANCE_METHODS__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x00000001fa1df328 (    0x68) _OBJC_$_INSTANCE_METHODS__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x00000001fa1df390 (   0x1b8) _OBJC_$_INSTANCE_METHODS__DASLogExtractor [NameNList, MangledNameNList, NList] 
                0x00000001fa1df548 (    0x98) _OBJC_$_INSTANCE_METHODS__DASLogValueInterval [NameNList, MangledNameNList, NList] 
            0x00000001fa1df5e0 (    0x68) __TEXT __const
                0x00000001fa1df5e0 (    0x40) DASDaemonVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1df620 (    0x28) DASDaemonVersionNumber [EXT, NameNList, MangledNameNList, NList] 
            0x00000001fa1df648 (    0x6c) __TEXT __gcc_except_tab
                0x00000001fa1df648 (    0x14) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001fa1df65c (    0x3c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001fa1df698 (    0x1c) GCC_except_table77 [NameNList, MangledNameNList, NList] 
            0x00000001fa1df6b4 (   0x8f5) __TEXT __cstring
            0x00000001fa1dffac (   0x164) __TEXT __unwind_info
            0x00000001fa1e0110 (    0x6b) __TEXT __objc_classname
            0x00000001fa1e017c (   0xda9) __TEXT __objc_methname
            0x00000001fa1e0f25 (   0x179) __TEXT __objc_methtype
            0x00000001fa1e10a0 (   0xf60) __TEXT __objc_stubs
                0x00000001fa1e10a0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e10c0 (    0x20) objc_msgSend$activateStreamFromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e10e0 (    0x20) objc_msgSend$addCondition:atDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1100 (    0x20) objc_msgSend$addConditionToHistory:fromMessage:atTimestamp:compactRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1120 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1140 (    0x20) objc_msgSend$addObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1160 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1180 (    0x20) objc_msgSend$andPredicateWithSubpredicates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e11a0 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e11c0 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e11e0 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1200 (    0x20) objc_msgSend$category [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1220 (    0x20) objc_msgSend$characterSetWithCharactersInString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1240 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1260 (    0x20) objc_msgSend$components:fromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1280 (    0x20) objc_msgSend$componentsSeparatedByCharactersInSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e12a0 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e12c0 (    0x20) objc_msgSend$composedMessage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e12e0 (    0x20) objc_msgSend$condition:fromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1300 (    0x20) objc_msgSend$containsString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1320 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1340 (    0x20) objc_msgSend$copyActivitySummary:startDate:endDate:detail:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1360 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1380 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e13a0 (    0x20) objc_msgSend$currentCalendar [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e13c0 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e13e0 (    0x20) objc_msgSend$dateFromString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1400 (    0x20) objc_msgSend$dateWithTimeInterval:sinceDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1420 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1440 (    0x20) objc_msgSend$descriptionOfHigherThresholds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1460 (    0x20) objc_msgSend$descriptionOfIncompatibilityDenials: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1480 (    0x20) objc_msgSend$descriptionOfPolicyToIntervalsMap: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e14a0 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e14c0 (    0x20) objc_msgSend$dictionaryWithObjectsAndKeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e14e0 (    0x20) objc_msgSend$didActivityFinish:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1500 (    0x20) objc_msgSend$didActivityRun:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1520 (    0x20) objc_msgSend$distantFuture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1540 (    0x20) objc_msgSend$distantPast [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1560 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1580 (    0x20) objc_msgSend$duration [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e15a0 (    0x20) objc_msgSend$durationString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e15c0 (    0x20) objc_msgSend$endDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e15e0 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1600 (    0x20) objc_msgSend$eventStream [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1620 (    0x20) objc_msgSend$filterUsingPredicate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1640 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1660 (    0x20) objc_msgSend$getActivityStartBeforeDate:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1680 (    0x20) objc_msgSend$getDefaultFilterPredicate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e16a0 (    0x20) objc_msgSend$getIncompatibilityReasons:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e16c0 (    0x20) objc_msgSend$getInstancesOfHigherThreshold:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e16e0 (    0x20) objc_msgSend$getMessagesAfterRunning:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1700 (    0x20) objc_msgSend$getMessagesBeforeRunning:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1720 (    0x20) objc_msgSend$getPolicyDenialReasonsFromMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1740 (    0x20) objc_msgSend$getScheduledBlocksOfMessages:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1760 (    0x20) objc_msgSend$getSummaryFromLogs:forActivity:detail: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1780 (    0x20) objc_msgSend$getpolicyToIntervals: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e17a0 (    0x20) objc_msgSend$handleLogEventsLogEvents:sinceDate:withHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e17c0 (    0x20) objc_msgSend$idealIntervals [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e17e0 (    0x20) objc_msgSend$initWithArchive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1800 (    0x20) objc_msgSend$initWithCondition:fromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1820 (    0x20) objc_msgSend$initWithSource: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1840 (    0x20) objc_msgSend$initWithStartDate:endDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1860 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1880 (    0x20) objc_msgSend$intersectionWithDateInterval: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e18a0 (    0x20) objc_msgSend$intervalString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e18c0 (    0x20) objc_msgSend$invalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e18e0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1900 (    0x20) objc_msgSend$isEqualToDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1920 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1940 (    0x20) objc_msgSend$isIdeal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1960 (    0x20) objc_msgSend$lastObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1980 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e19a0 (    0x20) objc_msgSend$localStore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e19c0 (    0x20) objc_msgSend$localTimeZone [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e19e0 (    0x20) objc_msgSend$logEntryForDate:category:message: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1a00 (    0x20) objc_msgSend$message [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1a20 (    0x20) objc_msgSend$minusSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1a40 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1a60 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1a80 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1aa0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ac0 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ae0 (    0x20) objc_msgSend$objectForTrigger:fromCondition:compactRepresentation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1b00 (    0x20) objc_msgSend$predicateWithBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1b20 (    0x20) objc_msgSend$predicateWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1b40 (    0x20) objc_msgSend$prepareWithCompletionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1b60 (    0x20) objc_msgSend$rangeOfString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1b80 (    0x20) objc_msgSend$rangeOfString:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ba0 (    0x20) objc_msgSend$removeObjectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1bc0 (    0x20) objc_msgSend$setCategory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1be0 (    0x20) objc_msgSend$setCondition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1c00 (    0x20) objc_msgSend$setDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1c20 (    0x20) objc_msgSend$setDateFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1c40 (    0x20) objc_msgSend$setDateStyle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1c60 (    0x20) objc_msgSend$setEndDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1c80 (    0x20) objc_msgSend$setEventHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ca0 (    0x20) objc_msgSend$setFilterPredicate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1cc0 (    0x20) objc_msgSend$setFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ce0 (    0x20) objc_msgSend$setInvalidationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1d00 (    0x20) objc_msgSend$setIsIdeal: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1d20 (    0x20) objc_msgSend$setMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1d40 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1d60 (    0x20) objc_msgSend$setStartDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1d80 (    0x20) objc_msgSend$setTimeStyle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1da0 (    0x20) objc_msgSend$setTimeZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1dc0 (    0x20) objc_msgSend$setUpgradeConfirmationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1de0 (    0x20) objc_msgSend$setValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1e00 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1e20 (    0x20) objc_msgSend$sortedArrayUsingComparator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1e40 (    0x20) objc_msgSend$startDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1e60 (    0x20) objc_msgSend$storeWithArchiveURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1e80 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ea0 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ec0 (    0x20) objc_msgSend$stringFromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1ee0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1f00 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1f20 (    0x20) objc_msgSend$summarizeAllDenialsOverMessages:forActivity:detail: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1f40 (    0x20) objc_msgSend$summarizePolicyDenialsOverMessages:maxDuration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1f60 (    0x20) objc_msgSend$summarizeRuntimeOverMessages:forActivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1f80 (    0x20) objc_msgSend$timeIntervalSinceDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1fa0 (    0x20) objc_msgSend$unionSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1fc0 (    0x20) objc_msgSend$value [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001fa1e1fe0 (    0x20) objc_msgSend$withCondition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000236f0c340 (   0x878) __DATA_CONST SEGMENT
            0x0000000236f0c340 (    0x20) __DATA_CONST __got
            0x0000000236f0c360 (    0x60) __DATA_CONST __const
                0x0000000236f0c360 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0c380 (    0x20) __block_descriptor_32_e5_B8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0c3a0 (    0x20) __block_descriptor_32_e25_B24?08"NSDictionary"16l [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236f0c3c0 (    0x28) __DATA_CONST __objc_classlist
            0x0000000236f0c3e8 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000236f0c3f0 (   0x368) __DATA_CONST __objc_const
                0x0000000236f0c3f0 (    0x48) _OBJC_METACLASS_RO_$__DASLogValueInterval [NameNList, MangledNameNList, NList] 
                0x0000000236f0c438 (    0x68) _OBJC_$_INSTANCE_VARIABLES__DASLogValueInterval [NameNList, MangledNameNList, NList] 
                0x0000000236f0c4a0 (    0x38) _OBJC_$_PROP_LIST__DASLogValueInterval [NameNList, MangledNameNList, NList] 
                0x0000000236f0c4d8 (    0x68) _OBJC_$_INSTANCE_VARIABLES__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x0000000236f0c540 (    0x38) _OBJC_$_PROP_LIST__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x0000000236f0c578 (    0x48) _OBJC_$_INSTANCE_VARIABLES__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x0000000236f0c5c0 (    0x28) _OBJC_$_PROP_LIST__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x0000000236f0c5e8 (    0x48) _OBJC_$_INSTANCE_VARIABLES__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x0000000236f0c630 (    0x28) _OBJC_$_PROP_LIST__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x0000000236f0c658 (    0xa8) _OBJC_$_INSTANCE_VARIABLES__DASLogExtractor [NameNList, MangledNameNList, NList] 
                0x0000000236f0c700 (    0x58) _OBJC_$_PROP_LIST__DASLogExtractor [NameNList, MangledNameNList, NList] 
            0x0000000236f0c758 (   0x460) __DATA_CONST __objc_selrefs
        0x0000000236f0cbb8 (  0x1540) __AUTH_CONST SEGMENT
            0x0000000236f0cbb8 (   0xfc0) __AUTH_CONST __cfstring
            0x0000000236f0db78 (   0x288) __AUTH_CONST __objc_const
                0x0000000236f0db78 (    0x48) _OBJC_CLASS_RO_$__DASLogValueInterval [NameNList, MangledNameNList, NList] 
                0x0000000236f0dbc0 (    0x48) _OBJC_METACLASS_RO_$__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x0000000236f0dc08 (    0x48) _OBJC_CLASS_RO_$__DASLogEntry [NameNList, MangledNameNList, NList] 
                0x0000000236f0dc50 (    0x48) _OBJC_METACLASS_RO_$__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x0000000236f0dc98 (    0x48) _OBJC_CLASS_RO_$__DASLogCondition [NameNList, MangledNameNList, NList] 
                0x0000000236f0dce0 (    0x48) _OBJC_METACLASS_RO_$__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x0000000236f0dd28 (    0x48) _OBJC_CLASS_RO_$__DASLogConditionHistory [NameNList, MangledNameNList, NList] 
                0x0000000236f0dd70 (    0x48) _OBJC_METACLASS_RO_$__DASLogExtractor [NameNList, MangledNameNList, NList] 
                0x0000000236f0ddb8 (    0x48) _OBJC_CLASS_RO_$__DASLogExtractor [NameNList, MangledNameNList, NList] 
            0x0000000236f0de00 (   0x220) __AUTH_CONST __const
                0x0000000236f0de00 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236f0de20 (    0x20) __block_literal_global.146 [NameNList, MangledNameNList, NList] 
                0x0000000236f0de40 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0de70 (    0x30) __block_descriptor_48_e8_32bs_e25_v16?0"OSLogEventProxy"8lu40l8 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0dea0 (    0x30) __block_descriptor_48_e8_32s40r_e37_v24?0Q8"OSLogEventStreamPosition"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0ded0 (    0x30) __block_descriptor_80_e8_32s40s48s56bs64r_e38_v24?0"OSLogEventSource"8"NSError"16lu72l8 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0df00 (    0x30) __block_descriptor_40_e8_32s_e31_q24?0"NSString"8"NSString"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0df30 (    0x30) __block_descriptor_40_e8_32r_e25_B16?0"OSLogEventProxy"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0df60 (    0x20) __block_literal_global.501 [NameNList, MangledNameNList, NList] 
                0x0000000236f0df80 (    0x30) __block_descriptor_49_e8_32s40s_e25_B16?0"OSLogEventProxy"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0dfb0 (    0x30) __block_descriptor_40_e8_32s_e50_v32?0"NSString"8"_DASLogConditionHistory"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236f0dfe0 (    0x20) __block_literal_global.583 [NameNList, MangledNameNList, NList] 
                0x0000000236f0e000 (    0x20) __block_literal_global.585 [NameNList, MangledNameNList, NList] 
            0x0000000236f0e020 (    0xd8) __AUTH_CONST __auth_got
        0x00000002325789e0 (   0x190) __AUTH SEGMENT
            0x00000002325789e0 (   0x190) __AUTH __objc_data
                0x00000002325789e0 (    0x28) OBJC_METACLASS_$__DASLogValueInterval [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578a08 (    0x28) OBJC_CLASS_$__DASLogValueInterval [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578a30 (    0x28) OBJC_METACLASS_$__DASLogEntry [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578a58 (    0x28) OBJC_CLASS_$__DASLogEntry [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578a80 (    0x28) OBJC_METACLASS_$__DASLogCondition [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578aa8 (    0x28) OBJC_CLASS_$__DASLogCondition [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578ad0 (    0x28) OBJC_CLASS_$__DASLogConditionHistory [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578af8 (    0x28) OBJC_METACLASS_$__DASLogConditionHistory [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578b20 (    0x28) OBJC_CLASS_$__DASLogExtractor [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232578b48 (    0x28) OBJC_METACLASS_$__DASLogExtractor [EXT, NameNList, MangledNameNList, NList] 
        0x0000000230fc4d08 (   0x148) __DATA SEGMENT
            0x0000000230fc4d08 (    0xb0) __DATA __objc_classrefs
            0x0000000230fc4db8 (    0x10) __DATA __objc_superrefs
            0x0000000230fc4dc8 (    0x3c) __DATA __objc_ivar
                0x0000000230fc4dc8 (     0x4) OBJC_IVAR_$__DASLogValueInterval._startDate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dcc (     0x4) OBJC_IVAR_$__DASLogValueInterval._endDate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dd0 (     0x4) OBJC_IVAR_$__DASLogValueInterval._value [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dd4 (     0x4) OBJC_IVAR_$__DASLogEntry._date [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dd8 (     0x4) OBJC_IVAR_$__DASLogEntry._category [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4ddc (     0x4) OBJC_IVAR_$__DASLogEntry._message [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4de0 (     0x4) OBJC_IVAR_$__DASLogCondition._isIdeal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4de4 (     0x4) OBJC_IVAR_$__DASLogCondition._condition [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4de8 (     0x4) OBJC_IVAR_$__DASLogConditionHistory._conditions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dec (     0x4) OBJC_IVAR_$__DASLogConditionHistory._intervals [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4df0 (     0x4) OBJC_IVAR_$__DASLogExtractor._logStore [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4df4 (     0x4) OBJC_IVAR_$__DASLogExtractor._dateFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4df8 (     0x4) OBJC_IVAR_$__DASLogExtractor._eventStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4dfc (     0x4) OBJC_IVAR_$__DASLogExtractor._subsystem [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fc4e00 (     0x4) OBJC_IVAR_$__DASLogExtractor._category [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000230fc4e08 (    0x48) __DATA __bss
                0x0000000230fc4e08 (     0x8) description.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e10 (     0x8) description.formatter [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e18 (     0x8) description.shortFormatter [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e20 (     0x8) getDefaultFilterPredicate.subpredicates [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e28 (     0x8) getDefaultFilterPredicate.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e30 (     0x8) defaultFormatter.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e38 (     0x8) defaultFormatter.formatter [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e40 (     0x8) timeOnlyFormatter.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000230fc4e48 (     0x8) timeOnlyFormatter.timeOnlyFormatter [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
