Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/usr/lib/swift/libswift_Differentiation.dylib [arm64e, 0.038202 seconds]:
    96D5A4B1-8C91-3A45-A810-D31BB95D4805 /usr/lib/swift/libswift_Differentiation.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000002216bf000 ( 0x3dff8) __TEXT SEGMENT
            0x00000002216bf000 (  0x5b2c) MACH_HEADER
            0x00000002216c4b2c ( 0x33474) __TEXT __text
                0x00000002216c4b2c (    0x60) Differentiable<>.move(by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c4b8c (   0x104) valueWithDifferential<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c4c90 (    0x48) __swift_instantiateConcreteTypeFromMangledNameAbstract [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c4cd8 (   0x10c) valueWithDifferential<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c4de4 (   0x11c) valueWithDifferential<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c4f00 (   0x104) valueWithPullback<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5004 (   0x10c) valueWithPullback<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5110 (   0x11c) valueWithPullback<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c522c (    0xf0) differential<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c531c (    0xfc) differential<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5418 (    0xfc) differential<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5514 (    0xf4) pullback<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5608 (   0x104) pullback<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c570c (   0x10c) pullback<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5818 (   0x11c) derivative<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5934 (   0x1cc) derivative<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5b00 (   0x280) derivative<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5d80 (   0x11c) gradient<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5e9c (   0x144) gradient<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c5fe0 (   0x150) gradient<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6130 (   0x128) valueWithDerivative<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6258 (   0x1e0) valueWithDerivative<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6438 (   0x290) valueWithDerivative<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c66c8 (   0x128) valueWithGradient<A, B>(at:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c67f0 (   0x144) valueWithGradient<A, B, C>(at:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6934 (   0x14c) valueWithGradient<A, B, C, D>(at:_:_:of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6a80 (    0xcc) derivative<A, B>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6b4c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216c6b50 (    0x40) partial apply for closure #1 in derivative<A, B>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6b90 (    0xe8) derivative<A, B, C>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6c78 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000002216c6cc0 (    0x44) partial apply for closure #1 in derivative<A, B, C>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6d04 (   0x10c) derivative<A, B, C, D>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6e10 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000002216c6e58 (    0x58) partial apply for closure #1 in derivative<A, B, C, D>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6eb0 (    0xcc) gradient<A, B>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6f7c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216c6f80 (    0x48) objectdestroyTm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c6fc8 (    0x40) partial apply for closure #1 in gradient<A, B>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7008 (    0xdc) gradient<A, B, C>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c70e4 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000002216c712c (    0x44) partial apply for closure #1 in gradient<A, B, C>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7170 (    0xf8) gradient<A, B, C, D>(of:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7268 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000002216c72b0 (    0x48) partial apply for closure #1 in gradient<A, B, C, D>(of:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c72f8 (    0x38) withoutDerivative<A>(at:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7330 (    0x60) _fatalErrorForwardModeDifferentiationDisabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7390 (   0x2d4) _ConcreteDifferentiableBox._move(by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7664 (    0x5c) AnyDerivative.base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c76c0 (   0x114) _derivativeTypeMismatch(_:_:file:line:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c77d4 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7818 (     0x4) protocol witness for _AnyDifferentiableBox._move(by:) in conformance _ConcreteDifferentiableBox<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c781c (    0x18) protocol witness for _AnyDifferentiableBox._typeErasedBase.getter in conformance _ConcreteDifferentiableBox<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7834 (    0x5c) AnyDifferentiable.base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7890 (    0x20) AnyDifferentiable.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c78b0 (    0x18) type metadata accessor for _ConcreteDifferentiableBox [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c78c8 (    0xf4) static AnyDifferentiable._vjpInit<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c79bc (    0xb0) closure #1 in static AnyDifferentiable._vjpInit<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7a6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216c7a7c (     0x8) partial apply for closure #1 in static AnyDifferentiable._vjpInit<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7a84 (    0x18) reverse-mode derivative of AnyDifferentiable.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7a9c (    0xf4) static AnyDifferentiable._jvpInit<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7b90 (   0x120) closure #1 in static AnyDifferentiable._jvpInit<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7cb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216c7cc0 (     0x8) partial apply for closure #1 in static AnyDifferentiable._jvpInit<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7cc8 (    0x34) AnyDerivative.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7cfc (    0x88) AnyDifferentiable.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7d84 (    0xac) forward-mode derivative of AnyDifferentiable.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7e30 (    0x5c) AnyDifferentiable.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7e8c (    0x5c) protocol witness for Differentiable.move(by:) in conformance AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7ee8 (    0x70) AnyDifferentiable.customMirror.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7f58 (    0x70) protocol witness for CustomReflectable.customMirror.getter in conformance AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c7fc8 (    0x7c) _AnyDerivativeBox._isOpaqueZero() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8044 (    0x34) _ConcreteDerivativeBox._base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8078 (    0x38) _ConcreteDerivativeBox._base.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c80b0 (    0x20) _ConcreteDerivativeBox._base.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c80d0 (     0x4) _ConcreteDerivativeBox._base.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c80d4 (     0x4) _ConcreteDerivativeBox.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c80d8 (    0x38) _ConcreteDifferentiableBox.init(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8110 (    0x18) type metadata accessor for _ConcreteDerivativeBox [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8128 (    0x94) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector) -> (@out AnyDerivative) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c81bc (    0x50) __swift_mutable_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c820c (    0x54) lazy protocol witness table accessor for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8260 (     0x4) _ConcreteDerivativeBox._typeErasedBase.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8264 (    0x68) _ConcreteDifferentiableBox._typeErasedBase.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c82cc (    0x64) __swift_allocate_boxed_opaque_existential_1Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8330 (   0x2f8) _ConcreteDerivativeBox._unboxed<A>(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8628 (   0x450) _ConcreteDerivativeBox._isEqual(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8a78 (   0x47c) _ConcreteDerivativeBox._isNotEqual(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c8ef4 (   0x10c) static _ConcreteDerivativeBox._zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9000 (   0x400) _ConcreteDerivativeBox._adding(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9400 (    0x44) __swift_project_boxed_opaque_existential_1Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9444 (    0x64) outlined init with copy of _AnyDerivativeBox [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c94a8 (   0x4fc) _ConcreteDerivativeBox._subtracting(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c99a4 (    0x50) __swift_destroy_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c99f4 (   0x2d0) _ConcreteDerivativeBox._move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9cc4 (     0x4) protocol witness for _AnyDerivativeBox._isEqual(to:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9cc8 (     0x4) protocol witness for _AnyDerivativeBox._isNotEqual(to:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9ccc (     0xc) protocol witness for static _AnyDerivativeBox._zero.getter in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9cd8 (     0x4) protocol witness for _AnyDerivativeBox._adding(_:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9cdc (     0x4) protocol witness for _AnyDerivativeBox._subtracting(_:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9ce0 (     0x4) protocol witness for _AnyDerivativeBox._move(by:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9ce4 (     0x4) protocol witness for _AnyDerivativeBox._typeErasedBase.getter in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9ce8 (    0x14) protocol witness for _AnyDerivativeBox._unboxed<A>(to:) in conformance _ConcreteDerivativeBox<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9cfc (     0xc) AnyDerivative._box.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d08 (    0x40) AnyDerivative._box.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d48 (    0x18) outlined init with take of _AnyDerivativeBox [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d60 (    0x20) AnyDerivative._box.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d80 (     0x4) AnyDerivative._box.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d84 (     0x8) AnyDerivative.init(_box:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9d8c (    0xf4) static AnyDerivative._vjpInit<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9e80 (    0x8c) closure #1 in static AnyDerivative._vjpInit<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9f0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216c9f1c (     0x8) partial apply for closure #1 in static AnyDerivative._vjpInit<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9f24 (    0x18) reverse-mode derivative of AnyDerivative.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9f3c (    0x74) reverse-mode derivative of AnyDifferentiable.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216c9fb0 (    0xf4) static AnyDerivative._jvpInit<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca0a4 (    0xcc) closure #1 in static AnyDerivative._jvpInit<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216ca180 (     0x8) partial apply for closure #1 in static AnyDerivative._jvpInit<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca188 (    0xac) forward-mode derivative of AnyDerivative.init<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca234 (    0x74) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out AnyDerivative) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca2a8 (    0x5c) static AnyDerivative.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca304 (    0x5c) static AnyDerivative.!= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca360 (     0x4) static AnyDerivative.OpaqueZero.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca364 (     0x8) static AnyDerivative.OpaqueZero.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca36c (     0x4) static AnyDerivative.OpaqueZero.zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca370 (     0x4) protocol witness for Differentiable.move(by:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca374 (     0x4) protocol witness for static AdditiveArithmetic.zero.getter in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca378 (     0x4) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca37c (     0x4) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca380 (     0x4) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca384 (     0x4) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca388 (    0xc0) static AdditiveArithmetic.+= infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca448 (     0x8) protocol witness for static Equatable.== infix(_:_:) in conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca450 (    0x38) static AnyDerivative.zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca488 (    0x64) static AnyDerivative.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca4ec (    0x80) static AnyDerivative._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca56c (    0x48) closure #1 in static AnyDerivative._vjpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca5b4 (    0x80) reverse-mode derivative of static AnyDerivative.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca634 (    0x80) static AnyDerivative._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca6b4 (    0x64) closure #1 in static AnyDerivative._jvpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca718 (    0x80) forward-mode derivative of static AnyDerivative.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca798 (    0x64) static AnyDerivative.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca7fc (    0x80) static AnyDerivative._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca87c (    0x88) closure #1 in static AnyDerivative._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca904 (    0x80) reverse-mode derivative of static AnyDerivative.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ca984 (    0x80) static AnyDerivative._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caa04 (    0x64) closure #1 in static AnyDerivative._jvpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caa68 (    0x80) forward-mode derivative of static AnyDerivative.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caae8 (    0xfc) AnyDerivative.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cabe4 (   0x230) __swift_assign_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cae14 (    0xc0) protocol witness for Differentiable.move(by:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caed4 (    0x38) protocol witness for static AdditiveArithmetic.zero.getter in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caf0c (    0x64) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216caf70 (    0x7c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cafec (    0x64) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb050 (    0x7c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb0cc (    0x5c) protocol witness for static Equatable.== infix(_:_:) in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb128 (    0x70) AnyDerivative.customMirror.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb198 (    0x70) protocol witness for CustomReflectable.customMirror.getter in conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb208 (    0x28) Array<A>.DifferentiableView.base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb230 (    0x6c) key path setter for Array<A>.DifferentiableView.base : <A>[A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb29c (    0x20) Array<A>.DifferentiableView.base.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb2bc (     0x4) Array<A>.DifferentiableView.base.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb2c0 (    0x2c) Array<A>.DifferentiableView.base.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb2ec (    0x70) Array<A>.DifferentiableView._vjpBase() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb35c (    0x80) reverse-mode derivative of Array<A>.DifferentiableView.base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb3dc (    0x70) Array<A>.DifferentiableView._jvpBase() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb44c (    0x80) forward-mode derivative of Array<A>.DifferentiableView.base.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb4cc (    0x70) static Array<A>.DifferentiableView._vjpInit(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb53c (    0x94) reverse-mode derivative of Array<A>.DifferentiableView.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb5d0 (    0x70) static Array<A>.DifferentiableView._jvpInit(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb640 (    0x94) forward-mode derivative of Array<A>.DifferentiableView.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cb6d4 (   0x524) Array<A>.DifferentiableView.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbbf8 (     0x8) protocol witness for Differentiable.move(by:) in conformance [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbc00 (    0x6c) static Array<A>.DifferentiableView<>.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbc6c (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbc80 (     0x4) Array<A>.DifferentiableView.init(arrayLiteral:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbc84 (     0x8) protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbc8c (    0x50) Array<A>.DifferentiableView.description.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbcdc (    0x10) protocol witness for CustomStringConvertible.description.getter in conformance [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbcec (    0x54) Array<A>.DifferentiableView.customMirror.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbd40 (    0x10) protocol witness for CustomReflectable.customMirror.getter in conformance [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbd50 (     0xc) static Array<A>.DifferentiableView<>.zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbd5c (    0x54) static Array<A>.DifferentiableView<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbdb0 (    0x54) static Array<A>.DifferentiableView<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cbe04 (   0x358) static Array<A>.DifferentiableView<>.+ infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc15c (    0xb0) Array<A>.DifferentiableView<>.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc20c (    0x2c) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc238 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc250 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc27c (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc294 (    0x44) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc2d8 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> [A]<A>.DifferentiableView [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc304 (    0x60) Array<A>.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc364 (     0xc) protocol witness for Differentiable.move(by:) in conformance <A> [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc370 (    0x94) Array<A>._vjpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc404 (   0x1c8) pullback #1 <A>(_:) in Array<A>._vjpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc5cc (    0x78) reverse-mode derivative of Array.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc644 (    0x78) Array<A>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc6bc (    0x78) forward-mode derivative of Array.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc734 (    0x94) static Array<A>._vjpConcatenate(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc7c8 (    0x80) reverse-mode derivative of static Array.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc848 (    0x94) static Array<A>._jvpConcatenate(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc8dc (    0x80) forward-mode derivative of static Array.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cc95c (   0x11c) Array<A>._vjpAppend(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cca78 (   0x138) $defer #1 <A>() in closure #1 in Array<A>._vjpAppend(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ccbb0 (    0xb0) reverse-mode derivative of Array.append(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ccc60 (    0xfc) Array<A>._jvpAppend(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ccd5c (    0xec) closure #1 in Array<A>._jvpAppend(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cce48 (    0xb0) forward-mode derivative of Array.append(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ccef8 (    0x90) static Array<A>._vjpAppend(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ccf88 (    0x78) reverse-mode derivative of static Array.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd000 (    0x58) static Array<A>._jvpAppend(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd058 (    0x78) forward-mode derivative of static Array.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd0d0 (    0x68) static Array<A>._vjpInit(repeating:count:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd138 (   0x1a4) closure #1 in static Array<A>._vjpInit(repeating:count:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd2dc (    0xbc) reverse-mode derivative of Array.init(repeating:count:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd398 (    0x70) static Array<A>._jvpInit(repeating:count:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd408 (    0xbc) forward-mode derivative of Array.init(repeating:count:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd4c4 (    0x8c) Array<A>.differentiableMap<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd550 (   0x470) Array<A>._vjpDifferentiableMap<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cd9c0 (   0x1f0) specialized pullback #1 <A><A1>(_:) in Array<A>._vjpDifferentiableMap<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cdbb0 (    0xac) thunk for @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector, @guaranteed @escaping @callee_guaranteed @substituted <A, B> (@in_guaranteed A) -> (@out B) for <A1.Differentiable.TangentVectorA.Differentiable.TangentVector>) -> (@out A.Differentiable.TangentVector, @error @owned Error) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cdc5c (    0xb0) reverse-mode derivative of Array<A>.differentiableMap<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cdd0c (   0x490) Array<A>._jvpDifferentiableMap<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ce19c (   0x1ec) specialized differential #1 <A><A1>(_:) in Array<A>._jvpDifferentiableMap<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ce388 (    0xac) thunk for @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector, @guaranteed @escaping @callee_guaranteed @substituted <A, B> (@in_guaranteed A) -> (@out B) for <A.Differentiable.TangentVectorA1.Differentiable.TangentVector>) -> (@out A1.Differentiable.TangentVector, @error @owned Error) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ce434 (    0xb0) forward-mode derivative of Array<A>.differentiableMap<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ce4e4 (    0xa4) Array<A>.differentiableReduce<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ce588 (   0x5dc) Array<A>._vjpDifferentiableReduce<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ceb64 (    0xcc) thunk for @escaping @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector) -> (@out A1.Differentiable.TangentVector, @out A.Differentiable.TangentVector) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cec30 (   0x4e0) specialized closure #1 in Array<A>._vjpDifferentiableReduce<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cf110 (    0xa8) reverse-mode derivative of Array<A>.differentiableReduce<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cf1b8 (   0x588) Array<A>._jvpDifferentiableReduce<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cf740 (   0x3e4) specialized closure #1 in Array<A>._jvpDifferentiableReduce<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfb24 (    0xa8) forward-mode derivative of Array<A>.differentiableReduce<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfbcc (    0x84) Optional<A>.TangentVector.value.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfc50 (    0x88) Optional<A>.TangentVector.value.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfcd8 (    0x20) Optional<A>.TangentVector.value.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfcf8 (     0x4) Optional<A>.TangentVector.value.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfcfc (   0x16c) Optional<A>.TangentVector.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cfe68 (   0x124) static Optional<A>.TangentVector.zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216cff8c (   0x38c) static Optional<A>.TangentVector.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0318 (   0x3dc) static Optional<A>.TangentVector.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d06f4 (   0x254) Optional<A>.TangentVector.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0948 (   0x39c) static Optional<A>.TangentVector.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0ce4 (     0x4) protocol witness for Differentiable.move(by:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0ce8 (     0xc) protocol witness for static AdditiveArithmetic.zero.getter in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0cf4 (     0xc) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0d00 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0d2c (     0xc) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0d38 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0d64 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0d70 (   0x248) Optional<A>.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0fb8 (     0x8) protocol witness for Differentiable.move(by:) in conformance <A> A? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d0fc0 (    0x58) Optional<A>.TangentVector.customMirror.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1018 (     0x4) protocol witness for CustomReflectable.customMirror.getter in conformance A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d101c (    0x10) Float.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d102c (    0x14) protocol witness for Differentiable.move(by:) in conformance Float [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1040 (    0x1c) static Float._vjpInit(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d105c (     0x4) closure #1 in static Float._vjpInit(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1060 (    0x1c) static Float._jvpInit(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d107c (     0x4) closure #1 in static Float._jvpInit(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1080 (    0x20) static Float._vjpNegate(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d10a0 (    0x20) static Float._jvpNegate(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d10c0 (     0x8) closure #1 in static Float._jvpNegate(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d10c8 (    0x20) static Float._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d10e8 (     0x8) closure #1 in static Float._vjpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d10f0 (    0x20) static Float._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1110 (     0x8) closure #1 in static Float._jvpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1118 (    0x28) static Float._vjpAddAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1140 (     0x8) closure #1 in static Float._vjpAddAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1148 (    0x28) static Float._jvpAddAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1170 (    0x10) closure #1 in static Float._jvpAddAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1180 (    0x20) static Float._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d11a0 (     0x8) closure #1 in static Float._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d11a8 (    0x20) static Float._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d11c8 (     0x8) closure #1 in static Float._jvpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d11d0 (    0x28) static Float._vjpSubtractAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d11f8 (     0xc) closure #1 in static Float._vjpSubtractAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1204 (    0x28) static Float._jvpSubtractAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d122c (    0x10) closure #1 in static Float._jvpSubtractAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d123c (    0x64) static Float._vjpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d12a0 (    0x64) reverse-mode derivative of static Float.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1304 (    0x64) static Float._jvpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1368 (    0x64) forward-mode derivative of static Float.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d13cc (    0x6c) static Float._vjpMultiplyAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1438 (    0x6c) reverse-mode derivative of static Float.*= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d14a4 (    0x60) static Float._jvpMultiplyAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1504 (    0x60) forward-mode derivative of static Float.*= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1564 (    0x64) static Float._vjpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d15c8 (    0x64) reverse-mode derivative of static Float./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d162c (    0x64) static Float._jvpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1690 (    0x64) forward-mode derivative of static Float./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d16f4 (    0x68) static Float._vjpDivideAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d175c (    0x68) reverse-mode derivative of static Float./= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d17c4 (    0x5c) static Float._jvpDivideAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1820 (    0x5c) forward-mode derivative of static Float./= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d187c (    0x10) Double.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d188c (    0x14) protocol witness for Differentiable.move(by:) in conformance Double [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d18a0 (    0x1c) static Double._vjpInit(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d18bc (     0x4) closure #1 in static Double._vjpInit(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d18c0 (    0x1c) static Double._jvpInit(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d18dc (     0x4) closure #1 in static Double._jvpInit(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d18e0 (    0x20) static Double._vjpNegate(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1900 (    0x20) static Double._jvpNegate(x:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1920 (     0x8) closure #1 in static Double._jvpNegate(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1928 (    0x20) static Double._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1948 (     0x8) closure #1 in static Double._vjpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1950 (    0x20) static Double._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1970 (     0x8) closure #1 in static Double._jvpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1978 (    0x28) static Double._vjpAddAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d19a0 (     0x8) closure #1 in static Double._vjpAddAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d19a8 (    0x28) static Double._jvpAddAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d19d0 (    0x10) closure #1 in static Double._jvpAddAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d19e0 (    0x20) static Double._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a00 (     0x8) closure #1 in static Double._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a08 (    0x20) static Double._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a28 (     0x8) closure #1 in static Double._jvpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a30 (    0x28) static Double._vjpSubtractAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a58 (     0xc) closure #1 in static Double._vjpSubtractAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a64 (    0x28) static Double._jvpSubtractAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a8c (    0x10) closure #1 in static Double._jvpSubtractAssign(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1a9c (    0x64) static Double._vjpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1b00 (    0x64) reverse-mode derivative of static Double.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1b64 (    0x64) static Double._jvpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1bc8 (    0x64) forward-mode derivative of static Double.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1c2c (    0x6c) static Double._vjpMultiplyAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1c98 (    0x6c) reverse-mode derivative of static Double.*= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1d04 (    0x60) static Double._jvpMultiplyAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1d64 (    0x60) forward-mode derivative of static Double.*= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1dc4 (    0x64) static Double._vjpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1e28 (    0x64) reverse-mode derivative of static Double./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1e8c (    0x64) static Double._jvpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1ef0 (    0x64) forward-mode derivative of static Double./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1f54 (    0x68) static Double._vjpDivideAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d1fbc (    0x68) reverse-mode derivative of static Double./= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2024 (    0x5c) static Double._jvpDivideAssign(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2080 (    0x5c) forward-mode derivative of static Double./= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d20dc (   0x1b4) FloatingPoint<>._vjpAddingProduct(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2290 (    0xb8) closure #1 in FloatingPoint<>._vjpAddingProduct(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2348 (    0x80) reverse-mode derivative of FloatingPoint.addingProduct(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d23c8 (   0x17c) FloatingPoint<>._vjpSquareRoot() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2544 (     0x4) reverse-mode derivative of FloatingPoint.squareRoot() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2548 (   0x1f0) static FloatingPoint<>._vjpMinimum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2738 (    0x18) reverse-mode derivative of static FloatingPoint.minimum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2750 (   0x1f0) static FloatingPoint<>._vjpMaximum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2940 (    0x90) closure #1 in static FloatingPoint<>._vjpMinimum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d29d0 (    0xa4) closure #2 in static FloatingPoint<>._vjpMinimum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2a74 (    0x18) reverse-mode derivative of static FloatingPoint.maximum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2a8c (   0x1b8) _jvpFma<A>(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2c44 (   0x1c4) closure #1 in _jvpFma<A>(_:_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2e08 (     0x4) forward-mode derivative of fma<A>(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2e0c (   0x1b8) _vjpFma<A>(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d2fc4 (    0xb8) closure #1 in _vjpFma<A>(_:_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d307c (     0x4) reverse-mode derivative of fma<A>(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3080 (    0x60) _jvpRemainder<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d30e0 (    0x10) forward-mode derivative of remainder<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d30f0 (   0x1b0) _vjpRemainder<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d32a0 (     0x4) reverse-mode derivative of remainder<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d32a4 (    0x60) _jvpFmod<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3304 (    0x10) forward-mode derivative of fmod<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3314 (   0x1b0) _vjpFmod<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d34c4 (   0x284) closure #1 in _vjpRemainder<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3748 (     0x4) reverse-mode derivative of fmod<A>(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d374c (   0x180) _jvpSqrt<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d38cc (     0x4) forward-mode derivative of sqrt<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d38d0 (   0x148) _jvpCeil<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3a18 (     0x4) forward-mode derivative of ceil<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3a1c (   0x148) _jvpFloor<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3b64 (     0x4) forward-mode derivative of floor<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3b68 (   0x148) _jvpRound<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3cb0 (     0x4) forward-mode derivative of round<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3cb4 (   0x148) _jvpTrunc<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3dfc (     0x4) forward-mode derivative of trunc<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3e00 (   0x180) _vjpSqrt<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d3f80 (   0x1ec) closure #1 in FloatingPoint<>._vjpSquareRoot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d416c (     0x4) reverse-mode derivative of sqrt<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4170 (   0x148) _vjpCeil<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d42b8 (     0x4) reverse-mode derivative of ceil<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d42bc (   0x148) _vjpFloor<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4404 (     0x4) reverse-mode derivative of floor<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4408 (   0x148) _vjpRound<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4550 (     0x4) reverse-mode derivative of round<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4554 (   0x148) _vjpTrunc<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d469c (    0xf8) closure #1 in _jvpCeil<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4794 (     0x4) reverse-mode derivative of trunc<A>(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4798 (    0x68) _jvpFma(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4800 (    0x68) fmaTJfSSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4868 (    0x68) _vjpFma(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d48d0 (    0x68) fmaTJrSSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4938 (    0x60) _jvpRemainder(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4998 (    0x60) remainderTJfSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d49f8 (    0x68) _vjpRemainder(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4a60 (    0x68) remainderTJrSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4ac8 (    0x60) _jvpFmod(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4b28 (    0x60) fmodTJfSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4b88 (    0x68) _vjpFmod(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4bf0 (    0x68) fmodTJrSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4c58 (    0x54) _jvpSqrt(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4cac (    0x54) sqrtTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d00 (    0x20) _jvpCeil(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d20 (     0x8) closure #1 in _jvpCeil(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d28 (    0x20) _jvpFloor(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d48 (     0x8) closure #1 in _jvpFloor(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d50 (    0x20) _jvpRound(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d70 (     0x8) closure #1 in _jvpRound(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d78 (    0x20) _jvpTrunc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4d98 (     0x8) closure #1 in _jvpTrunc(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4da0 (    0x54) _vjpSqrt(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4df4 (    0x54) sqrtTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4e48 (    0x20) _vjpCeil(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4e68 (     0x8) closure #1 in _vjpCeil(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4e70 (    0x20) _vjpFloor(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4e90 (     0x8) closure #1 in _vjpFloor(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4e98 (    0x20) _vjpRound(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4eb8 (     0x8) closure #1 in _vjpRound(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4ec0 (    0x20) _vjpTrunc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4ee0 (     0x8) closure #1 in _vjpTrunc(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4ee8 (    0x58) _jvpExp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4f40 (    0x58) forward-mode derivative of exp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4f98 (    0x58) _jvpExp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d4ff0 (    0x58) forward-mode derivative of exp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5048 (    0x5c) _jvpLog(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d50a4 (    0x5c) forward-mode derivative of log(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5100 (    0x5c) _jvpLog10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d515c (    0x5c) forward-mode derivative of log10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d51b8 (    0x5c) _jvpLog2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5214 (    0x5c) forward-mode derivative of log2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5270 (    0x5c) _jvpSin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d52cc (    0x5c) forward-mode derivative of sin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5328 (    0x5c) _jvpCos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5384 (    0x5c) forward-mode derivative of cos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d53e0 (    0x58) _jvpTan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5438 (    0x58) forward-mode derivative of tan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5490 (    0x5c) _jvpAsin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d54ec (    0x5c) forward-mode derivative of asin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5548 (    0x5c) _jvpAcos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d55a4 (    0x5c) forward-mode derivative of acos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5600 (    0x5c) _jvpAtan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d565c (    0x5c) forward-mode derivative of atan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d56b8 (    0x5c) _jvpSinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5714 (    0x5c) forward-mode derivative of sinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5770 (    0x5c) _jvpCosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d57cc (    0x5c) forward-mode derivative of cosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5828 (    0x58) _jvpTanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5880 (    0x58) forward-mode derivative of tanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d58d8 (    0x5c) _jvpAsinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5934 (    0x5c) forward-mode derivative of asinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5990 (    0x5c) _jvpAcosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d59ec (    0x5c) forward-mode derivative of acosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5a48 (    0x5c) _jvpAtanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5aa4 (    0x5c) forward-mode derivative of atanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5b00 (    0x5c) _jvpExpm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5b5c (    0x5c) forward-mode derivative of expm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5bb8 (    0x5c) _jvpLog1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5c14 (    0x5c) forward-mode derivative of log1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5c70 (    0x5c) _jvpErf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5ccc (    0x5c) forward-mode derivative of erf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5d28 (    0x5c) _jvpErfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5d84 (    0x5c) forward-mode derivative of erfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5de0 (    0x58) _jvpExp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5e38 (    0x58) forward-mode derivative of exp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5e90 (    0x58) _jvpExp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5ee8 (    0x58) forward-mode derivative of exp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5f40 (    0x5c) _jvpLog(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5f9c (    0x5c) forward-mode derivative of log(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d5ff8 (    0x5c) _jvpLog10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6054 (    0x5c) forward-mode derivative of log10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d60b0 (    0x5c) _jvpLog2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d610c (    0x5c) forward-mode derivative of log2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6168 (    0x5c) _jvpSin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d61c4 (    0x5c) forward-mode derivative of sin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6220 (    0x5c) _jvpCos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d627c (    0x5c) forward-mode derivative of cos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d62d8 (    0x58) _jvpTan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6330 (    0x58) tanTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6388 (    0x5c) _jvpAsin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d63e4 (    0x5c) asinTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6440 (    0x5c) _jvpAcos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d649c (    0x5c) acosTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d64f8 (    0x5c) _jvpAtan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6554 (    0x5c) atanTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d65b0 (    0x5c) _jvpSinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d660c (    0x5c) sinhTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6668 (    0x5c) _jvpCosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d66c4 (    0x5c) coshTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6720 (    0x58) _jvpTanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6778 (    0x58) tanhTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d67d0 (    0x5c) _jvpAsinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d682c (    0x5c) asinhTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6888 (    0x5c) _jvpAcosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d68e4 (    0x5c) acoshTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6940 (    0x5c) _jvpAtanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d699c (    0x5c) atanhTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d69f8 (    0x5c) _jvpExpm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6a54 (    0x5c) expm1TJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6ab0 (    0x5c) _jvpLog1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6b0c (    0x5c) log1pTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6b68 (    0x5c) _jvpErf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6bc4 (    0x5c) erfTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6c20 (    0x5c) _jvpErfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6c7c (    0x5c) erfcTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6cd8 (    0x58) _vjpExp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6d30 (    0x58) reverse-mode derivative of exp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6d88 (    0x58) _vjpExp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6de0 (    0x58) reverse-mode derivative of exp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6e38 (    0x5c) _vjpLog(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6e94 (    0x5c) reverse-mode derivative of log(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6ef0 (    0x5c) _vjpLog10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6f4c (    0x5c) reverse-mode derivative of log10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d6fa8 (    0x5c) _vjpLog2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7004 (    0x5c) reverse-mode derivative of log2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7060 (    0x5c) _vjpSin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d70bc (    0x5c) reverse-mode derivative of sin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7118 (    0x5c) _vjpCos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7174 (    0x5c) reverse-mode derivative of cos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d71d0 (    0x58) _vjpTan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7228 (    0x58) reverse-mode derivative of tan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7280 (    0x5c) _vjpAsin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d72dc (    0x5c) reverse-mode derivative of asin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7338 (    0x5c) _vjpAcos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7394 (    0x5c) reverse-mode derivative of acos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d73f0 (    0x5c) _vjpAtan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d744c (    0x5c) reverse-mode derivative of atan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d74a8 (    0x5c) _vjpSinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7504 (    0x5c) reverse-mode derivative of sinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7560 (    0x5c) _vjpCosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d75bc (    0x5c) reverse-mode derivative of cosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7618 (    0x58) _vjpTanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7670 (    0x58) reverse-mode derivative of tanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d76c8 (    0x5c) _vjpAsinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7724 (    0x5c) reverse-mode derivative of asinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7780 (    0x5c) _vjpAcosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d77dc (    0x5c) reverse-mode derivative of acosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7838 (    0x5c) _vjpAtanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7894 (    0x5c) reverse-mode derivative of atanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d78f0 (    0x5c) _vjpExpm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d794c (    0x5c) reverse-mode derivative of expm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d79a8 (    0x5c) _vjpLog1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7a04 (    0x5c) reverse-mode derivative of log1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7a60 (    0x5c) _vjpErf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7abc (    0x5c) reverse-mode derivative of erf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7b18 (    0x5c) _vjpErfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7b74 (    0x5c) reverse-mode derivative of erfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7bd0 (    0x58) _vjpExp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7c28 (    0x58) reverse-mode derivative of exp(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7c80 (    0x58) _vjpExp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7cd8 (    0x58) reverse-mode derivative of exp2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7d30 (    0x5c) _vjpLog(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7d8c (    0x5c) reverse-mode derivative of log(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7de8 (    0x5c) _vjpLog10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7e44 (    0x5c) reverse-mode derivative of log10(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7ea0 (    0x5c) _vjpLog2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7efc (    0x5c) reverse-mode derivative of log2(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7f58 (    0x5c) _vjpSin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d7fb4 (    0x5c) reverse-mode derivative of sin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8010 (    0x5c) _vjpCos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d806c (    0x5c) reverse-mode derivative of cos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d80c8 (    0x58) _vjpTan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8120 (    0x58) tanTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8178 (    0x5c) _vjpAsin(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d81d4 (    0x5c) asinTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8230 (    0x5c) _vjpAcos(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d828c (    0x5c) acosTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d82e8 (    0x5c) _vjpAtan(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8344 (    0x5c) atanTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d83a0 (    0x5c) _vjpSinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d83fc (    0x5c) sinhTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8458 (    0x5c) _vjpCosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d84b4 (    0x5c) coshTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8510 (    0x58) _vjpTanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8568 (    0x58) tanhTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d85c0 (    0x5c) _vjpAsinh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d861c (    0x5c) asinhTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8678 (    0x5c) _vjpAcosh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d86d4 (    0x5c) acoshTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8730 (    0x5c) _vjpAtanh(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d878c (    0x5c) atanhTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d87e8 (    0x5c) _vjpExpm1(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8844 (    0x5c) expm1TJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d88a0 (    0x5c) _vjpLog1p(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d88fc (    0x5c) log1pTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8958 (    0x5c) _vjpErf(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d89b4 (    0x5c) erfTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8a10 (    0x5c) _vjpErfc(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8a6c (    0x5c) erfcTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8ac8 (    0x6c) _vjpPow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8b34 (    0x6c) reverse-mode derivative of pow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8ba0 (    0x6c) _jvpPow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8c0c (    0x6c) forward-mode derivative of pow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8c78 (    0x6c) _vjpPow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8ce4 (    0x6c) powTJrSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8d50 (    0x6c) _jvpPow(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8dbc (    0x6c) powTJfSSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8e28 (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8e3c (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8e54 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8e80 (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d8e98 (   0x294) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d912c (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9158 (    0x78) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d91d0 (    0xc0) static SIMD<>.+= infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9290 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD2<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9294 (   0x1f0) SIMD2<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9484 (   0x1a4) closure #1 in SIMD2<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9628 (    0x84) reverse-mode derivative of SIMD2.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d96ac (   0x1f0) SIMD2<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d989c (   0x220) closure #1 in SIMD2<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9abc (    0x84) forward-mode derivative of SIMD2.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9b40 (   0x1c8) SIMD2<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9d08 (   0x2e8) closure #1 in SIMD2<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216d9ff0 (    0xc4) reverse-mode derivative of SIMD2.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da0b4 (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da0c8 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da0e0 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da10c (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da124 (   0x21c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD4<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da340 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da36c (   0x1f0) SIMD4<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da55c (   0x1a4) closure #1 in SIMD4<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da700 (    0x84) reverse-mode derivative of SIMD4.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da784 (   0x1f0) SIMD4<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216da974 (   0x220) closure #1 in SIMD4<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dab94 (    0x84) forward-mode derivative of SIMD4.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dac18 (   0x1c8) SIMD4<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dade0 (   0x2e8) closure #1 in SIMD4<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db0c8 (    0xc4) reverse-mode derivative of SIMD4.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db18c (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db1a0 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db1b8 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db1e4 (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db1fc (   0x21c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD8<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db418 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db444 (   0x1f0) SIMD8<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db634 (   0x1a4) closure #1 in SIMD8<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db7d8 (    0x84) reverse-mode derivative of SIMD8.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216db85c (   0x1f0) SIMD8<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dba4c (   0x220) closure #1 in SIMD8<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dbc6c (    0x84) forward-mode derivative of SIMD8.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dbcf0 (   0x1c8) SIMD8<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dbeb8 (   0x2e8) closure #1 in SIMD8<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc1a0 (    0xc4) reverse-mode derivative of SIMD8.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc264 (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc278 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc290 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc2bc (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc2d4 (   0x21c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD16<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc4f0 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc51c (   0x1f0) SIMD16<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc70c (   0x1a4) closure #1 in SIMD16<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc8b0 (    0x84) reverse-mode derivative of SIMD16.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dc934 (   0x1f0) SIMD16<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dcb24 (   0x220) closure #1 in SIMD16<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dcd44 (    0x84) forward-mode derivative of SIMD16.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dcdc8 (   0x1c8) SIMD16<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dcf90 (   0x2e8) closure #1 in SIMD16<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd278 (    0xc4) reverse-mode derivative of SIMD16.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd33c (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd350 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd368 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd394 (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd3ac (   0x21c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD32<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd5c8 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd5f4 (   0x1f0) SIMD32<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd7e4 (   0x1a4) closure #1 in SIMD32<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dd988 (    0x84) reverse-mode derivative of SIMD32.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dda0c (   0x1f0) SIMD32<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ddbfc (   0x220) closure #1 in SIMD32<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dde1c (    0x84) forward-mode derivative of SIMD32.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ddea0 (   0x1c8) SIMD32<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de068 (   0x2e8) closure #1 in SIMD32<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de350 (    0xc4) reverse-mode derivative of SIMD32.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de414 (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de428 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de440 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de46c (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de484 (   0x21c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD64<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de6a0 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de6cc (   0x1f0) SIMD64<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216de8bc (   0x1a4) closure #1 in SIMD64<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dea60 (    0x84) reverse-mode derivative of SIMD64.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216deae4 (   0x1f0) SIMD64<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216decd4 (   0x220) closure #1 in SIMD64<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216deef4 (    0x84) forward-mode derivative of SIMD64.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216def78 (   0x1c8) SIMD64<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df140 (   0x2e8) closure #1 in SIMD64<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df428 (    0xc4) reverse-mode derivative of SIMD64.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df4ec (    0x14) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df500 (    0x88) protocol witness for static AdditiveArithmetic.zero.getter in conformance <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df588 (    0x18) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df5a0 (    0x2c) protocol witness for static AdditiveArithmetic.+= infix(_:_:) in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df5cc (    0x18) protocol witness for static AdditiveArithmetic.- infix(_:_:) in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df5e4 (   0x33c) protocol witness for static AdditiveArithmetic.+ infix(_:_:) in conformance <> SIMD3<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df920 (    0x2c) protocol witness for static AdditiveArithmetic.-= infix(_:_:) in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216df94c (   0x1f0) SIMD3<>._vjpSubscript(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dfb3c (   0x1a4) closure #1 in SIMD3<>._vjpSubscript(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dfce0 (    0x84) reverse-mode derivative of SIMD3.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dfd64 (   0x1f0) SIMD3<>._jvpSubscript(index:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216dff54 (   0x220) closure #1 in SIMD3<>._jvpSubscript(index:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e0174 (    0x84) forward-mode derivative of SIMD3.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e01f8 (   0x1c8) SIMD3<>._vjpSubscriptSetter(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e03c0 (   0x2e8) closure #1 in SIMD3<>._vjpSubscriptSetter(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e06a8 (    0xc4) reverse-mode derivative of SIMD3.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e076c (   0x340) static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e0aac (    0x28) reverse-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e0ad4 (   0x340) static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e0e14 (    0x28) forward-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e0e3c (   0x340) static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e117c (   0x5c8) closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e1744 (    0x28) reverse-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e176c (   0x340) static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e1aac (    0xac) closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e1b58 (    0x28) forward-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e1b80 (   0x5e4) static SIMD<>._vjpNegate(rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e2164 (    0x18) reverse-mode derivative of static SIMD<>.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e217c (   0x5e4) static SIMD<>._jvpNegate(rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e2760 (   0x5a4) closure #1 in static SIMD<>._vjpNegate(rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e2d04 (    0x18) forward-mode derivative of static SIMD<>.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e2d1c (   0x45c) static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e3178 (   0x408) closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e3580 (    0x18) reverse-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e3598 (   0x45c) static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e39f4 (   0x4fc) closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e3ef0 (    0x18) forward-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e3f08 (   0x454) static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e435c (   0xa6c) closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e4dc8 (    0x18) reverse-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e4de0 (   0x454) static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e5234 (   0x7a4) closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e59d8 (    0x18) forward-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e59f0 (   0x4cc) static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e5ebc (    0xb4) closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e5f70 (   0x244) SIMD<>.sum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e61b4 (    0x28) reverse-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e61dc (   0x4cc) static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e66a8 (    0x28) forward-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e66d0 (   0x4cc) static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e6b9c (   0x600) closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e719c (    0x28) reverse-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e71c4 (   0x4cc) static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e7690 (   0x4e4) closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e7b74 (    0x28) forward-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e7b9c (   0x4d0) static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e806c (    0xac) closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8118 (    0x28) reverse-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8140 (   0x4d0) static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8610 (    0x28) forward-mode derivative of static SIMD<>.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8638 (   0x4d0) static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8b08 (   0x1a8) closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8cb0 (    0x28) reverse-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e8cd8 (   0x4d0) static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e91a8 (   0x4e4) closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e968c (    0x28) forward-mode derivative of static SIMD<>.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e96b4 (   0x5c8) static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216e9c7c (   0x5fc) closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ea278 (    0x18) reverse-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ea290 (   0x5c0) static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ea850 (   0x754) closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216eafa4 (    0x18) forward-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216eafbc (   0x5c0) static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216eb57c (   0xc80) closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ec1fc (    0x18) reverse-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ec214 (   0x5c0) static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ec7d4 (   0xa68) closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ed23c (    0x18) forward-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ed254 (   0x5c0) static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ed814 (   0x61c) closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ede30 (    0x18) reverse-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ede48 (   0x5c8) static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ee410 (   0x754) closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216eeb64 (    0x18) forward-mode derivative of static SIMD<>.* infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216eeb7c (   0x5b8) static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216ef134 (   0x8f4) closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216efa28 (    0x18) reverse-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216efa40 (   0x5b8) static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216efff8 (   0x9a4) closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f099c (    0x18) forward-mode derivative of static SIMD<>./ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f09b4 (   0x2b8) static SIMD<>._vjpInit(repeating:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f0c6c (    0x9c) reverse-mode derivative of SIMD.init(repeating:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f0d08 (   0x2b8) static SIMD<>._jvpInit(repeating:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f0fc0 (   0x260) closure #1 in static SIMD<>._jvpInit(repeating:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1220 (    0xf0) forward-mode derivative of SIMD.init(repeating:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1310 (    0x60) forward-mode derivative of FloatingPoint.addingProduct(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1370 (    0x60) forward-mode derivative of FloatingPoint.squareRoot() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f13d0 (    0x60) forward-mode derivative of static FloatingPoint.maximum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1430 (    0x60) forward-mode derivative of SIMD2.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1490 (    0x60) forward-mode derivative of SIMD4.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f14f0 (    0x60) forward-mode derivative of SIMD8.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1550 (    0x60) forward-mode derivative of SIMD16.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f15b0 (    0x60) forward-mode derivative of SIMD32.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1610 (    0x60) forward-mode derivative of SIMD64.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1670 (    0x60) forward-mode derivative of SIMD3.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f16d0 (   0x134) closure #1 in SIMD<>.sum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1804 (   0x1c0) specialized Sequence.reduce<A>(into:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f19c4 (    0xa0) _ArrayBuffer._checkValidSubscriptMutating(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1a64 (     0x4) specialized Array<A>.DifferentiableView.base.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1a68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1a78 (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1aa0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1ab0 (     0x4) partial apply for closure #1 in Array<A>.DifferentiableView._jvpBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1ab4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1ac4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1ad4 (    0x3c) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1b10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1b20 (    0x18) partial apply for implicit closure #3 in static Array<A>.DifferentiableView<>.+ infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1b38 (    0x18) partial apply for thunk for @callee_guaranteed (@in_guaranteed A, @in_guaranteed A) -> (@out A, @error @owned Error) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1b50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1b60 (    0x18) partial apply for implicit closure #3 in static Array<A>.DifferentiableView<>.- infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1b78 (    0x30) partial apply for implicit closure #3 in static Array<A>.DifferentiableView<>.+ infix(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1ba8 (    0x18) thunk for @callee_guaranteed (@in_guaranteed A, @in_guaranteed A) -> (@out A, @error @owned Error)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1bc0 (    0x70) partial apply for thunk for @callee_guaranteed (@in_guaranteed A, @in_guaranteed A) -> (@out A, @error @owned Error) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1c30 (    0x18) type metadata accessor for Array<A>.DifferentiableView [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1c48 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f1c80 (     0xc) partial apply for pullback #1 <A>(_:) in Array<A>._vjpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1c8c (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1cb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f1cc4 (    0xac) partial apply for differential #1 <A>(_:) in Array<A>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1d70 (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@out A.Differentiable.TangentVector) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f1d98 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f1d9c (   0x400) partial apply for pullback #1 <A>(_:) in static Array<A>._vjpConcatenate(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f219c (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView, @owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f21c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f21c8 (    0x40) objectdestroy.80Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2208 (   0x20c) partial apply for differential #1 <A>(_:_:) in static Array<A>._jvpConcatenate(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2414 (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView, @guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f243c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f244c (    0xac) partial apply for closure #1 in Array<A>._vjpAppend(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f24f8 (    0x28) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@out A.Differentiable.TangentVector) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2520 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2530 (     0x8) partial apply for closure #1 in Array<A>._jvpAppend(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2538 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f2570 (    0x9c) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@in A.Differentiable.TangentVector, @inout [A.Differentiable.TangentVector]<A>.DifferentiableView) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f260c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f261c (   0x174) partial apply for closure #1 in static Array<A>._vjpAppend(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2790 (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@inout [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f27b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f27c8 (    0x78) partial apply for closure #1 in static Array<A>._jvpAppend(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2840 (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@inout [A.Differentiable.TangentVector]<A>.DifferentiableView, @guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2868 (   0x180) specialized Array.init(repeating:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f29e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f29f8 (     0x8) partial apply for closure #1 in static Array<A>._vjpInit(repeating:count:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2a00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2a10 (    0x5c) partial apply for closure #1 in static Array<A>._jvpInit(repeating:count:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2a6c (    0x90) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2afc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f2b34 (    0x18) partial apply for specialized pullback #1 <A><A1>(_:) in Array<A>._vjpDifferentiableMap<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2b4c (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A1.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2b74 (    0x18) partial apply for specialized differential #1 <A><A1>(_:) in Array<A>._jvpDifferentiableMap<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2b8c (    0x18) partial apply for specialized pullback #1 <A><A1>(_:) in Array<A>._vjpDifferentiableMap<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2ba4 (    0x10) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector) -> (@out A1.Differentiable.TangentVector, @out A.Differentiable.TangentVector) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2bb4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f2bec (    0x10) partial apply for specialized closure #1 in Array<A>._vjpDifferentiableReduce<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2bfc (    0x28) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector) -> (@out A1.Differentiable.TangentVector, @owned [A.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2c24 (    0x10) partial apply for specialized closure #1 in Array<A>._jvpDifferentiableReduce<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2c34 (    0x34) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector, @guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@out A1.Differentiable.TangentVector) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2c68 (    0x18) type metadata accessor for Optional<A>.TangentVector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2c80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2c90 (    0x14) partial apply for closure #1 in static Float._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2ca4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2cb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2cc4 (    0x14) partial apply for closure #1 in static Float._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2cd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2ce8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2cf8 (     0x4) partial apply for closure #1 in static Float._vjpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2cfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2d0c (     0x4) closure #1 in static Float._vjpMultiplyAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d10 (    0x18) partial apply for closure #1 in static Float._vjpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2d38 (     0x4) partial apply for closure #1 in static Float._jvpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2d4c (     0x4) closure #1 in static Float._jvpMultiplyAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d50 (    0x1c) partial apply for closure #1 in static Float._jvpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2d7c (     0x4) partial apply for closure #1 in static Float._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2d80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2d90 (    0x20) partial apply for closure #1 in static Float._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2db0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2dc0 (     0x4) partial apply for closure #1 in static Float._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2dc4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2dd4 (     0x4) closure #1 in static Float._jvpDivide(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2dd8 (    0x1c) partial apply for closure #1 in static Float._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2df4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2e04 (     0x4) partial apply for closure #1 in static Float._vjpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2e18 (     0x4) closure #1 in static Float._vjpDivideAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e1c (    0x24) partial apply for closure #1 in static Float._vjpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2e50 (     0x4) partial apply for closure #1 in static Float._jvpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2e64 (     0x4) closure #1 in static Float._jvpDivideAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e68 (    0x24) partial apply for closure #1 in static Float._jvpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2e8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2e9c (    0x14) partial apply for closure #1 in static Double._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2eb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2ec0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2ed0 (    0x14) partial apply for closure #1 in static Double._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2ee4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2ef4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f04 (     0x4) partial apply for closure #1 in static Double._vjpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f18 (     0x4) closure #1 in static Double._vjpMultiplyAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f1c (    0x18) partial apply for closure #1 in static Double._vjpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f44 (     0x4) partial apply for closure #1 in static Double._jvpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f58 (     0x4) closure #1 in static Double._jvpMultiplyAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f5c (    0x1c) partial apply for closure #1 in static Double._jvpMultiplyAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f88 (     0x4) partial apply for closure #1 in static Double._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2f8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2f9c (    0x20) partial apply for closure #1 in static Double._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2fbc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2fcc (     0x4) partial apply for closure #1 in static Double._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2fd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f2fe0 (     0x4) closure #1 in static Double._jvpDivide(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f2fe4 (    0x1c) partial apply for closure #1 in static Double._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3000 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3010 (     0x4) partial apply for closure #1 in static Double._vjpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3014 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3024 (     0x4) closure #1 in static Double._vjpDivideAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3028 (    0x24) partial apply for closure #1 in static Double._vjpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f304c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f305c (     0x4) partial apply for closure #1 in static Double._jvpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3060 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3070 (     0x4) closure #1 in static Double._jvpDivideAssign(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3074 (    0x24) partial apply for closure #1 in static Double._jvpDivideAssign(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3098 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f309c (    0x18) partial apply for closure #1 in FloatingPoint<>._vjpAddingProduct(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f30b4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f30ec (    0x38) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out A, @out A, @out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3124 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f3128 (     0x4) partial apply for closure #1 in FloatingPoint<>._vjpSquareRoot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f312c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f313c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f314c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f315c (    0x20) partial apply for closure #2 in static FloatingPoint<>._vjpMaximum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f317c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f318c (    0x20) partial apply for closure #1 in static FloatingPoint<>._vjpMaximum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f31ac (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f31b0 (    0x6c) partial apply for closure #1 in _jvpFma<A>(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f321c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f3220 (    0x18) partial apply for closure #1 in _vjpFma<A>(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3238 (    0x94) partial apply for closure #1 in FloatingPoint<>._vjpAddingProduct(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f32cc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f32d0 (     0xc) partial apply for closure #1 in _vjpRemainder<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f32dc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f32e0 (    0xbc) objectdestroy.268Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f339c (     0xc) partial apply for closure #1 in _vjpFmod<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f33a8 (    0x90) partial apply for closure #1 in _vjpRemainder<A>(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3438 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f343c (     0x4) partial apply for closure #1 in _jvpSqrt<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3440 (    0x58) partial apply for closure #1 in FloatingPoint<>._vjpSquareRoot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3498 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f34a8 (    0x20) partial apply for closure #1 in _jvpCeil<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f34c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f34d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f34e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f34f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f34fc (    0x88) objectdestroy.274Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3584 (     0x4) partial apply for closure #1 in _vjpSqrt<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3588 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3598 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f35a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f35b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f35c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f35d8 (     0x4) partial apply for closure #1 in _jvpFma(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f35dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f35ec (     0x4) closure #1 in _jvpFma(_:_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f35f0 (    0x18) partial apply for closure #1 in _jvpFma(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3608 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3618 (     0x4) partial apply for closure #1 in _vjpFma(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f361c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f362c (    0x14) partial apply for closure #1 in _vjpFma(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3640 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3650 (     0x4) partial apply for closure #1 in _vjpRemainder(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3654 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3664 (    0x18) partial apply for closure #1 in _vjpRemainder(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f367c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f368c (     0x4) partial apply for closure #1 in _vjpFmod(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3690 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f36a0 (    0x18) partial apply for closure #1 in _vjpFmod(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f36b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f36c8 (    0x10) partial apply for closure #1 in _jvpSqrt(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f36d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f36e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f36f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3708 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3718 (     0xc) partial apply for closure #1 in _jvpExp(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3724 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3734 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3744 (    0x1c) partial apply for closure #1 in _jvpExp2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3760 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3770 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3780 (     0xc) partial apply for closure #1 in _jvpLog(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f378c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f379c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f37ac (    0x1c) partial apply for closure #1 in _jvpLog10(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f37c8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f37d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f37e8 (    0x1c) partial apply for closure #1 in _jvpLog2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3804 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3814 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3824 (    0x2c) partial apply for closure #1 in _jvpSin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3850 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3860 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3870 (    0x30) partial apply for closure #1 in _jvpCos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f38a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f38b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f38c0 (    0x18) partial apply for closure #1 in _jvpTan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f38d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f38e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f38f8 (    0x1c) partial apply for closure #1 in _jvpAsin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3914 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3924 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3934 (    0x20) partial apply for closure #1 in _jvpAcos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3954 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3964 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3974 (    0x18) partial apply for closure #1 in _jvpAtan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f398c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f399c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f39ac (    0x2c) partial apply for closure #1 in _jvpSinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f39d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f39e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f39f8 (    0x2c) partial apply for closure #1 in _jvpCosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3a24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3a34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3a44 (    0x18) partial apply for closure #1 in _jvpTanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3a5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3a6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3a7c (    0x1c) partial apply for closure #1 in _jvpAsinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3a98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3aa8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3ab8 (    0x1c) partial apply for closure #1 in _jvpAcosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3ad4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3ae4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3af4 (    0x18) partial apply for closure #1 in _jvpAtanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3b0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3b1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3b2c (    0x2c) partial apply for closure #1 in _jvpExpm1(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3b58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3b68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3b78 (    0x14) partial apply for closure #1 in _jvpLog1p(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3b8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3b9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3bac (    0x40) partial apply for closure #1 in _jvpErf(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3bec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3bfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3c0c (    0x40) partial apply for closure #1 in _jvpErfc(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3c4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3c5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3c6c (     0xc) partial apply for closure #1 in _jvpExp(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3c78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3c88 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3c98 (    0x18) partial apply for closure #1 in _jvpExp2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3cb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3cc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3cd0 (     0xc) partial apply for closure #1 in _jvpLog(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3cdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3cec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3cfc (    0x18) partial apply for closure #1 in _jvpLog10(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3d14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3d24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3d34 (    0x18) partial apply for closure #1 in _jvpLog2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3d4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3d5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3d6c (    0x2c) partial apply for closure #1 in _jvpSin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3d98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3da8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3db8 (    0x30) partial apply for closure #1 in _jvpCos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3de8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3df8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e08 (    0x18) partial apply for closure #1 in _jvpTan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3e20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e40 (    0x1c) partial apply for closure #1 in _jvpAsin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3e5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e7c (     0x4) partial apply for closure #1 in _jvpAcos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3e80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3e90 (     0x4) closure #1 in _jvpAcos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3e94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3ea4 (    0x18) partial apply for closure #1 in _jvpAtan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3ebc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3ecc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3edc (    0x2c) partial apply for closure #1 in _jvpSinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3f08 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3f18 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3f28 (    0x2c) partial apply for closure #1 in _jvpCosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3f54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3f64 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3f74 (    0x18) partial apply for closure #1 in _jvpTanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3f8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3f9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3fac (    0x1c) partial apply for closure #1 in _jvpAsinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f3fc8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3fd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f3fe8 (    0x1c) partial apply for closure #1 in _jvpAcosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4004 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4014 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4024 (    0x18) partial apply for closure #1 in _jvpAtanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f403c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f404c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f405c (    0x2c) partial apply for closure #1 in _jvpExpm1(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4088 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4098 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f40a8 (    0x14) partial apply for closure #1 in _jvpLog1p(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f40bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f40cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f40dc (    0x3c) partial apply for closure #1 in _jvpErf(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4118 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4128 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4138 (    0x3c) partial apply for closure #1 in _jvpErfc(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4174 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4184 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4194 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f41f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4204 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4214 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4224 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4234 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4244 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4254 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4264 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4274 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4284 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4294 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f42f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4304 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4314 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4324 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4334 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4344 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4354 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4364 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4374 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4384 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4394 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f43f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4404 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4414 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4424 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4434 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4444 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4454 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4464 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4474 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4484 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4494 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f44f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4504 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4514 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4524 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4534 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4544 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4554 (     0x4) partial apply for closure #1 in _vjpAcos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4558 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4568 (     0x4) closure #1 in _vjpAcos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f456c (    0x20) partial apply for closure #1 in _jvpAcos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f458c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f459c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f45fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f460c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f461c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f462c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f463c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f464c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f465c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f466c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f467c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f468c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f469c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f46fc (     0x4) partial apply for closure #1 in _vjpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4700 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4710 (    0x64) partial apply for closure #1 in _vjpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4774 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4784 (     0x4) partial apply for closure #1 in _jvpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4788 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4798 (     0x4) closure #1 in _jvpPow(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f479c (    0x68) partial apply for closure #1 in _jvpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4804 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4814 (     0x4) partial apply for closure #1 in _vjpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4818 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4828 (    0x64) partial apply for closure #1 in _vjpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f488c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f489c (     0x4) partial apply for closure #1 in _jvpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f48a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f48b0 (     0x4) closure #1 in _jvpPow(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f48b4 (    0x68) partial apply for closure #1 in _jvpPow(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f491c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f492c (    0x18) partial apply for closure #1 in SIMD2<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4944 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4954 (    0x18) partial apply for closure #1 in SIMD2<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f496c (    0x28) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD2<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4994 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f49a4 (    0x18) partial apply for closure #1 in SIMD2<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f49bc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f49f4 (    0x28) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD2<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4a1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4a2c (    0x18) partial apply for closure #1 in SIMD4<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4a44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4a54 (    0x18) partial apply for closure #1 in SIMD4<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4a6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4a7c (    0x18) partial apply for closure #1 in SIMD4<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4a94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4aa4 (    0x18) partial apply for closure #1 in SIMD8<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4abc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4acc (    0x18) partial apply for closure #1 in SIMD8<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4ae4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4af4 (    0x18) partial apply for closure #1 in SIMD8<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4b0c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4b1c (    0x18) partial apply for closure #1 in SIMD16<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4b34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4b44 (    0x18) partial apply for closure #1 in SIMD16<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4b5c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4b6c (    0x18) partial apply for closure #1 in SIMD16<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4b84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4b94 (    0x18) partial apply for closure #1 in SIMD32<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4bac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4bbc (    0x18) partial apply for closure #1 in SIMD32<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4bd4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4be4 (    0x18) partial apply for closure #1 in SIMD32<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4bfc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4c0c (    0x18) partial apply for closure #1 in SIMD64<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4c24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4c34 (    0x18) partial apply for closure #1 in SIMD64<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4c4c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4c5c (    0x18) partial apply for closure #1 in SIMD64<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4c74 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4c84 (    0x18) partial apply for closure #1 in SIMD3<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4c9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4cac (    0x18) partial apply for closure #1 in SIMD3<>._jvpSubscript(index:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4cc4 (    0x18) partial apply for closure #1 in SIMD2<>._vjpSubscript(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4cdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4cec (    0x18) partial apply for closure #1 in SIMD3<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4d04 (    0x18) partial apply for closure #1 in SIMD2<>._vjpSubscriptSetter(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4d1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4d2c (    0xc0) partial apply for closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4dec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4dfc (    0x18) partial apply for closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4e14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4e24 (    0x30) partial apply for closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4e54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4e64 (    0x18) partial apply for closure #1 in static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4e7c (    0x34) partial apply for closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4eb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4ec0 (     0x4) partial apply for closure #1 in static SIMD<>._vjpNegate(rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4ec4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f4ed4 (     0x4) partial apply for closure #1 in static SIMD<>._jvpNegate(rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4ed8 (    0x24) partial apply for closure #1 in static SIMD<>._vjpNegate(rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4efc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f4f00 (    0x18) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4f18 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f4f1c (    0x18) partial apply for closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4f34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f4f38 (    0x18) partial apply for closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4f50 (    0x94) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f4fe4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f4fe8 (    0xbc) objectdestroy.1133Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f50a4 (    0x18) partial apply for closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f50bc (    0x74) partial apply for closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5130 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5140 (    0x18) partial apply for closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5158 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5168 (    0x2c) partial apply for closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5194 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f51a4 (    0x18) partial apply for closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f51bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f51cc (    0x2c) partial apply for closure #1 in static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f51f8 (    0x40) partial apply for closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5238 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5248 (    0x18) partial apply for closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5260 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5270 (    0x2c) partial apply for closure #1 in static SIMD<>._jvpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f529c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f52ac (    0x18) partial apply for closure #1 in static SIMD<>._vjpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f52c4 (    0x3c) partial apply for closure #1 in static SIMD<>._vjpAdd(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5300 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5310 (    0x2c) partial apply for closure #1 in static SIMD<>._jvpSubtract(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f533c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f5340 (    0x18) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5358 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f535c (    0x18) partial apply for closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5374 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f5378 (    0x18) partial apply for closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5390 (   0x130) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f54c0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f54c4 (    0x18) partial apply for closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f54dc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f54e0 (    0x18) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f54f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f54fc (   0x124) objectdestroy.1169Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5620 (    0x18) partial apply for closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5638 (   0x134) partial apply for closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f576c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f5770 (    0x18) partial apply for closure #1 in static SIMD<>._vjpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5788 (   0x128) partial apply for closure #1 in static SIMD<>._vjpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f58b0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f58b4 (   0x160) objectdestroy.1172Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5a14 (    0x18) partial apply for closure #1 in static SIMD<>._jvpDivide(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5a2c (   0x12c) partial apply for closure #1 in static SIMD<>._jvpMultiply(lhs:rhs:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5b58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5b68 (    0x34) partial apply for closure #1 in static SIMD<>._vjpInit(repeating:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5b9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f5bac (    0x10) partial apply for closure #1 in static SIMD<>._jvpInit(repeating:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5bbc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000002216f5bf4 (    0x94) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A.SIMDStorage.Scalar) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5c88 (     0x4) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5c8c (    0x54) lazy protocol witness table accessor for type AnyDerivative and conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5ce0 (     0x4) associated type witness table accessor for Differentiable.TangentVector : Differentiable in AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5ce4 (    0x54) lazy protocol witness table accessor for type AnyDerivative and conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5d38 (     0x4) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in AnyDerivative.OpaqueZero [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5d3c (    0x54) lazy protocol witness table accessor for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5d90 (     0x4) associated type witness table accessor for Differentiable.TangentVector : Differentiable in AnyDerivative.OpaqueZero [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5d94 (     0x4) base witness table accessor for Equatable in AnyDerivative.OpaqueZero [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5d98 (    0x54) lazy protocol witness table accessor for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5dec (     0x4) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5df0 (     0x4) associated type witness table accessor for Differentiable.TangentVector : Differentiable in AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5df4 (     0x4) base witness table accessor for Equatable in AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5df8 (    0x54) lazy protocol witness table accessor for type AnyDerivative and conformance AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5e4c (    0x64) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in [A]<A>.DifferentiableView [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5eb0 (    0x1c) associated type witness table accessor for Differentiable.TangentVector : Differentiable in [A]<A>.DifferentiableView [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5ecc (    0x48) base witness table accessor for Equatable in <> [A]<A>.DifferentiableView [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5f14 (    0x68) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <A> [A] [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5f7c (    0x1c) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <A> [A] [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5f98 (    0x1c) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5fb4 (    0x1c) associated type witness table accessor for Differentiable.TangentVector : Differentiable in A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5fd0 (    0x1c) base witness table accessor for Equatable in A?<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f5fec (    0x1c) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <A> A? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6008 (    0x1c) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <A> A? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6024 (     0xc) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in Float [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6030 (     0xc) associated type witness table accessor for Differentiable.TangentVector : Differentiable in Float [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f603c (     0xc) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in Double [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6048 (     0xc) associated type witness table accessor for Differentiable.TangentVector : Differentiable in Double [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6054 (    0x1c) base witness table accessor for Equatable in <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6070 (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6088 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f60a0 (    0x1c) base witness table accessor for Equatable in <> SIMD4<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f60bc (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD4<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f60d4 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD4<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f60ec (    0x1c) base witness table accessor for Equatable in <> SIMD8<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6108 (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD8<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6120 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD8<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6138 (    0x1c) base witness table accessor for Equatable in <> SIMD16<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6154 (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD16<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f616c (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD16<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6184 (    0x1c) base witness table accessor for Equatable in <> SIMD32<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f61a0 (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD32<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f61b8 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD32<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f61d0 (    0x1c) base witness table accessor for Equatable in <> SIMD64<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f61ec (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD64<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6204 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD64<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f621c (    0x1c) base witness table accessor for Equatable in <> SIMD3<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6238 (    0x18) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD3<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6250 (    0x38) associated type witness table accessor for Differentiable.TangentVector : AdditiveArithmetic in <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6288 (    0x18) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD3<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f62a0 (    0x3c) associated type witness table accessor for Differentiable.TangentVector : Differentiable in <> SIMD2<A> [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f62dc (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000002216f6320 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000002216f632c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000002216f6338 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000002216f6344 (    0x14) dispatch thunk of Differentiable.move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6358 (     0x4) initializeWithCopy for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f635c (    0x14) __swift_memcpy40_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6370 (     0x4) getEnumTagSinglePayload for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6374 (     0x4) storeEnumTagSinglePayload for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6378 (    0x10) type metadata accessor for AnyDifferentiable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6388 (    0x14) dispatch thunk of _AnyDerivativeBox._isEqual(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f639c (    0x14) dispatch thunk of _AnyDerivativeBox._isNotEqual(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f63b0 (    0x14) dispatch thunk of static _AnyDerivativeBox._zero.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f63c4 (    0x14) dispatch thunk of _AnyDerivativeBox._adding(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f63d8 (    0x14) dispatch thunk of _AnyDerivativeBox._subtracting(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f63ec (    0x14) dispatch thunk of _AnyDerivativeBox._move(by:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6400 (    0x14) dispatch thunk of _AnyDerivativeBox._typeErasedBase.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6414 (    0x14) dispatch thunk of _AnyDerivativeBox._unboxed<A>(to:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6428 (     0x8) type metadata instantiation function for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6430 (     0x4) type metadata completion function for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6434 (     0x4) initializeBufferWithCopyOfBuffer for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6438 (     0x4) destroy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f643c (     0x4) initializeWithCopy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6440 (     0x4) assignWithCopy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6444 (     0x4) initializeWithTake for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6448 (     0x4) assignWithTake for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f644c (     0x4) getEnumTagSinglePayload for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6450 (     0x4) storeEnumTagSinglePayload for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6454 (    0x34) initializeBufferWithCopyOfBuffer for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6488 (     0x4) destroy for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f648c (     0x4) initializeWithCopy for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6490 (    0x54) initializeWithCopy for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f64e4 (    0x28) assignWithCopy for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f650c (    0x3c) assignWithTake for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6548 (     0x4) getEnumTagSinglePayload for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f654c (    0x48) getEnumTagSinglePayload for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6594 (     0x4) storeEnumTagSinglePayload for AnyDerivative [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6598 (    0x48) storeEnumTagSinglePayload for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f65e0 (    0x10) type metadata accessor for AnyDerivative [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f65f0 (    0x10) type metadata accessor for AnyDerivative.OpaqueZero [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6600 (     0x8) type metadata instantiation function for Array<A>.DifferentiableView [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6608 (     0x8) type metadata instantiation function for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6610 (    0xac) type metadata completion function for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f66bc (   0x158) initializeBufferWithCopyOfBuffer for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6814 (    0xd4) destroy for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f68e8 (   0x100) initializeWithCopy for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f69e8 (   0x178) assignWithCopy for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6b60 (   0x100) initializeWithTake for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6c60 (   0x178) assignWithTake for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6dd8 (   0x1ac) getEnumTagSinglePayload for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f6f84 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f6f94 (   0x25c) storeEnumTagSinglePayload for Optional<A>.TangentVector [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f71f0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002216f7204 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002216f7218 (     0x8) type metadata instantiation function for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7220 (    0x90) type metadata completion function for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f72b0 (     0x4) initializeBufferWithCopyOfBuffer for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f72b4 (    0xb8) initializeBufferWithCopyOfBuffer for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f736c (     0x4) destroy for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7370 (    0x2c) destroy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f739c (     0x4) initializeWithCopy for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f73a0 (    0x50) initializeWithCopy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f73f0 (     0x4) assignWithCopy for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f73f4 (    0x50) assignWithCopy for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7444 (     0x4) initializeWithTake for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7448 (    0x50) initializeWithTake for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7498 (     0x4) assignWithTake for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f749c (    0x50) assignWithTake for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f74ec (     0x4) getEnumTagSinglePayload for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f74f0 (   0x150) getEnumTagSinglePayload for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7640 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000002216f7650 (     0x4) storeEnumTagSinglePayload for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7654 (   0x220) storeEnumTagSinglePayload for _ConcreteDerivativeBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7874 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002216f7888 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000002216f789c (    0x40) outlined assign with take of AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f78dc (    0x20) partial apply for closure #1 in SIMD<>.sum() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f78fc (    0x28) partial apply for closure #1 in differential #1 <A><A1>(_:) in Array<A>._jvpDifferentiableMap<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7924 (    0x2c) partial apply for thunk for @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector, @guaranteed @escaping @callee_guaranteed @substituted <A, B> (@in_guaranteed A) -> (@out B) for <A.Differentiable.TangentVectorA1.Differentiable.TangentVector>) -> (@out A1.Differentiable.TangentVector, @error @owned Error) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7950 (    0x2c) partial apply for thunk for @callee_guaranteed (@in_guaranteed A1.Differentiable.TangentVector, @guaranteed @escaping @callee_guaranteed @substituted <A, B> (@in_guaranteed A) -> (@out B) for <A1.Differentiable.TangentVectorA.Differentiable.TangentVector>) -> (@out A.Differentiable.TangentVector, @error @owned Error) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f797c (    0x2c) partial apply for thunk for @callee_guaranteed (@in_guaranteed A.Differentiable.TangentVector, @guaranteed @escaping @callee_guaranteed @substituted <A, B> (@in_guaranteed A) -> (@out B) for <A.Differentiable.TangentVectorA1.Differentiable.TangentVector>) -> (@out A1.Differentiable.TangentVector, @error @owned Error) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f79a8 (    0xb4) partial apply for implicit closure #1 in closure #1 in static Array<A>._vjpInit(repeating:count:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7a5c (    0x68) lazy protocol witness table accessor for type PartialRangeFrom<Int> and conformance PartialRangeFrom<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ac4 (    0x5c) outlined init with copy of AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b20 (    0x28) outlined destroy of AnyDerivative [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b48 (    0x30) __swift_instantiateGenericMetadata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b78 (     0x4) reverse-mode derivative of static Float.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b7c (     0x4) forward-mode derivative of static Float.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b80 (     0x4) reverse-mode derivative of static Double.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b84 (     0x4) forward-mode derivative of static Double.+ infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b88 (     0x4) closure #1 in _jvpAcos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b8c (     0x4) partial apply for closure #1 in _vjpAcos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b90 (     0x4) closure #1 in _vjpAcos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b94 (     0x4) Array<A>.DifferentiableView.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7b98 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7b9c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7ba0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7ba4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7ba8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bac (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bb0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bb4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bb8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bbc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bc0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bc4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bc8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bcc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bd0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bd4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bd8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bdc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7be0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7be4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7be8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bec (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bf0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bf4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bf8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7bfc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c00 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c04 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c08 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c0c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c10 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c14 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c18 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c1c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c20 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c24 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c28 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c2c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c30 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c38 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c3c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000002216f7c40 (     0x4) closure #1 in static Double._jvpMultiply(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c44 (     0x4) closure #1 in _jvpExp2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c48 (     0x4) closure #1 in _jvpExp2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c4c (     0x4) partial apply for closure #1 in _vjpExp2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c50 (     0x4) closure #1 in _vjpExp2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c54 (     0x4) partial apply for closure #1 in _vjpExp2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c58 (     0x4) closure #1 in _vjpExp2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c5c (     0x4) reverse-mode derivative of static Float.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c60 (     0x4) forward-mode derivative of static Float.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c64 (     0x4) reverse-mode derivative of static Double.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c68 (     0x4) forward-mode derivative of static Double.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c6c (     0x4) closure #1 in _vjpFma(_:_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c70 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD4<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c74 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD8<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c78 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD16<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c7c (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD32<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c80 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD64<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c84 (     0x4) protocol witness for Differentiable.move(by:) in conformance <> SIMD3<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c88 (     0x4) closure #1 in _jvpSqrt(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c8c (     0x4) partial apply for closure #1 in _vjpSqrt(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c90 (     0x4) closure #1 in _vjpSqrt(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c94 (     0x4) closure #1 in _jvpLog10(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c98 (     0x4) closure #1 in _jvpLog2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7c9c (     0x4) closure #1 in _jvpLog10(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ca0 (     0x4) closure #1 in _jvpLog2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ca4 (     0x4) partial apply for closure #1 in _vjpLog10(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ca8 (     0x4) closure #1 in _vjpLog10(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cac (     0x4) partial apply for closure #1 in _vjpLog2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cb0 (     0x4) closure #1 in _vjpLog2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cb4 (     0x4) partial apply for closure #1 in _vjpLog10(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cb8 (     0x4) closure #1 in _vjpLog10(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cbc (     0x4) partial apply for closure #1 in _vjpLog2(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cc0 (     0x4) closure #1 in _vjpLog2(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cc4 (     0x4) assignWithTake for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cc8 (     0x4) partial apply for closure #2 in static FloatingPoint<>._vjpMinimum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ccc (     0x4) partial apply for closure #1 in static FloatingPoint<>._vjpMinimum(_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cd0 (     0x4) closure #1 in _jvpAsin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cd4 (     0x4) partial apply for closure #1 in _vjpAsin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cd8 (     0x4) closure #1 in _vjpAsin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cdc (     0x4) partial apply for closure #1 in _jvpFloor<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ce0 (     0x4) partial apply for closure #1 in _jvpRound<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ce4 (     0x4) partial apply for closure #1 in _jvpTrunc<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ce8 (     0x4) partial apply for closure #1 in _vjpCeil<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cec (     0x4) partial apply for closure #1 in _vjpFloor<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cf0 (     0x4) partial apply for closure #1 in _vjpRound<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cf4 (     0x4) partial apply for closure #1 in _vjpTrunc<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cf8 (     0x4) type metadata completion function for _ConcreteDifferentiableBox [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7cfc (     0x4) closure #1 in static Double._vjpMultiply(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d00 (     0x4) closure #1 in _jvpLog(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d04 (     0x4) closure #1 in _jvpLog(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d08 (     0x4) partial apply for closure #1 in _vjpLog(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d0c (     0x4) closure #1 in _vjpLog(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d10 (     0x4) partial apply for closure #1 in _vjpLog(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d14 (     0x4) closure #1 in _vjpLog(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d18 (     0x4) closure #1 in _jvpCos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d1c (     0x4) closure #1 in _jvpCos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d20 (     0x4) partial apply for closure #1 in _vjpCos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d24 (     0x4) closure #1 in _vjpCos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d28 (     0x4) partial apply for closure #1 in _vjpCos(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d2c (     0x4) closure #1 in _vjpCos(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d30 (     0x4) closure #1 in static Float._vjpNegate(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d34 (     0x4) closure #1 in static Double._vjpNegate(x:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d38 (     0x4) partial apply for closure #1 in pullback #1 <A><A1>(_:) in Array<A>._vjpDifferentiableMap<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d3c (     0x4) closure #1 in _jvpSin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d40 (     0x4) closure #1 in _jvpSinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d44 (     0x4) closure #1 in _jvpCosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d48 (     0x4) closure #1 in _jvpExpm1(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d4c (     0x4) closure #1 in _jvpSin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d50 (     0x4) closure #1 in _jvpSinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d54 (     0x4) closure #1 in _jvpCosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d58 (     0x4) closure #1 in _jvpExpm1(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d5c (     0x4) partial apply for closure #1 in _vjpSin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d60 (     0x4) closure #1 in _vjpSin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d64 (     0x4) partial apply for closure #1 in _vjpSinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d68 (     0x4) closure #1 in _vjpSinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d6c (     0x4) partial apply for closure #1 in _vjpCosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d70 (     0x4) closure #1 in _vjpCosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d74 (     0x4) partial apply for closure #1 in _vjpExpm1(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d78 (     0x4) closure #1 in _vjpExpm1(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d7c (     0x4) partial apply for closure #1 in _vjpSin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d80 (     0x4) closure #1 in _vjpSin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d84 (     0x4) partial apply for closure #1 in _vjpSinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d88 (     0x4) closure #1 in _vjpSinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d8c (     0x4) partial apply for closure #1 in _vjpCosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d90 (     0x4) closure #1 in _vjpCosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d94 (     0x4) partial apply for closure #1 in _vjpExpm1(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d98 (     0x4) closure #1 in _vjpExpm1(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7d9c (     0x4) initializeBufferWithCopyOfBuffer for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7da0 (     0x4) closure #1 in _jvpTan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7da4 (     0x4) closure #1 in _jvpTan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7da8 (     0x4) partial apply for closure #1 in _vjpTan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dac (     0x4) closure #1 in _vjpTan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7db0 (     0x4) partial apply for closure #1 in _vjpTan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7db4 (     0x4) closure #1 in _vjpTan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7db8 (     0x4) destroy for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dbc (     0x4) closure #1 in _jvpAsinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dc0 (     0x4) closure #1 in _jvpAcosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dc4 (     0x4) partial apply for closure #1 in _vjpAsinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dc8 (     0x4) closure #1 in _vjpAsinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dcc (     0x4) partial apply for closure #1 in _vjpAcosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dd0 (     0x4) closure #1 in _vjpAcosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dd4 (     0x4) closure #1 in _jvpAtan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dd8 (     0x4) closure #1 in _jvpAtan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ddc (     0x4) partial apply for closure #1 in _vjpAtan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7de0 (     0x4) closure #1 in _vjpAtan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7de4 (     0x4) partial apply for closure #1 in _vjpAtan(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7de8 (     0x4) closure #1 in _vjpAtan(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dec (     0x4) closure #1 in _jvpErf(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7df0 (     0x4) closure #1 in _jvpErfc(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7df4 (     0x4) closure #1 in _jvpErf(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7df8 (     0x4) closure #1 in _jvpErfc(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7dfc (     0x4) partial apply for closure #1 in _vjpErf(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e00 (     0x4) closure #1 in _vjpErf(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e04 (     0x4) partial apply for closure #1 in _vjpErfc(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e08 (     0x4) closure #1 in _vjpErfc(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e0c (     0x4) partial apply for closure #1 in _vjpErf(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e10 (     0x4) closure #1 in _vjpErf(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e14 (     0x4) partial apply for closure #1 in _vjpErfc(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e18 (     0x4) closure #1 in _vjpErfc(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e1c (     0x4) reverse-mode derivative of static Float.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e20 (     0x4) forward-mode derivative of static Float.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e24 (     0x4) reverse-mode derivative of static Double.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e28 (     0x4) forward-mode derivative of static Double.- prefix(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e2c (     0x4) closure #1 in _jvpExp(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e30 (     0x4) closure #1 in _jvpExp(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e34 (     0x4) partial apply for closure #1 in _vjpExp(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e38 (     0x4) closure #1 in _vjpExp(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e3c (     0x4) partial apply for closure #1 in _vjpExp(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e40 (     0x4) closure #1 in _vjpExp(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e44 (    0x10) forward-mode derivative of static FloatingPoint.minimum(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e54 (     0x4) closure #1 in static Float._vjpDivide(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e58 (     0x4) closure #1 in static Double._vjpDivide(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e5c (     0x4) closure #1 in _vjpRemainder(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e60 (     0x4) closure #1 in _vjpFmod(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e64 (     0x4) closure #1 in _vjpPow(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e68 (     0x4) closure #1 in _vjpPow(_:_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e6c (     0x4) closure #1 in _jvpAtanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e70 (     0x4) closure #1 in _jvpAtanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e74 (     0x4) partial apply for closure #1 in _vjpAtanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e78 (     0x4) closure #1 in _vjpAtanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e7c (     0x4) partial apply for closure #1 in _vjpAtanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e80 (     0x4) closure #1 in _vjpAtanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e84 (     0x4) static AnyDerivative.OpaqueZero.- infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e88 (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e8c (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A.Differentiable.TangentVector]<A>.DifferentiableView)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e90 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@owned [A1.Differentiable.TangentVector]<A>.DifferentiableView) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e94 (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed [A.Differentiable.TangentVector]<A>.DifferentiableView) -> (@out A.Differentiable.TangentVector)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e98 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD2<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7e9c (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD4<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ea0 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD4<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ea4 (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD4<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ea8 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD8<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7eac (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD8<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7eb0 (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD8<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7eb4 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD16<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7eb8 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD16<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ebc (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD16<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ec0 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD32<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ec4 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD32<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ec8 (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD32<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ecc (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD64<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ed0 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD64<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ed4 (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD64<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ed8 (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A) -> (@out SIMD3<A>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7edc (     0x4) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed SIMD3<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ee0 (     0x4) partial apply for autodiff self-reordering reabstraction thunk for @escaping @callee_guaranteed (@inout SIMD3<A>) -> (@out A) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ee4 (     0x4) assignWithCopy for AnyDifferentiable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ee8 (     0x4) closure #1 in static Float._jvpMultiply(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7eec (     0x4) reverse-mode derivative of static Float.-= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ef0 (     0x4) forward-mode derivative of static Float.-= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ef4 (     0x4) reverse-mode derivative of static Double.-= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7ef8 (     0x4) forward-mode derivative of static Double.-= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7efc (     0x4) partial apply for closure #1 in Array<A>.DifferentiableView._vjpBase() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f00 (     0x4) partial apply for closure #1 in static Array<A>.DifferentiableView._vjpInit(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f04 (     0x4) partial apply for closure #1 in static Array<A>.DifferentiableView._jvpInit(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f08 (     0x4) closure #1 in static Float._vjpMultiply(lhs:rhs:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f0c (     0x4) closure #1 in _jvpAsin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f10 (     0x4) partial apply for closure #1 in _vjpAsin(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f14 (     0x4) closure #1 in _vjpAsin(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f18 (     0x4) reverse-mode derivative of Float.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f1c (     0x4) forward-mode derivative of Float.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f20 (     0x4) reverse-mode derivative of Double.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f24 (     0x4) forward-mode derivative of Double.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f28 (     0x4) ceilTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f2c (     0x4) floorTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f30 (     0x4) roundTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f34 (     0x4) truncTJfSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f38 (     0x4) ceilTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f3c (     0x4) floorTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f40 (     0x4) roundTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f44 (     0x4) truncTJrSpSr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f48 (     0x4) reverse-mode derivative of static Float.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f4c (     0x4) forward-mode derivative of static Float.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f50 (     0x4) reverse-mode derivative of static Double.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f54 (     0x4) forward-mode derivative of static Double.+= infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f58 (     0x4) closure #1 in _jvpLog1p(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f5c (     0x4) closure #1 in _jvpLog1p(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f60 (     0x4) partial apply for closure #1 in _vjpLog1p(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f64 (     0x4) closure #1 in _vjpLog1p(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f68 (     0x4) partial apply for closure #1 in _vjpLog1p(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f6c (     0x4) closure #1 in _vjpLog1p(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f70 (     0x4) closure #1 in _jvpTanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f74 (     0x4) closure #1 in _jvpTanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f78 (     0x4) partial apply for closure #1 in _vjpTanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f7c (     0x4) closure #1 in _vjpTanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f80 (     0x4) partial apply for closure #1 in _vjpTanh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f84 (     0x4) closure #1 in _vjpTanh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f88 (     0x4) closure #1 in _jvpAsinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f8c (     0x4) closure #1 in _jvpAcosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f90 (     0x4) partial apply for closure #1 in _vjpAsinh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f94 (     0x4) closure #1 in _vjpAsinh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f98 (     0x4) partial apply for closure #1 in _vjpAcosh(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002216f7f9c (     0x4) closure #1 in _vjpAcosh(_:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000002216f7fa0 (   0x970) __TEXT __auth_stubs
                0x00000002216f7fa0 (    0x10) DYLD-STUB$$dispatch thunk of BinaryFloatingPoint.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f7fb0 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.squareRoot() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f7fc0 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.addingProduct(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f7fd0 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.truncatingRemainder(dividingBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f7fe0 (    0x10) DYLD-STUB$$dispatch thunk of static FloatingPoint./ infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f7ff0 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.isNaN.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8000 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.rounded(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8010 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.remainder(dividingBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8020 (    0x10) DYLD-STUB$$dispatch thunk of FloatingPoint.init(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8030 (    0x10) DYLD-STUB$$BidirectionalCollection.reversed() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8040 (    0x10) DYLD-STUB$$dispatch thunk of static Comparable.> infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8050 (    0x10) DYLD-STUB$$dispatch thunk of static Comparable.<= infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8060 (    0x10) DYLD-STUB$$MutableCollection.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8070 (    0x10) DYLD-STUB$$dispatch thunk of static Equatable.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8080 (    0x10) DYLD-STUB$$String.init<A>(reflecting:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8090 (    0x10) DYLD-STUB$$String.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80a0 (    0x10) DYLD-STUB$$Sequence.map<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80b0 (    0x10) DYLD-STUB$$Sequence.reduce<A>(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80c0 (    0x10) DYLD-STUB$$Sequence.reversed() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80d0 (    0x10) DYLD-STUB$$Array.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80e0 (    0x10) DYLD-STUB$$Array.customMirror.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f80f0 (    0x10) DYLD-STUB$$Array._checkSubscript(_:wasNativeTypeChecked:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8100 (    0x10) DYLD-STUB$$Array.reserveCapacity(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8110 (    0x10) DYLD-STUB$$static Array.+ infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8120 (    0x10) DYLD-STUB$$Array._makeMutableAndUnique() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8130 (    0x10) DYLD-STUB$$static Array._allocateUninitialized(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8140 (    0x10) DYLD-STUB$$Array._hoistableIsNativeTypeChecked() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8150 (    0x10) DYLD-STUB$$static Array.+= infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8160 (    0x10) DYLD-STUB$$Array.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8170 (    0x10) DYLD-STUB$$Array.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8180 (    0x10) DYLD-STUB$$Array.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8190 (    0x10) DYLD-STUB$$type metadata accessor for Array [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81a0 (    0x10) DYLD-STUB$$static Array<A>.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81b0 (    0x10) DYLD-STUB$$Array.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81c0 (    0x10) DYLD-STUB$$Array.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81d0 (    0x10) DYLD-STUB$$Array.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81e0 (    0x10) DYLD-STUB$$dispatch thunk of static Numeric.* infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f81f0 (    0x10) DYLD-STUB$$RandomAccessCollection<>.indices.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8200 (    0x10) DYLD-STUB$$Collection.map<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8210 (    0x10) DYLD-STUB$$Collection.isEmpty.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8220 (    0x10) DYLD-STUB$$Collection.dropFirst(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8230 (    0x10) DYLD-STUB$$RangeReplaceableCollection<>.removeLast() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8240 (    0x10) DYLD-STUB$$RangeReplaceableCollection<>.removeLast(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8250 (    0x10) DYLD-STUB$$Optional.customMirror.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8260 (    0x10) DYLD-STUB$$type metadata accessor for Optional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8270 (    0x10) DYLD-STUB$$type metadata accessor for ArraySlice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8280 (    0x10) DYLD-STUB$$dispatch thunk of SIMDStorage.scalarCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8290 (    0x10) DYLD-STUB$$dispatch thunk of SIMDStorage.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82a0 (    0x10) DYLD-STUB$$dispatch thunk of SIMDStorage.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82b0 (    0x10) DYLD-STUB$$dispatch thunk of SIMDStorage.subscript.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82c0 (    0x10) DYLD-STUB$$_StringGuts.grow(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82d0 (    0x10) DYLD-STUB$$Zip2Sequence.makeIterator() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82e0 (    0x10) DYLD-STUB$$Zip2Sequence.Iterator.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f82f0 (    0x10) DYLD-STUB$$type metadata accessor for Zip2Sequence.Iterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8300 (    0x10) DYLD-STUB$$type metadata accessor for Zip2Sequence [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8310 (    0x10) DYLD-STUB$$_ArrayBuffer._getElementSlowPath(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8320 (    0x10) DYLD-STUB$$dispatch thunk of static SignedNumeric.- prefix(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8330 (    0x10) DYLD-STUB$$_assertionFailure(_:_:file:line:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8340 (    0x10) DYLD-STUB$$_assertionFailure(_:_:file:line:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8350 (    0x10) DYLD-STUB$$dispatch thunk of static AdditiveArithmetic.+ infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8360 (    0x10) DYLD-STUB$$dispatch thunk of static AdditiveArithmetic.- infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8370 (    0x10) DYLD-STUB$$dispatch thunk of static AdditiveArithmetic.+= infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8380 (    0x10) DYLD-STUB$$dispatch thunk of static AdditiveArithmetic.zero.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8390 (    0x10) DYLD-STUB$$_fatalErrorMessage(_:_:file:line:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83a0 (    0x10) DYLD-STUB$$dispatch thunk of CustomStringConvertible.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83b0 (    0x10) DYLD-STUB$$type metadata accessor for FloatingPointRoundingRule [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83c0 (    0x10) DYLD-STUB$$dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83d0 (    0x10) DYLD-STUB$$dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83e0 (    0x10) DYLD-STUB$$zip<A, B>(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f83f0 (    0x10) DYLD-STUB$$type metadata accessor for SIMD2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8400 (    0x10) DYLD-STUB$$type metadata accessor for SIMD3 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8410 (    0x10) DYLD-STUB$$type metadata accessor for SIMD4 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8420 (    0x10) DYLD-STUB$$type metadata accessor for SIMD8 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8430 (    0x10) DYLD-STUB$$Mirror.init(reflecting:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8440 (    0x10) DYLD-STUB$$type metadata accessor for SIMD16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8450 (    0x10) DYLD-STUB$$type metadata accessor for SIMD32 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8460 (    0x10) DYLD-STUB$$type metadata accessor for SIMD64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8470 (    0x10) DYLD-STUB$$_swift_isClassOrObjCExistentialType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8480 (    0x10) DYLD-STUB$$acos [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8490 (    0x10) DYLD-STUB$$acosf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84a0 (    0x10) DYLD-STUB$$acosh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84b0 (    0x10) DYLD-STUB$$acoshf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84c0 (    0x10) DYLD-STUB$$asin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84d0 (    0x10) DYLD-STUB$$asinf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84e0 (    0x10) DYLD-STUB$$asinh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f84f0 (    0x10) DYLD-STUB$$asinhf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8500 (    0x10) DYLD-STUB$$atan [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8510 (    0x10) DYLD-STUB$$atanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8520 (    0x10) DYLD-STUB$$atanh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8530 (    0x10) DYLD-STUB$$atanhf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8540 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8550 (    0x10) DYLD-STUB$$cos [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8560 (    0x10) DYLD-STUB$$cosf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8570 (    0x10) DYLD-STUB$$cosh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8580 (    0x10) DYLD-STUB$$coshf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8590 (    0x10) DYLD-STUB$$erf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85a0 (    0x10) DYLD-STUB$$erfc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85b0 (    0x10) DYLD-STUB$$erfcf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85c0 (    0x10) DYLD-STUB$$erff [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85d0 (    0x10) DYLD-STUB$$exp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85e0 (    0x10) DYLD-STUB$$exp2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f85f0 (    0x10) DYLD-STUB$$exp2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8600 (    0x10) DYLD-STUB$$expf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8610 (    0x10) DYLD-STUB$$expm1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8620 (    0x10) DYLD-STUB$$expm1f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8630 (    0x10) DYLD-STUB$$fma [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8640 (    0x10) DYLD-STUB$$fmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8650 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8660 (    0x10) DYLD-STUB$$log10 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8670 (    0x10) DYLD-STUB$$log10f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8680 (    0x10) DYLD-STUB$$log1p [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8690 (    0x10) DYLD-STUB$$log1pf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86a0 (    0x10) DYLD-STUB$$log2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86b0 (    0x10) DYLD-STUB$$log2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86c0 (    0x10) DYLD-STUB$$logf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86d0 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86e0 (    0x10) DYLD-STUB$$pow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f86f0 (    0x10) DYLD-STUB$$powf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8700 (    0x10) DYLD-STUB$$remainder [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8710 (    0x10) DYLD-STUB$$sin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8720 (    0x10) DYLD-STUB$$sinf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8730 (    0x10) DYLD-STUB$$sinh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8740 (    0x10) DYLD-STUB$$sinhf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8750 (    0x10) DYLD-STUB$$swift_allocBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8760 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8770 (    0x10) DYLD-STUB$$swift_allocateGenericValueMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8780 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8790 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87a0 (    0x10) DYLD-STUB$$swift_checkMetadataState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87b0 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87c0 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87d0 (    0x10) DYLD-STUB$$swift_getAssociatedConformanceWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87e0 (    0x10) DYLD-STUB$$swift_getAssociatedTypeWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f87f0 (    0x10) DYLD-STUB$$swift_getCanonicalSpecializedMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8800 (    0x10) DYLD-STUB$$swift_getDynamicType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8810 (    0x10) DYLD-STUB$$swift_getFunctionTypeMetadata1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8820 (    0x10) DYLD-STUB$$swift_getFunctionTypeMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8830 (    0x10) DYLD-STUB$$swift_getGenericMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8840 (    0x10) DYLD-STUB$$swift_getTupleTypeMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8850 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8860 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContextInMetadataState2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8870 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8880 (    0x10) DYLD-STUB$$swift_initStructMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8890 (    0x10) DYLD-STUB$$swift_makeBoxUnique [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88a0 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88b0 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88c0 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88d0 (    0x10) DYLD-STUB$$tan [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88e0 (    0x10) DYLD-STUB$$tanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f88f0 (    0x10) DYLD-STUB$$tanh [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002216f8900 (    0x10) DYLD-STUB$$tanhf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000002216f8910 (   0xa50) __TEXT __const
                0x00000002216f8940 (    0x1c) protocol conformance descriptor for AnyDifferentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f895c (    0x28) protocol conformance descriptor for AnyDifferentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8984 (    0x10) protocol conformance descriptor for _ConcreteDerivativeBox<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8994 (    0x1c) protocol conformance descriptor for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f89b0 (    0x50) protocol conformance descriptor for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8a00 (    0x28) protocol conformance descriptor for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8a28 (    0x1c) protocol conformance descriptor for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8a44 (    0x50) protocol conformance descriptor for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8a94 (    0x28) protocol conformance descriptor for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8abc (    0x28) protocol conformance descriptor for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8ae4 (    0x1c) protocol conformance descriptor for [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8b00 (    0x34) protocol conformance descriptor for <> [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8b34 (    0x30) protocol conformance descriptor for [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8b64 (    0x28) protocol conformance descriptor for [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8b8c (    0x28) protocol conformance descriptor for [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8bb4 (    0x5c) protocol conformance descriptor for <> [A]<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8c10 (    0x28) protocol conformance descriptor for <A> [A] [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8c38 (    0x1c) protocol conformance descriptor for A?<A>.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8c54 (    0x50) protocol conformance descriptor for A?<A>.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8ca4 (    0x28) protocol conformance descriptor for A?<A>.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8ccc (    0x28) protocol conformance descriptor for <A> A? [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8cf4 (    0x28) protocol conformance descriptor for A?<A>.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8d1c (    0x10) protocol conformance descriptor for Float [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8d2c (    0x28) protocol conformance descriptor for Double [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8d54 (    0x60) protocol conformance descriptor for <> SIMD2<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8db4 (    0x40) protocol conformance descriptor for <> SIMD2<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8df4 (    0x60) protocol conformance descriptor for <> SIMD4<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8e54 (    0x40) protocol conformance descriptor for <> SIMD4<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8e94 (    0x60) protocol conformance descriptor for <> SIMD8<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8ef4 (    0x40) protocol conformance descriptor for <> SIMD8<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8f34 (    0x60) protocol conformance descriptor for <> SIMD16<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8f94 (    0x40) protocol conformance descriptor for <> SIMD16<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f8fd4 (    0x60) protocol conformance descriptor for <> SIMD32<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9034 (    0x40) protocol conformance descriptor for <> SIMD32<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9074 (    0x60) protocol conformance descriptor for <> SIMD64<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f90d4 (    0x40) protocol conformance descriptor for <> SIMD64<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9114 (    0x60) protocol conformance descriptor for <> SIMD3<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9174 (    0x40) protocol conformance descriptor for <> SIMD3<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for AnyDerivative.customMirror [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for AnyDerivative.base [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for AnyDifferentiable.customMirror [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for AnyDifferentiable.base [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for _ConcreteDerivativeBox._typeErasedBase [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for Array<A>.DifferentiableView.description [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for Array<A>.DifferentiableView.customMirror [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for Array<A>.DifferentiableView<>.subscript(_:) [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b4 (     0x4) property descriptor for Optional<A>.TangentVector.customMirror [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002216f91b8 (     0x8) property descriptor for _ConcreteDerivativeBox._base [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f91c0 (     0x4) property descriptor for AnyDerivative._box [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f91c4 (    0x84) property descriptor for Optional<A>.TangentVector.value [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9248 (    0x20) __unnamed_6 [NameNList, MangledNameNList, NList] 
                0x00000002216f9268 (    0x38) generic type metadata pattern for _ConcreteDerivativeBox [NameNList, MangledNameNList, NList] 
                0x00000002216f92a0 (    0x28) __unnamed_8 [NameNList, MangledNameNList, NList] 
                0x00000002216f92c8 (    0x18) generic type metadata pattern for Array<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x00000002216f92e0 (     0x8) __unnamed_9 [NameNList, MangledNameNList, NList] 
                0x00000002216f92e8 (    0x18) generic type metadata pattern for Optional<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x00000002216f9300 (    0x30) __unnamed_11 [NameNList, MangledNameNList, NList] 
                0x00000002216f9330 (    0x18) generic type metadata pattern for _ConcreteDifferentiableBox [NameNList, MangledNameNList, NList] 
                0x00000002216f9348 (    0x10) protocol conformance descriptor for _ConcreteDifferentiableBox<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9358 (     0x8) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002216f9360 (   0x84c) __TEXT __swift5_typeref
                0x00000002216f9360 (     0x4) symbolic yyc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9364 (     0xc) symbolic xq_Iergnr_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9370 (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9372 (     0x4) symbolic B0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9376 (     0x4) symbolic q_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f937a (     0x4) symbolic B1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f937e (    0x10) symbolic xq_q0_Iergnnr_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f938e (     0x4) symbolic q0_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9392 (     0x4) symbolic B2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9396 (    0x14) symbolic xq_q0_q1_Iergnnnr_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93aa (     0x4) symbolic q1_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93ae (     0x4) symbolic B3 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93b2 (     0x6) symbolic ypXp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93b8 (    0x22) symbolic 13TangentVector_____Qz_____Iegnr_ 16_Differentiation14DifferentiableP AA13AnyDerivativeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93da (     0xe) symbolic x_____Iegnr_ 16_Differentiation13AnyDerivativeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93e8 (     0xe) symbolic _____y_____G 16_Differentiation22_ConcreteDerivativeBoxV AA03AnyC0V10OpaqueZeroV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f93f6 (    0x28) symbolic _____y13TangentVector_____Qz_GAEIeggo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f941e (     0x6) symbolic xXMT [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9424 (     0x6) symbolic SayxG [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f942a (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f942e (    0x28) symbolic 13TangentVector_____Qz_____yAC_GIegno_ 16_Differentiation14DifferentiableP SaA2aBRzlE0B4ViewV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9456 (    0x28) symbolic _____y13TangentVector_____Qz_GADIeggr_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f947e (    0x2a) symbolic _____y13TangentVector_____Qz_GA2EIeggoo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f94a8 (    0x2a) symbolic _____y13TangentVector_____Qz_GA2EIegggo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f94d2 (    0x28) symbolic _____y13TangentVector_____Qz_GADIeglr_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f94fa (    0x28) symbolic _____y13TangentVector_____Qz_GADIegln_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9522 (    0x28) symbolic _____y13TangentVector_____Qz_GAEIeglo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f954a (    0x28) symbolic _____y13TangentVector_____Qz_GAEIeglg_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9572 (    0x24) symbolic Say13TangentVector_____QzAaBQyd__cG 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9596 (     0x6) symbolic qd__ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f959c (    0x32) symbolic _____y13TangentVector_____Qyd___GAAyAbCQz_GIeggo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f95ce (    0x24) symbolic Say13TangentVector_____Qyd__AaBQzcG 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f95f2 (    0x32) symbolic _____y13TangentVector_____Qz_GAAyAbCQyd___GIeggo_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9624 (    0x28) symbolic 13TangentVector_____Qyd__AcaBQzIegnrr_ 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f964c (    0x28) symbolic Say13TangentVector_____Qyd___AaBQztACcG 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9674 (    0x30) symbolic 13TangentVector_____Qyd_______yAaBQz_GACIegnor_ 16_Differentiation14DifferentiableP SaA2aBRzlE0B4ViewV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f96a4 (    0x28) symbolic Say13TangentVector_____Qyd__AC_AaBQztcG 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f96cc (    0x30) symbolic _____y13TangentVector_____Qz_GAbCQyd__AFIeggnr_ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f96fc (     0x4) symbolic Sf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9700 (     0x4) symbolic Sd [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9704 (     0xe) symbolic xxxxIegnrrr_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9712 (    0x10) symbolic x_____yxGIegnr_ s5SIMD2V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9722 (    0x10) symbolic _____yxGxIegnr_ s5SIMD2V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9732 (    0x10) symbolic _____yxGxIeglr_ s5SIMD2V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9742 (    0x10) symbolic x_____yxGIegnr_ s5SIMD4V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9752 (    0x10) symbolic _____yxGxIegnr_ s5SIMD4V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9762 (    0x10) symbolic _____yxGxIeglr_ s5SIMD4V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9772 (    0x10) symbolic x_____yxGIegnr_ s5SIMD8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9782 (    0x10) symbolic _____yxGxIegnr_ s5SIMD8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9792 (    0x10) symbolic _____yxGxIeglr_ s5SIMD8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97a2 (    0x10) symbolic x_____yxGIegnr_ s6SIMD16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97b2 (    0x10) symbolic _____yxGxIegnr_ s6SIMD16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97c2 (    0x10) symbolic _____yxGxIeglr_ s6SIMD16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97d2 (    0x10) symbolic x_____yxGIegnr_ s6SIMD32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97e2 (    0x10) symbolic _____yxGxIegnr_ s6SIMD32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f97f2 (    0x10) symbolic _____yxGxIeglr_ s6SIMD32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9802 (    0x10) symbolic x_____yxGIegnr_ s6SIMD64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9812 (    0x10) symbolic _____yxGxIegnr_ s6SIMD64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9822 (    0x10) symbolic _____yxGxIeglr_ s6SIMD64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9832 (    0x10) symbolic x_____yxGIegnr_ s5SIMD3V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9842 (    0x10) symbolic _____yxGxIegnr_ s5SIMD3V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9852 (    0x10) symbolic _____yxGxIeglr_ s5SIMD3V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9862 (    0x10) symbolic 6Scalar_____Qz s11SIMDStorageP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9872 (    0x16) symbolic 6Scalar_____QzxIegnr_ s11SIMDStorageP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9888 (     0x8) associated conformance 16_Differentiation17AnyDifferentiableVAA0C0AA13TangentVectorAaDP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9890 (     0x8) associated conformance 16_Differentiation17AnyDifferentiableVAA0C0AA13TangentVectorAaDP_AaD [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9898 (     0x6) symbolic _____ 16_Differentiation13AnyDerivativeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f989e (     0x6) symbolic _____ 16_Differentiation17AnyDifferentiableV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98a4 (    0x26) symbolic $s16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98ca (     0x8) associated conformance 16_Differentiation13AnyDerivativeV10OpaqueZeroVAA14DifferentiableAA13TangentVectorAaFP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98d2 (     0x8) associated conformance 16_Differentiation13AnyDerivativeV10OpaqueZeroVAA14DifferentiableAA13TangentVectorAaFP_AaF [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98da (     0x6) symbolic _____ 16_Differentiation13AnyDerivativeV10OpaqueZeroV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98e0 (     0x8) associated conformance 16_Differentiation13AnyDerivativeV10OpaqueZeroVs18AdditiveArithmeticAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98e8 (     0x8) associated conformance 16_Differentiation13AnyDerivativeVAA14DifferentiableAA13TangentVectorAaDP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98f0 (     0x8) associated conformance 16_Differentiation13AnyDerivativeVAA14DifferentiableAA13TangentVectorAaDP_AaD [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f98f8 (     0x8) associated conformance 16_Differentiation13AnyDerivativeVs18AdditiveArithmeticAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9900 (     0x8) associated conformance Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewVyx_GAabA13TangentVectorAaBP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9908 (     0x8) associated conformance Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewVyx_GAabA13TangentVectorAaBP_AaB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9910 (    0x20) symbolic _____y13TangentVector_____Qz_G Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV AaBP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9930 (     0x6) symbolic _____ Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9936 (    0x20) symbolic $ss25ExpressibleByArrayLiteralP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9956 (     0x8) associated conformance Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewVyx_Gs18AdditiveArithmeticAAsAFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f995e (     0x8) associated conformance SayxG16_Differentiation14DifferentiableA2bCRzl13TangentVectorAbCP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9966 (     0x8) associated conformance SayxG16_Differentiation14DifferentiableA2bCRzl13TangentVectorAbCP_AbC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f996e (     0x4) symbolic Sa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9972 (     0x8) associated conformance Sq16_DifferentiationAA14DifferentiableRzlE13TangentVectorVyx_GAabacaBP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f997a (     0x8) associated conformance Sq16_DifferentiationAA14DifferentiableRzlE13TangentVectorVyx_GAabacaBP_AaB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9982 (     0xa) symbolic _____yx_G Sq16_DifferentiationAA14DifferentiableRzlE13TangentVectorV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f998c (     0x6) symbolic _____ Sq16_DifferentiationAA14DifferentiableRzlE13TangentVectorV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9992 (     0x8) associated conformance Sq16_DifferentiationAA14DifferentiableRzlE13TangentVectorVyx_Gs18AdditiveArithmeticAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f999a (     0x8) associated conformance xSg16_Differentiation14DifferentiableA2bCRzl13TangentVectorAbCP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99a2 (     0x8) associated conformance xSg16_Differentiation14DifferentiableA2bCRzl13TangentVectorAbCP_AbC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99aa (     0x4) symbolic Sq [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99ae (     0x8) associated conformance Sf16_Differentiation14DifferentiableAA13TangentVectorAaBP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99b6 (     0x8) associated conformance Sf16_Differentiation14DifferentiableAA13TangentVectorAaBP_AaB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99be (     0x8) associated conformance Sd16_Differentiation14DifferentiableAA13TangentVectorAaBP_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99c6 (     0x8) associated conformance Sd16_Differentiation14DifferentiableAA13TangentVectorAaBP_AaB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99ce (     0x8) associated conformance s5SIMD2VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99d6 (     0x8) associated conformance s5SIMD2VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99de (     0x8) associated conformance s5SIMD2VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99e6 (     0xa) symbolic _____yxG s5SIMD2V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99f0 (     0x6) symbolic _____ s5SIMD2V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f99f6 (    0x18) symbolic 13TangentVector_____Qz 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a0e (     0x8) associated conformance s5SIMD4VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a16 (     0x8) associated conformance s5SIMD4VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a1e (     0x8) associated conformance s5SIMD4VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a26 (     0xa) symbolic _____yxG s5SIMD4V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a30 (     0x6) symbolic _____ s5SIMD4V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a36 (     0x8) associated conformance s5SIMD8VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a3e (     0x8) associated conformance s5SIMD8VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a46 (     0x8) associated conformance s5SIMD8VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a4e (     0xa) symbolic _____yxG s5SIMD8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a58 (     0x6) symbolic _____ s5SIMD8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a5e (     0x8) associated conformance s6SIMD16VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a66 (     0x8) associated conformance s6SIMD16VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a6e (     0x8) associated conformance s6SIMD16VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a76 (     0xa) symbolic _____yxG s6SIMD16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a80 (     0x6) symbolic _____ s6SIMD16V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a86 (     0x8) associated conformance s6SIMD32VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a8e (     0x8) associated conformance s6SIMD32VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a96 (     0x8) associated conformance s6SIMD32VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9a9e (     0xa) symbolic _____yxG s6SIMD32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9aa8 (     0x6) symbolic _____ s6SIMD32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9aae (     0x8) associated conformance s6SIMD64VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ab6 (     0x8) associated conformance s6SIMD64VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9abe (     0x8) associated conformance s6SIMD64VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ac6 (     0xa) symbolic _____yxG s6SIMD64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ad0 (     0x6) symbolic _____ s6SIMD64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ad6 (     0x8) associated conformance s5SIMD3VyxGs18AdditiveArithmetic16_DifferentiationSFRzrlSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ade (     0x8) associated conformance s5SIMD3VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_s18AdditiveArithmetic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ae6 (     0x8) associated conformance s5SIMD3VyxG16_Differentiation14DifferentiableADSBRzAdERzSB13TangentVectorAdEPRpzrlAfG_AdE [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9aee (     0xa) symbolic _____yxG s5SIMD3V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9af8 (     0x6) symbolic _____ s5SIMD3V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9afe (    0x1c) symbolic 13TangentVector______AaBQZ 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b1a (    0x2e) symbolic $s16_Differentiation21_AnyDifferentiableBoxP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b48 (     0x8) symbolic ______p 16_Differentiation21_AnyDifferentiableBoxP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b50 (    0x2a) symbolic $s16_Differentiation17_AnyDerivativeBoxP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b7a (     0x6) symbolic _____ 16_Differentiation22_ConcreteDerivativeBoxV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b80 (     0x8) symbolic ______p 16_Differentiation17_AnyDerivativeBoxP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b88 (     0x4) symbolic xSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9b8c (    0x1a) symbolic 13TangentVector_____QzSg 16_Differentiation14DifferentiableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216f9ba6 (     0x6) symbolic _____ 16_Differentiation26_ConcreteDifferentiableBoxV [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002216f9bac (  0x1c68) __TEXT __swift5_capture
            0x00000002216fb820 (   0x4e2) __TEXT __cstring
            0x00000002216fbd10 (    0x35) __TEXT __swift5_reflstr
            0x00000002216fbd48 (   0x198) __TEXT __swift5_assocty
                0x00000002216fbd48 (    0x18) reflection metadata associated type descriptor AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x00000002216fbd60 (    0x18) reflection metadata associated type descriptor AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x00000002216fbd78 (    0x18) reflection metadata associated type descriptor AnyDerivative [NameNList, MangledNameNList, NList] 
                0x00000002216fbd90 (    0x18) reflection metadata associated type descriptor [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x00000002216fbda8 (    0x18) reflection metadata associated type descriptor [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x00000002216fbdc0 (    0x18) reflection metadata associated type descriptor <A> [A] [NameNList, MangledNameNList, NList] 
                0x00000002216fbdd8 (    0x18) reflection metadata associated type descriptor A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x00000002216fbdf0 (    0x18) reflection metadata associated type descriptor <A> A? [NameNList, MangledNameNList, NList] 
                0x00000002216fbe08 (    0x18) reflection metadata associated type descriptor Float [NameNList, MangledNameNList, NList] 
                0x00000002216fbe20 (    0x18) reflection metadata associated type descriptor Double [NameNList, MangledNameNList, NList] 
                0x00000002216fbe38 (    0x18) reflection metadata associated type descriptor <> SIMD2<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbe50 (    0x18) reflection metadata associated type descriptor <> SIMD4<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbe68 (    0x18) reflection metadata associated type descriptor <> SIMD8<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbe80 (    0x18) reflection metadata associated type descriptor <> SIMD16<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbe98 (    0x18) reflection metadata associated type descriptor <> SIMD32<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbeb0 (    0x18) reflection metadata associated type descriptor <> SIMD64<A> [NameNList, MangledNameNList, NList] 
                0x00000002216fbec8 (    0x18) reflection metadata associated type descriptor <> SIMD3<A> [NameNList, MangledNameNList, NList] 
            0x00000002216fbee0 (   0x288) __TEXT __constg_swiftt
                0x00000002216fbee0 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbeec (    0x34) protocol descriptor for Differentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf20 (     0x8) protocol requirements base descriptor for Differentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf28 (     0x8) associated conformance descriptor for Differentiable.Differentiable.TangentVector: AdditiveArithmetic [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf30 (     0x8) associated conformance descriptor for Differentiable.Differentiable.TangentVector: Differentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf38 (     0x8) associated type descriptor for Differentiable.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf40 (     0x8) method descriptor for Differentiable.move(by:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf48 (    0x10) protocol descriptor for _AnyDifferentiableBox [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf58 (     0x8) protocol requirements base descriptor for _AnyDifferentiableBox [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf60 (     0x8) method descriptor for _AnyDifferentiableBox._move(by:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf68 (     0x8) method descriptor for _AnyDifferentiableBox._typeErasedBase.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf70 (     0x8) method descriptor for _AnyDifferentiableBox._unboxed<A>(to:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf78 (    0x1c) nominal type descriptor for AnyDifferentiable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbf94 (    0x10) protocol descriptor for _AnyDerivativeBox [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfa4 (     0x8) protocol requirements base descriptor for _AnyDerivativeBox [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfac (     0x8) method descriptor for _AnyDerivativeBox._isEqual(to:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfb4 (     0x8) method descriptor for _AnyDerivativeBox._isNotEqual(to:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfbc (     0x8) method descriptor for static _AnyDerivativeBox._zero.getter [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfc4 (     0x8) method descriptor for _AnyDerivativeBox._adding(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfcc (     0x8) method descriptor for _AnyDerivativeBox._subtracting(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfd4 (     0x8) method descriptor for _AnyDerivativeBox._move(by:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfdc (     0x8) method descriptor for _AnyDerivativeBox._typeErasedBase.getter [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfe4 (     0x8) method descriptor for _AnyDerivativeBox._unboxed<A>(to:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fbfec (    0x48) nominal type descriptor for _ConcreteDerivativeBox [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc034 (    0x1c) nominal type descriptor for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc050 (    0x1c) nominal type descriptor for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc06c (    0x24) extension descriptor Array<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc090 (    0x3c) nominal type descriptor for Array<A>.DifferentiableView [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc0cc (    0x24) extension descriptor Optional<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc0f0 (    0x3c) nominal type descriptor for Optional<A>.TangentVector [EXT, NameNList, MangledNameNList, NList] 
                0x00000002216fc12c (    0x3c) nominal type descriptor for _ConcreteDifferentiableBox [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002216fc168 (    0xe8) __TEXT __swift5_fieldmd
                0x00000002216fc168 (    0x10) reflection metadata field descriptor Differentiable [NameNList, MangledNameNList, NList] 
                0x00000002216fc178 (    0x10) reflection metadata field descriptor _AnyDifferentiableBox [NameNList, MangledNameNList, NList] 
                0x00000002216fc188 (    0x1c) reflection metadata field descriptor AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x00000002216fc1a4 (    0x10) reflection metadata field descriptor _AnyDerivativeBox [NameNList, MangledNameNList, NList] 
                0x00000002216fc1b4 (    0x1c) reflection metadata field descriptor _ConcreteDerivativeBox [NameNList, MangledNameNList, NList] 
                0x00000002216fc1d0 (    0x1c) reflection metadata field descriptor AnyDerivative [NameNList, MangledNameNList, NList] 
                0x00000002216fc1ec (    0x10) reflection metadata field descriptor AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x00000002216fc1fc (    0x1c) reflection metadata field descriptor Array<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x00000002216fc218 (    0x1c) reflection metadata field descriptor Optional<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x00000002216fc234 (    0x1c) reflection metadata field descriptor _ConcreteDifferentiableBox [NameNList, MangledNameNList, NList] 
            0x00000002216fc250 (     0xc) __TEXT __swift5_protos
            0x00000002216fc25c (    0x9c) __TEXT __swift5_proto
            0x00000002216fc2f8 (    0x20) __TEXT __swift5_types
            0x00000002216fc318 (   0x247) __TEXT __info_plist
            0x00000002216fc560 (   0x944) __TEXT __unwind_info
            0x00000002216fcea8 (   0x150) __TEXT __eh_frame
        0x000000022e845560 (   0x1e0) __DATA_CONST SEGMENT
            0x000000022e845560 (   0x1b0) __DATA_CONST __got
            0x000000022e845710 (    0x28) __DATA_CONST __const
                0x000000022e845710 (    0x20) property descriptor for Array<A>.DifferentiableView.base [EXT, NameNList, MangledNameNList, NList] 
                0x000000022e845730 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$__Differentiation [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022e845738 (     0x8) __DATA_CONST __objc_imageinfo
        0x00000002383258d0 (  0x4160) __AUTH_CONST SEGMENT
            0x00000002383258d0 (  0x3ca0) __AUTH_CONST __const
                0x00000002383291d8 (    0xe8) protocol witness table for _ConcreteDerivativeBox<A> [EXT, NameNList, MangledNameNList, NList] 
                0x00000002383292c0 (    0x58) value witness table for AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x0000000238329318 (    0x10) full type metadata for AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x0000000238329328 (    0x20) type metadata for AnyDifferentiable [EXT, NameNList, MangledNameNList, NList] 
                0x0000000238329348 (    0x58) value witness table for _ConcreteDerivativeBox [NameNList, MangledNameNList, NList] 
                0x00000002383293a0 (    0x58) value witness table for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x00000002383293f8 (    0x10) full type metadata for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x0000000238329408 (    0x20) type metadata for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x0000000238329428 (    0x10) full type metadata for AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x0000000238329438 (    0x20) type metadata for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x0000000238329458 (    0x58) value witness table for Optional<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x00000002383294b0 (    0x58) value witness table for _ConcreteDifferentiableBox [NameNList, MangledNameNList, NList] 
                0x0000000238329508 (    0x20) protocol witness table for _ConcreteDifferentiableBox<A> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238329528 (    0x48) noncanonical specialized generic type metadata for PartialRangeFrom<Int> [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000238329570 (     0x8) __AUTH_CONST __auth_ptr
            0x0000000238329578 (   0x4b8) __AUTH_CONST __auth_got
        0x00000002333110d8 (   0x280) __AUTH SEGMENT
            0x00000002333110d8 (   0x280) __AUTH __data
                0x00000002333110d8 (    0x28) protocol witness table for AnyDifferentiable [EXT, NameNList, MangledNameNList, NList] 
                0x0000000233311100 (    0x28) protocol witness table for AnyDerivative.OpaqueZero [EXT, NameNList, MangledNameNList, NList] 
                0x0000000233311128 (    0x28) protocol witness table for AnyDerivative [EXT, NameNList, MangledNameNList, NList] 
                0x0000000233311150 (    0x28) protocol witness table pattern for [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000233311178 (    0x28) protocol witness table pattern for <A> [A] [NameNList, MangledNameNList, NList] 
                0x00000002333111a0 (    0x28) protocol witness table pattern for A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x00000002333111c8 (    0x28) protocol witness table pattern for <A> A? [NameNList, MangledNameNList, NList] 
                0x00000002333111f0 (    0x28) protocol witness table for Float [EXT, NameNList, MangledNameNList, NList] 
                0x0000000233311218 (    0x28) protocol witness table for Double [EXT, NameNList, MangledNameNList, NList] 
                0x0000000233311240 (    0x28) protocol witness table pattern for <> SIMD2<A> [NameNList, MangledNameNList, NList] 
                0x0000000233311268 (    0x28) protocol witness table pattern for <> SIMD4<A> [NameNList, MangledNameNList, NList] 
                0x0000000233311290 (    0x28) protocol witness table pattern for <> SIMD8<A> [NameNList, MangledNameNList, NList] 
                0x00000002333112b8 (    0x28) protocol witness table pattern for <> SIMD16<A> [NameNList, MangledNameNList, NList] 
                0x00000002333112e0 (    0x28) protocol witness table pattern for <> SIMD32<A> [NameNList, MangledNameNList, NList] 
                0x0000000233311308 (    0x28) protocol witness table pattern for <> SIMD64<A> [NameNList, MangledNameNList, NList] 
                0x0000000233311330 (    0x28) protocol witness table pattern for <> SIMD3<A> [NameNList, MangledNameNList, NList] 
        0x0000000231b7d900 (  0x1bb0) __DATA SEGMENT
            0x0000000231b7d900 (   0x828) __DATA __data
                0x0000000231b7d900 (     0x8) demangling cache variable for type metadata for () [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d908 (     0x8) demangling cache variable for type metadata for Any.Type [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d910 (     0x8) lazy protocol witness table cache variable for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d918 (     0x8) demangling cache variable for type metadata for _ConcreteDerivativeBox<AnyDerivative.OpaqueZero> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d920 (     0x8) lazy protocol witness table cache variable for type AnyDerivative and conformance AnyDerivative [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d928 (     0x8) lazy protocol witness table cache variable for type AnyDerivative and conformance AnyDerivative [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d930 (     0x8) lazy protocol witness table cache variable for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d938 (     0x8) lazy protocol witness table cache variable for type AnyDerivative.OpaqueZero and conformance AnyDerivative.OpaqueZero [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d940 (     0x8) lazy protocol witness table cache variable for type AnyDerivative and conformance AnyDerivative [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d948 (    0x10) 16_Differentiation17AnyDifferentiableVyACxcAA0C0RzlufCAaDRzlWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d958 (    0x10) 16_Differentiation13AnyDerivativeVyACxcAA14DifferentiableRz13TangentVectorAaDPQzRszlufCAaDRzAGRszlWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d968 (    0x10) 16_Differentiation13AnyDerivativeV1poiyA2C_ACtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d978 (    0x10) 16_Differentiation13AnyDerivativeV1soiyA2C_ACtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d988 (    0x10) Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewV4baseSayxGvgAaBRzlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d998 (    0x10) Sa16_DifferentiationAA14DifferentiableRzlE0B4ViewVyADyx_GSayxGcfCAaBRzlWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9a8 (    0x10) SayxSicig16_Differentiation14DifferentiableRzlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9b8 (    0x10) Sa1poiySayxGAB_ABtFZ16_Differentiation14DifferentiableRzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9c8 (    0x10) Sa6appendyyxnF16_Differentiation14DifferentiableRzlWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9d8 (    0x10) Sa2peoiyySayxGz_ABtFZ16_Differentiation14DifferentiableRzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9e8 (    0x10) Sa9repeating5countSayxGx_SitcfC16_Differentiation14DifferentiableRzlWJrSUUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7d9f8 (    0x10) Sa16_DifferentiationAA14DifferentiableRzlE17differentiableMapySayqd__Gqd__xYjrXEAaBRd__lFAaBRzAaBRd__r__lWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da08 (    0x10) Sa16_DifferentiationAA14DifferentiableRzlE20differentiableReduceyqd__qd___qd__qd___xtYjrXEtAaBRd__lFAaBRzAaBRd__r__lWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da18 (    0x10) SfyS2fcfCWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da28 (    0x10) Sf1sopyS2fFZWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da38 (    0x10) Sf1poiyS2f_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da48 (    0x10) Sf2peoiyySfz_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da58 (    0x10) Sf1soiyS2f_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da68 (    0x10) Sf2seoiyySfz_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da78 (    0x10) Sf1moiyS2f_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da88 (    0x10) Sf2meoiyySfz_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7da98 (    0x10) Sf1doiyS2f_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7daa8 (    0x10) Sf2deoiyySfz_SftFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dab8 (    0x10) SdyS2dcfCWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dac8 (    0x10) Sd1sopyS2dFZWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dad8 (    0x10) Sd1poiyS2d_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dae8 (    0x10) Sd2peoiyySdz_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7daf8 (    0x10) Sd1soiyS2d_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db08 (    0x10) Sd2seoiyySdz_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db18 (    0x10) Sd1moiyS2d_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db28 (    0x10) Sd2meoiyySdz_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db38 (    0x10) Sd1doiyS2d_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db48 (    0x10) Sd2deoiyySdz_SdtFZWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db58 (    0x10) SFsE13addingProductyxx_xtFSFRz16_Differentiation14DifferentiableRz13TangentVectorAbCPQzRszlWJrSSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db68 (    0x10) SFsE10squareRootxyFSFRz16_Differentiation14DifferentiableRz13TangentVectorAbCPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db78 (    0x10) SFsE7minimumyxx_xtFZSFRz16_Differentiation14DifferentiableRz13TangentVectorAbCPQzRszlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db88 (    0x10) SFsE7maximumyxx_xtFZSFRz16_Differentiation14DifferentiableRz13TangentVectorAbCPQzRszlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7db98 (    0x10) 6Darwin3fmayxx_xxtSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dba8 (    0x10) 6Darwin9remainderyxx_xtSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dbb8 (    0x10) 6Darwin4fmodyxx_xtSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dbc8 (    0x10) 6Darwin4sqrtyxxSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dbd8 (    0x10) 6Darwin4ceilyxxSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dbe8 (    0x10) 6Darwin5flooryxxSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dbf8 (    0x10) 6Darwin5roundyxxSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc08 (    0x10) 6Darwin5truncyxxSFRzlFSFRz16_Differentiation14DifferentiableRz13TangentVectorAcDPQzRszlWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc18 (    0x10) fmaWJrSSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc28 (    0x10) remainderWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc38 (    0x10) fmodWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc48 (    0x10) sqrtWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc58 (    0x10) ceilWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc68 (    0x10) floorWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc78 (    0x10) roundWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc88 (    0x10) truncWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dc98 (    0x10) 6Darwin3expyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dca8 (    0x10) 6Darwin4exp2yS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dcb8 (    0x10) 6Darwin3logyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dcc8 (    0x10) 6Darwin5log10yS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dcd8 (    0x10) 6Darwin4log2yS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dce8 (    0x10) 6Darwin3sinyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dcf8 (    0x10) 6Darwin3cosyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd08 (    0x10) 6Darwin3tanyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd18 (    0x10) 6Darwin4asinyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd28 (    0x10) 6Darwin4acosyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd38 (    0x10) 6Darwin4atanyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd48 (    0x10) 6Darwin4sinhyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd58 (    0x10) 6Darwin4coshyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd68 (    0x10) 6Darwin4tanhyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd78 (    0x10) 6Darwin5asinhyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd88 (    0x10) 6Darwin5acoshyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dd98 (    0x10) 6Darwin5atanhyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dda8 (    0x10) 6Darwin5expm1yS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7ddb8 (    0x10) 6Darwin5log1pyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7ddc8 (    0x10) 6Darwin3erfyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7ddd8 (    0x10) 6Darwin4erfcyS2fFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dde8 (    0x10) 6Darwin3expyS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7ddf8 (    0x10) 6Darwin4exp2yS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de08 (    0x10) 6Darwin3logyS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de18 (    0x10) 6Darwin5log10yS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de28 (    0x10) 6Darwin4log2yS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de38 (    0x10) 6Darwin3sinyS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de48 (    0x10) 6Darwin3cosyS2dFWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de58 (    0x10) tanWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de68 (    0x10) asinWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de78 (    0x10) acosWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de88 (    0x10) atanWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7de98 (    0x10) sinhWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dea8 (    0x10) coshWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7deb8 (    0x10) tanhWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dec8 (    0x10) asinhWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7ded8 (    0x10) acoshWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dee8 (    0x10) atanhWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7def8 (    0x10) expm1WJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df08 (    0x10) log1pWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df18 (    0x10) erfWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df28 (    0x10) erfcWJrSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df38 (    0x10) 6Darwin3powyS2f_SftFWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df48 (    0x10) powWJrSSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df58 (    0x10) s5SIMD2VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df68 (    0x10) s5SIMD2VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df78 (    0x10) s5SIMD4VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df88 (    0x10) s5SIMD4VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7df98 (    0x10) s5SIMD8VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dfa8 (    0x10) s5SIMD8VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dfb8 (    0x10) s6SIMD16VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dfc8 (    0x10) s6SIMD16VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dfd8 (    0x10) s6SIMD32VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dfe8 (    0x10) s6SIMD32VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7dff8 (    0x10) s6SIMD64VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e008 (    0x10) s6SIMD64VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e018 (    0x10) s5SIMD3VyxSicigSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e028 (    0x10) s5SIMD3VyxSicisSBRzs10SIMDScalarRz16_Differentiation14DifferentiableRz13TangentVectorAdEPQzRszlWJrSUSpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e038 (    0x10) s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzsAA13TangentVectorAfGPRpzSBAkL_AcIRPzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e048 (    0x10) s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzsAA13TangentVectorAfGPRpzSBAkL_AcIRPzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e058 (    0x10) s4SIMDPsSF6ScalarRpzrlE1sopyxxFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzsAA13TangentVectorAfGPRpzSBAkL_AcIRPzlWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e068 (    0x10) s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e078 (    0x10) s4SIMDPsSF6ScalarRpzrlE1doiyxx_xtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e088 (    0x10) s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzAfgJRQsAA13TangentVectorAfGPRpzSBAcI_AkLRPzAkL_AcIQZANRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e098 (    0x10) s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzAfgJRQsAA13TangentVectorAfGPRpzSBAcI_AkLRPzAkL_AcIQZANRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0a8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzAfgJRQsAA13TangentVectorAfGPRpzSBAcI_AkLRPzAkL_AcIQZANRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0b8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZsAARz16_Differentiation14DifferentiableRzSBACs11SIMDStoragePRpzAfgJRQsAA13TangentVectorAfGPRpzSBAcI_AkLRPzAkL_AcIQZANRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0c8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzAfgMRQAcL_AhIQZAMRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0d8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1doiyxx_ADtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzAfgMRQAcL_AhIQZAMRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0e8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzAfgMRQAcL_AhIQZAMRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e0f8 (    0x10) s4SIMDPsSF6ScalarRpzrlE1doiyxAD_xtFZsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBACs11SIMDStoragePRpzAfgMRQAcL_AhIQZAMRSlWJrSSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e108 (    0x10) s4SIMDPsE9repeatingx6ScalarQz_tcfCsAARz16_Differentiation14DifferentiableRz13TangentVectorAfGPQzRszSBADs11SIMDStoragePRpzAfgMRQAdL_AhIQZAMRSlWJrSUpSr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e118 (     0x8) cache variable for noncanonical specialized generic type metadata for PartialRangeFrom<Int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b7e120 (     0x8) lazy protocol witness table cache variable for type PartialRangeFrom<Int> and conformance PartialRangeFrom<A> [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231b7e130 (  0x1380) __DATA __bss
                0x0000000231b7e130 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x0000000231b7e1b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDifferentiable [NameNList, MangledNameNList, NList] 
                0x0000000231b7e230 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x0000000231b7e2b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x0000000231b7e330 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative.OpaqueZero [NameNList, MangledNameNList, NList] 
                0x0000000231b7e3b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x0000000231b7e430 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x0000000231b7e4b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x0000000231b7e530 (    0x80) metadata instantiation cache for protocol conformance descriptor for AnyDerivative [NameNList, MangledNameNList, NList] 
                0x0000000231b7e5b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e630 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e6b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e730 (    0x80) metadata instantiation cache for protocol conformance descriptor for [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e7b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e830 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> [A]<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7e8b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <A> [A] [NameNList, MangledNameNList, NList] 
                0x0000000231b7e930 (    0x80) metadata instantiation cache for protocol conformance descriptor for A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x0000000231b7e9b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x0000000231b7ea30 (    0x80) metadata instantiation cache for protocol conformance descriptor for A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x0000000231b7eab0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <A> A? [NameNList, MangledNameNList, NList] 
                0x0000000231b7eb30 (    0x80) metadata instantiation cache for protocol conformance descriptor for A?<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x0000000231b7ebb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD2<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7ec30 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD2<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7ecb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD4<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7ed30 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD4<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7edb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD8<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7ee30 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD8<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7eeb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD16<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7ef30 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD16<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7efb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD32<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f030 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD32<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f0b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD64<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f130 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD64<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f1b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD3<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f230 (    0x80) metadata instantiation cache for protocol conformance descriptor for <> SIMD3<A> [NameNList, MangledNameNList, NList] 
                0x0000000231b7f2b0 (    0x80) type metadata instantiation cache for _ConcreteDerivativeBox [NameNList, MangledNameNList, NList] 
                0x0000000231b7f330 (    0x80) type metadata instantiation cache for Array<A>.DifferentiableView [NameNList, MangledNameNList, NList] 
                0x0000000231b7f3b0 (    0x80) type metadata instantiation cache for Optional<A>.TangentVector [NameNList, MangledNameNList, NList] 
                0x0000000231b7f430 (    0x80) type metadata instantiation cache for _ConcreteDifferentiableBox [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
