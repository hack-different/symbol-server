Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/AGXGPURawCounter.framework/Versions/A/AGXGPURawCounter [arm64e, 0.031490 seconds]:
    0C27F20D-12E4-35AA-8D39-BF2E344B52A5 /System/Library/PrivateFrameworks/AGXGPURawCounter.framework/Versions/A/AGXGPURawCounter [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001f2d00000 ( 0x19000) __TEXT SEGMENT
            0x00000001f2d00000 (  0x4e5c) MACH_HEADER
            0x00000001f2d04e5c (  0xd7a4) __TEXT __text
                0x00000001f2d04e5c (   0x110) AGXGPURawCounter::createInstance(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d04f6c (    0x5c) AGXGPURawCounter::destroyInstance() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d04fc8 (     0xc) AGXGPURawCounter::instance() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d04fd4 (     0x8) AGXGPURawCounter::sourceBufferMinSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d04fdc (     0x8) AGXGPURawCounter::sourceBufferSizeAlignment() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d04fe4 (   0x238) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::drain(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0521c (    0x74) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::state(unsigned int*, unsigned int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05290 (     0xc) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0529c (     0xc) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::base() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d052a8 (     0x4) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::~RingBufferImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d052ac (    0x2c) AGXGPURawCounterImpl::SourceImpl::RingBufferImpl::~RingBufferImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d052d8 (    0x90) AGXGPURawCounterImpl::SourceImpl::ringBufferFree() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05368 (    0xc0) AGXGPURawCounterImpl::SourceImpl::ringBufferInit(unsigned long long, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05428 (   0x440) AGXGPURawCounterImpl::SourceImpl::ringBufferAlloc(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05868 (     0xc) AGXGPURawCounterImpl::SourceImpl::fillKernelConfigData(AGXSPerfCtrSamplerControlRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05874 (   0x3b4) AGXGPURawCounterImpl::SourceImpl::postProcessReset(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d05c28 (  0x117c) AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d06da4 (    0x5c) StackAllocator::init(unsigned long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d06e00 (   0x670) AGXGPURawCounterImpl::SourceImpl::generateKickTimestampSamples(unsigned int, unsigned long long, unsigned long long, unsigned char const*, unsigned int, AGXGPURawCounterImpl::SourceImpl::KickslotState*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07470 (   0x4ec) AGXGPURawCounterImpl::SourceImpl::emitKickTimestampSamples(unsigned int, AGXGPURawCounterImpl::SourceImpl::KickslotState*, unsigned int, unsigned long long, void*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0795c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001f2d0797c (   0x1e0) StackAllocator::reserve(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07b5c (    0x74) generateSampleType(AGXSPerfCtrSample const*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07bd0 (   0x214) copyMetaCounterList(StackAllocator*, AGXGPURawCounter::SampleHeader const*, AGXGPURawCounterImpl::CounterSelect const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07de4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001f2d07e04 (    0xc0) AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned char*, unsigned long long, unsigned long long*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07ec4 (     0x4) AGXGPURawCounterImpl::SourceImpl::flushRingBuffers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07ec8 (     0x8) AGXGPURawCounterImpl::SourceImpl::ringBufferNum() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d07ed0 (   0x36c) AGXGPURawCounterImpl::SourceImpl::ringBuffer(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0823c (   0x1e4) AGXGPURawCounterImpl::SourceImpl::calcBufferSizeWithRingBufferSize(unsigned long long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08420 (   0x1b8) AGXGPURawCounterImpl::SourceImpl::alignBufferSize(unsigned long long, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d085d8 (     0x8) AGXGPURawCounterImpl::SourceImpl::bufferSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d085e0 (   0x16c) AGXGPURawCounterImpl::SourceImpl::setBufferSize(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0874c (     0x8) AGXGPURawCounterImpl::SourceImpl::flags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08754 (    0x80) AGXGPURawCounterImpl::SourceImpl::setFlags(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d087d4 (    0x18) AGXGPURawCounterImpl::SourceImpl::availableFlags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d087ec (   0x348) AGXGPURawCounterImpl::SourceImpl::setOptions(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08b34 (     0x8) AGXGPURawCounterImpl::SourceImpl::triggers() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08b3c (   0x238) AGXGPURawCounterImpl::SourceImpl::addTrigger(AGXGPURawCounter::TriggerType, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08d74 (    0x4c) AGXGPURawCounterImpl::SourceImpl::clearTriggers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08dc0 (    0x28) AGXGPURawCounterImpl::SourceImpl::availableTriggers() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d08de8 (   0xda8) AGXGPURawCounterImpl::SourceImpl::addCounter(char const*, unsigned int, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09b90 (    0x88) perfCtrSamplerAddSourceCounter(unsigned int, AGXGPURawCounterImpl::CounterDescImpl const*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09c18 (     0xc) invocation function for block in AGXGPURawCounterImpl::SourceImpl::addCounter(char const*, unsigned int, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09c24 (    0xcc) AGXGPURawCounterImpl::SourceImpl::clearSelectedCounterList() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09cf0 (     0xc) AGXGPURawCounterImpl::SourceImpl::isEnabled() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09cfc (    0x3c) AGXGPURawCounterImpl::SourceImpl::setEnabled(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09d38 (    0xa0) AGXGPURawCounterImpl::SourceImpl::copyAvailableCounterList(AGXGPURawCounter::CounterDesc**) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09dd8 (    0x48) AGXGPURawCounterImpl::SourceImpl::copyName() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09e20 (     0x8) AGXGPURawCounterImpl::SourceImpl::owner() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09e28 (    0xa8) AGXGPURawCounterImpl::SourceImpl::~SourceImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09ed0 (    0xb0) AGXGPURawCounterImpl::SourceImpl::~SourceImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d09f80 (   0x120) AGXGPURawCounterImpl::populateFeaturesDict(NSMutableDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0a0a0 (     0x8) AGXGPURawCounterImpl::postProcessBufferMinSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0a0a8 (     0x8) AGXGPURawCounterImpl::isSampling() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0a0b0 (   0x2cc) AGXGPURawCounterImpl::stopSampling() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0a37c (   0x9e4) AGXGPURawCounterImpl::startSampling() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0ad60 (   0x170) AGXGPURawCounterImpl::gpuPerfState() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0aed0 (   0x174) AGXGPURawCounterImpl::setGPUPerfState(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b044 (   0x170) AGXGPURawCounterImpl::flags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b1b4 (   0x1a4) AGXGPURawCounterImpl::setFlags(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b358 (    0x48) AGXGPURawCounterImpl::availableFlags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b3a0 (   0x3dc) AGXGPURawCounterImpl::setOptions(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b77c (   0x27c) AGXGPURawCounterImpl::sourceList(AGXGPURawCounter::Source**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0b9f8 (    0x58) AGXGPURawCounterImpl::copyDeviceName() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0ba50 (    0x3c) AGXGPURawCounterImpl::~AGXGPURawCounterImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0ba8c (    0x2c) AGXGPURawCounterImpl::~AGXGPURawCounterImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0bab8 (   0x428) AGXGPURawCounterImpl::SourceImpl::SourceImpl(AGXGPURawCounterImpl*, unsigned int, char const*, unsigned int, unsigned int const*, unsigned int, AGXGPURawCounterImpl::ChipDispatchTable const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0bee0 (  0x380c) AGXGPURawCounterImpl::init(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0f6ec (    0x84) perfCtrSamplerGetSourceNum(unsigned int*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0f770 (    0xf4) cfDictionaryCreateFromPlist(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0f864 (    0xa0) perfCtrSamplerGetSourceInfo(unsigned int, char*, unsigned int, unsigned int*, unsigned int*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0f904 (   0x4f4) AGXGPURawCounterImpl::chipDispatchTableForSource(unsigned int, unsigned int, unsigned int, char const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0fdf8 (   0x128) AGXGPURawCounterImpl::free() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0ff20 (     0xc) invocation function for block in AGXGPURawCounterImpl::init(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d0ff2c (   0x108) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::drain(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10034 (    0xe4) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::state(unsigned int*, unsigned int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10118 (     0x8) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10120 (     0x8) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::base() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10128 (     0x4) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::~RingBufferAPSImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1012c (    0x2c) AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl::~RingBufferAPSImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10158 (   0x114) AGXGPURawCounterImpl::SourceAPSImpl::ringBufferInit(unsigned long long, void*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1026c (    0xfc) AGXGPURawCounterImpl::SourceAPSImpl::fillKernelConfigData(AGXSPerfCtrSamplerControlRec*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10368 (     0x4) AGXGPURawCounterImpl::SourceAPSImpl::postProcessReset(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1036c (   0x89c) AGXGPURawCounterImpl::SourceAPSImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10c08 (    0x7c) AGXGPURawCounterImpl::SourceAPSImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned char*, unsigned long long, unsigned long long*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10c84 (    0x5c) AGXGPURawCounterImpl::SourceAPSImpl::flushRingBuffers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10ce0 (   0x1e4) AGXGPURawCounterImpl::SourceAPSImpl::calcBufferSizeWithRingBufferSize(unsigned long long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d10ec4 (   0x1cc) AGXGPURawCounterImpl::SourceAPSImpl::alignBufferSize(unsigned long long, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11090 (    0xb8) AGXGPURawCounterImpl::SourceAPSImpl::setBufferSize(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11148 (     0x8) AGXGPURawCounterImpl::SourceAPSImpl::availableFlags() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11150 (   0x264) AGXGPURawCounterImpl::SourceAPSImpl::setOptions(NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d113b4 (   0x2a4) AGXGPURawCounterImpl::SourceAPSImpl::addTrigger(AGXGPURawCounter::TriggerType, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11658 (    0x58) AGXGPURawCounterImpl::SourceAPSImpl::clearTriggers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d116b0 (     0x8) AGXGPURawCounterImpl::SourceAPSImpl::availableTriggers() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d116b8 (    0xa8) AGXGPURawCounterImpl::SourceAPSImpl::~SourceAPSImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11760 (    0xb0) AGXGPURawCounterImpl::SourceAPSImpl::~SourceAPSImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11810 (    0x10) AGXGRC_G10::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11820 (     0x8) AGXGRC_G10::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11828 (    0x10) AGXGRC_G10::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11838 (     0x4) AGXGRC_G10::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1183c (    0x94) AGXGPURawCounterImpl::SourceImpl::create(AGXGPURawCounterImpl*, unsigned int, char const*, unsigned int, unsigned int const*, unsigned int, AGXGPURawCounterImpl::ChipDispatchTable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d118d0 (    0x1c) AGXGRC_G11::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d118ec (     0x8) AGXGRC_G11::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d118f4 (   0x1a4) AGXGRC_G11::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11a98 (     0xc) AGXGRC_G11::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11aa4 (    0x1c) AGXGRC_G12::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11ac0 (     0x8) AGXGRC_G12::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11ac8 (   0x1c8) AGXGRC_G12::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11c90 (     0xc) AGXGRC_G12::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11c9c (    0x1c) AGXGRC_G13::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11cb8 (     0x8) AGXGRC_G13::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11cc0 (   0x1c8) AGXGRC_G13::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11e88 (     0xc) AGXGRC_G13::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11e94 (    0x1c) AGXGRC_G14::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11eb0 (     0x8) AGXGRC_G14::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d11eb8 (   0x1c8) AGXGRC_G14::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d12080 (     0xc) AGXGRC_G14::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1208c (    0x1c) AGXGRC_G14X::HasMagicTokenTMB(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d120a8 (     0x8) AGXGRC_G14X::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d120b0 (   0x15c) AGXGRC_G14X::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1220c (     0xc) AGXGRC_G14X::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d12218 (    0x2c) AGXGRC_G14X::HasMagicTokenBMPR(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d12244 (     0x8) AGXGRC_G14X::SampleHeaderSizeInherited() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1224c (   0x150) AGXGRC_G14X::ParseSampleHeaderInherited(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1239c (    0x1c) AGXGRC_G15::HasMagicToken(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d123b8 (     0x8) AGXGRC_G15::SampleHeaderSize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d123c0 (   0x15c) AGXGRC_G15::ParseSampleHeader(unsigned long long const*, AGXSPerfCtrSample*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d1251c (     0xc) AGXGRC_G15::ResetSampleHeaderParser(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f2d12528 (    0xd8) AGXGPURawCounterImpl::SourceAPSImpl::create(AGXGPURawCounterImpl*, unsigned int, char const*, unsigned int, unsigned int const*, unsigned int, AGXGPURawCounterImpl::ChipDispatchTable const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001f2d12600 (   0x390) __TEXT __auth_stubs
                0x00000001f2d12600 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12610 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12620 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12630 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12640 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12650 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12660 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12670 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12680 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12690 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126a0 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126b0 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126c0 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126d0 (    0x10) DYLD-STUB$$IOConnectCallStructMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126e0 (    0x10) DYLD-STUB$$IOGPUDeviceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d126f0 (    0x10) DYLD-STUB$$IOGPUDeviceGetConnect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12700 (    0x10) DYLD-STUB$$IOGPUDeviceGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12710 (    0x10) DYLD-STUB$$IOGPUDeviceRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12720 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12730 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12740 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12750 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12760 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12770 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12780 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12790 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127a0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127b0 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127c0 (    0x10) DYLD-STUB$$bsearch_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127d0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127e0 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d127f0 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12800 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12810 (    0x10) DYLD-STUB$$fread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12820 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12830 (    0x10) DYLD-STUB$$fseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12840 (    0x10) DYLD-STUB$$ftell [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12850 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12860 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12870 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12880 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12890 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128a0 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128b0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128c0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128d0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128e0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d128f0 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12900 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12910 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12920 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12930 (    0x10) DYLD-STUB$$posix_memalign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12940 (    0x10) DYLD-STUB$$qsort_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12950 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12960 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12970 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f2d12980 (    0x10) DYLD-STUB$$sys_dcache_flush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001f2d12990 (   0x168) __TEXT __const
                0x00000001f2d12a60 (    0x30) AGXGPURawCounterVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d12a90 (    0x68) AGXGPURawCounterVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001f2d12af8 (   0x368) __TEXT __gcc_except_tab
                0x00000001f2d12af8 (    0x30) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12b28 (    0x80) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12ba8 (    0x1c) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12bc4 (    0x24) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12be8 (    0x94) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12c7c (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12c8c (    0xd4) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12d60 (    0x8c) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12dec (    0x4c) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12e38 (    0x14) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001f2d12e4c (    0x14) GCC_except_table127 [NameNList, MangledNameNList, NList] 
            0x00000001f2d12e60 (  0x3daf) __TEXT __cstring
            0x00000001f2d16c0f (  0x1fbd) __TEXT __oslogstring
            0x00000001f2d18bcc (   0x1fc) __TEXT __unwind_info
            0x00000001f2d18dc8 (    0xd1) __TEXT __objc_methname
            0x00000001f2d18ea0 (   0x160) __TEXT __objc_stubs
                0x00000001f2d18ea0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18ec0 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18ee0 (    0x20) objc_msgSend$bundleWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18f00 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18f20 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18f40 (    0x20) objc_msgSend$pathForResource:ofType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18f60 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18f80 (    0x20) objc_msgSend$shortValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18fa0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18fc0 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f2d18fe0 (    0x20) objc_msgSend$unsignedShortValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x000000022e113e08 (   0x450) __DATA_CONST SEGMENT
            0x000000022e113e08 (    0x20) __DATA_CONST __got
            0x000000022e113e28 (   0x360) __DATA_CONST __const
                0x000000022e113e28 (    0x20) __block_descriptor_32_e15_i24?0r^v8r^v16l [NameNList, MangledNameNList, NList] 
                0x000000022e113e48 (    0xc0) sAGXGRCMetaCounterList [NameNList, MangledNameNList, NList] 
                0x000000022e113f08 (   0x280) obfuscatedUSCProfileName(unsigned int, unsigned int)::obfuscatedUSCProfileNameList [NameNList, MangledNameNList, NList] 
            0x000000022e114188 (     0x8) __DATA_CONST __objc_imageinfo
            0x000000022e114190 (    0x58) __DATA_CONST __objc_selrefs
            0x000000022e1141e8 (    0x70) __DATA_CONST __objc_arraydata
                0x000000022e1141e8 (    0x70) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
        0x0000000236992508 (  0x1000) __AUTH_CONST SEGMENT
            0x0000000236992508 (   0x5d8) __AUTH_CONST __const
                0x0000000236992508 (    0x40) vtable for AGXGPURawCounterImpl::SourceImpl::RingBufferImpl [NameNList, MangledNameNList, NList] 
                0x0000000236992548 (   0x108) vtable for AGXGPURawCounterImpl::SourceImpl [NameNList, MangledNameNList, NList] 
                0x0000000236992650 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236992670 (    0x20) __block_literal_global.148 [NameNList, MangledNameNList, NList] 
                0x0000000236992690 (    0x88) vtable for AGXGPURawCounterImpl [NameNList, MangledNameNList, NList] 
                0x0000000236992718 (    0x40) vtable for AGXGPURawCounterImpl::SourceAPSImpl::RingBufferAPSImpl [NameNList, MangledNameNList, NList] 
                0x0000000236992758 (   0x108) vtable for AGXGPURawCounterImpl::SourceAPSImpl [NameNList, MangledNameNList, NList] 
                0x0000000236992860 (    0x40) AGXGRC_G10::sChipDispatchTable [NameNList, MangledNameNList, NList] 
                0x00000002369928a0 (    0x40) AGXGRC_G11::sChipDispatchTable [NameNList, MangledNameNList, NList] 
                0x00000002369928e0 (    0x40) AGXGRC_G12::sChipDispatchTable [NameNList, MangledNameNList, NList] 
                0x0000000236992920 (    0x40) AGXGRC_G13::sChipDispatchTableTMB [NameNList, MangledNameNList, NList] 
                0x0000000236992960 (    0x40) AGXGRC_G13::sChipDispatchTableBMPR [NameNList, MangledNameNList, NList] 
                0x00000002369929a0 (    0x40) AGXGRC_G14::sChipDispatchTable [NameNList, MangledNameNList, NList] 
                0x00000002369929e0 (    0x40) AGXGRC_G14X::sChipDispatchTableTMB [NameNList, MangledNameNList, NList] 
                0x0000000236992a20 (    0x40) AGXGRC_G14X::sChipDispatchTableBMPR [NameNList, MangledNameNList, NList] 
                0x0000000236992a60 (    0x40) AGXGRC_G15::sChipDispatchTable [NameNList, MangledNameNList, NList] 
                0x0000000236992aa0 (    0x40) AGXGRC_G15::sChipDispatchTableAPS [NameNList, MangledNameNList, NList] 
            0x0000000236992ae0 (   0x820) __AUTH_CONST __cfstring
            0x0000000236993300 (    0x18) __AUTH_CONST __objc_intobj
            0x0000000236993318 (    0x18) __AUTH_CONST __objc_arrayobj
            0x0000000236993330 (   0x1d8) __AUTH_CONST __auth_got
        0x0000000230ebd740 (   0x650) __DATA SEGMENT
            0x0000000230ebd740 (    0x18) __DATA __objc_classrefs
            0x0000000230ebd758 (   0x163) __DATA __data
                0x0000000230ebd758 (    0x1f) AGXGPURawCounterImpl::SourceImpl::addCounter(char const*, unsigned int, unsigned int, unsigned long long)::uscProfileDataName [NameNList, MangledNameNList, NList] 
                0x0000000230ebd777 (    0x24) AGXGRC_G11::KickslotConfigList [NameNList, MangledNameNList, NList] 
                0x0000000230ebd79b (    0x30) AGXGRC_G12::KickslotConfigList [NameNList, MangledNameNList, NList] 
                0x0000000230ebd7cb (    0x30) AGXGRC_G13::KickslotConfigListTMB [NameNList, MangledNameNList, NList] 
                0x0000000230ebd7fb (    0x30) AGXGRC_G13::KickslotConfigListBMPR [NameNList, MangledNameNList, NList] 
                0x0000000230ebd82b (    0x30) AGXGRC_G14::KickslotConfigList [NameNList, MangledNameNList, NList] 
                0x0000000230ebd85b (    0x30) AGXGRC_G14X::KickslotConfigListTMB [NameNList, MangledNameNList, NList] 
                0x0000000230ebd88b (    0x30) AGXGRC_G15::KickslotConfigList [NameNList, MangledNameNList, NList] 
            0x0000000230ebd8c0 (   0x4d0) __DATA __bss
                0x0000000230ebd8c0 (     0x8) sAGXGPURawCounterImpl [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8c8 (     0x8) AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool)::kSrcSampleMaxSize [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8d0 (     0x8) guard variable for AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool)::kSrcSampleMaxSize [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8d8 (     0x8) AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool)::kSrcPayloadScale [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8e0 (     0x8) guard variable for AGXGPURawCounterImpl::SourceImpl::postProcessData(unsigned int, unsigned char const*, unsigned long long, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, unsigned long long, unsigned long long*, bool)::kSrcPayloadScale [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8e8 (     0x8) sAGXGPURawCounterLock [NameNList, MangledNameNList, NList] 
                0x0000000230ebd8f0 (   0x450) AGXGPURawCounterImpl::chipDispatchTableForSource(unsigned int, unsigned int, unsigned int, char const*) const::sourceToDispatchMapList [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd40 (     0x8) guard variable for AGXGPURawCounterImpl::chipDispatchTableForSource(unsigned int, unsigned int, unsigned int, char const*) const::sourceToDispatchMapList [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd48 (     0x8) AGXGPURawCounterImpl::SourceAPSImpl::setBufferSize(unsigned long long)::kRingBufferSizeMax [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd50 (     0x8) guard variable for AGXGPURawCounterImpl::SourceAPSImpl::setBufferSize(unsigned long long)::kRingBufferSizeMax [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd58 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd60 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset (.62) [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd68 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset (.66) [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd70 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset (.72) [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd78 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset (.76) [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd80 (     0x8) AGXGRC_G14X::KickslotConfigListBMPR [NameNList, MangledNameNList, NList] 
                0x0000000230ebdd88 (     0x8) AGXPerfCtrRDESampleHeaderParser::fAbsTimeOffset (.82) [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
