/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages [arm64e, 0.043121 seconds]:
    83103580-72BE-3627-8BA4-3B1F5F0E257B /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000019781b000 ( 0xc0000) __TEXT SEGMENT
            0x000000019781b000 (  0x228c) MACH_HEADER
            0x000000019781d28c ( 0x8e834) __TEXT __text
                0x000000019781d28c (   0x40c) DIHLDiskImageAttach [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d698 (     0xc) DIGetDebugLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d6a4 (     0xc) DIGetVerboseLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d6b0 (     0x8) -[DIHelperProxy initWithDictionary:andStatusProc:andContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d6b8 (   0x188) -[DIHelperProxy initWithDictionary:andStatusProc:andContext:withAuthentication:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d840 (   0x158) -[DIHelperProxy performOperationReturning:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d998 (    0x38) -[DIHelperProxy retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781d9d0 (   0x180) -[DIHelperProxy(Thread) workerThread:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781db50 (   0x428) -[DIHelperProxy(Thread) threadSetupServer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781df78 (   0x438) -[DIHelperProxy(Thread) threadLaunchToolAuthenticated:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e3b0 (    0xf8) -[DIHelperProxy helperToolPath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e4a8 (    0x38) -[DIHelperProxy release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e4e0 (    0x38) -[DIHelperProxy autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e518 (    0x5c) -[DIHelperProxy(DIHLHelperMasterProtocol) connectToFramework] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e574 (    0x6c) -[DIHelperProxy(DIHLHelperConnectionMethods) sendOperationToHelper:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e5e0 (    0xa8) DIGetBundleRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e688 (    0x98) -[DIHelperProxy(DIHLHelperMasterProtocol) frameworkCallbackWithDictionary:withReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e720 (   0x190) DIHLCopyPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e8b0 (    0xc8) DIHLGetDefaultsDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e978 (    0x2c) CFDictionaryAddDictionaryValues [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781e9a4 (    0x74) _CFDictionarySetDictionaryValues [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ea18 (     0xc) DISetDebugLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ea24 (     0xc) DISetVerboseLevel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ea30 (    0x48) DIAddPermission [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ea78 (    0x5c) DILoadDriver [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ead4 (    0x70) DI_kextExists [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781eb44 (   0x4d4) DIInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f018 (   0x100) DIIsInitialized [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f118 (    0x80) DIHLCopyPreference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f198 (    0x44) CFTypeGetBoolean [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f1dc (   0x178) CFTypeTryGetBoolean [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f354 (   0x1b0) DIHLCopyVolumeRefNumDiskImageInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781f504 (   0x610) DIHLCopyVolumeForImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781fb14 (   0x440) DIHLCopyImageForVolume [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ff54 (    0x80) BSDPathToIOMediaObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ffd4 (     0xc) IOMediaToIOHDIXHDDriveObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019781ffe0 (    0xc8) IOKitObjectFindParentOfClass [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978200a8 (    0x30) DIGetBackingStorePluginCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978200d8 (    0xdc) CBSDBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978201b4 (    0xb4) _AddToPluginList(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820268 (    0xdc) CBundleBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820344 (    0xdc) CRAMBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820420 (    0xdc) CDevBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978204fc (    0xdc) CCURLBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978205d8 (    0xdc) CVectoredBackingStore::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978206b4 (    0x40) DIGetFileEncodingPluginCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978206f4 (   0x208) CEncryptedEncoding::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978208fc (    0xf8) CUDIFEncoding::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978209f4 (    0xf8) CSegmentedUDIFEncoding::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820aec (    0xf0) CSegmentedUDIFRawEncoding::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820bdc (    0x30) DIGetDiskImagePluginCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820c0c (   0x35c) CUDIFDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197820f68 (   0x1d8) CSparseBundleDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821140 (   0x1dc) CSparseDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782131c (   0x478) CRawDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821794 (   0x274) CWOUDIFDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821a08 (    0xdc) CShadowedDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821ae4 (    0xdc) CWrappedDiskImage::copyPropertiesDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821bc0 (   0x2a8) DIResolveURLToBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197821e68 (   0x3c4) DIBackingStoreNewWithCFURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782222c (   0x1e0) CBSDBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782240c (    0x8c) DICheckKeyValueIfPresent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822498 (    0x50) CFDictionaryGetBooleanForKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978224e8 (    0x5c) CFURLStat [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822544 (    0x48) CFURLCreateCStringWithFileSystemPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782258c (    0x74) CFStringCreateCString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822600 (   0x19c) CBundleBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782279c (   0x1a8) CRAMBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822944 (   0x1e8) CDevBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822b2c (   0x1e8) CCURLBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822d14 (   0x184) CVectoredBackingStore::newProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197822e98 (   0x28c) CBSDBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823124 (    0x9c) CBSDBackingStore::CBSDBackingStore(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978231c0 (    0xd4) CCachedBackingStore::CCachedBackingStore(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823294 (    0x58) CBackingStore::CBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978232ec (    0x98) CDiskImageObject::CDiskImageObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823384 (    0xac) CDiskImageObject::retain() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823430 (    0x88) CCachedBackingStore::setupCache(int, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978234b8 (    0xec) CBackingStoreCache::CBackingStoreCache(void const*, int (*)(void const*, long long, unsigned long, unsigned long*, void const*), int, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978235a4 (    0x44) CDiskImageObject::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978235e8 (   0x12c) CBSDBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823714 (   0x1f8) CBackingStore::_setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782390c (    0x58) CBackingStore::_setPath(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823964 (    0x58) CBackingStore::_setName(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978239bc (    0x58) CBackingStore::_setExtension(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823a14 (    0x40) CBackingStore::_setURLArray(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823a54 (    0xa0) CBSDBackingStore::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823af4 (    0x3c) CBackingStore::_setUniqueIdentifier(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823b30 (    0x38) DIGetPermission [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823b68 (   0x158) CBSDBackingStore::_finishSetupWithOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823cc0 (    0x4c) CBSDBackingStore::setNoFollow(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823d0c (    0x24) DIBackingStoreGetUniqueIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823d30 (     0x8) CBackingStore::getUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823d38 (    0x18) DIDiskImageObjectRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823d50 (   0x16c) CDiskImageObject::release(CDiskImageObject*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823ebc (    0x4c) CBSDBackingStore::~CBSDBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823f08 (    0xd4) CBSDBackingStore::~CBSDBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197823fdc (   0x12c) CBSDBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824108 (    0x24) CBackingStore::_markDataForkClosed(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782412c (    0x10) CBackingStore::_isDataForkOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782413c (    0x6c) CCachedBackingStore::~CCachedBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978241a8 (    0x58) CCachedBackingStore::teardownCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824200 (    0x4c) CBackingStoreCache::~CBackingStoreCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782424c (    0x84) CBackingStoreCache::~CBackingStoreCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978242d0 (    0x58) CBackingStoreCacheEntry::~CBackingStoreCacheEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824328 (    0xdc) CBackingStore::~CBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824404 (    0x10) CBackingStore::_isResourceFileOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824414 (   0x134) CDiskImageObject::~CDiskImageObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824548 (   0x258) DIResolveURLToDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978247a0 (   0x290) CBSDBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824a30 (   0x268) CBSDBackingStore::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824c98 (    0x14) CDiskImageObject::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824cac (   0x20c) CBSDBackingStore::OpenLockFriendly(char const*, int, unsigned char, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824eb8 (     0xc) CBackingStore::_setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197824ec4 (   0x3bc) DIFileEncodingNewWithBackingStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825280 (   0x1c0) CBSDBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825440 (    0x10) CBackingStore::isWriteEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825450 (    0x48) CBSDBackingStore::getNoFollow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825498 (     0x8) CCachedBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978254a0 (    0x10) CBackingStore::_markDataForkOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978254b0 (    0x98) CBSDBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825548 (   0x2e0) CCachedBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825828 (    0xf8) CBackingStoreCache::lookupCache(long long, unsigned long, DIBSCacheLookupResult**, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825920 (   0x1d4) CCachedBackingStore::handleCacheReadMiss(long long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825af4 (    0x50) CBackingStoreCache::getOldestAvailable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825b44 (    0x5c) CBackingStoreCache::pinNewCacheRequest(long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825ba0 (    0x94) CBSDBackingStore::readDataForkUncached(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825c34 (    0x50) CBackingStoreCache::flush(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825c84 (    0x54) CBackingStoreCache::invalidateCacheStartingAt(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825cd8 (    0x9c) CEncryptedEncoding::openProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825d74 (    0x7c) CEncryptedEncoding::isEncryptedEncoding(CBackingStore*, __CFUUID const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197825df0 (   0x8f8) CEncryptedEncoding::copyHeaderInformation(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978266e8 (    0x20) CBSDBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826708 (   0x104) CEncryptedEncoding::V1Header_BigToHost(CEncryptedEncoding::V1Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782680c (    0x6c) CEncryptedEncoding::V2Header_BigToHost(CEncryptedEncoding::V2Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826878 (    0xd0) CUDIFEncoding::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826948 (   0x1b8) CUDIFEncoding::isUDIFFile(CBackingStore*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826b00 (   0x148) CUDIFFileAccess::readUDIFFileHeader(CBackingStore*, UDIFFileHeader*, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826c48 (    0xc4) DI_UDIFFileHeaderBigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826d0c (   0x1c4) CUDIFEncoding::newWithBackingStore(CBackingStore*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826ed0 (    0xbc) CUDIFEncoding::CUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826f8c (    0x3c) CFlatFileEncoding::CFlatFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197826fc8 (    0x38) CFileEncoding::CFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827000 (   0x2fc) CUDIFEncoding::setBackingStore(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978272fc (     0x8) CFlatFileEncoding::_setExportedDataForkSize(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827304 (     0x8) CFlatFileEncoding::_setExportedRsrcForkSize(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782730c (     0x8) CFlatFileEncoding::_setExportedFileType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827314 (     0x8) CBackingStore::getName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782731c (     0x8) CBackingStore::getExtension() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827324 (    0x3c) CFileEncoding::setBackingStore(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827360 (   0x1f0) CUDIFEncoding::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827550 (    0x10) CFlatFileEncoding::hasFileType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827560 (    0x10) CFlatFileEncoding::getFileType(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827570 (    0x10) CFlatFileEncoding::hasFileCreator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827580 (    0xa0) CSegmentedUDIFEncoding::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827620 (   0x140) CSegmentedUDIFEncoding::isSegmentedUDIFFile(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827760 (    0x10) CUDIFEncoding::getSegmentID(HDISegmentID*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827770 (     0x8) CUDIFEncoding::getSegmentNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827778 (     0x8) CUDIFEncoding::getSegmentCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827780 (    0xec) CSegmentedUDIFRawEncoding::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782786c (   0x164) DIResolveBackingStoreToDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978279d0 (   0x278) DIDiskImageNewWithBackingStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827c48 (   0x280) DIDiskImageInstantiatorProbe [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827ec8 (    0xb0) CUDIFDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197827f78 (    0xb4) CUDIFDiskImage::checkBackingStoreType(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782802c (   0x180) CSparseBundleDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978281ac (    0xd0) CSparseBundleDiskImage::checkExtension(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782827c (    0x30) CFileEncoding::getExtension() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978282ac (   0x130) CSparseDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978283dc (    0xa4) CFileEncoding::getBaseBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828480 (    0xd0) CSparseDiskImage::checkExtension(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828550 (    0xf8) CSparseFile::probe(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828648 (    0xc4) CFileEncoding::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782870c (    0x90) CSparseFile::readHeaderNode(CBackingStore*, SparseFileHeaderNode*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782879c (    0xf4) CUDIFEncoding::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828890 (     0x8) CFileEncoding::getBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828898 (    0x68) DI_SparseFileHeaderNode_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828900 (    0xc8) CFileEncoding::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978289c8 (   0x140) CRawDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828b08 (   0x298) CRawDiskImage::scoreLength(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828da0 (    0x14) CFlatFileEncoding::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828db4 (    0x94) CShadowedDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828e48 (    0x94) CWrappedDiskImage::newProbe(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197828edc (   0x258) CUDIFDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829134 (    0xdc) CUDIFDiskImage::CUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829210 (    0x50) CDiskImage::CDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829260 (   0x1a0) CUDIFDiskImage::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829400 (   0x2c0) CDiskImage::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978296c0 (     0x8) CDiskImage::getBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978296c8 (    0x30) CFileEncoding::isWriteEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978296f8 (     0x8) CDiskImage::setWriteEnabled(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829700 (    0x14) CUDIFEncoding::getUDIFFileHeader(UDIFFileHeader*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829714 (   0x698) CUDIFEncoding::openResourceFile(CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829dac (    0x10) CBackingStore::_isRsrcForkOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829dbc (    0x74) CXMLResourceFile::newWithXML(void const*, signed char, CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829e30 (    0xd4) CXMLResourceFile::CXMLResourceFile(void const*, signed char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829f04 (    0x34) CResourceFile::CResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829f38 (    0x64) CXMLResourceFile::setXMLData(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829f9c (    0x2c) CXMLResourceFile::OpenResFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197829fc8 (   0x1b8) CXMLResourceFile::_preloadResources() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a180 (   0x120) CXMLResourceFile::_retrieveSInt16(__CFDictionary const*, __CFString const*, short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a2a0 (    0x40) CBackingStore::_setResourceFile(CResourceFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a2e0 (    0x10) CBackingStore::_markResourceFileOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a2f0 (   0x3fc) CUDIFDiskImage::loadBLKXTable(CResourceFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a6ec (   0x2b0) CUDIFDiskImage::getBLKXIDRange(CResourceFile*, short*, short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a99c (    0x60) CXMLResourceFile::CountResources(unsigned int, short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782a9fc (    0x5c) CXMLResourceFile::_typeScan(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782aa58 (    0x44) CFStringCreateFromOSType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782aa9c (    0x8c) CXMLResourceFile::GetResource(unsigned int, short, char***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ab28 (    0xb4) CXMLResourceFile::_typeIDScan(unsigned int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782abdc (   0x1f8) CXMLResourceFile::_loadResource(unsigned int, __CFDictionary*, char***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782add4 (    0xac) CXMLResourceFile::_retrieveLoadedHandle(__CFDictionary const*, char***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ae80 (    0x90) CXMLResourceFile::_setLoadedHandle(__CFDictionary*, char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782af10 (    0xe0) CXMLResourceFile::GetResInfoExtended(char**, short*, unsigned int*, unsigned char*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782aff0 (   0x15c) CXMLResourceFile::_handleScan(char**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b14c (    0x3c) CFStringGetOSType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b188 (    0x88) CXMLResourceFile::_retrieveResourceName(__CFDictionary const*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b210 (    0x94) CXMLResourceFile::DetachResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b2a4 (    0xd0) DI_UDIFBlocksBigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b374 (   0x118) CUDIFDiskImage::validateBLKXTable(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782b48c (   0x670) CUDIFDiskImage::isValidBLKX(UDIFBlocks**, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782bafc (   0x328) CUDIFDiskImage::generateGlobalBLKXFromBLKXTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782be24 (   0x188) CUDIFEncoding::closeResourceFile(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782bfac (    0x24) CBackingStore::_markResourceFileClosed(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782bfd0 (    0x4c) CXMLResourceFile::~CXMLResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c01c (    0x70) CXMLResourceFile::~CXMLResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c08c (   0x128) CXMLResourceFile::_releaseAllResources() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c1b4 (     0x4) CResourceFile::~CResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c1b8 (    0x98) CUDIFDiskImage::allocateDecompressionBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c250 (    0x40) CDiskImage::setBackingStore(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c290 (     0x4) DIDiskImageObjectRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c294 (    0x40) DIDiskImageInUse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c2d4 (    0x38) CDiskImage::inUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c30c (   0x2d4) CBackingStore::inUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c5e0 (    0x30) CFileEncoding::getUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c610 (   0x1e8) DI_kextCreateDiskImageIdentifierArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c7f8 (    0x2c) DIDiskImageCopySLADictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c824 (    0x80) CDiskImage::copySLADictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782c8a4 (  0x2058) CDiskImage::LPicToCFDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782e8fc (    0x18) DIBSCacheLookupResultComparatorByOffset(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782e914 (    0x40) DIDiskImageHasChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782e954 (    0x84) CDiskImage::hasChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782e9d8 (    0x88) CUDIFDiskImage::copyImageChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ea60 (   0x128) CChecksum::newWith(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782eb88 (    0x38) CCRC32Checksum::CCRC32Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ebc0 (    0x74) CChecksum::CChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ec34 (    0x10) CCRC32Checksum::setValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ec44 (    0xb8) CChecksum::isEmpty() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ecfc (     0x8) CCRC32Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ed04 (     0x8) CCRC32Checksum::getBitCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ed0c (    0x4c) CCRC32Checksum::~CCRC32Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ed58 (    0x74) CChecksum::~CChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782edcc (    0x24) DIDiskImageCopyImageChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782edf0 (    0x2c) DIDiskImageGetBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ee1c (    0x2c) DIBackingStoreGetBaseBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ee48 (    0x38) DIBackingStoreIsRemote [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ee80 (    0xb4) CBSDBackingStore::isRemote() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ef34 (    0x38) DIBackingStoreOnLockedMedia [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782ef6c (    0x7c) CBSDBackingStore::onLockedMedia() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782efe8 (     0x4) DIDiskImageObjectSetDIProgressCallBackProcPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782efec (     0x8) CDiskImageObject::setDIProgressCallBackProcPtr(int (*)(int, void*, void*, void*, void*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782eff4 (     0x4) DIDiskImageObjectSetRefCon [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782eff8 (     0x8) CDiskImageObject::setRefCon(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f000 (    0x28) DIDiskImageValidateChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f028 (   0x1f4) CDiskImage::validateChecksumWithFlags(CChecksum**, CChecksum**, __CFString const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f21c (   0x118) CUDIFDiskImage::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f334 (   0x1c8) CDiskImage::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f4fc (   0x174) CDiskImage::_hasValidCachedChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f670 (    0xec) CBSDBackingStore::copyXAttr(__CFString const*, __CFData const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f75c (    0xa8) CBSDBackingStore::setXAttr(__CFString const*, __CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782f804 (   0x324) CUDIFDiskImage::validateChecksum(CChecksum**, CChecksum**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782fb28 (   0x1a8) CDiskImage::validateChecksum(CChecksum**, CChecksum**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782fcd0 (    0x48) CChecksum::newOfSameKindAs(CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782fd18 (    0x30) CUDIFDiskImage::calcChecksum(CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019782fd48 (   0x658) CUDIFDiskImage::calcChecksum(CChecksum*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978303a0 (    0x34) CCRC32Checksum::processStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978303d4 (    0x8c) CDiskImage::callProgressPercentProc(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830460 (     0x8) CDiskImageObject::getDIProgressCallBackProcPtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830468 (     0x4) DIDiskImageObjectGetRefCon [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783046c (     0x8) CDiskImageObject::getRefCon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830474 (    0x40) CUDIFDiskImage::getBLKX(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978304b4 (    0x30) CUDIFDiskImage::getBLKXName(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978304e4 (   0x148) CChecksum::newUsingChecksumStruct(HDIChecksumStruct const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783062c (    0xb4) CDiskImage::callProgressMessageProc(__CFString const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978306e0 (   0x5c0) CUDIFDiskImage::calcBLKXChecksum(CDiskImage*, UDIFBlocks**, CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830ca0 (    0x5c) CUDIFDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830cfc (    0x60) TAOQueue::TAOQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830d5c (    0x4c) TAOQueueElement::TAOQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830da8 (    0x98) TAOQueue::push(TAOQueueElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197830e40 (   0x3a8) thread_read(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978311e8 (   0x200) thread_checksum(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978313e8 (   0x10c) TAOQueue::dequeue(TAOQueueElement**, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978314f4 (   0x184) TAOQueue::dequeueWithFilter(int (*)(TAOQueueElement*, void*), void*, TAOQueueElement**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831678 (   0x4a0) CUDIFDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831b18 (    0xa0) CUDIFDiskImage::lookupChunk(long long, unsigned int*, unsigned int*, long long*, long long*, long long*, long long*, UDIFRun**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831bb8 (   0x158) CUDIFDiskImage::__decompressChunk(UDIFRun*, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831d10 (   0x16c) CUDIFDiskImage::_getDecompressor(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831e7c (    0x34) CZlibDecompressor::CZlibDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831eb0 (    0x34) CDecompressor::CDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831ee4 (    0xb4) CZlibDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197831f98 (   0x3e4) di_safe_uncompress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783237c (    0xac) TAOQueue::enqueue(TAOQueueElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832428 (    0x4c) BLKXChecksumQueueElement::~BLKXChecksumQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832474 (    0x5c) BLKXChecksumQueueElement::~BLKXChecksumQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978324d0 (    0x14) checksumDequeueFilter(BLKXChecksumQueueElement*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978324e4 (    0x44) TAOQueueElement::~TAOQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832528 (    0x2c) CCRC32Checksum::processBuffer(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832554 (    0x80) CDiskImage::callProgressCancelProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978325d4 (    0x30) TAOQueue::abort() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832604 (     0x4) CCRC32Checksum::processFinish() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832608 (    0x4c) TAOQueue::~TAOQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832654 (    0xb4) TAOQueue::~TAOQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832708 (     0x4) CDiskImage::copyChecksumReportString(CChecksum*, CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783270c (   0x2b0) CDiskImageObject::_copyChecksumReportString(CChecksum*, CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978329bc (   0x1fc) CChecksum::isEqual(CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832bb8 (    0xb4) CCRC32Checksum::getValue(void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832c6c (     0xc) CCRC32Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832c78 (   0x11c) CChecksum::getValueString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832d94 (   0x168) TAOCFStringCreatePaddedCopy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832efc (   0x100) CChecksum::getChecksumStruct(HDIChecksumStruct*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197832ffc (    0x9c) DIHLCopyStatusStageString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833098 (    0xb8) CUDIFDiskImage::_copyValidCachedChecksumData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833150 (   0x23c) CDiskImage::_copyValidCachedChecksumData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783338c (   0x158) CBSDBackingStore::copyFSUUID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978334e4 (    0x2c) DIDiskImageCopyChecksumReportString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833510 (    0x24) DIDiskImageObjectGetProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833534 (    0x24) DIDiskImageGetVirtualBandSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833558 (     0x8) CDiskImage::virtualImageBandSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833560 (    0x24) DIDiskImageIsKernelCompatible [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833584 (    0xb4) CDiskImage::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833638 (    0x54) CUDIFDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783368c (    0x98) CFileEncoding::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833724 (    0x30) CUDIFEncoding::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833754 (     0x8) CBSDBackingStore::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783375c (    0x24) DIDiskImageCopyKernelAttachDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833780 (   0x350) CDiskImage::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833ad0 (    0x38) CFileEncoding::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833b08 (    0xa4) CBSDBackingStore::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833bac (    0x5c) CBackingStore::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833c08 (     0x8) CBackingStore::getURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833c10 (    0xd0) CFStringCreateFromCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833ce0 (    0x1c) CFStringCreateCFData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833cfc (    0x48) CDiskImage::copyIconURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833d44 (    0xc8) CUDIFDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833e0c (     0x8) CDiskImage::isWriteEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833e14 (    0x98) CDiskImage::getUniqueIDDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197833eac (   0x23c) CDiskImage::createUniqueIDDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978340e8 (    0x40) CDiskImage::setUniqueIDDict(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834128 (    0xb8) CDiskImage::isEncrypted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978341e0 (    0x30) CFileEncoding::isEncrypted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834210 (     0x8) CBackingStore::isEncrypted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834218 (     0x8) CBackingStore::getBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834220 (    0x38) DIDiskImageObjectSetProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834258 (   0x190) DI_kextWaitQuiet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978343e8 (   0x294) DIAttachDrive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783467c (   0x140) DI_kextConnect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978347bc (    0x24) DIDiskImageCopyNonKernelAttachDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978347e0 (   0x43c) CDiskImage::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834c1c (    0x38) CFileEncoding::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834c54 (    0xbc) CBSDBackingStore::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834d10 (    0x5c) CBackingStore::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834d6c (     0x8) DI_kextCreateDrive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834d74 (   0x204) _DI_kextCreateDrive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197834f78 (   0x290) DI_kextDriveFindByDriveNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835208 (    0x5c) DI_kextDisconnect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835264 (    0x60) DI_kextDriveConnect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978352c4 (    0x6c) DI_kextDriveRegisterClientBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835330 (    0x68) DI_kextDriveActivate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835398 (     0x4) CUDIFCacheObject::CUDIFCacheObject(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783539c (    0xd0) CUDIFCacheObject::CUDIFCacheObject(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783546c (    0x60) CFileEncoding::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978354cc (   0x104) CBSDBackingStore::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978355d0 (     0xc) CBackingStore::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978355dc (    0x3c) DI_kextDriveGetRequest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835618 (    0x24) DIDiskImageReadSectors [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783563c (     0x8) CUDIFCacheObject::lockForRead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835644 (    0x98) CUDIFCacheObject::isCacheHit(long long, long long, long long*, void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978356dc (     0x8) CUDIFCacheObject::unlockForRead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978356e4 (    0x70) CUDIFDiskImage::__decompressChunkUsingGlobalBuffer(UDIFRun*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835754 (     0x8) CUDIFCacheObject::lockForWrite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783575c (    0xbc) CUDIFCacheObject::cacheData(long long, long long, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835818 (    0xac) CUDIFCacheObject::getCacheBuffer(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978358c4 (    0x58) CUDIFCacheBuffer::score() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783591c (    0x74) CUDIFCacheBuffer::setLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835990 (     0x8) CUDIFCacheObject::unlockForWrite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835998 (    0x6c) DI_kextDrivePutReply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835a04 (   0x3a4) DIGetLocalKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835da8 (    0xd4) DIIOKitObjectToDevEntry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835e7c (   0x114) DIDevEntryGetInformation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197835f90 (   0x10c) -[DIHelperProxy(DIHLHelperMasterProtocol) reportResultsToFramework:withReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783609c (   0x11c) -[DIHelperProxy(DIHLHelperConnectionMethods) disconnectFromHelper:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978361b8 (   0x16c) -[NSDictionary(DictionaryExtensions) boolForKey:defaultValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836324 (   0x15c) -[DIHelperProxy dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836480 (    0x4c) CUDIFDiskImage::~CUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978364cc (    0xd8) CUDIFDiskImage::~CUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978365a4 (    0x80) CUDIFDiskImage::_freeBLKXTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836624 (    0x4c) CUDIFCacheObject::~CUDIFCacheObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836670 (    0xa8) CUDIFCacheObject::~CUDIFCacheObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836718 (    0x5c) CUDIFCacheBuffer::~CUDIFCacheBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836774 (    0x4c) CZlibDecompressor::~CZlibDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978367c0 (     0x4) CDecompressor::~CDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978367c4 (    0x88) CDiskImage::~CDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783684c (    0x4c) CUDIFEncoding::~CUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836898 (   0x1c0) CUDIFEncoding::~CUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836a58 (     0x4) CFlatFileEncoding::~CFlatFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836a5c (   0x17c) CFileEncoding::~CFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836bd8 (    0x5c) DI_kextDriveDisconnect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836c34 (   0x210) DIHLDiskImageCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836e44 (    0x10) DIGetPluginPropertyDicts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197836e54 (   0x504) MKCopyLayoutInfoArrayWithOverhead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197837358 (   0x5bc) MKCopyDefaultLayouts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197837914 (     0x4) DIChecksumNewWith [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197837918 (   0x1f8) DICreateDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197837b10 (   0x288) DIDiskImageCreateWithCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197837d98 (   0x288) DIDiskImageCreatorProbe [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838020 (   0x128) CSparseBundleDiskImage::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838148 (   0x134) CSparseDiskImage::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783827c (   0x174) CRawDiskImage::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978383f0 (   0x114) CWOUDIFDiskImage::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838504 (   0x140) CWOUDIFDiskImage::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838644 (   0x12c) CDiskImage::_copyURLWithCorrectExtension(__CFURL const*, __CFString const*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838770 (   0x4f4) CWOUDIFDiskImage::_makeBackingStore(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838c64 (    0xa0) CWOUDIFDiskImage::_readSectorCount(__CFDictionary const*, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838d04 (    0x40) TAOCFDictionaryGetNumber [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197838d44 (   0x344) DICreateBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839088 (   0x3fc) DIFileEncodingCreateWithCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839484 (   0x13c) CEncryptedEncoding::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978395c0 (   0x3e0) DIBackingStoreCreateWithCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978399a0 (   0x1a8) CBSDBackingStore::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839b48 (   0x180) CBundleBackingStore::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839cc8 (    0x68) CRAMBackingStore::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839d30 (     0x8) CCURLBackingStore::createProbe(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839d38 (    0x50) CFDictionaryGetOSTypeForKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839d88 (    0x9c) CFTypeGetOSType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839e24 (   0x1c8) CBSDBackingStore::handleUIDGIDMode(char const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197839fec (   0x1a8) CBSDBackingStore::pathSupportedCapabilities(char const*, unsigned char*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a194 (   0x15c) CFURLCreateFromPathOrURLCString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a2f0 (    0x40) CUDIFFileAccess::setCFURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a330 (    0x64) CBackingStore::setExpandability(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a394 (    0x40) CBSDBackingStore::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a3d4 (     0x8) CBackingStore::getPermission() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a3dc (   0x148) CUDIFFileAccess::writeUDIFFileHeader(CBackingStore*, UDIFFileHeader const*, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a524 (    0xc4) DI_UDIFFileHeaderHostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a5e8 (    0x98) CBSDBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a680 (   0x33c) CCachedBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a9bc (     0x8) CBackingStore::getExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783a9c4 (   0x160) CCachedBackingStore::handleCacheWriteMiss(long long, unsigned long, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ab24 (    0x90) CBackingStoreCacheEntry::flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783abb4 (    0x2c) CCachedBackingStoreCacheFlushProc(void const*, long long, unsigned long, unsigned long*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783abe0 (    0x58) CBSDBackingStore::writeDataForkUncached(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ac38 (     0x4) CNoneChecksum::processStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ac3c (     0x8) CUDIFFileAccess::getUDIFFileHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ac44 (   0x1d8) CUDIFFileAccess::openFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ae1c (   0x3a0) CUDIFFileAccess::updateHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b1bc (   0x11c) CBSDBackingStore::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b2d8 (   0x184) CUDIFFileAccess::closeFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b45c (   0x104) CUDIFFileAccess::getResourceFile(CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b560 (    0xb8) DIMakeSimpleBLKX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b618 (    0x58) DIMakeStubBLKX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b670 (    0xcc) DI_UDIFBlocksHostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b73c (   0x21c) CResourceFile::AddResourceExtended(char**, unsigned int, short, short, unsigned char const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783b958 (   0x1a0) CXMLResourceFile::AddResource(char**, unsigned int, short, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783baf8 (    0x9c) CXMLResourceFile::_setSInt16(__CFDictionary*, __CFString const*, short, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bb94 (    0x70) CXMLResourceFile::_setResourceName(__CFDictionary*, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bc04 (    0x80) CXMLResourceFile::SetResAttrs(char**, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bc84 (    0xbc) CXMLResourceFile::ChangedResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bd40 (    0x84) CXMLResourceFile::WriteResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bdc4 (   0x17c) CXMLResourceFile::_writeResource(__CFDictionary*, unsigned int, char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783bf40 (    0xc8) DI_UDIFPartitionList_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c008 (    0xb8) DI_UDIF_pdisk_APDBlock_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c0c0 (    0xb4) DI_UDIF_pdisk_PartitionRecord_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c174 (   0x188) CXMLResourceFile::UpdateResFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c2fc (   0x5c8) CResourceFile::CopyResourcesFrom(CResourceFile*, unsigned char (*)(void*, unsigned int, short), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c8c4 (    0x54) CXMLResourceFile::CountTypes(short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783c918 (   0x108) CXMLResourceFile::GetIndType(unsigned int*, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ca20 (     0x8) CXMLResourceFile::GetResLoad() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ca28 (     0x8) CXMLResourceFile::SetResLoad(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ca30 (    0xc8) CXMLResourceFile::GetIndResource(unsigned int, short, char***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783caf8 (    0xfc) CXMLResourceFile::LoadResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783cbf4 (    0x8c) CXMLResourceFile::GetResAttrs(char**, short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783cc80 (     0x8) CUDIFFileAccess::getBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783cc88 (    0x4c) CUDIFFileAccess::~CUDIFFileAccess() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ccd4 (    0xa8) CUDIFFileAccess::~CUDIFFileAccess() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783cd7c (    0x4c) CNoneChecksum::~CNoneChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783cdc8 (    0x74) CNoneChecksum::~CNoneChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ce3c (   0x3a4) CWOUDIFDiskImage::_instantiateNewObject(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d1e0 (    0xc0) CFileEncoding::setExpandability(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d2a0 (    0x28) CUDIFEncoding::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d2c8 (    0x30) CFileEncoding::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d2f8 (     0x4) CWOUDIFDiskImage::CWOUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d2fc (    0x9c) CWOUDIFDiskImage::CWOUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d398 (    0x2c) CResourceFile::GetResInfoExtended(char**, short*, unsigned int*, unsigned char*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d3c4 (   0x228) CWOUDIFDiskImage::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d5ec (   0x124) CWOUDIFDiskImage::_setVariant(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d710 (    0x24) DIBackingStoreGetURLArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d734 (    0x30) CFileEncoding::getURLArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d764 (     0x8) CBackingStore::getURLArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d76c (   0x150) DIMediaKitCreateMKMediaRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d8bc (    0x2c) _DIMKMediaInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783d8e8 (   0x180) _DIMKMediaCopyProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783da68 (    0x24) DIDiskImageGetSectorCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783da8c (    0x40) DIDiskImageIsWriteEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783dacc (    0x44) _DIMKMediaWriteSectors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783db10 (    0x24) DIDiskImageWriteSectors [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783db34 (   0x3c0) CWOUDIFDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783def4 (   0x1e4) CWOUDIFDiskImage::_insertDeferredChunk(unsigned int, long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e0d8 (    0x80) CWOUDIFDiskImage::_initializeDCList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e158 (   0x424) CWOUDIFDiskImage::_splitChunk(unsigned int, long long, unsigned char, long long, unsigned char, long long, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e57c (    0x68) CWOUDIFDiskImage::__findDCBlockToUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e5e4 (    0xec) CWOUDIFDiskImage::__addToDCBlock(CWOUDIFDiskImage::WOUDIFDeferredCompressionBlock*, long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e6d0 (    0x68) CWOUDIFDiskImage::__compareDCBlocks(CWOUDIFDiskImage::WOUDIFDeferredCompressionBlock const*, CWOUDIFDiskImage::WOUDIFDeferredCompressionBlock const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e738 (     0xc) _DIMKMediaDeinitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e744 (    0x18) CWOUDIFDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e75c (    0x80) CBSDBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e7dc (    0xec) CCachedBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e8c8 (   0x130) CWOUDIFDiskImage::_handleUnknownChunkRead(UDIFRun*, long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783e9f8 (    0x2c) DIDiskImageIsEncrypted [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ea24 (    0xd0) CWOUDIFDiskImage::__flushDCBlock(CWOUDIFDiskImage::WOUDIFDeferredCompressionBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783eaf4 (    0x38) CUDIFDiskImage::lookupChunk(long long, unsigned int*, UDIFRun**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783eb2c (   0x340) CWOUDIFDiskImage::_replaceSectorsInChunk(unsigned int, unsigned int, long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783ee6c (   0x190) CWOUDIFDiskImage::__writeCompressedChunk(UDIFRun*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783effc (   0x250) CWOUDIFDiskImage::_getCompressor(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f24c (    0x44) CZlibCompressor::CZlibCompressor(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f290 (    0x34) CCompressor::CCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f2c4 (    0x1c) CZlibCompressor::CalculateBufferSize(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f2e0 (    0xb4) CZlibCompressor::compressData(void const*, int, void*, int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f394 (    0xe8) CWOUDIFDiskImage::_getFreespace(unsigned long, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f47c (    0xc8) CWOUDIFDiskImage::__setBSLogicalEOF(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f544 (   0x170) CUDIFEncoding::setDataForkLength(long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f6b4 (    0x30) CFileEncoding::getExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f6e4 (    0x2c) CBackingStore::setDataForkLength(long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f710 (   0x230) CUDIFEncoding::writeUDIFFileHeader(UDIFFileHeader const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783f940 (   0x160) CUDIFEncoding::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783faa0 (    0x2c) DIDiskImageFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783facc (    0x9c) CDiskImage::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fb68 (    0x3c) CFileEncoding::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fba4 (    0x2c) DIDiskImageHandlePowerChange [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fbd0 (   0x104) CDiskImage::handlePowerChange(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fcd4 (    0x38) CFileEncoding::handlePowerChange(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fd0c (    0xb8) CBackingStore::handlePowerChange(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fdc4 (    0xcc) CWOUDIFDiskImage::__writeReadWriteChunk(UDIFRun*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019783fe90 (   0x204) CUDIFDiskImage::readSectorChunk(long long, long long*, long long*, void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197840094 (   0x144) CWOUDIFDiskImage::_addFreespace(unsigned long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978401d8 (    0xb8) CWOUDIFDiskImage::__coalesceFreespace(CWOUDIFDiskImage::WOUDIFFreeSpaceEntry*, CWOUDIFDiskImage::WOUDIFFreeSpaceEntry*, CWOUDIFDiskImage::WOUDIFFreeSpaceEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197840290 (    0x2c) DIDiskImageContentResize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978402bc (  0x1224) CDiskImage::contentResize2(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978414e0 (    0x44) _DIMKMediaReadSectors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841524 (    0x40) TAOCFDictionaryGetArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841564 (    0x40) TAOCFArrayGetDictionaryAtIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978415a4 (    0x40) TAOCFDictionaryGetString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978415e4 (    0x24) CDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841608 (   0x310) CSubDiskImage::createNewWithDiskImage(CDiskImage*, long long, long long, CSubDiskImage**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841918 (     0x8) CSubDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841920 (    0x50) CSubDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841970 (    0x4c) CSubDiskImage::~CSubDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978419bc (    0x78) CSubDiskImage::~CSubDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841a34 (    0x50) CSubDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841a84 (    0xf4) CSubDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841b78 (    0x30) CWOUDIFDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841ba8 (   0x158) CWOUDIFDiskImage::_trimSectorsAfter(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841d00 (    0x5c) CWOUDIFDiskImage::_trimDCList(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197841d5c (   0x320) CWOUDIFDiskImage::_finalizeImage(unsigned char, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784207c (    0x58) CWOUDIFDiskImage::_flushDCList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978420d4 (   0x44c) CWOUDIFDiskImage::__regenerateBLKXTable(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842520 (   0x790) CDIPartitionScheme::scan(CDiskImage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842cb0 (    0x34) CDIFDiskPartitionScheme::CDIFDiskPartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842ce4 (    0x6c) CDIPartitionScheme::CDIPartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842d50 (    0x40) CDIPartitionScheme::_setDiskImage(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842d90 (    0x84) CDIFDiskPartitionScheme::probe(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197842e14 (   0x60c) CDIFDiskPartitionScheme::scan(int*, unsigned int, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843420 (     0x8) CDIPartitionScheme::_getDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843428 (    0x20) CDIFDiskPartitionScheme::isPartitionExtended(fdisk_part*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843448 (    0x20) CDIFDiskPartitionScheme::isPartitionUsed(fdisk_part*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843468 (     0x8) CDIFDiskPartitionScheme::isPartitionCorrupt(fdisk_part*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843470 (    0xa8) CDIFDiskPartitionScheme::isPartitionInvalid(fdisk_part*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843518 (   0x1e8) CDIFDiskPartitionScheme::instantiatePartitionDictionary(fdisk_part*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843700 (    0x78) CDIFDiskPartitionScheme::getContentTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197843778 (    0x24) CDIPartitionScheme::_createPartitionDictionary(unsigned long long, unsigned long long, unsigned int, __CFString const*, __CFString const*, __CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784379c (    0x2c) CDIPartitionScheme::_createPartitionDictionaryWithOptions(unsigned long long, unsigned long long, unsigned int, __CFString const*, __CFString const*, __CFData const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978437c8 (   0xdc4) DICopyIdentifiableFileSystemsInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784458c (    0xd0) _readSectors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784465c (   0x12c) CDIPartitionScheme::_detectOverlaps(__CFArray const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844788 (    0xe8) _partitionMapSorter(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844870 (   0x190) CDIPartitionScheme::_getPartInfo(__CFDictionary const*, unsigned long long*, unsigned long long*, int*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844a00 (    0x90) CDIPartitionScheme::_addFreespace(__CFArray*, unsigned long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844a90 (   0x1bc) CDIPartitionScheme::_createArrayOfGaps(__CFArray*, unsigned long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844c4c (     0xc) CDIFDiskPartitionScheme::schemeName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844c58 (    0x4c) CDIFDiskPartitionScheme::~CDIFDiskPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844ca4 (    0x78) CDIPartitionScheme::~CDIPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844d1c (    0x34) CDIApplePartitionScheme::CDIApplePartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844d50 (    0x84) CDIApplePartitionScheme::probe(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197844dd4 (   0x690) CDIApplePartitionScheme::scan(int*, unsigned int, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845464 (    0x4c) CDIApplePartitionScheme::~CDIApplePartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978454b0 (    0x34) CDIGUIDPartitionScheme::CDIGUIDPartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978454e4 (    0x84) CDIGUIDPartitionScheme::probe(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845568 (   0x6a8) CDIGUIDPartitionScheme::scan(int*, unsigned int, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845c10 (    0x24) CDIGUIDPartitionScheme::isPartitionUsed(gpt_ent*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845c34 (     0x8) CDIGUIDPartitionScheme::isPartitionCorrupt(gpt_ent*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845c3c (    0x64) CDIGUIDPartitionScheme::isPartitionInvalid(gpt_ent*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197845ca0 (   0x3b4) CDIGUIDPartitionScheme::instantiatePartitionDictionary(gpt_ent*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846054 (    0x80) CDIGUIDPartitionScheme::getContentTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978460d4 (     0xc) CDIGUIDPartitionScheme::schemeName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978460e0 (    0x4c) CDIGUIDPartitionScheme::~CDIGUIDPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784612c (    0x34) CDIISOPartitionScheme::CDIISOPartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846160 (   0x3f0) CDIISOPartitionScheme::scan(int*, unsigned int, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846550 (    0x4c) CDIISOPartitionScheme::~CDIISOPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784659c (    0x74) _CFDictionaryAddDictionaryValues [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846610 (   0x17c) __getPartitionInfo(__CFArray const*, long, long long*, long long*, __CFString const**, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784678c (    0xbc) CWOUDIFDiskImage::_splitAt(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846848 (   0x6f0) CWOUDIFDiskImage::___populateBLKX(UDIFBlocks**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197846f38 (    0xf0) CWOUDIFDiskImage::__syncBSLogicalAndPhysicalEOF() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847028 (   0x314) CWOUDIFDiskImage::__updateChecksums() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784733c (    0x7c) CCRC32Checksum::processConstant(unsigned char, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978473b8 (   0x5f0) CWOUDIFDiskImage::__updateBLKXTableAndReembedResources() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978479a8 (    0x14) __suppressBLKXResourcesFilter(void*, unsigned int, short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978479bc (   0x130) CXMLResourceFile::SetResInfoExtended(char**, short, unsigned char const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847aec (    0x6c) CXMLResourceFile::ReleaseResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847b58 (    0x5c) CXMLResourceFile::CloseResFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847bb4 (   0x228) CUDIFFileAccess::newWithBackingStore(CBackingStore*, CUDIFFileAccess**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847ddc (    0x2c) CUDIFEncoding::headerIsUDIF(UDIFFileHeader*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197847e08 (   0x504) CUDIFFileAccess::loadResourceFile(CBackingStore*, UDIFFileHeader const*, CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784830c (    0x70) CXMLResourceFile::DeleteAllResources(unsigned char (*)(void*, unsigned int, short), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784837c (   0x124) CXMLResourceFile::createXML(CResourceFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978484a0 (    0x4c) CWOUDIFDiskImage::~CWOUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978484ec (   0x110) CWOUDIFDiskImage::~CWOUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978485fc (    0x44) CWOUDIFDiskImage::_releaseDCList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197848640 (    0x4c) CZlibCompressor::~CZlibCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784868c (     0x4) CCompressor::~CCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197848690 (    0x24) CBackingStore::_markRsrcForkClosed(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978486b4 (    0xac) DIDeinitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197848760 (    0x2c) DIDiskImageHasRetainedObjects [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784878c (   0x520) CSparseBundleDiskImage::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197848cac (   0x238) TAOCFTypeGetNumberValue [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197848ee4 (   0x11c) CFURLCreateCopyAppendingPathExtensionWithOptions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849000 (   0x264) CBundleBackingStore::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849264 (   0x464) CBundleBackingStore::createBundle(__CFURL const*, __CFDictionary const*, CBackingStore**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978496c8 (    0x64) CFStringCreateFileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784972c (    0x58) CBundleBackingStore::writeInfoPlist(int, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849784 (   0x288) CBundleBackingStore::_writeInfoPlist(int, __CFDictionary const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849a0c (    0xdc) TAOCreateDirectory [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849ae8 (   0x270) CBundleBackingStore::createSecurityToken(int, __CFDictionary const*, CBackingStore**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197849d58 (   0x8dc) CEncryptedEncoding::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784a634 (    0x4c) canUseEncryptedImages() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784a680 (    0x64) DIEnableSecureMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784a6e4 (   0x308) CCURLBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784a9ec (    0xf4) CCURLBackingStore::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784aae0 (   0x10c) CCURLBackingStore::extractOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784abec (   0x1bc) CCURLBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ada8 (    0x74) CCURLBackingStore::setAuthenticatedURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ae1c (    0xf4) CCURLBackingStore::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784af10 (   0x1f0) TAOCFURLCreateWithResolvedHostname [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b100 (   0x180) TAOCFURLCreateWithCredentials [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b280 (    0x4c) CCURLBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b2cc (    0x4c) CCURLBackingStore::~CCURLBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b318 (   0x1b0) CCURLBackingStore::~CCURLBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b4c8 (   0x1bc) CCURLBackingStore::statImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784b684 (   0x4c4) CCURLBackingStore::_performAndProcessHeadOperation(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784bb48 (   0x2dc) CCURLBackingStore::_setupCURL(char**, unsigned char, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784be24 (    0x9c) _curl_receive_header(void*, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784bec0 (   0x128) CCURLBackingStore::mapCURLErrorToDIError(int, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784bfe8 (    0x94) CCURLBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c07c (   0x2b8) CCURLBackingStore::readDataForkUncached(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c334 (    0x68) _curl_receive_data(void*, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c39c (    0x8c) CCURLBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c428 (    0x14) CCURLBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c43c (     0x8) CCURLBackingStore::isRemote() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c444 (    0xbc) CCURLBackingStore::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c500 (   0x1ac) CCURLBackingStore::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784c6ac (   0x368) CRawDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ca14 (    0x74) CRawDiskImage::CRawDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ca88 (   0x1b8) CRawDiskImage::checkBackingStoreType(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cc40 (    0x4c) CRawDiskImage::~CRawDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cc8c (    0xd0) CRawDiskImage::~CRawDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cd5c (    0x68) CFDictionaryCreateMutableFromIOKitObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cdc4 (    0x70) CFArrayMatchesCFArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ce34 (    0xa4) CFArrayContainsCFArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ced8 (    0x2c) DIDiskImageHandleIdle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cf04 (    0xc4) CDiskImage::handleIdle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784cfc8 (    0x38) CFileEncoding::handleIdle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d000 (     0x8) CBackingStore::handleIdle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d008 (    0x2c) CBSDBackingStore::hasFileType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d034 (    0x80) getFileTypeAndCreator(char*, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d0b4 (     0xc) CBSDBackingStore::getFileType(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d0c0 (    0x2c) CBSDBackingStore::hasFileCreator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d0ec (    0x10) CBSDBackingStore::getFileCreator(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d0fc (   0x2e4) CSegmentedUDIFRawEncoding::isSegmentedUDIFRawFile(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d3e0 (    0x24) CBackingStore::getAuthenticatedURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d404 (   0x15c) CFURLExtractParts [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d560 (     0x4) CBackingStore::getBaseBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d564 (   0x138) CRawDiskImage::checkTypeCreator(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d69c (   0x1b0) CRawDiskImage::checkExtension(CBackingStore*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d84c (   0x100) CRawDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d94c (    0x90) CRawDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784d9dc (   0x108) CDiskImage::isUDF() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dae4 (    0x54) CDIPartitionScheme::_sortPartitionMap(__CFArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784db38 (     0xc) CDIISOPartitionScheme::schemeName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784db44 (    0x18) CBackingStore::openResourceFile(CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784db5c (    0x48) CDiskImage::copyImageChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dba4 (    0x14) CNoneChecksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dbb8 (     0x8) CRawDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dbc0 (    0x3c) CRawDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dbfc (   0x2cc) CEncryptedEncoding::open(CBackingStore*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784dec8 (   0x1cc) CEncryptedEncoding::CEncryptedEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784e094 (   0x420) CEncryptedEncoding::unlockCore_CAN_THROW(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784e4b4 (    0x80) CEncryptedEncoding::retrievePassphraseFromKeychainSearchList(__CFString const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784e534 (    0xdc) CEncryptedEncoding::retrievePassphraseFromKeychainCore(void const*, __CFString const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784e610 (   0x39c) CEncryptedEncoding::unlockCoreUsingSecPasswordDialog_CAN_THROW(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784e9ac (    0xbc) Security::CssmClient::Crypt::Crypt(Security::CssmClient::CSP const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ea68 (    0xa0) Security::CssmClient::Context::Context(Security::CssmClient::CSP const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784eb08 (   0x210) Security::CssmClient::DeriveKey::operator()(Security::CssmData*, Security::CssmClient::KeySpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ed18 (   0x168) Security::CssmClient::DeriveKey::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784ee80 (    0x60) Security::CssmClient::CSPImpl& Security::CssmClient::Object::impl<Security::CssmClient::CSPImpl>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784eee0 (   0x1c4) Security::CssmClient::AttachmentImpl::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f0a4 (    0x60) Security::CssmClient::ModuleImpl& Security::CssmClient::Object::impl<Security::CssmClient::ModuleImpl>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f104 (   0x1f8) Security::CssmClient::ModuleImpl::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f2fc (    0xac) Security::CssmClient::CssmImpl::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f3a8 (   0x120) Security::CssmClient::ObjectImpl::allocator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f4c8 (    0x58) Security::ModuleNexus<DefaultAllocators>::make() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f520 (    0x88) Security::CssmClient::AttachmentImpl::guid() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f5a8 (    0x30) Security::CssmAllocatorMemoryFunctions::relayMalloc(unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f5d8 (    0x48) DefaultAllocator::malloc(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f620 (    0x30) Security::CssmAllocatorMemoryFunctions::relayFree(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f650 (     0x8) DefaultAllocator::free(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f658 (    0x18) Security::CssmClient::ObjectImpl::check(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f670 (    0x90) Security::CssmClient::Key::makeNewKey(Security::CssmClient::CSP const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f700 (    0xf4) Security::CssmClient::Key::Key(Security::CssmClient::CSP const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f7f4 (    0x94) Security::RefPointer<Security::CssmClient::ObjectImpl>::setPointer(Security::CssmClient::ObjectImpl*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f888 (    0x60) Security::CssmClient::KeyImpl& Security::CssmClient::Object::impl<Security::CssmClient::KeyImpl>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f8e8 (    0x54) Security::CssmClient::KeyImpl::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f93c (    0x40) Security::CssmClient::Context::set(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f97c (    0x44) void Security::CssmClient::Context::set<Security::CssmData>(unsigned int, Security::CssmData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784f9c0 (    0x74) Security::CssmClient::Crypt::key(Security::CssmClient::Key const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fa34 (     0x8) Security::CssmOwnedData::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fa3c (   0x2b4) Security::CssmClient::Crypt::activate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fcf0 (    0x5c) Security::CssmError::throwMe(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fd4c (    0x60) Security::CommonError::CommonError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fdac (     0x4) Security::CssmManagedData::~CssmManagedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fdb0 (    0x98) Security::CssmClient::Context::~Context() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fe48 (    0x80) Security::CssmClient::Context::deactivate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019784fec8 (   0x154) Security::CssmClient::ObjectImpl::~ObjectImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785001c (    0x28) Security::CssmClient::KeyImpl::~KeyImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850044 (    0xb4) Security::CssmClient::KeyImpl::~KeyImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978500f8 (   0x138) Security::CssmClient::KeyImpl::deactivate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850230 (     0x4) Security::CssmError::~CssmError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850234 (     0x4) Security::CommonError::~CommonError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850238 (    0x68) DIError::throwMe(int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978502a0 (    0x4c) CEncryptedEncoding::~CEncryptedEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978502ec (   0x208) CEncryptedEncoding::~CEncryptedEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978504f4 (    0x30) Security::CssmClient::CSPImpl::~CSPImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850524 (    0xa4) Security::CssmClient::AttachmentImpl::~AttachmentImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978505c8 (    0x80) Security::CssmClient::AttachmentImpl::deactivate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850648 (     0x8) DIError::osStatus() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850650 (     0x4) DIError::~DIError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850654 (   0x35c) CEncryptedEncoding::preinitHeader_CAN_THROW(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978509b0 (   0x514) CEncryptedEncoding::create_CAN_THROW(CBackingStore&, __CFString const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197850ec4 (   0x784) CEncryptedEncoding::initV2Header_CAN_THROW(__CFString const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851648 (   0x2fc) CEncryptedEncoding::generateKeys() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851944 (    0xe8) Security::CssmClient::GenerateKey::GenerateKey(Security::CssmClient::CSP const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851a2c (   0x208) Security::CssmClient::GenerateKey::operator()(Security::CssmClient::KeySpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851c34 (   0x1a0) Security::CssmClient::GenerateKey::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851dd4 (     0x4) Security::CssmClient::DLAccess::~DLAccess() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197851dd8 (   0x2a0) CEncryptedEncoding::generateKeyBlob(Security::CssmAutoData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852078 (   0x1b8) Security::CssmClient::WrapKey::operator()(Security::CssmClient::Key&, Security::CssmData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852230 (    0x5c) Security::CssmClient::WrapKey::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785228c (   0x118) void Security::CssmOwnedData::copy<void>(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978523a4 (    0x50) Security::CssmAutoData::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978523f4 (    0x4c) DefaultAllocator::realloc(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852440 (   0x4dc) CEncryptedEncoding::getNewPassphrase_CAN_THROW(__CFString const*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785291c (    0xa4) CEncryptedEncoding::initPasswordHeader(__CFDictionary const*, CEncryptedEncoding::PasswordHeader&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978529c0 (    0xa0) Security::CssmClient::Random::generate(Security::CssmData&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852a60 (   0x140) Security::CssmClient::Random::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852ba0 (    0xac) Security::CssmClient::Encrypt::encrypt(Security::CssmData const*, unsigned int, Security::CssmData*, unsigned int, Security::CssmData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197852c4c (   0x478) CEncryptedEncoding::setupContexts() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978530c4 (   0x330) CEncryptedEncoding::writeHeaderAndKeys(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978533f4 (   0x348) CEncryptedEncoding::writeHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785373c (    0x5c) CEncryptedEncoding::PasswordHeader_HostToBig(CEncryptedEncoding::PasswordHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853798 (    0x5c) CEncryptedEncoding::V2AuthTable_HostToBig(CEncryptedEncoding::V2AuthTable&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978537f4 (    0x38) CEncryptedEncoding::proxyEncode(long long, unsigned long, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785382c (   0x1f8) CEncryptedEncoding::encrypt(long long, long long, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853a24 (    0xb4) CEncryptedEncoding::computeIV(unsigned int, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853ad8 (     0x8) CEncryptedEncoding::isEncrypted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853ae0 (    0x34) CEncryptedEncoding::proxyDecode(long long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853b14 (   0x1ec) CEncryptedEncoding::decrypt(long long, long long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197853d00 (   0x344) CEncryptedEncoding::parseKeyBlob(Security::CssmData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854044 (    0x24) Security::CssmKey::CssmKey(unsigned int, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854068 (   0x224) Security::CssmClient::UnwrapKey::operator()(Security::CssmKey const&, Security::CssmClient::KeySpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785428c (    0x34) CFileEncoding::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978542c0 (   0x204) CEncryptedEncoding::rationalizeSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978544c4 (   0x410) CEncryptedEncoding::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978548d4 (    0x64) CEncryptedEncoding::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854938 (    0xe4) CBundleBackingStore::handlePowerChange(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854a1c (   0x3f8) CSparseBundleDiskImage::handleIdle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854e14 (    0xc4) CBundleBackingStore::handleIdle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197854ed8 (   0x5d0) CEncryptedEncoding::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978554a8 (    0x30) CFileEncoding::hasFileType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978554d8 (    0x3c) CFileEncoding::getFileType(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855514 (    0x30) CFileEncoding::hasFileCreator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855544 (    0x34) CFileEncoding::getFileCreator(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855578 (   0x170) CEncryptedEncoding::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978556e8 (    0x30) CFileEncoding::getAuthenticatedURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855718 (    0x3c) CFileEncoding::openResourceFile(CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855754 (    0x68) CEncryptedEncoding::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978557bc (   0x248) CEncryptedEncoding::unlockCoreFromTTY() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855a04 (    0x8c) DIReadFromTTY [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855a90 (     0xc) CEncryptedEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855a9c (   0x178) CEncryptedEncoding::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855c14 (    0x84) Security::CssmClient::CSP::CSP(Security::Guid const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855c98 (    0x48) Security::CssmClient::CSPImpl::CSPImpl(Security::Guid const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197855ce0 (   0x6b4) Security::CssmClient::AttachmentImpl::AttachmentImpl(Security::Guid const&, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856394 (    0x94) Security::ModuleNexus<Security::CssmClient::CssmImpl::StandardCssm>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856428 (    0x94) Security::ModuleNexusCommon::create(void* (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978564bc (    0x4c) invocation function for block in Security::ModuleNexusCommon::create(void* (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856508 (    0x60) Security::ModuleNexus<Security::CssmClient::CssmImpl::StandardCssm>::make() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856568 (    0x34) Security::Mutex::Mutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785659c (    0x20) Security::Mutex::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978565bc (    0xb4) Security::Mutex::Mutex(Security::Mutex::Type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856670 (    0x50) Security::ModuleNexus<MutexAttributes>::make() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978566c0 (     0x4) Security::Mutex::Mutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978566c4 (    0x20) Security::Mutex::unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978566e4 (    0x60) Security::CssmClient::CssmImpl& Security::CssmClient::Object::impl<Security::CssmClient::CssmImpl>() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856744 (   0x104) Security::CssmClient::ObjectImpl::ObjectImpl(Security::CssmClient::Object const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856848 (    0x48) Security::RefPointer<Security::CssmClient::ObjectImpl>::~RefPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856890 (    0x60) Security::RefPointer<Security::CssmClient::ObjectImpl>::release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978568f0 (    0x80) Security::RefPointer<Security::CssmClient::ObjectImpl>::release_internal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856970 (     0x4) Security::Mutex::~Mutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856974 (    0xc0) Security::Mutex::~Mutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856a34 (   0x3a0) CEncryptedEncoding::unlock_CAN_THROW(CBackingStore&, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856dd4 (    0x78) CEncryptedEncoding::setBackingStore(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197856e4c (   0x470) CEncryptedEncoding::loadHeaderAndKeys() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978572bc (   0x320) CEncryptedEncoding::loadHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978575dc (     0x4) DIShadowedDiskImageNewWithDiskImageAndShadowURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978575e0 (   0x1d4) CShadowedDiskImage::newWithDiskImageAndShadowURL(CDiskImage*, __CFURL const*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978577b4 (    0xb8) CShadowedDiskImage::CShadowedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785786c (   0x28c) CShadowedDiskImage::setProperty(__CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197857af8 (    0x6c) CShadowedDiskImage::setShadowDiskImage(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197857b64 (   0x44c) CShadowedDiskImage::setShadowFile(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197857fb0 (   0x1dc) CShadowedDiskImage::convertOptionsToShadowOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785818c (   0x10c) CShadowedDiskImage::_createShadowFile(__CFURL const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858298 (   0x588) CBSDBackingStore::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858820 (   0x2cc) CShadowedDiskImage::_resetShadowFile(__CFDictionary const*, unsigned int, long long, long long, HDIChecksumStruct const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858aec (    0xc8) CShadowedDiskImage::setLogicalEOF(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858bb4 (   0x114) CShadowedDiskImage::writeHeaderNodeWithSlop(ShadowFileHeaderNode const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858cc8 (    0x80) DI_ShadowFileHeaderNode_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858d48 (   0x174) CShadowedDiskImage::_openShadowFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858ebc (    0x80) CShadowedDiskImage::readHeaderNode(ShadowFileHeaderNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858f3c (    0x80) DI_ShadowFileHeaderNode_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197858fbc (    0x70) CShadowedDiskImage::_isValidHeaderNode(ShadowFileHeaderNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785902c (   0x194) CShadowedDiskImage::_loadHeaderAndIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978591c0 (    0x44) CShadowedDiskImage::_destroyHeaderAndIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859204 (   0x1a0) CShadowedDiskImage::_loadShadowBitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978593a4 (   0x180) CShadowedDiskImage::_generateShadowTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859524 (    0x58) DIChecksumHDIChecksumAreEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785957c (   0x1f8) CShadowedDiskImage::inUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859774 (   0x368) CShadowedDiskImage::createUniqueIDDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859adc (    0xac) CFArrayContainsAnyCFArrayElements [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859b88 (     0xc) CShadowedDiskImage::virtualImageBandSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859b94 (    0xe4) CShadowedDiskImage::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859c78 (     0x8) CShadowedDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859c80 (     0x8) CShadowedDiskImage::getBaseDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859c88 (   0x1a8) CShadowedDiskImage::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859e30 (    0x30) CShadowedDiskImage::getBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859e60 (    0xd0) CShadowedDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859f30 (    0x98) CShadowedDiskImage::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197859fc8 (    0xbc) CShadowedDiskImage::_flushShadowBitmap(long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a084 (    0x74) CShadowedDiskImage::_updateHeaderNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a0f8 (   0x14c) CShadowedDiskImage::_updateIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a244 (     0x8) DI_kextCreateDriveInKernel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a24c (   0x160) CShadowedDiskImage::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a3ac (    0x4c) CShadowedDiskImage::~CShadowedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a3f8 (    0xf4) CShadowedDiskImage::~CShadowedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a4ec (   0x150) CShadowedDiskImage::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a63c (    0x20) CShadowedDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785a65c (   0x3b4) CShadowedDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785aa10 (   0x210) CShadowedDiskImage::_writeSectorsCore(long long, long long, long long*, void const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ac20 (   0x16c) CShadowedDiskImage::optimizedNewBandWithSectorUsingShadowBitmap(long long, long long, long long*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ad8c (   0x230) CShadowedDiskImage::_addBand(unsigned int, void const*, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785afbc (   0x148) CShadowedDiskImage::_markShadowBitmapRun(long long, long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b104 (    0xbc) CShadowedDiskImage::_findShadowBitmapRun(long long, long long, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b1c0 (    0xdc) CShadowedDiskImage::_readShadowedSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b29c (    0xdc) CShadowedDiskImage::_writeShadowedSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b378 (    0xa0) CShadowedDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b418 (     0x8) CDIApplePartitionScheme::isPartitionCorrupt(dpme*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b420 (   0x30c) CDIApplePartitionScheme::instantiatePartitionDictionary(dpme*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b72c (    0x80) CDIApplePartitionScheme::getContentTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b7ac (     0xc) CDIApplePartitionScheme::schemeName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b7b8 (     0x4) DIStrError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b7bc (    0x68) TAOStrError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b824 (    0xa4) TAOStrError_r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785b8c8 (   0x358) TAOCopyStrError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bc20 (    0xc8) DICopyStrError_real [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bce8 (    0xac) _copyStringFromCTTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bd94 (    0x20) CCURLBackingStore::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bdb4 (   0x1a8) CCURLBackingStore::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bf5c (     0x8) CCURLBackingStore::getAuthenticatedURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bf64 (     0x8) CBackingStore::hasFileType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bf6c (     0x8) CBackingStore::hasFileCreator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785bf74 (    0xd8) CSparseDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785c04c (    0xa8) CSparseDiskImage::CSparseDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785c0f4 (   0x2e0) CSparseFile::newWithBackingStore(CBackingStore*, CSparseFile**, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785c3d4 (    0x94) CSparseFile::loadPhysicalAndLogicalForkLengths() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785c468 (   0x738) CSparseFile::loadHeaderAndIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785cba0 (    0x44) CSparseFile::destroyHeaderAndIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785cbe4 (     0x8) CSparseFile::nodeSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785cbec (   0x7dc) CSparseFile::generateSparseTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d3c8 (     0x8) CSparseFile::sectorsPerBand() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d3d0 (     0x8) CSparseFile::bandsPerHeaderNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d3d8 (   0x400) CCURLBackingStore::acquireRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d7d8 (    0x28) CSparseDiskImage::virtualImageBandSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d800 (     0x8) CSparseDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d808 (     0xc) CSparseDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d814 (    0x30) CSparseDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d844 (     0x8) CSparseFile::totalSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785d84c (   0x1c4) CSparseDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785da10 (   0x160) CSparseFile::pinSectorRequest(long long, long long, long long*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785db70 (    0x4c) CSparseFile::sector2Band(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785dbbc (    0x48) CSparseFile::band2Sector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785dc04 (   0x168) CSparseFile::readSparseSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785dd6c (    0x4c) CSparseDiskImage::~CSparseDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ddb8 (    0xa0) CSparseDiskImage::~CSparseDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785de58 (    0x4c) CSparseFile::~CSparseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785dea4 (   0x164) CSparseFile::~CSparseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e008 (    0x98) CSparseFile::writeHeaderAndIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e0a0 (    0x94) CSparseFile::writeHeaderNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e134 (    0xf8) CSparseFile::writeIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e22c (    0xc4) CSparseFile::syncPhysicalAndLogicalForkLengths() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e2f0 (    0x34) CDINoPartitionScheme::CDINoPartitionScheme(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e324 (   0x400) CDINoPartitionScheme::scan(int*, unsigned int, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e724 (     0xc) CDINoPartitionScheme::schemeName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e730 (    0x4c) CDINoPartitionScheme::~CDINoPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785e77c (   0x450) CRawDiskImage::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ebcc (    0x9c) CBSDBackingStore::preallocateFile(int, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ec68 (    0xe8) CDiskImage::isISO9660(__CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ed50 (   0x100) CRawDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785ee50 (    0x64) CBSDBackingStore::setDataForkLengthUncached(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785eeb4 (   0x328) _udf_label_get [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785f1dc (   0x49c) CBundleBackingStore::newWithCFURLandToken(__CFURL const*, __CFDictionary const*, CBackingStore*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785f678 (    0xfc) CBundleBackingStore::CBundleBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785f774 (   0x190) CBundleBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785f904 (    0xa0) CBundleBackingStore::isRemote() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785f9a4 (    0xa0) CBundleBackingStore::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785fa44 (   0x170) CBundleBackingStore::setSecurityToken(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785fbb4 (   0x2f4) CBundleBackingStore::processBundle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019785fea8 (   0x1e0) CBundleBackingStore::copyInfoPlist(int, __CFDictionary**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860088 (   0x3f4) CBundleBackingStore::processOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786047c (    0x40) TAOCFDictionaryGetBoolean [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978604bc (   0x1a0) CBundleBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786065c (   0x25c) CBundleBackingStore::getProperty(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978608b8 (   0x138) CSparseBundleDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978609f0 (    0x74) CSparseBundleDiskImage::CSparseBundleDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860a64 (    0xb8) CBundleBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860b1c (    0x10) CBundleBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860b2c (    0x80) CSparseBundleDiskImage::processOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860bac (     0x8) CSparseBundleDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860bb4 (   0x108) CSparseBundleDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860cbc (   0x2cc) CBundleBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197860f88 (   0x3e8) CBundleBackingStore::getBandEntry(long long, BandEntry**, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861370 (   0x468) CBundleBackingStore::writeDataToBandEntry(BandEntry*, long long, unsigned long, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978617d8 (    0x78) toggleCaching(BandEntry*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861850 (   0x170) CBundleBackingStore::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978619c0 (    0x28) CBundleBackingStore::isEncrypted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978619e8 (     0xc) CSparseBundleDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978619f4 (    0x48) CSparseBundleDiskImage::virtualImageBandSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861a3c (    0x4c) CBundleBackingStore::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861a88 (   0x1f8) CBundleBackingStore::setBandsOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861c80 (    0xf8) CSparseBundleDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861d78 (   0x220) CBundleBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197861f98 (   0x3bc) CBundleBackingStore::readDataFromBandEntry(BandEntry*, long long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862354 (    0xc8) CBundleBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786241c (   0x164) CBundleBackingStore::flushBands(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862580 (   0x218) CBundleBackingStore::flushBand(BandEntry*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862798 (    0x3c) invocation function for block in CBundleBackingStore::flushBands(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978627d4 (    0x68) CSparseBundleDiskImage::~CSparseBundleDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786283c (    0x4c) CBundleBackingStore::~CBundleBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862888 (   0x2ac) CBundleBackingStore::~CBundleBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862b34 (    0xc4) CBundleBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862bf8 (    0xb0) CBundleBackingStore::releaseBands() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862ca8 (    0xd8) CBundleBackingStore::releaseBand(BandEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862d80 (   0x1f0) invocation function for block in CBundleBackingStore::releaseBand(BandEntry*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862f70 (    0x3c) invocation function for block in CBundleBackingStore::releaseBands() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197862fac (   0x2c0) CSparseDiskImage::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786326c (   0x42c) CSparseFile::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, long long, long long, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863698 (    0xdc) CSparseFile::writeHeaderNode(CBackingStore*, SparseFileHeaderNode const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863774 (    0x68) DI_SparseFileHeaderNode_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978637dc (   0x1b8) CSparseDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863994 (    0x7c) CSparseFile::newBandWithSector(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863a10 (   0x424) CSparseFile::addBand(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863e34 (   0x18c) CSparseFile::setLogicalDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197863fc0 (   0x168) CSparseFile::writeSparseSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864128 (    0x84) CSparseDiskImage::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978641ac (    0xa4) CSparseFile::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864250 (   0x154) TAOCFURLDelete [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978643a4 (    0x24) DIDiskImageValidateChecksumWithFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978643c8 (     0x4) CADCDecompressor::CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978643cc (    0xe4) CADCDecompressor::CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978644b0 (    0x3c) CKenCodeCodec::CKenCodeCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978644ec (    0x20) CADCCodec::CADCCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786450c (    0x20) CKenCodeCodec::InitDecompressor(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786452c (   0x1d8) CADCDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864704 (    0x2c) DIDiskImageCallProgressMessageProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864730 (    0x4c) CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786477c (    0x6c) CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978647e8 (     0x4) CADCCodec::~CADCCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978647ec (    0x50) CKenCodeCodec::~CKenCodeCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786483c (    0x24) DIChecksumGetShortName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864860 (    0x24) DIChecksumGetValueString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864884 (   0x180) DIDiskImageCreateChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864a04 (   0x1c4) DIDiskImageChecksumProbe [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864bc8 (    0xb4) CUDIFDiskImage::checksumProbe(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864c7c (   0x114) CRawDiskImage::checksumProbe(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864d90 (   0x1f4) CRawDiskImage::checksum(CDiskImage*, __CFDictionary const*, CChecksum**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197864f84 (   0x6c8) CDiskImage::calcChecksum(CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786564c (   0x220) thread_read(GlobalState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786586c (   0x19c) thread_checksum(GlobalState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197865a08 (    0x14) checksumDequeueFilter(ChecksumQueueElement*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197865a1c (    0x4c) ChecksumQueueElement::~ChecksumQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197865a68 (   0x6b4) CUDIFDiskImage::checksum(CDiskImage*, __CFDictionary const*, CChecksum**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786611c (    0x68) CUDIFDiskImage::freeUDIFBlocksHandleArray(UDIFBlocks***, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866184 (    0x74) CDIApplePartitionScheme::isPartitionInvalid(dpme*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978661f8 (   0x1b4) CDevBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978663ac (    0xcc) DIDevEntryToRawDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866478 (   0x178) CDevBackingStore::setURL_Permissions_and_OpenFile(__CFURL const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978665f0 (   0x354) CDevBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866944 (   0x124) CDevBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866a68 (   0x25c) CDevBackingStore::_grabDeviceInfo(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866cc4 (    0x18) CDevBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866cdc (   0x248) CDevBackingStore::_readWriteDataFork(unsigned char, long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866f24 (    0xcc) CDevBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197866ff0 (    0x14) CDevBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197867004 (    0x4c) CDevBackingStore::~CDevBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197867050 (   0x17c) CDevBackingStore::~CDevBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978671cc (   0x260) DIDiskImageConvertWithDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786742c (   0x20c) DIDiskImageConvertProbe [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197867638 (   0x124) CUDIFDiskImage::convertProbe(__CFURL const*, CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786775c (    0xb8) CSparseBundleDiskImage::convertProbe(__CFURL const*, CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197867814 (    0x98) CSparseDiskImage::convertProbe(__CFURL const*, CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978678ac (    0xa4) CRawDiskImage::convertProbe(__CFURL const*, CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197867950 (   0xd4c) CRawDiskImage::convertWithDiskImage(__CFURL const*, CDiskImage*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786869c (    0x20) DITimer::DITimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978686bc (     0xc) DITimer::start() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978686c8 (     0xc) DITimer::end() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978686d4 (    0x30) DITimer::getNanoseconds() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197868704 (     0x4) DITimer::~DITimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197868708 (    0x24) DIDiskImageCopyImageInformation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786872c (   0x34c) CRawDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197868a78 (   0x79c) CDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197869214 (     0xc) CBSDBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197869220 (    0x70) CDiskImage::hasApplePartitionMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197869290 (     0x8) CNoneChecksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197869298 (     0x8) CNoneChecksum::getBitCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978692a0 (     0xc) CRawDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978692ac (     0x8) CDiskImage::getImageFormat() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978692b4 (    0x30) DIDiskImageCopyResizeInformation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978692e4 (   0x124) CRawDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197869408 (    0xe0) CBSDBackingStore::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978694e8 (   0xb38) CUDIFDiskImage::convertWithDiskImage(__CFURL const*, CDiskImage*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786a020 (    0x5c) CFURLStatFS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786a07c (    0x7c) BLKXConvertWorkElement::BLKXConvertWorkElement(UDIFRun*, BLKXConvertDataElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786a0f8 (    0x54) BLKXConvertWorkElement::setDataElement(BLKXConvertDataElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786a14c (   0x5c8) __readThread(UDIFConvertThreadInitialization*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786a714 (   0x4a0) __writeThread(UDIFConvertThreadInitialization*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786abb4 (   0x2dc) __checksumThread(UDIFConvertThreadInitialization*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ae90 (    0xac) __analyzeRun(UDIFRun*, unsigned char*, unsigned char*, unsigned char*, unsigned char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786af3c (     0x8) TAOQueueElement::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786af44 (   0x140) __addNewSegmentAndOpenIt(UDIFConvertState*, unsigned int, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b084 (     0x8) TAOQueueElement::unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b08c (   0x140) DICreateNewUDIFSegmentURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b1cc (    0x4c) BLKXConvertDataElement::release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b218 (    0x14) __checksumDequeueFilter(BLKXConvertWorkElement*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b22c (    0x14) CUDIFFileAccess::setMaxSectorsPerSegment(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b240 (    0x14) __writeDequeueFilter(BLKXConvertWorkElement*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b254 (   0x18c) CUDIFFileAccess::appendData(void const*, long long, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b3e0 (    0x4c) BLKXConvertWorkElement::~BLKXConvertWorkElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b42c (    0xb0) BLKXConvertWorkElement::~BLKXConvertWorkElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b4dc (    0x4c) BLKXConvertDataElement::~BLKXConvertDataElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b528 (    0x60) BLKXConvertDataElement::~BLKXConvertDataElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b588 (    0x3c) CUDIFFileAccess::getFileSize(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b5c4 (   0x140) CUDIFEncoding::newWithUDIFFileAccess(CUDIFFileAccess*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786b704 (   0xa00) CUDIFDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c104 (     0xc) CUDIFEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c110 (    0x30) CFileEncoding::getURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c140 (    0x30) CFileEncoding::getName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c170 (     0xc) CUDIFDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c17c (   0x184) CUDIFDiskImage::_isMultiCastReady() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c300 (   0x4f8) __compressThread(UDIFConvertThreadInitialization*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c7f8 (     0x4) CADCCompressor::CADCCompressor(short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c7fc (    0xec) CADCCompressor::CADCCompressor(short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c8e8 (    0xa4) CKenCodeCodec::InitCompressor(unsigned int, short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c98c (     0x8) CADCCompressor::CalculateBufferSize(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786c994 (   0x260) CADCCompressor::compressData(void const*, int, void*, int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786cbf4 (    0x90) CKenCodeCodec::InitNodes(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786cc84 (   0x254) CKenCodeCodec::TreeSearch(unsigned char*, unsigned char*, unsigned char*, unsigned char*, short*, unsigned int*, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ced8 (    0x94) CKenCodeCodec::ReplaceParent(CKenCodeCodec::Node**, CKenCodeCodec::Node*, CKenCodeCodec::Node*, unsigned char*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786cf6c (   0x194) CKenCodeCodec::FreeNode(CKenCodeCodec::Node*, CKenCodeCodec::Node**, short, unsigned char*, short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d100 (    0x4c) CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d14c (    0x6c) CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d1b8 (    0x58) CBZip2Compressor::CBZip2Compressor(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d210 (    0x1c) CBZip2Compressor::CalculateBufferSize(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d22c (    0xa4) CBZip2Compressor::compressData(void const*, int, void*, int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d2d0 (    0x4c) CBZip2Compressor::~CBZip2Compressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d31c (    0x34) CBZip2Decompressor::CBZip2Decompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d350 (    0x48) CBZip2Decompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d398 (    0x4c) CBZip2Decompressor::~CBZip2Decompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d3e4 (     0x4) CMD5Checksum::CMD5Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d3e8 (    0xb0) CMD5Checksum::CMD5Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d498 (    0x40) CCommonDigestChecksumSuperclass::CCommonDigestChecksumSuperclass() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d4d8 (     0xc) CCommonDigestChecksumSuperclass::processStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d4e4 (     0x8) CMD5Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d4ec (     0xc) CCommonDigestChecksumSuperclass::processBuffer(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d4f8 (    0x10) CCommonDigestChecksumSuperclass::processFinish() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d508 (     0xc) CCommonDigestChecksumSuperclass::getBitCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d514 (    0xc4) CCommonDigestChecksumSuperclass::getValue(void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d5d8 (     0xc) CMD5Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d5e4 (    0x4c) CMD5Checksum::~CMD5Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d630 (    0x68) CCommonDigestChecksumSuperclass::~CCommonDigestChecksumSuperclass() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d698 (     0xc) CCommonDigestChecksumSuperclass::setValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d6a4 (    0x24) CResourceFile::SetResInfoExtended(char**, short, unsigned char const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d6c8 (    0xc4) CDiskImage::isHFSPlus() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d78c (   0x10c) TAO_HFSPlusVolumeHeader_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d898 (    0x48) TAO_HFSPlusForkData_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d8e0 (    0x24) DIChecksumProcessBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d904 (     0x4) CNoneChecksum::processBuffer(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d908 (     0x4) CNoneChecksum::processFinish() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d90c (     0x4) CNoneChecksum::getValue(void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d910 (    0x5c) DICreatePermissionDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d96c (     0x8) CDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d974 (     0x8) CBackingStore::_getResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d97c (    0x24) DIChecksumProcessConstant [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d9a0 (     0x4) CKenCodeCompressor::CKenCodeCompressor(unsigned int, short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786d9a4 (    0xc4) CKenCodeCompressor::CKenCodeCompressor(unsigned int, short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786da68 (     0x8) CKenCodeCompressor::CalculateBufferSize(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786da70 (   0x1b8) CKenCodeCompressor::compressData(void const*, int, void*, int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786dc28 (    0xd4) CKenCodeCompressor::CodewordGenBin(short, unsigned int, unsigned int, unsigned char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786dcfc (   0x4f4) CKenCodeCodec::EncodeCopyLengthBinHuff2(short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e1f0 (   0x130) CKenCodeCodec::EncodeLitLenBin(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e320 (    0x48) CKenCodeCodec::PushString(unsigned char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e368 (   0x12c) CKenCodeCodec::EncodeOffsetBin(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e494 (   0x200) CKenCodeCodec::EncodeOffset(unsigned int, unsigned int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e694 (    0x10) CKenCodeCodec::CalcByteCnt(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e6a4 (    0x4c) CKenCodeCompressor::~CKenCodeCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e6f0 (    0xa0) CKenCodeCompressor::~CKenCodeCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e790 (     0x4) CKenCodeDecompressor::CKenCodeDecompressor(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e794 (    0xac) CKenCodeDecompressor::CKenCodeDecompressor(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e840 (   0x1a0) CKenCodeDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786e9e0 (    0xac) CKenCodeDecompressor::CodewordDecBin(short*, unsigned int*, short*, unsigned int, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ea8c (   0x170) CKenCodeCodec::DecodeCopyLengthBinHuff2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ebfc (    0x74) CKenCodeCodec::CountHiBits(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ec70 (    0x9c) CKenCodeCodec::PopBits(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ed0c (    0xcc) CKenCodeCodec::DecodeLitLenBin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786edd8 (    0x90) CKenCodeCodec::PopString(unsigned char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ee68 (   0x12c) CKenCodeCodec::DecodeOffsetBin(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ef94 (   0x128) CKenCodeCodec::DecodeOffset(unsigned int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f0bc (    0x4c) CKenCodeDecompressor::~CKenCodeDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f108 (    0x54) CKenCodeDecompressor::~CKenCodeDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f15c (   0x288) CWrappedDiskImage::createNewWithDiskImage(CDiskImage*, __CFDictionary const*, CWrappedDiskImage**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f3e4 (    0xf8) CWrappedDiskImage::_copyDefaultAppropriateScheme(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f4dc (    0xe8) CAppleWrappedDiskImage::probeScheme(CDiskImage*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f5c4 (    0xa4) CWrappedDiskImage::CWrappedDiskImage(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f668 (   0x1ec) CWrappedDiskImage::_setDiskImage(CDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786f854 (   0x4c0) CAppleWrappedDiskImage::generatePartitionData(int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786fd14 (   0x134) CAppleWrappedDiskImage::_calculateParameters(long long, long long*, long long*, int, long long*, long long*, long long*, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786fe48 (    0x4c) CAppleWrappedDiskImage::~CAppleWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786fe94 (    0x5c) CAppleWrappedDiskImage::~CAppleWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786fef0 (    0x8c) CWrappedDiskImage::~CWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019786ff7c (    0xe8) CFDiskWrappedDiskImage::probeScheme(CDiskImage*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870064 (   0x250) CFDiskWrappedDiskImage::generatePartitionData(int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978702b4 (    0x4c) CFDiskWrappedDiskImage::~CFDiskWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870300 (    0x5c) CFDiskWrappedDiskImage::~CFDiskWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787035c (    0x38) CAppleWrappedDiskImage::CAppleWrappedDiskImage(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870394 (   0x188) CWrappedDiskImage::readSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787051c (    0xe4) CAppleWrappedDiskImage::readNonEmbeddedSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870600 (     0x8) CWrappedDiskImage::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870608 (    0xb4) CWrappedDiskImage::callProgressMessageProc(__CFString const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978706bc (    0xa8) CWrappedDiskImage::callProgressPercentProc(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870764 (    0x90) CWrappedDiskImage::callProgressCancelProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978707f4 (    0xb4) DI_UDIF_pdisk_APDBlock_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978708a8 (   0x170) CSegmentedUDIFEncoding::newWithUDIFFileAccessArray(__CFArray const*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870a18 (    0x90) CSegmentedUDIFEncoding::CSegmentedUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870aa8 (    0x74) CSegmentedUDIFEncoding::setBackingStoreFromUDIFFileAccessArray(__CFArray const*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870b1c (   0x308) CSegmentedUDIFEncoding::_buildSegmentListFromUDIFFileAccessArray(__CFArray const*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870e24 (   0x128) CSegmentedUDIFEncoding::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870f4c (    0x30) CFileEncoding::getPermission() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197870f7c (   0x144) CSegmentedUDIFEncoding::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978710c0 (    0x88) CSegmentedUDIFEncoding::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871148 (   0x1e0) CSegmentedUDIFEncoding::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871328 (   0x13c) CSegmentedUDIFEncoding::_getBackingStoreForOffset(long long, unsigned long, long long*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871464 (    0xd0) CSegmentedUDIFEncoding::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871534 (    0x10) CSegmentedUDIFEncoding::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871544 (    0xa4) CSegmentedUDIFEncoding::openResourceFile(CResourceFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978715e8 (    0x88) CSegmentedUDIFEncoding::closeResourceFile(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871670 (     0x4) CSegmentedUDIFEncoding::getURLArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871674 (    0x4c) CSegmentedUDIFEncoding::~CSegmentedUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978716c0 (   0x244) CSegmentedUDIFEncoding::~CSegmentedUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871904 (   0x1b4) CSegmentedUDIFEncoding::newWithBackingStore(CBackingStore*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871ab8 (   0x3bc) CSegmentedUDIFEncoding::_buildSegmentList(CBackingStore*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197871e74 (   0x3f4) CSegmentedUDIFEncoding::_findSegmentBS(CUDIFEncoding*, int, __CFDictionary const*, CSegmentedUDIFEncoding::UDIFSegmentListElem*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872268 (   0x270) CSegmentedUDIFEncoding::_isURLTheSegment(CUDIFEncoding*, __CFURL const*, __CFDictionary const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978724d8 (     0x8) CSegmentedUDIFEncoding::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978724e0 (     0xc) CSegmentedUDIFEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978724ec (    0x5c) CEncryptedEncoding::V2AuthTable_BigToHost(CEncryptedEncoding::V2AuthTable&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872548 (    0x5c) CEncryptedEncoding::PasswordHeader_BigToHost(CEncryptedEncoding::PasswordHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978725a4 (    0x34) DIDiskImageCopyMountPointDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978725d8 (   0x35c) CDiskImage::copyMountPointDictionary(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872934 (    0x80) _createSetFromUniqueIDDict(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978729b4 (    0x70) TAOCFSetAddValuesFromArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872a24 (     0x4) DIPartitionSchemeScan [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872a28 (    0xc8) _DIMKMediaCopyProperties [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872af0 (   0x39c) CRawDiskImage::copyMountPointDictionary(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872e8c (    0x24) DIDiskImageGetImageFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872eb0 (     0x4) DIUDIFFileAccessNewWithCFURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197872eb4 (   0x2c0) CUDIFFileAccess::newWithCFURL(__CFURL const*, __CFDictionary const*, CUDIFFileAccess**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873174 (     0x4) DIUDIFFileAccessGetHeaderStyle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873178 (     0x8) CUDIFFileAccess::getHeaderStyle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873180 (     0x8) CBackingStore::onIOThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873188 (    0x10) CBackingStore::_markRsrcForkOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873198 (   0x31c) CSparseDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978734b4 (     0xc) CSparseDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978734c0 (    0x34) CSparseFile::bandsInUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978734f4 (    0x40) CSparseDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873534 (    0x2c) DIBackingStoreGetDataForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873560 (     0x4) DIUDIFDiskImageGetUDIFFileHeader [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873564 (     0x8) CUDIFDiskImage::getUDIFFileHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787356c (    0x38) DIBackingStoreHasFileType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978735a4 (    0x2c) DIBackingStoreGetFileType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978735d0 (    0x38) DIBackingStoreHasFileCreator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873608 (    0x24) DIBackingStoreGetFileCreator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787362c (    0x10) CFlatFileEncoding::getFileCreator(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787363c (     0x4) DIUDIFDiskImageGetImageVariant [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873640 (     0x8) CUDIFDiskImage::getImageVariant() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873648 (     0x4) DIUDIFDiskImageGetBLKX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787364c (     0x4) DIUDIFFileAccessCreateWithCFURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873650 (     0x4) DIUDIFFileAccessOpenFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873654 (     0x4) DIUDIFFileAccessGetUDIFFileHeader [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873658 (    0x2c) DIBackingStoreReadDataFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873684 (     0x4) DIUDIFFileAccessAppendData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873688 (     0x4) DIUDIFFileAccessCloseFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787368c (     0x4) DIUDIFFileAccessUpdateHeader [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873690 (     0x4) DIUDIFFileAccessGetResourceFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873694 (    0x2c) DIBackingStoreOpenResourceFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978736c0 (    0x2c) DIResourceFileCopyResourcesFrom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978736ec (    0x24) DIResourceFileCountResources [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873710 (    0x24) DIResourceFileGetIndResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873734 (    0x24) DIResourceFileChangedResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873758 (    0x24) DIResourceFileWriteResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787377c (    0x24) DIResourceFileUpdateResFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978737a0 (    0x30) DIBackingStoreCloseResourceFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978737d0 (     0x8) CSegmentedUDIFEncoding::getUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978737d8 (    0x8c) CSegmentedUDIFEncoding::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873864 (     0x8) CBSDBackingStore::canEnumerateDirectory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787386c (   0x198) CBSDBackingStore::enumerateDirectory(int, __CFURL const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873a04 (    0xcc) POSIXPathToCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873ad0 (   0x174) CSegmentedUDIFEncoding::_generateMissingSegmentString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873c44 (   0x1fc) CDiskImageObject::_bitmapToSegmentsString(bool*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873e40 (    0x10) DIHLCopyResizeInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873e50 (    0x40) TAOCFDictionaryGetDictionary [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873e90 (    0x10) DIHLResizeImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873ea0 (    0xf4) CRawDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873f94 (    0x10) CBundleBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197873fa4 (   0x2a4) CBundleBackingStore::openSecurityToken(__CFURL const*, int, __CFDictionary const*, CBackingStore**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874248 (   0x134) DIHLDiskImageCompact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787437c (     0x4) DISubDiskImageCreateNewWithDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874380 (     0x8) CSparseBundleDiskImage::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874388 (    0x24) DIBackingStoreGetURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978743ac (    0x24) DIDiskImageCompact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978743d0 (   0x210) CDiskImage::compact(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978745e0 (     0x4) CDiskImageCompactor::CDiskImageCompactor(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978745e4 (    0xa4) CDiskImageCompactor::CDiskImageCompactor(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874688 (   0x4d4) CDiskImageCompactor::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874b5c (    0x6c) CDiskImage::callProgressButtonProc(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874bc8 (     0x8) CSparseBundleDiskImage::_compactStart(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874bd0 (   0x23c) CDiskImageCompactor::reclaimFreeSpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197874e0c (   0x36c) CDiskImageCompactor::reclaimVolumeSpace(CDiskImage*, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197875178 (   0x104) CSparseBundleDiskImage::_cullSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787527c (   0x358) CBundleBackingStore::cullByteRange(long long, long long, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978755d4 (   0x150) CBundleBackingStore::destroyBand(BandEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197875724 (     0x8) CDiskImage::_compactFinish(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787572c (   0x174) TAOCFStringCreateWithBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978758a0 (    0x4c) CDiskImageCompactor::~CDiskImageCompactor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978758ec (    0x64) CDiskImageCompactor::~CDiskImageCompactor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197875950 (   0x488) CEncryptedEncoding::eraseKeys(CBackingStore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197875dd8 (   0x248) DIHLCopyEncryptedStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876020 (     0x4) DIBackingStoreCopyEncryptedInformation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876024 (   0x190) DIHLEraseImageKeys [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978761b4 (     0x4) DIBackingStoreEraseKeys [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978761b8 (     0x4) DIBackingStoreDelete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978761bc (    0x38) DIBackingStoreIsWriteEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978761f4 (    0x24) DIBackingStoreSetPermission [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876218 (    0x24) DIBackingStoreGetName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787623c (    0x24) DIBackingStoreGetPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876260 (    0x24) DIBackingStoreGetExtension [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876284 (    0x38) DIBackingStoreIsEncrypted [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978762bc (    0x24) DIBackingStoreSetAttr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978762e0 (    0x24) DIBackingStoreCopyAttr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876304 (    0x24) DIBackingStoreChangeKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876328 (    0x2c) DIBackingStoreGetMaxRsrcForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876354 (    0x2c) DIBackingStoreGetMaxDataForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876380 (    0x2c) DIBackingStoreSetRsrcForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978763ac (    0x2c) DIBackingStoreSetDataForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978763d8 (    0x2c) DIBackingStoreGetRsrcForkLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876404 (    0x2c) DIBackingStoreOpenDataFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876430 (    0x2c) DIBackingStoreWriteDataFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787645c (    0x30) DIBackingStoreFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787648c (    0x2c) DIBackingStoreFlushWithFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978764b8 (    0x30) DIBackingStoreCloseDataFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978764e8 (    0x2c) DIBackingStoreOpenRsrcFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876514 (    0x2c) DIBackingStoreReadRsrcFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876540 (    0x2c) DIBackingStoreWriteRsrcFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787656c (    0x30) DIBackingStoreCloseRsrcFork [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787659c (    0x2c) DIBackingStoreSetFileType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978765c8 (    0x24) DIBackingStoreSetFileCreator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978765ec (    0x38) DIBackingStoreCanEnumerateDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876624 (    0x24) DIBackingStoreEnumerateDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876648 (    0x38) DIBackingStoreAllowExpandability [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876680 (    0x38) DIBackingStoreGetExpandability [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978766b8 (    0x2c) DIBackingStoreSetExpandability [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978766e4 (    0x2c) DIBackingStoreUnlink [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876710 (    0x2c) DIBackingStoreHandlePowerChange [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787673c (    0x2c) DIBackingStoreHandleIdle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876768 (     0x4) DIChecksumNewOfSameKindAs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787676c (     0x4) DIChecksumNewUsingChecksumStruct [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876770 (     0x4) DIChecksumDelete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876774 (    0x24) DIChecksumSetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876798 (    0x24) DIChecksumGetChecksumType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978767bc (    0x24) DIChecksumGetLongName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978767e0 (    0x24) DIChecksumGetBitCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876804 (    0x24) DIChecksumGetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876828 (    0x38) DIChecksumIsEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876860 (    0x38) DIChecksumIsEmpty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876898 (    0x24) DIChecksumGetChecksumStruct [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978768bc (    0x24) DIChecksumProcessStart [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978768e0 (    0x24) DIChecksumProcessFinish [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876904 (     0x4) DIDiskImageCopyIconURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876908 (     0x4) DIDiskImageDelete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787690c (    0x2c) DIDiskImageUnmapExtents [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876938 (    0x2c) DIDiskImageChangeKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876964 (    0x24) DIDiskImageSetSectorCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876988 (    0x24) DIDiskImageCalcChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978769ac (    0x38) DIDiskImageHasValidChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978769e4 (    0x2c) DIDiskImageBurn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876a10 (    0x2c) DIDiskImageEstimateSectorsNeededForBurn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876a3c (    0x2c) DIDiskImageCanBeBurned [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876a68 (    0x2c) DIDiskImageCanBeAppended [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876a94 (    0x2c) DIDiskImageCreateDRTrackForImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876ac0 (    0x2c) DIDiskImageSetProgressMessageProcPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876aec (    0x2c) DIDiskImageSetProgressPercentProcPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876b18 (    0x2c) DIDiskImageSetProgressCancelProcPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876b44 (    0x2c) DIDiskImageCancelNow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876b70 (    0x2c) DIDiskImageCallProgressPercentProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876b9c (    0x40) DIDiskImageCallProgressCancelProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876bdc (    0x24) DIDiskImageCopyFormatDescriptionString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c00 (    0x2c) DIDiskImageGetUniqueIDDict [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c2c (    0x24) DIDiskImageAttach [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c50 (     0x4) DIUDIFDiskImageGetBLKXStartingAt [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c54 (     0x4) DIShadowedDiskImageCopyDefaultShadowFileURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c58 (     0x4) DIShadowedDiskImageCreateDefaultShadowFileName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c5c (    0x24) DIDiskImageObjectGetClassName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c80 (     0x4) DIDiskImageObjectGetDIProgressCallBackProcPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c84 (     0x4) DIDiskImageObjectCallDIProgressCallBackProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876c88 (    0x24) DIResourceFileCountTypes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876cac (    0x24) DIResourceFileGetIndType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876cd0 (    0x24) DIResourceFileAddResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876cf4 (    0x24) DIResourceFileGetResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876d18 (    0x24) DIResourceFileDetachResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876d3c (    0x24) DIResourceFileReleaseResource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876d60 (    0x24) DIResourceFileGetResInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876d84 (    0x24) DIResourceFileSetResInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876da8 (    0x24) DIResourceFileGetResAttrs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876dcc (    0x24) DIResourceFileSetResAttrs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876df0 (    0x2c) DIResourceFileDeleteAllResources [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e1c (    0x2c) DIResourceFileDeleteAllResourcesOfType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e48 (     0x4) DIResourceFileCopyXMLRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e4c (    0x10) DIResourceFileCreateWithXMLRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e5c (     0x4) DIUDIFFileAccessDelete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e60 (     0x4) DIUDIFFileAccessDeleteFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e64 (     0x4) DIUDIFFileAccessGetBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e68 (     0x8) DIUDIFFileAccessSetMaxSectorsPerSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e70 (     0x4) DIUDIFFileAccessWriteResourceFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876e74 (    0xa4) DI_kextTestNetBootHook [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876f18 (    0x3c) DIGetDriverVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876f54 (    0x34) DIGetFrameworkVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197876f88 (   0x224) DIIsPotentiallyValidDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978771ac (   0x220) DIResolvePathsToDiskImageWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978773cc (    0x90) DIResolvePathsToDiskImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787745c (     0x8) DICopyDiskImageMountPointDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197877464 (   0x284) DIAttachImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978776e8 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978776f4 (     0x4) CUDIFFileAccess::~CUDIFFileAccess() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978776f8 (   0x368) CUDIFFileAccess::createWithCFURL(__CFURL const*, __CFDictionary const*, UDIFFileHeaderStyle, unsigned int, unsigned int, CUDIFFileAccess**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197877a60 (    0x4c) CUDIFFileAccess::deleteFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197877aac (   0x148) CUDIFFileAccess::appendSpace(long long, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197877bf4 (   0x7c0) CUDIFFileAccess::writeResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978783b4 (     0xc) CUDIFFileAccess::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978783c0 (    0x38) DICopyDevEntries [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978783f8 (   0x24c) DIAddChildDevEntries [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197878644 (    0x9c) DIGetDevEntryInTree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978786e0 (   0x1d4) DIEnumerateWholeDiskDevEntries [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978788b4 (    0x58) DIDevEntryCopyDeviceInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787890c (    0xf4) DIDevEntryToIOKitObject [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197878a00 (   0x538) DIIOKitObjectCopyDeviceInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197878f38 (    0xcc) DIRawDevEntryToBlockDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197879004 (   0x2c0) DI_logBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978792c4 (   0x1f0) DI_logHDIRequest64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978794b4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001978794d4 (   0x1f0) DI_logHDIReply64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978796c4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001978796e4 (    0xe0) DI_logHDIImageCreateBlock64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978797c4 (    0x90) DI_logUDIFblkx [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197879854 (   0x428) DI_logUDIFblkx_ptr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197879c7c (   0x13c) DI_logHDIChecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197879db8 (   0x2e4) DI_logUDIFRun [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a09c (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000019787a0c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019787a0d0 (   0x3d8) DI_logUDIFFileHeader [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a4a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019787a4b8 (    0xb0) DI_logHDISegmentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a568 (   0x114) DI_logUDIFPartitionList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a67c (    0xf8) DI_logUDIF_pdisk_PartitionRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a774 (   0x200) DI_logUDIF_pdisk_APDBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a974 (    0x10) DI_logVH [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787a984 (   0x424) DI_logVH_to_file [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ada8 (    0xec) DI_logHFSPlusForkData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ae94 (    0x3c) DICopyWriteableFileSystemsArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787aed0 (     0x8) _DIMKMediaSetProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787aed8 (     0xc) _DIMKMediaDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787aee4 (   0x5f4) _refreshLayout [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b4d8 (   0x2d8) DIMKHybridLayoutIsWritable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7b0 (     0x4) CBackingStore::~CBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7b4 (     0x4) CBackingStore::~CBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7b8 (     0x8) CBackingStore::isRemote() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7c0 (     0x8) CBackingStore::onLockedMedia() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7c8 (     0x8) CBackingStore::canEnumerateDirectory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7d0 (    0x10) CBackingStore::enumerateDirectory(int, __CFURL const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7e0 (     0x8) CBackingStore::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7e8 (     0x8) CBackingStore::getPath() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7f0 (     0x8) CBackingStore::setFileCreator(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b7f8 (    0x10) CBackingStore::getFileCreator(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b808 (     0x8) CBackingStore::setFileType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b810 (    0x10) CBackingStore::getFileType(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b820 (     0x8) CBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b828 (     0x8) CBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b830 (     0x8) CBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b838 (    0x10) CBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b848 (    0x2c) CBackingStore::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b874 (     0x8) CBackingStore::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b87c (    0x10) CBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b88c (    0x10) CBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b89c (     0x4) CBackingStore::closeResourceFile(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8a0 (     0x8) CBackingStore::openRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8a8 (     0x8) CBackingStore::closeRsrcFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8b0 (    0x10) CBackingStore::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8c0 (    0x10) CBackingStore::getMaxRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8d0 (     0x8) CBackingStore::setRsrcForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8d8 (    0x10) CBackingStore::readRsrcFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8e8 (    0x10) CBackingStore::writeRsrcFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b8f8 (     0x8) CBackingStore::unlink() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b900 (     0x8) CBackingStore::unmapExtents(dk_extent_t*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b908 (     0x8) CBackingStore::rename(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b910 (    0x1c) CBackingStore::validate(__CFString const**, __CFDictionary const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787b92c (   0x258) CBackingStore::_addPathAndThrottleUnit(__CFDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bb84 (     0xc) CBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bb90 (     0x8) CBackingStore::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bb98 (     0x8) CBackingStore::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bba0 (     0x8) CBackingStore::copyXAttr(__CFString const*, __CFData const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bba8 (     0x8) CBackingStore::setXAttr(__CFString const*, __CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bbb0 (     0x8) CBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bbb8 (     0x8) CBackingStore::proxyDecode(long long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bbc0 (     0x8) CBackingStore::proxyEncode(long long, unsigned long, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bbc8 (     0x4) CBSDBackingStore::~CBSDBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bbcc (    0xa8) setFileTypeAndCreator(char*, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bc74 (     0x8) CBSDBackingStore::_setFD(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bc7c (    0x28) CBSDBackingStore::unlink() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bca4 (    0xb0) CBSDBackingStore::invalidateCacheOnOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bd54 (     0x8) CBSDBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bd5c (    0x30) CBSDBackingStore::setFileCreator(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bd8c (    0x30) CBSDBackingStore::setFileType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bdbc (   0x194) CBSDBackingStore::hasIOScheduling() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787bf50 (   0x104) CCURLBackingStore::CCURLBackingStore(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c054 (     0x4) CCURLBackingStore::~CCURLBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c058 (    0x18) CCURLBackingStore::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c070 (     0x8) CCURLBackingStore::onLockedMedia() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c078 (   0x790) CCURLBackingStore::_tryStatWithKeychainInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c808 (    0xb4) CCURLBackingStore::_tryStatPromptingUserForPassword() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c8bc (    0x74) CCURLBackingStore::_extractContentLengthFromPartialContent(char const*, long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787c930 (    0xf4) (null) [FUNC, FunctionStarts] 
                0x000000019787ca24 (   0x148) CCURLBackingStore::_updateAuthInfoFromUser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cb6c (    0x94) CCURLBackingStore::promptForUserAndPassword(__CFString*, __CFString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cc00 (    0x58) CCURLBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cc58 (    0xc4) CCURLBackingStore::openRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cd1c (    0x8c) CCURLBackingStore::closeRsrcFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cda8 (    0x84) CCURLBackingStore::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ce2c (   0x118) CCURLBackingStore::readRsrcFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cf44 (    0xa0) CCURLBackingStore::writeRsrcFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787cfe4 (   0x2e0) CCURLBackingStore::promptForUserAndPasswordTTY(__CFString*, __CFString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d2c4 (   0x394) CCURLBackingStore::promptForUserAndPasswordCF(__CFString*, __CFString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d658 (     0xc) CCURLBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d664 (     0x8) CCURLBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d66c (     0x8) CCURLBackingStore::writeDataForkUncached(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d674 (     0x8) CCachedBackingStore::setDataForkLengthUncached(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d67c (     0x4) CDevBackingStore::~CDevBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d680 (    0x20) CDevBackingStore::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d6a0 (   0x134) CDevBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d7d4 (     0x8) CDevBackingStore::canEnumerateDirectory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d7dc (    0x18) CDevBackingStore::enumerateDirectory(int, __CFURL const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d7f4 (     0x8) CDevBackingStore::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d7fc (     0x8) CDevBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d804 (    0x18) CDevBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d81c (     0x8) CDevBackingStore::inUse() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d824 (     0xc) CDevBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d830 (     0x8) CDevBackingStore::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d838 (    0xa4) CRAMBackingStore::CRAMBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787d8dc (   0x190) CRAMBackingStore::~CRAMBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787da6c (     0x4) CRAMBackingStore::~CRAMBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787da70 (    0x4c) CRAMBackingStore::~CRAMBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787dabc (   0x174) CRAMBackingStore::decomposeURL(__CFURL const*, __CFString const**, long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787dc30 (   0x214) CRAMBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787de44 (   0x280) CRAMBackingStore::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e0c4 (    0x68) CRAMBackingStore::allocateSpace(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e12c (    0x44) CRAMBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e170 (    0x44) CRAMBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e1b4 (    0xac) CRAMBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e260 (    0xa8) CRAMBackingStore::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e308 (    0x4c) CRAMBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e354 (     0x8) CRAMBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e35c (    0x14) CRAMBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e370 (    0x44) CRAMBackingStore::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e3b4 (    0xec) CRAMBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e4a0 (    0xec) CRAMBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e58c (     0x8) CRAMBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e594 (    0x70) CRAMBackingStore::copyNonKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e604 (     0xc) CRAMBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e610 (     0x8) CRAMBackingStore::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e618 (    0x90) DIDiskImageBeginRetainCountTracking [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e6a8 (    0xa0) DIDiskImageObjectCopyDescription(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e748 (     0xc) DIDiskImageObjectEqual(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e754 (    0xb0) DIDiskImageDisplayRetainCountTracking [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e804 (    0x30) DIDiskImageEndRetainCountTracking [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e834 (     0x4) CDiskImageObject::~CDiskImageObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e838 (    0x4c) CDiskImageObject::~CDiskImageObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e884 (    0x2c) CDiskImageObject::callDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e8b0 (     0xc) CDiskImageObject::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e8bc (     0x4) CChecksum::~CChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e8c0 (     0x4) CChecksum::~CChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e8c4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000019787e8fc (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000019787e934 (     0xc) CChecksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e940 (     0x8) CChecksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e948 (     0x4) CCRC32Checksum::~CCRC32Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e94c (     0xc) CCRC32Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e958 (     0xc) CCRC32Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e964 (     0x4) CMD5Checksum::~CMD5Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e968 (     0xc) CMD5Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e974 (     0xc) CMD5Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787e980 (    0xc0) CNoneChecksum::CNoneChecksum(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea40 (     0x4) CNoneChecksum::CNoneChecksum(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea44 (     0x4) CNoneChecksum::~CNoneChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea48 (     0x4) CNoneChecksum::processConstant(unsigned char, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea4c (     0x8) CNoneChecksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea54 (     0x4) CNoneChecksum::setValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea58 (     0xc) CNoneChecksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ea64 (    0xb0) CSHA1Checksum::CSHA1Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb14 (     0x4) CSHA1Checksum::CSHA1Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb18 (     0x4) CSHA1Checksum::~CSHA1Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb1c (    0x4c) CSHA1Checksum::~CSHA1Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb68 (     0xc) CSHA1Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb74 (     0x8) CSHA1Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb7c (     0xc) CSHA1Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb88 (     0xc) CSHA1Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb94 (     0x4) CCompressor::~CCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb98 (     0x4) CCompressor::~CCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eb9c (     0x4) CDecompressor::~CDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eba0 (     0x4) CDecompressor::~CDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eba4 (     0xc) CCompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebb0 (     0xc) CDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebbc (     0x4) CADCCodec::~CADCCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebc0 (     0x4) CADCCodec::~CADCCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebc4 (     0x4) CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebc8 (     0x8) non-virtual thunk to CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebd0 (     0x8) non-virtual thunk to CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebd8 (     0x8) non-virtual thunk to CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebe0 (     0x8) non-virtual thunk to CADCCompressor::~CADCCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebe8 (     0xc) CADCCompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebf4 (     0x4) CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ebf8 (     0x8) non-virtual thunk to CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec00 (     0x8) non-virtual thunk to CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec08 (     0x8) non-virtual thunk to CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec10 (     0x8) non-virtual thunk to CADCDecompressor::~CADCDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec18 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000019787ec34 (     0xc) CADCDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec40 (    0x50) CKenCodeCodec::~CKenCodeCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ec90 (    0x5c) CKenCodeCodec::~CKenCodeCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ecec (    0x28) (null) [FUNC, FunctionStarts] 
                0x000000019787ed14 (     0x4) CKenCodeCompressor::~CKenCodeCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed18 (     0x8) non-virtual thunk to CKenCodeCompressor::~CKenCodeCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed20 (     0x8) non-virtual thunk to CKenCodeCompressor::~CKenCodeCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed28 (     0xc) CKenCodeCompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed34 (     0x4) CKenCodeDecompressor::~CKenCodeDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed38 (     0x8) non-virtual thunk to CKenCodeDecompressor::~CKenCodeDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed40 (     0x8) non-virtual thunk to CKenCodeDecompressor::~CKenCodeDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed48 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000019787ed64 (     0xc) CKenCodeDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ed70 (    0x34) CDARTRLEDecompressor::CDARTRLEDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eda4 (     0x4) CDARTRLEDecompressor::~CDARTRLEDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eda8 (    0x4c) CDARTRLEDecompressor::~CDARTRLEDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787edf4 (    0xcc) CDARTRLEDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eec0 (    0xe0) CDARTLZHDecompressor::CDARTLZHDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787efa0 (     0x4) CDARTLZHDecompressor::~CDARTLZHDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787efa4 (    0x4c) CDARTLZHDecompressor::~CDARTLZHDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787eff0 (    0xb8) CDARTLZHDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f0a8 (   0x148) CDARTLZHDecompressor::Decode(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f1f0 (    0x98) CDARTLZHDecompressor::GetBit(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f288 (    0x88) CDARTLZHDecompressor::GetByte(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f310 (    0xb4) CDARTLZHDecompressor::StartHuff(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f3c4 (   0x168) CDARTLZHDecompressor::reconst(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f52c (    0xf8) CDARTLZHDecompressor::update(CDARTLZHDecompressor::DARTDecompressState*, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f624 (    0x64) CDARTLZHDecompressor::DecodeChar(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f688 (    0x74) CDARTLZHDecompressor::DecodePosition(CDARTLZHDecompressor::DARTDecompressState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f6fc (     0xc) CDARTRLEDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f708 (     0xc) CDARTLZHDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f714 (     0x4) CZlibCompressor::~CZlibCompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f718 (     0xc) CZlibCompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f724 (     0x4) CZlibDecompressor::~CZlibDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f728 (     0xc) CZlibDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f734 (     0x4) CDiskImage::~CDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f738 (     0x4) CDiskImage::~CDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f73c (   0x194) CDiskImage::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8d0 (     0x8) CDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8d8 (     0xc) CDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8e4 (     0x8) CDiskImage::setProgressMessageProcPtr(void (*)(void*, __CFString const*, unsigned long)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8ec (     0x8) CDiskImage::setProgressPercentProcPtr(void (*)(void*, float)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8f4 (     0x8) CDiskImage::setProgressCancelProcPtr(int (*)(void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f8fc (     0xc) CDiskImage::cancelNow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787f908 (   0x158) CDiskImage::_prepKernDict(__CFDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fa60 (   0x1e8) CDiskImage::attach(__CFDictionary const*, __CFDictionary const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fc48 (   0x150) _copyBLKXTable(CDiskImage*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fd98 (    0x38) CDiskImage::readSectorChunk(long long, long long*, long long*, void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fdd0 (    0xa4) CDiskImage::unmapExtents(dk_extent_t*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fe74 (    0x54) ChecksumQueueElement::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787fec8 (   0x124) CDiskImage::_addFormatToConvertArray(__CFArray*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFBoolean const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019787ffec (   0x164) CDiskImage::_addFormatToCreateArray(__CFArray*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFBoolean const*, __CFBoolean const*, __CFBoolean const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880150 (   0x100) CDiskImage::_addTypeToChecksumArray(__CFArray*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFBoolean const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880250 (     0xc) CDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788025c (     0x8) CDiskImage::_compactStart(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880264 (     0x8) CDiskImage::_cullSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788026c (     0x8) CDiskImage::getPreferredChunkSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880274 (     0x4) ChecksumQueueElement::~ChecksumQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880278 (   0x9d0) CDiskImage::burn(__CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880c48 (   0x3a0) CDiskImage::createDRTrack(__CFDictionary const*, __DRTrack**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197880fe8 (   0x1d0) ParseTrackOptions(__CFDictionary const*, CDiskImage*, TrackContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978811b8 (   0x86c) AnalyzeSource(TrackContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197881a24 (    0xd8) _fsTrackFromBlocks(TrackContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197881afc (    0xb8) _trackReleaseCallback(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197881bb4 (   0x37c) _createBurnRef(BurnContext*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197881f30 (    0xe0) CDiskImage::estimateSectorsNeededForBurn(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882010 (    0x7c) CDiskImage::canBeBurned() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788208c (    0x58) CDiskImage::blocksCanBeBurned() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978820e4 (    0x58) CDiskImage::canBeAppended() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788213c (   0x5ec) BurnDataSource(__DRTrack*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882728 (   0x3b8) ProgressCallback(__DRNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882ae0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000197882b0c (   0x180) ConvertStateToEnum(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882c8c (    0xc4) CDiskImage::isHFSX() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882d50 (     0x8) CDiskImage::isUFS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882d58 (   0x158) CDiskImage::isProDOS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882eb0 (    0xec) CLibCompressionBaseDecompressor::decompressData(void const*, int, void*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882f9c (     0x4) DITimer::~DITimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197882fa0 (   0x258) DITimer::copyElapsedTimeString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978831f8 (     0x4) CRawDiskImage::~CRawDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978831fc (   0x14c) CRawDiskImage::checkTypeCreator(unsigned int, unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883348 (   0x2b8) CRawDiskImage::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883600 (   0x110) _processObject(unsigned int, __CFArray*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883710 (   0x30c) _reportStats(CDiskImage*, DITimer*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883a1c (     0x4) CShadowedDiskImage::~CShadowedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883a20 (   0x314) CShadowedDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883d34 (    0xdc) CShadowedDiskImage::convertOptionsToBaseImageOptions(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883e10 (    0x10) CShadowedDiskImage::copyDefaultShadowFileURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883e20 (    0x64) CShadowedDiskImage::createDefaultShadowFileName(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883e84 (    0x30) CShadowedDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197883eb4 (   0x268) CShadowedDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788411c (     0x8) CShadowedDiskImage::getShadowBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884124 (    0x30) CShadowedDiskImage::copySLADictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884154 (    0x28) CShadowedDiskImage::getImageFormat() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788417c (    0x28) CShadowedDiskImage::calcChecksum(CChecksum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978841a4 (   0x1e8) CShadowedDiskImage::optimizedNewBandWithSector(long long, long long, long long*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788438c (    0x4c) CShadowedDiskImage::unmapExtents(dk_extent_t*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978843d8 (   0x4fc) CShadowedDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978848d4 (    0x90) CShadowedDiskImage::callProgressButtonProc(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884964 (    0xb4) CShadowedDiskImage::callProgressMessageProc(__CFString const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884a18 (    0xa8) CShadowedDiskImage::callProgressPercentProc(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884ac0 (    0x90) CShadowedDiskImage::callProgressCancelProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884b50 (    0x88) CShadowedDiskImage::callDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884bd8 (   0x1b0) CShadowedDiskImage::_displayHeaderNode(ShadowFileHeaderNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884d88 (    0x7c) CShadowedDiskImage::readIndexNode(long long, ShadowFileIndexNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884e04 (    0xdc) CShadowedDiskImage::_displayIndexNode(ShadowFileIndexNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197884ee0 (   0x1dc) CShadowedDiskImage::_addIndexNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978850bc (     0xc) CShadowedDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978850c8 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978850e0 (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978850f0 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197885108 (    0xb4) _TAOCopyDevicePath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978851bc (    0x88) _TAOCopyBSDName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197885244 (     0x4) CSparseDiskImage::~CSparseDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197885248 (    0xb0) CSparseDiskImage::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978852f8 (     0xc) CSparseDiskImage::getImageFormat() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197885304 (    0xa8) CSparseDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978853ac (   0xe18) CSparseDiskImage::convertWithDiskImage(__CFURL const*, CDiskImage*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978861c4 (    0xbc) CSparseDiskImage::_cullSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886280 (    0x88) CSparseDiskImage::_compactFinish(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886308 (   0x268) CSparseDiskImage::generateBLKXEquivalent(UDIFBlocks***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886570 (    0xcc) _addRun(UDIFBlocks**, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788663c (     0x8) CSparseDiskImage::_compactStart(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886644 (     0x4) CSparseFile::~CSparseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886648 (    0x5c) CSparseFile::isValidHeaderNode(SparseFileHeaderNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978866a4 (    0x34) sparselog(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978866d8 (    0xec) CSparseFile::readIndexNode(long long, SparseFileIndexNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978867c4 (   0x190) CSparseFile::displayIndexNode(SparseFileIndexNode*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886954 (   0x11c) CSparseFile::writeIndexNode(long long, SparseFileIndexNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886a70 (   0x1e8) CSparseFile::addIndexNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197886c58 (   0x3c8) CSparseFile::spareBandsForSectors(long long, long long, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197887020 (   0x1e8) CSparseFile::setTotalSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197887208 (   0x4d4) CSparseFile::compact(CSparseDiskImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978876dc (   0x36c) CSparseFile::buildSortedBandList(CSparseDiskImage*, unsigned int*, __CFArray**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197887a48 (   0x6d4) CSparseFile::migrateBand(unsigned int, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788811c (   0x424) CSparseFile::removeUnusedIndexNodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888540 (   0x430) CSparseFile::trimSparseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888970 (     0x8) CSparseFile::version() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888978 (     0x8) CSparseFile::bandsPerIndexNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888980 (     0x4) CSubDiskImage::~CSubDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888984 (     0x8) CSubDiskImage::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788898c (   0x110) CSubDiskImage::createUniqueIDDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888a9c (    0x84) CSubDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888b20 (    0x28) CSubDiskImage::_compactStart(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888b48 (    0x28) CSubDiskImage::_compactFinish(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888b70 (    0x54) CSubDiskImage::_cullSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888bc4 (    0x50) CSubDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888c14 (   0x320) CSubDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888f34 (    0x90) CSubDiskImage::callProgressButtonProc(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197888fc4 (    0xb4) CSubDiskImage::callProgressMessageProc(__CFString const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889078 (    0xa8) CSubDiskImage::callProgressPercentProc(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889120 (    0x90) CSubDiskImage::callProgressCancelProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978891b0 (    0x88) CSubDiskImage::callDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889238 (     0xc) CSubDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889244 (     0x4) CUDIFDiskImage::~CUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889248 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000019788925c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019788926c (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000197889290 (   0x250) CUDIFDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978894e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001978894f0 (    0x44) CUDIFDiskImage::getBLKXStartingAt(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889534 (     0x8) CUDIFDiskImage::getPreferredChunkSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788953c (   0x598) CUDIFDiskImage::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889ad4 (    0x80) BLKXChecksumQueueElement::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889b54 (    0x70) MyValidateSegmentDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889bc4 (    0x44) CUDIFDiskImage::hasValidChecksum(CChecksum**, CChecksum**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889c08 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000197889c1c (     0x8) CUDIFDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197889c24 (   0x55c) CUDIFDiskImage::generateDataRunInfo(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a180 (     0x4) CRestrictedUDIFDiskImage::~CRestrictedUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a184 (    0x4c) CRestrictedUDIFDiskImage::~CRestrictedUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a1d0 (   0x2b4) CRestrictedUDIFDiskImage::loadBLKXTable(CResourceFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a484 (    0xb0) CRestrictedUDIFDiskImage::generateGlobalBLKXFromBLKXTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a534 (    0xbc) CRestrictedUDIFDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a5f0 (    0x60) CRestrictedUDIFDiskImage::copyImageChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a650 (   0x1c0) CRestrictedUDIFDiskImage::calcChecksum(CChecksum*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a810 (     0xc) CUDIFDiskImage::_handleUnknownChunkRead(UDIFRun*, long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a81c (     0x8) CRestrictedUDIFDiskImage::_copyValidCachedChecksumData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a824 (     0x4) BLKXChecksumQueueElement::~BLKXChecksumQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a828 (     0xc) CRestrictedUDIFDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a834 (     0x4) CLZFSEDecompressor::~CLZFSEDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a838 (    0x4c) CLZFSEDecompressor::~CLZFSEDecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a884 (     0xc) CLZFSEDecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a890 (     0x8) CLZFSEDecompressor::GetCompressionAlgorithm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a898 (     0x4) CLZMADecompressor::~CLZMADecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a89c (    0x4c) CLZMADecompressor::~CLZMADecompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a8e8 (     0xc) CLZMADecompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a8f4 (     0x8) CLZMADecompressor::GetCompressionAlgorithm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a8fc (     0x4) CFileEncoding::~CFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a900 (    0x4c) CFileEncoding::~CFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a94c (    0x3c) CFileEncoding::unlink() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a988 (    0x3c) CFileEncoding::rename(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a9c4 (    0x30) CFileEncoding::isRemote() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788a9f4 (    0x34) CFileEncoding::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aa28 (    0x30) CFileEncoding::canEnumerateDirectory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aa58 (    0x44) CFileEncoding::enumerateDirectory(int, __CFURL const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aa9c (    0x30) CFileEncoding::getPath() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aacc (    0x34) CFileEncoding::setFileCreator(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ab00 (    0x3c) CFileEncoding::setFileType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ab3c (    0x38) CFileEncoding::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ab74 (    0x3c) CFileEncoding::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788abb0 (    0x3c) CFileEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788abec (    0x3c) CFileEncoding::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ac28 (    0x3c) CFileEncoding::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ac64 (    0x38) CFileEncoding::closeResourceFile(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ac9c (    0xc4) CFileEncoding::openRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ad60 (    0xc8) CFileEncoding::closeRsrcFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ae28 (    0x3c) CFileEncoding::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ae64 (    0x3c) CFileEncoding::getMaxRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aea0 (    0x3c) CFileEncoding::setRsrcForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aedc (    0x3c) CFileEncoding::readRsrcFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788af18 (    0x3c) CFileEncoding::writeRsrcFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788af54 (     0xc) CFileEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788af60 (     0x8) CFileEncoding::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788af68 (     0x4) CFlatFileEncoding::~CFlatFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788af6c (    0x4c) CFlatFileEncoding::~CFlatFileEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788afb8 (     0x8) CFlatFileEncoding::setFileType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788afc0 (     0x8) CFlatFileEncoding::setFileCreator(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788afc8 (    0x10) CFlatFileEncoding::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788afd8 (     0x8) CFlatFileEncoding::setRsrcForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788afe0 (    0x14) CFlatFileEncoding::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788aff4 (    0x14) CFlatFileEncoding::getMaxRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b008 (     0x8) CFlatFileEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b010 (     0x8) CFlatFileEncoding::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b018 (     0xc) CFlatFileEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b024 (    0x4c) DIError::DIError(int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b070 (     0x8) DIError::unixError() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b078 (     0x8) DIError::what() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b080 (    0x60) std::__1::auto_ptr<CEncryptedEncoding>::reset[abi:v160006](CEncryptedEncoding*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b0e0 (    0x30) CEncryptedEncoding::PrivateKeyHeader_BigToHost(CEncryptedEncoding::PrivateKeyHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b110 (     0x4) CEncryptedEncoding::~CEncryptedEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b114 (   0x11c) CEncryptedEncoding::retrievePassphraseFromSystemKeychain(__CFString const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b230 (    0x28) CEncryptedEncoding::tryUnlock(__CFString const*, CEncryptedEncoding::PrivateKeyHeader const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b258 (    0xb8) CEncryptedEncoding::tryUnlock(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b310 (   0x1d0) CEncryptedEncoding::decodePasswordHeader(char const*, unsigned long, CEncryptedEncoding::PasswordHeader const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788b4e0 (   0x740) CEncryptedEncoding::decodeV1Header(Security::CssmData const&, CEncryptedEncoding::V1Header const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788bc20 (   0x46c) CEncryptedEncoding::decodePrivateKeyHeader_MIGHT_THROW(__CFString const*, CEncryptedEncoding::PrivateKeyHeader const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788c08c (   0x4e4) CEncryptedEncoding::makeSecPasswordRef_CAN_THROW(__SecPassword**, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788c570 (   0x144) CEncryptedEncoding::unlockCoreWithPassphrase(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788c6b4 (   0x3e0) CEncryptedEncoding::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ca94 (   0x454) CEncryptedEncoding::changeKey(__CFArray const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788cee8 (   0x7d8) CEncryptedEncoding::encodeV1Header(Security::CssmData const&, CEncryptedEncoding::V1Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788d6c0 (   0x208) CEncryptedEncoding::encodePasswordHeader_CAN_THROW(unsigned char const*, unsigned long, char const*, unsigned long, CEncryptedEncoding::PasswordHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788d8c8 (    0x7c) Security::CssmAutoData::~CssmAutoData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788d944 (   0x294) CEncryptedEncoding::initV1Header_CAN_THROW(__CFString const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788dbd8 (    0xbc) Security::CssmClient::GenerateKey::~GenerateKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788dc94 (    0xac) Security::CssmOwnedData::append(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788dd40 (    0xb8) Security::CssmClient::WrapKey::~WrapKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ddf8 (    0xa0) Security::CssmClient::UnwrapKey::~UnwrapKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788de98 (   0x104) CEncryptedEncoding::V1Header_HostToBig(CEncryptedEncoding::V1Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788df9c (    0x9c) Security::CssmClient::VerifyMac::~VerifyMac() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e038 (    0xb8) Security::CssmClient::DeriveKey::~DeriveKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e0f0 (    0x9c) Security::CssmClient::GenerateMac::~GenerateMac() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e18c (   0x158) CEncryptedEncoding::recordPassphraseInSystemKeychain(char const*, CFUUIDBytes) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e2e4 (   0x3fc) CEncryptedEncoding::recordPassphraseInSystemKeychain(char const*, __CFString const*, __CFString const*, __CFString const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e6e0 (   0x110) CEncryptedEncoding::getAndRecordSystemKeychainAccount(__CFString const*, CFUUIDBytes, unsigned int, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788e7f0 (   0x59c) CEncryptedEncoding::encodePrivateKeyHeader_CAN_THROW(Security::CssmData const&, __CFData const*, CEncryptedEncoding::PrivateKeyHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ed8c (   0x144) CEncryptedEncoding::encodePasswordHeaderEmbedded_CAN_THROW(Security::CssmData const&, Security::CssmData const&, CEncryptedEncoding::PasswordHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788eed0 (   0x120) CEncryptedEncoding::parseRawPassphrase(Security::CssmData const&, CEncryptedEncoding::PasswordHeader const&, Security::CssmData const&, Security::CssmData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788eff0 (    0xb8) Security::CssmClient::Encrypt::~Encrypt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788f0a8 (    0x30) CEncryptedEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788f0d8 (   0x1b0) CEncryptedEncoding::setDataForkLength(long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788f288 (   0x420) CEncryptedEncoding::DumpV1Header(char const*, CEncryptedEncoding::V1Header const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788f6a8 (   0x1b0) CEncryptedEncoding::DumpV2Header(char const*, CEncryptedEncoding::V2Header const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788f858 (   0x1bc) CEncryptedEncoding::DumpV2AuthTable(char const*, CEncryptedEncoding::V2AuthTable const&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788fa14 (    0x90) CEncryptedEncoding::V1HeaderValidate(CEncryptedEncoding::V1Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788faa4 (    0x60) CEncryptedEncoding::V2HeaderValidate(CEncryptedEncoding::V2Header&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788fb04 (    0x78) CEncryptedEncoding::PasswordHeaderValidate(CEncryptedEncoding::PasswordHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788fb7c (    0x60) CEncryptedEncoding::PrivateKeyHeaderValidate(CEncryptedEncoding::PrivateKeyHeader&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788fbdc (   0x3b8) CEncryptedEncoding::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ff94 (    0x28) DIError::~DIError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019788ffbc (    0xa0) Security::CssmClient::Crypt::~Crypt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789005c (    0xb8) Security::CssmClient::Crypt::~Crypt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890114 (    0xb8) Security::CssmClient::UnwrapKey::~UnwrapKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978901cc (    0x98) Security::CssmClient::MacContext::MacContext(Security::CssmClient::CSP const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890264 (    0x44) void Security::CssmClient::Context::set<Security::CssmClient::Key>(unsigned int, Security::CssmClient::Key const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978902a8 (    0x84) Security::CssmClient::CL::CL(Security::Guid const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789032c (    0x60) Security::CssmClient::CLImpl& Security::CssmClient::Object::impl<Security::CssmClient::CLImpl>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789038c (    0x9c) Security::CssmClient::Key::Key(Security::CssmClient::CSP const&, cssm_key const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890428 (    0x44) void Security::CssmClient::Context::set<cssm_key const*>(unsigned int, cssm_key const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789046c (    0x54) std::__1::auto_ptr<CEncryptedEncoding>::~auto_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978904c0 (    0x54) std::__1::auto_ptr<CBackingStore>::~auto_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890514 (     0x4) CUDIFEncoding::~CUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890518 (     0x8) CUDIFEncoding::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890520 (    0xfc) CUDIFEncoding::openRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789061c (   0x2a0) CUDIFEncoding::closeRsrcFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978908bc (    0xb0) CUDIFEncoding::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789096c (    0xb0) CUDIFEncoding::getMaxRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890a1c (    0xa0) CUDIFEncoding::setRsrcForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890abc (   0x1c0) CUDIFEncoding::readRsrcFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890c7c (   0x1c0) CUDIFEncoding::writeRsrcFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890e3c (    0x10) CUDIFEncoding::isSegmented() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890e4c (    0x38) CUDIFEncoding::getMasterChecksum(HDIChecksumStruct*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890e84 (    0x38) CUDIFEncoding::getSegmentDataForkChecksum(HDIChecksumStruct*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890ebc (     0x8) CUDIFEncoding::getImageVariant() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890ec4 (     0xc) CUDIFEncoding::getSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890ed0 (    0x38) CUDIFEncoding::validate(__CFString const**, __CFDictionary const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197890f08 (   0x518) CUDIFEncoding::validate(float, float, __CFString const**, __CFDictionary const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891420 (    0x30) CUDIFEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891450 (   0x3ac) CUDIFEncoding::replaceResourceFork(CResourceFile*, CUDIFFileAccess*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978917fc (     0x4) CSegmentedUDIFEncoding::~CSegmentedUDIFEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891800 (    0x18) CSegmentedUDIFEncoding::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891818 (    0xa4) CSegmentedUDIFEncoding::writeUDIFFileHeader(UDIFFileHeader const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978918bc (    0x40) CSegmentedUDIFEncoding::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978918fc (     0x8) CSegmentedUDIFEncoding::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891904 (     0x8) CSegmentedUDIFEncoding::getExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789190c (    0x10) CSegmentedUDIFEncoding::setExpandability(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789191c (     0x8) CSegmentedUDIFEncoding::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891924 (    0x10) CSegmentedUDIFEncoding::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891934 (     0x8) CSegmentedUDIFEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789193c (   0x250) CSegmentedUDIFEncoding::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891b8c (    0xe4) CSegmentedUDIFEncoding::openRsrcFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891c70 (   0x10c) CSegmentedUDIFEncoding::closeRsrcFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891d7c (    0x88) CSegmentedUDIFEncoding::getRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891e04 (    0x88) CSegmentedUDIFEncoding::getMaxRsrcForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891e8c (    0x88) CSegmentedUDIFEncoding::setRsrcForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197891f14 (   0x100) CSegmentedUDIFEncoding::readRsrcFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892014 (   0x100) CSegmentedUDIFEncoding::writeRsrcFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892114 (   0x1e0) CSegmentedUDIFEncoding::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978922f4 (   0x24c) CSegmentedUDIFEncoding::validate(__CFString const**, __CFDictionary const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892540 (    0x70) MyValidateSegmentDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978925b0 (    0x7c) CSegmentedUDIFRawEncoding::CSegmentedUDIFRawEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789262c (   0x238) CSegmentedUDIFRawEncoding::~CSegmentedUDIFRawEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892864 (     0x4) CSegmentedUDIFRawEncoding::~CSegmentedUDIFRawEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892868 (    0x4c) CSegmentedUDIFRawEncoding::~CSegmentedUDIFRawEncoding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978928b4 (   0x144) CSegmentedUDIFRawEncoding::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978929f8 (   0x170) CSegmentedUDIFRawEncoding::newWithBackingStore(CBackingStore*, __CFDictionary const*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892b68 (    0x18) CSegmentedUDIFRawEncoding::createWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CFileEncoding**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892b80 (   0x128) CSegmentedUDIFRawEncoding::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892ca8 (    0x58) CSegmentedUDIFRawEncoding::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197892d00 (   0x554) CSegmentedUDIFRawEncoding::_buildSegmentList(CBackingStore*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893254 (    0x4c) CSegmentedUDIFRawEncoding::setBackingStoreFromUDIFFileAccessArray(__CFArray const*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978932a0 (   0x22c) CSegmentedUDIFRawEncoding::_buildSegmentListFromUDIFFileAccessArray(__CFArray const*, __CFDictionary const*, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978934cc (     0x8) CSegmentedUDIFRawEncoding::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978934d4 (     0x8) CSegmentedUDIFRawEncoding::getExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978934dc (     0x4) CSegmentedUDIFRawEncoding::getURLArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978934e0 (    0x10) CSegmentedUDIFRawEncoding::setExpandability(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978934f0 (   0x124) CSegmentedUDIFRawEncoding::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893614 (     0x8) CSegmentedUDIFRawEncoding::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789361c (    0x10) CSegmentedUDIFRawEncoding::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789362c (    0x10) CSegmentedUDIFRawEncoding::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789363c (     0x8) CSegmentedUDIFRawEncoding::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893644 (   0x138) CSegmentedUDIFRawEncoding::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789377c (   0x150) CSegmentedUDIFRawEncoding::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978938cc (   0x150) CSegmentedUDIFRawEncoding::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893a1c (   0x13c) CSegmentedUDIFRawEncoding::_getBackingStoreForOffset(long long, unsigned long, long long*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893b58 (     0x8) CSegmentedUDIFRawEncoding::getUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893b60 (    0x8c) CSegmentedUDIFRawEncoding::setOnIOThread(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893bec (     0xc) CSegmentedUDIFRawEncoding::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893bf8 (     0x4) CResourceFile::~CResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893bfc (     0x4) CResourceFile::~CResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893c00 (   0x1f4) CResourceFile::DeleteAllResourcesOfType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197893df4 (   0x3a8) CResourceFile::DeleteAllResources(unsigned char (*)(void*, unsigned int, short), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789419c (     0xc) CResourceFile::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978941a8 (     0x4) CXMLResourceFile::~CXMLResourceFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978941ac (   0x144) CXMLResourceFile::GetIndString(unsigned char*, short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978942f0 (    0x98) CXMLResourceFile::GetNamedResource(unsigned int, unsigned char const*, char***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894388 (    0xf8) CXMLResourceFile::_typeNameScan(unsigned int, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894480 (    0x20) CXMLResourceFile::LockResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978944a0 (    0x20) CXMLResourceFile::UnlockResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978944c0 (    0x3c) CXMLResourceFile::GetResourceSize(char**, long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978944fc (   0x1c8) CXMLResourceFile::RemoveResource(char**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978946c4 (    0x74) CXMLResourceFile::DeleteAllResourcesOfType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894738 (    0x50) CXMLResourceFile::GetResInfo(char**, short*, unsigned int*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894788 (    0x30) CXMLResourceFile::SetResInfo(char**, short, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978947b8 (    0x14) CXMLResourceFile::GetResFileAttrs(short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978947cc (     0xc) CXMLResourceFile::SetResFileAttrs(short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978947d8 (    0xcc) CXMLResourceFile::UniqueID(unsigned int, short*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978948a4 (     0x8) CXMLResourceFile::SetResourceSize(char**, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978948ac (     0xc) CXMLResourceFile::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978948b8 (    0x18) CLibCompressionBaseCompressor::CalculateBufferSize(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978948d0 (   0x104) CLibCompressionBaseCompressor::compressData(void const*, int, void*, int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978949d4 (    0x94) CFURLToPOSIXPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894a68 (   0x150) TAOCFURLCreateScratchFile [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894bb8 (    0xc4) CFString_fprintf [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894c7c (    0x44) CFURLCreateFromPathOrURLCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894cc0 (    0x8c) CFURLCreateRealPathFromPathOrURLCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894d4c (    0x98) TAOCFURLRename [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894de4 (   0x110) TAOCFPropertyListCreateWithContentsOfFile [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894ef4 (    0x88) CFDictionaryCopyKeys [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894f7c (     0xc) _addKeyToArray [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894f88 (    0x5c) CFDictionaryGetCFStringForKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197894fe4 (    0x74) _CFDictionaryReplaceDictionaryValues [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895058 (    0x6c) CFTreeCreateWithCFTypeRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978950c4 (   0x128) TAOCFURLCreateWithScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978951ec (   0x17c) TAOCFStringCreateWithMacSeconds [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895368 (   0x224) _authopen [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789558c (   0x10c) DIAuthOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895698 (     0x8) discardfunc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978956a0 (   0x1ec) recv_fd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789588c (    0x7c) DRDeviceRefHasDVDMedia [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895908 (    0x3c) diwarnx [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895944 (     0x4) CUDIFCacheObject::~CUDIFCacheObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895948 (    0xe8) CUDIFCacheObject::displayCacheStatus() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895a30 (    0x4c) CUDIFCacheBuffer::~CUDIFCacheBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895a7c (     0x8) DICopyStrError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895a84 (    0x10) DIStrError_r [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895a94 (    0x48) DI_ShadowFileIndexNode_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895adc (    0x48) DI_ShadowFileIndexNode_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895b24 (    0x4c) DI_SparseFileIndexNode_BigToHost [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895b70 (    0x4c) DI_SparseFileIndexNode_HostToBig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197895bbc (   0xbf4) TAOGetFileSystemsArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978967b0 (    0xbc) _copyAbsolutePathRelativeToResourcesDirectory [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789686c (   0x398) _isGPTType [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c04 (     0x4) CDIApplePartitionScheme::~CDIApplePartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c08 (     0xc) CDIApplePartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c14 (     0x4) CDIFDiskPartitionScheme::~CDIFDiskPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c18 (     0xc) CDIFDiskPartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c24 (     0x4) CDINoPartitionScheme::~CDINoPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c28 (     0x8) CDINoPartitionScheme::probe(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c30 (     0xc) CDINoPartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c3c (     0x4) CDIPartitionScheme::~CDIPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c40 (     0x4) CDIPartitionScheme::~CDIPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896c44 (   0x268) CDIPartitionScheme::_generateHybridMap(__CFArray*, __CFArray const*, unsigned long long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896eac (    0xe8) CDIPartitionScheme::_removeFreespace(__CFArray*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197896f94 (   0x1d4) CDIPartitionScheme::_createPartitionDictionaryWithArgumentList(unsigned long long, unsigned long long, unsigned int, __CFString const*, __CFString const*, __CFData const*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897168 (     0xc) CDIPartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897174 (   0x20c) DIHLDiskImageProbeURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897380 (    0x9c) IsDiskImageExtension [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789741c (     0x8) DIHLDiskImageCopyProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897424 (     0x8) DIHLDiskImageSetProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789742c (   0x23c) DIHLDiskImageChangePassword [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897668 (   0x124) DIHLUpgradeKeychainItem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789778c (   0x1d4) _callResizeHelper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897960 (    0xb4) __DIHLInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897a14 (   0x464) findVolume_DiskImages1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897e78 (   0x130) volumeForImageCompareMethod [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197897fa8 (   0x2cc) findVolumeInIOMedia [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898274 (    0xc8) statURL [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789833c (    0x24) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898360 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789837c (    0xe4) -[DIHelperProxy(Thread) listener:shouldAcceptNewConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898460 (     0x8) __60-[DIHelperProxy(Thread) listener:shouldAcceptNewConnection:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898468 (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898478 (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898484 (    0x58) __42-[DIHelperProxy(Thread) threadSetupServer]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978984dc (    0x50) __copy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789852c (    0x44) __destroy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898570 (    0x18) __42-[DIHelperProxy(Thread) threadSetupServer]_block_invoke.207 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898588 (    0x50) __copy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978985d8 (    0x44) __destroy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789861c (   0x184) -[DIHelperProxy(Thread) waitForHelperDone] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978987a0 (   0x114) -[DIHelperProxy(Thread) checkHelperStatusWaitingForExit:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978988b4 (   0x11c) -[DIHelperProxy(Thread) watchForHelperDeath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978989d0 (     0x8) __44-[DIHelperProxy(Thread) watchForHelperDeath]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978989d8 (    0x74) __44-[DIHelperProxy(Thread) watchForHelperDeath]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898a4c (    0x70) -[DIHelperProxy(Thread) setHelperDoneWithResult:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898abc (    0x4c) -[DIHelperProxy(Thread) helperDied] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898b08 (    0x4c) -[DIHelperProxy(Thread) helperFailedToRegister] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898b54 (    0xa4) -[DIHelperProxy(DIHLHelperMasterProtocol) synchronousFrameworkCallbackWithDictionary:withReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898bf8 (    0x4c) -[DIHelperProxy(Authentication) authenticate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898c44 (    0x24) -[DIHelperProxy(Authentication) isAuthenticated] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898c68 (    0xf4) -[DIHelperProxy(Authentication) authWithFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898d5c (     0x8) -[DIHelperProxy(Authentication) askForPassword] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898d64 (     0x8) -[NSDictionary(DictionaryExtensions) boolForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898d6c (    0x28) -[NSDictionary(DictionaryExtensions) integerForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898d94 (   0x160) -[NSMutableDictionary(MutableDictionaryExtensions) addKeyValuePairFromString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898ef4 (    0x10) -[NSDictionary(NSBundleExtras) bundleIdentifierFromInfoDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898f04 (     0xc) -[NSDictionary(NSBundleExtras) shortVersionFromInfoDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898f10 (    0x44) -[NSDictionary(BetterAccessors) stringForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197898f54 (   0x158) -[NSDictionary(XPCServiceExtras) taoDeepMutableCopy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978990ac (   0x124) -[NSDictionary(XPCServiceExtras) taoDeepMutableRelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978991d0 (    0xc8) CVectoredBackingStore::CVectoredBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899298 (    0xcc) CVectoredBackingStore::~CVectoredBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899364 (     0x4) CVectoredBackingStore::~CVectoredBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899368 (    0x4c) CVectoredBackingStore::~CVectoredBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978993b4 (   0x198) CVectoredBackingStore::newWithCFURL(__CFURL const*, __CFDictionary const*, CBackingStore**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789954c (    0xd4) CVectoredBackingStore::_parseCallbackData(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899620 (    0x9c) CVectoredBackingStore::setURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978996bc (    0xc4) CVectoredBackingStore::setUniqueIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899780 (    0xf8) CVectoredBackingStore::setPermission(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899878 (    0xb0) CVectoredBackingStore::openDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899928 (   0x104) CVectoredBackingStore::closeDataFork(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899a2c (    0x84) CVectoredBackingStore::getDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899ab0 (    0xf0) CVectoredBackingStore::readDataFork(long long, unsigned long, unsigned long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899ba0 (   0x124) CVectoredBackingStore::writeDataFork(long long, unsigned long, unsigned long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899cc4 (    0x58) CVectoredBackingStore::flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899d1c (     0xc) CVectoredBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899d28 (     0x8) CVectoredBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899d30 (    0xb0) CSHA256Checksum::CSHA256Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899de0 (     0x4) CSHA256Checksum::CSHA256Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899de4 (     0x4) CSHA256Checksum::~CSHA256Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899de8 (    0x4c) CSHA256Checksum::~CSHA256Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899e34 (     0xc) CSHA256Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899e40 (     0x8) CSHA256Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899e48 (     0xc) CSHA256Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899e54 (     0xc) CSHA256Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899e60 (    0xb0) CSHA384Checksum::CSHA384Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f10 (     0x4) CSHA384Checksum::CSHA384Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f14 (     0x4) CSHA384Checksum::~CSHA384Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f18 (    0x4c) CSHA384Checksum::~CSHA384Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f64 (     0xc) CSHA384Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f70 (     0x8) CSHA384Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f78 (     0xc) CSHA384Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f84 (     0xc) CSHA384Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000197899f90 (    0xb0) CSHA512Checksum::CSHA512Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a040 (     0x4) CSHA512Checksum::CSHA512Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a044 (     0x4) CSHA512Checksum::~CSHA512Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a048 (    0x4c) CSHA512Checksum::~CSHA512Checksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a094 (     0xc) CSHA512Checksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a0a0 (     0x8) CSHA512Checksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a0a8 (     0xc) CSHA512Checksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a0b4 (     0xc) CSHA512Checksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a0c0 (     0x4) CWOUDIFDiskImage::~CWOUDIFDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a0c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019789a0d4 (    0xe0) CWOUDIFDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a1b4 (    0xe0) CWOUDIFDiskImage::_appendIgnoreChunk(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a294 (    0xac) CWOUDIFDiskImage::__updatePermissions() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019789a350 (    0x7c) CWOUDIFDiskImage::_displayFreespaceList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a3cc (   0x200) CWOUDIFDiskImage::__tryMergingWithPreviousChunk(unsigned int, unsigned int, long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a5cc (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000019789a5f0 (     0xc) CWOUDIFDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a5fc (     0x4) CLZFSECompressor::~CLZFSECompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a600 (    0x4c) CLZFSECompressor::~CLZFSECompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a64c (     0xc) CLZFSECompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a658 (     0x8) CLZFSECompressor::GetCompressionAlgorithm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a660 (     0x4) CLZMACompressor::~CLZMACompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a664 (    0x4c) CLZMACompressor::~CLZMACompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a6b0 (     0xc) CLZMACompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a6bc (     0x8) CLZMACompressor::GetCompressionAlgorithm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789a6c4 (  0x1060) CUDIFDiskImage::generateBLKXTable(CDiskImage*, DIUDIFHeaderBuilderOptType, unsigned int, long long, __CFDictionary const**, UDIFBlocks****, int*, __CFArray**, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789b724 (   0x1d4) __AddRunsToBLKX(UDIFBlocks**, unsigned long long, unsigned int, long long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789b8f8 (    0xec) DIAddRunToBLKX [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789b9e4 (   0x53c) __AddDataRunsToBLKX(UDIFBlocks**, __CFArray const*, unsigned long long, unsigned long long, unsigned int, long long, unsigned int, unsigned int, scanTypes_t, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bf20 (    0x3c) CSHAChecksum::CSHAChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bf5c (     0x4) CSHAChecksum::~CSHAChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bf60 (    0x4c) CSHAChecksum::~CSHAChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bfac (    0x14) CSHAChecksum::processStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bfc0 (     0x8) CSHAChecksum::processBuffer(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789bfc8 (    0xa8) CSHAChecksum::processConstant(unsigned char, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c070 (    0x10) CSHAChecksum::processFinish() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c080 (     0x8) CSHAChecksum::getBitCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c088 (    0xac) CSHAChecksum::getValue(void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c134 (     0xc) CSHAChecksum::getShortName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c140 (     0xc) CSHAChecksum::getLongName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c14c (    0x14) CSHAChecksum::setValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c160 (     0xc) CSHAChecksum::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c16c (     0x8) CSHAChecksum::getChecksumType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c174 (     0x4) CCachedBackingStore::~CCachedBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c178 (     0x4) CCachedBackingStore::~CCachedBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c17c (     0x4) CBackingStoreCache::~CBackingStoreCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c180 (    0x4c) CBackingStoreCacheEntry::~CBackingStoreCacheEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c1cc (     0xc) CCachedBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c1d8 (    0xfc) TAODASynchronousUnmountAndEjectMountPoint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c2d4 (   0x140) TAODASynchronousUnmountAndEjectDevNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c414 (    0x64) _TAODAInitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c478 (    0xac) _TAODASetupTimer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c524 (    0xdc) _unmountAndEjectCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c600 (    0x4c) _TAODATeardownTimer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c64c (    0x64) _TAODADeinitialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c6b0 (    0x64) TAODASynchronousUnmountAndEjectMountPointRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c714 (    0x50) _ejectCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c764 (    0x40) _diskArbTimedOut [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c7a4 (     0x4) TAOQueue::~TAOQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c7a8 (   0x110) TAOQueue::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c8b8 (    0x44) TAOQueueElement::~TAOQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c8fc (    0x68) TAOQueueElement::~TAOQueueElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789c964 (    0xb4) TAOQueueElement::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789ca18 (   0x190) _analyzeTarget(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789cba8 (  0x12ac) _performConversion(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789de54 (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000019789de78 (   0x188) _updateHeaders(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789e000 (   0x408) _addBLKXResources(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789e408 (   0x1a0) _copyExtraResources(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789e5a8 (    0x90) _embedResources(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789e638 (    0xf0) _finalize(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789e728 (   0x918) _finalReport(UDIFConvertState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f040 (    0x58) BLKXConvertDataElement::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f098 (   0x2e0) BLKXConvertWorkElement::display(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f378 (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000019789f39c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000019789f3ac (     0x4) BLKXConvertDataElement::~BLKXConvertDataElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f3b0 (     0x4) BLKXConvertWorkElement::~BLKXConvertWorkElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f3b4 (    0x50) BLKXConvertDataElement::allocData(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f404 (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000019789f428 (    0x60) _copyExtraResourcesFilterProc(void*, unsigned int, short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f488 (   0x1a0) CWrappedDiskImage::newWithBackingStore(CBackingStore*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f628 (     0x4) CWrappedDiskImage::~CWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f62c (     0x4) CWrappedDiskImage::~CWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f630 (    0xa4) CWrappedDiskImage::createUniqueIDDict() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f6d4 (    0x84) CWrappedDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f758 (   0x1b4) CWrappedDiskImage::writeSectors(long long, long long, long long*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f90c (     0x8) CWrappedDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f914 (     0x8) CWrappedDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f91c (    0xc8) CWrappedDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789f9e4 (    0x90) CWrappedDiskImage::callProgressButtonProc(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fa74 (    0x88) CWrappedDiskImage::callDIProgressCallBackProc(int, void*, void*, void*, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fafc (     0xc) CWrappedDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb08 (     0x8) CWrappedDiskImage::isKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb10 (     0x4) CBZip2Compressor::~CBZip2Compressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb14 (     0xc) CBZip2Compressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb20 (     0x4) CBZip2Decompressor::~CBZip2Decompressor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb24 (     0xc) CBZip2Decompressor::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb30 (     0x4) CDIISOPartitionScheme::~CDIISOPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb34 (    0x5c) CDIISOPartitionScheme::probe(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb90 (     0xc) CDIISOPartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fb9c (     0x4) CAppleWrappedDiskImage::~CAppleWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fba0 (    0x84) CAppleWrappedDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fc24 (     0x8) CAppleWrappedDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fc2c (     0x8) CAppleWrappedDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fc34 (    0xac) CAppleWrappedDiskImage::writeNonEmbeddedSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fce0 (     0xc) CAppleWrappedDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fcec (    0x38) CFDiskWrappedDiskImage::CFDiskWrappedDiskImage(CDiskImage*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fd24 (     0x4) CFDiskWrappedDiskImage::~CFDiskWrappedDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fd28 (    0x84) CFDiskWrappedDiskImage::copyFormatDescriptionString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fdac (     0x8) CFDiskWrappedDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fdb4 (     0x8) CFDiskWrappedDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fdbc (    0xe4) CFDiskWrappedDiskImage::readNonEmbeddedSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789fea0 (    0xac) CFDiskWrappedDiskImage::writeNonEmbeddedSectors(long long, long long, long long*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789ff4c (     0xc) CFDiskWrappedDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019789ff58 (    0x58) (null) [FUNC, FunctionStarts] 
                0x000000019789ffb0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000019789ffe8 (    0x40) TAOCFPrettyPrint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0028 (   0x184) _TAOCFPrettyPrint_recurse [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a01ac (    0x58) _TAOCFScalarPrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0204 (    0x68) _TAOCFDictionaryPrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a026c (    0x94) _TAOCFArrayPrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0300 (    0x84) _TAOCFTreePrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0384 (    0x14) _TAOCFBagPrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0398 (   0x174) _TAOCFGetDescriptionAsCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a050c (   0x1dc) _TAOCFLabelPrettyPrint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a06e8 (     0x4) CDIGUIDPartitionScheme::~CDIGUIDPartitionScheme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a06ec (    0x1c) uuid_unswap(unsigned char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0708 (     0xc) CDIGUIDPartitionScheme::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0714 (    0x7c) Bitmap::initWithBuffer(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0790 (    0x48) Bitmap::~Bitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a07d8 (    0x6c) Bitmap::~Bitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0844 (   0x23c) Bitmap::updateBits(unsigned long long, unsigned long long, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0a80 (    0x14) Bitmap::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0a94 (   0x118) Bitmap::getBit(unsigned long long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0bac (    0xbc) MemoryBitmap::withNumBits(unsigned long long, MemoryBitmap**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0c68 (    0x70) MemoryBitmap::~MemoryBitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0cd8 (     0x4) MemoryBitmap::~MemoryBitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0cdc (    0x4c) MemoryBitmap::~MemoryBitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0d28 (    0xb0) BandMappedBlocks::~BandMappedBlocks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0dd8 (     0x4) BandMappedBlocks::~BandMappedBlocks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0ddc (    0x4c) BandMappedBlocks::~BandMappedBlocks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0e28 (    0x50) BandMappedBlocks::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0e78 (    0x74) BandMappedBlocks::updateBits(unsigned long long, unsigned long long, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a0eec (   0x160) BandMappedBlocks::writeFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a104c (   0x3a8) BandMappedBlocks::readFile(long, bool&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a13f4 (   0x104) BandMappedBlocks::closeFD() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a14f8 (    0x98) BandMappedBlocks::init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1590 (    0x78) BandMappedBlocks::setupNewBand(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1608 (   0x188) BandMappedBlocks::flush(BandMappedBlocks::flushType_t) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1790 (    0xb4) BandMappedBlocks::withBytesPerBand(unsigned long long, BandMappedBlocks**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1844 (   0x12c) BandMappedBlocks::unmapRange(unsigned long long, unsigned long long, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1970 (    0xb8) BandMappedBlocks::mapRange(unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1a28 (     0x4) CBundleBackingStore::~CBundleBackingStore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1a2c (   0x230) CBundleBackingStore::createSubdirectory(__CFURL const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1c5c (   0x258) CBundleBackingStore::openLockFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a1eb4 (   0x164) CBundleBackingStore::openMappedBlocksDirectory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2018 (   0x280) CBundleBackingStore::initBandsBitmap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2298 (    0x6c) CBundleBackingStore::onLockedMedia() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2304 (    0x78) CBundleBackingStore::unlink() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a237c (   0x138) CBundleBackingStore::rename(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a24b4 (     0x8) CBundleBackingStore::hasDataFork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a24bc (    0x40) CBundleBackingStore::allowExpandability() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a24fc (    0x10) CBundleBackingStore::getMaxDataForkLength(long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a250c (    0x30) CBundleBackingStore::setDataForkLength(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a253c (   0x2e4) CBundleBackingStore::setDataForkLength(long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2820 (   0x110) CBundleBackingStore::unmapBandRange(long long, long long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2930 (   0x480) CBundleBackingStore::openMappedBlocksFile(BandEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2db0 (    0xac) CBundleBackingStore::unmapRange(long long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2e5c (   0x170) CBundleBackingStore::unmapExtents(dk_extent_t*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2fcc (     0x8) CBundleBackingStore::copyKernelAttachDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a2fd4 (    0x3c) invocation function for block in CBundleBackingStore::getBandEntry(long long, BandEntry**, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3010 (   0x4f0) CBundleBackingStore::openFileInBundle(long long, int, int, int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3500 (    0xe8) CBundleBackingStore::eraseBandFileFrom(int, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a35e8 (    0x3c) invocation function for block in CBundleBackingStore::eraseBandFileFrom(int, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3624 (    0x28) CBundleBackingStore::changeKey(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a364c (     0xc) CBundleBackingStore::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3658 (     0x8) CBundleBackingStore::objectIsKernelCompatible() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3660 (    0x20) CSparseBundleDiskImage::~CSparseBundleDiskImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3680 (   0x2cc) CSparseBundleDiskImage::setBackingStoreWithOptions(CBackingStore*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a394c (     0xc) CSparseBundleDiskImage::getImageFormat() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3958 (   0x368) CSparseBundleDiskImage::copyImageInformation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3cc0 (    0xa8) CSparseBundleDiskImage::setSectorCount(long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3d68 (     0x8) CSparseBundleDiskImage::maxSectorCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a3d70 (   0xf80) CSparseBundleDiskImage::convertWithDiskImage(__CFURL const*, CDiskImage*, __CFDictionary const*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4cf0 (     0xc) CSparseBundleDiskImage::getClassName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4cfc (     0x4) CDiskImageCompactor::~CDiskImageCompactor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4d00 (     0x4) CCommonDigestChecksumSuperclass::~CCommonDigestChecksumSuperclass() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4d04 (     0x4) CCommonDigestChecksumSuperclass::~CCommonDigestChecksumSuperclass() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4d08 (    0xb8) CCommonDigestChecksumSuperclass::processConstant(unsigned char, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4dc0 (    0x2c) CCommonDigestChecksumSuperclass::getValue(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a4dec (   0x79c) CRawDiskImage::createHybridWithCFURL(__CFURL const*, __CFDictionary const*, int (*)(int, void*, void*, void*, void*, void*), void*, CDiskImage**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a5588 (    0x48) PreBurnCallback(__DRCallbackDevice*, __DRBurn*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a55d0 (    0x48) PostBurnCallback(__DRCallbackDevice*, __DRBurn*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a5618 (   0x188) WriteBlocksCallback(__DRCallbackDevice*, unsigned char*, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a57a0 (   0x140) start_burn(int (*)(int, void*, void*, void*, void*, void*), void*, __DRBurn*, __DRTrack*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a58e0 (   0x1b0) burnProgressCallback(__DRNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a5a90 (   0xa98) CDiskImage::copyResizeInformation2(unsigned int, long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a6528 (   0x3a0) _copyPartitionlessResizeInformation2(CDiskImage*, unsigned int, __CFNumber const*, __CFString const*, __CFString const*, __CFString const*, long long, long long, long long, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a68c8 (   0x1a0) _preanalyzeScan(__CFDictionary const*, __CFDictionary const**, __CFArray const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a6a68 (   0x5e4) _determineMaxSectorsAvailableAndGranularity(unsigned int, CDiskImage*, __MKMedia const*, __CFDictionary const*, long long*, long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a704c (   0x16c) _createBasicDictionary(__CFString const*, __CFNumber const*, __CFString const*, __CFString const*, unsigned int, long long, long long, long long, long long, long long, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a71b8 (   0x140) _analyzePartInfo(__CFDictionary const*, __CFNumber const**, __CFString const**, __CFString const**, long long*, long long*, __CFString const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a72f8 (    0x3c) _hasValidContent(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a7334 (   0x1e4) _updateMinMaxGran(__CFDictionary*, unsigned int, long long, long long, long long, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a7518 (    0xec) _getMinFinalGap(__CFDictionary const*, long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a7604 (   0x8bc) _resizePartitionedImage(CDiskImage*, long long, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a7ec0 (   0x4c4) _resizeUnpartitionedImage(CDiskImage*, long long, long long, bool, bool, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8384 (    0xcc) _searchContentArrayForPartitionID(__CFArray const*, int, long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8450 (    0x98) _findSectionWithID(__CFArray const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a84e8 (    0x50) check_mntfromname [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8538 (   0x138) _FSGetLocationFromStatfs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8670 (     0x4) Security::CommonError::~CommonError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8674 (     0x4) Security::CommonError::~CommonError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8678 (     0x8) Security::UnixError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8680 (    0x10) Security::UnixError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8690 (     0x8) Security::UnixError::what() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8698 (    0x28) Security::UnixError::~UnixError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a86c0 (     0x4) Security::UnixError::~UnixError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a86c4 (     0x8) Security::ModuleNexusError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a86cc (     0x8) Security::ModuleNexusError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a86d4 (    0x28) Security::ModuleNexusError::~ModuleNexusError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a86fc (     0x4) Security::ModuleNexusError::~ModuleNexusError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8700 (   0x264) Security::CommonError::LogBacktrace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8964 (   0x188) Security::UnixError::UnixError(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8aec (    0x5c) Security::UnixError::throwMe(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8b48 (    0xa8) Security::ModuleNexusError::throwMe() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8bf0 (     0xc) Security::Allocator::operator==(Security::Allocator const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8bfc (     0x4) DefaultAllocator::~DefaultAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8c00 (     0x4) DefaultAllocator::~DefaultAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8c04 (    0x5c) SensitiveAllocator::realloc(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8c60 (    0x54) SensitiveAllocator::free(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8cb4 (     0x4) SensitiveAllocator::~SensitiveAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8cb8 (     0x4) SensitiveAllocator::~SensitiveAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8cbc (     0x4) Security::Allocator::~Allocator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8cc0 (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8e58 (    0x64) Security::CssmAutoData::CssmAutoData<Security::CssmData>(Security::Allocator&, Security::CssmData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8ebc (    0x58) Security::CssmMemoryFunctionsAllocator::realloc(void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8f14 (    0x2c) Security::CssmMemoryFunctionsAllocator::free(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8f40 (    0x54) Security::CssmMemoryFunctionsAllocator::malloc(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8f94 (     0x4) Security::CssmMemoryFunctionsAllocator::~CssmMemoryFunctionsAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8f98 (     0x4) Security::CssmMemoryFunctionsAllocator::~CssmMemoryFunctionsAllocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a8f9c (    0x78) Security::CssmAllocatorMemoryFunctions::relayCalloc(unsigned int, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9014 (    0x34) Security::CssmAllocatorMemoryFunctions::relayRealloc(void*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9048 (    0xbc) Security::CssmError::unixError() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9104 (    0x14) Security::CssmError::osStatus() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9118 (     0x8) Security::CssmError::what() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9120 (    0x28) Security::CssmError::~CssmError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9148 (   0x1b0) Security::CssmError::CssmError(int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a92f8 (   0x384) void std::__1::__tree_remove[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a967c (    0x24) Security::CssmManagedData::operator Security::CssmData const&() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a96a0 (    0x10) Security::CssmAutoData::release() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a96b0 (    0x7c) Security::CssmAutoData::~CssmAutoData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a972c (    0x44) Security::StLock<Security::Mutex, &Security::Mutex::lock(), &Security::Mutex::unlock()>::~StLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9770 (    0x60) Security::CssmClient::DbImpl& Security::CssmClient::Object::impl<Security::CssmClient::DbImpl>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a97d0 (    0x90) Security::CssmClient::DbImpl::handle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9860 (    0x28) Security::CssmClient::Db::allocator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9888 (    0x44) Security::CssmClient::Db::dlDeleteRecord(cssm_db_unique_record*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a98cc (    0x44) Security::CssmClient::Db::dlFreeUniqueId(cssm_db_unique_record*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9910 (    0x44) Security::CssmClient::Db::dlAbortQuery(long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9954 (    0x80) Security::CssmClient::Db::dlGetNext(long, cssm_db_record_attribute_data&, cssm_data*, cssm_db_unique_record*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a99d4 (    0x94) Security::CssmClient::Db::dlGetFirst(cssm_query const&, cssm_db_record_attribute_data&, cssm_data*, cssm_db_unique_record*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9a68 (    0x3c) Security::CssmClient::Db::~Db() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9aa4 (    0x2c) Security::CssmClient::Db::~Db() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9ad0 (   0x104) Security::CssmClient::CssmImpl::deactivate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9bd4 (     0xc) Security::CssmClient::ObjectImpl::operator==(Security::CssmClient::ObjectImpl const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9be0 (     0xc) Security::CssmClient::ObjectImpl::operator<(Security::CssmClient::ObjectImpl const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9bec (    0x54) Security::CssmClient::ObjectImpl::allocator(Security::Allocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9c40 (    0x28) Security::CssmClient::CssmImpl::~CssmImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9c68 (    0xec) Security::CssmClient::CssmImpl::~CssmImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9d54 (    0x54) std::__1::__tree<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, std::__1::__map_value_compare<Security::Guid, std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, std::__1::less<Security::Guid>, true>, std::__1::allocator<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>>>::destroy(std::__1::__tree_node<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9da8 (    0xd4) Security::RefPointer<Security::CssmClient::CssmImpl>::setPointer(Security::CssmClient::CssmImpl*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9e7c (     0x4) Security::CssmClient::ObjectImpl::~ObjectImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9e80 (     0x4) Security::CssmClient::ObjectImpl::~ObjectImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9e84 (     0x4) Security::CssmClient::CssmImpl::~CssmImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9e88 (    0x94) Security::CssmClient::ModuleImpl::deactivate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9f1c (    0x28) Security::CssmClient::ModuleImpl::~ModuleImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9f44 (    0x6c) Security::CssmClient::ModuleImpl::~ModuleImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9fb0 (     0x4) Security::CssmClient::ModuleImpl::~ModuleImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9fb4 (     0x8) Security::CssmClient::AttachmentImpl::subserviceId(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9fbc (     0x8) Security::CssmClient::AttachmentImpl::subserviceMask() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9fc4 (    0x28) Security::CssmClient::AttachmentImpl::~AttachmentImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978a9fec (    0x94) Security::CssmClient::AttachmentImpl::~AttachmentImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa080 (    0x58) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, void*>>>>::reset[abi:v160006](std::__1::__tree_node<std::__1::__value_type<Security::Guid, Security::CssmClient::Module>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa0d8 (    0x54) Security::CssmClient::AttachmentImpl::module() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa12c (    0x5c) Security::CssmClient::Encrypt::init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa188 (    0x6c) Security::CssmClient::Encrypt::~Encrypt() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa1f4 (    0x58) Security::CssmClient::Context::unstaged() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa24c (     0x4) Security::CssmClient::AclBearer::~AclBearer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa250 (     0x4) Security::CssmClient::AclBearer::~AclBearer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa254 (    0x4c) Security::CssmClient::CLImpl::~CLImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa2a0 (    0x28) Security::CssmClient::CLImpl::~CLImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa2c8 (    0x48) Security::CssmClient::CLImpl::CLImpl(Security::Guid const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa310 (    0x64) Security::CssmClient::GenerateKey::~GenerateKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa374 (   0x1a4) Security::CssmClient::MacContext::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa518 (    0x64) Security::CssmClient::MacContext::~MacContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa57c (    0x60) Security::CssmClient::MacContext::~MacContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa5dc (    0x5c) Security::CssmClient::GenerateMac::init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa638 (    0x64) Security::CssmClient::GenerateMac::~GenerateMac() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa69c (    0x5c) Security::CssmClient::VerifyMac::init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa6f8 (    0x64) Security::CssmClient::VerifyMac::~VerifyMac() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa75c (    0x7c) Security::CssmClient::GenerateMac::sign(Security::CssmData const*, unsigned int, Security::CssmData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa7d8 (    0x7c) Security::CssmClient::VerifyMac::verify(Security::CssmData const*, unsigned int, Security::CssmData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa854 (    0x6c) Security::CssmClient::WrapKey::~WrapKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa8c0 (    0x6c) Security::CssmClient::DeriveKey::~DeriveKey() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa92c (     0x8) non-virtual thunk to Security::CssmClient::KeyImpl::changeOwner(cssm_acl_owner_prototype const&, cssm_access_credentials const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aa934 (   0x114) Security::CssmClient::KeyImpl::changeOwner(cssm_acl_owner_prototype const&, cssm_access_credentials const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aaa48 (     0x8) non-virtual thunk to Security::CssmClient::KeyImpl::getOwner(Security::AutoAclOwnerPrototype&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aaa50 (   0x174) Security::CssmClient::KeyImpl::getOwner(Security::AutoAclOwnerPrototype&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aabc4 (     0x8) non-virtual thunk to Security::CssmClient::KeyImpl::changeAcl(cssm_acl_edit const&, cssm_access_credentials const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aabcc (   0x114) Security::CssmClient::KeyImpl::changeAcl(cssm_acl_edit const&, cssm_access_credentials const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aace0 (     0x8) non-virtual thunk to Security::CssmClient::KeyImpl::getAcl(Security::AutoAclEntryInfoList&, char const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aace8 (   0x134) Security::CssmClient::KeyImpl::getAcl(Security::AutoAclEntryInfoList&, char const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aae1c (    0x2c) non-virtual thunk to Security::CssmClient::KeyImpl::~KeyImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aae48 (     0x8) non-virtual thunk to Security::CssmClient::KeyImpl::~KeyImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aae50 (   0x1a8) Security::CssmClient::KeyImpl::KeyImpl(Security::CssmClient::CSP const&, cssm_key const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aaff8 (     0xc) Security::CssmClient::CSPImpl::~CSPImpl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab004 (    0x14) Security::CssmClient::Context::init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab018 (   0x138) Security::CssmClient::PassThrough::activate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab150 (    0x30) Security::CssmClient::PassThrough::~PassThrough() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab180 (     0x4) Security::CssmClient::Context::~Context() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab184 (     0x4) Security::CssmClient::Context::~Context() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab188 (     0xc) Security::CssmClient::PassThrough::~PassThrough() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab194 (    0x30) Security::CssmClient::Random::~Random() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab1c4 (     0xc) Security::CssmClient::Random::~Random() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab1d0 (    0x74) Security::CssmClient::PassThrough::operator()(unsigned int, void const*, void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab244 (    0x34) DIInitialize.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab278 (    0x78) CDiskImage::hasValidChecksum(CChecksum**, CChecksum**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab2f0 (   0x1b0) CShadowedDiskImage::setShadowFile(__CFURL const*, __CFDictionary const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab4a0 (   0x1b0) CShadowedDiskImage::setShadowFile(__CFURL const*, __CFDictionary const*) (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab650 (    0x2c) Security::CssmOwnedData::append(void const*, unsigned long) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab67c (    0x1c) _authopen.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab698 (    0x1c) _authopen.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab6b4 (    0x1c) _authopen.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab6d0 (    0x1c) _authopen.cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab6ec (    0x88) DIHLCopyImageForVolume.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab774 (    0x64) DIHLCopyImageForVolume.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab7d8 (    0x64) DIHLCopyImageForVolume.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab83c (    0x8c) DIHLCopyVolumeForImage.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab8c8 (    0x64) DIHLCopyVolumeForImage.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab92c (    0x64) DIHLCopyVolumeForImage.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978ab990 (    0x74) DIHLUpgradeKeychainItem.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aba04 (    0x78) __42-[DIHelperProxy(Thread) threadSetupServer]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001978aba7c (    0x44) Bitmap::initWithBuffer(void*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001978abac0 (  0x2460) __TEXT __auth_stubs
                0x00000001978abac0 (    0x10) DYLD-STUB$$AuthorizationCopyRights [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abad0 (    0x10) DYLD-STUB$$AuthorizationCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abae0 (    0x10) DYLD-STUB$$AuthorizationExecuteWithPrivileges [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abaf0 (    0x10) DYLD-STUB$$AuthorizationFree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb00 (    0x10) DYLD-STUB$$AuthorizationFreeItemSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb10 (    0x10) DYLD-STUB$$AuthorizationMakeExternalForm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb20 (    0x10) DYLD-STUB$$BZ2_bzBuffToBuffCompress [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb30 (    0x10) DYLD-STUB$$BZ2_bzBuffToBuffDecompress [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb40 (    0x10) DYLD-STUB$$CCCalibratePBKDF [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb50 (    0x10) DYLD-STUB$$CCCrypt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb60 (    0x10) DYLD-STUB$$CCKeyDerivationPBKDF [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb70 (    0x10) DYLD-STUB$$CCRandomGenerateBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb80 (    0x10) DYLD-STUB$$CC_SHA1_Final [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abb90 (    0x10) DYLD-STUB$$CC_SHA1_Init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abba0 (    0x10) DYLD-STUB$$CC_SHA1_Update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abbb0 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abbc0 (    0x10) DYLD-STUB$$CFArrayAppendArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abbd0 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abbe0 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abbf0 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc00 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc10 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc20 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc30 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc40 (    0x10) DYLD-STUB$$CFArrayDictionarySearchWithIndexOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc50 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc60 (    0x10) DYLD-STUB$$CFArrayGetFirstIndexOfValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc70 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc80 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abc90 (    0x10) DYLD-STUB$$CFArrayRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abca0 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abcb0 (    0x10) DYLD-STUB$$CFArraySortValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abcc0 (    0x10) DYLD-STUB$$CFBagApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abcd0 (    0x10) DYLD-STUB$$CFBagGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abce0 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abcf0 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd00 (    0x10) DYLD-STUB$$CFBundleCopyBundleURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd10 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationForLocalizationInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd20 (    0x10) DYLD-STUB$$CFBundleCopyLocalizedString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd30 (    0x10) DYLD-STUB$$CFBundleCopyResourceURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd40 (    0x10) DYLD-STUB$$CFBundleCopyResourcesDirectoryURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd50 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd60 (    0x10) DYLD-STUB$$CFBundleCreateBundlesFromDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd70 (    0x10) DYLD-STUB$$CFBundleGetBundleWithIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd80 (    0x10) DYLD-STUB$$CFBundleGetInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abd90 (    0x10) DYLD-STUB$$CFBundleGetValueForInfoDictionaryKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abda0 (    0x10) DYLD-STUB$$CFBundleGetVersionNumber [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abdb0 (    0x10) DYLD-STUB$$CFCopyHomeDirectoryURLForUser [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abdc0 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abdd0 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abde0 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abdf0 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe00 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe10 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe20 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe30 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe40 (    0x10) DYLD-STUB$$CFDateCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe50 (    0x10) DYLD-STUB$$CFDateFormatterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe60 (    0x10) DYLD-STUB$$CFDateFormatterCreateStringWithDate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe70 (    0x10) DYLD-STUB$$CFDateFormatterSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe80 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abe90 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abea0 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abeb0 (    0x10) DYLD-STUB$$CFDictionaryCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abec0 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abed0 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abee0 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abef0 (    0x10) DYLD-STUB$$CFDictionaryGetCountOfKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf00 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf10 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf20 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf30 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf40 (    0x10) DYLD-STUB$$CFDictionaryRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf50 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf60 (    0x10) DYLD-STUB$$CFDictionaryReplaceValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf70 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf80 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abf90 (    0x10) DYLD-STUB$$CFErrorCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abfa0 (    0x10) DYLD-STUB$$CFErrorCopyFailureReason [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abfb0 (    0x10) DYLD-STUB$$CFErrorGetCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abfc0 (    0x10) DYLD-STUB$$CFGetAllocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abfd0 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abfe0 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978abff0 (    0x10) DYLD-STUB$$CFLocaleCopyDisplayNameForPropertyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac000 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac010 (    0x10) DYLD-STUB$$CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac020 (    0x10) DYLD-STUB$$CFLocaleGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac030 (    0x10) DYLD-STUB$$CFLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac040 (    0x10) DYLD-STUB$$CFNumberCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac050 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac060 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac070 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac080 (    0x10) DYLD-STUB$$CFPreferencesCopyAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac090 (    0x10) DYLD-STUB$$CFPreferencesCopyMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0a0 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0b0 (    0x10) DYLD-STUB$$CFPropertyListCreateDeepCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0c0 (    0x10) DYLD-STUB$$CFPropertyListCreateFromXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0d0 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0e0 (    0x10) DYLD-STUB$$CFPropertyListCreateWithStream [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac0f0 (    0x10) DYLD-STUB$$CFReadStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac100 (    0x10) DYLD-STUB$$CFReadStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac110 (    0x10) DYLD-STUB$$CFReadStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac120 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac130 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac140 (    0x10) DYLD-STUB$$CFRunLoopAddSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac150 (    0x10) DYLD-STUB$$CFRunLoopAddTimer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac160 (    0x10) DYLD-STUB$$CFRunLoopGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac170 (    0x10) DYLD-STUB$$CFRunLoopRemoveTimer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac180 (    0x10) DYLD-STUB$$CFRunLoopRun [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac190 (    0x10) DYLD-STUB$$CFRunLoopRunInMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1a0 (    0x10) DYLD-STUB$$CFRunLoopSourceInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1b0 (    0x10) DYLD-STUB$$CFRunLoopStop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1c0 (    0x10) DYLD-STUB$$CFRunLoopTimerCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1d0 (    0x10) DYLD-STUB$$CFSetAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1e0 (    0x10) DYLD-STUB$$CFSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac1f0 (    0x10) DYLD-STUB$$CFShow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac200 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac210 (    0x10) DYLD-STUB$$CFStringAppendCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac220 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac230 (    0x10) DYLD-STUB$$CFStringCompareWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac240 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac250 (    0x10) DYLD-STUB$$CFStringCreateExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac260 (    0x10) DYLD-STUB$$CFStringCreateFromExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac270 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac280 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac290 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2a0 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2b0 (    0x10) DYLD-STUB$$CFStringCreateWithCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2c0 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2d0 (    0x10) DYLD-STUB$$CFStringCreateWithPascalString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2e0 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac2f0 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac300 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac310 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac320 (    0x10) DYLD-STUB$$CFStringGetFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac330 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac340 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac350 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeOfFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac360 (    0x10) DYLD-STUB$$CFStringGetPascalString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac370 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac380 (    0x10) DYLD-STUB$$CFStringHasPrefix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac390 (    0x10) DYLD-STUB$$CFStringHasSuffix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3a0 (    0x10) DYLD-STUB$$CFStringPad [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3b0 (    0x10) DYLD-STUB$$CFStringReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3c0 (    0x10) DYLD-STUB$$CFStringReplaceAll [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3d0 (    0x10) DYLD-STUB$$CFTimeZoneCopySystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3e0 (    0x10) DYLD-STUB$$CFTimeZoneCreateWithTimeIntervalFromGMT [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac3f0 (    0x10) DYLD-STUB$$CFTimeZoneGetSecondsFromGMT [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac400 (    0x10) DYLD-STUB$$CFTreeAppendChild [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac410 (    0x10) DYLD-STUB$$CFTreeApplyFunctionToChildren [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac420 (    0x10) DYLD-STUB$$CFTreeCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac430 (    0x10) DYLD-STUB$$CFTreeGetContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac440 (    0x10) DYLD-STUB$$CFTreeGetFirstChild [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac450 (    0x10) DYLD-STUB$$CFTreeGetNextSibling [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac460 (    0x10) DYLD-STUB$$CFTreeGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac470 (    0x10) DYLD-STUB$$CFURLCopyAbsoluteURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac480 (    0x10) DYLD-STUB$$CFURLCopyFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac490 (    0x10) DYLD-STUB$$CFURLCopyHostName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4a0 (    0x10) DYLD-STUB$$CFURLCopyLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4b0 (    0x10) DYLD-STUB$$CFURLCopyNetLocation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4c0 (    0x10) DYLD-STUB$$CFURLCopyPassword [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4d0 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4e0 (    0x10) DYLD-STUB$$CFURLCopyPathExtension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac4f0 (    0x10) DYLD-STUB$$CFURLCopyResourcePropertyForKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac500 (    0x10) DYLD-STUB$$CFURLCopyScheme [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac510 (    0x10) DYLD-STUB$$CFURLCopyUserName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac520 (    0x10) DYLD-STUB$$CFURLCreateCopyAppendingPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac530 (    0x10) DYLD-STUB$$CFURLCreateCopyAppendingPathExtension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac540 (    0x10) DYLD-STUB$$CFURLCreateCopyDeletingLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac550 (    0x10) DYLD-STUB$$CFURLCreateCopyDeletingPathExtension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac560 (    0x10) DYLD-STUB$$CFURLCreateFromFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac570 (    0x10) DYLD-STUB$$CFURLCreateStringByAddingPercentEscapes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac580 (    0x10) DYLD-STUB$$CFURLCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac590 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5a0 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPathRelativeToBase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5b0 (    0x10) DYLD-STUB$$CFURLCreateWithString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5c0 (    0x10) DYLD-STUB$$CFURLGetFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5d0 (    0x10) DYLD-STUB$$CFURLGetString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5e0 (    0x10) DYLD-STUB$$CFURLHasDirectoryPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac5f0 (    0x10) DYLD-STUB$$CFURLSetResourcePropertyForKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac600 (    0x10) DYLD-STUB$$CFUUIDCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac610 (    0x10) DYLD-STUB$$CFUUIDCreateFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac620 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac630 (    0x10) DYLD-STUB$$CFUUIDCreateString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac640 (    0x10) DYLD-STUB$$CFUUIDGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac650 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac660 (    0x10) DYLD-STUB$$CFUserNotificationCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac670 (    0x10) DYLD-STUB$$CFUserNotificationGetResponseValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac680 (    0x10) DYLD-STUB$$CFUserNotificationReceiveResponse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac690 (    0x10) DYLD-STUB$$CSSM_CL_CertGetKeyInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6a0 (    0x10) DYLD-STUB$$CSSM_CSP_CreateAsymmetricContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6b0 (    0x10) DYLD-STUB$$CSSM_CSP_CreateDeriveKeyContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6c0 (    0x10) DYLD-STUB$$CSSM_CSP_CreateKeyGenContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6d0 (    0x10) DYLD-STUB$$CSSM_CSP_CreateMacContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6e0 (    0x10) DYLD-STUB$$CSSM_CSP_CreatePassThroughContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac6f0 (    0x10) DYLD-STUB$$CSSM_CSP_CreateRandomGenContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac700 (    0x10) DYLD-STUB$$CSSM_CSP_CreateSymmetricContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac710 (    0x10) DYLD-STUB$$CSSM_CSP_PassThrough [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac720 (    0x10) DYLD-STUB$$CSSM_ChangeKeyAcl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac730 (    0x10) DYLD-STUB$$CSSM_ChangeKeyOwner [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac740 (    0x10) DYLD-STUB$$CSSM_DL_DataAbortQuery [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac750 (    0x10) DYLD-STUB$$CSSM_DL_DataDelete [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac760 (    0x10) DYLD-STUB$$CSSM_DL_DataGetFirst [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac770 (    0x10) DYLD-STUB$$CSSM_DL_DataGetNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac780 (    0x10) DYLD-STUB$$CSSM_DL_FreeUniqueRecord [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac790 (    0x10) DYLD-STUB$$CSSM_DecryptData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7a0 (    0x10) DYLD-STUB$$CSSM_DeleteContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7b0 (    0x10) DYLD-STUB$$CSSM_DeriveKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7c0 (    0x10) DYLD-STUB$$CSSM_EncryptData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7d0 (    0x10) DYLD-STUB$$CSSM_EncryptDataInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7e0 (    0x10) DYLD-STUB$$CSSM_FreeKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac7f0 (    0x10) DYLD-STUB$$CSSM_GenerateKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac800 (    0x10) DYLD-STUB$$CSSM_GenerateMac [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac810 (    0x10) DYLD-STUB$$CSSM_GenerateMacInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac820 (    0x10) DYLD-STUB$$CSSM_GenerateRandom [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac830 (    0x10) DYLD-STUB$$CSSM_GetAPIMemoryFunctions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac840 (    0x10) DYLD-STUB$$CSSM_GetKeyAcl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac850 (    0x10) DYLD-STUB$$CSSM_GetKeyOwner [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac860 (    0x10) DYLD-STUB$$CSSM_Init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac870 (    0x10) DYLD-STUB$$CSSM_ModuleAttach [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac880 (    0x10) DYLD-STUB$$CSSM_ModuleDetach [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac890 (    0x10) DYLD-STUB$$CSSM_ModuleLoad [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8a0 (    0x10) DYLD-STUB$$CSSM_ModuleUnload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8b0 (    0x10) DYLD-STUB$$CSSM_Terminate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8c0 (    0x10) DYLD-STUB$$CSSM_UnwrapKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8d0 (    0x10) DYLD-STUB$$CSSM_UpdateContextAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8e0 (    0x10) DYLD-STUB$$CSSM_VerifyMac [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac8f0 (    0x10) DYLD-STUB$$CSSM_VerifyMacInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac900 (    0x10) DYLD-STUB$$CSSM_WrapKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac910 (    0x10) DYLD-STUB$$CoreEndianFlipData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac920 (    0x10) DYLD-STUB$$DADiskCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac930 (    0x10) DYLD-STUB$$DADiskCopyIOMedia [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac940 (    0x10) DYLD-STUB$$DADiskCopyWholeDisk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac950 (    0x10) DYLD-STUB$$DADiskCreateFromBSDName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac960 (    0x10) DYLD-STUB$$DADiskEject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac970 (    0x10) DYLD-STUB$$DADiskUnmount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac980 (    0x10) DYLD-STUB$$DADissenterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac990 (    0x10) DYLD-STUB$$DADissenterGetStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9a0 (    0x10) DYLD-STUB$$DASessionCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9b0 (    0x10) DYLD-STUB$$DASessionScheduleWithRunLoop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9c0 (    0x10) DYLD-STUB$$DASessionUnscheduleFromRunLoop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9d0 (    0x10) DYLD-STUB$$DRBurnAbort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9e0 (    0x10) DYLD-STUB$$DRBurnCopyStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ac9f0 (    0x10) DYLD-STUB$$DRBurnCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca00 (    0x10) DYLD-STUB$$DRBurnSetProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca10 (    0x10) DYLD-STUB$$DRBurnWriteLayout [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca20 (    0x10) DYLD-STUB$$DRCallbackDeviceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca30 (    0x10) DYLD-STUB$$DRCopyLocalizedStringForDiscRecordingError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca40 (    0x10) DYLD-STUB$$DRDeviceCopyStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca50 (    0x10) DYLD-STUB$$DRFSObjectSetBaseName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca60 (    0x10) DYLD-STUB$$DRFSObjectSetFilesystemMask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca70 (    0x10) DYLD-STUB$$DRFilesystemTrackCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca80 (    0x10) DYLD-STUB$$DRFolderAddChild [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aca90 (    0x10) DYLD-STUB$$DRFolderCreateRealWithURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acaa0 (    0x10) DYLD-STUB$$DRFolderCreateVirtual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acab0 (    0x10) DYLD-STUB$$DRGetRefCon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acac0 (    0x10) DYLD-STUB$$DRNotificationCenterAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acad0 (    0x10) DYLD-STUB$$DRNotificationCenterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acae0 (    0x10) DYLD-STUB$$DRNotificationCenterCreateRunLoopSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acaf0 (    0x10) DYLD-STUB$$DRSetRefCon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb00 (    0x10) DYLD-STUB$$DRTrackCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb10 (    0x10) DYLD-STUB$$DRTrackGetProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb20 (    0x10) DYLD-STUB$$DRTrackSetProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb30 (    0x10) DYLD-STUB$$DisposeHandle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb40 (    0x10) DYLD-STUB$$FSGetVolumeParms [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb50 (    0x10) DYLD-STUB$$GetHandleSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb60 (    0x10) DYLD-STUB$$GetTextEncodingFromScriptInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb70 (    0x10) DYLD-STUB$$HGetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb80 (    0x10) DYLD-STUB$$HLock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acb90 (    0x10) DYLD-STUB$$HSetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acba0 (    0x10) DYLD-STUB$$HUnlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acbb0 (    0x10) DYLD-STUB$$HandToHand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acbc0 (    0x10) DYLD-STUB$$IOBSDNameMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acbd0 (    0x10) DYLD-STUB$$IOConnectCallScalarMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acbe0 (    0x10) DYLD-STUB$$IOConnectCallStructMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acbf0 (    0x10) DYLD-STUB$$IOIteratorIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc00 (    0x10) DYLD-STUB$$IOIteratorNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc10 (    0x10) DYLD-STUB$$IOIteratorReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc20 (    0x10) DYLD-STUB$$IOObjectConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc30 (    0x10) DYLD-STUB$$IOObjectGetClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc40 (    0x10) DYLD-STUB$$IOObjectIsEqualTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc50 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc60 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc70 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc80 (    0x10) DYLD-STUB$$IORegistryEntryCreateIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acc90 (    0x10) DYLD-STUB$$IORegistryEntryGetChildIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acca0 (    0x10) DYLD-STUB$$IORegistryEntryGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978accb0 (    0x10) DYLD-STUB$$IORegistryEntrySearchCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978accc0 (    0x10) DYLD-STUB$$IORegistryGetRootEntry [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978accd0 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acce0 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978accf0 (    0x10) DYLD-STUB$$IOServiceGetMatchingServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd00 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd10 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd20 (    0x10) DYLD-STUB$$IOServiceWaitQuiet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd30 (    0x10) DYLD-STUB$$MKAccessLibrary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd40 (    0x10) DYLD-STUB$$MKCFBuildPartition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd50 (    0x10) DYLD-STUB$$MKCFCreateFSInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd60 (    0x10) DYLD-STUB$$MKCFCreateMap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd70 (    0x10) DYLD-STUB$$MKCFCreateMedia [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd80 (    0x10) DYLD-STUB$$MKCFDisposeMedia [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acd90 (    0x10) DYLD-STUB$$MKCFReadMedia [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acda0 (    0x10) DYLD-STUB$$MKCFWriteMedia [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acdb0 (    0x10) DYLD-STUB$$MKDetectISO [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acdc0 (    0x10) DYLD-STUB$$MKFetchMediaSetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acdd0 (    0x10) DYLD-STUB$$MKHFSGetResizeLimits [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acde0 (    0x10) DYLD-STUB$$MKHFSResizeVolume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acdf0 (    0x10) DYLD-STUB$$MKMediaCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace00 (    0x10) DYLD-STUB$$MKMediaCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace10 (    0x10) DYLD-STUB$$MemError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace20 (    0x10) DYLD-STUB$$NSLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace30 (    0x10) DYLD-STUB$$NewEmptyHandle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace40 (    0x10) DYLD-STUB$$NewHandleClear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace50 (    0x10) DYLD-STUB$$ReallocateHandle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace60 (    0x10) DYLD-STUB$$SecAccessCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace70 (    0x10) DYLD-STUB$$SecGenericPasswordCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace80 (    0x10) DYLD-STUB$$SecKeyGetCSPHandle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ace90 (    0x10) DYLD-STUB$$SecKeyGetCSSMKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acea0 (    0x10) DYLD-STUB$$SecKeyGetCredentials [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aceb0 (    0x10) DYLD-STUB$$SecKeychainCopyDefault [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acec0 (    0x10) DYLD-STUB$$SecKeychainCopySearchList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aced0 (    0x10) DYLD-STUB$$SecKeychainFindGenericPassword [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acee0 (    0x10) DYLD-STUB$$SecKeychainGetStatus [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acef0 (    0x10) DYLD-STUB$$SecKeychainGetUserInteractionAllowed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf00 (    0x10) DYLD-STUB$$SecKeychainItemCopyAttributesAndData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf10 (    0x10) DYLD-STUB$$SecKeychainItemCreateFromContent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf20 (    0x10) DYLD-STUB$$SecKeychainItemFreeAttributesAndData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf30 (    0x10) DYLD-STUB$$SecKeychainItemFreeContent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf40 (    0x10) DYLD-STUB$$SecKeychainOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf50 (    0x10) DYLD-STUB$$SecKeychainSearchCopyNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf60 (    0x10) DYLD-STUB$$SecKeychainSearchCreateFromAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf70 (    0x10) DYLD-STUB$$SecKeychainSetUserInteractionAllowed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf80 (    0x10) DYLD-STUB$$SecKeychainUnlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acf90 (    0x10) DYLD-STUB$$SecPasswordAction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acfa0 (    0x10) DYLD-STUB$$SecTrustedApplicationCreateFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acfb0 (    0x10) DYLD-STUB$$SessionGetInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acfc0 (    0x10) DYLD-STUB$$SetHandleSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acfd0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acfe0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978acff0 (    0x10) DYLD-STUB$$_CFURLCopyComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad000 (    0x10) DYLD-STUB$$_CFURLCreateFromComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad010 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad020 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad030 (    0x10) DYLD-STUB$$std::bad_alloc::bad_alloc() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad040 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad050 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad060 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad070 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad080 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad090 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0a0 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0b0 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0c0 (    0x10) DYLD-STUB$$__cxa_bad_cast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0d0 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0e0 (    0x10) DYLD-STUB$$__cxa_call_unexpected [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad0f0 (    0x10) DYLD-STUB$$__cxa_demangle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad100 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad110 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad120 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad130 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad140 (    0x10) DYLD-STUB$$__dynamic_cast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad150 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad160 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad170 (    0x10) DYLD-STUB$$__memcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad180 (    0x10) DYLD-STUB$$__memmove_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad190 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1a0 (    0x10) DYLD-STUB$$__strlcat_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1b0 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1c0 (    0x10) DYLD-STUB$$__strncat_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1d0 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1e0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad1f0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad200 (    0x10) DYLD-STUB$$_qtn_file_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad210 (    0x10) DYLD-STUB$$_qtn_file_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad220 (    0x10) DYLD-STUB$$_qtn_file_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad230 (    0x10) DYLD-STUB$$_qtn_file_init_with_path [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad240 (    0x10) DYLD-STUB$$_qtn_file_set_flags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad250 (    0x10) DYLD-STUB$$_qtn_file_set_identifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad260 (    0x10) DYLD-STUB$$_qtn_file_set_timestamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad270 (    0x10) DYLD-STUB$$_qtn_file_to_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad280 (    0x10) DYLD-STUB$$access [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad290 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2a0 (    0x10) DYLD-STUB$$backtrace_symbols [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2b0 (    0x10) DYLD-STUB$$basename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2c0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2d0 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2e0 (    0x10) DYLD-STUB$$chmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad2f0 (    0x10) DYLD-STUB$$chown [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad300 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad310 (    0x10) DYLD-STUB$$closedir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad320 (    0x10) DYLD-STUB$$compress2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad330 (    0x10) DYLD-STUB$$compression_decode_buffer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad340 (    0x10) DYLD-STUB$$compression_decode_scratch_buffer_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad350 (    0x10) DYLD-STUB$$compression_encode_buffer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad360 (    0x10) DYLD-STUB$$compression_encode_scratch_buffer_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad370 (    0x10) DYLD-STUB$$crc32 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad380 (    0x10) DYLD-STUB$$cssmErrorString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad390 (    0x10) DYLD-STUB$$cssmPerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3a0 (    0x10) DYLD-STUB$$curl_easy_cleanup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3b0 (    0x10) DYLD-STUB$$curl_easy_getinfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3c0 (    0x10) DYLD-STUB$$curl_easy_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3d0 (    0x10) DYLD-STUB$$curl_easy_perform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3e0 (    0x10) DYLD-STUB$$curl_easy_setopt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad3f0 (    0x10) DYLD-STUB$$devname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad400 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad410 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad420 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad430 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad440 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad450 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad460 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad470 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad480 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad490 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4a0 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4b0 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4c0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4d0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4e0 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad4f0 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad500 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad510 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad520 (    0x10) DYLD-STUB$$dup2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad530 (    0x10) DYLD-STUB$$err [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad540 (    0x10) DYLD-STUB$$execl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad550 (    0x10) DYLD-STUB$$fchown [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad560 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad570 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad580 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad590 (    0x10) DYLD-STUB$$fileno [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5a0 (    0x10) DYLD-STUB$$fmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5b0 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5c0 (    0x10) DYLD-STUB$$fork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5d0 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5e0 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad5f0 (    0x10) DYLD-STUB$$fputs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad600 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad610 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad620 (    0x10) DYLD-STUB$$fstatat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad630 (    0x10) DYLD-STUB$$fsync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad640 (    0x10) DYLD-STUB$$ftruncate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad650 (    0x10) DYLD-STUB$$fts_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad660 (    0x10) DYLD-STUB$$fts_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad670 (    0x10) DYLD-STUB$$fts_read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad680 (    0x10) DYLD-STUB$$futimes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad690 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6a0 (    0x10) DYLD-STUB$$getattrlist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6b0 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6c0 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6d0 (    0x10) DYLD-STUB$$getfsstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6e0 (    0x10) DYLD-STUB$$gethostbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad6f0 (    0x10) DYLD-STUB$$getmntinfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad700 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad710 (    0x10) DYLD-STUB$$getprogname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad720 (    0x10) DYLD-STUB$$getpwuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad730 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad740 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad750 (    0x10) DYLD-STUB$$getxattr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad760 (    0x10) DYLD-STUB$$inet_ntop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad770 (    0x10) DYLD-STUB$$inflate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad780 (    0x10) DYLD-STUB$$inflateEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad790 (    0x10) DYLD-STUB$$inflateInit_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7a0 (    0x10) DYLD-STUB$$ioctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7b0 (    0x10) DYLD-STUB$$isatty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7c0 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7d0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7e0 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad7f0 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad800 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad810 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad820 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad830 (    0x10) DYLD-STUB$$memset_pattern16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad840 (    0x10) DYLD-STUB$$memset_s [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad850 (    0x10) DYLD-STUB$$mkdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad860 (    0x10) DYLD-STUB$$mkstemp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad870 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad880 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad890 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8a0 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8b0 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8c0 (    0x10) DYLD-STUB$$objc_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8d0 (    0x10) DYLD-STUB$$objc_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8e0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad8f0 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad900 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad910 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad920 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad930 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad940 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad950 (    0x10) DYLD-STUB$$opendir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad960 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad970 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad980 (    0x10) DYLD-STUB$$os_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad990 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9a0 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9b0 (    0x10) DYLD-STUB$$perror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9c0 (    0x10) DYLD-STUB$$posix_spawn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9d0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_adddup2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9e0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ad9f0 (    0x10) DYLD-STUB$$posix_spawn_file_actions_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada00 (    0x10) DYLD-STUB$$posix_spawnattr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada10 (    0x10) DYLD-STUB$$posix_spawnattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada20 (    0x10) DYLD-STUB$$posix_spawnattr_set_qos_class_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada30 (    0x10) DYLD-STUB$$posix_spawnattr_setflags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada40 (    0x10) DYLD-STUB$$posix_spawnattr_setprocesstype_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada50 (    0x10) DYLD-STUB$$pread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada60 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada70 (    0x10) DYLD-STUB$$pthread_cond_broadcast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada80 (    0x10) DYLD-STUB$$pthread_cond_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ada90 (    0x10) DYLD-STUB$$pthread_cond_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adaa0 (    0x10) DYLD-STUB$$pthread_cond_timedwait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adab0 (    0x10) DYLD-STUB$$pthread_cond_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adac0 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adad0 (    0x10) DYLD-STUB$$pthread_join [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adae0 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adaf0 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb00 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb10 (    0x10) DYLD-STUB$$pthread_mutex_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb20 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb30 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb40 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb50 (    0x10) DYLD-STUB$$pthread_rwlock_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb60 (    0x10) DYLD-STUB$$pthread_rwlock_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb70 (    0x10) DYLD-STUB$$pthread_rwlock_rdlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb80 (    0x10) DYLD-STUB$$pthread_rwlock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adb90 (    0x10) DYLD-STUB$$pthread_rwlock_wrlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adba0 (    0x10) DYLD-STUB$$ptrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adbb0 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adbc0 (    0x10) DYLD-STUB$$pwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adbd0 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adbe0 (    0x10) DYLD-STUB$$random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adbf0 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc00 (    0x10) DYLD-STUB$$readdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc10 (    0x10) DYLD-STUB$$readpassphrase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc20 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc30 (    0x10) DYLD-STUB$$realpath$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc40 (    0x10) DYLD-STUB$$recvmsg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc50 (    0x10) DYLD-STUB$$removexattr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc60 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc70 (    0x10) DYLD-STUB$$rmdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc80 (    0x10) DYLD-STUB$$sandbox_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adc90 (    0x10) DYLD-STUB$$secLogObjForScope [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adca0 (    0x10) DYLD-STUB$$setattrlist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adcb0 (    0x10) DYLD-STUB$$setrlimit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adcc0 (    0x10) DYLD-STUB$$setxattr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adcd0 (    0x10) DYLD-STUB$$sleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adce0 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adcf0 (    0x10) DYLD-STUB$$socketpair [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add00 (    0x10) DYLD-STUB$$sscanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add10 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add20 (    0x10) DYLD-STUB$$statfs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add30 (    0x10) DYLD-STUB$$strcasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add40 (    0x10) DYLD-STUB$$strcasestr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add50 (    0x10) DYLD-STUB$$strchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add60 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add70 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add80 (    0x10) DYLD-STUB$$strlcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978add90 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adda0 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978addb0 (    0x10) DYLD-STUB$$strmode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978addc0 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978addd0 (    0x10) DYLD-STUB$$strnlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adde0 (    0x10) DYLD-STUB$$strsep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978addf0 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade00 (    0x10) DYLD-STUB$$strtod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade10 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade20 (    0x10) DYLD-STUB$$strtoll [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade30 (    0x10) DYLD-STUB$$strtouq [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade40 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade50 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade60 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade70 (    0x10) DYLD-STUB$$truncate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade80 (    0x10) DYLD-STUB$$umask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978ade90 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adea0 (    0x10) DYLD-STUB$$uuid_is_null [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adeb0 (    0x10) DYLD-STUB$$uuid_unparse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adec0 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978aded0 (    0x10) DYLD-STUB$$vsyslog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adee0 (    0x10) DYLD-STUB$$waitpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adef0 (    0x10) DYLD-STUB$$warn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adf00 (    0x10) DYLD-STUB$$warnx [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001978adf10 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001978adf20 (   0x1d4) __TEXT __objc_methlist
                0x00000001978adf20 (   0x158) _OBJC_$_INSTANCE_METHODS_DIHelperProxy(Thread|DIHLHelperConnectionMethods|DIHLHelperMasterProtocol|Authentication) [NameNList, MangledNameNList, NList] 
                0x00000001978ae078 (    0x68) _OBJC_$_INSTANCE_METHODS_NSDictionary(DictionaryExtensions|NSBundleExtras|BetterAccessors|XPCServiceExtras) [NameNList, MangledNameNList, NList] 
                0x00000001978ae0e0 (    0x14) _OBJC_$_INSTANCE_METHODS_NSMutableDictionary(MutableDictionaryExtensions) [NameNList, MangledNameNList, NList] 
            0x00000001978ae0f4 ( 0x2483d) __TEXT __cstring
            0x00000001978d2934 (  0x2928) __TEXT __gcc_except_tab
                0x00000001978d2934 (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d2954 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d2960 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d2974 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d2988 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d299c (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d29bc (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d29dc (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d29fc (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a08 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a1c (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a3c (    0x34) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a70 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a7c (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d2a90 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ab4 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ac0 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ad8 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2af8 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b1c (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b28 (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b40 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b58 (     0xc) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b64 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b80 (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d2b9c (    0x5c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d2bf8 (    0x54) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d2c4c (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d2c58 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2c78 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2c84 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ca4 (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2cc0 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ccc (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2cec (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2cf8 (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2d24 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2d44 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d2d50 (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2d7c (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2d9c (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d2da8 (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001978d2dc8 (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001978d2de8 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e0c (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e2c (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e38 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e5c (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e78 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e84 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001978d2e9c (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ea8 (     0xc) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001978d2eb4 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ec0 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ecc (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001978d2ee8 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d2efc (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f0c (    0x18) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f24 (    0x2c) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f50 (     0xc) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f5c (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f78 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d2f98 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d2fa4 (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001978d2fb8 (    0x58) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001978d3010 (    0x18) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001978d3028 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d3048 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d306c (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d3078 (    0x18) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001978d3090 (    0x18) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001978d30a8 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d30c8 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d30e8 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d30f4 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d3108 (    0x18) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001978d3120 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d312c (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d3148 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d3154 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001978d3168 (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d3194 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d31b4 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d31c0 (    0x2c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d31ec (    0x2c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001978d3218 (    0x2c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001978d3244 (    0x5c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001978d32a0 (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001978d32b0 (    0x18) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001978d32c8 (    0x18) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001978d32e0 (     0xc) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001978d32ec (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001978d32fc (     0xc) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001978d3308 (     0xc) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001978d3314 (     0xc) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001978d3320 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d3344 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d3350 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001978d335c (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d336c (    0x74) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001978d33e0 (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001978d33f4 (    0x38) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001978d342c (   0x104) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001978d3530 (    0x40) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001978d3570 (    0x3c) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001978d35ac (     0xc) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001978d35b8 (    0x68) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001978d3620 (    0x14) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001978d3634 (    0x8c) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001978d36c0 (    0x1c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001978d36dc (    0x30) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001978d370c (    0xf0) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001978d37fc (    0xb4) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001978d38b0 (    0x74) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001978d3924 (    0x44) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001978d3968 (    0x78) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001978d39e0 (    0x84) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001978d3a64 (    0x8c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001978d3af0 (    0x98) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001978d3b88 (   0x128) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001978d3cb0 (    0x5c) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001978d3d0c (    0x5c) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001978d3d68 (   0x11c) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001978d3e84 (    0x84) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001978d3f08 (    0x2c) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001978d3f34 (    0x24) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001978d3f58 (    0x64) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001978d3fbc (    0x20) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001978d3fdc (    0x24) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001978d4000 (    0x20) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001978d4020 (    0x24) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001978d4044 (    0x20) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001978d4064 (    0xd4) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001978d4138 (    0x24) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001978d415c (    0x38) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001978d4194 (    0x38) GCC_except_table97 [NameNList, MangledNameNList, NList] 
                0x00000001978d41cc (    0x70) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001978d423c (    0x10) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000001978d424c (    0x1c) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001978d4268 (    0x20) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001978d4288 (    0x24) GCC_except_table122 [NameNList, MangledNameNList, NList] 
                0x00000001978d42ac (    0x14) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001978d42c0 (    0x24) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x00000001978d42e4 (    0x24) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001978d4308 (    0x24) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x00000001978d432c (    0x20) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001978d434c (    0x10) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001978d435c (    0x14) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001978d4370 (    0x14) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x00000001978d4384 (    0x14) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001978d4398 (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d43c0 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d43e4 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d43f0 (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d4408 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d441c (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d443c (    0x30) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d446c (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4478 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d448c (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001978d44a0 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d44bc (    0x28) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d44e4 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d44f0 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001978d4504 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d4524 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4540 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001978d454c (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d455c (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4568 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4574 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4580 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d458c (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d45a8 (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d45c4 (    0x44) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d4608 (    0x24) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d462c (    0x1c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001978d4648 (    0x28) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001978d4670 (    0x24) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001978d4694 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d46b4 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d46d4 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d46e0 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001978d46f8 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d4718 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4724 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d4744 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4750 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d4770 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d477c (    0x24) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d47a0 (     0xc) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001978d47ac (    0x4c) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001978d47f8 (     0xc) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001978d4804 (     0xc) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001978d4810 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d481c (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d483c (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001978d484c (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d4868 (     0xc) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001978d4874 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4880 (     0xc) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001978d488c (    0xa8) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d4934 (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001978d4940 (     0xc) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001978d494c (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001978d4968 (    0x4c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001978d49b4 (    0x20) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001978d49d4 (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001978d49f4 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a14 (    0x20) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a34 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a40 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a4c (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a58 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a64 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a78 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a84 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4a98 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4aa4 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ab0 (     0xc) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001978d4abc (    0x20) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001978d4adc (     0xc) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ae8 (    0x20) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b08 (    0x30) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b38 (     0xc) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b44 (    0x18) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b5c (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b78 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b84 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001978d4b98 (    0x18) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001978d4bb0 (    0x18) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001978d4bc8 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4bd4 (    0x28) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001978d4bfc (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c0c (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c24 (    0x28) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c4c (    0x20) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c6c (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c7c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001978d4c8c (    0x14) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ca0 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001978d4cb0 (    0x20) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001978d4cd0 (    0x10) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ce0 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001978d4cf0 (    0x10) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001978d4d00 (    0x20) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001978d4d20 (    0x1c) GCC_except_table101 [NameNList, MangledNameNList, NList] 
                0x00000001978d4d3c (    0x30) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001978d4d6c (    0x2c) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001978d4d98 (    0x24) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001978d4dbc (    0x1c) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001978d4dd8 (    0x14) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001978d4dec (    0x1c) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001978d4e08 (    0x3c) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001978d4e44 (    0x10) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001978d4e54 (    0x18) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001978d4e6c (    0x30) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x00000001978d4e9c (    0x1c) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x00000001978d4eb8 (    0x18) GCC_except_table129 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ed0 (    0x7c) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001978d4f4c (    0x1c) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001978d4f68 (    0x44) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001978d4fac (    0x18) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001978d4fc4 (    0x2c) GCC_except_table151 [NameNList, MangledNameNList, NList] 
                0x00000001978d4ff0 (    0x14) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001978d5004 (    0x2c) GCC_except_table155 [NameNList, MangledNameNList, NList] 
                0x00000001978d5030 (    0x10) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001978d5040 (    0x14) GCC_except_table157 [NameNList, MangledNameNList, NList] 
                0x00000001978d5054 (    0x24) GCC_except_table158 [NameNList, MangledNameNList, NList] 
                0x00000001978d5078 (    0x20) GCC_except_table173 [NameNList, MangledNameNList, NList] 
                0x00000001978d5098 (    0x2c) GCC_except_table176 [NameNList, MangledNameNList, NList] 
                0x00000001978d50c4 (    0x2c) GCC_except_table177 [NameNList, MangledNameNList, NList] 
                0x00000001978d50f0 (    0x2c) GCC_except_table178 [NameNList, MangledNameNList, NList] 
                0x00000001978d511c (    0x14) GCC_except_table181 [NameNList, MangledNameNList, NList] 
                0x00000001978d5130 (    0x18) GCC_except_table183 [NameNList, MangledNameNList, NList] 
                0x00000001978d5148 (    0x14) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001978d515c (    0x18) GCC_except_table187 [NameNList, MangledNameNList, NList] 
                0x00000001978d5174 (    0x1c) GCC_except_table189 [NameNList, MangledNameNList, NList] 
                0x00000001978d5190 (    0x24) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001978d51b4 (    0x18) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001978d51cc (    0x18) GCC_except_table198 [NameNList, MangledNameNList, NList] 
                0x00000001978d51e4 (    0x24) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001978d5208 (    0x1c) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x00000001978d5224 (    0x24) GCC_except_table205 [NameNList, MangledNameNList, NList] 
                0x00000001978d5248 (    0x14) GCC_except_table209 [NameNList, MangledNameNList, NList] 
            0x00000001978d5260 (  0x178a) __TEXT __const
                0x00000001978d5268 (    0x58) typeinfo name for CUDIFFileAccess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d52c0 (    0x20) typeinfo name for CBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d52e0 (    0x20) typeinfo name for CBSDBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5300 (    0x14) typeinfo name for CCURLBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5314 (    0x13) typeinfo name for CDevBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5327 (    0x13) typeinfo name for CRAMBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d533a (    0x13) typeinfo name for CDiskImageObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d534d (     0xb) typeinfo name for CChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5358 (    0x11) typeinfo name for CCRC32Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5369 (     0xf) typeinfo name for CMD5Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5378 (    0x10) typeinfo name for CNoneChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5388 (    0x10) typeinfo name for CSHA1Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5398 (     0xe) typeinfo name for CCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53a6 (    0x10) typeinfo name for CDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53b6 (     0xb) typeinfo name for CADCCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53c1 (    0x11) typeinfo name for CADCCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53d2 (    0x13) typeinfo name for CADCDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53e5 (    0x10) typeinfo name for CKenCodeCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d53f5 (    0x15) typeinfo name for CKenCodeCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d540a (   0x217) typeinfo name for CKenCodeDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5621 (    0x17) typeinfo name for CDARTRLEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5638 (    0x38) typeinfo name for CDARTLZHDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5670 (    0x12) typeinfo name for CZlibCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5682 (    0x14) typeinfo name for CZlibDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5696 (     0xd) typeinfo name for CDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d56a3 (    0x3d) typeinfo name for ChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d56e0 (    0x38) typeinfo name for CLibCompressionBaseDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5718 (    0x18) typeinfo name for DITimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5730 (    0x10) typeinfo name for CRawDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5740 (    0x20) typeinfo name for CShadowedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5760 (    0x30) typeinfo name for CSparseDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5790 (     0xe) typeinfo name for CSparseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d579e (    0x1a) typeinfo name for CSubDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d57b8 (    0x11) typeinfo name for CUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d57c9 (    0x1b) typeinfo name for BLKXChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d57e4 (    0x1b) typeinfo name for CRestrictedUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d57ff (    0x15) typeinfo name for CLZFSEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5814 (    0x14) typeinfo name for CLZMADecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5828 (    0x10) typeinfo name for CFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5838 (    0xa8) typeinfo name for CFlatFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d58e0 (     0x9) typeinfo name for DIError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d58e9 (    0x15) typeinfo name for CEncryptedEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d58fe (    0x22) typeinfo name for Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5920 (    0x22) typeinfo name for Security::CssmClient::RccBearer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5942 (    0x10) typeinfo name for CUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5952 (    0x19) typeinfo name for CSegmentedUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d596b (    0x1c) typeinfo name for CSegmentedUDIFRawEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5987 (    0x12) typeinfo name for CResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5999 (    0x1f) typeinfo name for CXMLResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d59b8 (    0x28) typeinfo name for CLibCompressionBaseCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d59e0 (    0x13) typeinfo name for CUDIFCacheObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d59f3 (    0x15) typeinfo name for CUDIFCacheBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5a08 (   0x280) errtable [NameNList, MangledNameNList, NList] 
                0x00000001978d5c88 (   0x150) errmsgs [NameNList, MangledNameNList, NList] 
                0x00000001978d5dd8 (    0x1a) typeinfo name for CDIApplePartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5df2 (    0x1a) typeinfo name for CDIFDiskPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5e0c (    0x17) typeinfo name for CDINoPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5e23 (    0x4d) typeinfo name for CDIPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5e70 (    0x18) typeinfo name for CVectoredBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5e88 (    0x12) typeinfo name for CSHA256Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5e9a (    0x12) typeinfo name for CSHA384Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5eac (    0x4c) typeinfo name for CSHA512Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5ef8 (    0x16) typeinfo name for CWOUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f0e (    0x1e) typeinfo name for CLZMACompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f2c (     0xf) typeinfo name for CSHAChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f3b (    0x16) typeinfo name for CCachedBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f51 (    0x15) typeinfo name for CBackingStoreCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f66 (    0x1a) typeinfo name for CBackingStoreCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f80 (     0xa) typeinfo name for TAOQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5f8a (    0x1e) typeinfo name for TAOQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5fa8 (    0x19) typeinfo name for BLKXConvertDataElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5fc1 (    0x19) typeinfo name for BLKXConvertWorkElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5fda (    0x16) typeinfo name for CLZFSECompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d5ff0 (    0xa4) _skipTypeTable [NameNList, MangledNameNList, NList] 
                0x00000001978d6094 (    0x90) _skipTypeAndIDTable [NameNList, MangledNameNList, NList] 
                0x00000001978d6124 (    0x1c) typeinfo name for CWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6140 (    0x13) typeinfo name for CBZip2Compressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6153 (    0x15) typeinfo name for CBZip2Decompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6168 (    0x18) typeinfo name for CDIISOPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6180 (    0x19) typeinfo name for CAppleWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6199 (    0x1b) typeinfo name for CFDiskWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d61b4 (   0x12c) transtab [NameNList, MangledNameNList, NList] 
                0x00000001978d62e0 (    0x30) typeinfo name for CDIGUIDPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6310 (     0x8) typeinfo name for Bitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6318 (     0xf) typeinfo name for MemoryBitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6327 (    0x13) typeinfo name for BandMappedBlocks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d633a (    0x16) typeinfo name for CBundleBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6350 (    0x19) typeinfo name for CSparseBundleDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6369 (    0x16) typeinfo name for CDiskImageCompactor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d637f (    0xd1) typeinfo name for CCommonDigestChecksumSuperclass [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d6450 (    0x16) typeinfo name for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x00000001978d6466 (    0x19) typeinfo name for Security::CommonError [NameNList, MangledNameNList, NList] 
                0x00000001978d647f (    0x1e) typeinfo name for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x00000001978d649d (    0x16) typeinfo name for Security::Allocator [NameNList, MangledNameNList, NList] 
                0x00000001978d64b3 (    0x13) typeinfo name for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x00000001978d64c6 (    0x1a) typeinfo name for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x00000001978d64e0 (    0xa0) Security::AccessCredentials::null_credential()::null_credentials [NameNList, MangledNameNList, NList] 
                0x00000001978d6580 (    0x2a) typeinfo name for Security::CssmMemoryFunctionsAllocator [NameNList, MangledNameNList, NList] 
                0x00000001978d65aa (    0x16) typeinfo name for Security::CssmError [NameNList, MangledNameNList, NList] 
                0x00000001978d65c0 (    0x1d) typeinfo name for Security::CssmManagedData [NameNList, MangledNameNList, NList] 
                0x00000001978d65dd (    0x1b) typeinfo name for Security::CssmOwnedData [NameNList, MangledNameNList, NList] 
                0x00000001978d65f8 (    0x1a) typeinfo name for Security::CssmAutoData [NameNList, MangledNameNList, NList] 
                0x00000001978d6612 (    0x1b) typeinfo name for Security::CssmClient::Db [NameNList, MangledNameNList, NList] 
                0x00000001978d662d (    0x1f) typeinfo name for Security::CssmClient::Object [NameNList, MangledNameNList, NList] 
                0x00000001978d664c (    0x27) typeinfo name for Security::CssmClient::DbCursorMaker [NameNList, MangledNameNList, NList] 
                0x00000001978d6673 (    0x2d) typeinfo name for Security::CssmClient::DbUniqueRecordMaker [NameNList, MangledNameNList, NList] 
                0x00000001978d66a0 (    0x1f) typeinfo name for Security::CssmClient::DbImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d66bf (    0x24) typeinfo name for Security::CssmClient::ObjectImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d66e3 (    0x21) typeinfo name for Security::CssmClient::CssmImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d6704 (    0x24) typeinfo name for Security::CssmClient::ModuleImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d6728 (    0x20) typeinfo name for Security::CssmClient::HasGuid [NameNList, MangledNameNList, NList] 
                0x00000001978d6748 (    0x28) typeinfo name for Security::CssmClient::AttachmentImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d6770 (    0x1e) typeinfo name for Security::CssmClient::Crypt [NameNList, MangledNameNList, NList] 
                0x00000001978d678e (    0x20) typeinfo name for Security::CssmClient::Encrypt [NameNList, MangledNameNList, NList] 
                0x00000001978d67ae (    0x22) typeinfo name for Security::CssmClient::AclBearer [NameNList, MangledNameNList, NList] 
                0x00000001978d67d0 (    0x1f) typeinfo name for Security::CssmClient::CLImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d67ef (    0x25) typeinfo name for Security::CssmClient::GenerateKey [NameNList, MangledNameNList, NList] 
                0x00000001978d6814 (    0x24) typeinfo name for Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001978d6838 (    0x25) typeinfo name for Security::CssmClient::GenerateMac [NameNList, MangledNameNList, NList] 
                0x00000001978d685d (    0x22) typeinfo name for Security::CssmClient::VerifyMac [NameNList, MangledNameNList, NList] 
                0x00000001978d687f (    0x20) typeinfo name for Security::CssmClient::WrapKey [NameNList, MangledNameNList, NList] 
                0x00000001978d689f (    0x24) typeinfo name for Security::CssmClient::DeriveKey [NameNList, MangledNameNList, NList] 
                0x00000001978d68c3 (    0x15) typeinfo name for Security::RefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978d68d8 (    0x21) typeinfo name for Security::CssmClient::DLAccess [NameNList, MangledNameNList, NList] 
                0x00000001978d68f9 (    0x20) typeinfo name for Security::CssmClient::KeyImpl [NameNList, MangledNameNList, NList] 
                0x00000001978d6919 (    0x14) typeinfo name for Security::CssmKey [NameNList, MangledNameNList, NList] 
                0x00000001978d692d (    0x2f) typeinfo name for Security::PodWrapper<Security::CssmKey, cssm_key> [NameNList, MangledNameNList, NList] 
                0x00000001978d695c (     0xa) typeinfo name for cssm_key [NameNList, MangledNameNList, NList] 
                0x00000001978d6966 (    0x20) typeinfo name for Security::CssmClient::Context [NameNList, MangledNameNList, NList] 
                0x00000001978d6986 (    0x25) typeinfo name for Security::CssmClient::PassThrough [NameNList, MangledNameNList, NList] 
                0x00000001978d69ab (    0x1f) typeinfo name for Security::CssmClient::Random [NameNList, MangledNameNList, NList] 
                0x00000001978d69ca (    0x20) typeinfo name for Security::CssmClient::CSPImpl [NameNList, MangledNameNList, NList] 
            0x00000001978d69ea (   0x72f) __TEXT __oslogstring
            0x00000001978d7119 (   0x2a0) __TEXT __dof_security_
            0x00000001978d73bc (  0x23f4) __TEXT __unwind_info
            0x00000001978d97b0 (    0x38) __TEXT __eh_frame
            0x00000001978d97e8 (   0x10b) __TEXT __objc_classname
            0x00000001978d98f4 (   0xa30) __TEXT __objc_methname
            0x00000001978da324 (   0x2f3) __TEXT __objc_methtype
            0x00000001978da620 (   0x9e0) __TEXT __objc_stubs
                0x00000001978da620 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da640 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da660 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da680 (    0x20) objc_msgSend$anonymousListener [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da6a0 (    0x20) objc_msgSend$askForPassword [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da6c0 (    0x20) objc_msgSend$authWithFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da6e0 (    0x20) objc_msgSend$authenticate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da700 (    0x20) objc_msgSend$boolForKey:defaultValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da720 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da740 (    0x20) objc_msgSend$bundlePath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da760 (    0x20) objc_msgSend$bundleWithIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da780 (    0x20) objc_msgSend$caseInsensitiveCompare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da7a0 (    0x20) objc_msgSend$checkHelperStatusWaitingForExit: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da7c0 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da7e0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da800 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da820 (    0x20) objc_msgSend$dataWithPropertyList:format:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da840 (    0x20) objc_msgSend$dateWithTimeIntervalSinceNow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da860 (    0x20) objc_msgSend$detachNewThreadSelector:toTarget:withObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da880 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da8a0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da8c0 (    0x20) objc_msgSend$disconnectFromHelper: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da8e0 (    0x20) objc_msgSend$endpoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da900 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da920 (    0x20) objc_msgSend$helperDied [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da940 (    0x20) objc_msgSend$helperFailedToRegister [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da960 (    0x20) objc_msgSend$helperToolPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da980 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da9a0 (    0x20) objc_msgSend$initWithCondition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da9c0 (    0x20) objc_msgSend$initWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978da9e0 (    0x20) objc_msgSend$initWithDictionary:andStatusProc:andContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daa00 (    0x20) objc_msgSend$initWithDictionary:andStatusProc:andContext:withAuthentication: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daa20 (    0x20) objc_msgSend$initWithMachServiceName:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daa40 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daa60 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daa80 (    0x20) objc_msgSend$isAuthenticated [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daaa0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daac0 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daae0 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dab00 (    0x20) objc_msgSend$lockWhenCondition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dab20 (    0x20) objc_msgSend$lockWhenCondition:beforeDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dab40 (    0x20) objc_msgSend$longValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dab60 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dab80 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daba0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dabc0 (    0x20) objc_msgSend$pathForResource:ofType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dabe0 (    0x20) objc_msgSend$performOperationReturning: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dac00 (    0x20) objc_msgSend$reason [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dac20 (    0x20) objc_msgSend$receiveEndpoint:uuid:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dac40 (    0x20) objc_msgSend$remoteObjectProxy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dac60 (    0x20) objc_msgSend$remoteObjectProxyWithErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dac80 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daca0 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dacc0 (    0x20) objc_msgSend$retainCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dace0 (    0x20) objc_msgSend$sendOperationToHelper: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dad00 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dad20 (    0x20) objc_msgSend$setExportedInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dad40 (    0x20) objc_msgSend$setExportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dad60 (    0x20) objc_msgSend$setHelperDoneWithResult: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dad80 (    0x20) objc_msgSend$setInterruptionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dada0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dadc0 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dade0 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dae00 (    0x20) objc_msgSend$start_operation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dae20 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dae40 (    0x20) objc_msgSend$stringByDeletingLastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dae60 (    0x20) objc_msgSend$stringForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dae80 (    0x20) objc_msgSend$stringWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daea0 (    0x20) objc_msgSend$taoDeepMutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daec0 (    0x20) objc_msgSend$taoDeepMutableRelease [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daee0 (    0x20) objc_msgSend$terminateHelper [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daf00 (    0x20) objc_msgSend$threadLaunchToolAuthenticated: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daf20 (    0x20) objc_msgSend$threadSetupServer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daf40 (    0x20) objc_msgSend$tryLock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daf60 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978daf80 (    0x20) objc_msgSend$unlockWithCondition: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dafa0 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dafc0 (    0x20) objc_msgSend$waitForHelperDone [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001978dafe0 (    0x20) objc_msgSend$watchForHelperDeath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001dc8a5c00 (   0xee0) __DATA_CONST SEGMENT
            0x00000001dc8a5c00 (   0x340) __DATA_CONST __got
            0x00000001dc8a5f40 (   0x140) __DATA_CONST __const
                0x00000001dc8a5fa0 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a5fc0 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dc8a5fe0 (    0x20) __block_descriptor_tmp.349 [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6000 (    0x20) __block_descriptor_tmp.358 [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6020 (    0x20) __block_descriptor_tmp.369 [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6040 (    0x20) __block_descriptor_tmp.371 [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6060 (    0x20) __block_descriptor_tmp.30 [NameNList, MangledNameNList, NList] 
            0x00000001dc8a6080 (     0x8) __DATA_CONST __objc_classlist
            0x00000001dc8a6088 (    0x10) __DATA_CONST __objc_catlist
            0x00000001dc8a6098 (    0x28) __DATA_CONST __objc_protolist
                0x00000001dc8a6098 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a60a0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a60a8 (     0x8) _OBJC_LABEL_PROTOCOL_$_DIHLHelperMasterProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a60b0 (     0x8) _OBJC_LABEL_PROTOCOL_$_DIHLHelperSlaveProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a60b8 (     0x8) _OBJC_LABEL_PROTOCOL_$_DIConnectionHelperService [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001dc8a60c0 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001dc8a60c8 (   0x720) __DATA_CONST __objc_const
                0x00000001dc8a60c8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_DIHelperProxy(DIHLHelperMasterProtocol) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8a60e0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dc8a62b0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dc8a62d0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6318 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dc8a63b8 (    0x18) _OBJC_$_PROTOCOL_REFS_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dc8a63d0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dc8a63f0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dc8a63f8 (    0x48) _OBJC_METACLASS_RO_$_DIHelperProxy [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6440 (   0x248) _OBJC_$_INSTANCE_VARIABLES_DIHelperProxy [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6688 (    0x48) _OBJC_$_PROP_LIST_DIHelperProxy [NameNList, MangledNameNList, NList] 
                0x00000001dc8a66d0 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_DIHLHelperMasterProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6738 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_DIHLHelperMasterProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6758 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_DIHLHelperSlaveProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dc8a6790 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_DIHLHelperSlaveProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dc8a67a0 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_DIConnectionHelperService [NameNList, MangledNameNList, NList] 
                0x00000001dc8a67d8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_DIConnectionHelperService [NameNList, MangledNameNList, NList] 
            0x00000001dc8a67e8 (   0x2f8) __DATA_CONST __objc_selrefs
        0x00000001dc8a6ae0 ( 0x10e10) __AUTH_CONST SEGMENT
            0x00000001dc8a6ae0 (  0x7640) __AUTH_CONST __cfstring
            0x00000001dc8ae120 (  0x8498) __AUTH_CONST __const
                0x00000001dc8ae120 (    0x40) vtable for CUDIFFileAccess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae160 (    0x18) typeinfo for CUDIFFileAccess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae178 (    0x48) _DIMediaKitCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001dc8ae1c0 (   0x2c0) vtable for CBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae480 (    0x18) typeinfo for CBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae498 (   0x318) vtable for CBSDBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae7b0 (    0x18) typeinfo for CBSDBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8ae7c8 (   0x2f8) vtable for CCURLBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8aeac0 (    0x18) typeinfo for CCURLBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8aead8 (   0x318) vtable for CDevBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8aedf0 (    0x18) typeinfo for CDevBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8aee08 (   0x2d8) vtable for CRAMBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af0e0 (    0x18) typeinfo for CRAMBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af0f8 (    0x40) vtable for CDiskImageObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af138 (    0x10) typeinfo for CDiskImageObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af148 (    0xb0) vtable for CChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af1f8 (    0x18) typeinfo for CChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af210 (    0xb0) vtable for CCRC32Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af2c0 (    0x18) typeinfo for CCRC32Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af2d8 (    0xb8) vtable for CMD5Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af390 (    0x18) typeinfo for CMD5Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af3a8 (    0xb0) vtable for CNoneChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af458 (    0x18) typeinfo for CNoneChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af470 (    0xb8) vtable for CSHA1Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af528 (    0x18) typeinfo for CSHA1Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af540 (    0x50) vtable for CCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af590 (    0x48) vtable for CDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af5d8 (    0x18) typeinfo for CCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af5f0 (    0x18) typeinfo for CDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af608 (    0x20) vtable for CADCCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af628 (    0x10) typeinfo for CADCCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af638 (    0x90) vtable for CADCCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af6c8 (    0x48) typeinfo for CADCCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af710 (    0x88) vtable for CADCDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af798 (    0x48) typeinfo for CADCDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af7e0 (    0x20) vtable for CKenCodeCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af800 (    0x10) typeinfo for CKenCodeCodec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af810 (    0x70) vtable for CKenCodeCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af880 (    0x38) typeinfo for CKenCodeCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af8b8 (    0x68) vtable for CKenCodeDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af920 (    0x38) typeinfo for CKenCodeDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af958 (    0x48) vtable for CDARTRLEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af9a0 (    0x48) vtable for CDARTLZHDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8af9e8 (    0x18) typeinfo for CDARTRLEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afa00 (    0x18) typeinfo for CDARTLZHDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afa18 (    0x50) vtable for CZlibCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afa68 (    0x18) typeinfo for CZlibCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afa80 (    0x48) vtable for CZlibDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afac8 (    0x18) typeinfo for CZlibDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afae0 (   0x270) vtable for CDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afd50 (    0x18) typeinfo for CDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afd68 (    0x28) vtable for ChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afd90 (    0x18) typeinfo for ChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afda8 (    0x18) typeinfo for CLibCompressionBaseDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afdc0 (    0x20) vtable for DITimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afde0 (    0x10) typeinfo for DITimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8afdf0 (   0x278) vtable for CRawDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0068 (    0x18) typeinfo for CRawDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0080 (   0x2b0) vtable for CShadowedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0330 (    0x18) typeinfo for CShadowedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0348 (   0x280) vtable for CSparseDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b05c8 (    0x18) typeinfo for CSparseDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b05e0 (    0xe0) vtable for CSparseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b06c0 (    0x10) typeinfo for CSparseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b06d0 (   0x278) vtable for CSubDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0948 (    0x18) typeinfo for CSubDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0960 (   0x2a8) vtable for CUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0c08 (    0x18) typeinfo for CUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0c20 (   0x2a8) vtable for CRestrictedUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0ec8 (    0x28) vtable for BLKXChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0ef0 (    0x18) typeinfo for BLKXChecksumQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0f08 (    0x18) typeinfo for CRestrictedUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0f20 (    0x50) vtable for CLZFSEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0f70 (    0x18) typeinfo for CLZFSEDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0f88 (    0x50) vtable for CLZMADecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0fd8 (    0x18) typeinfo for CLZMADecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b0ff0 (   0x2d0) vtable for CFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b12c0 (    0x18) typeinfo for CFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b12d8 (   0x2d0) vtable for CFlatFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b15a8 (    0x18) typeinfo for CFlatFileEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b15c0 (    0x38) vtable for DIError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b15f8 (    0x18) typeinfo for DIError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1610 (   0x2e8) vtable for CEncryptedEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b18f8 (    0x18) typeinfo for CEncryptedEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1910 (    0x60) vtable for Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1970 (    0x20) VTT for Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1990 (    0x60) construction vtable for Security::CssmClient::Crypt-in-Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b19f0 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1a50 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1aa8 (    0x10) typeinfo for Security::CssmClient::RccBearer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1ab8 (    0x38) typeinfo for Security::CssmClient::UnwrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1af0 (   0x330) vtable for CUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1e20 (    0x18) typeinfo for CUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b1e38 (   0x340) vtable for CSegmentedUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2178 (    0x18) typeinfo for CSegmentedUDIFEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2190 (   0x2e8) vtable for CSegmentedUDIFRawEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2478 (    0x18) typeinfo for CSegmentedUDIFRawEncoding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2490 (   0x160) vtable for CResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b25f0 (    0x18) typeinfo for CResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2608 (   0x160) vtable for CXMLResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2768 (    0x18) typeinfo for CXMLResourceFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2780 (    0x30) typeinfo for CLibCompressionBaseCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b27b0 (    0x20) vtable for CUDIFCacheObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b27d0 (    0x20) vtable for CUDIFCacheBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b27f0 (    0x10) typeinfo for CUDIFCacheObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2800 (    0x10) typeinfo for CUDIFCacheBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2810 (    0x70) vtable for CDIApplePartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2880 (    0x18) typeinfo for CDIApplePartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2898 (    0x78) vtable for CDIFDiskPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2910 (    0x18) typeinfo for CDIFDiskPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2928 (    0x58) vtable for CDINoPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2980 (    0x18) typeinfo for CDINoPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2998 (    0x58) vtable for CDIPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b29f0 (    0x18) typeinfo for CDIPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2a08 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dc8b2a28 (    0x30) __block_descriptor_40_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2a58 (    0x30) __block_descriptor_48_e8_32o40o_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2a88 (    0x30) __block_descriptor_48_e8_32o40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2ab8 (    0x30) __block_descriptor_48_e8_32o40o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2ae8 (   0x2d0) vtable for CVectoredBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2db8 (    0x18) typeinfo for CVectoredBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2dd0 (    0xb8) vtable for CSHA256Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2e88 (    0x18) typeinfo for CSHA256Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2ea0 (    0xb8) vtable for CSHA384Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2f58 (    0x18) typeinfo for CSHA384Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b2f70 (    0xb8) vtable for CSHA512Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3028 (    0x18) typeinfo for CSHA512Checksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3040 (   0x2a8) vtable for CWOUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b32e8 (    0x18) typeinfo for CWOUDIFDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3300 (    0x58) vtable for CLZFSECompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3358 (    0x18) typeinfo for CLZFSECompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3370 (    0x58) vtable for CLZMACompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b33c8 (    0x18) typeinfo for CLZMACompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b33e0 (    0xb0) vtable for CSHAChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3490 (    0x18) typeinfo for CSHAChecksum [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b34a8 (   0x2e8) vtable for CCachedBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3790 (    0x20) vtable for CBackingStoreCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b37b0 (    0x20) vtable for CBackingStoreCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b37d0 (    0x18) typeinfo for CCachedBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b37e8 (    0x10) typeinfo for CBackingStoreCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b37f8 (    0x10) typeinfo for CBackingStoreCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3808 (    0x50) vtable for TAOQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3858 (    0x28) vtable for TAOQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3880 (    0x10) typeinfo for TAOQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3890 (    0x10) typeinfo for TAOQueueElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b38a0 (    0x28) vtable for BLKXConvertDataElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b38c8 (    0x18) typeinfo for BLKXConvertDataElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b38e0 (    0x28) vtable for BLKXConvertWorkElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3908 (    0x18) typeinfo for BLKXConvertWorkElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3920 (   0x290) vtable for CWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3bb0 (    0x18) gWrappingProbes [NameNList, MangledNameNList, NList] 
                0x00000001dc8b3bc8 (    0x18) typeinfo for CWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3be0 (    0x50) vtable for CBZip2Compressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3c30 (    0x18) typeinfo for CBZip2Compressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3c48 (    0x48) vtable for CBZip2Decompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3c90 (    0x18) typeinfo for CBZip2Decompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3ca8 (    0x58) vtable for CDIISOPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3d00 (    0x18) typeinfo for CDIISOPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3d18 (   0x290) vtable for CAppleWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3fa8 (    0x18) typeinfo for CAppleWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b3fc0 (   0x290) vtable for CFDiskWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4250 (    0x18) typeinfo for CFDiskWrappedDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4268 (    0x70) vtable for CDIGUIDPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b42d8 (    0x18) typeinfo for CDIGUIDPartitionScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b42f0 (    0x38) vtable for Bitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4328 (    0x38) vtable for MemoryBitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4360 (    0x38) vtable for BandMappedBlocks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4398 (   0x2f8) vtable for CBundleBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4690 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dc8b46b0 (    0x20) __block_literal_global.351 [NameNList, MangledNameNList, NList] 
                0x00000001dc8b46d0 (    0x20) __block_literal_global.360 [NameNList, MangledNameNList, NList] 
                0x00000001dc8b46f0 (    0x20) __block_literal_global.373 [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4710 (    0x10) typeinfo for Bitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4720 (    0x18) typeinfo for MemoryBitmap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4738 (    0x18) typeinfo for BandMappedBlocks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4750 (    0x18) typeinfo for CBundleBackingStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4768 (   0x280) vtable for CSparseBundleDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b49e8 (    0x18) typeinfo for CSparseBundleDiskImage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4a00 (    0x20) vtable for CDiskImageCompactor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4a20 (    0x10) typeinfo for CDiskImageCompactor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4a30 (    0xb8) vtable for CCommonDigestChecksumSuperclass [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4ae8 (    0x18) typeinfo for CCommonDigestChecksumSuperclass [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4b00 (    0x38) vtable for Security::CommonError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4b38 (    0x38) vtable for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4b70 (    0x18) typeinfo for Security::UnixError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4b88 (    0x38) vtable for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4bc0 (    0x18) typeinfo for Security::ModuleNexusError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4bd8 (    0x40) vtable for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4c18 (    0x18) typeinfo for DefaultAllocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4c30 (    0x40) vtable for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4c70 (    0x18) typeinfo for SensitiveAllocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4c88 (    0x40) vtable for Security::CssmMemoryFunctionsAllocator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4cc8 (    0x10) typeinfo for Security::Allocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4cd8 (    0x18) typeinfo for Security::CssmMemoryFunctionsAllocator [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4cf0 (    0x38) vtable for Security::CssmError [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4d28 (    0x10) typeinfo for Security::CssmManagedData [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4d38 (    0x18) typeinfo for Security::CssmOwnedData [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4d50 (    0x10) typeinfo for Security::CssmClient::Object [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4d60 (    0x38) typeinfo for Security::CssmClient::Db [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4d98 (    0x10) typeinfo for Security::CssmClient::DbCursorMaker [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4da8 (    0x10) typeinfo for Security::CssmClient::DbUniqueRecordMaker [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4db8 (    0x58) vtable for Security::CssmClient::CssmImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4e10 (    0x58) vtable for Security::CssmClient::ModuleImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4e68 (    0x18) typeinfo for Security::CommonError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4e80 (    0x68) vtable for Security::CssmClient::AttachmentImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4ee8 (    0x18) typeinfo for Security::CssmError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b4f00 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::CssmImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4f58 (    0x18) typeinfo for Security::CssmClient::CssmImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4f70 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::ModuleImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4fc8 (    0x10) typeinfo for Security::CssmClient::HasGuid [NameNList, MangledNameNList, NList] 
                0x00000001dc8b4fd8 (    0x38) typeinfo for Security::CssmClient::ModuleImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5010 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::AttachmentImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5068 (    0x60) vtable for Security::CssmClient::Crypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b50c8 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::Crypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5128 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::Crypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5180 (    0x60) vtable for Security::CssmClient::Encrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b51e0 (    0x20) VTT for Security::CssmClient::Encrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5200 (    0x60) construction vtable for Security::CssmClient::Crypt-in-Security::CssmClient::Encrypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5260 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::Encrypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b52c0 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::Encrypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5318 (    0x18) typeinfo for Security::CssmClient::Encrypt [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5330 (    0x68) vtable for Security::CssmClient::CLImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5398 (    0x18) VTT for Security::CssmClient::CLImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b53b0 (    0x68) construction vtable for Security::CssmClient::AttachmentImpl-in-Security::CssmClient::CLImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5418 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::CLImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5470 (    0x18) typeinfo for Security::CssmClient::CLImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5488 (    0x60) vtable for Security::CssmClient::GenerateKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b54e8 (    0x18) VTT for Security::CssmClient::GenerateKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5500 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::GenerateKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5560 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::GenerateKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b55b8 (    0x38) typeinfo for Security::CssmClient::GenerateKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b55f0 (    0x50) vtable for Security::CssmClient::Db [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5640 (    0x58) typeinfo for Security::CssmClient::DbImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5698 (    0x60) vtable for Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001dc8b56f8 (    0x18) VTT for Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5710 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5770 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001dc8b57c8 (    0x18) typeinfo for Security::CssmClient::MacContext [NameNList, MangledNameNList, NList] 
                0x00000001dc8b57e0 (    0x60) vtable for Security::CssmClient::GenerateMac [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5840 (    0x20) VTT for Security::CssmClient::GenerateMac [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5860 (    0x60) construction vtable for Security::CssmClient::MacContext-in-Security::CssmClient::GenerateMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b58c0 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::GenerateMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5920 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::GenerateMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5978 (    0x18) typeinfo for Security::CssmClient::GenerateMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5990 (    0x60) vtable for Security::CssmClient::VerifyMac [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b59f0 (    0x20) VTT for Security::CssmClient::VerifyMac [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5a10 (    0x60) construction vtable for Security::CssmClient::MacContext-in-Security::CssmClient::VerifyMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5a70 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::VerifyMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5ad0 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::VerifyMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5b28 (    0x18) typeinfo for Security::CssmClient::VerifyMac [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5b40 (    0x60) vtable for Security::CssmClient::WrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5ba0 (    0x20) VTT for Security::CssmClient::WrapKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5bc0 (    0x60) construction vtable for Security::CssmClient::Crypt-in-Security::CssmClient::WrapKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5c20 (    0x18) typeinfo for Security::CssmClient::Crypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5c38 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::WrapKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5c98 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::WrapKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5cf0 (    0x18) typeinfo for Security::CssmClient::WrapKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5d08 (    0x60) vtable for Security::CssmClient::DeriveKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5d68 (    0x20) VTT for Security::CssmClient::DeriveKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5d88 (    0x60) construction vtable for Security::CssmClient::Crypt-in-Security::CssmClient::DeriveKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5de8 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::DeriveKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5e48 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::DeriveKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5ea0 (    0x38) typeinfo for Security::CssmClient::DeriveKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5ed8 (    0x18) VTT for Security::CssmClient::Crypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5ef0 (    0x10) typeinfo for Security::RefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b5f00 (    0x18) typeinfo for Security::CssmAutoData [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5f18 (    0x10) typeinfo for Security::CssmClient::DLAccess [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5f28 (    0xc0) vtable for Security::CssmClient::KeyImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b5fe8 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::KeyImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6040 (    0x48) construction vtable for Security::CssmClient::AclBearer-in-Security::CssmClient::KeyImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6088 (    0x28) typeinfo for Security::CssmClient::AclBearer [NameNList, MangledNameNList, NList] 
                0x00000001dc8b60b0 (    0x10) typeinfo for cssm_key [NameNList, MangledNameNList, NList] 
                0x00000001dc8b60c0 (    0x18) typeinfo for Security::PodWrapper<Security::CssmKey, cssm_key> [NameNList, MangledNameNList, NList] 
                0x00000001dc8b60d8 (    0x18) typeinfo for Security::CssmKey [NameNList, MangledNameNList, NList] 
                0x00000001dc8b60f0 (    0x48) typeinfo for Security::CssmClient::KeyImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b6138 (    0x40) vtable for Security::CssmAutoData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b6178 (    0x68) vtable for Security::CssmClient::CSPImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b61e0 (    0x18) VTT for Security::CssmClient::CSPImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b61f8 (    0x60) vtable for Security::CssmClient::PassThrough [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b6258 (    0x18) VTT for Security::CssmClient::PassThrough [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b6270 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::PassThrough [NameNList, MangledNameNList, NList] 
                0x00000001dc8b62d0 (    0x28) typeinfo for Security::CssmClient::ObjectImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b62f8 (    0x18) typeinfo for Security::CssmClient::Context [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b6310 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::PassThrough [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6368 (    0x18) typeinfo for Security::CssmClient::PassThrough [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6380 (    0x60) vtable for Security::CssmClient::Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b63e0 (    0x18) VTT for Security::CssmClient::Random [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc8b63f8 (    0x60) construction vtable for Security::CssmClient::Context-in-Security::CssmClient::Random [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6458 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::Random [NameNList, MangledNameNList, NList] 
                0x00000001dc8b64b0 (    0x18) typeinfo for Security::CssmClient::Random [NameNList, MangledNameNList, NList] 
                0x00000001dc8b64c8 (    0x68) construction vtable for Security::CssmClient::AttachmentImpl-in-Security::CssmClient::CSPImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6530 (    0x18) typeinfo for Security::CssmClient::AttachmentImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6548 (    0x58) construction vtable for Security::CssmClient::ObjectImpl-in-Security::CssmClient::CSPImpl [NameNList, MangledNameNList, NList] 
                0x00000001dc8b65a0 (    0x18) typeinfo for Security::CssmClient::CSPImpl [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001dc8b65b8 (    0x28) __AUTH_CONST __auth_ptr
            0x00000001dc8b65e0 (    0xc8) __AUTH_CONST __objc_const
                0x00000001dc8b65e0 (    0x48) _OBJC_CLASS_RO_$_DIHelperProxy [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6628 (    0x40) _OBJC_$_CATEGORY_NSDictionary_$_DictionaryExtensions [NameNList, MangledNameNList, NList] 
                0x00000001dc8b6668 (    0x40) _OBJC_$_CATEGORY_NSMutableDictionary_$_MutableDictionaryExtensions [NameNList, MangledNameNList, NList] 
            0x00000001dc8b66a8 (  0x1248) __AUTH_CONST __auth_got
        0x00000001d743f490 (   0x620) __AUTH SEGMENT
            0x00000001d743f490 (   0x5d0) __AUTH __data
                0x00000001d743f490 (   0x188) gDIBackingStoreInterfaces [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d743f618 (    0x70) gDIPrimaryEncodingInterfaces [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d743f688 (    0x70) gDISecondaryEncodingInterfaces [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d743f6f8 (    0xa8) gDITertiaryEncodingInterfaces [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d743f7a0 (   0x2c0) gDIDiskImageInterfaces [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d743fa60 (    0x50) __AUTH __objc_data
                0x00000001d743fa60 (    0x28) OBJC_CLASS_$_DIHelperProxy [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d743fa88 (    0x28) OBJC_METACLASS_$_DIHelperProxy [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d5e978e8 (   0x448) __DATA SEGMENT
            0x00000001d5e978e8 (    0x18) __DATA __objc_protorefs
                0x00000001d5e978e8 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_DIHLHelperMasterProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e978f0 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_DIHLHelperSlaveProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e978f8 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_DIConnectionHelperService [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5e97900 (    0x60) __DATA __objc_classrefs
            0x00000001d5e97960 (     0x8) __DATA __objc_superrefs
            0x00000001d5e97968 (    0x48) __DATA __objc_ivar
                0x00000001d5e97968 (     0x4) OBJC_IVAR_$_DIHelperProxy._context [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e9796c (     0x4) OBJC_IVAR_$_DIHelperProxy._operation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97970 (     0x4) OBJC_IVAR_$_DIHelperProxy._statusProc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97974 (     0x4) OBJC_IVAR_$_DIHelperProxy._threadCondLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97978 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperDoneLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e9797c (     0x4) OBJC_IVAR_$_DIHelperProxy._workerRunLoop [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97980 (     0x4) OBJC_IVAR_$_DIHelperProxy._threadResultsError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97984 (     0x4) OBJC_IVAR_$_DIHelperProxy._threadResultsDictionary [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97988 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperPath [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e9798c (     0x4) OBJC_IVAR_$_DIHelperProxy._intermediaryConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97990 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperListener [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97994 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97998 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperRegistered [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e9799c (     0x4) OBJC_IVAR_$_DIHelperProxy._helperDone [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e979a0 (     0x4) OBJC_IVAR_$_DIHelperProxy._serverName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e979a4 (     0x4) OBJC_IVAR_$_DIHelperProxy._authorizationRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e979a8 (     0x4) OBJC_IVAR_$_DIHelperProxy._helperPid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e979ac (     0x4) OBJC_IVAR_$_DIHelperProxy._withAuthentication [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5e979b0 (   0x2a0) __DATA __data
                0x00000001d5e979b0 (    0x40) sDIIsInitializeLock [NameNList, MangledNameNList, NList] 
                0x00000001d5e979f0 (    0x40) sGetBundleLock [NameNList, MangledNameNList, NList] 
                0x00000001d5e97a30 (    0x40) DIAuthOpen.lock [NameNList, MangledNameNList, NList] 
                0x00000001d5e97a70 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97ad0 (    0x60) _OBJC_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97b30 (    0x60) _OBJC_PROTOCOL_$_DIHLHelperMasterProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97b90 (    0x60) _OBJC_PROTOCOL_$_DIHLHelperSlaveProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97bf0 (    0x60) _OBJC_PROTOCOL_$_DIConnectionHelperService [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5e97c50 (    0x18) __DATA __common
                0x00000001d5e97c50 (     0x8) gCDiskImageObjectTracking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97c58 (     0x8) gDIPluginPropertyList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e97c60 (     0x8) _localKey [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5e97c68 (    0xc8) __DATA __bss
                0x00000001d5e97c68 (     0x4) sDIIsInitialized [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c6c (     0x4) sDIInitializedPID [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c70 (     0x8) DIGetBundleRef::frameworkBundle [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c78 (     0x4) sDIVerboseLevel [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c7c (     0x4) sDIDebugLevel [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c80 (     0x8) sRetainedObjects [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c88 (     0x8) DIAuthOpen.cachedAuthorizationRef [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c90 (     0x8) cmptr [NameNList, MangledNameNList, NList] 
                0x00000001d5e97c98 (     0x8) _writeableFileSystemsCached [NameNList, MangledNameNList, NList] 
                0x00000001d5e97ca0 (     0x8) _allFileSystemsCached [NameNList, MangledNameNList, NList] 
                0x00000001d5e97ca8 (     0x8) _contentTable [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cb0 (     0x8) _contentTable [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cb8 (     0x8) _defaults [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cc0 (     0x8) DIHLInitialize.initializeOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cc8 (     0x8) _DIHLTypes [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cd0 (     0x8) _DIHLExtensions [NameNList, MangledNameNList, NList] 
                0x00000001d5e97cd8 (     0x8) TAOStrError.buf [NameNList, MangledNameNList, NList] 
                0x00000001d5e97ce0 (     0x8) _contentTable [NameNList, MangledNameNList, NList] 
                0x00000001d5e97ce8 (    0x18) mutexAttrs [NameNList, MangledNameNList, NList] 
                0x00000001d5e97d00 (    0x18) defaultAllocators [NameNList, MangledNameNList, NList] 
                0x00000001d5e97d18 (    0x18) Security::CssmClient::CssmImpl::mStandard [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
