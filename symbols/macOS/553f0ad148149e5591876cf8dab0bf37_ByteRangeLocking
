/System/Library/PrivateFrameworks/ByteRangeLocking.framework/Versions/A/ByteRangeLocking [arm64e, 0.027209 seconds]:
    5424BA86-3031-3801-A240-17B9C3984A33 /System/Library/PrivateFrameworks/ByteRangeLocking.framework/Versions/A/ByteRangeLocking [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001f5c82000 (  0x8000) __TEXT SEGMENT
            0x00000001f5c82000 (  0x27f0) MACH_HEADER
            0x00000001f5c847f0 (  0x4b80) __TEXT __text
                0x00000001f5c847f0 (     0x4) BRLMInit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c847f4 (    0xac) BRLMClose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c848a0 (    0x48) ThreadLockHolder::Lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c848e8 (   0x234) BRLMCloseRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c84b1c (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c84b28 (   0x3e8) BRLMCarbonOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c84f10 (   0x320) BRLMPosixOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85230 (   0x150) BRLMExchange [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85380 (   0x144) BRLMCanWrite [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c854c4 (    0xe4) RWConflict(NLMData*, BRLMLockType, unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c855a8 (   0x144) BRLMCanRead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c856ec (   0x128) BRLMEndorseAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85814 (   0x1ac) BRLMByteRangeLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c859c0 (   0x1ac) BRLMByteRangeUnlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85b6c (    0xcc) BRLMGetDescriptor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85c38 (    0xcc) BRLMGetForkRefNum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85d04 (    0x5c) NLMDebug [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85d60 (    0x48) ThreadLockHolder::Unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c85da8 (   0x2c4) NLMDB::NLMDBInit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8606c (    0x7c) NLMDB::NLMDBClose() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c860e8 (    0x90) NLMDB::~NLMDB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86178 (     0x4) NLMDB::~NLMDB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8617c (    0x4c) NLMDB::~NLMDB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c861c8 (    0x44) NLMDB::ValidRef(NLMData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8620c (    0xc0) NLMDB::InitializeCarbonNLMRef(NLMDBID&, int, BRLMForkType, int, unsigned long long, FSRef const*, NLMData**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c862cc (    0xb0) NLMDB::InitializePosixNLMRef(NLMDBID&, BRLMForkType, int, unsigned long long, int, NLMData**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8637c (    0x70) NLMDB::BRLMRefExchange(NLMData*, NLMData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c863ec (   0x12c) NLMDB::ExchangeFileRecs(NLMDBFileRec*, NLMDBFileRec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86518 (    0x2c) NLMDB::DeleteNLMRef(NLMData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86544 (    0xb0) NLMDB::AddFileRecToDB(NLMDBFileRec*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c865f4 (    0xd4) NLMDB::RemoveFileRecFromDB(NLMDBFileRec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c866c8 (   0x10c) NLMDB::FindFileRecord(NLMDBID const&, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c867d4 (     0xc) NLMDB::UnlockDB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c867e0 (   0x100) NLMDB::FindElseCreateFileRecord(NLMDBID const&, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c868e0 (     0x8) NLMDB::ReleaseFileRec(NLMDBFileRec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c868e8 (    0x94) NLMDB::TryClean(NLMDBFileRec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8697c (    0xd0) NLMDB::PrintAllFileRecs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86a4c (     0x8) NLMDB::PrintDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86a54 (    0x54) GetElapsedMilliSeconds [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86aa8 (     0x4) nlm_yield [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86aac (    0x90) MapErrnoToBRLMErr [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86b3c (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001f5c86b98 (    0x94) DBPIDTable::AddPID(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86c2c (    0x94) DBPIDTable::PrintDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86cc0 (    0x7c) DB::DB(unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86d3c (     0x4) DB::~DB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86d40 (     0x4) DB::~DB() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86d44 (    0xcc) DB::TryGrabInitLock(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86e10 (    0x9c) DB::ReleaseInitLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86eac (    0xf0) DB::MapAndInit(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c86f9c (    0xb8) DB::GetFreeList(RecordType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87054 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001f5c87064 (   0x174) DB::Open(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c871d8 (    0x2c) DB::GetDataAtIndex(unsigned long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87204 (   0x120) DB::Allocate(RecordType, unsigned int, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87324 (    0x6c) DB::ValidBoundary(RecordType, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87390 (   0x1c8) DB::Deallocate(RecordType, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87558 (    0x2c) DB::GetOffsetFromTable(unsigned long, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87584 (    0x9c) DB::Close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87620 (    0xbc) DB::LockPIDBytes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c876dc (    0xbc) DB::UnlockPIDBytes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87798 (    0x34) DB::PrintDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c877cc (   0x280) DB::PrintFreeList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87a4c (    0x58) FileRefMatch(NLMFileRef const&, NLMFileRef const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87aa4 (    0x2c) NLMDBBRLRec::NLMDBBRLRec(NLMSessionKey const&, NLMBRL const&, NLMFileRef const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87ad0 (    0x8c) NLMDBBRLRec::operator==(NLMDBBRLRec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87b5c (    0x70) NLMDBBRLRec::HasRWConflict(NLMDBBRLRec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87bcc (    0x44) NLMDBBRLRec::IsValid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87c10 (    0x44) NLMDBProcRec::IsValid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87c54 (    0x50) NLMDBFileRec::GetNextRecord(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87ca4 (    0x4c) NLMDBFileRec::GetSessionListHead(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87cf0 (    0xa8) NLMDBFileRec::AddSessionReference(NLMSessionKey const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87d98 (   0x178) NLMDBFileRec::RemoveSessionReference(NLMSessionKey const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c87f10 (   0x11c) NLMDBFileRec::RemoveAllBRLsForSession(NLMSessionKey const&, NLMFileRef const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8802c (   0x154) NLMDBFileRec::CheckPermissions(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88180 (   0x430) NLMDBFileRec::AddBRL(NLMSessionKey const&, NLMBRL const&, NLMFileRef const&, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c885b0 (   0x1bc) NLMDBFileRec::RemoveBRL(NLMSessionKey const&, NLMBRL const&, NLMFileRef const&, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8876c (   0x22c) NLMDBFileRec::HasBRLConflict(NLMDBBRLRec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88998 (   0x150) NLMDBFileRec::CopyAndDeleteBRLList(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88ae8 (   0x154) NLMDBFileRec::CopyAndDeleteSessionList(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88c3c (    0x3c) NLMDBFileRec::operator==(NLMDBFileRec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88c78 (    0x84) NLMDBFileRec::EnforceDeleteOnClose(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88cfc (    0x84) NLMDBFileRec::PrintAllDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88d80 (    0xe0) DBMutex::Grab() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88e60 (    0x6c) DBMutex::ForceRelease() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88ecc (    0xc4) DBMutex::TryGrab() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88f90 (    0x50) DBMutex::Release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88fe0 (     0x4) DBMutex::PrintDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c88fe4 (    0x5c) ThreadLock::ThreadLock(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c89040 (    0x44) ThreadLock::~ThreadLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c89084 (    0x68) ThreadLock::~ThreadLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c890ec (    0xb8) ThreadLock::ReadLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c891a4 (    0x80) ThreadLock::WriteLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c89224 (    0x44) ThreadLock::ReadUnlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c89268 (    0xa0) ThreadLock::WriteUnlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c89308 (    0x34) ThreadLock::ReadUnlock() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f5c8933c (    0x34) ThreadLock::WriteUnlock() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001f5c89370 (   0x320) __TEXT __auth_stubs
                0x00000001f5c89370 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89380 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89390 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893a0 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893b0 (    0x10) DYLD-STUB$$FSCloseFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893c0 (    0x10) DYLD-STUB$$FSGetDataForkName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893d0 (    0x10) DYLD-STUB$$FSGetResourceForkName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893e0 (    0x10) DYLD-STUB$$FSOpenFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c893f0 (    0x10) DYLD-STUB$$FSRefMakePath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89400 (    0x10) DYLD-STUB$$GetForkPhysicalInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89410 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89420 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89430 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89440 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89450 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89460 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89470 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89480 (    0x10) DYLD-STUB$$_spin_lock_try [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89490 (    0x10) DYLD-STUB$$_spin_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894a0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894b0 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894c0 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894d0 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894e0 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c894f0 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89500 (    0x10) DYLD-STUB$$flock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89510 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89520 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89530 (    0x10) DYLD-STUB$$ftruncate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89540 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89550 (    0x10) DYLD-STUB$$kill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89560 (    0x10) DYLD-STUB$$lstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89570 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89580 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89590 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895a0 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895b0 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895c0 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895d0 (    0x10) DYLD-STUB$$pthread_rwlock_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895e0 (    0x10) DYLD-STUB$$pthread_rwlock_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c895f0 (    0x10) DYLD-STUB$$pthread_rwlock_rdlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89600 (    0x10) DYLD-STUB$$pthread_rwlock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89610 (    0x10) DYLD-STUB$$pthread_rwlock_wrlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89620 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89630 (    0x10) DYLD-STUB$$putchar [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89640 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89650 (    0x10) DYLD-STUB$$pwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89660 (    0x10) DYLD-STUB$$remove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89670 (    0x10) DYLD-STUB$$sched_yield [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f5c89680 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001f5c89690 (    0x4d) __TEXT __const
                0x00000001f5c89698 (    0x28) typeinfo name for NLMDB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f5c896c0 (    0x10) typeinfo name for DB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f5c896d0 (     0xd) typeinfo name for ThreadLock [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001f5c896e0 (   0x308) __TEXT __gcc_except_tab
                0x00000001f5c896e0 (    0x24) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89704 (    0x60) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89764 (    0x50) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f5c897b4 (    0x5c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89810 (    0x30) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89840 (    0x28) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89868 (    0x28) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89890 (    0x30) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f5c898c0 (    0x44) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89904 (    0x44) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89948 (    0x24) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001f5c8996c (    0x24) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001f5c89990 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f5c899b0 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f5c899d0 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f5c899dc (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
            0x00000001f5c899e8 (   0x3be) __TEXT __cstring
            0x00000001f5c89da8 (   0x21c) __TEXT __unwind_info
            0x00000001f5c89fc8 (    0x38) __TEXT __eh_frame
        0x000000022e11c210 (    0x18) __DATA_CONST SEGMENT
            0x000000022e11c210 (    0x18) __DATA_CONST __got
        0x0000000236ca7ff8 (   0x2e8) __AUTH_CONST SEGMENT
            0x0000000236ca7ff8 (    0xc0) __AUTH_CONST __cfstring
            0x0000000236ca80b8 (    0x90) __AUTH_CONST __const
                0x0000000236ca80b8 (    0x20) vtable for NLMDB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236ca80d8 (    0x10) typeinfo for NLMDB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236ca80e8 (    0x20) vtable for DB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236ca8108 (    0x10) typeinfo for DB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236ca8118 (    0x20) vtable for ThreadLock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236ca8138 (    0x10) typeinfo for ThreadLock [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236ca8148 (   0x198) __AUTH_CONST __auth_got
        0x0000000230f69b78 (    0x20) __DATA SEGMENT
            0x0000000230f69b78 (    0x20) __DATA __common
                0x0000000230f69b78 (     0x8) NLMDB::gNLMDB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f69b80 (     0x8) gPID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f69b88 (     0x8) gNLMDebugFile [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f69b90 (     0x8) fDB [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
