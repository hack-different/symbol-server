Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/usr/lib/libEndpointSecurity.dylib [arm64e, 0.025472 seconds]:
    A74B60AC-F575-3A33-8A9D-72EEE4A5E333 /usr/lib/libEndpointSecurity.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000194199000 (  0xc000) __TEXT SEGMENT
            0x0000000194199000 (  0x1588) MACH_HEADER
            0x000000019419a588 (  0x7d48) __TEXT __text
                0x000000019419a588 (     0x4) es_clear_cache [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a58c (    0xa0) es_mute_process_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a62c (    0xa0) es_unmute_process_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a6cc (    0x54) es_mute_process [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a720 (    0x54) es_unmute_process [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a774 (   0x214) es_muted_processes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a988 (    0x44) ScopedVMAllocation::~ScopedVMAllocation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419a9cc (   0x3bc) es_muted_processes_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ad88 (    0x20) __es_muted_processes_events_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ada8 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419adb8 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419adc4 (    0x7c) es_release_muted_processes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ae40 (    0xe8) es_mute_path_prefix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419af28 (   0x394) _updateClientMuteState(es_client_s*, es_mute_path_type_t, char const*, std::__1::unique_ptr<spar::Iterator<es_event_type_t>, std::__1::default_delete<spar::Iterator<es_event_type_t>>>&&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b2bc (    0xe8) es_mute_path_literal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b3a4 (    0xec) es_mute_path [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b490 (    0xf4) es_mute_path_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b584 (    0xc4) es_unmute_all_paths [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b648 (    0xc4) es_unmute_all_target_paths [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b70c (    0xec) es_unmute_path [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b7f8 (    0xf4) es_unmute_path_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419b8ec (   0x2b4) es_muted_paths_events [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419bba0 (   0x1dc) createMutePathData(es_muted_path_t*, es_mute_path_type_t, spar::Slice<unsigned char> const&, spar::BitSet<146ul> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419bd7c (    0x90) es_release_muted_paths [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419be0c (    0x48) es_invert_path_match [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419be54 (    0x48) es_invert_muting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419be9c (   0x178) es_respond_auth_result [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c014 (   0x178) es_respond_flags_result [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c18c (    0x90) es_subscribe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c21c (    0x3c) es_unsubscribe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c258 (    0x38) es_unsubscribe_all [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c290 (    0xc4) es_subscriptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c354 (    0xdc) es_new_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419c430 (   0x834) es_new_client_with_config [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419cc64 (    0x98) (null) [FUNC, FunctionStarts] 
                0x000000019419ccfc (    0x88) spar::Either<int, spar::ScopedPointer<spar::MachReceiveWrapper>>::~Either() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419cd84 (    0xa4) spar::ScopedPointer<spar::MachReceiveWrapper>::operator=(spar::ScopedPointer<spar::MachReceiveWrapper> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ce28 (    0x7c) spar::ScopedPointer<spar::MachReceiveWrapper>::~ScopedPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419cea4 (    0x80) mailboxAddr(es_client_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419cf24 (   0x25c) spar::BBReader<ESMessageReaderConfig>::create(spar::ScopedPointer<spar::MachReceiveWrapper> const&, spar::DPRBucketRef const&, spar::Unit (es_message_t*, unsigned long) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d180 (    0x24) __es_new_client_with_config_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d1a4 (    0x88) spar::Either<int, spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>>>::~Either() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d22c (    0xa4) spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>>::operator=(spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d2d0 (    0x7c) spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>>::~ScopedPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d34c (   0x214) es_delete_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d560 (    0x94) es_sync_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d5f4 (   0x168) spar::BBReader<ESMessageReaderConfig>::sync(spar::ScopedBlock<void>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d75c (    0x38) spar::ScopedBlock<void>::~ScopedBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d794 (    0x50) spar::Either<int, spar::ScopedBlock<void>>::~Either() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d7e4 (    0x48) es_enable_exclusive_mode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d82c (    0x44) es_disable_exclusive_mode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d870 (    0x70) es_muting_inverted [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d8e0 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d8ec (     0x8) invocation function for block in _updateClientMuteState(es_client_s*, es_mute_path_type_t, char const*, std::__1::unique_ptr<spar::Iterator<es_event_type_t>, std::__1::default_delete<spar::Iterator<es_event_type_t>>>&&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d8f4 (    0x50) invocation function for block in _updateClientMuteState(es_client_s*, es_mute_path_type_t, char const*, std::__1::unique_ptr<spar::Iterator<es_event_type_t>, std::__1::default_delete<spar::Iterator<es_event_type_t>>>&&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d944 (    0x24) invocation function for block in createMutePathData(es_muted_path_t*, es_mute_path_type_t, spar::Slice<unsigned char> const&, spar::BitSet<146ul> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d968 (    0x18) invocation function for block in spar::BitSet<146ul>::bitsSet() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d980 (    0x2c) spar::RangeIterator<es_event_type_t>::next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9ac (     0x4) spar::RangeIterator<es_event_type_t>::~RangeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9b0 (     0x4) spar::RangeIterator<es_event_type_t>::~RangeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9b4 (    0x34) spar::SliceIterator<es_event_type_t>::next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9e8 (     0x4) spar::SliceIterator<es_event_type_t>::~SliceIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9ec (     0x4) spar::SliceIterator<es_event_type_t>::~SliceIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419d9f0 (   0x1f4) spar::Either<int, spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>>> spar::ScopedPointer<spar::BBReader<ESMessageReaderConfig>>::new_<spar::ScopedPointer<spar::TypedMessageQueueReceiver<ESMessageReaderConfig>>, spar::ScopedPointer<spar::MachReceiveWrapper> const&, spar::ScopedBlock<es_message_t*, unsigned long, spar::Unit>, dispatch_workloop_s*&, dispatch_queue_s*&, dispatch_source_s*&, dispatch_semaphore_s*&>(spar::ScopedPointer<spar::TypedMessageQueueReceiver<ESMessageReaderConfig>>&&, spar::ScopedPointer<spar::MachReceiveWrapper> const&, spar::ScopedBlock<es_message_t*, unsigned long, spar::Unit>&&, dispatch_workloop_s*&, dispatch_queue_s*&, dispatch_source_s*&, dispatch_semaphore_s*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419dbe4 (    0x38) spar::ScopedBlock<es_message_t*, unsigned long, spar::Unit>::~ScopedBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419dc1c (    0x7c) spar::ScopedPointer<spar::TypedMessageQueueReceiver<ESMessageReaderConfig>>::~ScopedPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419dc98 (   0x19c) spar::BBReader<ESMessageReaderConfig>::BBReader(spar::ScopedPointer<spar::TypedMessageQueueReceiver<ESMessageReaderConfig>>, spar::ScopedPointer<spar::MachReceiveWrapper>, spar::ScopedBlock<es_message_t*, unsigned long, spar::Unit>, dispatch_workloop_s*, dispatch_queue_s*, dispatch_source_s*, dispatch_semaphore_s*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419de34 (    0x9c) spar::BBReader<ESMessageReaderConfig>::woke(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ded0 (     0x8) spar::BBReader<ESMessageReaderConfig>::canceled(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ded8 (    0x54) spar::RefCounted::~RefCounted() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419df2c (    0x38) spar::BBReader<ESMessageReaderConfig>::unsafeDelete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419df64 (   0x2b4) spar::BBReader<ESMessageReaderConfig>::handleItems() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e218 (    0xb0) spar::TypedMessageQueueReceiver<ESMessageReaderConfig>::dequeueMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e2c8 (   0x174) spar::BBReader<ESMessageReaderConfig>::checkPendingSyncs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e43c (    0x3c) spar::Pair<spar::MQRScopedMessageRef<ESMessageReaderConfig>, unsigned long long>::~Pair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e478 (    0x44) spar::Maybe<spar::Pair<spar::MQRScopedMessageRef<ESMessageReaderConfig>, unsigned long long>>::~Maybe() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e4bc (    0x24) invocation function for block in es_message_t* spar::ArraylikeHelpers<unsigned char const, spar::Slice<unsigned char const>>::dataAtPos<es_message_t>(unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e4e0 (    0x38) spar::Pair<unsigned long long, spar::ScopedBlock<void>>::~Pair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e518 (   0x17c) std::__1::deque<spar::Pair<unsigned long long, spar::ScopedBlock<void>>, std::__1::allocator<spar::Pair<unsigned long long, spar::ScopedBlock<void>>>>::~deque[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e694 (   0x180) spar::BBReader<ESMessageReaderConfig>::~BBReader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e814 (    0x38) spar::TypedMessageQueueReceiver<ESMessageReaderConfig>::unsafeDelete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e84c (    0xc4) spar::TypedMessageQueueReceiver<ESMessageReaderConfig>::~TypedMessageQueueReceiver() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419e910 (   0x5a0) std::__1::deque<spar::Pair<unsigned long long, spar::ScopedBlock<void>>, std::__1::allocator<spar::Pair<unsigned long long, spar::ScopedBlock<void>>>>::__add_back_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419eeb0 (   0x188) std::__1::__split_buffer<spar::Pair<unsigned long long, spar::ScopedBlock<void>>*, std::__1::allocator<spar::Pair<unsigned long long, spar::ScopedBlock<void>>*>>::push_back(spar::Pair<unsigned long long, spar::ScopedBlock<void>>*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f038 (   0x19c) std::__1::__split_buffer<spar::Pair<unsigned long long, spar::ScopedBlock<void>>*, std::__1::allocator<spar::Pair<unsigned long long, spar::ScopedBlock<void>>*>>::push_front(spar::Pair<unsigned long long, spar::ScopedBlock<void>>*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f1d4 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f208 (    0x88) spar::BBReader<ESMessageReaderConfig>::enqueueCheckPendingSyncs()::'lambda'(void*)::__invoke(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f290 (    0x48) es_message_size [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f2d8 (    0x4c) es_copy_message [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f324 (    0x3c) es_free_message [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f360 (    0x38) es_retain_message [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f398 (    0x3c) es_release_message [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f3d4 (     0x8) es_exec_arg_count [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f3dc (     0x8) es_exec_env_count [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f3e4 (     0x8) es_exec_fd_count [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f3ec (    0x30) es_exec_arg [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f41c (    0x30) es_exec_env [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f44c (    0x2c) es_exec_fd [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f478 (   0x4dc) sysdiagnoseInformationForEndpointSecurity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f954 (     0x8) invocation function for block in diagnostics() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f95c (    0x48) spar::Defer<void () block_pointer __strong>::~Defer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419f9a4 (   0x1b4) es_register_early_boot_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419fb58 (    0xd0) __es_register_early_boot_client_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419fc28 (   0x150) es_unregister_early_boot_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419fd78 (    0xb4) es_unregister_early_boot_clients [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419fe2c (     0x4) _es_init [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419fe30 (   0x1b4) _es_get_server_pipe [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000019419ffe4 (    0x44) ___es_get_server_pipe_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0028 (    0xe4) ___es_get_server_pipe_block_invoke.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a010c (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a011c (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0128 (    0x38) ___es_release_server_pipe_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0160 (   0x1a4) _es_start_service [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0304 (     0xc) _endpointsecurityd_may_be_throttled_retrying_request [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0310 (     0xc) _endpointsecurityd_routine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a031c (    0x10) _endpointsecurityd_simpleroutine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a032c (    0x80) _es_clear_cache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a03ac (    0xf8) _es_analytics_subscription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a04a4 (    0xd8) _es_copy_diagnostics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a057c (    0xe8) _es_register_early_boot_client [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0664 (    0xd4) _es_unregister_early_boot_client [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0738 (    0xd0) _es_unregister_early_boot_clients [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0808 (    0x5c) _create_basic_request [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0864 (    0x38) is_service_name_valid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a089c (    0x3c) isAuthEventType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a08d8 (   0x1b8) (null) [FUNC, FunctionStarts] 
                0x00000001941a0a90 (     0xc) eventRequiresFlagsResponse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0a9c (    0xb8) isSystemExtensionPath(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0b54 (    0xcc) createHexStringFromData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0c20 (   0x1e8) spar::show(spar::Slice<unsigned char const>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0e08 (    0x70) spar::RefCountedWithTrailingArray<spar::RCArrayStorage<char>, char>::unsafeDelete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a0e78 (   0x188) spar::createReceivePort() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1000 (    0xc0) spar::MachReceiveWrapper::unsafeDelete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a10c0 (    0x84) spar::espanic(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1144 (    0x40) spar::PackedDataBufferReader::create(spar::Slice<unsigned char const>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1184 (    0xac) spar::PackedDataBufferReader::read(spar::Slice<unsigned char>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1230 (    0x60) spar::DPRBucketRef::retain() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1290 (   0x158) spar::DPRBucketRef::release(void () block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a13e8 (   0x1ec) spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a15d4 (    0x34) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1608 (     0x4) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a160c (   0x184) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1790 (    0x10) __copy_helper_block_e8_32rc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a17a0 (    0x9c) spar::UntypedMessageQueueReceiver::dequeueRaw() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a183c (    0xd8) invocation function for block in spar::UntypedMessageQueueReceiver::dequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1914 (    0xb0) spar::UntypedMessageQueueReceiver::queueTailMessageId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a19c4 (    0xe0) spar::UntypedMessageQueueReceiver::UntypedMessageQueueReceiver(spar::DPRBucketRef const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1aa4 (     0x4) spar::UntypedMessageQueueReceiver::UntypedMessageQueueReceiver(spar::DPRBucketRef const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1aa8 (    0x30) spar::UntypedMessageQueueReceiver::~UntypedMessageQueueReceiver() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1ad8 (    0xec) spar::DPRSlabRef::releaseInuseBucketCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1bc4 (    0x24) invocation function for block in spar::MessageQueueMailbox* spar::ArraylikeHelpers<unsigned char const, spar::Slice<unsigned char const>>::dataAtPos<spar::MessageQueueMailbox>(unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1be8 (    0x24) invocation function for block in spar::MessageQueueMessageHeader* spar::ArraylikeHelpers<unsigned char const, spar::Slice<unsigned char const>>::dataAtPos<spar::MessageQueueMessageHeader>(unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1c0c (     0x4) esmalloc_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1c10 (     0x4) esfree_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1c14 (    0x9c) esmalloc_base [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1cb0 (    0x6c) esfree_base [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1d1c (    0x2c) es_muted_paths_events.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1d48 (    0x2c) es_message_size.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1d74 (    0x2c) es_message_size.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1da0 (    0x2c) es_copy_message.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1dcc (    0x2c) es_free_message.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1df8 (    0x2c) es_retain_message.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1e24 (    0x2c) es_release_message.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1e50 (    0x2c) es_exec_arg.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1e7c (    0x2c) es_exec_env.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1ea8 (    0x2c) es_exec_fd.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1ed4 (    0x1c) ___es_get_server_pipe_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1ef0 (    0x1c) _es_copy_diagnostics.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1f0c (    0x1c) _es_register_early_boot_client.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1f28 (    0x1c) _es_unregister_early_boot_client.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1f44 (    0x1c) _es_unregister_early_boot_clients.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1f60 (    0x2c) spar::DPRBucketRef::retain() const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1f8c (    0x2c) spar::DPRBucketRef::release(void () block_pointer) const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1fb8 (    0x2c) spar::UntypedMessageQueueReceiver::doDequeueRaw() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a1fe4 (    0x2c) spar::UntypedMessageQueueReceiver::doDequeueRaw() (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2010 (    0x2c) __Block_byref_object_copy_.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a203c (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2068 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2094 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a20c0 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a20ec (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2118 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::doDequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2144 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::dequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2170 (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::dequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a219c (    0x2c) invocation function for block in spar::UntypedMessageQueueReceiver::dequeueRaw() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a21c8 (    0x2c) spar::UntypedMessageQueueReceiver::queueTailMessageId() const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a21f4 (    0x2c) spar::UntypedMessageQueueReceiver::queueTailMessageId() const (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2220 (    0x2c) spar::UntypedMessageQueueReceiver::UntypedMessageQueueReceiver(spar::DPRBucketRef const&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a224c (    0x2c) spar::UntypedMessageQueueReceiver::UntypedMessageQueueReceiver(spar::DPRBucketRef const&) (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a2278 (    0x2c) spar::UntypedMessageQueueReceiver::UntypedMessageQueueReceiver(spar::DPRBucketRef const&) (.cold.3) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001941a22a4 (    0x2c) spar::DPRSlabRef::releaseInuseBucketCount() const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001941a22d0 (   0x610) __TEXT __auth_stubs
                0x00000001941a22d0 (    0x10) DYLD-STUB$$IOConnectCallMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a22e0 (    0x10) DYLD-STUB$$IOConnectCallScalarMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a22f0 (    0x10) DYLD-STUB$$IOConnectCallStructMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2300 (    0x10) DYLD-STUB$$IOConnectSetNotificationPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2310 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2320 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2330 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2340 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2350 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2360 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2370 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2380 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2390 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23a0 (    0x10) DYLD-STUB$$_NSGetExecutablePath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23b0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23c0 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23d0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23e0 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a23f0 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2400 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2410 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2420 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2430 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2440 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2450 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2460 (    0x10) DYLD-STUB$$_os_assert_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2470 (    0x10) DYLD-STUB$$_os_assumes_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2480 (    0x10) DYLD-STUB$$_os_crash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2490 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24a0 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24b0 (    0x10) DYLD-STUB$$bootstrap_look_up2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24c0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24d0 (    0x10) DYLD-STUB$$dispatch_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24e0 (    0x10) DYLD-STUB$$dispatch_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a24f0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2500 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2510 (    0x10) DYLD-STUB$$dispatch_queue_create_with_target$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2520 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2530 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2540 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2550 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2560 (    0x10) DYLD-STUB$$dispatch_set_context [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2570 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2580 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2590 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25a0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25b0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25c0 (    0x10) DYLD-STUB$$dispatch_workloop_create_inactive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25d0 (    0x10) DYLD-STUB$$dispatch_workloop_set_scheduler_priority [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25e0 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a25f0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2600 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2610 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2620 (    0x10) DYLD-STUB$$mach_msg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2630 (    0x10) DYLD-STUB$$mach_port_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2640 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2650 (    0x10) DYLD-STUB$$mach_port_get_attributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2660 (    0x10) DYLD-STUB$$mach_port_mod_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2670 (    0x10) DYLD-STUB$$mach_port_set_attributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2680 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2690 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26a0 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26b0 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26c0 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26d0 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26e0 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a26f0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2700 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2710 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2720 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2730 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2740 (    0x10) DYLD-STUB$$os_log_with_args [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2750 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2760 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2770 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2780 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2790 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27a0 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27b0 (    0x10) DYLD-STUB$$uuid_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27c0 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27d0 (    0x10) DYLD-STUB$$vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27e0 (    0x10) DYLD-STUB$$xpc_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a27f0 (    0x10) DYLD-STUB$$xpc_array_set_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2800 (    0x10) DYLD-STUB$$xpc_array_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2810 (    0x10) DYLD-STUB$$xpc_array_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2820 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2830 (    0x10) DYLD-STUB$$xpc_dictionary_get_data [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2840 (    0x10) DYLD-STUB$$xpc_dictionary_get_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2850 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2860 (    0x10) DYLD-STUB$$xpc_dictionary_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2870 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2880 (    0x10) DYLD-STUB$$xpc_dictionary_set_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a2890 (    0x10) DYLD-STUB$$xpc_pipe_create_from_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a28a0 (    0x10) DYLD-STUB$$xpc_pipe_invalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a28b0 (    0x10) DYLD-STUB$$xpc_pipe_routine [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a28c0 (    0x10) DYLD-STUB$$xpc_pipe_simpleroutine [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001941a28d0 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001941a28e0 (   0x230) __TEXT __const
                0x00000001941a28e0 (    0x48) EndpointSecurityVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2928 (    0x58) EndpointSecurityVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2980 (    0x2a) typeinfo name for spar::RangeIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a29aa (    0x24) typeinfo name for spar::Iterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a29ce (    0x2a) typeinfo name for spar::SliceIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a29f8 (    0x2a) typeinfo name for spar::BBReader<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2a22 (    0x14) typeinfo name for spar::RefCounted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2a36 (    0x14) typeinfo name for spar::ESMalloced [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2a4a (    0x46) typeinfo name for spar::TypedMessageQueueReceiver<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2a90 (    0x1b) typeinfo name for spar::RCArrayStorage<char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2aab (    0x3f) typeinfo name for spar::RefCountedWithTrailingArray<spar::RCArrayStorage<char>, char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a2aea (    0x26) typeinfo name for spar::MachReceiveWrapper [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001941a2b10 (   0x5f0) __TEXT __gcc_except_tab
                0x00000001941a2b10 (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001941a2b28 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001941a2b38 (    0x34) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001941a2b6c (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001941a2b80 (    0x48) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001941a2bc8 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001941a2bdc (    0x14) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001941a2bf0 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001941a2c04 (    0x14) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001941a2c18 (    0x14) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001941a2c2c (    0x20) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001941a2c4c (    0x7c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001941a2cc8 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001941a2cd8 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001941a2ce8 (    0x40) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001941a2d28 (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001941a2d38 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001941a2d48 (    0x28) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001941a2d70 (    0x1c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001941a2d8c (    0x20) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001941a2dac (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001941a2dbc (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001941a2dcc (    0x34) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e00 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e10 (    0x10) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e20 (    0x1c) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e3c (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e4c (    0x4c) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001941a2e98 (    0x24) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001941a2ebc (    0x24) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001941a2ee0 (    0x10) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001941a2ef0 (    0x10) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001941a2f00 (    0x10) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001941a2f10 (    0x10) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001941a2f20 (    0x24) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001941a2f44 (    0x1c) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001941a2f60 (    0x40) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001941a2fa0 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001941a3020 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001941a3034 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001941a3050 (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001941a306c (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001941a3094 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001941a30a8 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001941a30bc (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001941a30d8 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001941a30f0 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
            0x00000001941a3100 (   0x495) __TEXT __oslogstring
            0x00000001941a3595 (  0x14e2) __TEXT __cstring
            0x00000001941a4a78 (   0x3dc) __TEXT __unwind_info
            0x00000001941a4e58 (    0x38) __TEXT __eh_frame
            0x00000001941a4e90 (     0x1) __TEXT __objc_classname
            0x00000001941a4e92 (    0x83) __TEXT __objc_methname
            0x00000001941a4f20 (    0xe0) __TEXT __objc_stubs
                0x00000001941a4f20 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4f40 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4f60 (    0x20) objc_msgSend$insertObject:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4f80 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4fa0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4fc0 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001941a4fe0 (    0x20) objc_msgSend$valueForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d3ae2f40 (   0x1f0) __DATA_CONST SEGMENT
            0x00000001d3ae2f40 (    0x50) __DATA_CONST __got
            0x00000001d3ae2f90 (   0x160) __DATA_CONST __const
                0x00000001d3ae2f90 (    0x20) __block_descriptor_tmp.8 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae2fb0 (    0x20) __block_descriptor_tmp.11 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae2fd0 (    0x20) __block_descriptor_tmp.13 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae2ff0 (    0x20) __block_descriptor_tmp.47 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae3010 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ae3030 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3ae3050 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3ae3070 (    0x20) __block_descriptor_tmp.3 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae3090 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae30b0 (    0x20) __block_descriptor_tmp.20 [NameNList, MangledNameNList, NList] 
                0x00000001d3ae30d0 (    0x20) __block_descriptor_tmp.26 [NameNList, MangledNameNList, NList] 
            0x00000001d3ae30f0 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001d3ae30f8 (    0x38) __DATA_CONST __objc_selrefs
        0x00000001dc2846a8 (   0x5b0) __AUTH_CONST SEGMENT
            0x00000001dc2846a8 (   0x298) __AUTH_CONST __const
                0x00000001dc2846a8 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001dc2846d8 (    0x30) __block_descriptor_tmp.18 [NameNList, MangledNameNList, NList] 
                0x00000001dc284708 (    0x30) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x00000001dc284738 (    0x28) vtable for spar::RangeIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284760 (    0x10) typeinfo for spar::Iterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284770 (    0x18) typeinfo for spar::RangeIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284788 (    0x28) vtable for spar::SliceIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2847b0 (    0x18) typeinfo for spar::SliceIterator<es_event_type_t> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2847c8 (    0x18) vtable for spar::BBReader<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2847e0 (    0x10) typeinfo for spar::ESMalloced [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2847f0 (    0x18) typeinfo for spar::RefCounted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284808 (    0x18) typeinfo for spar::BBReader<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284820 (    0x18) vtable for spar::RefCounted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284838 (    0x18) vtable for spar::TypedMessageQueueReceiver<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284850 (    0x18) typeinfo for spar::TypedMessageQueueReceiver<ESMessageReaderConfig> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284868 (    0x30) __block_descriptor_tmp.2 [NameNList, MangledNameNList, NList] 
                0x00000001dc284898 (    0x18) vtable for spar::RCArrayStorage<char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2848b0 (    0x18) typeinfo for spar::RefCountedWithTrailingArray<spar::RCArrayStorage<char>, char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2848c8 (    0x18) typeinfo for spar::RCArrayStorage<char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2848e0 (    0x18) vtable for spar::MachReceiveWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc2848f8 (    0x18) typeinfo for spar::MachReceiveWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dc284910 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
            0x00000001dc284940 (   0x318) __AUTH_CONST __auth_got
        0x00000001d5e17bd0 (    0x58) __DATA SEGMENT
            0x00000001d5e17bd0 (    0x20) __DATA __objc_classrefs
            0x00000001d5e17bf0 (    0x10) __DATA __data
                0x00000001d5e17bf0 (     0x8) _esglobals [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5e17bf8 (     0x8) _eslog [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5e17c00 (    0x28) __DATA __common
                0x00000001d5e17c00 (    0x28) _globals [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
