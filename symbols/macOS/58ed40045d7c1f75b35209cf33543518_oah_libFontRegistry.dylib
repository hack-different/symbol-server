Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib [arm64e, 0.086863 seconds]:
    3E03F771-4869-3297-9376-837F48773974 /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001889b9000 ( 0x52000) __TEXT SEGMENT
            0x00000001889b9000 (  0x19f4) MACH_HEADER
            0x00000001889ba9f4 ( 0x3f584) __TEXT __text
                0x00000001889ba9f4 (   0x120) XTCopyPropertiesForFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bab14 (    0x70) TLocalFontRegistry::TLocalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bab84 (   0x1d8) TLocalFontRegistryImp::GetIndex(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bad5c (    0xbc) TFontPathIndex::CopyFontsForKey(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bae18 (     0x4) TLocalFontRegistry::~TLocalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bae1c (    0x50) TLocalFontRegistry::~TLocalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bae6c (    0x68) TGlobalFontRegistry::TGlobalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889baed4 (    0x98) TStackBuffer<void const*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889baf6c (   0x4b0) TCFFlattenContext::Flatten(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bb41c (    0x90) TCFFlattenContext::FlattenCFSet(__CFSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bb4ac (   0x1ac) TCFFlattenContext::FlattenCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bb658 (    0x80) TStackBuffer<unsigned char, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bb6d8 (    0xc4) TCFFlattenContext::StreamOut(void const*, unsigned long, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bb79c (   0x314) TCFResurrectContext::ResurrectCFDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbab0 (   0x15c) TCFResurrectContext::ResurrectCFString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbc0c (   0x134) TCFResurrectContext::StreamInData(void*, unsigned long, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbd40 (    0x64) TCFStringUniquer::TCFStringUniquer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbda4 (     0x8) TCFStringUniquer::GetUniqueString(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbdac (    0xfc) TCFStringUniquerImp::GetUniqueString(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbea8 (     0x4) TCFResurrectContext::~TCFResurrectContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbeac (    0x50) TCFFlattenContext::~TCFFlattenContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbefc (     0x4) TGlobalFontRegistry::~TGlobalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bbf00 (   0x1ac) XTCopyPropertyForFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc0ac (    0x98) TCFFlattenContext::FlattenCFArray(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc144 (   0x164) TCFFlattenContext::FlattenCFURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc2a8 (   0x164) TCFResurrectContext::ResurrectCFURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc40c (    0xd8) TCFResurrectContext::ResurrectCFNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc4e4 (   0x15c) TCFMutableDictionary::SetPairs(__CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc640 (   0x1f8) TCFResurrectContext::ResurrectCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc838 (   0x104) TCFResurrectContext::ResurrectCFCharacterSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bc93c (   0x29c) XTCopyFontWithName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bcbd8 (    0xf0) TFontIndex::CopyFontsForKey(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bccc8 (    0x10) TFontIndex::GetFontForKeyInternal(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bccd8 (    0x54) TFontIndex::GetFontsSetForKeyInternal(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bcd2c (    0xd8) TRequestCache::CopyResultForRequest(void const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bce04 (    0x40) XTGetCommonFontNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bce44 (    0x14) TFontRegistry::GetCommonFontNames(unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bce58 (   0x6c0) XTCopyFontsWithProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd518 (    0x38) TBasicFontEntity::GetBasicProperties() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd550 (    0xd0) TBasicFontEntity::CreateBasicProperties() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd620 (    0x68) TCFMutableDictionary::TCFMutableDictionary(__CFDictionary const*, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd688 (    0x98) TStackBuffer<__CFString const*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd720 (    0xf4) TLocalFontRegistryImp::GetIndexForProperty(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bd814 (   0x2e0) TFontProperties::GetPropertyID(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdaf4 (    0xb0) TFontProperties::CreateFontProperties(__CFString const* const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdba4 (    0x20) TLocalFontRegistryImp::SearchIndexedFontsForName(unsigned short, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdbc4 (    0x90) TCFFlattenContext::FlattenCFDictionary(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdc54 (    0xd4) TBasicFontEntity::CopyProperty(__CFString const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdd28 (   0x104) TRequestCache::AddResultForRequest(void const*, void const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bde2c (   0x168) XTCopyFontForCharacter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bdf94 (    0xbc) TCharacterRejectCache::TCharacterRejectCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be050 (    0x88) TCharacterRejectCache::CreateCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be0d8 (    0x10) XTSetFrameworkFontChangedCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be0e8 (    0x14) TFontRegistry::SetFrameworkNotificationCallback(void (*)(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be0fc (    0x5c) TLocalFontRegistry::CreateRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be158 (   0x198) TLocalFontRegistryImp::TLocalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be2f0 (   0x358) TLocalFontRegistry::RegisterBundleFonts(TLocalFontRegistryImp&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889be648 (   0x518) TGlobalFontRegistry::CreateRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889beb60 (    0xa0) TGlobalFontRegistryImp::TGlobalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bec00 (    0x4c) TSessionManager::TSessionManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bec4c (    0x68) TSessionManager::CreateSessionManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889becb4 (    0x50) TSessionManagerImp::InitSessionInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bed04 (    0xb0) TSessionManagerImp::SetFrameworkDirPaths() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bedb4 (    0x78) TCFURL::CopyAbsoluteFilePath() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bee2c (     0x8) XTCopyAvailableFamilyNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bee34 (    0x98) TStackBuffer<unsigned long, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889beecc (    0x98) TStackBuffer<CGFont*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bef64 (    0xa8) TCFMutableSet::AddValues(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf00c (    0x78) TCFMutableArray::TCFMutableArray(long, void const**, CFArrayCallBacks const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf084 (   0x10c) TFontEntity::CompareFamilyNames(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf190 (     0x8) XTCopyAvailableFontNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf198 (     0x8) TFontEntity::ComparePostScriptNames(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf1a0 (     0x8) TAutoActivationManager::TAutoActivationManager(__CFDictionary const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf1a8 (    0x6c) TAutoActivationManager::TAutoActivationManager(__CFDictionary const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf214 (     0x8) XTCopyFontProviderRemotePorts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf21c (    0x58) TCFFlattenContext::TCFFlattenContext(__CFData*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf274 (    0xf0) TCFFlattenContext::FlattenCFNumber(__CFNumber const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf364 (     0x4) TCFFlattenContext::~TCFFlattenContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf368 (    0x88) TAutoActivationManager::CopyAutoActivatedFont(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf3f0 (    0x4c) TXTypeUI::TXTypeUI() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf43c (    0x48) TXTypeUIImp::CreateCoreTextUI() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf484 (    0x50) TXTypeUIImp::TXTypeUIImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf4d4 (   0x138) TXTypeUIImp::GetLibraryHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf60c (     0xc) TSessionManager::GetFrameworkResourcesDirPath() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf618 (    0x54) TCFMutableString::TCFMutableString(__CFString const*, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf66c (    0x80) TStackBuffer<char, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf6ec (    0x48) TAutoActivationManager::~TAutoActivationManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf734 (    0xd4) GetSettingForString(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf808 (    0x94) TCFURL::Exists() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf89c (     0x4) TClientFontEntity::TClientFontEntity(CGFont*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf8a0 (    0xf0) TClientFontEntity::TClientFontEntity(CGFont*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bf990 (   0x47c) TCGFont::CopyURL() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889bfe0c (   0x208) TCFURL::CopySymlinkTarget(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c0014 (   0x194) TCFNumber::CreateForString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c01a8 (   0x1a8) TFontEntity::MatchesProperties(__CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c0350 (   0x818) TFontEntity::MatchesProperty(__CFString const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c0b68 (   0x5f4) TClientFontEntity::CopyProperty(__CFString const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c115c (   0x248) TClientFontEntity::CopyPostScriptName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c13a4 (    0x4c) TCFStr::GetUniqueString() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c13f0 (    0x54) TCFDeque<void const*>::Contains(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1444 (    0x5c) TClientFontEntity::CopyURL() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c14a0 (     0x8) TClientFontEntity::GetURL() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c14a8 (     0x4) TClientFontEntity::~TClientFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c14ac (    0x64) TClientFontEntity::~TClientFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1510 (    0x6c) bool TCFNumber::GetCFNumberValueSafely<bool>(__CFNumber const*, bool&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c157c (   0x128) CreateFontFromURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c16a4 (    0x8c) TCFURL::ConformsToUTI(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1730 (   0x260) XTGetDirectoryFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1990 (    0xac) TCFURL::CopyConfigurationDirectoryURL(confstr_path_t) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1a3c (    0x58) TCFURL::AppendPathComponent(__CFString const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1a94 (   0x2d4) XTCopyURLToURL(__CFURL const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1d68 (    0xb0) TStackBuffer<char, 30ul>::SetCount(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1e18 (   0x13c) DoRegisterURLsWithATS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c1f54 (    0xd4) LoadATSFunction(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2028 (     0xc) TSessionManager::GetFrameworkDirPath() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2034 (    0x78) TLocalFontRegistryImp::FindNextFontIndex(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c20ac (    0x10) TFontPathIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c20bc (   0x160) TFontPathIndex::AddFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c221c (   0x1cc) TCFURL::CreateComponentPathURLs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c23e8 (    0x60) TCFMutableArray::TCFMutableArray(__CFArray const*, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2448 (    0x7c) TCFURLComponentsRFC2396::~TCFURLComponentsRFC2396() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c24c4 (   0x1c4) TFontIndex::AddFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2688 (    0x74) TFontIndex::DirectIndexDict() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c26fc (     0xc) TFontIndex::GetIndexDictKeyCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2708 (    0x10) TFontPostScriptNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2718 (    0x48) TFontNameIndex::GetIndexDictKeyCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2760 (    0x98) TFontNameIndex::CFDictionaryHashStringIgnoringCaseCallBack(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c27f8 (    0x10) TFontFullNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2808 (   0x354) TClientFontEntity::CopyFullName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2b5c (    0x7c) TClientFontEntity::CopyLocale() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2bd8 (    0x10) TFontFamilyNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c2be8 (   0x4d0) TClientFontEntity::CopyFamilyName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c30b8 (   0x10c) TFontNameIndex::CFDictionaryEqualStringsIgnoringCaseCallBack(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c31c4 (     0x8) TFontIndex::GetFontSetCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c31cc (    0x24) TCFMutableSet::Union(__CFSet const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c31f0 (    0x10) UnionWithSet(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c3200 (    0xa8) TFontRegistry::PostNotification(unsigned int, __CFString const*, __CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c32a8 (    0xac) TCFURL::ConvertURLArrayToStringArray(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c3354 (    0x60) TCFLazyMutableArray::Append(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c33b4 (   0x100) TFontRegistry::PostNotification(unsigned int, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c34b4 (     0x8) TClientFontEntity::CopyCharacterSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c34bc (    0x4c) AsynchronousLocalNotificationTimerCallBack(__CFRunLoopTimer*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c3508 (   0x108) TCFSet<void const*>::CreateArray(CFArrayCallBacks const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c3610 (   0x210) TFontEntity::CopyProperties(__CFSet const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c3820 (   0x1cc) TClientFontEntity::CopyTraits() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c39ec (     0x4) TFontTraits::TFontTraits(CGFont*, TFontMetadata const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c39f0 (   0xc48) TFontTraits::TFontTraits(CGFont*, TFontMetadata const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c4638 (   0x6fc) TClientFontEntity::CopySubfamilyName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c4d34 (   0x57c) TFontEntity::MatchesFragment(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c52b0 (   0x284) TLocalFontRegistryImp::CopyFontProperties(unsigned int, __CFSet const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5534 (   0x138) TLocalFontRegistryImp::CopyFontProperty(unsigned int, __CFString const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c566c (    0xe4) TFontRegistryImp::SearchNameIndicesForFonts(unsigned short, unsigned short, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5750 (    0xfc) TCFFlattenContext::FlattenCFCharacterSet(__CFCharacterSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c584c (     0x8) XTRegisterFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5854 (    0xa8) TFontIndex::IndexDict() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c58fc (     0xc) TFontIndex::GetIndexDictValueCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5908 (    0x58) TCFMutableDictionary::TCFMutableDictionary(__CFDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5960 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c596c (    0x28) TCFFlattenContext::~TCFFlattenContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5994 (    0x2c) TCFResurrectContext::TCFResurrectContext(unsigned char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c59c0 (     0x4) TCFResurrectContext::~TCFResurrectContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c59c4 (    0x44) TCFResurrectContext::ResurrectionError(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5a08 (    0x7c) TCFResurrectContext::StreamInTCFTypeID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5a84 (    0x78) TCFResurrectContext::StreamInCFIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5afc (    0x80) TCFFlattenContext::FlattenCFBoolean(__CFBoolean const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5b7c (    0x9c) TCFResurrectContext::ResurrectCFBoolean() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5c18 (    0x90) TCFFlattenContext::FlattenCFData(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5ca8 (    0xb0) TCFResurrectContext::ResurrectCFData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5d58 (    0x30) FlattenArrayElement(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5d88 (    0x30) FlattenSetElement(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5db8 (   0x1f8) TCFResurrectContext::ResurrectCFSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c5fb0 (    0x88) FlattenDictionaryElement(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6038 (    0x98) TCFFlattenContext::FlattenCFUUID(__CFUUID const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c60d0 (    0xb0) TCFResurrectContext::ResurrectCFUUID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6180 (    0xe4) TCFFlattenContext::FlattenCFError(__CFError*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6264 (    0xd0) TCFResurrectContext::ResurrectCFError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6334 (    0x34) TCFFlattenContext::FlattenCFNull(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6368 (    0x10) TCFResurrectContext::ResurrectCFNull() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6378 (   0x408) TCFResurrectContext::Resurrect(TCFType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6780 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001889c67b0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001889c67c8 (    0x28) TCFResurrectContext::RetrieveCFString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c67f0 (    0x28) TCFResurrectContext::RetrieveCFNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6818 (    0x28) TCFResurrectContext::RetrieveCFBoolean() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6840 (    0x28) TCFResurrectContext::RetrieveCFDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6868 (    0x28) TCFResurrectContext::RetrieveCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6890 (    0x28) TCFResurrectContext::RetrieveCFData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c68b8 (    0x28) TCFResurrectContext::RetrieveCFCharacterSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c68e0 (    0x28) TCFResurrectContext::RetrieveCFSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6908 (    0x28) TCFResurrectContext::RetrieveCFURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6930 (    0x28) TCFResurrectContext::RetrieveCFUUID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6958 (    0x28) TCFResurrectContext::RetrieveCFError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6980 (    0x28) TCFResurrectContext::RetrieveCFNull() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c69a8 (     0x8) TCFFlattenContext::GetStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c69b0 (     0x8) TCFFlattenContext::GetBytePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c69b8 (     0x8) TCFFlattenContext::GetLength() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c69c0 (    0x34) TCFRetained<__CFURL const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c69f4 (    0x34) TCFNumber::~TCFNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6a28 (    0x34) TCFError::~TCFError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6a5c (    0x34) TCFString::~TCFString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6a90 (   0x13c) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6bcc (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6be4 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6c40 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6c74 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6ca8 (    0x2c) std::__1::vector<void const*, std::__1::allocator<void const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6cd4 (   0x114) std::__1::vector<void const*, std::__1::allocator<void const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6de8 (    0x18) std::__1::vector<void const*, std::__1::allocator<void const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6e00 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void const*>>(std::__1::allocator<void const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6e38 (   0x184) TCFDict::ContainsSubset(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c6fbc (   0x130) TCFDict::GetPreferredLanguages(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c70ec (    0xbc) TCFMutableDictionary::AddMultiValue(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c71a8 (    0xc4) TCFMutableDictionary::AddMultiValues(void const*, __CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c726c (   0x154) TCFMutableDictionary::AddMultiValues(__CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c73c0 (   0x128) TCFMutableSet::Intersect(__CFSet const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c74e8 (    0x1c) TCFMutableSet::MinusSet(__CFSet const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7504 (    0x10) Minus(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7514 (    0x7c) Merge(__CFArray const*, __CFArray const*, TCFSortedArray&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7590 (    0xe0) TCFStr::CreateSubstringWithoutRegionalSuffix() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7670 (   0x18c) TCFURL::CopyNormalizedPath(__CFURL const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c77fc (   0x200) TCFData::TCFData(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c79fc (    0xac) bool TCFNumber::GetCFNumberValueSafely<unsigned long>(__CFNumber const*, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7aa8 (     0x4) TCFData::TCFData(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7aac (    0xfc) TCFBookmark::CreateDefaultProperties() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7ba8 (    0x38) TCFBookmark::GetDefaultProperties() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7be0 (    0x24) TCFBookmark::InitBookmarkData(__CFURL const*, __CFArray const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7c04 (    0xd4) TCFTypeRef::GetBooleanValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7cd8 (    0xf0) CopyFindAndReplace(__CFString const*, __CFString const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7dc8 (   0x174) XTCreateDirectory [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7f3c (    0xc0) XTCreateRemovedFontsFolderName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c7ffc (    0x34) TCFSet<void const*>::~TCFSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8030 (    0x34) TCFDictionary::~TCFDictionary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8064 (    0x34) TCFArray<void const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8098 (    0x50) TCFMutableArray::TCFMutableArray(__CFArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c80e8 (    0x34) TCFRetained<__CFString const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c811c (    0x34) TCFURL::~TCFURL() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8150 (    0xac) TUTF8Buffer::TUTF8Buffer(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c81fc (    0xb8) TStackBuffer<char, 512ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c82b4 (   0x13c) std::__1::vector<char, std::__1::allocator<char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c83f0 (    0x18) std::__1::vector<char, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8408 (    0x34) TCFRetained<__CFNumber const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c843c (    0x34) TCFRetained<__CFString*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8470 (    0x34) TCFRetained<__CFLocale const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c84a4 (    0x34) TCFRetained<__CFDateFormatter*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c84d8 (    0x34) TCFArray<__CFString const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c850c (   0x144) CFMutableArray_back_insert_iterator<void const*> std::__1::__merge[abi:v160006]<TCFComparatorFunctor<-1l>&, CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFMutableArray_back_insert_iterator<void const*>>(CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFMutableArray_back_insert_iterator<void const*>, TCFComparatorFunctor<-1l>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8650 (    0x7c) std::__1::pair<CFArray_iterator<void const*>, CFMutableArray_back_insert_iterator<void const*>> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFMutableArray_back_insert_iterator<void const*>>(CFArray_iterator<void const*>, CFArray_iterator<void const*>, CFMutableArray_back_insert_iterator<void const*>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c86cc (    0x98) TStackBuffer<unsigned char, 256ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8764 (   0x1ac) TCGFont::TCGFont(__CFURL const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8910 (     0x4) TCGFont::TCGFont(__CFURL const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8914 (    0x5c) TCGFont::TCGFont(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8970 (     0x4) TCGFont::TCGFont(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8974 (   0x1dc) TCGFont::CopyPostScriptNameFromURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8b50 (    0xfc) TCGFont::IsInMemoryURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8c4c (    0x34) TCFArray<CGFont*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8c80 (    0x70) TFontRegistry::DistributedFontChangedCallback(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8cf0 (   0x108) TFontRegistryImp::EnableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8df8 (   0x108) TFontRegistryImp::DisableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c8f00 (   0x20c) TFontRegistryImp::SearchIndexForRequest(__CFString const*, TCFMutableDictionary&, TCFMutableSet&, bool&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c910c (   0x398) TFontRegistryImp::SearchIndexedFontsForRequest(TCFMutableDictionary&, TCFMutableSet&, bool&, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94a4 (     0x4) TFontRegistryProtocol::ResetRegistry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94a8 (     0x8) TFontRegistryImp::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94b0 (     0x8) TFontRegistryImp::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94b8 (     0x8) TFontRegistryImp::CreateFontProviderLocalRunLoopSource(long, __CFArray const* (__CFDictionary const*, int) block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94c0 (     0x8) TFontRegistryImp::CopyRemoteFontProviderEndpoints() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94c8 (     0x4) TFontRegistryImp::EnsureFontFileAccess(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94cc (     0x8) TFontRegistryImp::CopyEnabledFontRefs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94d4 (     0x8) TFontRegistryImp::CopyDisabledFontRefs(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94dc (     0x8) TFontRegistryImp::CopyUnregisteredFontRefs(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94e4 (     0x8) TFontRegistryImp::CopyStubFontRefs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c94ec (    0x34) TCFRetained<__CFArray const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9520 (    0x34) TCFRetained<__CFDictionary const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9554 (    0x34) TCFRetained<__CFRunLoopTimer*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9588 (    0x34) TCFRetained<__CFSet const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c95bc (    0x2c) std::__1::vector<__CFString const*, std::__1::allocator<__CFString const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c95e8 (   0x114) std::__1::vector<__CFString const*, std::__1::allocator<__CFString const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c96fc (    0x18) std::__1::vector<__CFString const*, std::__1::allocator<__CFString const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9714 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__CFString const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__CFString const*>>(std::__1::allocator<__CFString const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c974c (    0x48) CreateTheLocaleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9794 (    0x54) TLocaleManager::TLocaleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c97e8 (    0x34) TLocaleManager::~TLocaleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c981c (     0x8) TLocaleManager::CopyLanguagesFromCharacterSet(__CFCharacterSet const*, __CFArray const*, __CFSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9824 (   0x184) TLocaleManagerImp::CopyLanguagesFromCharacterSet(__CFCharacterSet const*, __CFArray const*, __CFSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c99a8 (    0xa4) TLocaleManagerImp::TLocaleManagerImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9a4c (   0x13c) TLocaleManagerImp::CopyExamplarSetForLanguage(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9b88 (    0x40) TLocaleManagerImp::CopyCachedExamplarSet(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9bc8 (   0x120) TLocaleManagerImp::GetSupportedLanguages() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9ce8 (    0x50) TCFMutableSet::TCFMutableSet(__CFSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9d38 (   0x19c) TCFSet<void const*>::CreateSortedArray(CFComparisonResult (*)(void const*, void const*, void*), void*, CFArrayCallBacks const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9ed4 (    0x6c) TCFMutableSet::TCFMutableSet(__CFArray const*, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9f40 (    0x68) TCFMutableArray::Sort(CFComparisonResult (*)(void const*, void const*, void*), void*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9fa8 (    0x34) TCFRetained<__CFCharacterSet const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889c9fdc (    0x84) WeightOfClass(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ca060 (    0xc0) std::__1::pair<unsigned short, unsigned short> IndexesBracketing<float const*, double>(float const*, float const*, double, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ca120 (    0x88) ClassOfWidthPercent(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ca1a8 (   0x6a0) CreateTraitsWithVariation(__CFDictionary const*, __CFDictionary const*, __CFArray const*, __CFString const*, __CFNumber const**, __CFNumber const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ca848 (    0xac) bool TCFNumber::GetCFNumberValueSafely<unsigned int>(__CFNumber const*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ca8f4 (   0x274) DetermineVariationValue(eStandardVariationAxisKey, __CFDictionary const*, __CFDictionary const*, __CFNumber const**, __CFNumber const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cab68 (    0xac) bool TCFNumber::GetCFNumberValueSafely<double>(__CFNumber const*, double&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cac14 (   0x1ac) CreateTraitsByStyleGlossaryString(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cadc0 (   0x1dc) TFontTraits::CreateTraitsDictionary(MetadataFlag*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889caf9c (    0x34) TCFData::~TCFData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cafd0 (    0x34) TCFRetained<__CFData const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb004 (    0xac) bool TCFNumber::GetCFNumberValueSafely<unsigned short>(__CFNumber const*, unsigned short&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb0b0 (    0x74) OS2::OS2(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb124 (     0x4) OS2::OS2(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb128 (   0x1cc) OS2::CopySupportedLanguages(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb2f4 (    0x94) invocation function for block in OS2::CopySupportedLanguages(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb388 (    0xc0) OS2::CopySupportedLanguagesFromCharacterSet(__CFCharacterSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb448 (   0x134) HasCharacterInRange(CFCharacterSetInlineBuffer const*, TUnicodeRange) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb57c (    0xa4) OS2::GetRangeForCharacter(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb620 (   0x200) OS2::GetUnicodeRangesFromCharacterSet(__CFCharacterSet const*, OS2::TUnicodeRanges&, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb820 (    0xa4) cmapTable::GetMacintoshEncodings() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb8c4 (    0x40) cmapTable::GetStringEncoding() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb904 (    0x5c) TDownloadableFontManager::TDownloadableFontManager(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb960 (    0x58) TDownloadableFontManager::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cb9b8 (   0x144) TDownloadableFontManager::ShouldPreventDownloadingFonts() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbafc (   0x2d0) TDownloadableFontManager::AddRequest(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbdcc (     0x4) TDownloadableFontManager::TDownloadableFontManager(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbdd0 (    0x94) TDownloadableFontManager::TDownloadableFontManager(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbe64 (     0x4) TDownloadableFontManager::TDownloadableFontManager(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbe68 (   0x194) TDownloadableFontManager::ShouldPreventDownloadingFontsForRequest(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cbffc (    0xb4) TDownloadableFontManager::GetPropertiesToFetch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc0b0 (    0x40) TDownloadableFontManager::~TDownloadableFontManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc0f0 (    0xd0) TDownloadableFontManager::ShortVersionStringIsEqualToOrLessThan(__CFBundle*, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc1c0 (    0x24) invocation function for block in TDownloadableFontManager::lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc1e4 (    0x40) invocation function for block in TDownloadableFontManager::GetPropertiesToFetch() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc224 (    0xc8) TDownloadableFontManager::Download() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc2ec (    0x94) TDownloadableFontManager::DownloadWithProgressHandler(bool (unsigned int, __CFDictionary const*) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc380 (    0x38) invocation function for block in TDownloadableFontManager::AutoDownloadableNames() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc3b8 (    0x34) TCFRetained<void const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc3ec (    0x34) TCFArray<__CFDictionary const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc420 (    0x80) void TCFNumber::GetCFNumberValue<bool>(__CFNumber const*, bool&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cc4a0 (   0xdc8) TFontMetadata::CreateMetadata(__CFURL const*, CGFont*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd268 (    0x68) TCFRetained<__CFDictionary const*>::Retain(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd2d0 (    0x48) void TCFNumber::GetCFNumberValue<unsigned long>(__CFNumber const*, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd318 (    0x68) TCFRetained<__CFString const*>::Retain(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd380 (     0x8) invocation function for block in TFontMetadata::CreateMetadata(__CFURL const*, CGFont*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd388 (    0x70) TFontMetadata::CreateMetadataForCGFont(CGFont*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd3f8 (    0x3c) TFontMetadata::TFontMetadata(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd434 (    0x34) TFontMetadata::TFontMetadata(CGFont*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd468 (    0x98) TFontMetadata::GetStringEncoding() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd500 (    0xf0) WeakLinked::ATSFontGetContainer(unsigned int, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd5f0 (    0xfc) WeakLinked::ATSFontFindFromContainer(unsigned int, unsigned int, unsigned long, unsigned int*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd6ec (    0xa0) TFontRegistryImp::TFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd78c (    0xb8) TLocalFontRegistryImp::~TLocalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd844 (     0x4) TLocalFontRegistryImp::~TLocalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd848 (    0x28) TLocalFontRegistryImp::~TLocalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cd870 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001889cd880 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001889cd8a0 (   0x178) TLocalFontRegistryImp::AddAllFontsToIndex(TFontIndexProtocol const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cda18 (   0x2cc) TLocalFontRegistryImp::AddFontToIndex(TFontIndexProtocol const*, unsigned int, CGFont*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cdce4 (    0x60) TLocalFontRegistryImp::AddFontToIndexes(unsigned int, CGFont*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cdd44 (   0x2e4) TLocalFontRegistryImp::RemoveFontFromIndex(TFontIndexProtocol const*, unsigned int, CGFont*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ce028 (   0x45c) TLocalFontRegistryImp::MoveFileToStableStorage(__CFURL const*, __CFURL const*&, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ce484 (   0x8f0) TLocalFontRegistryImp::RegisterFont(__CFURL const*, __CFDictionary const*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ced74 (   0x134) TLocalFontRegistryImp::RegisterDataFont(__CFData const*, unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ceea8 (    0xb4) TLocalFontRegistryImp::RegisterCGFont(CGFont*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cef5c (   0x1f4) TLocalFontRegistryImp::RegisterFonts(__CFArray const*, __CFDictionary const*, unsigned int, unsigned int, __CFArray const**, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cf150 (   0x298) TLocalFontRegistryImp::UnregisterFont(__CFURL const*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cf3e8 (   0x270) TLocalFontRegistryImp::UnregisterDataFont(__CFData const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cf658 (   0x2ac) TLocalFontRegistryImp::UnregisterCGFont(CGFont*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cf904 (   0x194) TLocalFontRegistryImp::UnregisterFonts(__CFArray const*, unsigned int, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cfa98 (   0x2f4) TLocalFontRegistryImp::EnableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889cfd8c (   0x32c) TLocalFontRegistryImp::DisableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d00b8 (     0x4) TLocalFontRegistryImp::CopyFontForName(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d00bc (   0x5f4) __CFURL const* TFontRegistryImp::CopyFontForNameCommon<TLocalFontRegistryImp, TClientFontEntity>(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d06b0 (   0x1a4) TLocalFontRegistryImp::GetDataFont(__CFData const*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d0854 (   0x25c) TLocalFontRegistryImp::GetDataFontATSFont(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d0ab0 (    0x8c) TStackBuffer<unsigned int, 30ul>::SetCount(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d0b3c (   0x240) TLocalFontRegistryImp::CopyURLForDataFont(__CFData const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d0d7c (   0x4a0) TLocalFontRegistryImp::CopyFontsForURL(__CFURL const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d121c (    0xa0) TLocalFontRegistryImp::CopyFontForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d12bc (   0x108) TLocalFontRegistryImp::CopyEnabledFontRefs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d13c4 (   0x108) TLocalFontRegistryImp::CopyDisabledFontRefs(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d14cc (     0x8) TLocalFontRegistryImp::CopyStubFontRefs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d14d4 (   0x1b0) TLocalFontRegistryImp::CopyFontsForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d1684 (   0x710) __CFArray const* TFontRegistryImp::CopyFontRefsForRequest<TLocalFontRegistryImp, TClientFontEntity>(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d1d94 (    0x60) TLocalFontRegistryImp::GetPossiblyDisabledFont(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d1df4 (   0x2a8) TLocalFontRegistryImp::CopyPropertiesForFontsMatchingRequest(__CFDictionary const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d209c (   0x20c) TLocalFontRegistryImp::CopyPropertiesForAllFonts(__CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d22a8 (    0x70) TLocalFontLookup::GetCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d2318 (    0x8c) TLocalFontLookup::GetKeysAndValues(void const**, void const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d23a4 (   0x188) TLocalFontRegistryImp::CopyPropertiesForFonts(__CFArray const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d252c (   0x934) TLocalFontRegistryImp::CopyPropertyForFonts(__CFArray const*, __CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d2e60 (   0x80c) TLocalFontRegistryImp::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d366c (     0x8) TLocalFontRegistryImp::ExperimentalDataFunnel(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d3674 (   0x244) TLocalFontRegistryImp::CopyAvailableFontNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d38b8 (   0x244) TLocalFontRegistryImp::CopyAvailableFontFamilyNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d3afc (   0x1f8) TLocalFontRegistryImp::CopyAvailableFontURLs(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d3cf4 (   0x2a0) TLocalFontRegistryImp::CopyFamilyNamesForLanguage(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d3f94 (    0x54) TCFDeque<__CFString const*>::Contains(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d3fe8 (   0x470) TLocalFontRegistryImp::CopyDuplicateFonts(TFontQueryOptions const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4458 (     0x4) TLocalFontRegistryImp::CopyLocalizedNameForFonts(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d445c (   0x398) __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TLocalFontRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d47f4 (   0x160) TLocalFontRegistryImp::IsFontRegistered(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4954 (   0x1b4) TLocalFontRegistryImp::IsFontEnabled(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4b08 (    0xf4) TLocalFontRegistryImp::GetFontScope(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4bfc (    0xf8) TLocalFontRegistryImp::GetFontPriority(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4cf4 (   0x268) TLocalFontRegistryImp::GetFontReference(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4f5c (     0x8) TLocalFontRegistryImp::CopyFontDirectoryURL(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d4f64 (   0x12c) TLocalFontRegistryImp::CopyFontForCharacter(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5090 (   0x394) unsigned int TFontRegistryImp::GetFontRefForCharacter<TLocalFontRegistryImp, TClientFontEntity>(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5424 (    0x24) TLocalFontRegistryImp::GetFontToken(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5448 (    0x9c) TLocalFontRegistryImp::CopyFontURLWithFontToken(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d54e4 (    0x9c) TLocalFontRegistryImp::CopyConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5580 (    0x4c) TGlobalFontRegistryImp::~TGlobalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d55cc (     0x4) TGlobalFontRegistryImp::~TGlobalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d55d0 (    0x28) TGlobalFontRegistryImp::~TGlobalFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d55f8 (    0x28) invocation function for block in TGlobalFontRegistryImp::InitXPC() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5620 (   0x254) TGlobalFontRegistryImp::RendezvousWithServer(bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5874 (   0x17c) TGlobalFontRegistryImp::RegisterFont(__CFURL const*, __CFDictionary const*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d59f0 (   0x5c8) TGlobalFontRegistryImp::RegisterFonts(__CFArray const*, __CFDictionary const*, unsigned int, unsigned int, __CFArray const**, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d5fb8 (   0x474) TGlobalFontRegistry::CopyRegistrationPropertiesForFont(__CFURL const*, bool, __CFError**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d642c (   0x11c) TGlobalFontRegistryImp::UnregisterFont(__CFURL const*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d6548 (    0x7c) TGlobalFontRegistryImp::UnregisterFonts(__CFArray const*, unsigned int, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d65c4 (    0x20) TGlobalFontRegistryImp::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d65e4 (    0x14) TGlobalFontRegistryImp::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d65f8 (    0x14) TGlobalFontRegistryImp::EnableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d660c (    0x14) TGlobalFontRegistryImp::DisableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d6620 (    0x10) TGlobalFontRegistryImp::EnableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d6630 (    0x10) TGlobalFontRegistryImp::DisableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d6640 (    0x98) TGlobalFontRegistryImp::CopyFontForName(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d66d8 (    0x94) TGlobalFontRegistryImp::CopyFontsForURL(__CFURL const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d676c (    0xa0) TGlobalFontRegistryImp::CopyFontForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d680c (    0x14) TGlobalFontRegistryImp::CopyFontsForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d6820 (    0x1c) TGlobalFontRegistryImp::CopyPropertiesForFontsMatchingRequest(__CFDictionary const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d683c (   0xf94) TGlobalFontRegistryImp::CopyPropertiesForOneFontFromStreams(__CFSet const*, TDataStreams&, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d77d0 (    0x84) ExtractCFTypeFromDataStreamString(__CFString const*, XTDataStream*, TCFMutableDictionary&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d7854 (    0x84) ExtractCFTypeFromDataStreamUInt32(__CFString const*, XTDataStream*, TCFMutableDictionary&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d78d8 (    0x80) ExtractCFTypeFromDataStreamDouble(__CFString const*, XTDataStream*, TCFMutableDictionary&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d7958 (   0x1dc) TGlobalFontRegistryImp::CopyPropertiesFromServerDictionaryForScope(__CFSet const*, __CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d7b34 (    0xac) bool TCFNumber::GetCFNumberValueSafely<long>(__CFNumber const*, long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d7be0 (   0x210) TGlobalFontRegistryImp::CopyPropertyDictionaryFromServerDictionaryForScope(__CFSet const*, __CFArray const*, __CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d7df0 (   0x2ac) TGlobalFontRegistryImp::CopyPropertiesForAllFonts(__CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d809c (   0x298) TGlobalFontRegistryImp::CopyPropertiesForFonts(__CFArray const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8334 (   0x148) TGlobalFontRegistryImp::CopyPropertyFromStaticRegistry(__CFString const*, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d847c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001889d84a0 (   0x1e0) TGlobalFontRegistryImp::CopyPropertyForFonts(__CFArray const*, __CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8680 (   0x244) TGlobalFontRegistryImp::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d88c4 (    0x14) TGlobalFontRegistryImp::ExperimentalDataFunnel(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d88d8 (    0x10) TGlobalFontRegistryImp::CopyAvailableFontNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d88e8 (    0x10) TGlobalFontRegistryImp::CopyAvailableFontFamilyNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d88f8 (    0x10) TGlobalFontRegistryImp::CopyAvailableFontURLs(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8908 (    0x14) TGlobalFontRegistryImp::CopyFamilyNamesForLanguage(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d891c (    0x14) TGlobalFontRegistryImp::CopyDuplicateFonts(TFontQueryOptions const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8930 (   0x25c) TGlobalFontRegistryImp::CopyLocalizedNameForFonts(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8b8c (   0x398) __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TGlobalFontRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d8f24 (    0xe8) TGlobalFontRegistryImp::IsFontRegistered(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d900c (    0xf0) TGlobalFontRegistryImp::IsFontEnabled(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d90fc (    0x10) TGlobalFontRegistryImp::GetFontScope(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d910c (    0xf0) TGlobalFontRegistryImp::GetFontPriority(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d91fc (    0xf0) TGlobalFontRegistryImp::GetFontReference(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d92ec (    0xf4) TGlobalFontRegistryImp::CopyFontDirectoryURL(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d93e0 (    0x10) TGlobalFontRegistryImp::EnsureFontFileAccess(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d93f0 (    0x14) TGlobalFontRegistryImp::CopyFontForCharacter(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9404 (    0x10) TGlobalFontRegistryImp::GetFontToken(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9414 (    0x9c) TGlobalFontRegistryImp::CopyConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d94b0 (     0xc) TGlobalFontRegistryImp::ResetRegistry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d94bc (    0x10) TGlobalFontRegistryImp::CopyFontURLWithFontToken(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d94cc (    0x64) TGlobalFontRegistryImp::CreateFontProviderLocalRunLoopSource(long, __CFArray const* (__CFDictionary const*, int) block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9530 (     0xc) TGlobalFontRegistryImp::CopyRemoteFontProviderEndpoints() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d953c (    0x14) XTClientFontRegistryNotifyFontChange(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9550 (   0x1f0) TLocalFontRegistry::RegisterFontsForDirectory(TLocalFontRegistryImp&, TCFURL const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9740 (    0x28) TLocalFontRegistry::~TLocalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9768 (    0x28) TLocalFontRegistry::CopyFontForName(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9790 (    0x28) TLocalFontRegistry::CopyFontsForURL(__CFURL const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d97b8 (    0x28) TLocalFontRegistry::CopyFontForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d97e0 (    0x28) TLocalFontRegistry::CopyFontsForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9808 (    0x28) TLocalFontRegistry::CopyPropertiesForFontsMatchingRequest(__CFDictionary const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9830 (    0x28) TLocalFontRegistry::CopyPropertiesForAllFonts(__CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9858 (    0x28) TLocalFontRegistry::CopyPropertiesForFonts(__CFArray const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9880 (    0x28) TLocalFontRegistry::CopyPropertyForFonts(__CFArray const*, __CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d98a8 (    0x28) TLocalFontRegistry::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d98d0 (    0x28) TLocalFontRegistry::ExperimentalDataFunnel(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d98f8 (    0x28) TLocalFontRegistry::CopyAvailableFontNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9920 (    0x28) TLocalFontRegistry::CopyAvailableFontFamilyNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9948 (    0x28) TLocalFontRegistry::CopyAvailableFontURLs(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9970 (    0x28) TLocalFontRegistry::CopyFamilyNamesForLanguage(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9998 (    0x28) TLocalFontRegistry::CopyDuplicateFonts(TFontQueryOptions const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d99c0 (    0x28) TLocalFontRegistry::CopyLocalizedNameForFonts(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d99e8 (    0x28) TLocalFontRegistry::RegisterFont(__CFURL const*, __CFDictionary const*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9a10 (    0x30) TLocalFontRegistry::RegisterDataFont(__CFData const*, unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9a40 (    0x30) TLocalFontRegistry::RegisterCGFont(CGFont*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9a70 (    0x28) TLocalFontRegistry::RegisterFonts(__CFArray const*, __CFDictionary const*, unsigned int, unsigned int, __CFArray const**, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9a98 (    0x28) TLocalFontRegistry::UnregisterFont(__CFURL const*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9ac0 (    0x30) TLocalFontRegistry::UnregisterDataFont(__CFData const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9af0 (    0x30) TLocalFontRegistry::UnregisterCGFont(CGFont*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9b20 (    0x28) TLocalFontRegistry::UnregisterFonts(__CFArray const*, unsigned int, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9b48 (    0x34) TLocalFontRegistry::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9b7c (    0x30) TLocalFontRegistry::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9bac (    0x30) TLocalFontRegistry::EnableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9bdc (    0x30) TLocalFontRegistry::DisableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9c0c (    0x28) TLocalFontRegistry::EnableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9c34 (    0x28) TLocalFontRegistry::DisableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9c5c (    0x30) TLocalFontRegistry::GetDataFont(__CFData const*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9c8c (    0x30) TLocalFontRegistry::GetDataFontATSFont(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9cbc (    0x30) TLocalFontRegistry::CopyURLForDataFont(__CFData const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9cec (    0x28) TLocalFontRegistry::IsFontRegistered(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9d14 (    0x28) TLocalFontRegistry::IsFontEnabled(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9d3c (    0x28) TLocalFontRegistry::GetFontScope(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9d64 (    0x28) TLocalFontRegistry::GetFontPriority(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9d8c (    0x28) TLocalFontRegistry::GetFontReference(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9db4 (    0x28) TLocalFontRegistry::CopyFontDirectoryURL(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9ddc (    0x28) TLocalFontRegistry::CopyFontForCharacter(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9e04 (    0x28) TLocalFontRegistry::GetFontToken(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9e2c (    0x30) TLocalFontRegistry::CopyFontURLWithFontToken(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9e5c (    0x30) TLocalFontRegistry::CopyConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889d9e8c (   0x378) TGlobalFontRegistry::RegisterSystemFontsLocally(TFontRegistryProtocol&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da204 (    0x6c) TGlobalFontRegistry::RegisterSystemFontsLocally(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da270 (    0xa4) CreateStaticRegistry(NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da314 (    0xac) bool TCFNumber::GetCFNumberValueSafely<unsigned char>(__CFNumber const*, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da3c0 (   0x28c) TGlobalFontRegistry::RecreateRegistryWithGlobalFontRegistry(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da64c (    0x30) TGlobalFontRegistry::CopyConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da67c (     0x4) TGlobalFontRegistry::~TGlobalFontRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da680 (   0x13c) TGlobalFontRegistry::CopyFontForName(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da7bc (   0x134) TGlobalFontRegistry::CopyFontsForURL(__CFURL const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889da8f0 (   0x1a4) TGlobalFontRegistry::CopyFontForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889daa94 (   0x134) TGlobalFontRegistry::CopyFontsForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dabc8 (    0x28) TGlobalFontRegistry::CopyPropertiesForFontsMatchingRequest(__CFDictionary const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dabf0 (    0x28) TGlobalFontRegistry::CopyPropertiesForAllFonts(__CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dac18 (    0x28) TGlobalFontRegistry::CopyPropertiesForFonts(__CFArray const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dac40 (    0x28) TGlobalFontRegistry::CopyPropertyForFonts(__CFArray const*, __CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dac68 (    0x28) TGlobalFontRegistry::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dac90 (    0x28) TGlobalFontRegistry::ExperimentalDataFunnel(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dacb8 (    0xe0) TGlobalFontRegistry::CopyAvailableFontNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dad98 (    0xe0) TGlobalFontRegistry::CopyAvailableFontFamilyNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dae78 (    0xe0) TGlobalFontRegistry::CopyAvailableFontURLs(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889daf58 (    0xf0) TGlobalFontRegistry::CopyFamilyNamesForLanguage(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db048 (    0x28) TGlobalFontRegistry::CopyLocalizedNameForFonts(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db070 (    0x28) TGlobalFontRegistry::CopyDuplicateFonts(TFontQueryOptions const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db098 (    0x2c) TGlobalFontRegistry::RegisterFont(__CFURL const*, __CFDictionary const*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db0c4 (    0x2c) TGlobalFontRegistry::RegisterFonts(__CFArray const*, __CFDictionary const*, unsigned int, unsigned int, __CFArray const**, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db0f0 (    0x28) TGlobalFontRegistry::UnregisterFont(__CFURL const*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db118 (    0x28) TGlobalFontRegistry::UnregisterFonts(__CFArray const*, unsigned int, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db140 (    0x34) TGlobalFontRegistry::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db174 (    0x30) TGlobalFontRegistry::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db1a4 (    0x30) TGlobalFontRegistry::EnableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db1d4 (    0x30) TGlobalFontRegistry::DisableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db204 (    0x28) TGlobalFontRegistry::EnableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db22c (    0x28) TGlobalFontRegistry::DisableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db254 (    0x28) TGlobalFontRegistry::IsFontRegistered(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db27c (    0x28) TGlobalFontRegistry::IsFontEnabled(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db2a4 (    0x28) TGlobalFontRegistry::GetFontScope(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db2cc (    0x28) TGlobalFontRegistry::GetFontPriority(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db2f4 (    0x28) TGlobalFontRegistry::GetFontReference(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db31c (    0x28) TGlobalFontRegistry::CopyFontDirectoryURL(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db344 (   0x178) TGlobalFontRegistry::CopyFontForCharacter(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db4bc (    0x28) TGlobalFontRegistry::GetFontToken(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db4e4 (    0x30) TGlobalFontRegistry::CopyFontURLWithFontToken(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db514 (    0x30) TGlobalFontRegistry::ResetRegistry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db544 (    0x30) TGlobalFontRegistry::CreateFontProviderLocalRunLoopSource(long, __CFArray const* (__CFDictionary const*, int) block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db574 (    0x30) TGlobalFontRegistry::CopyRemoteFontProviderEndpoints() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db5a4 (    0x10) TGlobalFontRegistry::AddFontProviderEndpoint(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db5b4 (    0x10) TGlobalFontRegistry::RemoveFontProviderEndpoint(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db5c4 (    0x30) TGlobalFontRegistry::EnsureFontFileAccess(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db5f4 (    0x88) TGlobalStaticRegistryImp::~TGlobalStaticRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db67c (     0x4) TGlobalStaticRegistryImp::~TGlobalStaticRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db680 (    0x28) TGlobalStaticRegistryImp::~TGlobalStaticRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db6a8 (     0x4) TGlobalStaticRegistryImp::CopyFontForName(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889db6ac (   0x61c) __CFURL const* TFontRegistryImp::CopyFontForNameCommon<TGlobalStaticRegistryImp, TGlobalStaticFontEntity>(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dbcc8 (    0x24) TGlobalStaticRegistryImp::CopyFontsForURL(__CFURL const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dbcec (    0x58) TGlobalStaticRegistryImpNotImplemented(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dbd44 (    0x24) TGlobalStaticRegistryImp::CopyFontForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dbd68 (   0x174) TGlobalStaticRegistryImp::CopyFontsForRequest(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dbedc (   0x77c) __CFArray const* TFontRegistryImp::CopyFontRefsForRequest<TGlobalStaticRegistryImp, TGlobalStaticFontEntity>(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dc658 (   0x3a0) TGlobalStaticRegistryImp::CopyFontForCharacter(unsigned int, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dc9f8 (   0x32c) TStaticFontCharactersIndex::CopyFontsForCharacter(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dcd24 (    0x44) TGlobalStaticFontEntity::~TGlobalStaticFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dcd68 (   0x14c) TGlobalStaticRegistryImp::CopyPropertiesForFontsMatchingRequest(__CFDictionary const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dceb4 (    0x24) TGlobalStaticRegistryImp::CopyPropertiesForAllFonts(__CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dced8 (    0x24) TGlobalStaticRegistryImp::ExperimentalDataFunnel(__CFDictionary const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dcefc (    0xcc) TGlobalStaticRegistryImp::CopyFontProperty(unsigned int, __CFString const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dcfc8 (   0x23c) TGlobalStaticRegistryImp::CopyFontProperties(unsigned int, __CFSet const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd204 (   0x10c) TGlobalStaticRegistryImp::CopyEnabledFontRefs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd310 (   0x124) TGlobalStaticRegistryImp::CopyUnregisteredFontRefs(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd434 (   0x188) TGlobalStaticRegistryImp::CopyPropertiesForFonts(__CFArray const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd5bc (   0x1e8) TGlobalStaticRegistryImp::CopyPropertyForFonts(__CFArray const*, __CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd7a4 (    0xe0) TGlobalStaticRegistryImp::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd884 (    0xb0) TGlobalStaticRegistryImp::CopyAvailableFontNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dd934 (   0x1b8) TGlobalStaticRegistryImp::CopyAvailableFontFamilyNames(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddaec (    0x7c) TGlobalStaticRegistryImp::CopyAvailableFontURLs(TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddb68 (    0x24) TGlobalStaticRegistryImp::CopyFamilyNamesForLanguage(__CFString const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddb8c (     0x4) TGlobalStaticRegistryImp::CopyLocalizedNameForFonts(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddb90 (   0x398) __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TGlobalStaticRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddf28 (    0x24) TGlobalStaticRegistryImp::CopyDuplicateFonts(TFontQueryOptions const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddf4c (    0x24) TGlobalStaticRegistryImp::RegisterFont(__CFURL const*, __CFDictionary const*, unsigned int, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddf70 (    0x24) TGlobalStaticRegistryImp::RegisterFonts(__CFArray const*, __CFDictionary const*, unsigned int, unsigned int, __CFArray const**, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddf94 (    0x24) TGlobalStaticRegistryImp::UnregisterFont(__CFURL const*, unsigned int, __CFError**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddfb8 (    0x24) TGlobalStaticRegistryImp::UnregisterFonts(__CFArray const*, unsigned int, __CFArray const**, __CFArray const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ddfdc (    0x24) TGlobalStaticRegistryImp::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de000 (    0x24) TGlobalStaticRegistryImp::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de024 (    0x24) TGlobalStaticRegistryImp::EnableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de048 (    0x24) TGlobalStaticRegistryImp::DisableFonts(__CFArray const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de06c (    0x24) TGlobalStaticRegistryImp::EnableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de090 (    0x24) TGlobalStaticRegistryImp::DisableFont(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de0b4 (    0x24) TGlobalStaticRegistryImp::IsFontRegistered(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de0d8 (    0x24) TGlobalStaticRegistryImp::IsFontEnabled(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de0fc (    0x24) TGlobalStaticRegistryImp::GetFontScope(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de120 (    0x24) TGlobalStaticRegistryImp::GetFontPriority(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de144 (    0x24) TGlobalStaticRegistryImp::GetFontReference(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de168 (    0x24) TGlobalStaticRegistryImp::CopyFontDirectoryURL(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de18c (     0xc) TGlobalStaticRegistryImp::GetFontToken(__CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de198 (    0x3c) TGlobalStaticRegistryImp::CopyFontURLWithFontToken(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de1d4 (    0x9c) TGlobalStaticRegistryImp::CopyConfiguration() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de270 (   0x2cc) TGlobalStaticRegistryImp::GetIndex(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de53c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001889de55c (    0xf0) TGlobalStaticRegistryImp::GetIndexForProperty(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de64c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001889de65c (    0xcc) TGlobalStaticFontEntity::GetPropertyValue(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de728 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001889de74c (    0x90) TGlobalStaticFontEntity::CopyURL() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de7dc (     0xc) TStaticFontIndex::AddFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de7e8 (     0xc) TStaticFontIndex::RemoveFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de7f4 (   0x1c0) TStaticFontIndex::CopyFontsForKey(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de9b4 (     0xc) TStaticFontIndex::RemoveFontForAllKeys(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de9c0 (    0x24) TStaticFontIndex::CopyAllKeys() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889de9e4 (    0x70) TStaticFontIndex::TStaticFontIndex(TGlobalStaticRegistryImp const*, NSString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dea54 (   0x1c0) TStaticFontNumberToFontRefIndex::CopyFontsForKey(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec14 (     0xc) TStaticFontNumberToFontRefIndex::AddFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec20 (     0xc) TStaticFontNumberToFontRefIndex::RemoveFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec2c (     0xc) TStaticFontNumberToFontRefIndex::RemoveFontForAllKeys(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec38 (    0x54) TGlobalStaticFontEntity::~TGlobalStaticFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec8c (     0x8) TLocalFontRegistryImp::RegisterFontDirectory(__CFURL const*, __CFData const*, unsigned int, unsigned int, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec94 (     0x8) TLocalFontRegistryImp::UnregisterFontDirectory(__CFURL const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dec9c (     0xc) TLocalFontRegistryImp::GetIndexCount(unsigned short&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889deca8 (     0x8) TGlobalFontRegistryImp::SearchIndexedFontsForName(unsigned short, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889decb0 (     0x8) TGlobalFontRegistryImp::GetIndexCount(unsigned short&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889decb8 (     0x8) TGlobalFontRegistryImp::GetIndex(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889decc0 (     0x8) TGlobalFontRegistryImp::GetIndexForProperty(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889decc8 (     0x4) TFontRegistry::ResetRegistry() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889deccc (    0x1c) TGlobalStaticRegistryImp::SearchIndexedFontsForName(unsigned short, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dece8 (     0xc) TGlobalStaticRegistryImp::GetIndexCount(unsigned short&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889decf4 (    0x2c) invocation function for block in GetATSHandle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ded20 (    0x7c) TFontNameIndex::TFontNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ded9c (    0x54) TFontPostScriptNameIndex::~TFontPostScriptNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dedf0 (    0x58) TFontPostScriptNameIndex::~TFontPostScriptNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dee48 (     0xc) TFontIndex::GetIndexKeySetCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dee54 (     0xc) TFontIndex::GetIndexKeyArrayCallBacks() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dee60 (    0x5c) TFontIndex::~TFontIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889deebc (    0x54) TFontFamilyNameIndex::~TFontFamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889def10 (    0x58) TFontFamilyNameIndex::~TFontFamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889def68 (    0x54) TFontFullNameIndex::~TFontFullNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889defbc (    0x58) TFontFullNameIndex::~TFontFullNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df014 (    0x54) TFontSubfamilyNameIndex::~TFontSubfamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df068 (    0x58) TFontSubfamilyNameIndex::~TFontSubfamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df0c0 (    0x10) TFontSubfamilyNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df0d0 (    0x54) TFontPostScriptNameAliasesIndex::~TFontPostScriptNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df124 (    0x58) TFontPostScriptNameAliasesIndex::~TFontPostScriptNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df17c (    0x10) TFontPostScriptNameAliasesIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df18c (    0x54) TFontFamilyNameAliasesIndex::~TFontFamilyNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df1e0 (    0x58) TFontFamilyNameAliasesIndex::~TFontFamilyNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df238 (    0x10) TFontFamilyNameAliasesIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df248 (   0x104) void std::__1::vector<char, std::__1::allocator<char>>::assign<char*, 0>(char*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df34c (    0x44) std::__1::vector<char, std::__1::allocator<char>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df390 (    0x34) TCFRetained<__CFBoolean const*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df3c4 (    0x34) TCFRetained<__CFError*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df3f8 (    0x60) TCFMutableSet::TCFMutableSet(__CFSet const*, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df458 (    0xc8) TFontEntityComparisonContext::TFontEntityComparisonContext(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df520 (    0x18) TLocalFontRegistryImp::TFontRefSorter::StaticDereferenceAndCompareFontRefs(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df538 (    0xbc) TLocalFontRegistryImp::TFontRefSorter::CompareFontRefs(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df5f4 (    0x34) TCFRetained<__CFData*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889df628 (   0x4a0) TDataStreams::TDataStreams(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfac8 (    0x7c) TXTDataStream::TXTDataStream(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfb44 (    0x34) TXTDataStream::~TXTDataStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfb78 (    0xd4) TDataStreams::~TDataStreams() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfc4c (    0x18) TGlobalStaticRegistryImp::TFontRefSorter::StaticDereferenceAndCompareFontRefs(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfc64 (   0x158) TGlobalStaticRegistryImp::TFontRefSorter::CompareFontRefs(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdbc (     0x4) TStaticFontPostScriptNameIndex::~TStaticFontPostScriptNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdc0 (     0x4) TStaticFontPostScriptNameIndex::~TStaticFontPostScriptNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdc4 (    0x10) TStaticFontPostScriptNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdd4 (     0x4) TStaticFontFamilyNameIndex::~TStaticFontFamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdd8 (     0x4) TStaticFontFamilyNameIndex::~TStaticFontFamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfddc (    0x10) TStaticFontFamilyNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdec (     0x4) TStaticFontFullNameIndex::~TStaticFontFullNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdf0 (     0x4) TStaticFontFullNameIndex::~TStaticFontFullNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfdf4 (    0x10) TStaticFontFullNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe04 (     0x4) TStaticFontSubfamilyNameIndex::~TStaticFontSubfamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe08 (     0x4) TStaticFontSubfamilyNameIndex::~TStaticFontSubfamilyNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe0c (    0x10) TStaticFontSubfamilyNameIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe1c (     0x4) TStaticFontPostScriptNameAliasesIndex::~TStaticFontPostScriptNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe20 (     0x4) TStaticFontPostScriptNameAliasesIndex::~TStaticFontPostScriptNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe24 (    0x10) TStaticFontPostScriptNameAliasesIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe34 (     0x4) TStaticFontFamilyNameAliasesIndex::~TStaticFontFamilyNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe38 (     0x4) TStaticFontFamilyNameAliasesIndex::~TStaticFontFamilyNameAliasesIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe3c (    0x10) TStaticFontFamilyNameAliasesIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe4c (     0x4) TStaticFontCharactersIndex::~TStaticFontCharactersIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe50 (     0x4) TStaticFontCharactersIndex::~TStaticFontCharactersIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe54 (    0x10) TStaticFontCharactersIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe64 (     0x4) TStaticFontFormatIndex::~TStaticFontFormatIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe68 (     0x4) TStaticFontFormatIndex::~TStaticFontFormatIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe6c (    0x10) TStaticFontFormatIndex::GetIndexedProperty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfe7c (    0x34) TCFArray<__CFURL const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfeb0 (    0x34) TCFSet<__CFString const*>::~TCFSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dfee4 (    0x2c) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889dff10 (   0x11c) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e002c (    0x18) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0044 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned long>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned long>>(std::__1::allocator<unsigned long>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e007c (    0x34) TCFSet<unsigned long>::~TCFSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e00b0 (   0x250) TFontQueryOptions::ShouldFilterFont(TFontEntity const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0300 (   0x2f8) __CFURL const* TFontRegistryImp::CopyFontForNameFromRefs<TLocalFontRegistryImp, TClientFontEntity>(TStackBuffer<void const*, 30ul>&, __CFString const*, __CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e05f8 (    0x2c) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0624 (   0x11c) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0740 (    0x18) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0758 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned int>>(std::__1::allocator<unsigned int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0790 (   0x10c) void std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::assign<unsigned int*, 0>(unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e089c (    0x44) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e08e0 (   0x25c) void TFontRegistryImp::CopyFontRefsWithPropertiesForRequest<TLocalFontRegistryImp, TClientFontEntity>(__CFDictionary const*, TStackBuffer<void const*, 30ul>&, TCFMutableSet&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0b3c (    0x2c) std::__1::vector<CGFont*, std::__1::allocator<CGFont*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0b68 (   0x114) std::__1::vector<CGFont*, std::__1::allocator<CGFont*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0c7c (    0x18) std::__1::vector<CGFont*, std::__1::allocator<CGFont*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0c94 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGFont*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGFont*>>(std::__1::allocator<CGFont*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0ccc (    0x6c) invocation function for block in __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TLocalFontRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0d38 (   0x108) unsigned int TFontRegistryImp::GetFontRefForCharacter<TLocalFontRegistryImp, TClientFontEntity>(unsigned int, TStackBuffer<void const*, 30ul>&, TFontQueryOptions const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0e40 (    0x34) TCFArray<__CFNumber const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0e74 (    0x6c) invocation function for block in __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TGlobalFontRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e0ee0 (   0x37c) __CFURL const* TFontRegistryImp::CopyFontForNameFromRefs<TGlobalStaticRegistryImp, TGlobalStaticFontEntity>(TStackBuffer<void const*, 30ul>&, __CFString const*, __CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e125c (   0x2d8) void TFontRegistryImp::CopyFontRefsWithPropertiesForRequest<TGlobalStaticRegistryImp, TGlobalStaticFontEntity>(__CFDictionary const*, TStackBuffer<void const*, 30ul>&, TCFMutableSet&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e1534 (    0x6c) invocation function for block in __CFDictionary const* TFontRegistryImp::CopyLocalizedNameForFontsCommon<TGlobalStaticRegistryImp>(__CFString const*, __CFArray const*, __CFArray const*, TFontQueryOptions const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e15a0 (   0x264) TFontEntity::CopyRegistrationProperties() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e1804 (   0x390) TFontEntity::MatchesVariations(__CFDictionary const*, __CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e1b94 (    0xac) bool TCFNumber::GetCFNumberValueSafely<int>(__CFNumber const*, int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e1c40 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001889e1ce4 (   0x11c) TCFSet<void const*>::IsSuperSetOfSet(__CFSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e1e00 (   0x250) TFontEntity::MatchesTraits(__CFDictionary const*, __CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2050 (   0x144) TFontEntity::MatchesCharacter(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2194 (   0x688) TFontEntity::CompareFontEntities(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e281c (   0x1f8) TFontEntity::CompareTraits(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2a14 (   0x3f4) TFontEntity::Compare(TFontEntity const&, TFontEntityComparisonContext*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2e08 (    0x10) TBasicFontEntity::GetPropertyValue(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2e18 (   0x114) TBasicFontEntity::CompareBasicFontInfo(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2f2c (    0x44) TBasicFontEntity::~TBasicFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2f70 (    0x54) TBasicFontEntity::~TBasicFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2fc4 (    0x34) TBasicFontEntity::CopyURL() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e2ff8 (    0x34) utf8CopyDescription(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e302c (    0x34) utf8Equal(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3060 (    0x68) utf8Hash(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e30c8 (   0x130) TCFStringUniquerImp::GetUniqueString(unsigned char const*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e31f8 (    0x64) TCFStringUniquer::CreateStringUniquer(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e325c (     0x4) TCFStringUniquer::GetUniqueString(unsigned char const*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3260 (    0x88) TStackBuffer<char, 128ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e32e8 (    0xf8) TClientFontEntity::TClientFontEntity(TLocalFontRegistryImp const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e33e0 (   0x100) TLocalFontRegistryImp::GetMetadataForFont(CGFont*, __CFURL const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e34e0 (    0x98) TClientFontEntity::StaticRegistryForFontURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3578 (     0x4) TClientFontEntity::TClientFontEntity(TLocalFontRegistryImp const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e357c (    0xf8) TClientFontEntity::TClientFontEntity(CGFont*, TLocalFontRegistryImp const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3674 (     0x4) TClientFontEntity::TClientFontEntity(CGFont*, TLocalFontRegistryImp const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3678 (    0x28) TClientFontEntity::~TClientFontEntity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e36a0 (   0x13c) TClientFontEntity::CopyPropertyFromStaticRegistry(__CFString const*, bool&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e37dc (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001889e3880 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001889e3924 (   0x32c) TClientFontEntity::CopyVariationAxes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3c50 (    0x34) TClientFontEntity::CopyVariations() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3c84 (   0x174) TClientFontEntity::CreateVariationDictFromGraphicsFont() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3df8 (    0x7c) TClientFontEntity::CopyBookmark() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3e74 (    0x38) TClientFontEntity::CopyAdditionalPostScriptNames() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e3eac (   0x294) TClientFontEntity::CopyVersionName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e4140 (   0x294) TClientFontEntity::CopyCopyrightName(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e43d4 (   0x44c) TClientFontEntity::CopyLocalizedName(__CFString const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e4820 (    0x60) TCFDeque<void const*>::FirstIndexOf(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e4880 (   0x168) TClientFontEntity::CopyLocalizedNames() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e49e8 (   0x2dc) AddLocalesToDictionary(TCFMutableDictionary&, __CFLocale const*, CGFontNameTable*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e4cc4 (   0x184) TClientFontEntity::CopyUnicodeRanges() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e4e48 (   0x2c8) TClientFontEntity::CopySupportedLanguages() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5110 (     0x8) SortLanguageCodes(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5118 (   0x200) TClientFontEntity::CopyDesignLanguages() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5318 (   0x190) TClientFontEntity::CopyPostScriptNameAliases() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e54a8 (    0xc8) TClientFontEntity::CopyFamilyNameAliases() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5570 (    0x78) TCFLazyMutableArray::Append(__CFArray const*, CFRange) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e55e8 (    0x10) TClientFontEntity::CopyUserInstalled() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e55f8 (    0x10) TClientFontEntity::CopyDownloadableStub() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5608 (   0x3ec) TClientFontEntity::CopyFormat() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e59f4 (    0xd0) TClientFontEntity::CopyStringEncoding() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5ac4 (    0x5c) TClientFontEntity::CopyIgnoreScriptAnalysis() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5b20 (    0xb4) TClientFontEntity::CopyLWFNURLs() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5bd4 (     0x8) TClientFontEntity::CopyUUID() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5bdc (    0xec) TClientFontEntity::CopyDuplicateRanking() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5cc8 (    0x40) TClientFontEntity::CopyGlyphCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e5d08 (   0x544) TClientFontEntity::GetFlags() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e624c (    0x74) TCFDeque<__CFString const*>::ApplyFunction(void (*)(void const*, void*), void*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e62c0 (    0x84) CheckPlatformDeliveryForFlagsAppleOwnedAndInvisible(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6344 (    0xe4) TClientFontEntity::CompareFontURLs(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6428 (    0x6c) invocation function for block in TClientFontEntity::StaticRegistryForFontURL(__CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6494 (     0x8) TClientFontEntity::CopyFont() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e649c (    0x68) TClientFontEntity::CopyFlags() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6504 (    0x34) TCFRetained<__CFArray*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6538 (    0x60) cmapTable::cmapTable(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6598 (    0x34) TCFRetained<CGFont*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e65cc (    0x34) TCFArray<__CFLocale const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6600 (    0x34) TCFArray<unsigned long>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6634 (    0x80) -[TFontProviderHandler initWithProvider:andConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e66b4 (    0x5c) -[TFontProviderHandler dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6710 (    0x50) -[TFontProviderHandler XTCopyFontsForRequest:reply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6760 (   0x1f8) -[TFontProviderHandler callFontProvider:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6958 (     0x8) -[TFontProviderHandler fConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6960 (     0x8) -[TFontProviderHandler setFConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6968 (     0x8) -[TFontProviderHandler fProvider] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6970 (     0xc) -[TFontProviderHandler setFProvider:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e697c (     0x8) -[TFontProviderHandler fRequest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6984 (     0x8) -[TFontProviderHandler setFRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e698c (     0x8) -[TFontProviderHandler fReply] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6994 (     0x8) -[TFontProviderHandler setFReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e699c (     0x8) -[TFontProviderHandler .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e69a4 (    0xb4) -[TFontProviderClientXPC initWithCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6a58 (    0x84) -[TFontProviderClientXPC dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6adc (     0x8) -[TFontProviderClientXPC resume] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6ae4 (    0x34) -[TFontProviderClientXPC setRunLoopSource:withCurrentRunLoop:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6b18 (    0xac) -[TFontProviderClientXPC addRequest:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6bc4 (    0x40) __37-[TFontProviderClientXPC addRequest:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6c04 (    0x50) __copy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6c54 (    0x44) __destroy_helper_block_e8_32o40o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6c98 (    0x54) -[TFontProviderClientXPC signal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6cec (    0xe4) -[TFontProviderClientXPC listener:shouldAcceptNewConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6dd0 (    0xa8) -[TFontProviderClientXPC callFontProvider] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6e78 (   0x100) __42-[TFontProviderClientXPC callFontProvider]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6f78 (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6f88 (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6f94 (     0x8) -[TFontProviderClientXPC fRequests] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6f9c (     0x8) -[TFontProviderClientXPC setFRequests:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6fa4 (     0x8) -[TFontProviderClientXPC fListener] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6fac (     0x8) -[TFontProviderClientXPC setFListener:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e6fb4 (    0x4c) TLocalFontProviderXPC::TLocalFontProviderXPC(__CFArray const* (__CFDictionary const*, int) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7000 (    0x4c) TLocalFontProviderXPC::~TLocalFontProviderXPC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e704c (     0x4) TLocalFontProviderXPC::~TLocalFontProviderXPC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7050 (    0x28) TLocalFontProviderXPC::~TLocalFontProviderXPC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7078 (    0x2c) invocation function for block in TLocalFontProviderXPC::GetQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e70a4 (    0xa4) TLocalFontProviderXPC::CreateRunLoopSource(long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7148 (     0x4) TLocalFontProviderXPCRunLoopSourceRelease(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e714c (     0x4) TLocalFontProviderXPCRunLoopSourcePerform(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7150 (   0x130) __CFArray const* CreateUniquedFlatArrayFromStackBuffer<__CFURL const*>(TStackBuffer<__CFURL const*, 30ul> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7280 (    0x98) TStackBuffer<__CFURL const*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7318 (    0x2c) std::__1::vector<__CFURL const*, std::__1::allocator<__CFURL const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7344 (   0x114) std::__1::vector<__CFURL const*, std::__1::allocator<__CFURL const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7458 (    0x18) std::__1::vector<__CFURL const*, std::__1::allocator<__CFURL const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7470 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__CFURL const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__CFURL const*>>(std::__1::allocator<__CFURL const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e74a8 (    0x40) __CFArray const* TCFDynamicCast<__CFArray const*>(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e74e8 (   0x10c) TCFDeque<void const*>::CreateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e75f4 (    0x50) TCFURL::DeleteLastPathComponent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7644 (     0xc) XTGetFontFlagsForDirFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7650 (   0x5b0) -[XTypeXPCClient init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7c00 (    0x4c) -[XTypeXPCClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7c4c (    0x74) -[XTypeXPCClient XTClientNotifyFontChange:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7cc0 (    0x5c) __43-[XTypeXPCClient XTClientNotifyFontChange:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7d1c (     0x8) -[XTypeXPCClient XTypeServerPID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7d24 (    0xe8) -[XTypeXPCClient run:errorHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7e0c (    0x10) __35-[XTypeXPCClient run:errorHandler:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7e1c (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7e2c (     0xc) __destroy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7e38 (    0xac) -[XTypeXPCClient uniqueingDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7ee4 (    0xb0) __38-[XTypeXPCClient uniqueingDictionary:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e7f94 (   0x130) -[XTypeXPCClient uniqueingDictionaryArray:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e80c4 (   0x124) -[XTypeXPCClient XTPing:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e81e8 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e81f8 (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8204 (    0x74) __25-[XTypeXPCClient XTPing:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8278 (    0x34) __25-[XTypeXPCClient XTPing:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e82ac (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e82bc (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e82c8 (    0x50) __copy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8318 (    0x44) __destroy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e835c (    0x10) __25-[XTypeXPCClient XTPing:]_block_invoke.121 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e836c (    0x34) -[XTypeXPCClient XTReset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e83a0 (     0x4) __25-[XTypeXPCClient XTReset]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e83a4 (   0x124) -[XTypeXPCClient XTRendezvous:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e84c8 (    0x74) __31-[XTypeXPCClient XTRendezvous:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e853c (    0x3c) __31-[XTypeXPCClient XTRendezvous:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8578 (    0x50) __31-[XTypeXPCClient XTRendezvous:]_block_invoke.129 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e85c8 (   0x100) -[XTypeXPCClient XTGetFontScope:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e86c8 (    0x74) __33-[XTypeXPCClient XTGetFontScope:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e873c (    0x10) __33-[XTypeXPCClient XTGetFontScope:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e874c (    0x10) __33-[XTypeXPCClient XTGetFontScope:]_block_invoke.138 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e875c (   0x124) -[XTypeXPCClient XTRegisterFonts:flags:scope:sandboxExtensions:failedURLs:errors:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8880 (    0x84) __82-[XTypeXPCClient XTRegisterFonts:flags:scope:sandboxExtensions:failedURLs:errors:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8904 (    0x84) __82-[XTypeXPCClient XTRegisterFonts:flags:scope:sandboxExtensions:failedURLs:errors:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8988 (    0x60) __copy_helper_block_e8_32o40o48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e89e8 (    0x50) __destroy_helper_block_e8_32o40o48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8a38 (    0x10) __82-[XTypeXPCClient XTRegisterFonts:flags:scope:sandboxExtensions:failedURLs:errors:]_block_invoke.142 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8a48 (   0x120) -[XTypeXPCClient XTUnregisterFonts:scope:failedURLs:errors:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8b68 (    0x84) __60-[XTypeXPCClient XTUnregisterFonts:scope:failedURLs:errors:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8bec (    0x84) __60-[XTypeXPCClient XTUnregisterFonts:scope:failedURLs:errors:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8c70 (    0x10) __60-[XTypeXPCClient XTUnregisterFonts:scope:failedURLs:errors:]_block_invoke.145 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8c80 (   0x10c) -[XTypeXPCClient XTRegisterFontDirectory:bookmark:domain:flags:scope:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8d8c (    0x80) __70-[XTypeXPCClient XTRegisterFontDirectory:bookmark:domain:flags:scope:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8e0c (    0x10) __70-[XTypeXPCClient XTRegisterFontDirectory:bookmark:domain:flags:scope:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8e1c (    0x10) __70-[XTypeXPCClient XTRegisterFontDirectory:bookmark:domain:flags:scope:]_block_invoke.151 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8e2c (   0x104) -[XTypeXPCClient XTUnregisterFontDirectory:scope:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8f30 (    0x78) __50-[XTypeXPCClient XTUnregisterFontDirectory:scope:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8fa8 (    0x10) __50-[XTypeXPCClient XTUnregisterFontDirectory:scope:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8fb8 (    0x10) __50-[XTypeXPCClient XTUnregisterFontDirectory:scope:]_block_invoke.154 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e8fc8 (   0x128) -[XTypeXPCClient XTEnableFonts:scope:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e90f0 (    0x78) __38-[XTypeXPCClient XTEnableFonts:scope:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9168 (    0x34) __38-[XTypeXPCClient XTEnableFonts:scope:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e919c (    0x10) __38-[XTypeXPCClient XTEnableFonts:scope:]_block_invoke.158 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e91ac (   0x128) -[XTypeXPCClient XTDisableFonts:scope:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e92d4 (    0x78) __39-[XTypeXPCClient XTDisableFonts:scope:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e934c (    0x34) __39-[XTypeXPCClient XTDisableFonts:scope:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9380 (    0x10) __39-[XTypeXPCClient XTDisableFonts:scope:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9390 (   0x100) -[XTypeXPCClient XTEnableFont:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9490 (    0x74) __31-[XTypeXPCClient XTEnableFont:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9504 (    0x10) __31-[XTypeXPCClient XTEnableFont:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9514 (    0x10) __31-[XTypeXPCClient XTEnableFont:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9524 (   0x100) -[XTypeXPCClient XTDisableFont:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9624 (    0x74) __32-[XTypeXPCClient XTDisableFont:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9698 (    0x10) __32-[XTypeXPCClient XTDisableFont:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e96a8 (    0x10) __32-[XTypeXPCClient XTDisableFont:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e96b8 (   0x12c) -[XTypeXPCClient XTCopyPropertiesForFonts:keys:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e97e4 (    0x80) __62-[XTypeXPCClient XTCopyPropertiesForFonts:keys:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9864 (    0x4c) __62-[XTypeXPCClient XTCopyPropertiesForFonts:keys:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e98b0 (    0x70) __copy_helper_block_e8_32o40o48o56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9920 (    0x5c) __destroy_helper_block_e8_32o40o48o56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e997c (    0x10) __62-[XTypeXPCClient XTCopyPropertiesForFonts:keys:scope:options:]_block_invoke.162 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e998c (   0x12c) -[XTypeXPCClient XTCopyPropertyForFonts:key:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9ab8 (    0x80) __59-[XTypeXPCClient XTCopyPropertyForFonts:key:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9b38 (    0x4c) __59-[XTypeXPCClient XTCopyPropertyForFonts:key:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9b84 (    0x10) __59-[XTypeXPCClient XTCopyPropertyForFonts:key:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9b94 (   0x12c) -[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9cc0 (    0x80) __61-[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9d40 (    0x4c) __61-[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9d8c (    0x10) __61-[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9d9c (   0x128) -[XTypeXPCClient XTCopyAvailableFontNames:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9ec4 (    0x78) __51-[XTypeXPCClient XTCopyAvailableFontNames:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9f3c (    0x34) __51-[XTypeXPCClient XTCopyAvailableFontNames:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9f70 (    0x10) __51-[XTypeXPCClient XTCopyAvailableFontNames:options:]_block_invoke.166 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889e9f80 (   0x12c) -[XTypeXPCClient XTCopyLocalizedNameForFonts:name:languageOrder:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea0ac (    0x7c) __79-[XTypeXPCClient XTCopyLocalizedNameForFonts:name:languageOrder:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea128 (    0x34) __79-[XTypeXPCClient XTCopyLocalizedNameForFonts:name:languageOrder:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea15c (    0x10) __79-[XTypeXPCClient XTCopyLocalizedNameForFonts:name:languageOrder:scope:options:]_block_invoke.169 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea16c (   0x128) -[XTypeXPCClient XTCopyAvailableFontFamilyNames:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea294 (    0x78) __57-[XTypeXPCClient XTCopyAvailableFontFamilyNames:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea30c (    0x34) __57-[XTypeXPCClient XTCopyAvailableFontFamilyNames:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea340 (    0x10) __57-[XTypeXPCClient XTCopyAvailableFontFamilyNames:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea350 (   0x128) -[XTypeXPCClient XTCopyAvailableFonts:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea478 (    0x78) __47-[XTypeXPCClient XTCopyAvailableFonts:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea4f0 (    0x40) __47-[XTypeXPCClient XTCopyAvailableFonts:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea530 (    0x54) XTConsumeSandboxExtensions(NSData*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea584 (    0x10) __47-[XTypeXPCClient XTCopyAvailableFonts:options:]_block_invoke.173 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea594 (   0x128) -[XTypeXPCClient XTCopyFamilyNamesForLanguage:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea6bc (    0x78) __61-[XTypeXPCClient XTCopyFamilyNamesForLanguage:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea734 (    0x34) __61-[XTypeXPCClient XTCopyFamilyNamesForLanguage:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea768 (    0x10) __61-[XTypeXPCClient XTCopyFamilyNamesForLanguage:scope:options:]_block_invoke.176 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea778 (   0x12c) -[XTypeXPCClient XTCopyDuplicateFonts:options:domain:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea8a4 (    0x7c) __54-[XTypeXPCClient XTCopyDuplicateFonts:options:domain:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea920 (    0x34) __54-[XTypeXPCClient XTCopyDuplicateFonts:options:domain:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea954 (    0x10) __54-[XTypeXPCClient XTCopyDuplicateFonts:options:domain:]_block_invoke.179 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ea964 (   0x128) -[XTypeXPCClient XTCopyFontsMatchingRequest:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eaa8c (    0x78) __59-[XTypeXPCClient XTCopyFontsMatchingRequest:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eab04 (    0x40) __59-[XTypeXPCClient XTCopyFontsMatchingRequest:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eab44 (    0x10) __59-[XTypeXPCClient XTCopyFontsMatchingRequest:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eab54 (   0x128) -[XTypeXPCClient XTCopyFontWithName:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eac7c (    0x78) __51-[XTypeXPCClient XTCopyFontWithName:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eacf4 (    0x54) __51-[XTypeXPCClient XTCopyFontWithName:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ead48 (    0x10) __51-[XTypeXPCClient XTCopyFontWithName:scope:options:]_block_invoke.183 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ead58 (   0x12c) -[XTypeXPCClient XTCopyFontForCharacter:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eae84 (    0x7c) __55-[XTypeXPCClient XTCopyFontForCharacter:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eaf00 (    0x54) __55-[XTypeXPCClient XTCopyFontForCharacter:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eaf54 (    0x10) __55-[XTypeXPCClient XTCopyFontForCharacter:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eaf64 (   0x12c) -[XTypeXPCClient XTCopyPropertiesForFontsMatchingRequest:properties:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb090 (    0x80) __83-[XTypeXPCClient XTCopyPropertiesForFontsMatchingRequest:properties:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb110 (    0x58) __83-[XTypeXPCClient XTCopyPropertiesForFontsMatchingRequest:properties:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb168 (    0x10) __83-[XTypeXPCClient XTCopyPropertiesForFontsMatchingRequest:properties:scope:options:]_block_invoke.186 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb178 (   0x128) -[XTypeXPCClient XTCopyPropertiesForAllFonts:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb2a0 (    0x78) __60-[XTypeXPCClient XTCopyPropertiesForAllFonts:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb318 (    0x34) __60-[XTypeXPCClient XTCopyPropertiesForAllFonts:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb34c (    0x10) __60-[XTypeXPCClient XTCopyPropertiesForAllFonts:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb35c (   0x128) -[XTypeXPCClient XTExperimentalDataFunnel:scope:options:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb484 (    0x78) __57-[XTypeXPCClient XTExperimentalDataFunnel:scope:options:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb4fc (    0x34) __57-[XTypeXPCClient XTExperimentalDataFunnel:scope:options:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb530 (    0x10) __57-[XTypeXPCClient XTExperimentalDataFunnel:scope:options:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb540 (   0x124) -[XTypeXPCClient XTCopyFontProviders] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb664 (    0x74) __37-[XTypeXPCClient XTCopyFontProviders]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb6d8 (    0x34) __37-[XTypeXPCClient XTCopyFontProviders]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb70c (    0x10) __37-[XTypeXPCClient XTCopyFontProviders]_block_invoke.189 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb71c (    0xc4) -[XTypeXPCClient XTAddFontProvider:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb7e0 (    0x74) __36-[XTypeXPCClient XTAddFontProvider:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb854 (    0x10) __36-[XTypeXPCClient XTAddFontProvider:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb864 (     0x4) __36-[XTypeXPCClient XTAddFontProvider:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb868 (    0xc4) -[XTypeXPCClient XTRemoveFontProvider:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb92c (    0x74) __39-[XTypeXPCClient XTRemoveFontProvider:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb9a0 (    0x10) __39-[XTypeXPCClient XTRemoveFontProvider:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb9b0 (     0x4) __39-[XTypeXPCClient XTRemoveFontProvider:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eb9b4 (    0x74) -[XTypeXPCClient EnsureFontFileAccess:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eba28 (    0x14) __39-[XTypeXPCClient EnsureFontFileAccess:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eba3c (     0x8) __39-[XTypeXPCClient EnsureFontFileAccess:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eba44 (     0x4) __39-[XTypeXPCClient EnsureFontFileAccess:]_block_invoke.199 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eba48 (    0xc4) -[XTypeXPCClient XTGetFontToken:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebb0c (    0x74) __33-[XTypeXPCClient XTGetFontToken:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebb80 (    0x10) __33-[XTypeXPCClient XTGetFontToken:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebb90 (     0x4) __33-[XTypeXPCClient XTGetFontToken:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebb94 (    0xec) -[XTypeXPCClient XTCopyFontURLWithFontToken:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebc80 (    0x78) __45-[XTypeXPCClient XTCopyFontURLWithFontToken:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebcf8 (    0x34) __45-[XTypeXPCClient XTCopyFontURLWithFontToken:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebd2c (     0x4) __45-[XTypeXPCClient XTCopyFontURLWithFontToken:]_block_invoke.209 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebd30 (     0xc) -[XTypeXPCClient fConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebd3c (    0xec) XTRegisterFont2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ebe28 (   0x5a8) XTRegisterFonts2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ec3d0 (     0x8) XTUnregisterFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ec3d8 (    0xdc) XTUnregisterFont2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ec4b4 (   0x908) XTUnregisterFonts2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ecdbc (    0xd4) XTRegisterDataFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ece90 (    0xec) XTUnregisterDataFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ecf7c (     0x8) XTRegisterFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ecf84 (   0x220) CreateSymlinkResolvedAbsolutePathURLArray(__CFArray const*, TCFLazyMutableArray&, TCFLazyMutableArray&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed1a4 (   0x1a8) CopyFaceURLsForFonts(__CFArray const*, unsigned int, TCFLazyMutableArray&, TCFLazyMutableArray&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed34c (     0x8) XTUnregisterFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed354 (   0x174) XTEnableFont [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed4c8 (   0x174) XTDisableFont [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed63c (   0x20c) XTEnableFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ed848 (   0x20c) XTDisableFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eda54 (    0xf8) XTRegisterFontDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edb4c (    0xac) XTUnregisterFontDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edbf8 (    0x58) XTEnsureFontFileAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edc50 (    0x64) XTGetDataFontATSFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edcb4 (    0x78) XTCopyFontURLForDataFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edd2c (   0x178) XTCopyAvailableFontNames2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889edea4 (   0x178) XTCopyAvailableFamilyNames2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee01c (   0x18c) XTCopyFamilyNamesForLanguage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee1a8 (   0x294) XTCopyLocalizedNameForFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee43c (   0x2b0) XTExperimentalDataFunnel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee6ec (     0x8) XTCopyIgnoredInactiveFontURLs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee6f4 (   0x2a4) XTCopyIgnoredInactiveFontURLsInDomains [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ee998 (   0x344) CopyIgnoredInactiveFontURLsForOneScopeAndOneDomain(unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eecdc (     0x8) XTCopyAvailableFontURLs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eece4 (   0x180) XTCopyAvailableFontURLs2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eee64 (    0x94) XTGetScopeForFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eeef8 (     0x8) XTCopyRegistrationInfoForFont [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eef00 (     0x8) XTCopyPropertiesForAllFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eef08 (   0x1a4) XTCopyPropertiesForAllFontsWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef0ac (   0x1ac) XTCopyPropertiesForFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef258 (     0x4) XTSetPropertiesForFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef25c (     0x4) XTRemovePropertiesForFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef260 (   0x108) TFontQueryOptions::ShouldAutoActivate(__CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef368 (   0x104) __XTCopyFontsWithProperties_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef46c (    0x5c) XTDownloadFontsWithProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef4c8 (   0x198) XTCopyFontWithProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef660 (     0x8) XTCopyDuplicateFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef668 (   0x16c) XTCopyDuplicateFontsInDomain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef7d4 (    0x44) TCharacterRejectCache::DestroyCache(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef818 (    0xa0) TCharacterRejectCacheImp::IsValid(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef8b8 (    0xd4) TCharacterRejectCacheImp::Invalidate(unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef98c (     0x8) XTCreateFontProviderLocalPort [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef994 (    0x68) XTCreateFontProviderLocalRunLoopSource [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889ef9fc (    0x58) XTCopyFontProviderEndpoints [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efa54 (     0x4) XTAddFontProviderEndpoint(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efa58 (     0x4) XTRemoveFontProviderEndpoint(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efa5c (    0xc4) XTGetAutoActivationSetting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efb20 (    0xc8) XTSetAutoActivationSetting [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efbe8 (    0x60) XTCopyAutoActivationSearchDirectories [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efc48 (    0x60) XTSetAutoActivationSearchDirectories [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efca8 (    0x74) XTCopyAutoActivatedFontURLs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efd1c (    0x94) XTFontGetFontToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efdb0 (    0x98) XTCopyFontURLWithFontToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889efe48 (   0x12c) XTCopyRegistryConfigurationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889eff74 (    0x50) XTReset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889effc4 (     0x4) XTEnableUserFontRegistry [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889effc8 (     0x4) XTGetMaxFontAssetCompatibilityVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889effcc (    0x98) TStackBuffer<__CFArray const*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0064 (    0x2c) std::__1::vector<__CFArray const*, std::__1::allocator<__CFArray const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0090 (   0x114) std::__1::vector<__CFArray const*, std::__1::allocator<__CFArray const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f01a4 (    0x18) std::__1::vector<__CFArray const*, std::__1::allocator<__CFArray const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f01bc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__CFArray const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__CFArray const*>>(std::__1::allocator<__CFArray const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f01f4 (    0x34) TCFArray<__CFArray const*>::~TCFArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0228 (    0x1c) TXTypeUI::DownloadFontsForProperties(__CFArray const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0244 (    0x1c) TXTypeUI::DownloadFontsForPropertiesWithProgressHandler(__CFArray const*, bool (unsigned int, __CFDictionary const*) block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0260 (    0x58) TAutoActivationManager::lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f02b8 (     0x4) TAutoActivationManager::~TAutoActivationManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f02bc (    0x24) invocation function for block in TAutoActivationManager::lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f02e0 (    0x8c) TAutoActivationManager::IsRequestDisallowed(__CFDictionary const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f036c (    0xbc) TAutoActivationManager::GetAutoActivationSetting() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0428 (    0x7c) TAutoActivationManager::SetAutoActivationSetting(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f04a4 (   0x124) TAutoActivationManager::GetAutoActivationSetting(__CFString const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f05c8 (   0x194) TAutoActivationManager::SetAutoActivationSetting(__CFString const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f075c (    0x64) TAutoActivationManager::CopySearchDirectories() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f07c0 (    0x64) TAutoActivationManager::SetSearchDirectories(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0824 (   0x330) TAutoActivationManager::CopyAutoActivatedFonts(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0b54 (   0x1f4) TAutoActivationManager::CopyFontsFromFontProvider(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f0d48 (   0x370) TAutoActivationManager::CanAutoActivateFonts(bool&, bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f10b8 (    0x80) TAutoActivationManager::CopyFontsFromXTGlobalRegistry(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1138 (    0x10) invocation function for block in TAutoActivationManager::CopyFontsFromFontProvider(void const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1148 (    0x78) invocation function for block in TAutoActivationManager::CopyFontsFromFontProvider(void const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f11c0 (    0xa4) HasAutoActivationEntitlement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1264 (    0x58) TRequestCache::TRequestCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f12bc (    0x50) invocation function for block in TRequestCache::TRequestCache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f130c (     0x4) TRequestCache::TRequestCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1310 (    0x34) TRequestCache::~TRequestCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1344 (    0x68) TCFRetained<void const*>::Retain(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f13ac (     0xc) TRequestCache::Purge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f13b8 (    0x34) TCFRetained<__CFDictionary*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f13ec (   0x638) TFontInfo::CreateFontInfoForFontURL(__CFURL const*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1a24 (   0x240) TFontInfo::CreateURLForInfoFile(__CFURL const*, __CFURL const*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1c64 (    0x90) TFontInfo::CopyInfoFileURLForFontURL(__CFURL const*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1cf4 (    0xcc) invocation function for block in TFontInfo::CopyInfoFileURLForFontURL(__CFURL const*, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1dc0 (    0x78) invocation function for block in TSessionManager::GetFontAssetDirectoryPath() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f1e38 (   0x200) TSessionManager::GetInstallationKindForFontURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2038 (    0x30) invocation function for block in TSessionManager::GetInstallationKindForFontURL(__CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2068 (    0x64) __DoRegisterURLsWithATS_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f20cc (   0x15c) DoRegisterDataWithATS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2228 (    0x48) __DoRegisterDataWithATS_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2270 (   0x124) DoEnableURLsWithATS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2394 (    0x60) __DoEnableURLsWithATS_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f23f4 (     0xc) XTGetFunctions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2400 (    0x34) TCFRetained<__CFBundle*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2434 (    0x2c) invocation function for block in GetSyncATSQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2460 (   0x5ac) CreateLaserWriterFontURLsFromSuitcase(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2a0c (    0x7c) IsEnvironmentVariableEnabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2a88 (    0x60) GetEnvironmentVariable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2ae8 (    0xd8) GetAlternateFrameworkPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2bc0 (     0x8) GetATSPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2bc8 (    0xa8) GetATSPath_Internal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2c70 (    0xd4) GetATSDirPath [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2d44 (    0xf0) GetATSSubDirPath [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2e34 (    0x68) PathAppendingFileName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2e9c (    0xc4) writeSegmentAtPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2f60 (    0x50) XTDataStreamCreateStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f2fb0 (    0x88) XTDataStreamWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3038 (    0x48) XTDataStreamFree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3080 (   0x190) XTDataStreamShow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3210 (    0x68) XTDataStreamResetStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3278 (    0x58) XTDataStreamCloseReadSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f32d0 (    0x34) XTDataStreamResetReadSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3304 (    0x4c) XTDataStreamOpenReadSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3350 (    0x64) XTDataStreamSkipReadSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f33b4 (    0x3c) XTDataStreamCurrentReadSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f33f0 (    0x6c) XTDataStreamReadBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f345c (    0x50) XTDataStreamBytesLeftToRead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f34ac (    0x40) XTDataStreamBytesLeftToReadInCurrentSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f34ec (    0x64) XTDataStreamClearStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3550 (    0x84) XTDataStreamCloseWriteSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f35d4 (    0x58) XTDataStreamClearToStartOfSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f362c (    0x48) XTDataStreamOpenWriteSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3674 (    0x64) XTDataStreamAppendEmptySegments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f36d8 (    0x3c) XTDataStreamCurrentWriteSegment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3714 (    0x80) XTDataStreamAppendBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3794 (    0x30) XTDataStreamReadUInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f37c4 (    0x2c) XTDataStreamAppendUInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f37f0 (    0x30) XTDataStreamReadDouble [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3820 (    0x2c) XTDataStreamAppendDouble [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f384c (    0xc0) XTDataStreamReadString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f390c (    0x60) XTDataStreamAppendString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f396c (    0xe4) XTDataStreamReadCString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3a50 (    0x48) XTDataStreamAppendCString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3a98 (    0x58) XTDataStreamAppendEmptyStrings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3af0 (   0x128) XTCreateCompressedBitmapRepresentation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3c18 (   0x16c) XTCopyUncompressedBitmapRepresentation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3d84 (   0x1a8) GetCompressedBitmapRepresentation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f3f2c (   0x110) XTConsumeSandboxExtension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f403c (    0x98) XTConsumeSandboxExtensions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f40d4 (   0x18c) XTIssueSandboxExtension [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4260 (   0x1b0) XTIssueSandboxExtensionsForURLs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4410 (   0x268) AppendExtension(audit_token_t, __CFURL const*, unsigned int&, TCFMutableSet&, __CFData*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4678 (   0x358) XTMoveFontFilesToDisabledFolder [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f49d0 (   0x4f8) __XTMoveFontFilesToDisabledFolder_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4ec8 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4f18 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f4f5c (    0xd8) XTAuthenticateAsAdminFromExternalAuthorization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5034 (   0x1e0) TCFMessagePort::SendCFTypedMessage(int, void const*, __CFError**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5214 (   0x478) XTInstallFonts2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f568c (   0x158) SanitizeURLs(__CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f57e4 (    0x40) __XTInstallFonts2_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5824 (   0x2c8) __XTInstallFonts2_block_invoke.22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5aec (    0x68) __copy_helper_block_e8_32b40c11_ZTS6TCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5b54 (    0x40) __destroy_helper_block_e8_32b40c11_ZTS6TCFURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5b94 (   0x150) XTFontMoverAuthorizeForMessage(int, AuthorizationOpaqueRef const**, AuthorizationExternalForm*, __CFError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f5ce4 (   0x39c) XTInstallFontsWithAuthorization(AuthorizationExternalForm*, __CFArray const*, unsigned int, __CFArray const**, __CFDictionary const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6080 (    0xd8) XTInstallFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6158 (   0x6a0) XTRemoveFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f67f8 (    0x40) __CFDictionary const* TCFDynamicCast<__CFDictionary const*>(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6838 (    0x10) XTRestoreDefaultFonts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6848 (   0x3dc) XTRestoreDefaultFonts2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6c24 (   0x388) invocation function for block in CopyFontFilesToTrash(__CFArray const*, __CFArray const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f6fac (    0x5c) TCFMessagePort::TCFMessagePort(__CFString const*, _opaque_pthread_mutex_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7008 (    0x34) TCFRetained<__CFMessagePort*>::~TCFRetained() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f703c (    0x44) TCFMessagePort::~TCFMessagePort() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7080 (   0x1e8) TDirectoryScanner::PerformForEachURL(bool (__CFURL const*) block_pointer) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7268 (   0x120) TFontIndex::RemoveFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7388 (   0x254) TFontIndex::RemoveFontForAllKeys(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f75dc (   0x19c) TFontIndex::CopyAllKeys() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7778 (    0x5c) TFontNameIndex::AddFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f77d4 (    0x68) TFontNameIndex::RemoveFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f783c (    0x40) TFontNameIndex::CopyKeyForFont(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f787c (   0x160) TFontPathIndex::RemoveFontForKey(void const*, void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f79dc (     0x4) TFontPathIndex::~TFontPathIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f79e0 (    0x28) TFontPathIndex::~TFontPathIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7a08 (    0x98) TStackBuffer<__CFSet*, 30ul>::TStackBuffer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7aa0 (    0x2c) std::__1::vector<__CFSet*, std::__1::allocator<__CFSet*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7acc (   0x114) std::__1::vector<__CFSet*, std::__1::allocator<__CFSet*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7be0 (    0x18) std::__1::vector<__CFSet*, std::__1::allocator<__CFSet*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7bf8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__CFSet*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__CFSet*>>(std::__1::allocator<__CFSet*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7c30 (    0xbc) -[XTFontStaticRegistry initWithRegistryDataDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7cec (    0x4c) +[XTFontStaticRegistry registryDataDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7d38 (    0xb8) +[XTFontStaticRegistry registryDataDictionaryFromPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7df0 (    0x14) -[XTFontStaticRegistry allFontNames] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7e04 (    0x14) -[XTFontStaticRegistry invisibleFontNames] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f7e18 (   0x28c) -[XTFontStaticRegistry nameToURLDictionaryFor:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f80a4 (   0x174) -[XTFontStaticRegistry standarizedURLString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f8218 (   0x164) -[XTFontStaticRegistry fontRefFromURL:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f837c (   0x158) -[XTFontStaticRegistry fontURLFromName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f84d4 (    0xa8) -[XTFontStaticRegistry fontInfoFromFontRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f857c (   0x338) -[XTFontStaticRegistry propertyForKey:andFontRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f88b4 (    0x40) __50-[XTFontStaticRegistry propertyForKey:andFontRef:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f88f4 (    0xa4) __50-[XTFontStaticRegistry propertyForKey:andFontRef:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f8998 (    0x3c) __copy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f89d4 (    0x3c) __destroy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f8a10 (   0x16c) -[XTFontStaticRegistry urlFromInternalURLString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f8b7c (   0x614) -[XTFontStaticRegistry normalizeProperty:forKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9190 (   0x258) SanitizeDictionaryNumberValues(NSDictionary*, NSArray<NSString*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f93e8 (   0x148) -[XTFontStaticRegistry lowercasedNameFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9530 (    0x34) -[XTFontStaticRegistry objectForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9564 (   0x118) -[XTFontStaticRegistry externalizeFontInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f967c (    0xa4) __44-[XTFontStaticRegistry externalizeFontInfo:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9720 (   0x2e8) -[XTFontStaticRegistry fontInfoArrayForFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9a08 (   0x114) __45-[XTFontStaticRegistry fontInfoArrayForFile:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9b1c (    0x4c) __copy_helper_block_ea8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9b68 (    0x4c) __destroy_helper_block_ea8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9bb4 (    0xa0) -[XTFontStaticRegistry autoActivationFontRefsCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9c54 (    0x44) -[XTFontStaticRegistry .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9c98 (    0x60) TPurgeableCache::TPurgeableCache(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9cf8 (    0x88) TPurgeableCache::RetainedValueForKey(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9d80 (    0x18) TPurgeableCache::SetValue(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9d98 (     0x8) TPurgeableCache::RemoveAllValues() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9da0 (    0x78) invocation function for block in TUniqueingFilter::TUniqueingFilter() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9e18 (    0x4c) TUniqueingFilter::TUniqueingFilter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9e64 (    0x6c) TUniqueingFilter::CopyUniqueValue(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ed0 (     0x4) TFontRegistryImp::~TFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ed4 (     0x4) TFontRegistryImp::~TFontRegistryImp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ed8 (     0x4) TStaticFontIndex::~TStaticFontIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9edc (     0x4) TStaticFontIndex::~TStaticFontIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ee0 (     0x4) TStaticFontNumberToFontRefIndex::~TStaticFontNumberToFontRefIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ee4 (     0x4) TStaticFontNumberToFontRefIndex::~TStaticFontNumberToFontRefIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9ee8 (    0x80) TGlobalStaticRegistryImpNotImplemented(char const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9f68 (     0x4) TFontIndex::~TFontIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9f6c (     0x4) TFontIndex::~TFontIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9f70 (     0x4) TFontNameIndex::~TFontNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001889f9f74 (     0x4) TFontNameIndex::~TFontNameIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001889f9f78 (  0x16a0) __TEXT __auth_stubs
                0x00000001889f9f78 (    0x10) DYLD-STUB$$AuthorizationCopyRights [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9f88 (    0x10) DYLD-STUB$$AuthorizationCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9f98 (    0x10) DYLD-STUB$$AuthorizationCreateFromExternalForm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9fa8 (    0x10) DYLD-STUB$$AuthorizationFree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9fb8 (    0x10) DYLD-STUB$$AuthorizationMakeExternalForm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9fc8 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9fd8 (    0x10) DYLD-STUB$$CFArrayAppendArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9fe8 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889f9ff8 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa008 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa018 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa028 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa038 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa048 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa058 (    0x10) DYLD-STUB$$CFArrayGetFirstIndexOfValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa068 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa078 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa088 (    0x10) DYLD-STUB$$CFArrayGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa098 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0a8 (    0x10) DYLD-STUB$$CFArrayReplaceValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0b8 (    0x10) DYLD-STUB$$CFArraySortValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0c8 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0d8 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0e8 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationsForPreferences [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa0f8 (    0x10) DYLD-STUB$$CFBundleCopyResourceURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa108 (    0x10) DYLD-STUB$$CFBundleCopyResourcesDirectoryURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa118 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa128 (    0x10) DYLD-STUB$$CFBundleGetDataPointerForName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa138 (    0x10) DYLD-STUB$$CFBundleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa148 (    0x10) DYLD-STUB$$CFBundleGetInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa158 (    0x10) DYLD-STUB$$CFBundleGetMainBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa168 (    0x10) DYLD-STUB$$CFBundleGetValueForInfoDictionaryKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa178 (    0x10) DYLD-STUB$$CFCharacterSetAddCharactersInRange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa188 (    0x10) DYLD-STUB$$CFCharacterSetCreateBitmapRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa198 (    0x10) DYLD-STUB$$CFCharacterSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1a8 (    0x10) DYLD-STUB$$CFCharacterSetCreateWithBitmapRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1b8 (    0x10) DYLD-STUB$$CFCharacterSetGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1c8 (    0x10) DYLD-STUB$$CFCharacterSetInitInlineBuffer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1d8 (    0x10) DYLD-STUB$$CFCharacterSetIsLongCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1e8 (    0x10) DYLD-STUB$$CFCharacterSetIsSupersetOfSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa1f8 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa208 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa218 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa228 (    0x10) DYLD-STUB$$CFDataCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa238 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa248 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa258 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa268 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa278 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa288 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa298 (    0x10) DYLD-STUB$$CFDataIncreaseLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2a8 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2b8 (    0x10) DYLD-STUB$$CFDateFormatterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2c8 (    0x10) DYLD-STUB$$CFDateFormatterCreateStringWithAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2d8 (    0x10) DYLD-STUB$$CFDateFormatterSetFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2e8 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa2f8 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa308 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa318 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa328 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa338 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa348 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa358 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa368 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa378 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa388 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa398 (    0x10) DYLD-STUB$$CFDictionaryReplaceValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3a8 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3b8 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3c8 (    0x10) DYLD-STUB$$CFErrorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3d8 (    0x10) DYLD-STUB$$CFErrorCreateWithUserInfoKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3e8 (    0x10) DYLD-STUB$$CFErrorGetCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa3f8 (    0x10) DYLD-STUB$$CFErrorGetDomain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa408 (    0x10) DYLD-STUB$$CFErrorGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa418 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa428 (    0x10) DYLD-STUB$$CFHash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa438 (    0x10) DYLD-STUB$$CFLocaleCopyAvailableLocaleIdentifiers [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa448 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa458 (    0x10) DYLD-STUB$$CFLocaleCopyISOLanguageCodes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa468 (    0x10) DYLD-STUB$$CFLocaleCopyPreferredLanguages [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa478 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa488 (    0x10) DYLD-STUB$$CFLocaleCreateCanonicalLanguageIdentifierFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa498 (    0x10) DYLD-STUB$$CFLocaleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4a8 (    0x10) DYLD-STUB$$CFLocaleGetSystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4b8 (    0x10) DYLD-STUB$$CFLocaleGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4c8 (    0x10) DYLD-STUB$$CFLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4d8 (    0x10) DYLD-STUB$$CFMakeCollectable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4e8 (    0x10) DYLD-STUB$$CFMessagePortCreateRemote [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa4f8 (    0x10) DYLD-STUB$$CFMessagePortSendRequest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa508 (    0x10) DYLD-STUB$$CFNotificationCenterGetDistributedCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa518 (    0x10) DYLD-STUB$$CFNotificationCenterGetLocalCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa528 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa538 (    0x10) DYLD-STUB$$CFNullGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa548 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa558 (    0x10) DYLD-STUB$$CFNumberGetByteSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa568 (    0x10) DYLD-STUB$$CFNumberGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa578 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa588 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa598 (    0x10) DYLD-STUB$$CFPreferencesAppSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5a8 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5b8 (    0x10) DYLD-STUB$$CFPreferencesSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5c8 (    0x10) DYLD-STUB$$CFPropertyListCreateFromXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5d8 (    0x10) DYLD-STUB$$CFQSortArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5e8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa5f8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa608 (    0x10) DYLD-STUB$$CFRunLoopAddTimer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa618 (    0x10) DYLD-STUB$$CFRunLoopGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa628 (    0x10) DYLD-STUB$$CFRunLoopGetMain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa638 (    0x10) DYLD-STUB$$CFRunLoopSourceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa648 (    0x10) DYLD-STUB$$CFRunLoopSourceSignal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa658 (    0x10) DYLD-STUB$$CFRunLoopTimerCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa668 (    0x10) DYLD-STUB$$CFRunLoopWakeUp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa678 (    0x10) DYLD-STUB$$CFSetAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa688 (    0x10) DYLD-STUB$$CFSetApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa698 (    0x10) DYLD-STUB$$CFSetContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6a8 (    0x10) DYLD-STUB$$CFSetCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6b8 (    0x10) DYLD-STUB$$CFSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6c8 (    0x10) DYLD-STUB$$CFSetCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6d8 (    0x10) DYLD-STUB$$CFSetGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6e8 (    0x10) DYLD-STUB$$CFSetGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa6f8 (    0x10) DYLD-STUB$$CFSetGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa708 (    0x10) DYLD-STUB$$CFSetRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa718 (    0x10) DYLD-STUB$$CFSetRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa728 (    0x10) DYLD-STUB$$CFShow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa738 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa748 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa758 (    0x10) DYLD-STUB$$CFStringCreateArrayBySeparatingStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa768 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa778 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa788 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa798 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7a8 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7b8 (    0x10) DYLD-STUB$$CFStringCreateWithFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7c8 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7d8 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7e8 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa7f8 (    0x10) DYLD-STUB$$CFStringFindAndReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa808 (    0x10) DYLD-STUB$$CFStringFindWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa818 (    0x10) DYLD-STUB$$CFStringFold [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa828 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa838 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa848 (    0x10) DYLD-STUB$$CFStringGetDoubleValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa858 (    0x10) DYLD-STUB$$CFStringGetFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa868 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa878 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa888 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeOfFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa898 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8a8 (    0x10) DYLD-STUB$$CFStringHasPrefix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8b8 (    0x10) DYLD-STUB$$CFStringLowercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8c8 (    0x10) DYLD-STUB$$CFStringTrim [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8d8 (    0x10) DYLD-STUB$$CFStringTrimWhitespace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8e8 (    0x10) DYLD-STUB$$CFURLCopyAbsoluteURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa8f8 (    0x10) DYLD-STUB$$CFURLCopyFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa908 (    0x10) DYLD-STUB$$CFURLCopyFragment [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa918 (    0x10) DYLD-STUB$$CFURLCopyLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa928 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa938 (    0x10) DYLD-STUB$$CFURLCopyResourcePropertiesForKeys [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa948 (    0x10) DYLD-STUB$$CFURLCopyResourcePropertyForKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa958 (    0x10) DYLD-STUB$$CFURLCreateBookmarkData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa968 (    0x10) DYLD-STUB$$CFURLCreateCopyAppendingPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa978 (    0x10) DYLD-STUB$$CFURLCreateCopyDeletingLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa988 (    0x10) DYLD-STUB$$CFURLCreateFilePathURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa998 (    0x10) DYLD-STUB$$CFURLCreateFileReferenceURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9a8 (    0x10) DYLD-STUB$$CFURLCreateFromFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9b8 (    0x10) DYLD-STUB$$CFURLCreateFromFileSystemRepresentationRelativeToBase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9c8 (    0x10) DYLD-STUB$$CFURLCreatePropertyFromResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9d8 (    0x10) DYLD-STUB$$CFURLCreateStringByAddingPercentEscapes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9e8 (    0x10) DYLD-STUB$$CFURLCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fa9f8 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa08 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPathRelativeToBase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa18 (    0x10) DYLD-STUB$$CFURLCreateWithString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa28 (    0x10) DYLD-STUB$$CFURLGetByteRangeForComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa38 (    0x10) DYLD-STUB$$CFURLGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa48 (    0x10) DYLD-STUB$$CFURLGetFSRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa58 (    0x10) DYLD-STUB$$CFURLGetFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa68 (    0x10) DYLD-STUB$$CFURLGetString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa78 (    0x10) DYLD-STUB$$CFURLGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa88 (    0x10) DYLD-STUB$$CFURLHasDirectoryPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faa98 (    0x10) DYLD-STUB$$CFURLResourceIsReachable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faaa8 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faab8 (    0x10) DYLD-STUB$$CFUUIDGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faac8 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faad8 (    0x10) DYLD-STUB$$CGDataProviderCreateWithCFData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faae8 (    0x10) DYLD-STUB$$CGDataProviderRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faaf8 (    0x10) DYLD-STUB$$CGFontCopyCharacterSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab08 (    0x10) DYLD-STUB$$CGFontCopyFamilyName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab18 (    0x10) DYLD-STUB$$CGFontCopyFullName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab28 (    0x10) DYLD-STUB$$CGFontCopyLocalizedName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab38 (    0x10) DYLD-STUB$$CGFontCopyName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab48 (    0x10) DYLD-STUB$$CGFontCopyPostScriptName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab58 (    0x10) DYLD-STUB$$CGFontCopyTableForTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab68 (    0x10) DYLD-STUB$$CGFontCopyTableTags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab78 (    0x10) DYLD-STUB$$CGFontCopyURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab88 (    0x10) DYLD-STUB$$CGFontCopyVariations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fab98 (    0x10) DYLD-STUB$$CGFontCreateFontsWithURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faba8 (    0x10) DYLD-STUB$$CGFontCreateWithDataProvider [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fabb8 (    0x10) DYLD-STUB$$CGFontGetItalicAngle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fabc8 (    0x10) DYLD-STUB$$CGFontGetNumberOfGlyphs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fabd8 (    0x10) DYLD-STUB$$CGFontGetParserFont [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fabe8 (    0x10) DYLD-STUB$$CGFontGetVariationAxes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fabf8 (    0x10) DYLD-STUB$$CGFontGetVariations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac08 (    0x10) DYLD-STUB$$CGFontIsBitmapOnly [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac18 (    0x10) DYLD-STUB$$CGFontIsFixedPitch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac28 (    0x10) DYLD-STUB$$CGFontNameTableCopyLocales [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac38 (    0x10) DYLD-STUB$$CGFontNameTableCopyNameForLocale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac48 (    0x10) DYLD-STUB$$CGFontNameTableCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac58 (    0x10) DYLD-STUB$$CGFontNameTableGetPostScriptName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac68 (    0x10) DYLD-STUB$$CGFontNameTableRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac78 (    0x10) DYLD-STUB$$CGFontRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac88 (    0x10) DYLD-STUB$$CGFontRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fac98 (    0x10) DYLD-STUB$$FPFontCopyAdditionalPostScriptNames [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faca8 (    0x10) DYLD-STUB$$FPFontCopyMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889facb8 (    0x10) DYLD-STUB$$FPFontCopyPostScriptName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889facc8 (    0x10) DYLD-STUB$$FPFontGetDefaultInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889facd8 (    0x10) DYLD-STUB$$FPFontGetVariationAxes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889face8 (    0x10) DYLD-STUB$$FPFontGetVariationAxisFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889facf8 (    0x10) DYLD-STUB$$FPFontPurgeCaches [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad08 (    0x10) DYLD-STUB$$FSCloseFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad18 (    0x10) DYLD-STUB$$FSGetForkSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad28 (    0x10) DYLD-STUB$$FSGetMaxSupportedFontAssetCompatibilityVersion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad38 (    0x10) DYLD-STUB$$FSGetResourceForkName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad48 (    0x10) DYLD-STUB$$FSOpenFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad58 (    0x10) DYLD-STUB$$FSPathMoveObjectToTrashSync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad68 (    0x10) DYLD-STUB$$GetForkPhysicalInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad78 (    0x10) DYLD-STUB$$NSLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad88 (    0x10) DYLD-STUB$$NSSearchPathForDirectoriesInDomains [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fad98 (    0x10) DYLD-STUB$$NSTemporaryDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fada8 (    0x10) DYLD-STUB$$RMDisposeMappedFileRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fadb8 (    0x10) DYLD-STUB$$RMGetIndexedResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fadc8 (    0x10) DYLD-STUB$$RMGetResourceCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fadd8 (    0x10) DYLD-STUB$$RMNewMappedRefFromMappedFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fade8 (    0x10) DYLD-STUB$$SecTaskCopyValueForEntitlement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fadf8 (    0x10) DYLD-STUB$$SecTaskCreateFromSelf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae08 (    0x10) DYLD-STUB$$UTTypeConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae18 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae28 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae38 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae48 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae58 (    0x10) DYLD-STUB$$_CFGetProgname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae68 (    0x10) DYLD-STUB$$_CFMZEnabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae78 (    0x10) DYLD-STUB$$_CFURLCopyComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae88 (    0x10) DYLD-STUB$$_CFURLCreateFromComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fae98 (    0x10) DYLD-STUB$$_CSCheckFix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faea8 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faeb8 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faec8 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faed8 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faee8 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faef8 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf08 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf18 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf28 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf38 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf48 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf58 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf68 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf78 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf88 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faf98 (    0x10) DYLD-STUB$$_os_feature_enabled_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fafa8 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fafb8 (    0x10) DYLD-STUB$$bootstrap_look_up [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fafc8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fafd8 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fafe8 (    0x10) DYLD-STUB$$closedir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889faff8 (    0x10) DYLD-STUB$$confstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb008 (    0x10) DYLD-STUB$$copyfile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb018 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb028 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb038 (    0x10) DYLD-STUB$$dispatch_once_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb048 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb058 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb068 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb078 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb088 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb098 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0a8 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0b8 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0c8 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0d8 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0e8 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb0f8 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb108 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb118 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb128 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb138 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb148 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb158 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb168 (    0x10) DYLD-STUB$$mkdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb178 (    0x10) DYLD-STUB$$mkdtemp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb188 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb198 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1a8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1b8 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1c8 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1d8 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1e8 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb1f8 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb208 (    0x10) DYLD-STUB$$objc_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb218 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb228 (    0x10) DYLD-STUB$$objc_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb238 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb248 (    0x10) DYLD-STUB$$objc_exception_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb258 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb268 (    0x10) DYLD-STUB$$objc_loadWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb278 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb288 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb298 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2a8 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2b8 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2c8 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2d8 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2e8 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb2f8 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb308 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb318 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb328 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb338 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb348 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb358 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb368 (    0x10) DYLD-STUB$$opendir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb378 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb388 (    0x10) DYLD-STUB$$os_unfair_lock_lock_with_options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb398 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3a8 (    0x10) DYLD-STUB$$os_variant_is_basesystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3b8 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3c8 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3d8 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3e8 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb3f8 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb408 (    0x10) DYLD-STUB$$pthread_mutexattr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb418 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb428 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb438 (    0x10) DYLD-STUB$$pthread_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb448 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb458 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb468 (    0x10) DYLD-STUB$$readdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb478 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb488 (    0x10) DYLD-STUB$$realpath$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb498 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4a8 (    0x10) DYLD-STUB$$rmdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4b8 (    0x10) DYLD-STUB$$sandbox_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4c8 (    0x10) DYLD-STUB$$sandbox_check_by_audit_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4d8 (    0x10) DYLD-STUB$$sandbox_consume_extension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4e8 (    0x10) DYLD-STUB$$sandbox_extension_issue_file_to_process [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb4f8 (    0x10) DYLD-STUB$$sandbox_release_fs_extension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb508 (    0x10) DYLD-STUB$$sprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb518 (    0x10) DYLD-STUB$$sscanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb528 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb538 (    0x10) DYLD-STUB$$statfs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb548 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb558 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb568 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb578 (    0x10) DYLD-STUB$$strlcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb588 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb598 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5a8 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5b8 (    0x10) DYLD-STUB$$strnlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5c8 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5d8 (    0x10) DYLD-STUB$$strtod_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5e8 (    0x10) DYLD-STUB$$strtol_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb5f8 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001889fb608 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001889fb618 (   0x42c) __TEXT __objc_methlist
                0x00000001889fb618 (    0x98) _OBJC_$_INSTANCE_METHODS_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001889fb6b0 (    0xa8) _OBJC_$_INSTANCE_METHODS_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001889fb758 (   0x1f8) _OBJC_$_INSTANCE_METHODS_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001889fb950 (    0x20) _OBJC_$_CLASS_METHODS_XTFontStaticRegistry [NameNList, MangledNameNList, NList] 
                0x00000001889fb970 (    0xd4) _OBJC_$_INSTANCE_METHODS_XTFontStaticRegistry [NameNList, MangledNameNList, NList] 
            0x00000001889fba44 (  0x5254) __TEXT __gcc_except_tab
                0x00000001889fba44 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889fba54 (    0x18) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001889fba6c (    0x20) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001889fba8c (    0x24) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001889fbab0 (    0x24) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001889fbad4 (    0x34) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb08 (    0x24) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb2c (    0x14) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb40 (    0x14) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb54 (    0x18) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb6c (    0x10) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb7c (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb8c (    0x10) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001889fbb9c (    0x10) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001889fbbac (     0xc) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001889fbbb8 (    0x10) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001889fbbc8 (     0xc) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001889fbbd4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fbbf4 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889fbc14 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001889fbc34 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889fbc48 (    0x24) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889fbc6c (    0x20) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fbc8c (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001889fbca4 (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fbcbc (    0x38) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001889fbcf4 (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001889fbd04 (    0x30) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001889fbd34 (    0x30) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001889fbd64 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001889fbd78 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001889fbd88 (    0x38) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001889fbdc0 (    0x2c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001889fbdec (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe00 (    0x20) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe20 (    0x1c) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe3c (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe4c (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe5c (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe6c (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe7c (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe8c (    0x10) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001889fbe9c (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001889fbeac (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001889fbec0 (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001889fbed0 (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001889fbee0 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001889fbef0 (    0x10) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf00 (    0x10) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf10 (    0x10) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf20 (     0xc) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf2c (     0xc) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf38 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fbf4c (    0x80) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889fbfcc (    0x3c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889fc008 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001889fc018 (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889fc030 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889fc044 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889fc050 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fc068 (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fc080 (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001889fc0a0 (    0x50) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001889fc0f0 (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001889fc100 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001889fc110 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001889fc120 (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001889fc130 (     0xc) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001889fc13c (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fc14c (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889fc15c (    0x3c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001889fc198 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001889fc1ac (    0x24) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001889fc1d0 (    0x24) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001889fc1f4 (    0x24) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001889fc218 (    0x10) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001889fc228 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001889fc23c (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001889fc24c (    0x84) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fc2d0 (    0x74) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fc344 (    0x2c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001889fc370 (    0x28) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001889fc398 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001889fc3a8 (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001889fc3b8 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fc3cc (    0x28) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889fc3f4 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889fc408 (     0xc) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fc414 (    0x38) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889fc44c (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889fc464 (    0x20) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001889fc484 (    0x10) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001889fc494 (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001889fc4a4 (   0x168) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889fc60c (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fc61c (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fc630 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889fc644 (    0x34) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889fc678 (    0x4c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001889fc6c4 (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001889fc6e4 (    0x50) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001889fc734 (    0x50) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001889fc784 (    0x88) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001889fc80c (    0x3c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001889fc848 (   0x110) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001889fc958 (    0x2c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001889fc984 (    0x20) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001889fc9a4 (    0x40) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001889fc9e4 (    0x50) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001889fca34 (    0x5c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001889fca90 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001889fcab0 (    0x48) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001889fcaf8 (    0x54) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001889fcb4c (    0x9c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001889fcbe8 (    0x20) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001889fcc08 (    0x30) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001889fcc38 (    0x54) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001889fcc8c (    0x80) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001889fcd0c (    0x14) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001889fcd20 (    0x18) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001889fcd38 (    0x18) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001889fcd50 (    0x3c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001889fcd8c (    0xdc) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001889fce68 (    0x60) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001889fcec8 (    0x34) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001889fcefc (    0x30) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001889fcf2c (   0x104) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001889fd030 (    0x14) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001889fd044 (    0xe8) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001889fd12c (    0x5c) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001889fd188 (    0x38) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001889fd1c0 (    0x38) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001889fd1f8 (    0x34) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001889fd22c (    0x48) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001889fd274 (    0x68) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001889fd2dc (    0x64) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001889fd340 (    0x20) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001889fd360 (    0x2c) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001889fd38c (    0x18) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001889fd3a4 (    0x18) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001889fd3bc (    0x38) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001889fd3f4 (    0x14) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001889fd408 (    0x88) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001889fd490 (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001889fd4a4 (    0x10) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001889fd4b4 (    0x38) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001889fd4ec (    0x1c) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001889fd508 (    0x88) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001889fd590 (    0x90) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001889fd620 (    0x14) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x00000001889fd634 (    0x14) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001889fd648 (   0x234) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001889fd87c (    0x10) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001889fd88c (    0x10) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001889fd89c (    0x38) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001889fd8d4 (    0x38) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001889fd90c (    0x40) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001889fd94c (    0x18) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001889fd964 (    0x18) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001889fd97c (    0x38) GCC_except_table115 [NameNList, MangledNameNList, NList] 
                0x00000001889fd9b4 (    0x64) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001889fda18 (    0x18) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001889fda30 (    0x18) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x00000001889fda48 (    0x18) GCC_except_table128 [NameNList, MangledNameNList, NList] 
                0x00000001889fda60 (    0x18) GCC_except_table130 [NameNList, MangledNameNList, NList] 
                0x00000001889fda78 (    0x18) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001889fda90 (    0x10) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x00000001889fdaa0 (    0x10) GCC_except_table146 [NameNList, MangledNameNList, NList] 
                0x00000001889fdab0 (    0x54) GCC_except_table147 [NameNList, MangledNameNList, NList] 
                0x00000001889fdb04 (    0x3c) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001889fdb40 (    0x10) GCC_except_table151 [NameNList, MangledNameNList, NList] 
                0x00000001889fdb50 (    0x68) GCC_except_table198 [NameNList, MangledNameNList, NList] 
                0x00000001889fdbb8 (    0x24) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001889fdbdc (    0x10) GCC_except_table200 [NameNList, MangledNameNList, NList] 
                0x00000001889fdbec (    0x14) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x00000001889fdc00 (    0x18) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x00000001889fdc18 (    0x2c) GCC_except_table211 [NameNList, MangledNameNList, NList] 
                0x00000001889fdc44 (    0x2c) GCC_except_table212 [NameNList, MangledNameNList, NList] 
                0x00000001889fdc70 (    0x38) GCC_except_table213 [NameNList, MangledNameNList, NList] 
                0x00000001889fdca8 (    0x2c) GCC_except_table214 [NameNList, MangledNameNList, NList] 
                0x00000001889fdcd4 (    0x14) GCC_except_table221 [NameNList, MangledNameNList, NList] 
                0x00000001889fdce8 (    0x14) GCC_except_table222 [NameNList, MangledNameNList, NList] 
                0x00000001889fdcfc (    0x14) GCC_except_table223 [NameNList, MangledNameNList, NList] 
                0x00000001889fdd10 (    0x14) GCC_except_table224 [NameNList, MangledNameNList, NList] 
                0x00000001889fdd24 (    0x30) GCC_except_table243 [NameNList, MangledNameNList, NList] 
                0x00000001889fdd54 (    0x14) GCC_except_table254 [NameNList, MangledNameNList, NList] 
                0x00000001889fdd68 (    0x90) GCC_except_table258 [NameNList, MangledNameNList, NList] 
                0x00000001889fddf8 (    0x24) GCC_except_table262 [NameNList, MangledNameNList, NList] 
                0x00000001889fde1c (    0xd4) GCC_except_table263 [NameNList, MangledNameNList, NList] 
                0x00000001889fdef0 (    0x48) GCC_except_table265 [NameNList, MangledNameNList, NList] 
                0x00000001889fdf38 (    0x40) GCC_except_table266 [NameNList, MangledNameNList, NList] 
                0x00000001889fdf78 (    0x24) GCC_except_table269 [NameNList, MangledNameNList, NList] 
                0x00000001889fdf9c (    0x10) GCC_except_table272 [NameNList, MangledNameNList, NList] 
                0x00000001889fdfac (    0x34) GCC_except_table273 [NameNList, MangledNameNList, NList] 
                0x00000001889fdfe0 (    0x14) GCC_except_table274 [NameNList, MangledNameNList, NList] 
                0x00000001889fdff4 (    0x14) GCC_except_table275 [NameNList, MangledNameNList, NList] 
                0x00000001889fe008 (    0x30) GCC_except_table276 [NameNList, MangledNameNList, NList] 
                0x00000001889fe038 (    0x38) GCC_except_table277 [NameNList, MangledNameNList, NList] 
                0x00000001889fe070 (    0x18) GCC_except_table279 [NameNList, MangledNameNList, NList] 
                0x00000001889fe088 (    0x30) GCC_except_table281 [NameNList, MangledNameNList, NList] 
                0x00000001889fe0b8 (    0x64) GCC_except_table285 [NameNList, MangledNameNList, NList] 
                0x00000001889fe11c (    0x60) GCC_except_table306 [NameNList, MangledNameNList, NList] 
                0x00000001889fe17c (    0x28) GCC_except_table318 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1a4 (     0xc) GCC_except_table349 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1b0 (    0x10) GCC_except_table359 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1c0 (    0x10) GCC_except_table390 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1d0 (    0x10) GCC_except_table394 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1e0 (    0x18) GCC_except_table400 [NameNList, MangledNameNList, NList] 
                0x00000001889fe1f8 (    0x10) GCC_except_table404 [NameNList, MangledNameNList, NList] 
                0x00000001889fe208 (    0x88) GCC_except_table408 [NameNList, MangledNameNList, NList] 
                0x00000001889fe290 (    0x10) GCC_except_table409 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2a0 (    0x10) GCC_except_table410 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2b0 (    0x10) GCC_except_table413 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2c0 (    0x10) GCC_except_table444 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2d0 (    0x10) GCC_except_table446 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2e0 (     0xc) GCC_except_table447 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2ec (    0x10) GCC_except_table452 [NameNList, MangledNameNList, NList] 
                0x00000001889fe2fc (    0x38) GCC_except_table453 [NameNList, MangledNameNList, NList] 
                0x00000001889fe334 (    0x68) GCC_except_table454 [NameNList, MangledNameNList, NList] 
                0x00000001889fe39c (    0x50) GCC_except_table462 [NameNList, MangledNameNList, NList] 
                0x00000001889fe3ec (     0xc) GCC_except_table463 [NameNList, MangledNameNList, NList] 
                0x00000001889fe3f8 (    0x2c) GCC_except_table469 [NameNList, MangledNameNList, NList] 
                0x00000001889fe424 (    0x10) GCC_except_table470 [NameNList, MangledNameNList, NList] 
                0x00000001889fe434 (    0x5c) GCC_except_table473 [NameNList, MangledNameNList, NList] 
                0x00000001889fe490 (    0x48) GCC_except_table474 [NameNList, MangledNameNList, NList] 
                0x00000001889fe4d8 (    0x34) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889fe50c (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889fe520 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889fe540 (    0x4c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001889fe58c (    0xd0) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889fe65c (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fe678 (    0x44) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001889fe6bc (    0x94) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001889fe750 (    0x1c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001889fe76c (    0x88) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001889fe7f4 (    0x54) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001889fe848 (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001889fe864 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001889fe87c (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001889fe88c (     0xc) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001889fe898 (    0x38) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fe8d0 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889fe8e4 (    0x34) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889fe918 (    0x38) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fe950 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fe960 (    0x6c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001889fe9cc (    0x18) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001889fe9e4 (    0x60) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001889fea44 (    0xdc) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001889feb20 (   0x11c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001889fec3c (    0x8c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001889fecc8 (    0x68) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001889fed30 (    0x68) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001889fed98 (    0x58) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001889fedf0 (    0x30) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001889fee20 (    0x34) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001889fee54 (    0x30) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001889fee84 (    0x60) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001889feee4 (    0x44) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001889fef28 (    0x30) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001889fef58 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001889fef68 (    0x2c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001889fef94 (    0x40) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001889fefd4 (    0x18) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001889fefec (    0x18) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001889ff004 (    0xac) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001889ff0b0 (    0x24) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001889ff0d4 (    0x30) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001889ff104 (    0x10) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001889ff114 (    0x10) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001889ff124 (    0x10) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001889ff134 (    0x10) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001889ff144 (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001889ff154 (    0x34) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889ff188 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001889ff198 (    0x2c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001889ff1c4 (     0xc) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001889ff1d0 (    0x14) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001889ff1e4 (    0x34) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889ff218 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001889ff228 (    0x3c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889ff264 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001889ff274 (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001889ff284 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001889ff294 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2a4 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2b4 (    0x10) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2c4 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2d4 (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2e4 (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001889ff2f4 (    0x10) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001889ff304 (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001889ff314 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001889ff324 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001889ff334 (    0x10) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001889ff344 (    0x10) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001889ff354 (    0x10) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001889ff364 (    0x10) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x00000001889ff374 (    0x10) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001889ff384 (    0x10) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001889ff394 (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3a4 (    0x10) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3b4 (    0x10) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3c4 (    0x10) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3d4 (    0x10) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3e4 (    0x10) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001889ff3f4 (    0x10) GCC_except_table128 [NameNList, MangledNameNList, NList] 
                0x00000001889ff404 (    0x10) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001889ff414 (    0x10) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001889ff424 (    0x10) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001889ff434 (    0x10) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001889ff444 (    0x10) GCC_except_table152 [NameNList, MangledNameNList, NList] 
                0x00000001889ff454 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889ff468 (    0xdc) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001889ff544 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001889ff558 (   0x164) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001889ff6bc (    0x1c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001889ff6d8 (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889ff700 (    0x2c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001889ff72c (    0x34) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001889ff760 (    0x34) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001889ff794 (    0x44) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001889ff7d8 (    0x44) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001889ff81c (    0x24) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001889ff840 (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001889ff85c (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001889ff86c (    0x10) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001889ff87c (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001889ff88c (    0x34) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001889ff8c0 (    0x34) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001889ff8f4 (    0x34) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001889ff928 (    0x64) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001889ff98c (    0x48) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001889ff9d4 (    0x50) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001889ffa24 (    0x64) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001889ffa88 (    0x34) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001889ffabc (    0x1c) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001889ffad8 (    0x38) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001889ffb10 (    0x40) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001889ffb50 (    0x40) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001889ffb90 (    0x1c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001889ffbac (    0x64) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001889ffc10 (    0xd4) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001889ffce4 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001889ffcf4 (    0x3c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001889ffd30 (    0x38) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001889ffd68 (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001889ffd78 (    0x14) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001889ffd8c (    0x14) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001889ffda0 (    0x4c) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001889ffdec (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001889ffdfc (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe0c (    0x14) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe20 (    0x14) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe34 (    0x10) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe44 (    0x10) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe54 (    0x10) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe64 (    0x1c) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe80 (    0x1c) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001889ffe9c (    0x24) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001889ffec0 (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001889ffed0 (     0xc) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001889ffedc (    0x10) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001889ffeec (    0x24) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001889fff10 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001889fff20 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001889fff30 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001889fff40 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001889fff54 (    0x20) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001889fff74 (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001889fff90 (    0x70) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x0000000188a00000 (    0x20) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000188a00020 (    0x40) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000188a00060 (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000188a00070 (    0x10) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000188a00080 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000188a00090 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000188a000a0 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000188a000b8 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000188a000d8 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000188a000e8 (    0xc4) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000188a001ac (    0x38) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000188a001e4 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000188a001f4 (    0x40) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000188a00234 (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000188a0024c (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000188a0025c (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000188a0026c (    0x5c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000188a002c8 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000188a002dc (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000188a00300 (    0x3c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000188a0033c (    0x50) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000188a0038c (    0x90) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000188a0041c (    0x3c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000188a00458 (    0x88) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000188a004e0 (    0x50) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x0000000188a00530 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000188a00540 (    0x3c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x0000000188a0057c (    0x14) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000188a00590 (    0xb8) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000188a00648 (    0x64) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000188a006ac (    0x68) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x0000000188a00714 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x0000000188a00724 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x0000000188a00734 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x0000000188a00744 (    0x48) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000188a0078c (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000188a007a4 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000188a007b8 (    0x38) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000188a007f0 (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000188a00810 (    0x18) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000188a00828 (    0x3c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x0000000188a00864 (    0x3c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000188a008a0 (     0xc) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x0000000188a008ac (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000188a008c8 (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000188a008e8 (    0x54) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000188a0093c (    0x34) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000188a00970 (    0x30) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000188a009a0 (    0x28) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000188a009c8 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000188a009dc (    0x5c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000188a00a38 (    0x18) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000188a00a50 (    0x28) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000188a00a78 (    0xd4) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000188a00b4c (    0x40) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x0000000188a00b8c (    0x24) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000188a00bb0 (    0x24) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000188a00bd4 (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000188a00bec (    0x50) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000188a00c3c (    0x24) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x0000000188a00c60 (    0x18) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000188a00c78 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000188a00c88 (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
            0x0000000188a00c98 (  0x4433) __TEXT __cstring
            0x0000000188a050d0 (   0x74f) __TEXT __const
                0x0000000188a050d0 (    0x14) typeinfo name for TCFFlattenContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a050e4 (    0x16) typeinfo name for TCFResurrectContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a050fa (    0x13) typeinfo name for TFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0510d (    0xa3) typeinfo name for TFontRegistryProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a051b0 (    0x2c) kWeightScale [NameNList, MangledNameNList, NList] 
                0x0000000188a051dc (    0x2c) kWidthScale [NameNList, MangledNameNList, NList] 
                0x0000000188a05208 (    0x78) kWidthPercentScale [NameNList, MangledNameNList, NList] 
                0x0000000188a05280 (    0x1a) typeinfo name for TGlobalStaticFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0529a (    0x13) typeinfo name for TStaticFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a052ad (    0x15) typeinfo name for TFontIndexProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a052c2 (    0x22) typeinfo name for TStaticFontNumberToFontRefIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a052e4 (    0x18) typeinfo name for TLocalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a052fc (    0x19) typeinfo name for TGlobalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05315 (    0x1d) typeinfo name for TGlobalFontRegistryBaseImp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05332 (    0x15) typeinfo name for TLocalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05347 (    0x10) typeinfo name for TFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05357 (    0x16) typeinfo name for TGlobalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0536d (    0x1b) typeinfo name for TGlobalStaticRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05388 (    0x1b) typeinfo name for TFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a053a3 (    0x17) typeinfo name for TFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a053ba (    0x15) typeinfo name for TFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a053cf (    0x1a) typeinfo name for TFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a053e9 (    0x22) typeinfo name for TFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0540b (    0x1e) typeinfo name for TFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05429 (    0x21) typeinfo name for TStaticFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0544a (    0x1d) typeinfo name for TStaticFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05467 (    0x1b) typeinfo name for TStaticFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05482 (    0x20) typeinfo name for TStaticFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a054a2 (    0x28) typeinfo name for TStaticFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a054ca (    0x24) typeinfo name for TStaticFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a054ee (    0x1d) typeinfo name for TStaticFontCharactersIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0550b (    0x2d) typeinfo name for TStaticFontFormatIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05538 (     0xe) typeinfo name for TFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05546 (    0x14) typeinfo name for TReferenceCounted [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0555a (    0x16) typeinfo name for TBasicFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05570 (   0x180) ClassifyReduceTraitsClass(unsigned int)::order [NameNList, MangledNameNList, NList] 
                0x0000000188a056f0 (    0x20) typeinfo name for TClientFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05710 (    0x50) typeinfo name for TLocalFontProviderXPC [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a05760 (    0x90) qdToStyleMap [NameNList, MangledNameNList, NList] 
                0x0000000188a057f0 (     0xd) typeinfo name for TFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a057fd (    0x11) typeinfo name for TFontNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0580e (    0x11) typeinfo name for TFontPathIndex [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000188a0581f (    0x32) __TEXT __oslogstring
            0x0000000188a05854 (  0x1d00) __TEXT __unwind_info
            0x0000000188a07558 (    0x38) __TEXT __eh_frame
            0x0000000188a07590 (    0xbf) __TEXT __objc_classname
            0x0000000188a07650 (  0x173d) __TEXT __objc_methname
            0x0000000188a08d8d (   0x90d) __TEXT __objc_methtype
            0x0000000188a096a0 (  0x1960) __TEXT __objc_stubs
                0x0000000188a096a0 (    0x20) objc_msgSend$EnsureFontFileAccess: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a096c0 (    0x20) objc_msgSend$EnsureFontFileAccess:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a096e0 (    0x20) objc_msgSend$URL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09700 (    0x20) objc_msgSend$URLByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09720 (    0x20) objc_msgSend$URLByAppendingPathComponent:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09740 (    0x20) objc_msgSend$URLByDeletingLastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09760 (    0x20) objc_msgSend$URLByResolvingSymlinksInPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09780 (    0x20) objc_msgSend$URLByStandardizingPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a097a0 (    0x20) objc_msgSend$URLWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a097c0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a097e0 (    0x20) objc_msgSend$XTAddFontProvider: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09800 (    0x20) objc_msgSend$XTAddFontProvider:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09820 (    0x20) objc_msgSend$XTCopyAvailableFontFamilyNames:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09840 (    0x20) objc_msgSend$XTCopyAvailableFontFamilyNames:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09860 (    0x20) objc_msgSend$XTCopyAvailableFontNames:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09880 (    0x20) objc_msgSend$XTCopyAvailableFontNames:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a098a0 (    0x20) objc_msgSend$XTCopyAvailableFonts:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a098c0 (    0x20) objc_msgSend$XTCopyAvailableFonts:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a098e0 (    0x20) objc_msgSend$XTCopyDuplicateFonts:options:domain: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09900 (    0x20) objc_msgSend$XTCopyDuplicateFonts:options:domain:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09920 (    0x20) objc_msgSend$XTCopyFamilyNamesForLanguage:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09940 (    0x20) objc_msgSend$XTCopyFamilyNamesForLanguage:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09960 (    0x20) objc_msgSend$XTCopyFontForCharacter:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09980 (    0x20) objc_msgSend$XTCopyFontForCharacter:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a099a0 (    0x20) objc_msgSend$XTCopyFontProviders [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a099c0 (    0x20) objc_msgSend$XTCopyFontProviders: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a099e0 (    0x20) objc_msgSend$XTCopyFontURLWithFontToken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09a00 (    0x20) objc_msgSend$XTCopyFontURLWithFontToken:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09a20 (    0x20) objc_msgSend$XTCopyFontWithName:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09a40 (    0x20) objc_msgSend$XTCopyFontWithName:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09a60 (    0x20) objc_msgSend$XTCopyFontsForRequest:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09a80 (    0x20) objc_msgSend$XTCopyFontsMatchingRequest:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09aa0 (    0x20) objc_msgSend$XTCopyFontsMatchingRequest:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ac0 (    0x20) objc_msgSend$XTCopyLocalizedNameForFonts:name:languageOrder:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ae0 (    0x20) objc_msgSend$XTCopyLocalizedNameForFonts:name:languageOrder:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09b00 (    0x20) objc_msgSend$XTCopyPropertiesForAllFonts:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09b20 (    0x20) objc_msgSend$XTCopyPropertiesForAllFonts:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09b40 (    0x20) objc_msgSend$XTCopyPropertiesForFont:keys:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09b60 (    0x20) objc_msgSend$XTCopyPropertiesForFont:keys:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09b80 (    0x20) objc_msgSend$XTCopyPropertiesForFonts:keys:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ba0 (    0x20) objc_msgSend$XTCopyPropertiesForFonts:keys:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09bc0 (    0x20) objc_msgSend$XTCopyPropertiesForFontsMatchingRequest:properties:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09be0 (    0x20) objc_msgSend$XTCopyPropertiesForFontsMatchingRequest:properties:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09c00 (    0x20) objc_msgSend$XTCopyPropertyForFonts:key:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09c20 (    0x20) objc_msgSend$XTCopyPropertyForFonts:key:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09c40 (    0x20) objc_msgSend$XTDisableFont: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09c60 (    0x20) objc_msgSend$XTDisableFont:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09c80 (    0x20) objc_msgSend$XTDisableFonts:scope: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ca0 (    0x20) objc_msgSend$XTDisableFonts:scope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09cc0 (    0x20) objc_msgSend$XTEnableFont: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ce0 (    0x20) objc_msgSend$XTEnableFont:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09d00 (    0x20) objc_msgSend$XTEnableFonts:scope: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09d20 (    0x20) objc_msgSend$XTEnableFonts:scope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09d40 (    0x20) objc_msgSend$XTExperimentalDataFunnel:scope:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09d60 (    0x20) objc_msgSend$XTExperimentalDataFunnel:scope:options:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09d80 (    0x20) objc_msgSend$XTGetFontScope: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09da0 (    0x20) objc_msgSend$XTGetFontScope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09dc0 (    0x20) objc_msgSend$XTGetFontToken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09de0 (    0x20) objc_msgSend$XTGetFontToken:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09e00 (    0x20) objc_msgSend$XTPing:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09e20 (    0x20) objc_msgSend$XTRegisterFontDirectory:bookmark:domain:flags:scope: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09e40 (    0x20) objc_msgSend$XTRegisterFontDirectory:bookmark:domain:flags:scope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09e60 (    0x20) objc_msgSend$XTRegisterFonts:flags:scope:sandboxExtensions:failedURLs:errors: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09e80 (    0x20) objc_msgSend$XTRegisterFonts:flags:scope:sandboxExtensions:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ea0 (    0x20) objc_msgSend$XTRemoveFontProvider: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ec0 (    0x20) objc_msgSend$XTRemoveFontProvider:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09ee0 (    0x20) objc_msgSend$XTRendezvous: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09f00 (    0x20) objc_msgSend$XTReset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09f20 (    0x20) objc_msgSend$XTUnregisterFontDirectory:scope: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09f40 (    0x20) objc_msgSend$XTUnregisterFontDirectory:scope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09f60 (    0x20) objc_msgSend$XTUnregisterFonts:scope:failedURLs:errors: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09f80 (    0x20) objc_msgSend$XTUnregisterFonts:scope:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09fa0 (    0x20) objc_msgSend$absoluteString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09fc0 (    0x20) objc_msgSend$absoluteURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a09fe0 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a000 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a020 (    0x20) objc_msgSend$addObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a040 (    0x20) objc_msgSend$addRequest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a060 (    0x20) objc_msgSend$allFontNames [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a080 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a0a0 (    0x20) objc_msgSend$allObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a0c0 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a0e0 (    0x20) objc_msgSend$anonymousListener [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a100 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a120 (    0x20) objc_msgSend$arrayByAddingObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a140 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a160 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a180 (    0x20) objc_msgSend$auditToken [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a1a0 (    0x20) objc_msgSend$autoActivationFontRefsCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a1c0 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a1e0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a200 (    0x20) objc_msgSend$callFontProvider [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a220 (    0x20) objc_msgSend$callFontProvider: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a240 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a260 (    0x20) objc_msgSend$componentsWithURL:resolvingAgainstBaseURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a280 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a2a0 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a2c0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a2e0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a300 (    0x20) objc_msgSend$createSymbolicLinkAtPath:withDestinationPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a320 (    0x20) objc_msgSend$currentConnection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a340 (    0x20) objc_msgSend$decompressedDataUsingAlgorithm:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a360 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a380 (    0x20) objc_msgSend$dictionaryWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a3a0 (    0x20) objc_msgSend$dictionaryWithContentsOfURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a3c0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a3e0 (    0x20) objc_msgSend$encodeObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a400 (    0x20) objc_msgSend$encodedData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a420 (    0x20) objc_msgSend$endpoint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a440 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a460 (    0x20) objc_msgSend$enumerateObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a480 (    0x20) objc_msgSend$externalizeFontInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a4a0 (    0x20) objc_msgSend$fileExistsAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a4c0 (    0x20) objc_msgSend$filePathURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a4e0 (    0x20) objc_msgSend$fileReferenceURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a500 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a520 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a540 (    0x20) objc_msgSend$fileURLWithPath:isDirectory:relativeToURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a560 (    0x20) objc_msgSend$finishEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a580 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a5a0 (    0x20) objc_msgSend$fontInfoFromFontRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a5c0 (    0x20) objc_msgSend$fontRefFromURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a5e0 (    0x20) objc_msgSend$fontURLFromName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a600 (    0x20) objc_msgSend$getResourceValue:forKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a620 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a640 (    0x20) objc_msgSend$initRequiringSecureCoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a660 (    0x20) objc_msgSend$initWithCallback: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a680 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a6a0 (    0x20) objc_msgSend$initWithListenerEndpoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a6c0 (    0x20) objc_msgSend$initWithMachServiceName:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a6e0 (    0x20) objc_msgSend$initWithProvider:andConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a700 (    0x20) objc_msgSend$initWithRegistryDataDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a720 (    0x20) objc_msgSend$initWithURL:readonly: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a740 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a760 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a780 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a7a0 (    0x20) objc_msgSend$invalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a7c0 (    0x20) objc_msgSend$invisibleFontNames [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a7e0 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a800 (    0x20) objc_msgSend$lastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a820 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a840 (    0x20) objc_msgSend$longValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a860 (    0x20) objc_msgSend$lowercasedNameFrom: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a880 (    0x20) objc_msgSend$minusSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a8a0 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a8c0 (    0x20) objc_msgSend$nameToURLDictionaryFor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a8e0 (    0x20) objc_msgSend$normalizeProperty:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a900 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a920 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a940 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a960 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a980 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a9a0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a9c0 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0a9e0 (    0x20) objc_msgSend$path [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aa00 (    0x20) objc_msgSend$processIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aa20 (    0x20) objc_msgSend$processInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aa40 (    0x20) objc_msgSend$processName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aa60 (    0x20) objc_msgSend$propertyForKey:andFontRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aa80 (    0x20) objc_msgSend$registryDataDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aaa0 (    0x20) objc_msgSend$registryDataDictionaryFromPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aac0 (    0x20) objc_msgSend$remoteObjectProxyWithErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aae0 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ab00 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ab20 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ab40 (    0x20) objc_msgSend$run:errorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ab60 (    0x20) objc_msgSend$scheme [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ab80 (    0x20) objc_msgSend$setClasses:forSelector:argumentIndex:ofReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aba0 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0abc0 (    0x20) objc_msgSend$setExportedInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0abe0 (    0x20) objc_msgSend$setExportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ac00 (    0x20) objc_msgSend$setFConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ac20 (    0x20) objc_msgSend$setFListener: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ac40 (    0x20) objc_msgSend$setFProvider: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ac60 (    0x20) objc_msgSend$setFReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ac80 (    0x20) objc_msgSend$setFRequest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aca0 (    0x20) objc_msgSend$setFRequests: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0acc0 (    0x20) objc_msgSend$setName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ace0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ad00 (    0x20) objc_msgSend$setPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ad20 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ad40 (    0x20) objc_msgSend$setRunLoopSource:withCurrentRunLoop: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ad60 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ad80 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ada0 (    0x20) objc_msgSend$setWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0adc0 (    0x20) objc_msgSend$setWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ade0 (    0x20) objc_msgSend$setWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ae00 (    0x20) objc_msgSend$signal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ae20 (    0x20) objc_msgSend$standarizedURLString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ae40 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ae60 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0ae80 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aea0 (    0x20) objc_msgSend$stringValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aec0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0aee0 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0af00 (    0x20) objc_msgSend$substringFromIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0af20 (    0x20) objc_msgSend$suspend [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0af40 (    0x20) objc_msgSend$synchronousRemoteObjectProxyWithErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0af60 (    0x20) objc_msgSend$uniqueingDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0af80 (    0x20) objc_msgSend$uniqueingDictionaryArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0afa0 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0afc0 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000188a0afe0 (    0x20) objc_msgSend$urlFromInternalURLString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001db422288 (  0x4848) __DATA_CONST SEGMENT
            0x00000001db422288 (   0x1e0) __DATA_CONST __got
            0x00000001db422468 (  0x2a78) __DATA_CONST __const
                0x00000001db422468 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db422488 (   0x2f8) TFontRegistry::GetCommonFontNames(unsigned long&)::kCommonPostScriptFontNames [NameNList, MangledNameNList, NList] 
                0x00000001db422780 (     0x8) kXTFontsChangedLocalNotification [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db422788 (   0x450) CreateTraitsByStyleGlossaryString(__CFString const*)::kWeightStyleGlossaryNameMap [NameNList, MangledNameNList, NList] 
                0x00000001db422bd8 (   0x180) CreateTraitsByStyleGlossaryString(__CFString const*)::kWidthStyleGlossaryNameMap [NameNList, MangledNameNList, NList] 
                0x00000001db422d58 (    0xf0) CreateTraitsByStyleGlossaryString(__CFString const*)::kSlantStyleGlossaryNameMap [NameNList, MangledNameNList, NList] 
                0x00000001db422e48 (    0x18) CreateTraitsByStyleGlossaryString(__CFString const*)::kStyleGlossaryNameMaps [NameNList, MangledNameNList, NList] 
                0x00000001db422e60 (   0x110) OS2::CopySupportedLanguages(bool) const::kUnicodeRangeLanguages [NameNList, MangledNameNList, NList] 
                0x00000001db422f70 (   0x160) OS2::CopySupportedLanguages(bool) const::kUnicodeCodePageLanguages [NameNList, MangledNameNList, NList] 
                0x00000001db4230d0 (    0x20) __block_descriptor_33_e21_B16?0^{__CFString=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4230f0 (  0x15d8) kUnicodeRanges [NameNList, MangledNameNList, NList] 
                0x00000001db4246c8 (   0x228) __block_descriptor_40_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4248f0 (   0x180) __block_descriptor_48_e36_v32?0"NSURL"8"NSDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a70 (     0x8) kXTFontPropertyURL [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a78 (     0x8) kXTFontPropertyUUID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a80 (     0x8) kXTFontPropertyBookmark [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a88 (     0x8) kXTFontPropertyName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a90 (     0x8) kXTFontPropertyFamilyName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424a98 (     0x8) kXTFontPropertyFullName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424aa0 (     0x8) kXTFontPropertySubfamilyName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424aa8 (     0x8) kXTFontPropertyInstanceName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ab0 (     0x8) kXTFontPropertyLocalizedFamilyName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ab8 (     0x8) kXTFontPropertyLocalizedFullName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ac0 (     0x8) kXTFontPropertyLocalizedSubfamilyName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ac8 (     0x8) kXTFontPropertyVersionName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ad0 (     0x8) kXTFontPropertyCopyrightName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ad8 (     0x8) kXTFontPropertyManufacturerName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ae0 (     0x8) kXTFontPropertyDesignerName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ae8 (     0x8) kXTFontPropertyTraits [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424af0 (     0x8) kXTFontPropertyLocalizedNames [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424af8 (     0x8) kXTFontPropertyCharacterSet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b00 (     0x8) kXTFontPropertyVariationAxes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b08 (     0x8) kXTFontPropertyVariations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b10 (     0x8) kXTFontPropertySupportedLanguages [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b18 (     0x8) kXTFontPropertyDesignLanguages [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b20 (     0x8) kXTFontPropertyEnabled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b28 (     0x8) kXTFontPropertyPriority [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b30 (     0x8) kXTFontPropertyFormat [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b38 (     0x8) kXTFontPropertyStringEncoding [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b40 (     0x8) kXTFontPropertyIgnoreScriptAnalysis [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b48 (     0x8) kXTFontPropertyScope [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b50 (     0x8) kXTFontPropertyUnicodeRanges [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b58 (     0x8) kXTFontPropertyFlags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b60 (     0x8) kXTFontPropertyLWFNURLs [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b68 (     0x8) kXTFontPropertyUserInstalled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b70 (     0x8) kXTFontPropertyInstallationKind [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b78 (     0x8) kXTFontPropertyDownloadableStub [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b80 (     0x8) kXTFontPropertyDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b88 (     0x8) kXTFontPropertyDirectory [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b90 (     0x8) kXTFontPropertyFontRef [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424b98 (     0x8) kXTFontPropertyPrimaryLanguage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ba0 (     0x8) kXTFontPropertyForFontsLanguageMap [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ba8 (     0x8) kXTFontPropertyNameAliases [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bb0 (     0x8) kXTFontPropertyFamilyNameAliases [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bb8 (     0x8) kXTFontURLScheme [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bc0 (     0x8) kXTFontURLFragmentSeparator [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bc8 (     0x8) kXTFontURLParameterSeparator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bd0 (     0x8) kXTFontURLParameterKeyValueSeparator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bd8 (     0x8) kXTFontURLParameterEscapedSeparator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424be0 (     0x8) kXTFontURLAdditionalEscapedChars [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424be8 (     0x8) kXTFontURLParameterPostScriptName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bf0 (     0x8) kXTFontURLParameterFamilyName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424bf8 (     0x8) kXTFontURLParameterFullName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c00 (     0x8) kXTFontURLParameterSubfamilyName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c08 (     0x8) kXTFontURLParameterVariationPrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c10 (     0x8) kXTFontPropertyDuplicateRanking [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c18 (     0x8) kXTFontPropertyGlyphCount [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c20 (     0x8) kXTFontPropertyIsBlacklisted [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c28 (     0x8) kXTFontTraitSymbolic [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c30 (     0x8) kXTFontTraitWeight [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c38 (     0x8) kXTFontTraitWidth [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c40 (     0x8) kXTFontTraitSlant [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c48 (     0x8) kXTVariationAxisName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c50 (     0x8) kXTVariationAxisMinValue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c58 (     0x8) kXTVariationAxisMaxValue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c60 (     0x8) kXTVariationAxisDefaultValue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c68 (     0x8) kXTVariationAxisIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c70 (     0x8) kXTVariationAxisFlagsKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c78 (     0x8) kXTVariationAxisHiddenKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c80 (     0x8) kXTFontManagerErrorFontURLsKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424c88 (    0x20) __block_descriptor_32_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ca8 (    0x20) __block_descriptor_32_e16_v16?0"NSData"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424cc8 (    0x20) __block_descriptor_48_e20_B16?0^{__CFArray=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ce8 (     0x8) kXTConfigurationDomainGlobalKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424cf0 (     0x8) kXTConfigurationDomainLocalKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424cf8 (     0x8) kXTConfigurationModeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424d00 (    0x90) kXTConfigurationRegistrationAllowedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db424d90 (     0x8) kXTFontStaticRegistryFontURLToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424d98 (     0x8) kXTFontStaticRegistryPSNameToURLKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424da0 (     0x8) kXTFontStaticRegistryAllFontNamesKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424da8 (     0x8) kXTFontStaticRegistryInvisibleFontNamesKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424db0 (     0x8) kXTFontStaticRegistryPSNameToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424db8 (     0x8) kXTFontStaticRegistryFamilyNameToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424dc0 (     0x8) kXTFontStaticRegistryFullNameToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424dc8 (     0x8) kXTFontStaticRegistryPSAliasNameToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424dd0 (     0x8) kXTFontStaticRegistryFamilyAliasNameToFontRefKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424dd8 (     0x8) kXTFontStaticRegistryUnicodeRangeIndexKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424de0 (     0x8) kXTFontStaticRegistryFontFormatIndexKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424de8 (     0x8) kXTFontStaticRegistryNameToLowercasedNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424df0 (     0x8) kXTFontStaticRegistryPropertiesArrayKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424df8 (     0x8) kXTFontStaticRegistryMiscInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e00 (     0x8) kXTFontStaticRegistryMiscAutoActivationFontsCountKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e08 (     0x8) kXTFontStaticRegistryNullValue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e10 (     0x8) kXTFontStaticRegistrySystemFontURLPrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e18 (     0x8) kXTFontStaticRegistryOtherFontURLPrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e20 (     0x8) kXTFontStaticRegistrySubsetFontDirectoryName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e28 (     0x8) kXTFontStaticRegistryAutoActivateFontDirectoryName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e30 (    0x20) __block_descriptor_54_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424e50 (    0x58) __block_descriptor_50_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424ea8 (    0x38) __block_descriptor_48_e9_v16?0^v8l [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001db424ee0 (    0x20) __DATA_CONST __objc_classlist
            0x00000001db424f00 (    0x28) __DATA_CONST __objc_protolist
                0x00000001db424f00 (     0x8) _OBJC_LABEL_PROTOCOL_$_XTFontProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424f08 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424f10 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424f18 (     0x8) _OBJC_LABEL_PROTOCOL_$_XTFontRegistryProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db424f20 (     0x8) _OBJC_LABEL_PROTOCOL_$_XTFontRegistryClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001db424f28 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001db424f30 (   0xb38) __DATA_CONST __objc_const
                0x00000001db424f30 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_XTFontProviderProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db424f50 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_XTFontProviderProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db424f58 (    0x18) _OBJC_CLASS_PROTOCOLS_$_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001db424f70 (    0x48) _OBJC_METACLASS_RO_$_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001db424fb8 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001db425060 (    0x48) _OBJC_$_PROP_LIST_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001db4250a8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db425278 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db425298 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db4252e0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db425380 (    0x18) _OBJC_$_PROTOCOL_REFS_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db425398 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db4253b8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001db4253c0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001db4253d8 (    0x48) _OBJC_METACLASS_RO_$_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001db425420 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001db4254c8 (    0x68) _OBJC_$_PROP_LIST_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001db425530 (   0x320) _OBJC_$_PROTOCOL_INSTANCE_METHODS_XTFontRegistryProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db425850 (   0x108) _OBJC_$_PROTOCOL_METHOD_TYPES_XTFontRegistryProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db425958 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_XTFontRegistryClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db425978 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_XTFontRegistryClientProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db425980 (    0x18) _OBJC_CLASS_PROTOCOLS_$_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001db425998 (    0x48) _OBJC_METACLASS_RO_$_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001db4259e0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001db425a08 (    0x18) _OBJC_$_PROP_LIST_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001db425a20 (    0x48) _OBJC_$_INSTANCE_VARIABLES_XTFontStaticRegistry [NameNList, MangledNameNList, NList] 
            0x00000001db425a68 (   0x6c8) __DATA_CONST __objc_selrefs
            0x00000001db426130 (   0x9a0) __DATA_CONST __objc_arraydata
                0x00000001db426130 (    0x90) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x00000001db4261c0 (    0x90) _unnamed_array_storage.102 [NameNList, MangledNameNList, NList] 
                0x00000001db426250 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x00000001db426260 (    0x30) _unnamed_array_storage.23 [NameNList, MangledNameNList, NList] 
                0x00000001db426290 (     0x8) _unnamed_array_storage.47 [NameNList, MangledNameNList, NList] 
                0x00000001db426298 (     0x8) _unnamed_array_storage.53 [NameNList, MangledNameNList, NList] 
                0x00000001db4262a0 (    0x10) _unnamed_array_storage.65 [NameNList, MangledNameNList, NList] 
                0x00000001db4262b0 (    0x18) _unnamed_array_storage.67 [NameNList, MangledNameNList, NList] 
                0x00000001db4262c8 (    0x18) _unnamed_array_storage.68 [NameNList, MangledNameNList, NList] 
                0x00000001db4262e0 (   0x7f0) _unnamed_array_storage.838 [NameNList, MangledNameNList, NList] 
        0x00000001db426ad0 (  0x92b0) __AUTH_CONST SEGMENT
            0x00000001db426ad0 (  0x2360) __AUTH_CONST __const
                0x00000001db426ad0 (    0xa0) vtable for TCFFlattenContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426b70 (    0xf0) vtable for TCFResurrectContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426c60 (    0x10) typeinfo for TCFFlattenContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426c70 (    0x10) typeinfo for TCFResurrectContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426c80 (   0x1a0) vtable for TFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426e20 (    0x10) typeinfo for TFontRegistryProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426e30 (    0x18) typeinfo for TFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db426e48 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db426e68 (    0x20) __block_literal_global.71 [NameNList, MangledNameNList, NList] 
                0x00000001db426e88 (    0x20) __block_literal_global.76 [NameNList, MangledNameNList, NList] 
                0x00000001db426ea8 (   0x1d8) vtable for TLocalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427080 (   0x1b8) vtable for TGlobalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427238 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db427258 (   0x180) vtable for TLocalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4273d8 (   0x160) vtable for TGlobalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427538 (   0x1b0) vtable for TGlobalStaticRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4276e8 (    0x70) vtable for TGlobalStaticFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427758 (    0x50) vtable for TStaticFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4277a8 (    0x48) vtable for TStaticFontNumberToFontRefIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4277f0 (    0x18) typeinfo for TGlobalStaticFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427808 (    0x10) typeinfo for TFontIndexProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427818 (    0x18) typeinfo for TStaticFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427830 (    0x18) typeinfo for TStaticFontNumberToFontRefIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427848 (    0x18) typeinfo for TLocalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427860 (    0x18) typeinfo for TGlobalFontRegistryBaseImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427878 (    0x18) typeinfo for TGlobalFontRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427890 (    0x18) typeinfo for TFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4278a8 (    0x18) typeinfo for TLocalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4278c0 (    0x18) typeinfo for TGlobalFontRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4278d8 (    0x18) typeinfo for TGlobalStaticRegistryImp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4278f0 (    0x20) __block_literal_global.154 [NameNList, MangledNameNList, NList] 
                0x00000001db427910 (    0x90) vtable for TFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4279a0 (    0x18) typeinfo for TFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4279b8 (    0x90) vtable for TFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427a48 (    0x18) typeinfo for TFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427a60 (    0x90) vtable for TFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427af0 (    0x18) typeinfo for TFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427b08 (    0x90) vtable for TFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427b98 (    0x18) typeinfo for TFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427bb0 (    0x90) vtable for TFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427c40 (    0x18) typeinfo for TFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427c58 (    0x90) vtable for TFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427ce8 (    0x18) typeinfo for TFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427d00 (    0x50) vtable for TStaticFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427d50 (    0x18) typeinfo for TStaticFontPostScriptNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427d68 (    0x50) vtable for TStaticFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427db8 (    0x18) typeinfo for TStaticFontFamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427dd0 (    0x50) vtable for TStaticFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427e20 (    0x18) typeinfo for TStaticFontFullNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427e38 (    0x50) vtable for TStaticFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427e88 (    0x18) typeinfo for TStaticFontSubfamilyNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427ea0 (    0x50) vtable for TStaticFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427ef0 (    0x18) typeinfo for TStaticFontPostScriptNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427f08 (    0x50) vtable for TStaticFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427f58 (    0x18) typeinfo for TStaticFontFamilyNameAliasesIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427f70 (    0x48) vtable for TStaticFontCharactersIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427fb8 (    0x18) typeinfo for TStaticFontCharactersIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db427fd0 (    0x48) vtable for TStaticFontFormatIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428018 (    0x18) typeinfo for TStaticFontFormatIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428030 (    0x10) typeinfo for TReferenceCounted [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428040 (    0x18) typeinfo for TFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428058 (    0x70) vtable for TBasicFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4280c8 (    0x18) typeinfo for TBasicFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4280e0 (    0x30) TFontProperties::kXTFontPropertyKeyCallBacks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428110 (    0x30) TCFStringUniquerImp::GetUniqueString(unsigned char const*, unsigned long) const::UTF8KeyCallBacks [NameNList, MangledNameNList, NList] 
                0x00000001db428140 (   0x178) vtable for TClientFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4282b8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db4282d8 (    0x18) typeinfo for TClientFontEntity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4282f0 (    0x30) __block_descriptor_48_e8_32o40o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428320 (    0x30) __block_descriptor_40_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428350 (    0x28) vtable for TLocalFontProviderXPC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428378 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428398 (    0x10) typeinfo for TLocalFontProviderXPC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4283a8 (    0x30) __block_descriptor_40_e8_32b_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4283d8 (    0x30) __block_descriptor_40_e8_32o_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428408 (    0x30) __block_descriptor_40_e8_32r_e18_v16?0"NSString"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428438 (    0x30) __block_descriptor_48_e8_32o40r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428468 (    0x30) __block_descriptor_40_e8_32r_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428498 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db4284b8 (    0x30) __block_descriptor_48_e8_32r_e25_v20?0I8"NSDictionary"12l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4284e8 (    0x30) __block_descriptor_48_e8_32r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428518 (    0x30) __block_descriptor_48_e8_32r_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428548 (    0x30) __block_descriptor_40_e8_32r_e8_v12?0I8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428578 (    0x30) __block_descriptor_56_e8_32r_e32_v28?0B8"NSArray"12"NSArray"20l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4285a8 (    0x30) __block_descriptor_80_e8_32o40o48r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4285d8 (    0x30) __block_descriptor_68_e8_32o40r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428608 (    0x30) __block_descriptor_40_e8_32r_e8_v12?0B8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428638 (    0x30) __block_descriptor_68_e8_32o40o48r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428668 (    0x30) __block_descriptor_52_e8_32o40r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428698 (    0x30) __block_descriptor_40_e8_32r_e20_v20?0B8"NSArray"12l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4286c8 (    0x30) __block_descriptor_52_e8_32o40r_e22_v16?0"NSDictionary"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4286f8 (    0x30) __block_descriptor_72_e8_32o40o48o56r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428728 (    0x30) __block_descriptor_40_e8_32r_e17_v16?0"NSArray"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428758 (    0x30) __block_descriptor_40_e8_32r_e22_v16?0"NSDictionary"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428788 (    0x30) __block_descriptor_40_e8_32r_e28_v24?0"NSArray"8"NSData"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4287b8 (    0x30) __block_descriptor_56_e8_32o40r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4287e8 (    0x30) __block_descriptor_52_e8_32r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428818 (    0x30) __block_descriptor_40_e8_32r_e26_v24?0"NSURL"8"NSData"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428848 (    0x30) __block_descriptor_52_e8_32o40r_e28_v24?0"NSArray"8"NSData"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428878 (    0x30) __block_descriptor_40_e8_32r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4288a8 (    0x20) __block_literal_global.191 [NameNList, MangledNameNList, NList] 
                0x00000001db4288c8 (    0x20) __block_literal_global.193 [NameNList, MangledNameNList, NList] 
                0x00000001db4288e8 (    0x20) __block_literal_global.196 [NameNList, MangledNameNList, NList] 
                0x00000001db428908 (    0x30) __block_descriptor_40_e8_32o_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428938 (    0x20) __block_literal_global.201 [NameNList, MangledNameNList, NList] 
                0x00000001db428958 (    0x20) __block_literal_global.203 [NameNList, MangledNameNList, NList] 
                0x00000001db428978 (    0x30) __block_descriptor_40_e8_32r_e15_v16?0"NSURL"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4289a8 (    0x30) __block_descriptor_44_e8_32r_e34_v16?0"<XTFontRegistryProtocol>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db4289d8 (    0x20) __block_literal_global.211 [NameNList, MangledNameNList, NList] 
                0x00000001db4289f8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428a18 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428a38 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428a58 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428a78 (    0x20) __block_literal_global.35 [NameNList, MangledNameNList, NList] 
                0x00000001db428a98 (    0x30) __block_descriptor_64_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428ac8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428ae8 (    0x30) __block_descriptor_75_e8_32r40r_e18_B16?0^{__CFURL=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428b18 (    0x30) __block_descriptor_56_e8_32b_e22_v32?0"NSURL"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428b48 (    0x30) __block_descriptor_56_e8_32b40c11_ZTS6TCFURL_e22_v32?0"NSURL"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428b78 (    0x88) vtable for TFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428c00 (    0x18) typeinfo for TFontIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428c18 (    0x90) vtable for TFontNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428ca8 (    0x18) typeinfo for TFontNameIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428cc0 (    0x88) vtable for TFontPathIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428d48 (    0x18) typeinfo for TFontPathIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428d60 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db428d80 (    0x30) __block_descriptor_48_ea8_32s40s_e39_v32?0"NSString"8"NSDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428db0 (    0x30) __block_descriptor_48_ea8_32s40s_e25_v32?0"NSString"816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428de0 (    0x30) __block_descriptor_64_ea8_32s40s48s56s_e35_v32?0"NSString"8"NSNumber"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db428e10 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
            0x00000001db428e30 (  0x6060) __AUTH_CONST __cfstring
            0x00000001db42ee90 (     0x8) __AUTH_CONST __auth_ptr
            0x00000001db42ee98 (    0x90) __AUTH_CONST __objc_doubleobj
            0x00000001db42ef28 (    0xa8) __AUTH_CONST __objc_intobj
            0x00000001db42efd0 (    0x50) __AUTH_CONST __objc_dictobj
            0x00000001db42f020 (    0x90) __AUTH_CONST __objc_arrayobj
            0x00000001db42f0b0 (   0x168) __AUTH_CONST __objc_const
                0x00000001db42f0b0 (    0x48) _OBJC_CLASS_RO_$_TFontProviderHandler [NameNList, MangledNameNList, NList] 
                0x00000001db42f0f8 (    0x48) _OBJC_CLASS_RO_$_TFontProviderClientXPC [NameNList, MangledNameNList, NList] 
                0x00000001db42f140 (    0x48) _OBJC_CLASS_RO_$_XTypeXPCClient [NameNList, MangledNameNList, NList] 
                0x00000001db42f188 (    0x48) _OBJC_METACLASS_RO_$_XTFontStaticRegistry [NameNList, MangledNameNList, NList] 
                0x00000001db42f1d0 (    0x48) _OBJC_CLASS_RO_$_XTFontStaticRegistry [NameNList, MangledNameNList, NList] 
            0x00000001db42f218 (   0xb68) __AUTH_CONST __auth_got
        0x00000001d72a0be8 (   0x1a0) __AUTH SEGMENT
            0x00000001d72a0be8 (   0x140) __AUTH __objc_data
                0x00000001d72a0be8 (    0x28) OBJC_CLASS_$_TFontProviderHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0c10 (    0x28) OBJC_METACLASS_$_TFontProviderHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0c38 (    0x28) OBJC_CLASS_$_TFontProviderClientXPC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0c60 (    0x28) OBJC_METACLASS_$_TFontProviderClientXPC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0c88 (    0x28) OBJC_CLASS_$_XTypeXPCClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0cb0 (    0x28) OBJC_METACLASS_$_XTypeXPCClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0cd8 (    0x28) OBJC_CLASS_$_XTFontStaticRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d72a0d00 (    0x28) OBJC_METACLASS_$_XTFontStaticRegistry [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d72a0d28 (    0x60) __AUTH __data
                0x00000001d72a0d28 (    0x60) XTGetFunctions::functions [NameNList, MangledNameNList, NList] 
        0x00000001d5ccbc80 (   0x718) __DATA SEGMENT
            0x00000001d5ccbc80 (    0x18) __DATA __objc_protorefs
                0x00000001d5ccbc80 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_XTFontProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbc88 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_XTFontRegistryProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbc90 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_XTFontRegistryClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5ccbc98 (    0xd8) __DATA __objc_classrefs
            0x00000001d5ccbd70 (    0x20) __DATA __objc_superrefs
            0x00000001d5ccbd90 (    0x34) __DATA __objc_ivar
                0x00000001d5ccbd90 (     0x4) OBJC_IVAR_$_TFontProviderHandler.fPID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbd94 (     0x4) OBJC_IVAR_$_TFontProviderHandler.fProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbd98 (     0x4) OBJC_IVAR_$_TFontProviderHandler.fConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbd9c (     0x4) OBJC_IVAR_$_TFontProviderHandler.fRequest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbda0 (     0x4) OBJC_IVAR_$_TFontProviderHandler.fReply [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbda4 (     0x4) OBJC_IVAR_$_TFontProviderClientXPC.fRunLoopSource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbda8 (     0x4) OBJC_IVAR_$_TFontProviderClientXPC.fPossibleRunLoop [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdac (     0x4) OBJC_IVAR_$_TFontProviderClientXPC.fCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdb0 (     0x4) OBJC_IVAR_$_TFontProviderClientXPC.fRequests [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdb4 (     0x4) OBJC_IVAR_$_TFontProviderClientXPC.fListener [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdb8 (     0x4) OBJC_IVAR_$_XTypeXPCClient.fConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdbc (     0x4) OBJC_IVAR_$_XTFontStaticRegistry._registryData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdc0 (     0x4) OBJC_IVAR_$_XTFontStaticRegistry._lowercasedNamesCache [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5ccbdc8 (   0x358) __DATA __data
                0x00000001d5ccbdc8 (    0x10) TCFBookmark::GetDefaultProperties()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdd8 (     0x8) kFontsDirectoryName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbde0 (     0x8) kFontsDisabledDirectoryName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbde8 (     0x8) TFontRegistry::kAvailableFontURLsAddedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdf0 (     0x8) TFontRegistry::kAvailableFontURLsRemovedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbdf8 (    0x10) GetTheLocaleManager()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe08 (     0x8) TFontMetadata::CreateMetadata(__CFURL const*, CGFont*, bool)::sMetadataDir [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe10 (    0x10) TLocalFontRegistry::GetRegistry()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe20 (    0x10) TGlobalFontRegistry::GetRegistry()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe30 (     0x8) TSubsetGenerationSeed<TGeneralSeed>::sGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe38 (    0x10) TBasicFontEntity::GetBasicProperties()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccbe48 (    0x60) _OBJC_PROTOCOL_$_XTFontProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbea8 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbf08 (    0x60) _OBJC_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbf68 (    0x60) _OBJC_PROTOCOL_$_XTFontRegistryProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccbfc8 (    0x60) _OBJC_PROTOCOL_$_XTFontRegistryClientProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc028 (    0x40) TCharacterRejectCache::TCharacterRejectCache()::sInitMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc068 (    0x10) TXTypeUIImp::GetCoreTextUI()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc078 (    0x40) TRequestCache::sMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc0b8 (    0x10) TSessionManager::GetSessionManager()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc0c8 (     0x8) GetAlternateFrameworkPath.alternateFramework [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc0d0 (     0x8) kXTReportKeyStandardFontsNotRestored [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc0d8 (     0x8) kXTReportKeyFontsRemoved [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc0e0 (    0x40) TCFFontMoverMessagePort::sMessagePortMutex [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5ccc120 (    0xa8) __DATA __common
                0x00000001d5ccc120 (     0x8) TCFBookmark::sDefaultProperties [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc128 (     0x8) TFontRegistry::sFrameworkFontChangedCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc130 (     0x8) TDownloadableFontManager::fSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc138 (     0x8) TDownloadableFontManager::sCheckedFontNames [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc140 (     0x8) TGlobalFontRegistryImp::fXTypeServer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc148 (     0x8) TLocalFontRegistry::sRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc150 (     0x8) TGlobalFontRegistry::sRegistry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc158 (     0x8) TBasicFontEntity::sBasicProperties [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc160 (     0x8) TFontProperties::sFontProperties [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc168 (     0x8) TCFStringUniquer::sStringUniquer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc170 (     0x8) TCharacterRejectCache::sPerThreadCacheKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc178 (     0x8) TXTypeUIImp::sCoreTextUI [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc180 (     0x8) TAutoActivationManager::sFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc188 (     0x8) TAutoActivationManager::sRefusedRequests [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc190 (     0x8) TAutoActivationManager::sATSPrefsChecked [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc198 (     0x8) TAutoActivationManager::fSemaphore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1a0 (     0x8) TRequestCache::sCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1a8 (     0x8) TSessionManager::sSessionManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1b0 (     0x8) gXTypeIgnoreServer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1b8 (     0x8) __crashreporter_info__ [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1c0 (     0x8) TUniqueingFilter::sUniqueingCache [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5ccc1c8 (   0x1d0) __DATA __bss
                0x00000001d5ccc1c8 (     0x8) gLocaleManager [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1d0 (     0x1) TDownloadableFontManager::ShouldPreventDownloadingFonts()::sHasChecked [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1d1 (     0x7) TDownloadableFontManager::ShouldPreventDownloadingFonts()::sShouldPreventDownloadingFonts [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1d8 (     0x8) TDownloadableFontManager::lock()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc1e0 (    0x20) TDownloadableFontManager::GetPropertiesToFetch()::kPropsToFetch [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc200 (     0x8) guard variable for TDownloadableFontManager::GetPropertiesToFetch()::kPropsToFetch [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc208 (     0x8) TDownloadableFontManager::GetPropertiesToFetch()::sProperties [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc210 (     0x8) TDownloadableFontManager::GetPropertiesToFetch()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc218 (     0x8) TDownloadableFontManager::AutoDownloadableNames()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc220 (     0x8) TDownloadableFontManager::AutoDownloadableNames()::sAutoDownloadableNames [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc228 (     0x8) WeakLinked::ATSFontGetContainer(unsigned int, unsigned int, unsigned int*)::func [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc230 (     0x8) guard variable for WeakLinked::ATSFontGetContainer(unsigned int, unsigned int, unsigned int*)::func [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc238 (     0x8) WeakLinked::ATSFontFindFromContainer(unsigned int, unsigned int, unsigned long, unsigned int*, unsigned long*)::func [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc240 (     0x8) guard variable for WeakLinked::ATSFontFindFromContainer(unsigned int, unsigned int, unsigned long, unsigned int*, unsigned long*)::func [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc248 (     0x8) TGlobalFontRegistryImp::InitXPC()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc250 (     0x8) GetATSHandle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc258 (     0x8) GetATSHandle()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc260 (     0x8) TFontEntity::CopyRegistrationProperties() const::standardKeySet [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc268 (     0x8) TCFStringUniquerImp::GetUniqueString(unsigned char const*, unsigned long) const::sUniqueStringLock [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc270 (     0x8) TCFStringUniquerImp::GetUniqueString(unsigned char const*, unsigned long) const::sUniqueStringTable [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc278 (     0x8) TCFStringUniquer::GetStringUniquer()::createOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc280 (     0x8) TClientFontEntity::GetFlags() const::coreWebFontsArray [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc288 (     0x8) TClientFontEntity::StaticRegistryForFontURL(__CFURL const*)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc290 (     0x8) TClientFontEntity::StaticRegistryForFontURL(__CFURL const*)::sStaticRegistry [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc298 (     0x8) TLocalFontProviderXPC::GetQueue()::sLocalFontProviderXPCQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2a0 (     0x8) TLocalFontProviderXPC::GetQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2a8 (     0x1) TFontQueryOptions::ShouldAutoActivate(__CFDictionary const*) const::sCheckedBundleAlready [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2a9 (     0x7) TFontQueryOptions::ShouldAutoActivate(__CFDictionary const*) const::sBundleSaysNoAutoActivation [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2b0 (     0x8) TAutoActivationManager::lock()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2b8 (     0x8) TAutoActivationManager::GetAutoActivationSetting() const::sLastSetting [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2c0 (     0x8) GetSettingForString(__CFString const*)::sLookup [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2c8 (     0x8) TRequestCache::TRequestCache()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2d0 (     0x8) TFontInfo::CopyInfoFileURLForFontURL(__CFURL const*, unsigned long, unsigned long)::sFontInfoDir [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2d8 (     0x8) TFontInfo::CopyInfoFileURLForFontURL(__CFURL const*, unsigned long, unsigned long)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2e0 (     0x8) TSessionManager::GetFontAssetDirectoryPath()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2e8 (     0x8) TSessionManager::GetFontAssetDirectoryPath()::sAssetDirectoryPath [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2f0 (     0x8) TSessionManager::GetInstallationKindForFontURL(__CFURL const*)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc2f8 (     0x8) TSessionManager::GetInstallationKindForFontURL(__CFURL const*)::sCachedPaths [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc300 (     0x8) DoRegisterURLsWithATS::atsRegisterURLsProc [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc308 (     0x8) DoRegisterDataWithATS::atsRegisterDataProc [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc310 (     0x8) DoEnableURLsWithATS::atsEnableURLsProc [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc318 (     0x8) GetSyncATSQueue()::sSyncATSQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc320 (     0x8) GetSyncATSQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc328 (     0x8) GetATSDirPath.atsDir [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc330 (     0x8) gUsingAlternateFramework [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc338 (     0x8) GetATSResourcesDirPath.atsResources [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc340 (     0x8) GetDefaultATSResourcesDirPath.atsResources [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc348 (     0x8) GetDefaultATSSupportDirPath.atsSupport [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc350 (    0x30) TFontNameIndex::GetIndexDictKeyCallBacks() const::sCFDictionaryKeyIgnoringCaseCallBacks [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc380 (     0x8) -[XTFontStaticRegistry propertyForKey:andFontRef:]::sCharacterSetCache [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc388 (     0x8) -[XTFontStaticRegistry propertyForKey:andFontRef:]::once [NameNList, MangledNameNList, NList] 
                0x00000001d5ccc390 (     0x8) TUniqueingFilter::TUniqueingFilter()::onceToken [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
