/System/Library/PrivateFrameworks/PerformanceControlKit.framework/Versions/A/PerformanceControlKit [arm64e, 0.037257 seconds]:
    1E7EA938-68F0-31F2-A876-8E04A3DCE09B /System/Library/PrivateFrameworks/PerformanceControlKit.framework/Versions/A/PerformanceControlKit [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000020b0e7000 ( 0x10000) __TEXT SEGMENT
            0x000000020b0e7000 (  0x1044) MACH_HEADER
            0x000000020b0e8044 (  0x9824) __TEXT __text
                0x000000020b0e8044 (    0x58) clpc::user::iokit::Object::~Object() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e809c (     0x4) clpc::user::iokit::Object::~Object() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e80a0 (    0x28) clpc::user::iokit::Object::~Object() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e80c8 (     0x4) clpc::user::iokit::RegistryEntry::~RegistryEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e80cc (     0x4) clpc::user::iokit::RegistryEntry::~RegistryEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e80d0 (    0x28) clpc::user::iokit::RegistryEntry::~RegistryEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e80f8 (    0x64) clpc::user::iokit::Service::~Service() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e815c (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8168 (     0x4) clpc::user::iokit::Service::~Service() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e816c (    0x28) clpc::user::iokit::Service::~Service() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8194 (    0x60) clpc::user::iokit::CLPC::~CLPC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e81f4 (     0x4) clpc::user::iokit::CLPC::~CLPC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e81f8 (    0x28) clpc::user::iokit::CLPC::~CLPC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8220 (    0x2c) clpc::user::ioreport::Channel::~Channel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e824c (    0x2c) clpc::user::ioreport::Channel::~Channel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8278 (    0x3c) clpc::user::ioreport::Channel::~Channel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e82b4 (    0x2c) clpc::user::ioreport::Sample::~Sample() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e82e0 (    0x2c) clpc::user::ioreport::Sample::~Sample() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e830c (    0x3c) clpc::user::ioreport::Sample::~Sample() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8348 (    0x58) clpc::user::ioreport::Subscription::~Subscription() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e83a0 (     0x4) clpc::user::ioreport::Subscription::~Subscription() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e83a4 (    0x28) clpc::user::ioreport::Subscription::~Subscription() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e83cc (    0x44) +[CLPCPolicyInterface createClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8410 (    0x88) clpc::user::ioreport::ChannelList::withAllChannels(clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8498 (    0x88) clpc::user::ioreport::ChannelList::fromCategories(unsigned short, clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8520 (    0x88) clpc::user::ioreport::ChannelList::fromFormat(clpc::user::ioreport::ReportFormat, clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e85a8 (    0xe0) clpc::user::ioreport::ChannelList::fromGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8688 (    0xe4) clpc::user::ioreport::ChannelList::fromGroup(NSString*, NSString*, clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e876c (    0x8c) clpc::user::ioreport::ChannelList::fromProvider(clpc::user::iokit::Service&, clpc::user::ioreport::QueryOpts, NSError* __autoreleasing*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e87f8 (    0x64) -[CLPCReportingStatSelection init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e885c (    0x60) -[CLPCReportingStatSelection isSelected:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e88bc (   0x120) (anonymous namespace)::populate_error_unsupported_stat(CLPCReportingStatID, NSError* __autoreleasing*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e89dc (    0x5c) -[CLPCReportingStatSelection selectStat:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8a38 (    0x5c) -[CLPCReportingStatSelection deselectStat:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8a94 (    0xb8) -[CLPCReportingStatSelection setStatsOfSchema:selected:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8b4c (   0x120) (anonymous namespace)::populate_error_unsupported_schema(CLPCReportingSchemaID, NSError* __autoreleasing*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8c6c (     0xc) -[CLPCReportingStatSelection selectStatsOfSchema:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8c78 (     0xc) -[CLPCReportingStatSelection deselectStatsOfSchema:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8c84 (    0x10) -[CLPCReportingStatSelection selectAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8c94 (     0xc) -[CLPCReportingStatSelection deselectAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8ca0 (    0x80) -[CLPCReportingStatSelection enumerate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8d20 (    0x98) -[CLPCReportingStatSelection selectedStats] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8db8 (    0x74) -[CLPCReportingSchemaColumn init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e8e2c (   0x2a8) -[CLPCReportingSchemaColumn dictionaryRepresentation] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90d4 (     0x8) -[CLPCReportingSchemaColumn format] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90dc (     0x8) -[CLPCReportingSchemaColumn setFormat:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90e4 (     0x8) -[CLPCReportingSchemaColumn type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90ec (     0x8) -[CLPCReportingSchemaColumn setType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90f4 (     0x8) -[CLPCReportingSchemaColumn statID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e90fc (     0x8) -[CLPCReportingSchemaColumn setStatID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9104 (     0x8) -[CLPCReportingSchemaColumn metadataType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e910c (     0x8) -[CLPCReportingSchemaColumn setMetadataType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9114 (     0x8) -[CLPCReportingSchemaColumn valueID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e911c (     0xc) -[CLPCReportingSchemaColumn setValueID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9128 (     0x8) -[CLPCReportingSchemaColumn name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9130 (     0xc) -[CLPCReportingSchemaColumn setName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e913c (    0x44) -[CLPCReportingSchemaColumn .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9180 (    0xc8) -[CLPCReportingSchema init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9248 (    0x64) -[CLPCReportingSchema stageColumn:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e92ac (    0x68) -[CLPCReportingSchema finalizeColumns] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9314 (     0x8) -[CLPCReportingSchema schemaID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e931c (     0x8) -[CLPCReportingSchema setSchemaID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9324 (     0x8) -[CLPCReportingSchema columns] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e932c (    0x44) -[CLPCReportingSchema .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9370 (    0xbc) -[CLPCReportingRows init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e942c (     0x8) -[CLPCReportingRows schema] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9434 (     0xc) -[CLPCReportingRows setSchema:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9440 (     0x8) -[CLPCReportingRows rows] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9448 (     0xc) -[CLPCReportingRows setRows:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9454 (    0x44) -[CLPCReportingRows .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9498 (    0x90) -[CLPCReportingReadResult init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9528 (    0x48) std::__1::array<CLPCReportingRows* __strong, 7ul>::fill[abi:v160006](CLPCReportingRows* const __strong&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9570 (    0x64) -[CLPCReportingReadResult setStatRows:forIndex:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e95d4 (    0x44) -[CLPCReportingReadResult hasRowsForSchemaID:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9618 (   0x1b0) -[CLPCReportingReadResult rowsForSchemaID:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e97c8 (   0x104) -[CLPCReportingReadResult enumerate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e98cc (    0xf0) -[CLPCReportingReadResult debugDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e99bc (   0x30c) __43-[CLPCReportingReadResult debugDescription]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9cc8 (     0x8) __copy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9cd0 (     0x8) __destroy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9cd8 (    0x34) -[CLPCReportingReadResult .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9d0c (    0x18) -[CLPCReportingReadResult .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0e9d24 (   0x908) -[CLPCReportingClient init:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ea62c (    0xe0) (anonymous namespace)::populate_error_property_read(NSError* __autoreleasing*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ea70c (    0xe0) (anonymous namespace)::populate_error_internal(NSError* __autoreleasing*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ea7ec (   0x160) -[CLPCReportingClient obfuscate:context:data:bundle:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ea94c (    0x3c) clpc::user::ioreport::ChannelList::count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ea988 (    0xcc) clpc::user::ioreport::ChannelList::iterate(std::__1::function<void (clpc::user::ioreport::Channel)>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eaa54 (    0x3c) -[CLPCReportingClient schemaIDForStatID:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eaa90 (    0x94) -[CLPCReportingClient supportedStats] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eab24 (    0x9c) -[CLPCReportingClient enabledStats] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eabc0 (   0x6b0) -[CLPCReportingClient enableStats:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb270 (    0xe8) clpc::user::ioreport::ChannelList::subscribe(NSError* __autoreleasing*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb358 (    0xa8) std::__1::vector<CLPCReportingStatID, std::__1::allocator<CLPCReportingStatID>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb400 (   0x108) -[CLPCReportingClient ensureStatsEnabled:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb508 (    0xb0) -[CLPCReportingClient clearSchemas] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb5b8 (    0x48) std::__1::array<CLPCReportingSchema* __strong, 7ul>::fill[abi:v160006](CLPCReportingSchema* const __strong&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eb600 (   0x554) -[CLPCReportingClient buildSchemas:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ebb54 (   0x214) -[CLPCReportingClient buildSchemas:error:]::$_7::operator()(CLPCReportingSchemaID, CLPCReportingColumnFormat, CLPCReportingColumnType, CLPCReportingStatID, CLPCReportingMetadataType, NSNumber*, NSString*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ebd68 (   0x3f8) -[CLPCReportingClient convertSampleList:error:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec160 (   0x130) -[CLPCReportingClient readStats:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec290 (   0x1f4) -[CLPCReportingClient readDeltaStats:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec484 (   0x10c) -[CLPCReportingClient .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec590 (    0xe0) -[CLPCReportingClient .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec670 (    0x44) +[CLPCReportingInterface createClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec6b4 (    0xac) invocation function for block in clpc::user::ioreport::ChannelList::iterate(std::__1::function<void (clpc::user::ioreport::Channel)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec760 (     0xc) __copy_helper_block_ea8_32c55_ZTSNSt3__18functionIFvN4clpc4user8ioreport7ChannelEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec76c (     0x8) __destroy_helper_block_ea8_32c55_ZTSNSt3__18functionIFvN4clpc4user8ioreport7ChannelEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec774 (    0x4c) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec7c0 (     0x4) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec7c4 (    0x28) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec7ec (    0x98) std::__1::__function::__value_func<void (clpc::user::ioreport::Channel)>::__value_func[abi:v160006](std::__1::__function::__value_func<void (clpc::user::ioreport::Channel)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec884 (    0xb8) invocation function for block in clpc::user::ioreport::ChannelList::filter(std::__1::function<bool (clpc::user::ioreport::Channel)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec93c (     0xc) __copy_helper_block_ea8_32c55_ZTSNSt3__18functionIFbN4clpc4user8ioreport7ChannelEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec948 (     0x8) __destroy_helper_block_ea8_32c55_ZTSNSt3__18functionIFbN4clpc4user8ioreport7ChannelEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec950 (    0x98) std::__1::__function::__value_func<bool (clpc::user::ioreport::Channel)>::__value_func[abi:v160006](std::__1::__function::__value_func<bool (clpc::user::ioreport::Channel)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ec9e8 (    0x18) std::__1::vector<CLPCReportingStatID, std::__1::allocator<CLPCReportingStatID>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eca00 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eca5c (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eca90 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CLPCReportingStatID>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CLPCReportingStatID>>(std::__1::allocator<CLPCReportingStatID>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecac8 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecafc (     0x4) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb00 (     0x4) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb04 (    0x54) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb58 (    0x30) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::__clone(std::__1::__function::__base<void (clpc::user::ioreport::Sample)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb88 (     0x4) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb8c (     0x4) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecb90 (   0x11c) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::operator()(clpc::user::ioreport::Sample&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eccac (    0x40) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eccec (     0xc) std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eccf8 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<unsigned int, void*>*> std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::find<unsigned int>(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecdac (    0x4c) std::type_info::operator==[abi:v160006](std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecdf8 (    0xac) invocation function for block in clpc::user::ioreport::SampleList::iterate(std::__1::function<void (clpc::user::ioreport::Sample)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecea4 (     0xc) __copy_helper_block_ea8_32c54_ZTSNSt3__18functionIFvN4clpc4user8ioreport6SampleEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eceb0 (     0x8) __destroy_helper_block_ea8_32c54_ZTSNSt3__18functionIFvN4clpc4user8ioreport6SampleEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eceb8 (    0x98) std::__1::__function::__value_func<void (clpc::user::ioreport::Sample)>::__value_func[abi:v160006](std::__1::__function::__value_func<void (clpc::user::ioreport::Sample)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecf50 (    0x4c) std::__1::__hash_table<CLPCReportingStatID, std::__1::hash<CLPCReportingStatID>, std::__1::equal_to<CLPCReportingStatID>, std::__1::allocator<CLPCReportingStatID>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ecf9c (    0x84) std::__1::__function::__value_func<void (clpc::user::ioreport::Channel)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed020 (    0x84) std::__1::__function::__value_func<bool (clpc::user::ioreport::Channel)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed0a4 (    0x84) std::__1::__function::__value_func<void (clpc::user::ioreport::Sample)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed128 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<CLPCReportingStatID, void*>*>, bool> std::__1::__hash_table<CLPCReportingStatID, std::__1::hash<CLPCReportingStatID>, std::__1::equal_to<CLPCReportingStatID>, std::__1::allocator<CLPCReportingStatID>>::__emplace_unique_key_args<CLPCReportingStatID, CLPCReportingStatID const&>(CLPCReportingStatID const&, CLPCReportingStatID const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed338 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed428 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed584 (   0x114) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__assign_unique<std::__1::pair<unsigned int const, CLPCReportingStatID> const*>(std::__1::pair<unsigned int const, CLPCReportingStatID> const*, std::__1::pair<unsigned int const, CLPCReportingStatID> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed698 (    0x58) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed6f0 (   0x108) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__node_insert_unique_prepare[abi:v160006](unsigned long, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed7f8 (    0xb8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__node_insert_unique_perform[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ed8b0 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__emplace_unique_key_args<unsigned int, std::__1::pair<unsigned int const, CLPCReportingStatID> const&>(unsigned int const&, std::__1::pair<unsigned int const, CLPCReportingStatID> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0edac4 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNLis...
                0x000000020b0edce0 (   0x218) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList,...
                0x000000020b0edef8 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, PEXT...
                0x000000020b0ee114 (   0x218) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merg...
                0x000000020b0ee32c (   0x114) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__assign_multi<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>>(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>, std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>) [FUNC, PE...
                0x000000020b0ee440 (   0x158) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__node_insert_multi_prepare(unsigned long, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ee598 (    0xe8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__node_insert_multi_perform(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ee680 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__rehash<false>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ee770 (   0x174) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__do_rehash<false>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ee8e4 (    0x7c) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CLPCReportingStatID>>>::__emplace_multi<std::__1::pair<unsigned int const, CLPCReportingStatID> const&>(std::__1::pair<unsigned int const, CLPCReportingStatID> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ee960 (   0x114) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__assign_multi<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>>(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, F...
                0x000000020b0eea74 (   0x158) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__node_insert_multi_prepare(unsigned long, std::__1::__hash_value_type<unsigned int, unsigned int>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eebcc (    0xe8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__node_insert_multi_perform(std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eecb4 (    0x7c) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_multi<std::__1::pair<unsigned int const, unsigned int> const&>(std::__1::pair<unsigned int const, unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eed30 (     0x4) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eed34 (     0x4) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eed38 (    0x48) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eed80 (    0x24) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::__clone(std::__1::__function::__base<void (clpc::user::ioreport::Channel)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eeda4 (     0x4) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eeda8 (     0x4) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eedac (    0xc8) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::operator()(clpc::user::ioreport::Channel&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eee74 (    0x40) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eeeb4 (     0xc) std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eeec0 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<CLPCReportingStatID, void*>*> std::__1::__hash_table<CLPCReportingStatID, std::__1::hash<CLPCReportingStatID>, std::__1::equal_to<CLPCReportingStatID>, std::__1::allocator<CLPCReportingStatID>>::find<CLPCReportingStatID>(CLPCReportingStatID const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eef74 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<CLPCReportingStatID, void*>*>, bool> std::__1::__hash_table<CLPCReportingStatID, std::__1::hash<CLPCReportingStatID>, std::__1::equal_to<CLPCReportingStatID>, std::__1::allocator<CLPCReportingStatID>>::__emplace_unique_key_args<CLPCReportingStatID, CLPCReportingStatID>(CLPCReportingStatID const&, CLPCReportingStatID&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef184 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<unsigned int, void*>*>, bool> std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int, unsigned int const&>(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef398 (     0x4) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef39c (     0x4) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef3a0 (    0x4c) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef3ec (    0x28) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::__clone(std::__1::__function::__base<bool (clpc::user::ioreport::Channel)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef414 (     0x4) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef418 (     0x4) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef41c (    0xa0) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::operator()(clpc::user::ioreport::Channel&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef4bc (    0x40) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef4fc (     0xc) std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef508 (    0x68) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>>::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef570 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>>::__emplace_unique_key_args<unsigned long long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long&&>, std::__1::tuple<>>(unsigned long long const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigne...
                0x000000020b0ef784 (     0x4) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef788 (     0x4) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef78c (    0x64) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef7f0 (    0x40) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::__clone(std::__1::__function::__base<void (clpc::user::ioreport::Sample)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef830 (     0x4) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef834 (     0x4) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0ef838 (   0x5fc) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::operator()(clpc::user::ioreport::Sample&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efe34 (    0x40) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efe74 (     0xc) std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efe80 (     0x4) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efe84 (     0x4) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efe88 (    0x54) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0efedc (    0x30) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::__clone(std::__1::__function::__base<void (clpc::user::ioreport::Sample)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eff0c (     0x4) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eff10 (     0x4) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0eff14 (   0x7f4) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::operator()(clpc::user::ioreport::Sample&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0708 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000020b0f0720 (    0x40) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0760 (     0xc) std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f076c (   0x188) -[CLPCReportingClient convertSampleList:error:]::$_8::operator()(CLPCReportingSchemaID, unsigned long, unsigned long, NSNumber*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f08f4 (    0xa0) -[CLPCUserClient init:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0994 (   0x128) -[CLPCUserClient connect:] [FUNC, OBJC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0abc (     0x8) -[CLPCUserClient init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0ac4 (   0x148) -[CLPCUserClient isInLowPowerMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0c0c (   0x1c0) -[CLPCUserClient setLowPowerMode:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0dcc (   0x14c) -[CLPCUserClient isInGameMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f0f18 (   0x1bc) -[CLPCUserClient setGameMode:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f10d4 (   0x164) -[CLPCUserClient setGameModeOnProcess:targetProcess:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f1238 (   0x14c) -[CLPCUserClient isInSustainableMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f1384 (   0x1c4) -[CLPCUserClient setSustainableMode:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f1548 (   0x178) -[CLPCUserClient reportingObfuscationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f16c0 (     0x8) -[CLPCUserClient .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f16c8 (    0x2c) -[CLPCUserClient .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020b0f16f4 (   0x174) clpc::user::iokit::CLPC::CLPC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000020b0f1868 (   0x460) __TEXT __auth_stubs
                0x000000020b0f1868 (    0x10) DYLD-STUB$$CCDigestCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1878 (    0x10) DYLD-STUB$$CCDigestDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1888 (    0x10) DYLD-STUB$$CCDigestFinal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1898 (    0x10) DYLD-STUB$$CCDigestReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18a8 (    0x10) DYLD-STUB$$CCDigestUpdate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18b8 (    0x10) DYLD-STUB$$CFAllocatorGetDefault [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18c8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18d8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18e8 (    0x10) DYLD-STUB$$IOConnectCallMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f18f8 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1908 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1918 (    0x10) DYLD-STUB$$IOReportArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1928 (    0x10) DYLD-STUB$$IOReportChannelGetChannelID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1938 (    0x10) DYLD-STUB$$IOReportCopyAllChannels [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1948 (    0x10) DYLD-STUB$$IOReportCopyChannelsForDriver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1958 (    0x10) DYLD-STUB$$IOReportCopyChannelsInCategories [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1968 (    0x10) DYLD-STUB$$IOReportCopyChannelsInGroup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1978 (    0x10) DYLD-STUB$$IOReportCopyChannelsOfFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1988 (    0x10) DYLD-STUB$$IOReportCreateSamples [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1998 (    0x10) DYLD-STUB$$IOReportCreateSamplesDelta [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19a8 (    0x10) DYLD-STUB$$IOReportCreateSubscription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19b8 (    0x10) DYLD-STUB$$IOReportGetChannelCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19c8 (    0x10) DYLD-STUB$$IOReportHistogramGetBucketCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19d8 (    0x10) DYLD-STUB$$IOReportHistogramGetBucketHits [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19e8 (    0x10) DYLD-STUB$$IOReportHistogramGetBucketSum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f19f8 (    0x10) DYLD-STUB$$IOReportIterate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a08 (    0x10) DYLD-STUB$$IOReportPrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a18 (    0x10) DYLD-STUB$$IOReportSimpleGetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a28 (    0x10) DYLD-STUB$$IOReportStateGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a38 (    0x10) DYLD-STUB$$IOReportStateGetIDForIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a48 (    0x10) DYLD-STUB$$IOReportStateGetInTransitions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a58 (    0x10) DYLD-STUB$$IOReportStateGetResidency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a68 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a78 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a88 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1a98 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1aa8 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ab8 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ac8 (    0x10) DYLD-STUB$$std::runtime_error::runtime_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ad8 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ae8 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1af8 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b08 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b18 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b28 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b38 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b48 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b58 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b68 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b78 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b88 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1b98 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ba8 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1bb8 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1bc8 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1bd8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1be8 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1bf8 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c08 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c18 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c28 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c38 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c48 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c58 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c68 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c78 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c88 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1c98 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1ca8 (    0x10) DYLD-STUB$$setpriority [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020b0f1cb8 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000020b0f1cc8 (   0x360) __TEXT __objc_methlist
                0x000000020b0f1cc8 (    0x18) _OBJC_$_CLASS_METHODS_CLPCPolicyInterface [NameNList, MangledNameNList, NList] 
                0x000000020b0f1ce0 (    0x18) _OBJC_$_CLASS_METHODS_CLPCReportingInterface [NameNList, MangledNameNList, NList] 
                0x000000020b0f1cf8 (    0x78) _OBJC_$_INSTANCE_METHODS_CLPCReportingClient [NameNList, MangledNameNList, NList] 
                0x000000020b0f1d70 (    0x60) _OBJC_$_INSTANCE_METHODS_CLPCReportingReadResult [NameNList, MangledNameNList, NList] 
                0x000000020b0f1dd0 (    0x50) _OBJC_$_INSTANCE_METHODS_CLPCReportingRows [NameNList, MangledNameNList, NList] 
                0x000000020b0f1e20 (    0x48) _OBJC_$_INSTANCE_METHODS_CLPCReportingSchema [NameNList, MangledNameNList, NList] 
                0x000000020b0f1e68 (    0xb0) _OBJC_$_INSTANCE_METHODS_CLPCReportingSchemaColumn [NameNList, MangledNameNList, NList] 
                0x000000020b0f1f18 (    0x78) _OBJC_$_INSTANCE_METHODS_CLPCReportingStatSelection [NameNList, MangledNameNList, NList] 
                0x000000020b0f1f90 (    0x98) _OBJC_$_INSTANCE_METHODS_CLPCUserClient [NameNList, MangledNameNList, NList] 
            0x000000020b0f2028 (   0xa58) __TEXT __gcc_except_tab
                0x000000020b0f2028 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2038 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2048 (    0x14) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000020b0f205c (    0x18) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2074 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2088 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000020b0f20a0 (    0x18) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000020b0f20b8 (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000020b0f20c8 (    0x40) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2108 (    0x18) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2120 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2130 (    0x18) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2148 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2158 (    0x30) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2188 (    0x24) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x000000020b0f21ac (    0x18) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000020b0f21c4 (    0x70) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2234 (    0xd4) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2308 (    0x14) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x000000020b0f231c (    0x14) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2330 (    0x28) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2358 (    0x14) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x000000020b0f236c (    0x94) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2400 (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2414 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2424 (    0x5c) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2480 (    0x3c) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000020b0f24bc (    0x68) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2524 (    0x20) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2544 (    0x38) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x000000020b0f257c (    0x14) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2590 (    0x14) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x000000020b0f25a4 (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x000000020b0f25b4 (    0x1c) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x000000020b0f25d0 (    0x14) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x000000020b0f25e4 (    0x18) GCC_except_table122 [NameNList, MangledNameNList, NList] 
                0x000000020b0f25fc (    0x28) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2624 (    0x18) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x000000020b0f263c (    0x18) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2654 (    0x18) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x000000020b0f266c (    0x18) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2684 (    0x18) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x000000020b0f269c (    0x28) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x000000020b0f26c4 (    0x10) GCC_except_table146 [NameNList, MangledNameNList, NList] 
                0x000000020b0f26d4 (    0x28) GCC_except_table147 [NameNList, MangledNameNList, NList] 
                0x000000020b0f26fc (    0x10) GCC_except_table152 [NameNList, MangledNameNList, NList] 
                0x000000020b0f270c (    0x10) GCC_except_table159 [NameNList, MangledNameNList, NList] 
                0x000000020b0f271c (    0x18) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2734 (    0x18) GCC_except_table167 [NameNList, MangledNameNList, NList] 
                0x000000020b0f274c (    0x10) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x000000020b0f275c (    0x18) GCC_except_table179 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2774 (    0x88) GCC_except_table188 [NameNList, MangledNameNList, NList] 
                0x000000020b0f27fc (   0x130) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x000000020b0f292c (    0x44) GCC_except_table200 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2970 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2980 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2994 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000020b0f29a8 (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000020b0f29c4 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000020b0f29d8 (    0x1c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000020b0f29f4 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2a10 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2a24 (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2a40 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000020b0f2a58 (    0x28) GCC_except_table14 [NameNList, MangledNameNList, NList] 
            0x000000020b0f2a80 (   0x840) __TEXT __const
                0x000000020b0f2a80 (    0x1a) typeinfo name for clpc::user::iokit::Object [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2a9a (    0x22) typeinfo name for clpc::user::iokit::RegistryEntry [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2abc (    0x1b) typeinfo name for clpc::user::iokit::Service [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2ad7 (    0x18) typeinfo name for clpc::user::iokit::CLPC [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2aef (    0x1e) typeinfo name for clpc::user::ioreport::Channel [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2b0d (    0x1d) typeinfo name for clpc::user::ioreport::Sample [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2b2a (    0x36) typeinfo name for clpc::user::ioreport::Subscription [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2b60 (     0x8) CLPCReportingSchemaVersionMajor [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2b68 (     0x8) CLPCReportingSchemaVersionMinor [EXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2b70 (   0x210) (anonymous namespace)::all_stat_ids [NameNList, MangledNameNList, NList] 
                0x000000020b0f2d80 (    0x1c) typeinfo name for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2d9c (    0xdf) typeinfo name for std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x000000020b0f2e7b (    0x3d) typeinfo name for std::__1::__function::__base<void (clpc::user::ioreport::Sample)> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f2eb8 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x000000020b0f2eb9 (    0x94) typeinfo name for std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID) [NameNList, MangledNameNList, NList] 
                0x000000020b0f2f4d (    0x75) typeinfo name for std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x000000020b0f2fc2 (    0x3e) typeinfo name for std::__1::__function::__base<void (clpc::user::ioreport::Channel)> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f3000 (    0x25) typeinfo name for -[CLPCReportingClient init:]::$_0 [NameNList, MangledNameNList, NList] 
                0x000000020b0f3025 (    0x82) typeinfo name for std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x000000020b0f30a7 (    0x3e) typeinfo name for std::__1::__function::__base<bool (clpc::user::ioreport::Channel)> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f30e5 (    0x32) typeinfo name for -[CLPCReportingClient enableStats:error:]::$_6 [NameNList, MangledNameNList, NList] 
                0x000000020b0f3117 (    0x82) typeinfo name for std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x000000020b0f3199 (    0x33) typeinfo name for -[CLPCReportingClient buildSchemas:error:]::$_4 [NameNList, MangledNameNList, NList] 
                0x000000020b0f31cc (    0x87) typeinfo name for std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x000000020b0f3253 (    0x6d) typeinfo name for -[CLPCReportingClient convertSampleList:error:]::$_5 [NameNList, MangledNameNList, NList] 
            0x000000020b0f32c0 (   0x3ba) __TEXT __cstring
            0x000000020b0f367c (   0x508) __TEXT __unwind_info
            0x000000020b0f3b88 (    0x38) __TEXT __eh_frame
            0x000000020b0f3bc0 (   0x108) __TEXT __objc_classname
            0x000000020b0f3cc8 (   0x71b) __TEXT __objc_methname
            0x000000020b0f43e3 (  0x2651) __TEXT __objc_methtype
            0x000000020b0f6a40 (   0x5c0) __TEXT __objc_stubs
                0x000000020b0f6a40 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6a60 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6a80 (    0x20) objc_msgSend$arrayWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6aa0 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ac0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ae0 (    0x20) objc_msgSend$columns [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6b00 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6b20 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6b40 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6b60 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6b80 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ba0 (    0x20) objc_msgSend$deselectAll [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6bc0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6be0 (    0x20) objc_msgSend$enumerate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6c00 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6c20 (    0x20) objc_msgSend$format [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6c40 (    0x20) objc_msgSend$init: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6c60 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6c80 (    0x20) objc_msgSend$metadataType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ca0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6cc0 (    0x20) objc_msgSend$null [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ce0 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6d00 (    0x20) objc_msgSend$numberWithLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6d20 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6d40 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6d60 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6d80 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6da0 (    0x20) objc_msgSend$reportingObfuscationData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6dc0 (    0x20) objc_msgSend$rows [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6de0 (    0x20) objc_msgSend$schema [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6e00 (    0x20) objc_msgSend$setFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6e20 (    0x20) objc_msgSend$setMetadataType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6e40 (    0x20) objc_msgSend$setName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6e60 (    0x20) objc_msgSend$setObject:atIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6e80 (    0x20) objc_msgSend$setRows: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ea0 (    0x20) objc_msgSend$setSchema: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ec0 (    0x20) objc_msgSend$setSchemaID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6ee0 (    0x20) objc_msgSend$setStatID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6f00 (    0x20) objc_msgSend$setType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6f20 (    0x20) objc_msgSend$setValueID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6f40 (    0x20) objc_msgSend$statID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6f60 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6f80 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6fa0 (    0x20) objc_msgSend$type [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6fc0 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020b0f6fe0 (    0x20) objc_msgSend$valueID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000002378f1c58 (   0xc60) __DATA_CONST SEGMENT
            0x00000002378f1c58 (    0x68) __DATA_CONST __got
            0x00000002378f1cc0 (    0x50) __DATA_CONST __objc_classlist
            0x00000002378f1d10 (    0x10) __DATA_CONST __objc_protolist
                0x00000002378f1d10 (     0x8) _OBJC_LABEL_PROTOCOL_$_CLPCPolicyAccess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f1d18 (     0x8) _OBJC_LABEL_PROTOCOL_$_CLPCReportingAccess [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002378f1d20 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000002378f1d28 (   0x948) __DATA_CONST __objc_const
                0x00000002378f1d28 (    0xb0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_CLPCPolicyAccess [NameNList, MangledNameNList, NList] 
                0x00000002378f1dd8 (    0x38) _OBJC_$_PROTOCOL_METHOD_TYPES_CLPCPolicyAccess [NameNList, MangledNameNList, NList] 
                0x00000002378f1e10 (    0x18) _OBJC_CLASS_PROTOCOLS_$_CLPCPolicyClient [NameNList, MangledNameNList, NList] 
                0x00000002378f1e28 (    0x48) _OBJC_METACLASS_RO_$_CLPCPolicyClient [NameNList, MangledNameNList, NList] 
                0x00000002378f1e70 (    0x48) _OBJC_CLASS_RO_$_CLPCPolicyClient [NameNList, MangledNameNList, NList] 
                0x00000002378f1eb8 (    0x48) _OBJC_CLASS_RO_$_CLPCPolicyInterface [NameNList, MangledNameNList, NList] 
                0x00000002378f1f00 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingStatSelection [NameNList, MangledNameNList, NList] 
                0x00000002378f1f48 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingStatSelection [NameNList, MangledNameNList, NList] 
                0x00000002378f1f70 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingSchemaColumn [NameNList, MangledNameNList, NList] 
                0x00000002378f1fb8 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingSchemaColumn [NameNList, MangledNameNList, NList] 
                0x00000002378f2080 (    0x68) _OBJC_$_PROP_LIST_CLPCReportingSchemaColumn [NameNList, MangledNameNList, NList] 
                0x00000002378f20e8 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingSchema [NameNList, MangledNameNList, NList] 
                0x00000002378f2130 (    0x68) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingSchema [NameNList, MangledNameNList, NList] 
                0x00000002378f2198 (    0x28) _OBJC_$_PROP_LIST_CLPCReportingSchema [NameNList, MangledNameNList, NList] 
                0x00000002378f21c0 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingRows [NameNList, MangledNameNList, NList] 
                0x00000002378f2208 (    0x48) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingRows [NameNList, MangledNameNList, NList] 
                0x00000002378f2250 (    0x28) _OBJC_$_PROP_LIST_CLPCReportingRows [NameNList, MangledNameNList, NList] 
                0x00000002378f2278 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingReadResult [NameNList, MangledNameNList, NList] 
                0x00000002378f22c0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingReadResult [NameNList, MangledNameNList, NList] 
                0x00000002378f22e8 (    0x98) _OBJC_$_PROTOCOL_INSTANCE_METHODS_CLPCReportingAccess [NameNList, MangledNameNList, NList] 
                0x00000002378f2380 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_CLPCReportingAccess [NameNList, MangledNameNList, NList] 
                0x00000002378f23b0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_CLPCReportingClient [NameNList, MangledNameNList, NList] 
                0x00000002378f23c8 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingClient [NameNList, MangledNameNList, NList] 
                0x00000002378f2410 (   0x1a8) _OBJC_$_INSTANCE_VARIABLES_CLPCReportingClient [NameNList, MangledNameNList, NList] 
                0x00000002378f25b8 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingInterface [NameNList, MangledNameNList, NList] 
                0x00000002378f2600 (    0x48) _OBJC_METACLASS_RO_$_CLPCUserClient [NameNList, MangledNameNList, NList] 
                0x00000002378f2648 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CLPCUserClient [NameNList, MangledNameNList, NList] 
            0x00000002378f2670 (   0x248) __DATA_CONST __objc_selrefs
        0x00000002378f28b8 (   0xf58) __AUTH_CONST SEGMENT
            0x00000002378f28b8 (   0x520) __AUTH_CONST __const
                0x00000002378f28b8 (    0x20) vtable for clpc::user::iokit::Object [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f28d8 (    0x20) vtable for clpc::user::iokit::Service [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f28f8 (    0x20) vtable for clpc::user::iokit::CLPC [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2918 (    0x20) vtable for clpc::user::ioreport::Subscription [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2938 (    0x10) typeinfo for clpc::user::iokit::Object [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2948 (    0x20) vtable for clpc::user::iokit::RegistryEntry [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2968 (    0x18) typeinfo for clpc::user::iokit::RegistryEntry [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2980 (    0x18) typeinfo for clpc::user::iokit::Service [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2998 (    0x18) typeinfo for clpc::user::iokit::CLPC [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f29b0 (    0x20) vtable for clpc::user::ioreport::Channel [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f29d0 (    0x10) typeinfo for clpc::user::ioreport::Channel [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f29e0 (    0x20) vtable for clpc::user::ioreport::Sample [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2a00 (    0x18) typeinfo for clpc::user::ioreport::Sample [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2a18 (    0x10) typeinfo for clpc::user::ioreport::Subscription [EXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2a28 (    0x30) __block_descriptor_40_ea8_32s_e30_B24?0Q8"CLPCReportingRows"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2a58 (    0x30) __block_descriptor_64_ea8_32c55_ZTSNSt3__18functionIFvN4clpc4user8ioreport7ChannelEEEE_e25_i16?0^{__CFDictionary=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2a88 (    0x18) typeinfo for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2aa0 (    0x28) vtable for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2ac8 (    0x30) __block_descriptor_64_ea8_32c55_ZTSNSt3__18functionIFbN4clpc4user8ioreport7ChannelEEEE_e25_i16?0^{__CFDictionary=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2af8 (    0x58) vtable for std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2b50 (    0x10) typeinfo for std::__1::__function::__base<void (clpc::user::ioreport::Sample)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2b60 (    0x18) typeinfo for std::__1::__function::__func<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID), std::__1::allocator<std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID)>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2b78 (    0x10) typeinfo for std::__1::tuple<NSString* __strong, NSNumber* __strong> -[CLPCReportingClient buildSchemas:error:]::$_1::operator()<CLPCReportingStatID>(CLPCReportingStatID) const::'lambda'(CLPCReportingStatID) [NameNList, MangledNameNList, NList] 
                0x00000002378f2b88 (    0x30) __block_descriptor_64_ea8_32c54_ZTSNSt3__18functionIFvN4clpc4user8ioreport6SampleEEEE_e25_i16?0^{__CFDictionary=}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2bb8 (    0x58) vtable for std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2c10 (    0x10) typeinfo for std::__1::__function::__base<void (clpc::user::ioreport::Channel)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2c20 (    0x18) typeinfo for std::__1::__function::__func<-[CLPCReportingClient init:]::$_0, std::__1::allocator<-[CLPCReportingClient init:]::$_0>, void (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2c38 (    0x10) typeinfo for -[CLPCReportingClient init:]::$_0 [NameNList, MangledNameNList, NList] 
                0x00000002378f2c48 (    0x58) vtable for std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2ca0 (    0x10) typeinfo for std::__1::__function::__base<bool (clpc::user::ioreport::Channel)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002378f2cb0 (    0x18) typeinfo for std::__1::__function::__func<-[CLPCReportingClient enableStats:error:]::$_6, std::__1::allocator<-[CLPCReportingClient enableStats:error:]::$_6>, bool (clpc::user::ioreport::Channel)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2cc8 (    0x10) typeinfo for -[CLPCReportingClient enableStats:error:]::$_6 [NameNList, MangledNameNList, NList] 
                0x00000002378f2cd8 (    0x58) vtable for std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2d30 (    0x18) typeinfo for std::__1::__function::__func<-[CLPCReportingClient buildSchemas:error:]::$_4, std::__1::allocator<-[CLPCReportingClient buildSchemas:error:]::$_4>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2d48 (    0x10) typeinfo for -[CLPCReportingClient buildSchemas:error:]::$_4 [NameNList, MangledNameNList, NList] 
                0x00000002378f2d58 (    0x58) vtable for std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2db0 (    0x18) typeinfo for std::__1::__function::__func<-[CLPCReportingClient convertSampleList:error:]::$_5, std::__1::allocator<-[CLPCReportingClient convertSampleList:error:]::$_5>, void (clpc::user::ioreport::Sample)> [NameNList, MangledNameNList, NList] 
                0x00000002378f2dc8 (    0x10) typeinfo for -[CLPCReportingClient convertSampleList:error:]::$_5 [NameNList, MangledNameNList, NList] 
            0x00000002378f2dd8 (   0x288) __AUTH_CONST __objc_const
                0x00000002378f2dd8 (    0x48) _OBJC_METACLASS_RO_$_CLPCPolicyInterface [NameNList, MangledNameNList, NList] 
                0x00000002378f2e20 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingStatSelection [NameNList, MangledNameNList, NList] 
                0x00000002378f2e68 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingSchemaColumn [NameNList, MangledNameNList, NList] 
                0x00000002378f2eb0 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingSchema [NameNList, MangledNameNList, NList] 
                0x00000002378f2ef8 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingRows [NameNList, MangledNameNList, NList] 
                0x00000002378f2f40 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingReadResult [NameNList, MangledNameNList, NList] 
                0x00000002378f2f88 (    0x48) _OBJC_CLASS_RO_$_CLPCReportingClient [NameNList, MangledNameNList, NList] 
                0x00000002378f2fd0 (    0x48) _OBJC_METACLASS_RO_$_CLPCReportingInterface [NameNList, MangledNameNList, NList] 
                0x00000002378f3018 (    0x48) _OBJC_CLASS_RO_$_CLPCUserClient [NameNList, MangledNameNList, NList] 
            0x00000002378f3060 (   0x4e0) __AUTH_CONST __cfstring
            0x00000002378f3540 (    0x90) __AUTH_CONST __objc_intobj
            0x00000002378f35d0 (   0x240) __AUTH_CONST __auth_got
        0x0000000232a82768 (   0x320) __AUTH SEGMENT
            0x0000000232a82768 (   0x320) __AUTH __objc_data
                0x0000000232a82768 (    0x28) OBJC_METACLASS_$_CLPCPolicyClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82790 (    0x28) OBJC_CLASS_$_CLPCPolicyClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a827b8 (    0x28) OBJC_METACLASS_$_CLPCPolicyInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a827e0 (    0x28) OBJC_CLASS_$_CLPCPolicyInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82808 (    0x28) OBJC_CLASS_$_CLPCReportingStatSelection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82830 (    0x28) OBJC_METACLASS_$_CLPCReportingStatSelection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82858 (    0x28) OBJC_CLASS_$_CLPCReportingSchemaColumn [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82880 (    0x28) OBJC_METACLASS_$_CLPCReportingSchemaColumn [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a828a8 (    0x28) OBJC_CLASS_$_CLPCReportingSchema [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a828d0 (    0x28) OBJC_METACLASS_$_CLPCReportingSchema [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a828f8 (    0x28) OBJC_CLASS_$_CLPCReportingRows [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82920 (    0x28) OBJC_METACLASS_$_CLPCReportingRows [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82948 (    0x28) OBJC_CLASS_$_CLPCReportingReadResult [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82970 (    0x28) OBJC_METACLASS_$_CLPCReportingReadResult [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82998 (    0x28) OBJC_CLASS_$_CLPCReportingClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a829c0 (    0x28) OBJC_METACLASS_$_CLPCReportingClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a829e8 (    0x28) OBJC_METACLASS_$_CLPCReportingInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82a10 (    0x28) OBJC_CLASS_$_CLPCReportingInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82a38 (    0x28) OBJC_CLASS_$_CLPCUserClient [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232a82a60 (    0x28) OBJC_METACLASS_$_CLPCUserClient [EXT, NameNList, MangledNameNList, NList] 
        0x000000023145e3e0 (   0x1e8) __DATA SEGMENT
            0x000000023145e3e0 (     0x8) __DATA __got_weak
            0x000000023145e3e8 (    0x78) __DATA __objc_classrefs
            0x000000023145e460 (    0x38) __DATA __objc_superrefs
            0x000000023145e498 (    0x6c) __DATA __objc_ivar
                0x000000023145e498 (     0x4) OBJC_IVAR_$_CLPCReportingStatSelection.selection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e49c (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._format [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4a0 (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._type [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4a4 (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._statID [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4a8 (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._metadataType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4ac (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._valueID [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4b0 (     0x4) OBJC_IVAR_$_CLPCReportingSchemaColumn._name [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4b4 (     0x4) OBJC_IVAR_$_CLPCReportingSchema.stagedColumns [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4b8 (     0x4) OBJC_IVAR_$_CLPCReportingSchema._schemaID [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4bc (     0x4) OBJC_IVAR_$_CLPCReportingSchema._columns [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4c0 (     0x4) OBJC_IVAR_$_CLPCReportingRows._schema [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4c4 (     0x4) OBJC_IVAR_$_CLPCReportingRows._rows [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4c8 (     0x4) OBJC_IVAR_$_CLPCReportingReadResult.rows_by_schema [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4cc (     0x4) OBJC_IVAR_$_CLPCReportingClient.num_cpu_clusters [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4d0 (     0x4) OBJC_IVAR_$_CLPCReportingClient.num_ane_clusters [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4d4 (     0x4) OBJC_IVAR_$_CLPCReportingClient.num_package_zones [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4d8 (     0x4) OBJC_IVAR_$_CLPCReportingClient.channel_to_stat_map [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4dc (     0x4) OBJC_IVAR_$_CLPCReportingClient.channel_to_cluster_map [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4e0 (     0x4) OBJC_IVAR_$_CLPCReportingClient.available_stat_ids [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4e4 (     0x4) OBJC_IVAR_$_CLPCReportingClient.configured_stat_ids [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4e8 (     0x4) OBJC_IVAR_$_CLPCReportingClient.reporting_channels [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4ec (     0x4) OBJC_IVAR_$_CLPCReportingClient.reporting_subscription [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4f0 (     0x4) OBJC_IVAR_$_CLPCReportingClient.schemas [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4f4 (     0x4) OBJC_IVAR_$_CLPCReportingClient.compactedSchemas [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4f8 (     0x4) OBJC_IVAR_$_CLPCReportingClient.schema_column_maps [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e4fc (     0x4) OBJC_IVAR_$_CLPCReportingClient.prev_sample_list [EXT, NameNList, MangledNameNList, NList] 
                0x000000023145e500 (     0x4) OBJC_IVAR_$_CLPCUserClient.clpc [EXT, NameNList, MangledNameNList, NList] 
            0x000000023145e508 (    0xc0) __DATA __data
                0x000000023145e508 (    0x60) _OBJC_PROTOCOL_$_CLPCPolicyAccess [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023145e568 (    0x60) _OBJC_PROTOCOL_$_CLPCReportingAccess [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
