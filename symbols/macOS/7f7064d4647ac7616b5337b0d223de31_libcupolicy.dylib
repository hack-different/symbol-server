/usr/lib/libcupolicy.dylib [arm64e, 0.024258 seconds]:
    093241B2-B7C9-3FD8-AB7C-63105D6317E6 /usr/lib/libcupolicy.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000220752000 (  0x8000) __TEXT SEGMENT
            0x0000000220752000 (   0x86c) MACH_HEADER
            0x000000022075286c (  0x5a44) __TEXT __text
                0x000000022075286c (    0x70) network_usage_policy_create_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207528dc (    0x50) network_usage_policy_destroy_client [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075292c (    0x18) network_usage_policy_get_datausage_policies [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752944 (    0x1c) network_usage_policy_get_for_bundle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752960 (    0x18) network_usage_policy_set_changed_handler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752978 (   0x124) network_usage_policy_get_cell_data_allowed_from_policy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752a9c (    0x48) xpc::dict::object_proxy::operator xpc::object() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752ae4 (   0x124) network_usage_policy_get_WiFi_data_allowed_from_policy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752c08 (   0x124) network_usage_policy_get_first_use_flow_performed_from_policy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752d2c (   0x15c) network_usage_policy_get_bundle_from_policy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752e88 (    0x1c) perform_first_network_use_flow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752ea4 (    0x74) std::__1::__shared_weak_count::__release_shared[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752f18 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752f24 (    0x5c) CellularUsagePolicyClient::create() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220752f80 (    0xd8) CellularUsagePolicyClient::CellularUsagePolicyClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753058 (   0x10c) CellularUsagePolicyClient::start() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753164 (     0x8) invocation function for block in CellularUsagePolicyClient::start() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075316c (    0xa4) CellularUsagePolicyClient::start_sync() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753210 (    0xc4) CellularUsagePolicyClient::shutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207532d4 (     0x8) invocation function for block in CellularUsagePolicyClient::shutdown() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207532dc (    0x9c) CellularUsagePolicyClient::shutdown_sync() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753378 (   0x208) CellularUsagePolicyClient::performFirstNetworkUseFlow(char const*, bool, void (bool) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753580 (   0x248) invocation function for block in CellularUsagePolicyClient::performFirstNetworkUseFlow(char const*, bool, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207537c8 (    0x4c) xpc::dict::object_proxy::operator=(xpc::object) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753814 (   0x19c) invocation function for block in CellularUsagePolicyClient::performFirstNetworkUseFlow(char const*, bool, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207539b0 (    0x18) invocation function for block in CellularUsagePolicyClient::performFirstNetworkUseFlow(char const*, bool, void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207539c8 (    0x34) __copy_helper_block_e8_32c43_ZTSN8dispatch5blockIU13block_pointerFvbEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207539fc (    0x24) __destroy_helper_block_e8_32c43_ZTSN8dispatch5blockIU13block_pointerFvbEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753a20 (    0x64) __copy_helper_block_e8_40c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE64c43_ZTSN8dispatch5blockIU13block_pointerFvbEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753a84 (    0x58) __destroy_helper_block_e8_40c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE64c43_ZTSN8dispatch5blockIU13block_pointerFvbEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753adc (   0x168) CellularUsagePolicyClient::getDataUsagePolicies(void (void*) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753c44 (    0xb8) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicies(void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753cfc (   0x174) CellularUsagePolicyClient::fetchDataUsagePoliciesIfNeeded_sync(void (bool) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753e70 (    0xbc) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicies(void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220753f2c (   0x1e8) CellularUsagePolicyClient::getDataUsagePolicies_sync(dispatch::block<void (void*) block_pointer>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754114 (    0x34) __copy_helper_block_e8_40c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754148 (    0x24) __destroy_helper_block_e8_40c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075416c (   0x278) invocation function for block in CellularUsagePolicyClient::fetchDataUsagePoliciesIfNeeded_sync(void (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207543e4 (    0x9c) xpc::dict::object_proxy::operator xpc::array() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754480 (   0x1c8) CellularUsagePolicyClient::handleDataUsagePolicies_sync(xpc::array) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754648 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754658 (     0xc) __destroy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754664 (    0x10) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicies_sync(dispatch::block<void (void*) block_pointer>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754674 (    0x60) __copy_helper_block_e8_32c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE40c16_ZTSN3xpc5arrayE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207546d4 (    0x40) __destroy_helper_block_e8_32c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE40c16_ZTSN3xpc5arrayE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754714 (   0x3f8) CellularUsagePolicyClient::getDataUsagePolicy_sync(dispatch::block<void (void*) block_pointer>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754b0c (    0x10) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicy_sync(dispatch::block<void (void*) block_pointer>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754b1c (   0x208) CellularUsagePolicyClient::getDataUsagePolicy(char const*, void (void*) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754d24 (   0x118) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicy(char const*, void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754e3c (    0xc8) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicy(char const*, void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754f04 (    0x80) __copy_helper_block_e8_40c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE48c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754f84 (    0x40) __destroy_helper_block_e8_40c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE48c66_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220754fc4 (   0x1a0) CellularUsagePolicyClient::setPolicyChangedHandler(dispatch_queue_s*, void (void*) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755164 (   0x330) invocation function for block in CellularUsagePolicyClient::setPolicyChangedHandler(dispatch_queue_s*, void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755494 (   0x188) CellularUsagePolicyClient::dispatchClientCallback_sync(xpc::array) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075561c (    0xf8) std::__1::back_insert_iterator<xpc::array> std::__1::copy[abi:v160006]<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>>(xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755714 (    0x48) __copy_helper_block_e8_40c21_ZTSN8dispatch5queueE48c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075575c (    0x54) __destroy_helper_block_e8_40c21_ZTSN8dispatch5queueE48c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207557b0 (     0x8) invocation function for block in CellularUsagePolicyClient::start_sync() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207557b8 (    0xf4) CellularUsagePolicyClient::connectAndCheckin_sync() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207558ac (   0x15c) CellularUsagePolicyClient::checkout_sync() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755a08 (   0x1b4) CellularUsagePolicyClient::checkin_sync() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755bbc (    0x70) CellularUsagePolicyClient::handleServerError_sync(xpc::object) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755c2c (   0x1bc) CellularUsagePolicyClient::handleMessage_sync(xpc::dict) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755de8 (    0x80) invocation function for block in CellularUsagePolicyClient::dispatchClientCallback_sync(xpc::array) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755e68 (    0x78) __copy_helper_block_e8_32c39_ZTSNSt3__18weak_ptrIN3ctu9XpcClientEEE48c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE56c16_ZTSN3xpc5arrayE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755ee0 (    0x64) __destroy_helper_block_e8_32c39_ZTSNSt3__18weak_ptrIN3ctu9XpcClientEEE48c44_ZTSN8dispatch5blockIU13block_pointerFvPvEEE56c16_ZTSN3xpc5arrayE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220755f44 (   0x104) std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>> std::__1::copy[abi:v160006]<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>>(xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756048 (    0x7c) CellularUsagePolicyClient::~CellularUsagePolicyClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207560c4 (    0x80) CellularUsagePolicyClient::~CellularUsagePolicyClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756144 (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207561e4 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207561fc (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756258 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075628c (    0x90) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075631c (    0xcc) std::__1::pair<std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::back_insert_iterator<xpc::array>> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::back_insert_iterator<xpc::array>>(std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::back_insert_iterator<xpc::array>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207563e8 (    0xcc) std::__1::pair<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>> std::__1::__copy[abi:v160006]<std::__1::_ClassicAlgPolicy, xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>>(xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207564b4 (    0xcc) std::__1::pair<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>> std::__1::__dispatch_copy_or_move[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial, xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>>(xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756580 (   0x278) std::__1::pair<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>, 0>(xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207567f8 (    0x9c) auto std::__1::__unwrap_range[abi:v160006]<xpc::array::iterator, xpc::array::iterator>(xpc::array::iterator, xpc::array::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756894 (    0xc0) std::__1::pair<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>>(xpc::array::iterator, xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756954 (    0x9c) xpc::array::iterator std::__1::__rewrap_range[abi:v160006]<xpc::array::iterator, xpc::array::iterator, xpc::array::iterator>(xpc::array::iterator, xpc::array::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207569f0 (    0x44) std::__1::pair<xpc::array::iterator, xpc::array::iterator>::~pair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756a34 (   0x110) std::__1::__unwrap_range_impl<xpc::array::iterator, xpc::array::iterator>::__unwrap[abi:v160006](xpc::array::iterator, xpc::array::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756b44 (    0x68) std::__1::pair<xpc::array::iterator, xpc::array::iterator>::pair[abi:v160006]<xpc::array::iterator, xpc::array::iterator, (void*)0>(xpc::array::iterator&&, xpc::array::iterator&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756bac (    0x48) xpc::array::object_proxy::operator xpc::object() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756bf4 (    0x58) std::__1::pair<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>>::pair[abi:v160006]<xpc::array::iterator, std::__1::back_insert_iterator<xpc::array>, (void*)0>(xpc::array::iterator&&, std::__1::back_insert_iterator<xpc::array>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756c4c (    0x9c) std::__1::__unwrap_range_impl<xpc::array::iterator, xpc::array::iterator>::__rewrap[abi:v160006](xpc::array::iterator, xpc::array::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756ce8 (    0x78) xpc::array::iterator std::__1::__rewrap_iter[abi:v160006]<xpc::array::iterator, xpc::array::iterator, std::__1::__unwrap_iter_impl<xpc::array::iterator, false>>(xpc::array::iterator, xpc::array::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756d60 (    0x4c) xpc::array::iterator::iterator(xpc::array, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756dac (    0x34) ctu::SharedRef<__CFBoolean const, ctu::cf::cfretain_functor, ctu::cf::cfrelease_functor, __CFBoolean const>::~SharedRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756de0 (    0xdc) std::__1::pair<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>> std::__1::__copy[abi:v160006]<std::__1::_ClassicAlgPolicy, xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>>(xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756ebc (    0xdc) std::__1::pair<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>> std::__1::__dispatch_copy_or_move[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial, xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>>(xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220756f98 (   0x290) std::__1::pair<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>, 0>(xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757228 (    0xbc) std::__1::pair<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>>(xpc::array::iterator, xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207572e4 (    0x9c) xpc::array::object_proxy::operator xpc::dict() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757380 (    0x6c) std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>::operator=[abi:v160006](xpc::dict&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207573ec (    0xa4) std::__1::pair<std::__1::__tree_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, bool> std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::__emplace_hint_unique_key_args<xpc::dict, xpc::dict>(std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, xpc::dict const&, xpc::dict&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757490 (   0x1ac) std::__1::__tree_node_base<void*>*& std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::__find_equal<xpc::dict>(std::__1::__tree_const_iterator<xpc::dict, std::__1::__tree_node<xpc::dict, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, xpc::dict const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075763c (    0x60) std::__1::unique_ptr<std::__1::__tree_node<xpc::dict, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<xpc::dict, void*>>>> std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::__construct_node<xpc::dict>(xpc::dict&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075769c (    0x58) std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207576f4 (   0x1a4) CellularUsagePolicyClient::policy_cmp_by_bundleId::operator()(xpc::dict const&, xpc::dict const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757898 (    0xa0) std::__1::__tree_node_base<void*>*& std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::__find_equal<xpc::dict>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, xpc::dict const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757938 (    0x68) _ZNSt3__1ssB7v160006IcNS_11char_traitsIcEENS_9allocatorIcEEEEDaRKNS_12basic_stringIT_T0_T1_EESC_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207579a0 (    0x4c) std::__1::basic_string_view<char, std::__1::char_traits<char>>::compare(std::__1::basic_string_view<char, std::__1::char_traits<char>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207579ec (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757b84 (    0x58) std::__1::unique_ptr<std::__1::__tree_node<xpc::dict, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<xpc::dict, void*>>>>::reset[abi:v160006](std::__1::__tree_node<xpc::dict, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757bdc (    0x30) void std::__1::__destroy_at[abi:v160006]<xpc::dict, 0>(xpc::dict*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757c0c (    0x58) std::__1::pair<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>>::pair[abi:v160006]<xpc::array::iterator, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>, (void*)0>(xpc::array::iterator&&, std::__1::insert_iterator<std::__1::set<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757c64 (    0x5c) std::__1::__tree<xpc::dict, CellularUsagePolicyClient::policy_cmp_by_bundleId, std::__1::allocator<xpc::dict>>::destroy(std::__1::__tree_node<xpc::dict, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757cc0 (    0xac) std::__1::shared_ptr<CellularUsagePolicyClient>::shared_ptr[abi:v160006]<CellularUsagePolicyClient, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), void>(CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757d6c (    0x88) void std::__1::shared_ptr<CellularUsagePolicyClient>::__enable_weak_this[abi:v160006]<ctu::XpcClient, CellularUsagePolicyClient, void>(std::__1::enable_shared_from_this<ctu::XpcClient> const*, CellularUsagePolicyClient*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757df4 (     0x4) std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757df8 (    0x28) std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757e20 (    0x1c) std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757e3c (    0x40) std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>>::__get_deleter(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757e7c (     0x4) std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>>::__on_zero_shared_weak() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757e80 (    0x4c) std::type_info::operator==[abi:v160006](std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757ecc (    0x2c) std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*)::operator()(CellularUsagePolicyClient*) const::'lambda'(void*)::__invoke(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757ef8 (    0x10) invocation function for block in ctu::SharedSynchronizable<ctu::XpcClient>::execute_wrapped(void () block_pointer) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757f08 (    0x4c) __copy_helper_block_e8_32b40c43_ZTSNSt3__110shared_ptrIKN3ctu9XpcClientEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757f54 (    0x44) __destroy_helper_block_e8_32b40c43_ZTSNSt3__110shared_ptrIKN3ctu9XpcClientEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757f98 (    0x44) std::__1::shared_ptr<ctu::XpcClient const>::shared_ptr[abi:v160006]<ctu::XpcClient, void>(std::__1::weak_ptr<ctu::XpcClient> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220757fdc (    0x4c) std::__1::__throw_bad_weak_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220758028 (    0x14) invocation function for block in decltype(dispatch::sync(nullptr, std::forward<void () block_pointer&>(fp))) ctu::SharedSynchronizable<ctu::XpcClient>::execute_wrapped_sync<void () block_pointer&>(void () block_pointer&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022075803c (    0xe4) xpc::dict_creator xpc::dict_creator::operator()<char const*>(char const*, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220758120 (    0xbc) xpc::dict_creator::dict_creator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000002207581dc (    0x44) std::__1::shared_ptr<ctu::XpcClient>::shared_ptr[abi:v160006]<ctu::XpcClient, void>(std::__1::weak_ptr<ctu::XpcClient> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220758220 (    0x48) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicies(void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220758268 (    0x48) invocation function for block in CellularUsagePolicyClient::getDataUsagePolicy(char const*, void (void*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000002207582b0 (   0x400) __TEXT __auth_stubs
                0x00000002207582b0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207582c0 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207582d0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207582e0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207582f0 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758300 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758310 (    0x10) DYLD-STUB$$ctu::OsLogLogger::OsLogLogger(char const*, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758320 (    0x10) DYLD-STUB$$ctu::OsLogLogger::~OsLogLogger() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758330 (    0x10) DYLD-STUB$$ctu::cf::assign(bool&, __CFBoolean const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758340 (    0x10) DYLD-STUB$$ctu::XpcClient::setServer_sync(xpc::connection) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758350 (    0x10) DYLD-STUB$$ctu::XpcClient::XpcClient(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758360 (    0x10) DYLD-STUB$$ctu::XpcClient::~XpcClient() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758370 (    0x10) DYLD-STUB$$xpc::dyn_cast_or_default(xpc::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758380 (    0x10) DYLD-STUB$$xpc::dyn_cast_or_default(xpc::object const&, bool) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758390 (    0x10) DYLD-STUB$$xpc::object::to_string() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583a0 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583b0 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::__release_weak() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583c0 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583d0 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::~__shared_weak_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583e0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207583f0 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758400 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758410 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758420 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758430 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758440 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758450 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758460 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758470 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758480 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758490 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584a0 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584b0 (    0x10) DYLD-STUB$$dispatch_async_and_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584c0 (    0x10) DYLD-STUB$$dispatch_barrier_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584d0 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584e0 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207584f0 (    0x10) DYLD-STUB$$dispatch_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758500 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758510 (    0x10) DYLD-STUB$$getprogname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758520 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758530 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758540 (    0x10) DYLD-STUB$$notify_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758550 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758560 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758570 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758580 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758590 (    0x10) DYLD-STUB$$xpc_array_append_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585a0 (    0x10) DYLD-STUB$$xpc_array_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585b0 (    0x10) DYLD-STUB$$xpc_array_get_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585c0 (    0x10) DYLD-STUB$$xpc_array_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585d0 (    0x10) DYLD-STUB$$xpc_bool_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585e0 (    0x10) DYLD-STUB$$xpc_connection_create_mach_service [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207585f0 (    0x10) DYLD-STUB$$xpc_connection_send_message [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758600 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758610 (    0x10) DYLD-STUB$$xpc_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758620 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758630 (    0x10) DYLD-STUB$$xpc_dictionary_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758640 (    0x10) DYLD-STUB$$xpc_dictionary_set_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758650 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758660 (    0x10) DYLD-STUB$$xpc_null_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758670 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758680 (    0x10) DYLD-STUB$$xpc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220758690 (    0x10) DYLD-STUB$$xpc_string_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000002207586a0 (    0x10) DYLD-STUB$$xpc_string_get_string_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000002207586b0 (   0xf6c) __TEXT __gcc_except_tab
                0x00000002207586b0 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000002207586c0 (    0x48) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000220758708 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000022075871c (    0x48) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000220758764 (    0x48) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000002207587ac (    0x48) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000002207587f4 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000220758804 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000022075881c (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000022075882c (    0x2c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000220758858 (    0x40) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000220758898 (    0x78) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000220758910 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000220758924 (    0x50) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000220758974 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000220758984 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000220758994 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000002207589a8 (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000002207589b8 (    0x28) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000002207589e0 (    0x28) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000220758a08 (    0x4c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000220758a54 (    0x30) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000220758a84 (    0x68) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x0000000220758aec (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000220758afc (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000220758b0c (    0x74) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000220758b80 (    0x20) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x0000000220758ba0 (    0x68) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000220758c08 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000220758c1c (    0x14) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000220758c30 (    0xa8) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000220758cd8 (    0x44) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x0000000220758d1c (    0x30) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x0000000220758d4c (    0x30) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x0000000220758d7c (    0x1c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x0000000220758d98 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x0000000220758da8 (    0x28) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x0000000220758dd0 (    0xd8) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x0000000220758ea8 (    0x40) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x0000000220758ee8 (    0x40) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x0000000220758f28 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x0000000220758f38 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x0000000220758f48 (    0x48) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x0000000220758f90 (    0x3c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x0000000220758fcc (    0x58) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x0000000220759024 (    0x40) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x0000000220759064 (     0xc) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x0000000220759070 (    0x14) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x0000000220759084 (    0x14) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x0000000220759098 (    0x40) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000002207590d8 (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000002207590e8 (    0x10) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000002207590f8 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x0000000220759108 (    0x28) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x0000000220759130 (    0x38) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x0000000220759168 (    0x38) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000002207591a0 (    0xb4) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x0000000220759254 (    0x20) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x0000000220759274 (    0x24) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x0000000220759298 (    0x20) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000002207592b8 (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000002207592cc (    0x50) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000022075931c (    0x14) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x0000000220759330 (    0x14) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x0000000220759344 (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x0000000220759354 (    0x20) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x0000000220759374 (    0x20) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x0000000220759394 (    0x10) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000002207593a4 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000002207593b4 (    0x38) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000002207593ec (    0x38) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x0000000220759424 (    0xb4) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000002207594d8 (    0x24) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000002207594fc (    0x20) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x000000022075951c (    0x14) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x0000000220759530 (    0x44) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x0000000220759574 (    0x10) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x0000000220759584 (    0x10) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x0000000220759594 (    0x24) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x00000002207595b8 (    0x38) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000002207595f0 (    0x2c) GCC_except_table119 [NameNList, MangledNameNList, NList] 
            0x000000022075961c (   0x1fb) __TEXT __cstring
            0x0000000220759818 (   0x1a7) __TEXT __const
                0x0000000220759830 (    0x1c) typeinfo name for CellularUsagePolicyClient [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022075984c (    0x3e) typeinfo name for ctu::Loggable<CellularUsagePolicyClient, ctu::OsLogLogger> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022075988a (    0xb4) typeinfo name for std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>> [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022075993e (    0x81) typeinfo name for std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*) [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002207599bf (   0x118) __TEXT __oslogstring
            0x0000000220759ad8 (   0x4ec) __TEXT __unwind_info
            0x0000000220759fc8 (    0x38) __TEXT __eh_frame
        0x000000022e822540 (   0x100) __DATA_CONST SEGMENT
            0x000000022e822540 (    0x78) __DATA_CONST __got
            0x000000022e8225b8 (    0x80) __DATA_CONST __const
                0x000000022e8225b8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x000000022e8225d8 (    0x20) __block_descriptor_tmp.3 [NameNList, MangledNameNList, NList] 
                0x000000022e8225f8 (    0x20) __block_descriptor_tmp.35 [NameNList, MangledNameNList, NList] 
                0x000000022e822618 (    0x20) __block_descriptor_tmp.49 [NameNList, MangledNameNList, NList] 
            0x000000022e822638 (     0x8) __DATA_CONST __objc_imageinfo
        0x0000000238280c48 (   0x550) __AUTH_CONST SEGMENT
            0x0000000238280c48 (   0x348) __AUTH_CONST __const
                0x0000000238280c48 (    0x30) vtable for CellularUsagePolicyClient [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280c78 (    0x30) __block_descriptor_tmp.10 [NameNList, MangledNameNList, NList] 
                0x0000000238280ca8 (    0x30) __block_descriptor_tmp.14 [NameNList, MangledNameNList, NList] 
                0x0000000238280cd8 (    0x30) __block_descriptor_tmp.15 [NameNList, MangledNameNList, NList] 
                0x0000000238280d08 (    0x30) __block_descriptor_tmp.17 [NameNList, MangledNameNList, NList] 
                0x0000000238280d38 (    0x30) __block_descriptor_tmp.20 [NameNList, MangledNameNList, NList] 
                0x0000000238280d68 (    0x30) __block_descriptor_tmp.23 [NameNList, MangledNameNList, NList] 
                0x0000000238280d98 (    0x30) __block_descriptor_tmp.24 [NameNList, MangledNameNList, NList] 
                0x0000000238280dc8 (    0x30) __block_descriptor_tmp.27 [NameNList, MangledNameNList, NList] 
                0x0000000238280df8 (    0x30) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x0000000238280e28 (    0x30) __block_descriptor_tmp.31 [NameNList, MangledNameNList, NList] 
                0x0000000238280e58 (    0x30) __block_descriptor_tmp.32 [NameNList, MangledNameNList, NList] 
                0x0000000238280e88 (    0x30) __block_descriptor_tmp.41 [NameNList, MangledNameNList, NList] 
                0x0000000238280eb8 (    0x10) typeinfo for ctu::Loggable<CellularUsagePolicyClient, ctu::OsLogLogger> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280ec8 (    0x38) typeinfo for CellularUsagePolicyClient [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280f00 (    0x38) vtable for std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280f38 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<CellularUsagePolicyClient*, std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*), std::__1::allocator<CellularUsagePolicyClient>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280f50 (    0x10) typeinfo for std::__1::shared_ptr<CellularUsagePolicyClient> ctu::SharedSynchronizable<ctu::XpcClient>::make_shared_ptr<CellularUsagePolicyClient>(CellularUsagePolicyClient*)::'lambda'(CellularUsagePolicyClient*) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238280f60 (    0x30) __block_descriptor_tmp.47 [NameNList, MangledNameNList, NList] 
            0x0000000238280f90 (   0x208) __AUTH_CONST __auth_got
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
