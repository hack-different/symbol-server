/usr/lib/swift/libswiftMetal.dylib [arm64e, 0.029141 seconds]:
    E8F52B75-FEBA-399F-B34B-93E58C2AD715 /usr/lib/swift/libswiftMetal.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001b0d14000 (  0x6ff3) __TEXT SEGMENT
            0x00000001b0d14000 (  0x11c8) MACH_HEADER
            0x00000001b0d151c8 (  0x25e0) __TEXT __text
                0x00000001b0d151c8 (    0x30) MTLBlitCommandEncoder.fill(buffer:range:value:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d151f8 (     0xc) MTLBlitCommandEncoder.resetCommandsInBuffer(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15204 (     0xc) MTLBlitCommandEncoder.copyIndirectCommandBuffer(_:sourceRange:destination:destinationIndex:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15210 (     0xc) MTLBlitCommandEncoder.optimizeIndirectCommandBuffer(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1521c (     0xc) MTLBlitCommandEncoder.resolveCounters(_:range:destinationBuffer:destinationOffset:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15228 (    0x30) MTLBlitCommandEncoder.copyIndirectCommandBuffer(_:sourceRange:destination:destinationIndex:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15258 (     0xc) MTLBuffer.didModifyRange(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15264 (    0x6c) MTLBuffer.addDebugMarker(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d152d0 (    0x78) MTLLogContainer.Iterator.next() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15348 (    0x60) outlined destroy of Any? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d153a8 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d153ec (    0x10) outlined init with take of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d153fc (    0x88) protocol witness for IteratorProtocol.next() in conformance MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15484 (    0x3c) MTLLogContainer.makeIterator() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d154c0 (    0x48) protocol witness for Sequence.makeIterator() in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15508 (     0x8) protocol witness for Sequence.underestimatedCount.getter in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15510 (     0x8) protocol witness for Sequence._customContainsEquatableElement(_:) in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15518 (    0x38) protocol witness for Sequence._copyToContiguousArray() in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15550 (     0x8) protocol witness for Sequence._copyContents(initializing:) in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15558 (    0x24) protocol witness for Sequence.withContiguousStorageIfAvailable<A>(_:) in conformance MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1557c (    0x3c) MTLCommandBuffer.logs.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155b8 (     0x4) MTLAccelerationStructureCommandEncoder.useResources(_:usage:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155bc (    0x14) MTLAccelerationStructureCommandEncoder.useHeaps(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155d0 (     0xc) MTLVisibleFunctionTable.setFunctions(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155dc (     0xc) MTLIntersectionFunctionTable.setBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155e8 (     0xc) MTLIntersectionFunctionTable.setFunctions(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d155f4 (     0xc) MTLIntersectionFunctionTable.setVisibleFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15600 (     0x4) MTLComputeCommandEncoder.useResources(_:usage:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15604 (    0x14) MTLComputeCommandEncoder.useHeaps(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15618 (     0xc) MTLComputeCommandEncoder.setBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15624 (    0x20) MTLComputeCommandEncoder.setBuffers(_:offsets:attributeStrides:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15644 (     0xc) MTLComputeCommandEncoder.setTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15650 (     0xc) MTLComputeCommandEncoder.setSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1565c (    0x20) MTLComputeCommandEncoder.setSamplerStates(_:lodMinClamps:lodMaxClamps:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1567c (    0x14) MTLComputeCommandEncoder.memoryBarrier(resources:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15690 (     0xc) MTLComputeCommandEncoder.setVisibleFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1569c (     0xc) MTLComputeCommandEncoder.setIntersectionFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d156a8 (    0x84) MTLDevice.getDefaultSamplePositions(sampleCount:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1572c (    0x68) MTLDevice.sampleTimestamps() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15794 (    0xe8) MTLDevice.makeRenderPipelineState(descriptor:options:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1587c (    0x84) MTLCounterSampleBuffer.resolveCounterRange(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15900 (   0x13c) MTLCopyAllDevicesWithObserver(handler:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15a3c (    0x84) thunk for @escaping @callee_guaranteed (@guaranteed MTLDevice, @guaranteed MTLDeviceNotificationName) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ac0 (    0x2c) MTLIOCreateCompressionContext(_:_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15aec (    0xd4) specialized String.withCString<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15bc0 (    0x2c) MTLFunctionConstantValues.setConstantValues(_:type:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15bec (     0xc) MTLArgumentEncoder.setBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15bf8 (     0xc) MTLArgumentEncoder.setTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c04 (     0xc) MTLArgumentEncoder.setSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c10 (     0xc) MTLArgumentEncoder.setRenderPipelineStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c1c (     0xc) MTLArgumentEncoder.setIndirectCommandBuffers(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c28 (     0xc) MTLArgumentEncoder.setVisibleFunctionTables(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c34 (     0xc) MTLArgumentEncoder.setIntersectionFunctionTables(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c40 (     0x4) MTLRenderCommandEncoder.useResources(_:usage:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15c44 (    0xe0) MTLAccelerationStructureCommandEncoder.useResources(_:usage:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15d24 (    0x14) MTLRenderCommandEncoder.useHeaps(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15d38 (    0xd8) MTLAccelerationStructureCommandEncoder.useHeaps(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e10 (    0x20) MTLRenderCommandEncoder.setViewports(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e30 (    0x20) MTLRenderCommandEncoder.setScissorRects(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e50 (    0x20) MTLRenderCommandEncoder.setViewports(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e70 (     0xc) MTLRenderCommandEncoder.setVertexBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e7c (    0x20) MTLRenderCommandEncoder.setVertexBuffers(_:offsets:attributeStrides:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15e9c (     0xc) MTLRenderCommandEncoder.setVertexTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ea8 (     0xc) MTLRenderCommandEncoder.setVertexSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15eb4 (    0x20) MTLRenderCommandEncoder.setVertexSamplerStates(_:lodMinClamps:lodMaxClamps:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ed4 (     0xc) MTLRenderCommandEncoder.setFragmentBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ee0 (     0xc) MTLRenderCommandEncoder.setFragmentTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15eec (     0xc) MTLRenderCommandEncoder.setFragmentSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ef8 (    0x20) MTLRenderCommandEncoder.setFragmentSamplerStates(_:lodMinClamps:lodMaxClamps:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f18 (     0xc) MTLRenderCommandEncoder.setObjectBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f24 (     0xc) MTLRenderCommandEncoder.setObjectTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f30 (     0xc) MTLRenderCommandEncoder.setObjectSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f3c (    0x20) MTLRenderCommandEncoder.setObjectSamplerStates(_:lodMinClamps:lodMaxClamps:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f5c (     0xc) MTLRenderCommandEncoder.setMeshBuffers(_:offsets:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f68 (    0x28) MTLIntersectionFunctionTable.setBuffers(_:offsets:range:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f90 (     0xc) MTLRenderCommandEncoder.setMeshTextures(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15f9c (     0xc) MTLRenderCommandEncoder.setMeshSamplerStates(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15fa8 (    0x20) MTLRenderCommandEncoder.setMeshSamplerStates(_:lodMinClamps:lodMaxClamps:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15fc8 (    0x34) MTLComputeCommandEncoder.setBuffers(_:offsets:attributeStrides:range:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d15ffc (    0xf4) MTLRenderCommandEncoder.memoryBarrier(resources:after:before:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d160f0 (     0xc) MTLRenderCommandEncoder.executeCommandsInBuffer(_:range:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d160fc (    0x28) MTLBlitCommandEncoder.resetCommandsInBuffer(_:range:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16124 (    0x1c) MTLRenderCommandEncoder.executeCommandsInBuffer(_:indirectBuffer:offset:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16140 (     0xc) MTLRenderCommandEncoder.setVertexVisibleFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1614c (     0xc) MTLRenderCommandEncoder.setFragmentVisibleFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16158 (     0xc) MTLRenderCommandEncoder.setTileVisibleFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16164 (     0xc) MTLRenderCommandEncoder.setVertexIntersectionFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16170 (     0xc) MTLRenderCommandEncoder.setFragmentIntersectionFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1617c (     0xc) MTLRenderCommandEncoder.setTileIntersectionFunctionTables(_:bufferRange:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16188 (    0x24) MTLVisibleFunctionTable.setFunctions(_:range:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d161ac (     0xc) MTLIndirectCommandBuffer.reset(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d161b8 (    0x20) MTLBuffer.didModifyRange(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d161d8 (    0x18) MTLRenderPassDescriptor.setSamplePositions(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d161f0 (    0x98) MTLRenderPassDescriptor.getSamplePositions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16288 (    0x40) MTLTexture.makeTextureView(pixelFormat:textureType:levels:slices:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d162c8 (    0x68) MTLTexture.makeTextureView(pixelFormat:textureType:levels:slices:swizzle:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16330 (     0x4) @objc MTLRasterizationRateSampleArray.__ObjCSignature(count:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16334 (    0x84) MTLRasterizationRateSampleArray.subscript.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d163b8 (    0x8c) key path getter for MTLRasterizationRateSampleArray.subscript(_:) : MTLRasterizationRateSampleArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16444 (    0x8c) key path setter for MTLRasterizationRateSampleArray.subscript(_:) : MTLRasterizationRateSampleArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d164d0 (    0x8c) MTLRasterizationRateSampleArray.subscript.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1655c (    0xb0) MTLRasterizationRateSampleArray.subscript.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1660c (    0x64) MTLRasterizationRateSampleArray.subscript.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16670 (    0x98) MTLRasterizationRateLayerDescriptor.init(horizontal:vertical:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16708 (    0xd0) MTLRasterizationRateMapDescriptor.init(screenSize:label:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d167d8 (    0xe4) MTLRasterizationRateMapDescriptor.init(screenSize:layer:label:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d168bc (   0x17c) MTLRasterizationRateMapDescriptor.init(screenSize:layers:label:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16a38 (   0x20c) specialized _copySequenceToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16c44 (   0x150) specialized Sequence._copySequenceContents(initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16d94 (    0xc4) specialized _ArrayBuffer._copyContents(initializing:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16e58 (    0xc4) _CocoaArrayWrapper._copyContents(initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d16f1c (   0x10c) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17028 (    0x58) type metadata accessor for MTLSamplePosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17080 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17090 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17098 (     0xc) MTLSizeMake [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d170a4 (    0xfc) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d171a0 (     0x4) associated type witness table accessor for Sequence.Iterator : IteratorProtocol in MTLLogContainer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d171a4 (    0x58) lazy protocol witness table accessor for type MTLLogContainer.Iterator and conformance MTLLogContainer.Iterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d171fc (    0x4c) type metadata accessor for MTLLogContainer.Iterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17248 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001b0d17254 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001b0d17258 (    0x10) type metadata accessor for MTLLogContainer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17268 (    0x6c) initializeBufferWithCopyOfBuffer for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d172d4 (    0x64) destroy for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17338 (    0x64) initializeWithCopy for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1739c (    0x64) assignWithCopy for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17400 (    0x64) initializeWithTake for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17464 (    0x64) assignWithTake for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d174c8 (    0x14) getEnumTagSinglePayload for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d174dc (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001b0d17548 (    0x14) storeEnumTagSinglePayload for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d1755c (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001b0d175cc (    0x8c) type metadata completion function for MTLLogContainer.Iterator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17658 (     0xc) __swift_memcpy8_4 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17664 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17668 (    0x20) getEnumTagSinglePayload for MTLSamplePosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17688 (    0x28) storeEnumTagSinglePayload for MTLSamplePosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d176b0 (    0x64) outlined init with take of MTLLogContainer.Iterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17714 (    0x5c) outlined destroy of MTLLogContainer.Iterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17770 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b0d17774 (    0x34) partial apply for closure #1 in MTLIOCreateCompressionContext(_:_:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001b0d177a8 (   0x2e0) __TEXT __auth_stubs
                0x00000001b0d177a8 (    0x10) DYLD-STUB$$_convertNSErrorToError(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d177b8 (    0x10) DYLD-STUB$$NSFastEnumerationIterator.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d177c8 (    0x10) DYLD-STUB$$type metadata accessor for NSFastEnumerationIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d177d8 (    0x10) DYLD-STUB$$NSFastEnumerationIterator.init(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d177e8 (    0x10) DYLD-STUB$$static Data._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d177f8 (    0x10) DYLD-STUB$$String._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17808 (    0x10) DYLD-STUB$$Sequence.withContiguousStorageIfAvailable<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17818 (    0x10) DYLD-STUB$$static Array._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17828 (    0x10) DYLD-STUB$$static Array._allocateBufferUninitialized(minimumCapacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17838 (    0x10) DYLD-STUB$$_StringGuts._slowWithCString<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17848 (    0x10) DYLD-STUB$$specialized _ArrayBuffer._copyContents(initializing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17858 (    0x10) DYLD-STUB$$_CocoaArrayWrapper._copyContents(subRange:initializing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17868 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17878 (    0x10) DYLD-STUB$$MTLCopyAllDevicesWithObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17888 (    0x10) DYLD-STUB$$MTLIOCreateCompressionContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17898 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178a8 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178b8 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178c8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178d8 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178e8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d178f8 (    0x10) DYLD-STUB$$objc_allocWithZone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17908 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17918 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17928 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17938 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17948 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17958 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17968 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17978 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17988 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17998 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179a8 (    0x10) DYLD-STUB$$swift_dynamicCastObjCClassUnconditional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179b8 (    0x10) DYLD-STUB$$swift_getEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179c8 (    0x10) DYLD-STUB$$swift_getForeignTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179d8 (    0x10) DYLD-STUB$$swift_getObjCClassFromMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179e8 (    0x10) DYLD-STUB$$swift_getSingletonMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d179f8 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a08 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a18 (    0x10) DYLD-STUB$$swift_initStructMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a28 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a38 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a48 (    0x10) DYLD-STUB$$swift_storeEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a58 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a68 (    0x10) DYLD-STUB$$swift_unknownObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b0d17a78 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001b0d17a88 (    0x14) __TEXT __objc_methlist
                0x00000001b0d17a88 (    0x14) _OBJC_$_INSTANCE_METHODS_MTLRasterizationRateSampleArray(Metal) [NameNList, MangledNameNList, NList] 
            0x00000001b0d17aa0 (    0xe8) __TEXT __const
                0x00000001b0d17ab0 (    0x30) protocol conformance descriptor for MTLLogContainer.Iterator [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17ae0 (    0x68) protocol conformance descriptor for MTLLogContainer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17b48 (    0x3e) property descriptor for MTLCommandBuffer.logs [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17b86 (     0x2) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b0d17b88 (    0xa4) __TEXT __swift5_typeref
                0x00000001b0d17b88 (     0x6) symbolic ypSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17b8e (    0x16) symbolic So14MTLFunctionLog_p [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17ba4 (    0x10) symbolic So9MTLDevice_p [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bb4 (     0x6) symbolic _____ 5Metal15MTLLogContainerV8IteratorV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bba (     0x6) symbolic $sSt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bc0 (     0x8) associated conformance 5Metal15MTLLogContainerVSTAA8IteratorST_St [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bc8 (     0x6) symbolic _____ 5Metal15MTLLogContainerV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bce (     0x6) symbolic $sST [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bd4 (    0x16) symbolic So15MTLLogContainer_p [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bea (     0x6) symbolic _____ 10Foundation25NSFastEnumerationIteratorV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bf0 (     0x6) symbolic _____ So17MTLSamplePositiona [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bf6 (     0x4) symbolic Sf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17bfa (     0xc) symbolic _____yyXlG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17c06 (     0x6) symbolic SvSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17c0c (     0xe) symbolic So7MTLHeap_p [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17c1a (    0x12) symbolic So11MTLResource_p [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b0d17c30 (    0x30) __TEXT __cstring
            0x00000001b0d17c60 (    0x20) __TEXT __swift5_reflstr
            0x00000001b0d17c80 (    0x38) __TEXT __swift5_assocty
                0x00000001b0d17c80 (    0x18) reflection metadata associated type descriptor MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
                0x00000001b0d17c98 (    0x20) reflection metadata associated type descriptor MTLLogContainer [NameNList, MangledNameNList, NList] 
            0x00000001b0d17cb8 (    0x7c) __TEXT __constg_swiftt
                0x00000001b0d17cb8 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17cc4 (    0x1c) nominal type descriptor for MTLLogContainer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17ce0 (    0x28) nominal type descriptor for MTLLogContainer.Iterator [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17d08 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b0d17d14 (    0x20) nominal type descriptor for MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b0d17d34 (    0x60) __TEXT __swift5_fieldmd
                0x00000001b0d17d34 (    0x1c) reflection metadata field descriptor MTLLogContainer [NameNList, MangledNameNList, NList] 
                0x00000001b0d17d50 (    0x1c) reflection metadata field descriptor MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
                0x00000001b0d17d6c (    0x28) reflection metadata field descriptor MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b0d17d94 (    0x14) __TEXT __swift5_builtin
                0x00000001b0d17d94 (    0x14) reflection metadata builtin descriptor MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b0d17da8 (     0x8) __TEXT __swift5_proto
            0x00000001b0d17db0 (     0xc) __TEXT __swift5_types
            0x00000001b0d17dbc (   0x154) __TEXT __unwind_info
            0x00000001b0d17f10 (    0xc8) __TEXT __eh_frame
            0x00000001b0d17fd8 (    0x58) __TEXT __objc_classname
            0x00000001b0d18030 (  0x1e72) __TEXT __objc_methname
            0x00000001b0d19ea2 (  0x1151) __TEXT __objc_methtype
        0x00000001d96a7248 (  0x1e48) __DATA_CONST SEGMENT
            0x00000001d96a7248 (    0x28) __DATA_CONST __got
            0x00000001d96a7270 (    0x58) __DATA_CONST __const
                0x00000001d96a7270 (    0x20) property descriptor for MTLRasterizationRateSampleArray.subscript(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7290 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7298 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a72a0 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a72a8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a72b0 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a72b8 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a72c0 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_Metal [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d96a72c8 (     0x8) __DATA_CONST __objc_catlist
            0x00000001d96a72d0 (    0x70) __DATA_CONST __objc_protolist
                0x00000001d96a72f8 (    0x10) _OBJC_LABEL_PROTOCOL_$_MTLFunctionLog [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7308 (     0x8) _OBJC_LABEL_PROTOCOL_$_MTLDevice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7310 (    0x10) _OBJC_LABEL_PROTOCOL_$_MTLLogContainer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7320 (     0x8) _OBJC_LABEL_PROTOCOL_$_MTLHeap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7328 (     0x8) _OBJC_LABEL_PROTOCOL_$_MTLResource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7330 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a7338 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSFastEnumeration [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d96a7340 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001d96a7348 (  0x1b30) __DATA_CONST __objc_const
                0x00000001d96a7348 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLFunctionLog [NameNList, MangledNameNList, NList] 
                0x00000001d96a7360 (    0x68) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLFunctionLog [NameNList, MangledNameNList, NList] 
                0x00000001d96a73c8 (    0x48) _OBJC_$_PROP_LIST_MTLFunctionLog [NameNList, MangledNameNList, NList] 
                0x00000001d96a7410 (    0x20) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLFunctionLog [NameNList, MangledNameNList, NList] 
                0x00000001d96a7430 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLDevice [NameNList, MangledNameNList, NList] 
                0x00000001d96a7448 (   0xad0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLDevice [NameNList, MangledNameNList, NList] 
                0x00000001d96a7f18 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_MTLDevice [NameNList, MangledNameNList, NList] 
                0x00000001d96a7f50 (   0x2a8) _OBJC_$_PROP_LIST_MTLDevice [NameNList, MangledNameNList, NList] 
                0x00000001d96a81f8 (   0x3a8) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLDevice [NameNList, MangledNameNList, NList] 
                0x00000001d96a85a0 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLLogContainer [NameNList, MangledNameNList, NList] 
                0x00000001d96a85b8 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLHeap [NameNList, MangledNameNList, NList] 
                0x00000001d96a85d0 (   0x200) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLHeap [NameNList, MangledNameNList, NList] 
                0x00000001d96a87d0 (    0xa8) _OBJC_$_PROP_LIST_MTLHeap [NameNList, MangledNameNList, NList] 
                0x00000001d96a8878 (    0xa8) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLHeap [NameNList, MangledNameNList, NList] 
                0x00000001d96a8920 (    0x18) _OBJC_$_PROTOCOL_REFS_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001d96a8938 (   0x140) _OBJC_$_PROTOCOL_INSTANCE_METHODS_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001d96a8a78 (    0x98) _OBJC_$_PROP_LIST_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001d96a8b10 (    0x68) _OBJC_$_PROTOCOL_METHOD_TYPES_MTLResource [NameNList, MangledNameNList, NList] 
                0x00000001d96a8b78 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d96a8d48 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d96a8d68 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d96a8db0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d96a8e50 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSFastEnumeration [NameNList, MangledNameNList, NList] 
                0x00000001d96a8e70 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSFastEnumeration [NameNList, MangledNameNList, NList] 
            0x00000001d96a8e78 (   0x218) __DATA_CONST __objc_selrefs
        0x00000001d96a9090 (   0x300) __AUTH_CONST SEGMENT
            0x00000001d96a9090 (   0x148) __AUTH_CONST __const
                0x00000001d96a9090 (    0x90) block_descriptor [NameNList, MangledNameNList, NList] 
                0x00000001d96a9120 (    0x10) full type metadata for MTLLogContainer [NameNList, MangledNameNList, NList] 
                0x00000001d96a9130 (    0x20) type metadata for MTLLogContainer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a9150 (    0x58) value witness table for MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d96a91a8 (    0x30) full type metadata for MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d96a91d8 (    0x40) __AUTH_CONST __objc_const
                0x00000001d96a91d8 (    0x40) _CATEGORY_MTLRasterizationRateSampleArray_$_Metal [NameNList, MangledNameNList, NList] 
            0x00000001d96a9218 (     0x8) __AUTH_CONST __auth_ptr
            0x00000001d96a9220 (   0x170) __AUTH_CONST __auth_got
        0x00000001d780f890 (    0x80) __AUTH SEGMENT
            0x00000001d780f890 (    0x80) __AUTH __data
                0x00000001d780f890 (    0x58) value witness table for MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
                0x00000001d780f8e8 (    0x10) full type metadata for MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
                0x00000001d780f8f8 (    0x18) type metadata for MTLLogContainer.Iterator [EXT, NameNList, MangledNameNList, NList] 
        0x00000001d65012a0 (   0x441) __DATA SEGMENT
            0x00000001d65012a0 (    0x38) __DATA __objc_protorefs
            0x00000001d65012d8 (     0x8) __DATA __objc_classrefs
            0x00000001d65012e0 (   0x2f0) __DATA __data
                0x00000001d65012e0 (     0x8) demangling cache variable for type metadata for Any? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65012e8 (    0x60) _OBJC_PROTOCOL_$_MTLFunctionLog [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501348 (     0x8) demangling cache variable for type metadata for MTLFunctionLog [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501350 (    0x60) _OBJC_PROTOCOL_$_MTLDevice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65013b0 (     0x8) demangling cache variable for type metadata for MTLDevice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65013b8 (     0x8) lazy protocol witness table cache variable for type MTLLogContainer.Iterator and conformance MTLLogContainer.Iterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65013c0 (    0x60) _OBJC_PROTOCOL_$_MTLLogContainer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501420 (     0x8) lazy cache variable for type metadata for MTLSamplePosition [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501428 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501430 (     0x8) demangling cache variable for type metadata for UnsafeMutableRawPointer? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501438 (    0x60) _OBJC_PROTOCOL_$_MTLHeap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501498 (     0x8) demangling cache variable for type metadata for MTLHeap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65014a0 (    0x60) _OBJC_PROTOCOL_$_MTLResource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501500 (    0x10) demangling cache variable for type metadata for MTLResource [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501510 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6501570 (    0x60) _OBJC_PROTOCOL_$_NSFastEnumeration [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d65015d0 (   0x110) __DATA __bss
                0x00000001d65015d0 (    0x80) metadata instantiation cache for protocol conformance descriptor for MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
                0x00000001d6501650 (    0x80) metadata instantiation cache for protocol conformance descriptor for MTLLogContainer [NameNList, MangledNameNList, NList] 
                0x00000001d65016d0 (    0x10) type metadata singleton initialization cache for MTLLogContainer.Iterator [NameNList, MangledNameNList, NList] 
            0x00000001d65016e0 (     0x1) __DATA __common
                0x00000001d65016e0 (     0x1) _swift_FORCE_LOAD_$_swiftMetal [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
