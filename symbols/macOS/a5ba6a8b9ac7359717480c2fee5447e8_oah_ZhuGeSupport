Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/ZhuGeSupport.framework/Versions/A/ZhuGeSupport [arm64e, 0.056684 seconds]:
    E9D4602F-7D93-3BB4-AB73-EB17D930A850 /System/Library/PrivateFrameworks/ZhuGeSupport.framework/Versions/A/ZhuGeSupport [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000021b01e000 ( 0x14000) __TEXT SEGMENT
            0x000000021b01e000 (  0x42d4) MACH_HEADER
            0x000000021b0222d4 (  0x8e94) __TEXT __text
                0x000000021b0222d4 (   0x130) ZhuGeSetLogHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b022404 (    0xf0) ZhuGeIsKeyValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0224f4 (   0x2f4) domainForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0227e8 (   0x2a0) ZhuGeCopyPrivilegeWithCFError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b022a88 (   0x2fc) armoryInstanceForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b022d84 (    0x5c) ZhuGeCopyPrivilegeWithError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b022de0 (  0x11f4) ZhuGeCopyValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b023fd4 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b023fe4 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b023fec (    0x7c) __ZhuGeCopyValue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024068 (    0x90) __ZhuGeCopyValue_block_invoke.51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0240f8 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024148 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02418c (    0x90) __ZhuGeCopyValue_block_invoke.62 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02421c (    0x90) __ZhuGeCopyValue_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0242ac (    0x90) __ZhuGeCopyValue_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02433c (    0x5c) ZhuGeCopyValueWithCFError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024398 (    0x60) ZhuGeCopyValueWithError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0243f8 (    0xc0) __printZhuGeInfoOnce_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0244b8 (    0x84) __domainForKey_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02453c (    0x70) __armoryInstanceForKey_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0245ac (   0x128) -[ZhuGeCache initWithName:andCapacity:andCacheType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0246d4 (    0x88) -[ZhuGeCache clearCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02475c (    0xdc) -[ZhuGeCache delCacheForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024838 (   0x164) -[ZhuGeCache getCacheForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02499c (   0x3c4) -[ZhuGeCache setCache:forKey:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d60 (     0xc) -[ZhuGeCache name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d6c (     0xc) -[ZhuGeCache capacity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d78 (     0xc) -[ZhuGeCache cacheType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d84 (     0xc) -[ZhuGeCache cacheList] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d90 (     0xc) -[ZhuGeCache cacheDict] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024d9c (    0x68) -[ZhuGeCache .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024e04 (     0x8) +[ZhuGeSupportAssistant isInternalAssistant] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024e0c (     0xc) +[ZhuGeSupportAssistant classList] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024e18 (     0xc) +[ZhuGeSupportAssistant armoryClassName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024e24 (     0xc) +[ZhuGeSupportAssistant serviceXpcName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024e30 (    0x90) +[ZhuGeSupportAssistant getDylibHandlerWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024ec0 (    0x9c) __50+[ZhuGeSupportAssistant getDylibHandlerWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b024f5c (   0x264) +[ZhuGeSupportAssistant getSharedInstanceByName:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0251c0 (   0x1e8) +[ZhuGeSupportAssistant isKey:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0253a8 (   0x388) +[ZhuGeSupportAssistant getXpcProxyWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025730 (     0xc) __46+[ZhuGeSupportAssistant getXpcProxyWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02573c (    0xa0) __46+[ZhuGeSupportAssistant getXpcProxyWithError:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0257dc (    0xa0) __46+[ZhuGeSupportAssistant getXpcProxyWithError:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02587c (    0x94) __46+[ZhuGeSupportAssistant getXpcProxyWithError:]_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025910 (   0x1ac) +[ZhuGeSingleton sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025abc (     0xc) __32+[ZhuGeSingleton sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025ac8 (     0x8) +[ZhuGeSingleton accessInstanceVariablesDirectly] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025ad0 (     0x4) -[ZhuGeSingleton initData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025ad4 (    0x44) +[ZhuGeInternalSupportAssistant recursiveMutex] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b18 (     0xc) __47+[ZhuGeInternalSupportAssistant recursiveMutex]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b24 (     0xc) +[ZhuGeInternalSupportAssistant setDylibHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b30 (     0xc) +[ZhuGeInternalSupportAssistant dylibHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b3c (    0x10) +[ZhuGeInternalSupportAssistant setXpcProxy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b4c (     0xc) +[ZhuGeInternalSupportAssistant xpcProxy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b58 (    0x10) +[ZhuGeInternalSupportAssistant setCacheList:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b68 (     0xc) +[ZhuGeInternalSupportAssistant cacheList] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b74 (     0x8) +[ZhuGeInternalSupportAssistant isInternalAssistant] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b7c (     0xc) +[ZhuGeInternalSupportAssistant classList] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b88 (     0xc) +[ZhuGeInternalSupportAssistant armoryClassName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025b94 (     0xc) +[ZhuGeInternalSupportAssistant serviceXpcName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025ba0 (   0x140) +[ZhuGeInternalSupportAssistant executeCacheRefresh] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b025ce0 (   0x364) +[ZhuGeInternalSupportAssistant getInternalSupportPath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026044 (   0x23c) +[ZhuGeInternalSupportAssistant getDylibHandlerWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026280 (    0xf8) +[ZhuGeInternalSupportAssistant registerCacheRefresh:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026378 (   0x410) +[ZhuGeInternalSupportAssistant getXpcProxyWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026788 (    0x88) __54+[ZhuGeInternalSupportAssistant getXpcProxyWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026810 (    0x88) __54+[ZhuGeInternalSupportAssistant getXpcProxyWithError:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026898 (    0xa0) __54+[ZhuGeInternalSupportAssistant getXpcProxyWithError:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026938 (     0x8) -[ZhuGeRestoreLog printRemoteLog:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026940 (   0x1ec) printCallerRestoreLog [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026b2c (   0x4bc) ZhuGeLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b026fe8 (   0x208) ZhuGePrintStderr [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0271f0 (    0x84) __ZhuGeLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027274 (    0x48) __ZhuGeLog_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0272bc (    0x3c) __printSerialLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0272f8 (   0x2ac) +[NSNumber(ZhuGe) integerFromCInt:size:isSigned:needSwap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0275a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000021b0275b8 (   0x1bc) +[NSNumber(ZhuGe) integerFromData:size:truncate:isSigned:needSwap:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027774 (    0xbc) +[NSNumber(ZhuGe) boolFromData:needNegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027830 (    0x8c) initPthreadRecursiveMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0278bc (    0x44) isZhuGeInInternalBuild [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027900 (    0xa4) __isZhuGeInInternalBuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0279a4 (    0x44) isZhuGeInRestoreOS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0279e8 (   0x10c) getZhuGeDebugOption [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027af4 (   0x10c) getNVRAMVariableValueString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027c00 (    0x44) hasZhuGeLogConditionalPrint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027c44 (    0x24) __hasZhuGeLogConditionalPrint_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027c68 (    0x44) hasZhuGeLogPrefixFileFuncLine [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027cac (    0x24) __hasZhuGeLogPrefixFileFuncLine_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027cd0 (    0x44) hasZhuGeLogPrefixPidTid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027d14 (    0x24) __hasZhuGeLogPrefixPidTid_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027d38 (    0x24) __doesZhuGeDeemRestoreOSAsInternal_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027d5c (    0x44) doesZhuGeRecordMobileGestaltQuery [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027da0 (    0x24) __doesZhuGeRecordMobileGestaltQuery_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027dc4 (    0xb8) __isZhuGeInRestoreOS_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027e7c (    0x44) isZhuGeStdoutRedirected [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027ec0 (    0x2c) __isZhuGeStdoutRedirected_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027eec (    0x68) isObjectNSStringAndZhuGeNull [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027f54 (    0x10) isObjectNilOrZhuGeNull [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b027f64 (   0x52c) getCallerString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b028490 (   0x688) getZhuGeFDIPathsWithError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b028b18 (    0x24) getkMobileStorageMountPathKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b028b3c (   0x5fc) isEntitlementExpected [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029138 (   0x208) MGQuery [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029340 (    0xd0) MobileStorageLibraryCore [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029410 (    0xf0) getMobileStorageCopyDevicesWithErrorSymbolLoc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029500 (    0x74) __MobileStorageLibraryCore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029574 (    0x50) __getMobileStorageCopyDevicesWithErrorSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0295c4 (    0x5c) MobileStorageLibrary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029620 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029630 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02963c (    0xf0) getkMobileStorageDeviceTypeKeySymbolLoc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02972c (    0x50) __getkMobileStorageDeviceTypeKeySymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02977c (    0xf0) getkMobileStorageDeviceTypeDiskImageSymbolLoc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02986c (    0x50) __getkMobileStorageDeviceTypeDiskImageSymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0298bc (    0xf0) getkMobileStorageMountPathKeySymbolLoc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0299ac (    0x50) __getkMobileStorageMountPathKeySymbolLoc_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b0299fc (    0xb4) +[NSString(ZhuGe) isDataConvertibleToVisibleString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029ab0 (    0xb0) +[NSString(ZhuGe) stringFromData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029b60 (    0xe0) +[NSString(ZhuGe) visibleStringFromData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029c40 (    0xbc) +[NSString(ZhuGe) hexStringFromData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029cfc (    0xdc) +[NSString(ZhuGe) macAddressStringFromData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029dd8 (    0xf4) +[NSString(ZhuGe) macAddressStringFromSysconfigDataSixByte:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029ecc (    0xe8) -[NSString(ZhuGe) stringByRemovingCharactersInString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b029fb4 (    0x90) -[NSString(ZhuGe) stringByTrimmingCharactersInString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a044 (    0x90) -[NSString(ZhuGe) stringByLeftTrimmingCharacter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a0d4 (    0x80) -[NSString(ZhuGe) stringByRightTrimmingCharacter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a154 (    0x70) -[NSString(ZhuGe) ccccValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a1c4 (    0x10) -[ZhuGeLocker logHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a1d4 (    0x10) -[ZhuGeLocker setLogHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a1e4 (   0x2bc) +[NSArray(ZhuGe) graphicInfoArrayFromArray:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a4a0 (   0x288) +[NSArray(ZhuGe) arrayFromShellCommandString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a728 (   0x15c) +[NSData(ZhuGe) dataFromHexString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02a884 (   0x4a4) +[NSError(ZhuGe) errorWithZhuGeErrorCode:underlyingError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02ad28 (    0x68) +[NSError(ZhuGe) descriptionFromZhuGeErrorCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02ad90 (   0x340) -[NSError(ZhuGe) _ZhuGeDescriptionWithLayer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02b0d0 (     0x8) -[NSError(ZhuGe) ZhuGeDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02b0d8 (    0x24) getZhuGeFDIPathsWithError.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02b0fc (    0x24) getZhuGeFDIPathsWithError.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02b120 (    0x24) getZhuGeFDIPathsWithError.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b02b144 (    0x24) getkMobileStorageMountPathKey.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000021b02b168 (   0x420) __TEXT __auth_stubs
                0x000000021b02b168 (    0x10) DYLD-STUB$$CFErrorGetCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b178 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b188 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b198 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1a8 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1b8 (    0x10) DYLD-STUB$$MGCopyAnswerWithError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1c8 (    0x10) DYLD-STUB$$MGIsQuestionValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1d8 (    0x10) DYLD-STUB$$NSStringFromClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1e8 (    0x10) DYLD-STUB$$SecTaskCopyValuesForEntitlements [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b1f8 (    0x10) DYLD-STUB$$SecTaskCreateFromSelf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b208 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b218 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b228 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b238 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b248 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b258 (    0x10) DYLD-STUB$$_sl_dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b268 (    0x10) DYLD-STUB$$abort_report_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b278 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b288 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b298 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2a8 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2b8 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2c8 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2d8 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2e8 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b2f8 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b308 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b318 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b328 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b338 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b348 (    0x10) DYLD-STUB$$isatty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b358 (    0x10) DYLD-STUB$$mach_thread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b368 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b378 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b388 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b398 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3a8 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3b8 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3c8 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3d8 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3e8 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b3f8 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b408 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b418 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b428 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b438 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b448 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b458 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b468 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b478 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b488 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b498 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4a8 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4b8 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4c8 (    0x10) DYLD-STUB$$os_parse_boot_arg_int [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4d8 (    0x10) DYLD-STUB$$os_variant_has_internal_content [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4e8 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b4f8 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b508 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b518 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b528 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b538 (    0x10) DYLD-STUB$$pthread_threadid_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b548 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b558 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b568 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b02b578 (    0x10) DYLD-STUB$$xpc_add_bundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000021b02b588 (   0x370) __TEXT __objc_methlist
                0x000000021b02b588 (    0x90) _OBJC_$_INSTANCE_METHODS_ZhuGeCache [NameNList, MangledNameNList, NList] 
                0x000000021b02b618 (    0x68) _OBJC_$_CLASS_METHODS_ZhuGeSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000021b02b680 (    0x20) _OBJC_$_CLASS_METHODS_ZhuGeSingleton [NameNList, MangledNameNList, NList] 
                0x000000021b02b6a0 (    0x18) _OBJC_$_INSTANCE_METHODS_ZhuGeSingleton [NameNList, MangledNameNList, NList] 
                0x000000021b02b6b8 (    0xc8) _OBJC_$_CLASS_METHODS_ZhuGeInternalSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000021b02b780 (    0x18) _OBJC_$_INSTANCE_METHODS_ZhuGeRestoreLog [NameNList, MangledNameNList, NList] 
                0x000000021b02b798 (    0x30) _OBJC_$_CLASS_METHODS_NSNumber(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b7c8 (    0x50) _OBJC_$_CLASS_METHODS_NSString(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b818 (    0x48) _OBJC_$_INSTANCE_METHODS_NSString(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b860 (    0x20) _OBJC_$_INSTANCE_METHODS_ZhuGeLocker [NameNList, MangledNameNList, NList] 
                0x000000021b02b880 (    0x20) _OBJC_$_CLASS_METHODS_NSArray(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b8a0 (    0x18) _OBJC_$_CLASS_METHODS_NSData(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b8b8 (    0x20) _OBJC_$_CLASS_METHODS_NSError(ZhuGe) [NameNList, MangledNameNList, NList] 
                0x000000021b02b8d8 (    0x20) _OBJC_$_INSTANCE_METHODS_NSError(ZhuGe) [NameNList, MangledNameNList, NList] 
            0x000000021b02b8f8 (    0x58) __TEXT __const
                0x000000021b02b8f8 (    0x30) ZhuGeSupportVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b02b928 (    0x28) ZhuGeSupportVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
            0x000000021b02b950 (   0x1a8) __TEXT __gcc_except_tab
                0x000000021b02b950 (   0x168) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000021b02bab8 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000021b02bac8 (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x000000021b02bad8 (    0x10) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x000000021b02bae8 (    0x10) GCC_except_table56 [NameNList, MangledNameNList, NList] 
            0x000000021b02baf8 (  0x40f2) __TEXT __cstring
            0x000000021b02fbea (     0xe) __TEXT __oslogstring
            0x000000021b02fbf8 (    0x58) __TEXT __dlopen_cstrs
                0x000000021b02fbf8 (    0x58) audit_stringMobileStorage [NameNList, MangledNameNList, NList] 
            0x000000021b02fc50 (   0x1ec) __TEXT __unwind_info
            0x000000021b02fe3c (    0xbd) __TEXT __objc_classname
            0x000000021b02fefa (   0xdbf) __TEXT __objc_methname
            0x000000021b030cb9 (   0x260) __TEXT __objc_methtype
            0x000000021b030f20 (  0x10e0) __TEXT __objc_stubs
                0x000000021b030f20 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030f40 (    0x20) objc_msgSend$ZhuGeDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030f60 (    0x20) objc_msgSend$_ZhuGeDescriptionWithLayer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030f80 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030fa0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030fc0 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b030fe0 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031000 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031020 (    0x20) objc_msgSend$armoryClassName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031040 (    0x20) objc_msgSend$arrayWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031060 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031080 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0310a0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0310c0 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0310e0 (    0x20) objc_msgSend$cacheDict [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031100 (    0x20) objc_msgSend$cacheList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031120 (    0x20) objc_msgSend$cacheType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031140 (    0x20) objc_msgSend$callStackSymbols [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031160 (    0x20) objc_msgSend$capacity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031180 (    0x20) objc_msgSend$characterAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0311a0 (    0x20) objc_msgSend$characterSetWithCharactersInString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0311c0 (    0x20) objc_msgSend$classList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0311e0 (    0x20) objc_msgSend$clearCache [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031200 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031220 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031240 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031260 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031280 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0312a0 (    0x20) objc_msgSend$dataWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0312c0 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0312e0 (    0x20) objc_msgSend$delCacheForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031300 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031320 (    0x20) objc_msgSend$dictionaryWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031340 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031360 (    0x20) objc_msgSend$domain [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031380 (    0x20) objc_msgSend$dylibHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0313a0 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0313c0 (    0x20) objc_msgSend$errorWithZhuGeErrorCode:underlyingError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0313e0 (    0x20) objc_msgSend$executeCacheRefresh [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031400 (    0x20) objc_msgSend$fileExistsAtPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031420 (    0x20) objc_msgSend$firstMatchInString:options:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031440 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031460 (    0x20) objc_msgSend$getBytes:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031480 (    0x20) objc_msgSend$getCacheForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0314a0 (    0x20) objc_msgSend$getConfigOfKey:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0314c0 (    0x20) objc_msgSend$getDylibHandlerWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0314e0 (    0x20) objc_msgSend$getInternalSupportPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031500 (    0x20) objc_msgSend$getObfuscatedKey:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031520 (    0x20) objc_msgSend$getSharedInstanceByName:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031540 (    0x20) objc_msgSend$getXpcProxyWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031560 (    0x20) objc_msgSend$hasSuffix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031580 (    0x20) objc_msgSend$helper [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0315a0 (    0x20) objc_msgSend$hexStringFromData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0315c0 (    0x20) objc_msgSend$initData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0315e0 (    0x20) objc_msgSend$initWithBytes:length:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031600 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031620 (    0x20) objc_msgSend$initWithData:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031640 (    0x20) objc_msgSend$initWithFormat:arguments: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031660 (    0x20) objc_msgSend$initWithName:andCapacity:andCacheType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031680 (    0x20) objc_msgSend$initWithServiceName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0316a0 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0316c0 (    0x20) objc_msgSend$integerFromCInt:size:isSigned:needSwap: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0316e0 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031700 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031720 (    0x20) objc_msgSend$isAtEnd [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031740 (    0x20) objc_msgSend$isDataConvertibleToVisibleString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031760 (    0x20) objc_msgSend$isEqualToNumber: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031780 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0317a0 (    0x20) objc_msgSend$isInternalAssistant [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0317c0 (    0x20) objc_msgSend$isKey:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0317e0 (    0x20) objc_msgSend$lastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031800 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031820 (    0x20) objc_msgSend$logHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031840 (    0x20) objc_msgSend$mutableBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031860 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031880 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0318a0 (    0x20) objc_msgSend$numberWithChar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0318c0 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0318e0 (    0x20) objc_msgSend$numberWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031900 (    0x20) objc_msgSend$numberWithLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031920 (    0x20) objc_msgSend$numberWithLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031940 (    0x20) objc_msgSend$numberWithShort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031960 (    0x20) objc_msgSend$numberWithUnsignedChar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031980 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0319a0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0319c0 (    0x20) objc_msgSend$numberWithUnsignedLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b0319e0 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031a00 (    0x20) objc_msgSend$numberWithUnsignedShort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031a20 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031a40 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031a60 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031a80 (    0x20) objc_msgSend$pathWithComponents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031aa0 (    0x20) objc_msgSend$processInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ac0 (    0x20) objc_msgSend$processName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ae0 (    0x20) objc_msgSend$queryKey:andOptions:andPreferences:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031b00 (    0x20) objc_msgSend$rangeAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031b20 (    0x20) objc_msgSend$recursiveMutex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031b40 (    0x20) objc_msgSend$registerCacheRefresh: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031b60 (    0x20) objc_msgSend$regularExpressionWithPattern:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031b80 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ba0 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031bc0 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031be0 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031c00 (    0x20) objc_msgSend$scanHexInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031c20 (    0x20) objc_msgSend$scanInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031c40 (    0x20) objc_msgSend$scannerWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031c60 (    0x20) objc_msgSend$serviceXpcName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031c80 (    0x20) objc_msgSend$setCache:forKey:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ca0 (    0x20) objc_msgSend$setCacheList: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031cc0 (    0x20) objc_msgSend$setDylibHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ce0 (    0x20) objc_msgSend$setExportedInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031d00 (    0x20) objc_msgSend$setExportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031d20 (    0x20) objc_msgSend$setInternalKey:andOptions:andPreferences:getValueAndError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031d40 (    0x20) objc_msgSend$setInterruptionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031d60 (    0x20) objc_msgSend$setInvalidationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031d80 (    0x20) objc_msgSend$setKey:andOptions:andPreferences:getValueAndError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031da0 (    0x20) objc_msgSend$setLogHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031dc0 (    0x20) objc_msgSend$setMGKey:getValueAndError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031de0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031e00 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031e20 (    0x20) objc_msgSend$setXpcProxy: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031e40 (    0x20) objc_msgSend$sharedInstance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031e60 (    0x20) objc_msgSend$stringByPaddingToLength:withString:startingAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031e80 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ea0 (    0x20) objc_msgSend$stringByTrimmingCharactersInSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ec0 (    0x20) objc_msgSend$stringFromData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031ee0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031f00 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031f20 (    0x20) objc_msgSend$substringFromIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031f40 (    0x20) objc_msgSend$substringToIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031f60 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031f80 (    0x20) objc_msgSend$synchronousRemoteObjectProxyWithErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031fa0 (    0x20) objc_msgSend$userInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031fc0 (    0x20) objc_msgSend$visibleStringFromData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b031fe0 (    0x20) objc_msgSend$xpcProxy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x000000023814b888 (   0xa68) __DATA_CONST SEGMENT
            0x000000023814b888 (    0x60) __DATA_CONST __got
            0x000000023814b8e8 (    0xc0) __DATA_CONST __const
                0x000000023814b8e8 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814b908 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814b928 (    0x20) __block_descriptor_32_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814b948 (    0x20) __block_descriptor_40_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814b968 (    0x40) ZHUGE_LOG_TYPE_STR [NameNList, MangledNameNList, NList] 
            0x000000023814b9a8 (    0x30) __DATA_CONST __objc_classlist
            0x000000023814b9d8 (    0x28) __DATA_CONST __objc_catlist
            0x000000023814ba00 (    0x18) __DATA_CONST __objc_protolist
                0x000000023814ba00 (     0x8) _OBJC_LABEL_PROTOCOL_$_ZhuGeRestoreLogProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814ba08 (     0x8) _OBJC_LABEL_PROTOCOL_$_ZhuGeServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814ba10 (     0x8) _OBJC_LABEL_PROTOCOL_$_ZhuGeInternalServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x000000023814ba18 (     0x8) __DATA_CONST __objc_imageinfo
            0x000000023814ba20 (   0x3f0) __DATA_CONST __objc_const
                0x000000023814ba20 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeCache [NameNList, MangledNameNList, NList] 
                0x000000023814ba68 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_ZhuGeCache [NameNList, MangledNameNList, NList] 
                0x000000023814bb30 (    0x58) _OBJC_$_PROP_LIST_ZhuGeCache [NameNList, MangledNameNList, NList] 
                0x000000023814bb88 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ZhuGeRestoreLogProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bba8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_ZhuGeRestoreLogProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bbb0 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ZhuGeServiceProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bc00 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_ZhuGeServiceProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bc18 (    0x48) _OBJC_CLASS_RO_$_ZhuGeSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000023814bc60 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_ZhuGeInternalServiceProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bc98 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_ZhuGeInternalServiceProtocol [NameNList, MangledNameNList, NList] 
                0x000000023814bca8 (    0x38) _OBJC_$_CLASS_PROP_LIST_ZhuGeInternalSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000023814bce0 (    0x48) _OBJC_CLASS_RO_$_ZhuGeInternalSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000023814bd28 (    0x18) _OBJC_CLASS_PROTOCOLS_$_ZhuGeRestoreLog [NameNList, MangledNameNList, NList] 
                0x000000023814bd40 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeRestoreLog [NameNList, MangledNameNList, NList] 
                0x000000023814bd88 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeLocker [NameNList, MangledNameNList, NList] 
                0x000000023814bdd0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_ZhuGeLocker [NameNList, MangledNameNList, NList] 
                0x000000023814bdf8 (    0x18) _OBJC_$_PROP_LIST_ZhuGeLocker [NameNList, MangledNameNList, NList] 
            0x000000023814be10 (   0x4c0) __DATA_CONST __objc_selrefs
            0x000000023814c2d0 (    0x20) __DATA_CONST __objc_arraydata
                0x000000023814c2d0 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x000000023814c2e0 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
        0x000000023814c2f0 (  0x39c0) __AUTH_CONST SEGMENT
            0x000000023814c2f0 (  0x3020) __AUTH_CONST __cfstring
            0x000000023814f310 (   0x2e0) __AUTH_CONST __const
                0x000000023814f310 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f330 (    0x30) __block_descriptor_48_e8_32r40r_e20_v24?08"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023814f360 (    0x20) __block_literal_global.112 [NameNList, MangledNameNList, NList] 
                0x000000023814f380 (    0x20) __block_literal_global.128 [NameNList, MangledNameNList, NList] 
                0x000000023814f3a0 (    0x20) __block_literal_global.150 [NameNList, MangledNameNList, NList] 
                0x000000023814f3c0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f3e0 (    0x20) __block_literal_global.34 [NameNList, MangledNameNList, NList] 
                0x000000023814f400 (    0x20) __block_literal_global.62 [NameNList, MangledNameNList, NList] 
                0x000000023814f420 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f440 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f460 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f480 (    0x20) __block_literal_global.35 [NameNList, MangledNameNList, NList] 
                0x000000023814f4a0 (    0x20) __block_literal_global.47 [NameNList, MangledNameNList, NList] 
                0x000000023814f4c0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x000000023814f4e0 (    0x20) __block_literal_global.41 [NameNList, MangledNameNList, NList] 
                0x000000023814f500 (    0x20) __block_literal_global.43 [NameNList, MangledNameNList, NList] 
                0x000000023814f520 (    0x20) __block_literal_global.45 [NameNList, MangledNameNList, NList] 
                0x000000023814f540 (    0x20) __block_literal_global.47 [NameNList, MangledNameNList, NList] 
                0x000000023814f560 (    0x20) __block_literal_global.49 [NameNList, MangledNameNList, NList] 
                0x000000023814f580 (    0x20) __block_literal_global.51 [NameNList, MangledNameNList, NList] 
                0x000000023814f5a0 (    0x20) __block_literal_global.92 [NameNList, MangledNameNList, NList] 
                0x000000023814f5c0 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
            0x000000023814f5f0 (   0x138) __AUTH_CONST __objc_intobj
            0x000000023814f728 (   0x338) __AUTH_CONST __objc_const
                0x000000023814f728 (    0x48) _OBJC_CLASS_RO_$_ZhuGeCache [NameNList, MangledNameNList, NList] 
                0x000000023814f770 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000023814f7b8 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeSingleton [NameNList, MangledNameNList, NList] 
                0x000000023814f800 (    0x48) _OBJC_CLASS_RO_$_ZhuGeSingleton [NameNList, MangledNameNList, NList] 
                0x000000023814f848 (    0x48) _OBJC_METACLASS_RO_$_ZhuGeInternalSupportAssistant [NameNList, MangledNameNList, NList] 
                0x000000023814f890 (    0x48) _OBJC_CLASS_RO_$_ZhuGeRestoreLog [NameNList, MangledNameNList, NList] 
                0x000000023814f8d8 (    0x40) _OBJC_$_CATEGORY_NSNumber_$_ZhuGe [NameNList, MangledNameNList, NList] 
                0x000000023814f918 (    0x40) _OBJC_$_CATEGORY_NSString_$_ZhuGe [NameNList, MangledNameNList, NList] 
                0x000000023814f958 (    0x48) _OBJC_CLASS_RO_$_ZhuGeLocker [NameNList, MangledNameNList, NList] 
                0x000000023814f9a0 (    0x40) _OBJC_$_CATEGORY_NSArray_$_ZhuGe [NameNList, MangledNameNList, NList] 
                0x000000023814f9e0 (    0x40) _OBJC_$_CATEGORY_NSData_$_ZhuGe [NameNList, MangledNameNList, NList] 
                0x000000023814fa20 (    0x40) _OBJC_$_CATEGORY_NSError_$_ZhuGe [NameNList, MangledNameNList, NList] 
            0x000000023814fa60 (    0x30) __AUTH_CONST __objc_arrayobj
            0x000000023814fa90 (   0x220) __AUTH_CONST __auth_got
        0x0000000233284210 (   0x1e0) __AUTH SEGMENT
            0x0000000233284210 (   0x1e0) __AUTH __objc_data
                0x0000000233284210 (    0x28) OBJC_CLASS_$_ZhuGeCache [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284238 (    0x28) OBJC_METACLASS_$_ZhuGeCache [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284260 (    0x28) OBJC_METACLASS_$_ZhuGeSupportAssistant [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284288 (    0x28) OBJC_CLASS_$_ZhuGeSupportAssistant [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002332842b0 (    0x28) OBJC_METACLASS_$_ZhuGeSingleton [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002332842d8 (    0x28) OBJC_CLASS_$_ZhuGeSingleton [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284300 (    0x28) OBJC_METACLASS_$_ZhuGeInternalSupportAssistant [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284328 (    0x28) OBJC_CLASS_$_ZhuGeInternalSupportAssistant [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284350 (    0x28) OBJC_METACLASS_$_ZhuGeRestoreLog [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000233284378 (    0x28) OBJC_CLASS_$_ZhuGeRestoreLog [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002332843a0 (    0x28) OBJC_METACLASS_$_ZhuGeLocker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002332843c8 (    0x28) OBJC_CLASS_$_ZhuGeLocker [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023197cee8 (   0xe78) __DATA SEGMENT
            0x000000023197cee8 (    0x18) __DATA __objc_protorefs
                0x000000023197cee8 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_ZhuGeRestoreLogProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cef0 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_ZhuGeServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cef8 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_ZhuGeInternalServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x000000023197cf00 (    0xc0) __DATA __objc_classrefs
            0x000000023197cfc0 (     0x8) __DATA __objc_superrefs
            0x000000023197cfc8 (    0x1c) __DATA __objc_ivar
                0x000000023197cfc8 (     0x4) OBJC_IVAR_$_ZhuGeCache.aRecursiveMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfcc (     0x4) OBJC_IVAR_$_ZhuGeCache._name [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfd0 (     0x4) OBJC_IVAR_$_ZhuGeCache._capacity [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfd4 (     0x4) OBJC_IVAR_$_ZhuGeCache._cacheType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfd8 (     0x4) OBJC_IVAR_$_ZhuGeCache._cacheList [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfdc (     0x4) OBJC_IVAR_$_ZhuGeCache._cacheDict [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197cfe0 (     0x4) OBJC_IVAR_$_ZhuGeLocker._logHandler [PEXT, NameNList, MangledNameNList, NList] 
            0x000000023197cfe8 (   0xb00) __DATA __data
                0x000000023197cfe8 (    0x60) _OBJC_PROTOCOL_$_ZhuGeRestoreLogProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197d048 (    0x60) _OBJC_PROTOCOL_$_ZhuGeServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197d0a8 (    0x60) _OBJC_PROTOCOL_$_ZhuGeInternalServiceProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023197d108 (   0x9e0) ZhuGeErrorTable [PEXT, NameNList, MangledNameNList, NList] 
            0x000000023197dae8 (   0x278) __DATA __bss
                0x000000023197dae8 (     0x8) ZhuGeCopyValue.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197daf0 (     0x8) ZhuGeCopyValue.keysCache [NameNList, MangledNameNList, NList] 
                0x000000023197daf8 (    0x40) ZhuGeCopyValue.aRecursiveMutex [NameNList, MangledNameNList, NList] 
                0x000000023197db38 (     0x8) printZhuGeInfoOnce.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197db40 (     0x8) domainForKey.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197db48 (     0x8) domainForKey.aCache [NameNList, MangledNameNList, NList] 
                0x000000023197db50 (     0x8) armoryInstanceForKey.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197db58 (     0x8) armoryInstanceForKey.instanceCache [NameNList, MangledNameNList, NList] 
                0x000000023197db60 (     0x8) getDylibHandlerWithError:.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197db68 (     0x8) getDylibHandlerWithError:.anError [NameNList, MangledNameNList, NList] 
                0x000000023197db70 (     0x8) getDylibHandlerWithError:.ZhuGeArmoryHandler [NameNList, MangledNameNList, NList] 
                0x000000023197db78 (     0x8) getXpcProxyWithError:.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197db80 (    0x40) getXpcProxyWithError:.aRecursiveMutex [NameNList, MangledNameNList, NList] 
                0x000000023197dbc0 (     0x8) getXpcProxyWithError:.aProxy [NameNList, MangledNameNList, NList] 
                0x000000023197dbc8 (     0x8) sharedInstance.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dbd0 (    0x40) sharedInstance.aRecursiveMutex [NameNList, MangledNameNList, NList] 
                0x000000023197dc10 (     0x8) sharedInstance._singleton [NameNList, MangledNameNList, NList] 
                0x000000023197dc18 (     0x8) recursiveMutex.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dc20 (    0x40) _recursiveMutex [NameNList, MangledNameNList, NList] 
                0x000000023197dc60 (     0x8) _dylibHandler [NameNList, MangledNameNList, NList] 
                0x000000023197dc68 (     0x8) _xpcProxy [NameNList, MangledNameNList, NList] 
                0x000000023197dc70 (     0x8) _cacheList [NameNList, MangledNameNList, NList] 
                0x000000023197dc78 (     0x8) getInternalSupportPath.oldInternalSupportPath [NameNList, MangledNameNList, NList] 
                0x000000023197dc80 (     0x8) ZhuGeLog.prefix_token [NameNList, MangledNameNList, NList] 
                0x000000023197dc88 (     0x8) ZhuGeLog.prefixPidTid [NameNList, MangledNameNList, NList] 
                0x000000023197dc90 (     0x8) ZhuGeLog.oslog_token [NameNList, MangledNameNList, NList] 
                0x000000023197dc98 (     0x8) ZhuGeLog.logObj [NameNList, MangledNameNList, NList] 
                0x000000023197dca0 (     0x8) printSerialLog.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dca8 (     0x8) printSerialLog.aSemaphore [NameNList, MangledNameNList, NList] 
                0x000000023197dcb0 (     0x8) printSerialLog.pConsole [NameNList, MangledNameNList, NList] 
                0x000000023197dcb8 (     0x8) isZhuGeInInternalBuild.inInternalBuild [NameNList, MangledNameNList, NList] 
                0x000000023197dcc0 (     0x8) isZhuGeInInternalBuild.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dcc8 (     0x8) hasZhuGeLogConditionalPrint.itHas [NameNList, MangledNameNList, NList] 
                0x000000023197dcd0 (     0x8) hasZhuGeLogConditionalPrint.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dcd8 (     0x8) hasZhuGeLogPrefixFileFuncLine.itHas [NameNList, MangledNameNList, NList] 
                0x000000023197dce0 (     0x8) hasZhuGeLogPrefixFileFuncLine.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dce8 (     0x8) hasZhuGeLogPrefixPidTid.itHas [NameNList, MangledNameNList, NList] 
                0x000000023197dcf0 (     0x8) hasZhuGeLogPrefixPidTid.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dcf8 (     0x8) doesZhuGeDeemRestoreOSAsInternal.deemItAsInternal [NameNList, MangledNameNList, NList] 
                0x000000023197dd00 (     0x8) doesZhuGeDeemRestoreOSAsInternal.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dd08 (     0x8) doesZhuGeRecordMobileGestaltQuery.recordMobileGestaltQuery [NameNList, MangledNameNList, NList] 
                0x000000023197dd10 (     0x8) doesZhuGeRecordMobileGestaltQuery.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dd18 (     0x8) isZhuGeInRestoreOS.isInRestoreOS [NameNList, MangledNameNList, NList] 
                0x000000023197dd20 (     0x8) isZhuGeInRestoreOS.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dd28 (     0x8) isZhuGeStdoutRedirected.isStdoutRedirected [NameNList, MangledNameNList, NList] 
                0x000000023197dd30 (     0x8) isZhuGeStdoutRedirected.aToken [NameNList, MangledNameNList, NList] 
                0x000000023197dd38 (     0x8) MobileStorageLibraryCore.frameworkLibrary [NameNList, MangledNameNList, NList] 
                0x000000023197dd40 (     0x8) getMobileStorageCopyDevicesWithErrorSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x000000023197dd48 (     0x8) getkMobileStorageDeviceTypeKeySymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x000000023197dd50 (     0x8) getkMobileStorageDeviceTypeDiskImageSymbolLoc.ptr [NameNList, MangledNameNList, NList] 
                0x000000023197dd58 (     0x8) getkMobileStorageMountPathKeySymbolLoc.ptr [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
