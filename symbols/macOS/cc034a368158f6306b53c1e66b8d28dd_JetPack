/System/Library/PrivateFrameworks/JetPack.framework/Versions/A/JetPack [arm64e, 0.052326 seconds]:
    EB0D6612-CC44-35AA-921B-CD13DC827E5B /System/Library/PrivateFrameworks/JetPack.framework/Versions/A/JetPack [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000205b33000 ( 0x1c000) __TEXT SEGMENT
            0x0000000205b33000 (  0x10bc) MACH_HEADER
            0x0000000205b340bc ( 0x154fc) __TEXT __text
                0x0000000205b340bc (    0x54) -[JPStream initWithBacking:releaseOnDealloc:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34110 (    0x58) -[JPStream dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34168 (    0x40) -[JPStream readBytes:length:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b341a8 (    0x90) -[JPStream readDataWithLength:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34238 (    0xec) -[JPStream readData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34324 (   0x144) -[JPStream writeToFile:blockSize:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34468 (     0x8) -[JPStream backing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34470 (     0x8) -[JPStream releaseBackingOnDealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34478 (    0xa8) -[JPDataStream initWithData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34520 (    0x10) -[JPDataStream data] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34530 (    0x14) -[JPDataStream .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34544 (    0x60) readStreamCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b345a4 (   0x124) -[JPCallbackStream initWithReadCallback:seekForwardCallback:seekToEndCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b346c8 (    0x10) -[JPCallbackStream readCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b346d8 (     0xc) -[JPCallbackStream setReadCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b346e4 (    0x10) -[JPCallbackStream seekForwardCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b346f4 (     0xc) -[JPCallbackStream setSeekForwardCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34700 (    0x10) -[JPCallbackStream seekToEndCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34710 (     0xc) -[JPCallbackStream setSeekToEndCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3471c (    0x68) -[JPCallbackStream .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34784 (    0x54) -[JPSignatureVerifier initWithBacking:releaseOnDealloc:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b347d8 (    0x58) -[JPSignatureVerifier dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34830 (    0x4c) +[JPSignatureVerifier defaultSignatureVerifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3487c (    0x4c) +[JPSignatureVerifier unsafeIgnoreSignatureVerifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b348c8 (    0x88) +[JPSignatureVerifier signatureVerifierWithCertificate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34950 (     0x8) -[JPSignatureVerifier backing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34958 (     0x8) -[JPSignatureVerifier setBacking:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34960 (     0x8) -[JPSignatureVerifier releaseBackingOnDealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34968 (    0x80) -[JPFileStream initWithPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b349e8 (    0x54) -[JPFileEntry initWithBacking:releaseOnDealloc:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34a3c (    0x50) -[JPFileEntry pathname] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34a8c (    0xec) -[JPFileEntry writeStream:toDirectory:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34b78 (     0x8) -[JPFileEntry backing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34b80 (     0x8) -[JPFileEntry setBacking:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34b88 (     0x8) -[JPFileEntry releaseBackingOnDealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34b90 (    0xa8) -[JPReader init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34c38 (    0xf0) fileEntryFound [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34d28 (    0xfc) dataSegmentFound [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34e24 (    0xd4) keyForIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34ef8 (    0x4c) -[JPReader dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b34f44 (    0xcc) -[JPReader processStream:signatureVerifier:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35010 (   0x174) -[JPReader convertError] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35184 (     0x8) -[JPReader fileEntryFound] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3518c (     0x8) -[JPReader setFileEntryFound:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35194 (     0x8) -[JPReader dataSegmentFound] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3519c (     0x8) -[JPReader setDataSegmentFound:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b351a4 (     0x8) -[JPReader keyForIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b351ac (     0x8) -[JPReader setKeyForIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b351b4 (     0x8) -[JPReader backing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b351bc (     0x8) -[JPReader setBacking:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b351c4 (    0x50) -[JPReader .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35214 (   0x20c) JetPack::readBrotliSegment(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35420 (    0x6c) std::__1::shared_ptr<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3548c (   0x148) std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&>(std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>, std::__1::shared_ptr<JetPack::BaseStream>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b355d4 (    0x20) std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b355f4 (    0x44) std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35638 (    0xc8) JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>::~BrotliDecoderStreamImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35700 (    0xd8) JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>::~BrotliDecoderStreamImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b357d8 (   0x2bc) JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>::read(unsigned char*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35a94 (     0x8) JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>::position() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35a9c (    0x28) JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>::isFinished() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35ac4 (    0xc4) JetPack::NotEnoughDataException::NotEnoughDataException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35b88 (     0x4) JetPack::BrotliStreamNotFinishedAfterDecodingException::BrotliStreamNotFinishedAfterDecodingException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35b8c (     0x4) JetPack::BrotliUnknownDecoderResultException::BrotliUnknownDecoderResultException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35b90 (     0x4) JetPack::BrotliAvailableInNotEmptyOnFillException::BrotliAvailableInNotEmptyOnFillException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35b94 (    0xd8) JetPack::BrotliAvailableInNotEmptyOnFillException::BrotliAvailableInNotEmptyOnFillException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35c6c (    0xdc) JetPack::BrotliStreamNotFinishedAfterDecodingException::BrotliStreamNotFinishedAfterDecodingException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35d48 (   0x1c8) JetPack::BrotliUnknownDecoderResultException::BrotliUnknownDecoderResultException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b35f10 (   0x320) JetPack::readJetPackStream(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>, bool, std::__1::shared_ptr<JetPack::SignatureVerifier>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b36230 (    0xa4) JetPack::InputStreamRequiredException::InputStreamRequiredException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b362d4 (   0x358) JetPack::readSegment(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3662c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000205b36648 (     0x4) JetPack::InvalidSegmentTagException::InvalidSegmentTagException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3664c (    0xac) JetPack::ReaderException::ReaderException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b366f8 (   0x190) JetPack::InvalidSegmentTagException::InvalidSegmentTagException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b36888 (     0x4) JetPack::BufferStream::~BufferStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3688c (    0x48) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b368d4 (    0x24) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone(std::__1::__function::__base<bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b368f8 (    0xb0) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, JetPack::SegmentTag&&, std::__1::shared_ptr<JetPack::BaseStream>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b369a8 (    0x70) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::target(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b36a18 (     0xc) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::target_type() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b36a24 (   0x264) std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::swap[abi:v160006](std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b36c88 (   0x6b4) JetPack::readRootSegment(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>, bool, std::__1::shared_ptr<JetPack::SignatureVerifier>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3733c (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseRootSegmentException&>(JetPack::UnableToParseRootSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3734c (    0xc4) JetPack::InvalidMagicNumberException::InvalidMagicNumberException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37410 (    0xbc) JetPack::MissingSignatureException::MissingSignatureException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b374cc (    0xb4) JetPack::SignatureVerifierRequiredException::SignatureVerifierRequiredException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37580 (    0x84) std::__1::function<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::~function() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37604 (    0xd8) JetPack::UnsupportedJetPackVersionException::UnsupportedJetPackVersionException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b376dc (   0x168) std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::shared_ptr<JetPack::SignatureVerifier>&>(std::__1::allocator<JetPack::SignedStreamDecoder>, std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::shared_ptr<JetPack::SignatureVerifier>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37844 (    0x20) std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37864 (    0x44) std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b378a8 (    0x48) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b378f0 (    0x24) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone(std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37914 (    0xac) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b379c0 (    0x70) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::target(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37a30 (     0xc) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::target_type() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37a3c (    0x5c) std::__throw_with_nested<JetPack::UnableToParseRootSegmentException&, JetPack::UnableToParseRootSegmentException, true>::__do_throw[abi:v160006](JetPack::UnableToParseRootSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37a98 (    0xb8) std::__nested<JetPack::UnableToParseRootSegmentException>::__nested[abi:v160006](JetPack::UnableToParseRootSegmentException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37b50 (   0x248) JetPack::readSegmentContainer(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37d98 (    0x6c) std::__1::shared_ptr<JetPack::PartialStream>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37e04 (   0x108) std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&, unsigned int&>(std::__1::allocator<JetPack::PartialStream>, std::__1::shared_ptr<JetPack::BaseStream>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37f0c (    0x20) std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37f2c (    0x44) std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37f70 (    0x88) JetPack::PartialStream::~PartialStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b37ff8 (    0x98) JetPack::PartialStream::~PartialStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38090 (   0x320) JetPack::readDataSegment(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b383b0 (    0xac) JetPack::ParseException::ParseException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3845c (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseDataSegmentException&>(JetPack::UnableToParseDataSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3846c (    0x4c) std::__1::__throw_bad_optional_access[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b384b8 (    0x5c) std::__throw_with_nested<JetPack::UnableToParseDataSegmentException&, JetPack::UnableToParseDataSegmentException, true>::__do_throw[abi:v160006](JetPack::UnableToParseDataSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38514 (    0xb8) std::__nested<JetPack::UnableToParseDataSegmentException>::__nested[abi:v160006](JetPack::UnableToParseDataSegmentException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b385cc (    0x68) std::__nested<JetPack::UnableToParseHeaderException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38634 (    0x6c) std::__nested<JetPack::UnableToParseHeaderException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b386a0 (    0x64) non-virtual thunk to std::__nested<JetPack::UnableToParseHeaderException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38704 (    0x68) non-virtual thunk to std::__nested<JetPack::UnableToParseHeaderException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3876c (   0x560) JetPack::readSerializationSegment(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38ccc (     0x8) JetPack::detail::openCallback(archive*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38cd4 (    0x58) JetPack::detail::readCallback(archive*, void*, void const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38d2c (     0x8) JetPack::detail::closeCallback(archive*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38d34 (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseSerializationSegmentException&>(JetPack::UnableToParseSerializationSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38d44 (    0x20) std::__1::__shared_ptr_emplace<JetPack::ArchiveStream, std::__1::allocator<JetPack::ArchiveStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38d64 (    0x44) std::__1::__shared_ptr_emplace<JetPack::ArchiveStream, std::__1::allocator<JetPack::ArchiveStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38da8 (    0x5c) std::__throw_with_nested<JetPack::UnableToParseSerializationSegmentException&, JetPack::UnableToParseSerializationSegmentException, true>::__do_throw[abi:v160006](JetPack::UnableToParseSerializationSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38e04 (    0xb8) std::__nested<JetPack::UnableToParseSerializationSegmentException>::__nested[abi:v160006](JetPack::UnableToParseSerializationSegmentException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b38ebc (   0x4b8) JetPack::AESDecoderStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b39374 (    0xb4) JetPack::InvalidEncryptionTagLengthException::InvalidEncryptionTagLengthException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b39428 (     0x4) JetPack::CommonCryptoInvalidStatusException::CommonCryptoInvalidStatusException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3942c (   0x384) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::erase(std::__1::__deque_iterator<unsigned char, unsigned char const*, unsigned char const&, unsigned char const* const*, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char const*, unsigned char const&, unsigned char const* const*, long, 4096l>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b397b0 (     0x8) JetPack::AESDecoderStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b397b8 (    0x38) JetPack::AESDecoderStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b397f0 (    0xe0) JetPack::AESDecoderStream::~AESDecoderStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b398d0 (    0xf0) JetPack::AESDecoderStream::~AESDecoderStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b399c0 (   0x4a8) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::__add_back_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b39e68 (   0x188) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::push_back(unsigned char*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b39ff0 (   0x19c) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::push_front(unsigned char*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3a18c (   0x19c) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>&>::push_front(unsigned char* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3a328 (   0x284) std::__1::pair<std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, 0>(std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3a5ac (   0x2a4) std::__1::pair<std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, 0>(std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3a850 (   0x598) JetPack::readEncryptedSegment(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3ade8 (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseEncryptedSegmentException&>(JetPack::UnableToParseEncryptedSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3adf8 (    0xb4) JetPack::KeyProviderNotSpecifiedException::KeyProviderNotSpecifiedException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3aeac (    0xb4) JetPack::BlockExceedsMaximumSizeException::BlockExceedsMaximumSizeException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3af60 (    0x6c) std::__1::shared_ptr<JetPack::AESDecoderStream>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3afcc (   0x198) JetPack::MissingEncryptionKeyException::MissingEncryptionKeyException(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b164 (   0x1c8) JetPack::CommonCryptoInvalidStatusException::CommonCryptoInvalidStatusException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b32c (   0x168) std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::array<unsigned char, 16ul>&, unsigned int&>(std::__1::allocator<JetPack::AESDecoderStream>, std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::array<unsigned char, 16ul>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b494 (    0x20) std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b4b4 (    0x44) std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b4f8 (   0x17c) JetPack::AESDecoderStream::AESDecoderStream(std::__1::shared_ptr<JetPack::BaseStream>, std::__1::array<unsigned char, 16ul>, unsigned long, std::__1::unique_ptr<JetPack::CryptoBackend, std::__1::default_delete<JetPack::CryptoBackend>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b674 (    0xc8) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::~deque[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b73c (    0x5c) std::__throw_with_nested<JetPack::UnableToParseEncryptedSegmentException&, JetPack::UnableToParseEncryptedSegmentException, true>::__do_throw[abi:v160006](JetPack::UnableToParseEncryptedSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b798 (    0xb8) std::__nested<JetPack::UnableToParseEncryptedSegmentException>::__nested[abi:v160006](JetPack::UnableToParseEncryptedSegmentException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3b850 (   0x424) JetPack::readMultiSegmentContainer(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>, std::__1::function<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3bc74 (    0xd0) JetPack::readMultiSegmentContainer(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>, std::__1::function<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>)::$_0::~$_0() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3bd44 (   0x1a4) JetPack::UnableToParseMultiSegmentException::UnableToParseMultiSegmentException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3bee8 (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseMultiSegmentException&>(JetPack::UnableToParseMultiSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3bef8 (    0x5c) std::__throw_with_nested<JetPack::UnableToParseMultiSegmentException&, JetPack::UnableToParseMultiSegmentException, true>::__do_throw[abi:v160006](JetPack::UnableToParseMultiSegmentException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3bf54 (    0xc4) std::__nested<JetPack::UnableToParseMultiSegmentException>::__nested[abi:v160006](JetPack::UnableToParseMultiSegmentException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c018 (    0x68) std::__nested<JetPack::UnableToParseMultiSegmentException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c080 (    0x6c) std::__nested<JetPack::UnableToParseMultiSegmentException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c0ec (    0x64) non-virtual thunk to std::__nested<JetPack::UnableToParseMultiSegmentException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c150 (    0x68) non-virtual thunk to std::__nested<JetPack::UnableToParseMultiSegmentException>::~__nested() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c1b8 (   0x7f8) JetPack::SignedStreamDecoder::readBlock() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3c9b0 (    0xb4) JetPack::MissingTerminationBlockException::MissingTerminationBlockException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3ca64 (   0x120) JetPack::signingChunkForDataBlock(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3cb84 (    0x98) JetPack::InvalidSignatureException::InvalidSignatureException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3cc1c (   0x14c) readToEndVector(JetPack::BaseStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3cd68 (    0xac) JetPack::InvalidDataAfterTerminationBlockException::InvalidDataAfterTerminationBlockException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3ce14 (   0x130) std::__1::optional<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>& std::__1::optional<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>::operator=[abi:v160006]<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&, void>(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3cf44 (    0x70) JetPack::SignedStreamDecoder::fill(unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3cfb4 (    0x58) JetPack::SignedStreamDecoder::inputIsFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d00c (   0x118) JetPack::SignedStreamDecoder::~SignedStreamDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d124 (   0x128) JetPack::SignedStreamDecoder::~SignedStreamDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d24c (   0x1b0) void std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::assign<unsigned char*, 0>(unsigned char*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d3fc (     0x8) JetPack::UnsafeIgnoreSignatureVerifier::signatureIsValid(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d404 (     0x4) JetPackReaderCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d408 (   0x128) JetPackReader* makePublicRef<JetPackReader, JetPack::ReaderConfig>() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d530 (    0x9c) JetPackReaderDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d5cc (    0xb4) JetPackSignatureVerifierCreateWithCertificateData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d680 (   0x14c) JetPackSignatureVerifier* makePublicRef<JetPackSignatureVerifier, JetPack::CommonCryptoSignatureVerifier, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&>(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d7cc (    0x10) JetPackSignatureVerifierCreateDefault [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d7dc (     0x4) JetPackSignatureVerifierCreateUnsafeIgnoreSignatureVerifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d7e0 (   0x158) JetPackSignatureVerifier* makePublicRef<JetPackSignatureVerifier, JetPack::UnsafeIgnoreSignatureVerifier>() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d938 (    0x84) JetPackSignatureVerifierDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d9bc (    0x1c) JetPackReaderGetErrorMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3d9d8 (    0xa0) JetPackReaderSetProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3da78 (    0x6c) std::__1::shared_ptr<JetPack::ReaderConfig>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3dae4 (    0x9c) JetPackReaderGetProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3db80 (   0x188) JetPackReaderSetDataSegmentFoundCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3dd08 (   0x188) JetPackReaderSetFileEntryFoundCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3de90 (   0x188) JetPackReaderSetKeyForIdentifierCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e018 (   0x3b4) JetPackReaderProcess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e3cc (    0x78) getGlobalLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e444 (    0x6c) std::__1::shared_ptr<JetPack::SignatureVerifier>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e4b0 (   0x1b4) nestedExceptionString(std::exception const&, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e664 (    0x7c) std::__1::optional<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>& std::__1::optional<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator=[abi:v160006]<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e6e0 (    0x9c) JetPackFileEntryGetPathname [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e77c (   0x1fc) JetPackFileEntryWriteToDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e978 (    0x6c) std::__1::shared_ptr<JetPack::ArchiveStream>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e9e4 (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3e9fc (   0x140) std::__1::shared_ptr<JetPack::ReaderConfig> std::__1::allocate_shared[abi:v160006]<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>, void>(std::__1::allocator<JetPack::ReaderConfig> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3eb3c (    0x20) std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3eb5c (    0x44) std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3eba0 (     0x8) std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3eba8 (   0x250) JetPack::ReaderConfig::~ReaderConfig() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3edf8 (   0x1b8) std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>>::__shared_ptr_emplace[abi:v160006]<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&>(std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3efb0 (   0x214) JetPack::CommonCryptoSignatureVerifier::CommonCryptoSignatureVerifier(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::unique_ptr<JetPack::CommonCryptoBackend, std::__1::default_delete<JetPack::CommonCryptoBackend>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f1c4 (    0x20) std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f1e4 (    0x44) std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f228 (    0x24) std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f24c (    0x6c) std::__1::shared_ptr<__SecCertificate>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f2b8 (    0x20) std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f2d8 (    0x44) std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f31c (     0x4) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f320 (     0x4) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f324 (    0x4c) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f370 (    0x28) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::__clone(std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f398 (     0x4) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f39c (     0x4) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f3a0 (   0x1e8) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&, std::__1::shared_ptr<JetPack::BaseStream>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f588 (    0x5c) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f5e4 (     0xc) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f5f0 (   0x264) std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::swap[abi:v160006](std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f854 (     0x4) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f858 (     0x4) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f85c (    0x4c) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f8a8 (    0x28) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::__clone(std::__1::__function::__base<bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f8d0 (     0x4) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f8d4 (     0x4) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3f8d8 (   0x168) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::operator()(JetPack::ReaderConfig&, void*&&, std::__1::shared_ptr<JetPack::ArchiveStream>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fa40 (    0x5c) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fa9c (     0xc) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3faa8 (   0x264) std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::swap[abi:v160006](std::__1::__function::__value_func<bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd0c (     0x4) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd10 (     0x4) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd14 (    0x4c) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd60 (    0x28) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::__clone(std::__1::__function::__base<std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd88 (     0x4) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd8c (     0x4) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fd90 (    0x88) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::operator()(JetPack::ReaderConfig&, unsigned short&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fe18 (    0x5c) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fe74 (     0xc) std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b3fe80 (   0x264) std::__1::__function::__value_func<std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>::swap[abi:v160006](std::__1::__function::__value_func<std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b400e4 (     0xc) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b400f0 (   0x434) JetPack::CommonCryptoSignatureVerifier::signatureIsValid(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b40524 (    0xb8) JetPack::CommonCryptoSignatureVerifier::~CommonCryptoSignatureVerifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b405dc (    0xc8) JetPack::CommonCryptoSignatureVerifier::~CommonCryptoSignatureVerifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b406a4 (    0x9c) JetPack::AppleDecompressionInterface::AppleDecompressionInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b40740 (    0x9c) JetPack::AppleDecompressionInterface::AppleDecompressionInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b407dc (    0xe8) JetPack::AppleDecompressionInterface::~AppleDecompressionInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b408c4 (     0x4) JetPack::AppleDecompressionInterface::~AppleDecompressionInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b408c8 (    0x28) JetPack::AppleDecompressionInterface::~AppleDecompressionInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b408f0 (     0x8) JetPack::AppleDecompressionInterface::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b408f8 (    0xcc) JetPack::AppleDecompressionInterface::process(unsigned long*, unsigned char const**, unsigned long*, unsigned char**, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b409c4 (    0xd0) JetPack::CompressionUnableToInitException::CompressionUnableToInitException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b40a94 (   0x304) JetPack::parseSegmentContainerHeader(std::__1::shared_ptr<JetPack::BaseStream>, JetPack::DiagnosticContext&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b40d98 (   0x2ec) JetPack::parseDataSegmentHeader(JetPack::BaseStream&, JetPack::DiagnosticContext&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41084 (   0x204) readString(JetPack::BaseStream&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41288 (    0x70) JetPack::UnownedPartialStream::UnownedPartialStream(JetPack::BaseStream&, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b412f8 (    0x70) JetPack::UnownedPartialStream::UnownedPartialStream(JetPack::BaseStream&, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41368 (    0x9c) JetPack::UnownedPartialStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41404 (    0x58) JetPack::UnownedPartialStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4145c (    0x88) JetPack::UnownedPartialStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b414e4 (    0x94) JetPack::UnownedPartialStream::seekForward(unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41578 (    0x80) JetPack::UnownedPartialStream::seekToEnd() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b415f8 (    0x50) JetPack::FileStream::~FileStream() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41648 (    0x50) JetPack::FileStream::~FileStream() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41698 (    0x60) JetPack::FileStream::~FileStream() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b416f8 (   0x128) JetPack::FileStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41820 (     0x8) JetPack::FileStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41828 (    0x24) JetPack::FileStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4184c (    0x7c) JetPack::FileStream::makeFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b418c8 (     0x4) JetPack::UnableToOpenFileException::UnableToOpenFileException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b418cc (    0x60) JetPack::ParseException::~ParseException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4192c (    0xa0) JetPack::BaseStream::seekToEnd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b419cc (   0x178) JetPack::BaseStream::seekForward(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41b44 (    0xd8) JetPack::UnableToOpenFileException::UnableToOpenFileException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41c1c (    0x64) JetPack::ParseException::~ParseException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41c80 (    0x1c) JetPack::Exception::what() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b41c9c (   0x46c) JetPack::detail::resolvingAllSymlinksInNonExistentPath(std::__1::__fs::filesystem::path) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b42108 (    0xa0) std::__1::__fs::filesystem::operator/[abi:v160006](std::__1::__fs::filesystem::path const&, std::__1::__fs::filesystem::path const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b421a8 (   0x28c) JetPack::detail::pathIsContainedBy(std::__1::__fs::filesystem::path, std::__1::__fs::filesystem::path) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b42434 (   0x168) std::__1::pair<std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator> std::__1::mismatch[abi:v160006]<std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator>(std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4259c (    0x50) std::__1::pair<std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator>::~pair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b425ec (   0x284) JetPack::detail::copyArchiveData(archive*, archive*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b42870 (    0x78) getGlobalLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b428e8 (     0x8) JetPack::FileEntryGetPathname(JetPack::DiagnosticContext&, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b428f0 (   0x188) JetPack::throwLibArchiveException(archive*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b42a78 (   0x6b4) JetPack::FileEntryWriteToDirectory(JetPack::DiagnosticContext&, void*, JetPack::ArchiveStream&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4312c (    0x8c) JetPack::PathOutsideOutputDestinationException::~PathOutsideOutputDestinationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b431b8 (   0x154) JetPack::LibArchiveException::LibArchiveException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4330c (   0x1bc) JetPack::PathOutsideOutputDestinationException::PathOutsideOutputDestinationException(std::__1::__fs::filesystem::path) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b434c8 (    0x90) JetPack::PathOutsideOutputDestinationException::~PathOutsideOutputDestinationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43558 (   0x174) std::__1::pair<std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator> std::__1::mismatch[abi:v160006]<std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator, std::__1::__equal_to>(std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator, std::__1::__fs::filesystem::path::iterator, std::__1::__equal_to) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b436cc (   0x230) std::__1::enable_if<__is_cpp17_forward_iterator<char const*>::value, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&>::type std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append[abi:v160006]<char const*>(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b438fc (   0x14c) JetPack::ArchiveStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43a48 (     0x8) JetPack::ArchiveStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43a50 (     0x8) JetPack::ArchiveStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43a58 (     0x8) JetPack::ArchiveStream::getBackingArchive() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43a60 (   0x3d0) JetPack::parseEncryptedSegmentHeader(JetPack::BaseStream&, JetPack::DiagnosticContext&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43e30 (   0x154) readVector(JetPack::BaseStream&, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b43f84 (   0x1f8) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4417c (   0x394) JetPack::parseRootHeader(JetPack::BaseStream&, JetPack::DiagnosticContext&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44510 (   0x16c) JetPack::parseRootDynamicRegion(JetPack::BaseStream&, JetPack::DiagnosticContext&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4467c (    0x10) void std::throw_with_nested[abi:v160006]<JetPack::UnableToParseHeaderException&>(JetPack::UnableToParseHeaderException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4468c (    0x5c) std::__throw_with_nested<JetPack::UnableToParseHeaderException&, JetPack::UnableToParseHeaderException, true>::__do_throw[abi:v160006](JetPack::UnableToParseHeaderException&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b446e8 (    0xb8) std::__nested<JetPack::UnableToParseHeaderException>::__nested[abi:v160006](JetPack::UnableToParseHeaderException const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b447a0 (   0x26c) JetPack::BufferedStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44a0c (     0x8) JetPack::BufferedStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44a14 (    0x34) JetPack::BufferedStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44a48 (    0x84) JetPack::CallbackStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44acc (     0x8) JetPack::CallbackStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44ad4 (     0x8) JetPack::CallbackStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44adc (   0x1cc) JetPack::CallbackStream::seekForward(unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44ca8 (    0xec) JetPack::CallbackStream::seekToEnd() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44d94 (   0x184) JetPack::CallbackStream::~CallbackStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b44f18 (   0x194) JetPack::CallbackStream::~CallbackStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b450ac (    0x4c) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b450f8 (     0x4) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b450fc (    0x28) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45124 (    0x94) JetPack::BufferStream::read(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b451b8 (     0x8) JetPack::BufferStream::position() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b451c0 (    0x10) JetPack::BufferStream::isFinished() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b451d0 (    0x9c) JetPack::archiveErrorToString(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4526c (   0x4d8) JetPackStreamCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45744 (    0x2c) JetPackCreateDataStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45770 (   0x174) JetPackStream* makePublicRef<JetPackStream, JetPack::BufferStream, unsigned char const*&, unsigned long&>(unsigned char const*&, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b458e4 (    0x28) JetPackCreateFileStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4590c (   0x16c) JetPackStream* makePublicRef<JetPackStream, JetPack::FileStream, char const*&>(char const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45a78 (    0x84) JetPackStreamDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45afc (    0xcc) JetPackStreamRead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45bc8 (    0x6c) std::__1::shared_ptr<JetPack::BaseStream>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45c34 (    0xcc) JetPackStreamPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45d00 (    0xcc) JetPackStreamIsFinished [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45dcc (    0x78) getGlobalLog() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45e44 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45e50 (    0x8c) std::__1::optional<std::__1::function<void (unsigned long)>>::~optional() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45edc (    0x84) std::__1::function<unsigned long (unsigned char*, unsigned long)>::~function() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45f60 (    0x20) std::__1::__shared_ptr_emplace<JetPack::CallbackStream, std::__1::allocator<JetPack::CallbackStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45f80 (    0x44) std::__1::__shared_ptr_emplace<JetPack::CallbackStream, std::__1::allocator<JetPack::CallbackStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45fc4 (    0x24) std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45fe8 (     0x4) JetPack::BufferStream::~BufferStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45fec (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45ff0 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b45ff4 (    0x4c) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46040 (    0x28) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::__clone(std::__1::__function::__base<unsigned long (unsigned char*, unsigned long)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46068 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4606c (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46070 (    0x10) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::operator()(unsigned char*&&, unsigned long&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46080 (    0x5c) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b460dc (     0xc) std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b460e8 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b460ec (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b460f0 (    0x4c) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4613c (    0x28) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::__clone(std::__1::__function::__base<void (unsigned long)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46164 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46168 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4616c (     0xc) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::operator()(unsigned long&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46178 (    0x5c) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b461d4 (     0xc) std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b461e0 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b461e4 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b461e8 (    0x4c) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46234 (    0x28) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::__clone(std::__1::__function::__base<unsigned long ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4625c (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46260 (     0x4) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46264 (     0x8) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4626c (    0x5c) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b462c8 (     0xc) std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b462d4 (   0x118) JetPack::CallbackStream::CallbackStream(std::__1::function<unsigned long (unsigned char*, unsigned long)>, std::__1::optional<std::__1::function<void (unsigned long)>>, std::__1::optional<std::__1::function<unsigned long ()>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b463ec (    0xc4) std::__1::__optional_move_base<std::__1::function<void (unsigned long)>, false>::__optional_move_base[abi:v160006](std::__1::__optional_move_base<std::__1::function<void (unsigned long)>, false> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b464b0 (    0xc4) std::__1::__optional_move_base<std::__1::function<unsigned long ()>, false>::__optional_move_base[abi:v160006](std::__1::__optional_move_base<std::__1::function<unsigned long ()>, false> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46574 (    0x98) JetPack::DiagnosticContext::DiagnosticContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4660c (    0x20) std::__1::__shared_ptr_emplace<JetPack::BufferStream, std::__1::allocator<JetPack::BufferStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4662c (    0x44) std::__1::__shared_ptr_emplace<JetPack::BufferStream, std::__1::allocator<JetPack::BufferStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46670 (   0x154) JetPack::FileStream::FileStream(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b467c4 (    0x20) std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b467e4 (    0x44) std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46828 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46840 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4689c (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b468d0 (    0x54) JetPack::CCKDFParametersCreateHkdfWrapper(void const*, unsigned long, void const*, unsigned long, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46924 (     0xc) JetPack::CCKDFParametersDestroyWrapper(CCKDFParameters*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46930 (    0x3c) JetPack::CommonCryptoBackend::generateSecureRandomBytes(unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4696c (    0xc4) JetPack::CommonCryptoBackend::deriveKey(unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46a30 (    0x10) JetPack::CommonCryptoBackend::convertCCStatusToCryptoStatus(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46a40 (    0x4c) JetPack::CommonCryptoBackend::aesGCMEncrypt(unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char*, unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46a8c (    0x40) JetPack::CommonCryptoBackend::aesGCMDecrypt(unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned char*, unsigned char*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46acc (    0x14) JetPack::CommonCryptoBackend::computeSHA256Digest(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46ae0 (   0x4ac) JetPack::CommonCryptoBackend::generateSigningKey() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b46f8c (   0x2cc) JetPack::CFDictionaryWrapper::convert(std::initializer_list<std::initializer_list<void const*>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47258 (    0x90) _ZN7JetPack15makeCFSharedPtrIP8__SecKeyEENSt3__110shared_ptrIu16__remove_pointerIT_EEES5_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b472e8 (    0x90) _ZN7JetPack15makeCFSharedPtrIPK8__CFDataEENSt3__110shared_ptrIu16__remove_pointerIT_EEES6_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47378 (    0xc4) JetPack::FailedToConvertKeyException::FailedToConvertKeyException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4743c (    0x6c) std::__1::shared_ptr<__CFData const>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b474a8 (    0x6c) std::__1::shared_ptr<__SecKey>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47514 (    0x6c) std::__1::shared_ptr<__CFDictionary const>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47580 (    0x6c) std::__1::shared_ptr<__CFNumber const>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b475ec (   0x5b4) JetPack::CommonCryptoBackend::generateSelfSignedCertificate(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47ba0 (   0x124) JetPack::CommonCryptoBackend::subjectEntry(__CFString const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b47cc4 (   0x404) JetPack::CommonCryptoBackend::keyFromData(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b480c8 (    0x90) _ZN7JetPack15makeCFSharedPtrIP16__SecCertificateEENSt3__110shared_ptrIu16__remove_pointerIT_EEES5_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48158 (    0x6c) std::__1::shared_ptr<__CFArray const>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b481c4 (    0x6c) std::__1::shared_ptr<__CFString const>::~shared_ptr[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48230 (   0x2c8) JetPack::CommonCryptoBackend::exportPrivateKeyAsDER(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b484f8 (    0x90) _ZN7JetPack15makeCFSharedPtrIPK14__CFDictionaryEENSt3__110shared_ptrIu16__remove_pointerIT_EEES6_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48588 (    0x1c) JetPack::CommonCryptoBackend::exportCertificateAsDER(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b485a4 (    0x9c) JetPack::CommonCryptoBackend::trustForCertificate(__SecCertificate*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48640 (     0x4) JetPack::FailedToDecodeX509CertificateException::FailedToDecodeX509CertificateException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48644 (    0x90) _ZN7JetPack15makeCFSharedPtrIP10__SecTrustEENSt3__110shared_ptrIu16__remove_pointerIT_EEES5_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b486d4 (   0x1c0) JetPack::CommonCryptoBackend::certificateForData(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48894 (    0xe0) JetPack::CommonCryptoBackend::publicKeyForTrust(__SecTrust*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48974 (    0xc4) std::__1::shared_ptr<__CFArray const> JetPack::CFArrayWrapper::convert<std::__1::shared_ptr<__CFArray const>, 1ul>(std::__1::array<std::__1::shared_ptr<__CFArray const>, 1ul>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48a38 (    0x6c) std::__1::array<std::__1::shared_ptr<__CFArray const>, 1ul>::~array() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48aa4 (    0x18) std::__1::vector<void const*, std::__1::allocator<void const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48abc (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48af0 (    0xd8) JetPack::FailedToGenerateKeyPairException::FailedToGenerateKeyPairException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48bc8 (   0x1b0) std::__1::back_insert_iterator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>::operator=[abi:v160006](unsigned char const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48d78 (    0x90) _ZN7JetPack15makeCFSharedPtrIPK10__CFStringEENSt3__110shared_ptrIu16__remove_pointerIT_EEES6_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48e08 (     0xc) JetPack::CFReleaseIgnoringNull(void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48e14 (     0x4) std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48e18 (    0x28) std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48e40 (    0x20) std::__1::__shared_ptr_pointer<__CFString const*, void (*)(void const*), std::__1::allocator<__CFString const>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48e60 (    0x70) std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>>::__get_deleter(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48ed0 (    0xd8) JetPack::FailedToDecodePrivateKeyException::FailedToDecodePrivateKeyException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b48fa8 (    0xd8) JetPack::FailedToDecodeX509CertificateException::FailedToDecodeX509CertificateException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49080 (    0x20) std::__1::__shared_ptr_pointer<__CFData const*, void (*)(void const*), std::__1::allocator<__CFData const>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b490a0 (    0x20) std::__1::__shared_ptr_pointer<__CFDictionary const*, void (*)(void const*), std::__1::allocator<__CFDictionary const>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b490c0 (    0x20) std::__1::__shared_ptr_pointer<__CFNumber const*, void (*)(void const*), std::__1::allocator<__CFNumber const>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b490e0 (    0x20) std::__1::__shared_ptr_pointer<__SecKey*, void (*)(void const*), std::__1::allocator<__SecKey>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49100 (    0x90) _ZN7JetPack15makeCFSharedPtrIPK9__CFArrayEENSt3__110shared_ptrIu16__remove_pointerIT_EEES6_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49190 (    0x20) std::__1::__shared_ptr_pointer<__CFArray const*, void (*)(void const*), std::__1::allocator<__CFArray const>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b491b0 (    0x20) std::__1::__shared_ptr_pointer<__SecCertificate*, void (*)(void const*), std::__1::allocator<__SecCertificate>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b491d0 (    0x20) std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b491f0 (    0x24) std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&>(std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>, std::__1::shared_ptr<JetPack::BaseStream>&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49214 (    0x5c) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, JetPack::SegmentTag&&, std::__1::shared_ptr<JetPack::BaseStream>&&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49270 (    0x5c) std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>&&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b492cc (    0x38) std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>>::__shared_ptr_emplace[abi:v160006]<std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::array<unsigned char, 16ul>&, unsigned int&>(std::__1::allocator<JetPack::AESDecoderStream>, std::__1::shared_ptr<JetPack::BaseStream>&, std::__1::array<unsigned char, 16ul>&, unsigned int&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49304 (    0x34) std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>>::__shared_ptr_emplace[abi:v160006]<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&>(std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49338 (    0x34) JetPack::CommonCryptoSignatureVerifier::CommonCryptoSignatureVerifier(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::unique_ptr<JetPack::CommonCryptoBackend, std::__1::default_delete<JetPack::CommonCryptoBackend>>) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b4936c (    0x58) std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)>::operator()(JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&, std::__1::shared_ptr<JetPack::BaseStream>&&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b493c4 (    0x64) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::operator()(JetPack::ReaderConfig&, void*&&, std::__1::shared_ptr<JetPack::ArchiveStream>&&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49428 (    0x58) std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)>::operator()(JetPack::ReaderConfig&, void*&&, std::__1::shared_ptr<JetPack::ArchiveStream>&&) (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49480 (     0x4) JetPack::BufferedStream::~BufferedStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49484 (    0x6c) JetPackStreamCreate.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b494f0 (    0x64) std::__1::__optional_move_base<std::__1::function<void (unsigned long)>, false>::__optional_move_base[abi:v160006](std::__1::__optional_move_base<std::__1::function<void (unsigned long)>, false> const&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000205b49554 (    0x64) std::__1::__optional_move_base<std::__1::function<unsigned long ()>, false>::__optional_move_base[abi:v160006](std::__1::__optional_move_base<std::__1::function<unsigned long ()>, false> const&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x0000000205b495b8 (   0x730) __TEXT __auth_stubs
                0x0000000205b495b8 (    0x10) DYLD-STUB$$CCCryptorGCMOneshotDecrypt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b495c8 (    0x10) DYLD-STUB$$CCCryptorGCMOneshotEncrypt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b495d8 (    0x10) DYLD-STUB$$CCDeriveKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b495e8 (    0x10) DYLD-STUB$$CCKDFParametersCreateHkdf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b495f8 (    0x10) DYLD-STUB$$CCKDFParametersDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49608 (    0x10) DYLD-STUB$$CC_SHA256 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49618 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49628 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49638 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49648 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49658 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49668 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49678 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49688 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49698 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496a8 (    0x10) DYLD-STUB$$SecCertificateCopyData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496b8 (    0x10) DYLD-STUB$$SecCertificateCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496c8 (    0x10) DYLD-STUB$$SecGenerateSelfSignedCertificate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496d8 (    0x10) DYLD-STUB$$SecKeyCopyAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496e8 (    0x10) DYLD-STUB$$SecKeyCopyExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b496f8 (    0x10) DYLD-STUB$$SecKeyCreateRandomKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49708 (    0x10) DYLD-STUB$$SecKeyCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49718 (    0x10) DYLD-STUB$$SecKeyIsAlgorithmSupported [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49728 (    0x10) DYLD-STUB$$SecKeyVerifySignature [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49738 (    0x10) DYLD-STUB$$SecRandomCopyBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49748 (    0x10) DYLD-STUB$$SecTrustCopyKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49758 (    0x10) DYLD-STUB$$SecTrustCreateWithCertificates [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49768 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49778 (    0x10) DYLD-STUB$$std::nested_exception::rethrow_nested() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49788 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::__filename() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49798 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::__parent_path() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497a8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::__root_directory() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497b8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::lexically_normal() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497c8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::end() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497d8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::begin() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497e8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::__compare(std::__1::basic_string_view<char, std::__1::char_traits<char>>) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b497f8 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49808 (    0x10) DYLD-STUB$$std::nested_exception::nested_exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49818 (    0x10) DYLD-STUB$$std::nested_exception::~nested_exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49828 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49838 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49848 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49858 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49868 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49878 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49888 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49898 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::__release_weak() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498a8 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::~__shared_weak_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498b8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::__read_symlink(std::__1::__fs::filesystem::path const&, std::__1::error_code*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498c8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::__symlink_status(std::__1::__fs::filesystem::path const&, std::__1::error_code*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498d8 (    0x10) DYLD-STUB$$std::__1::__fs::filesystem::path::iterator::__increment() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498e8 (    0x10) DYLD-STUB$$std::__1::to_string(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b498f8 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49908 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49918 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49928 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49938 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49948 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49958 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49968 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49978 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49988 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49998 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499a8 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499b8 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499c8 (    0x10) DYLD-STUB$$__dynamic_cast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499d8 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499e8 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b499f8 (    0x10) DYLD-STUB$$archive_entry_pathname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a08 (    0x10) DYLD-STUB$$archive_entry_set_pathname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a18 (    0x10) DYLD-STUB$$archive_entry_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a28 (    0x10) DYLD-STUB$$archive_error_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a38 (    0x10) DYLD-STUB$$archive_read_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a48 (    0x10) DYLD-STUB$$archive_read_data_block [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a58 (    0x10) DYLD-STUB$$archive_read_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a68 (    0x10) DYLD-STUB$$archive_read_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a78 (    0x10) DYLD-STUB$$archive_read_next_header [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a88 (    0x10) DYLD-STUB$$archive_read_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49a98 (    0x10) DYLD-STUB$$archive_read_support_format_all [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49aa8 (    0x10) DYLD-STUB$$archive_write_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ab8 (    0x10) DYLD-STUB$$archive_write_data_block [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ac8 (    0x10) DYLD-STUB$$archive_write_disk_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ad8 (    0x10) DYLD-STUB$$archive_write_disk_set_options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ae8 (    0x10) DYLD-STUB$$archive_write_disk_set_standard_lookup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49af8 (    0x10) DYLD-STUB$$archive_write_finish_entry [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b08 (    0x10) DYLD-STUB$$archive_write_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b18 (    0x10) DYLD-STUB$$archive_write_header [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b28 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b38 (    0x10) DYLD-STUB$$compression_stream_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b48 (    0x10) DYLD-STUB$$compression_stream_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b58 (    0x10) DYLD-STUB$$compression_stream_process [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b68 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b78 (    0x10) DYLD-STUB$$feof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b88 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49b98 (    0x10) DYLD-STUB$$fread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ba8 (    0x10) DYLD-STUB$$ftell [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49bb8 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49bc8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49bd8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49be8 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49bf8 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c08 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c18 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c28 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c38 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c48 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c58 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c68 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c78 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c88 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49c98 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49ca8 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49cb8 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49cc8 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000205b49cd8 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000205b49ce8 (   0x284) __TEXT __objc_methlist
                0x0000000205b49ce8 (    0x68) _OBJC_$_INSTANCE_METHODS_JPStream [NameNList, MangledNameNList, NList] 
                0x0000000205b49d50 (    0x30) _OBJC_$_INSTANCE_METHODS_JPDataStream [NameNList, MangledNameNList, NList] 
                0x0000000205b49d80 (    0x68) _OBJC_$_INSTANCE_METHODS_JPCallbackStream [NameNList, MangledNameNList, NList] 
                0x0000000205b49de8 (    0x30) _OBJC_$_CLASS_METHODS_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x0000000205b49e18 (    0x48) _OBJC_$_INSTANCE_METHODS_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x0000000205b49e60 (    0x18) _OBJC_$_INSTANCE_METHODS_JPFileStream [NameNList, MangledNameNList, NList] 
                0x0000000205b49e78 (    0x50) _OBJC_$_INSTANCE_METHODS_JPFileEntry [NameNList, MangledNameNList, NList] 
                0x0000000205b49ec8 (    0xa4) _OBJC_$_INSTANCE_METHODS_JPReader [NameNList, MangledNameNList, NList] 
            0x0000000205b49f70 (  0x1a9f) __TEXT __const
                0x0000000205b49f70 (    0x30) JetPackVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b49fa0 (    0x30) JetPackVersionNumber [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b49fd0 (    0x7b) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a04b (    0x47) typeinfo name for JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a092 (    0x23) typeinfo name for JetPack::NotEnoughDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a0b5 (    0x3a) typeinfo name for JetPack::BrotliStreamNotFinishedAfterDecodingException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a0ef (    0x30) typeinfo name for JetPack::BrotliUnknownDecoderResultException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a11f (    0x35) typeinfo name for JetPack::BrotliAvailableInNotEmptyOnFillException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a154 (    0x29) typeinfo name for JetPack::InputStreamRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a17d (    0x1c) typeinfo name for JetPack::ReaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a199 (    0x27) typeinfo name for JetPack::InvalidSegmentTagException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a1c0 (    0x85) typeinfo name for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a245 (    0x6e) typeinfo name for std::__1::__function::__base<bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a2b3 (    0x54) typeinfo name for bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a307 (    0x53) typeinfo name for bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a35a (    0x2e) typeinfo name for JetPack::UnableToParseRootSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a388 (    0x28) typeinfo name for JetPack::InvalidMagicNumberException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a3b0 (    0x2f) typeinfo name for JetPack::UnsupportedJetPackVersionException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a3df (    0x26) typeinfo name for JetPack::MissingSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a405 (    0x2f) typeinfo name for JetPack::SignatureVerifierRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a434 (    0x53) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a487 (    0x74) typeinfo name for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a4fb (    0x5d) typeinfo name for std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a558 (    0x44) typeinfo name for bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a59c (    0x43) typeinfo name for bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a5df (    0x3b) typeinfo name for std::__nested<JetPack::UnableToParseRootSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a61a (    0x4d) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a667 (    0x1a) typeinfo name for JetPack::PartialStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a681 (    0x2e) typeinfo name for JetPack::UnableToParseDataSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a6af (    0x1b) typeinfo name for JetPack::ParseException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a6ca (    0x56) typeinfo name for std::__nested<JetPack::UnableToParseDataSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a720 (    0x37) typeinfo name for JetPack::UnableToParseSerializationSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a757 (    0x4d) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::ArchiveStream, std::__1::allocator<JetPack::ArchiveStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a7a4 (    0x44) typeinfo name for std::__nested<JetPack::UnableToParseSerializationSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a7e8 (    0x30) typeinfo name for JetPack::InvalidEncryptionTagLengthException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a818 (    0x1d) typeinfo name for JetPack::AESDecoderStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a835 (    0x33) typeinfo name for JetPack::UnableToParseEncryptedSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a868 (    0x2d) typeinfo name for JetPack::KeyProviderNotSpecifiedException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a895 (    0x2a) typeinfo name for JetPack::MissingEncryptionKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a8bf (    0x2f) typeinfo name for JetPack::CommonCryptoInvalidStatusException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a8ee (    0x2d) typeinfo name for JetPack::BlockExceedsMaximumSizeException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a91b (    0x50) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a96b (    0x40) typeinfo name for std::__nested<JetPack::UnableToParseEncryptedSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a9ab (    0x2f) typeinfo name for JetPack::UnableToParseMultiSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4a9da (    0x3c) typeinfo name for std::__nested<JetPack::UnableToParseMultiSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aa16 (    0x2d) typeinfo name for JetPack::MissingTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aa43 (    0x26) typeinfo name for JetPack::InvalidSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aa69 (    0x36) typeinfo name for JetPack::InvalidDataAfterTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aa9f (    0x20) typeinfo name for JetPack::SignedStreamDecoder [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aabf (    0x2a) typeinfo name for JetPack::UnsafeIgnoreSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aae9 (   0x149) JetPack::defaultCertificateData [NameNList, MangledNameNList, NList] 
                0x0000000205b4ac32 (    0x4c) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ac7e (    0x5d) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4acdb (    0x5d) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ad38 (    0xd1) typeinfo name for std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000205b4ae09 (    0x97) typeinfo name for std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4aea0 (    0x31) typeinfo name for JetPackReaderSetDataSegmentFoundCallback::$_0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4aed1 (    0xa3) typeinfo name for std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000205b4af74 (    0x62) typeinfo name for std::__1::__function::__base<bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4afd6 (    0x2f) typeinfo name for JetPackReaderSetFileEntryFoundCallback::$_1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4b005 (    0x9e) typeinfo name for std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)> [NameNList, MangledNameNList, NList] 
                0x0000000205b4b0a3 (    0x5b) typeinfo name for std::__1::__function::__base<std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b0fe (    0x31) typeinfo name for JetPackReaderSetKeyForIdentifierCallback::$_2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4b12f (    0x2a) typeinfo name for JetPack::CommonCryptoSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b159 (    0x37) typeinfo name for JetPack::SignatureVerifier [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b190 (    0x2d) typeinfo name for JetPack::CompressionUnableToInitException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b1bd (    0x28) typeinfo name for JetPack::AppleDecompressionInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b1e5 (    0x23) typeinfo name for JetPack::DecompressionInterface [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b208 (    0x38) typeinfo name for JetPack::UnownedPartialStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b240 (    0x26) typeinfo name for JetPack::UnableToOpenFileException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b266 (    0x15) typeinfo name for JetPack::Exception [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b27b (    0x17) typeinfo name for JetPack::FileStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b292 (    0x3e) typeinfo name for JetPack::BaseStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b2d0 (    0x20) typeinfo name for JetPack::LibArchiveException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b2f0 (    0x32) typeinfo name for JetPack::PathOutsideOutputDestinationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b322 (    0x1a) typeinfo name for JetPack::ArchiveStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b33c (    0x29) typeinfo name for JetPack::UnableToParseHeaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b365 (    0x36) typeinfo name for std::__nested<JetPack::UnableToParseHeaderException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b39b (    0x1b) typeinfo name for JetPack::BufferedStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b3b6 (    0x1b) typeinfo name for JetPack::CallbackStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b3d1 (    0x1c) typeinfo name for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b3ed (    0x19) typeinfo name for JetPack::BufferStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b406 (    0x4e) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::CallbackStream, std::__1::allocator<JetPack::CallbackStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b454 (    0x52) typeinfo name for std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)> [NameNList, MangledNameNList, NList] 
                0x0000000205b4b4a6 (    0x24) typeinfo name for std::__1::__function::__base<unsigned long (unsigned char*, unsigned long)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b4ca (    0x1c) typeinfo name for JetPackStreamCreate::$_0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4b4e6 (    0x50) typeinfo name for std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)> [NameNList, MangledNameNList, NList] 
                0x0000000205b4b536 (    0x22) typeinfo name for std::__1::__function::__base<void (unsigned long)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b558 (    0x1c) typeinfo name for JetPackStreamCreate::$_1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4b574 (    0x50) typeinfo name for std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()> [NameNList, MangledNameNList, NList] 
                0x0000000205b4b5c4 (    0x22) typeinfo name for std::__1::__function::__base<unsigned long ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b5e6 (    0x1c) typeinfo name for JetPackStreamCreate::$_2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4b602 (    0x4c) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::BufferStream, std::__1::allocator<JetPack::BufferStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b64e (    0x82) typeinfo name for std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b6d0 (    0x2d) typeinfo name for JetPack::FailedToGenerateKeyPairException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b6fd (    0x28) typeinfo name for JetPack::FailedToConvertKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b725 (    0x2e) typeinfo name for JetPack::FailedToDecodePrivateKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b753 (    0x33) typeinfo name for JetPack::FailedToDecodeX509CertificateException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b786 (    0x20) typeinfo name for JetPack::CommonCryptoBackend [EXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b7a6 (    0x1a) typeinfo name for JetPack::CryptoBackend [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b7c0 (    0x49) typeinfo name for std::__1::__shared_ptr_pointer<__CFString const*, void (*)(void const*), std::__1::allocator<__CFString const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b809 (     0x8) typeinfo name for void (*)(void const*) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b811 (    0x46) typeinfo name for std::__1::__shared_ptr_pointer<__CFData const*, void (*)(void const*), std::__1::allocator<__CFData const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b857 (    0x4d) typeinfo name for std::__1::__shared_ptr_pointer<__CFDictionary const*, void (*)(void const*), std::__1::allocator<__CFDictionary const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b8a4 (    0x49) typeinfo name for std::__1::__shared_ptr_pointer<__CFNumber const*, void (*)(void const*), std::__1::allocator<__CFNumber const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b8ed (    0x45) typeinfo name for std::__1::__shared_ptr_pointer<__SecKey*, void (*)(void const*), std::__1::allocator<__SecKey>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b932 (    0x47) typeinfo name for std::__1::__shared_ptr_pointer<__CFArray const*, void (*)(void const*), std::__1::allocator<__CFArray const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b979 (    0x4e) typeinfo name for std::__1::__shared_ptr_pointer<__SecCertificate*, void (*)(void const*), std::__1::allocator<__SecCertificate>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4b9c7 (    0x48) typeinfo name for std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>> [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000205b4ba0f (   0x4ec) __TEXT __cstring
            0x0000000205b4befc (  0x165c) __TEXT __gcc_except_tab
                0x0000000205b4befc (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bf18 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bf34 (    0x38) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bf6c (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bf7c (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bf90 (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bfa4 (    0x24) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bfc8 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bfe8 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4bff8 (    0x30) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c028 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c03c (    0x20) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c05c (    0x10) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c06c (    0x44) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c0b0 (    0xa0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c150 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c160 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c170 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c184 (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c198 (    0x10) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c1a8 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c1b8 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c1c8 (    0x30) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c1f8 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c208 (    0x60) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c268 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c27c (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c28c (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c29c (    0xa8) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c344 (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c354 (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c364 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c384 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c398 (    0x34) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c3cc (    0xa0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c46c (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c480 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c494 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c4b4 (    0x24) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c4d8 (    0x18) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c4f0 (    0x28) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c518 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c528 (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c538 (    0x54) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c58c (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c5b0 (    0x10) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c5c0 (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c5d0 (    0xcc) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c69c (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c6b0 (    0x28) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c6d8 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c6e4 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c704 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c718 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c72c (    0x38) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c764 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c784 (    0x3c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c7c0 (    0x38) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c7f8 (    0x48) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c840 (     0xc) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c84c (    0x50) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c89c (    0x3c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c8d8 (    0x28) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c900 (    0x28) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c928 (    0x18) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c940 (    0x44) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c984 (    0x18) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c99c (    0x44) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x0000000205b4c9e0 (    0x44) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ca24 (    0x48) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ca6c (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ca80 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ca94 (    0x18) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4caac (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cac0 (    0x54) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cb14 (    0x48) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cb5c (    0x30) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cb8c (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cb9c (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cbb0 (    0x68) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cc18 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cc2c (    0x3c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cc68 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cc88 (    0x40) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ccc8 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ccd4 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ccf4 (    0xc8) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cdbc (    0x18) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cdd4 (    0x2c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ce00 (    0x2c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ce2c (    0x18) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ce44 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4ce60 (    0x60) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cec0 (    0x30) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cef0 (    0x6c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cf5c (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cf70 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cf80 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cf90 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cfb4 (    0x38) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000205b4cfec (    0x3c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d028 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d038 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d048 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d058 (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d064 (    0x1c) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d080 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d090 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d0a0 (    0x1c) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d0bc (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d0cc (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d0f0 (    0x9c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d18c (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d1a8 (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d1cc (    0x24) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d1f0 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d200 (    0x88) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d288 (    0x30) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d2b8 (    0x60) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d318 (    0x24) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d33c (    0x50) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d38c (    0x24) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d3b0 (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d3c4 (    0x24) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d3e8 (    0x28) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d410 (    0x34) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d444 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d454 (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d468 (    0x24) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d48c (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d49c (    0x14) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d4b0 (    0x14) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d4c4 (    0x10) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d4d4 (    0x10) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d4e4 (    0x10) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d4f4 (    0x10) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d504 (    0x24) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d528 (    0x10) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d538 (    0x10) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x0000000205b4d548 (    0x10) GCC_except_table97 [NameNList, MangledNameNList, NList] 
            0x0000000205b4d558 (   0x546) __TEXT __oslogstring
            0x0000000205b4daa0 (   0xa24) __TEXT __unwind_info
            0x0000000205b4e4c8 (    0x38) __TEXT __eh_frame
            0x0000000205b4e500 (    0x61) __TEXT __objc_classname
            0x0000000205b4e562 (   0x5cd) __TEXT __objc_methname
            0x0000000205b4eb2f (   0x1f0) __TEXT __objc_methtype
            0x0000000205b4ed20 (   0x2e0) __TEXT __objc_stubs
                0x0000000205b4ed20 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ed40 (    0x20) objc_msgSend$backing [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ed60 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ed80 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4eda0 (    0x20) objc_msgSend$convertError [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4edc0 (    0x20) objc_msgSend$dataSegmentFound [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ede0 (    0x20) objc_msgSend$dataWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ee00 (    0x20) objc_msgSend$defaultCStringEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ee20 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ee40 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ee60 (    0x20) objc_msgSend$fileEntryFound [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ee80 (    0x20) objc_msgSend$fileHandleForWritingAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4eea0 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4eec0 (    0x20) objc_msgSend$getBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4eee0 (    0x20) objc_msgSend$initWithBacking:releaseOnDealloc: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ef00 (    0x20) objc_msgSend$initWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ef20 (    0x20) objc_msgSend$keyForIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ef40 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ef60 (    0x20) objc_msgSend$mutableBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4ef80 (    0x20) objc_msgSend$readCallback [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4efa0 (    0x20) objc_msgSend$releaseBackingOnDealloc [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4efc0 (    0x20) objc_msgSend$setLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000205b4efe0 (    0x20) objc_msgSend$writeData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000237664e48 (   0x750) __DATA_CONST SEGMENT
            0x0000000237664e48 (    0xc8) __DATA_CONST __got
            0x0000000237664f10 (    0x38) __DATA_CONST __objc_classlist
            0x0000000237664f48 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000237664f50 (   0x4c0) __DATA_CONST __objc_const
                0x0000000237664f50 (    0x48) _OBJC_METACLASS_RO_$_JPStream [NameNList, MangledNameNList, NList] 
                0x0000000237664f98 (    0x48) _OBJC_$_INSTANCE_VARIABLES_JPStream [NameNList, MangledNameNList, NList] 
                0x0000000237664fe0 (    0x28) _OBJC_$_PROP_LIST_JPStream [NameNList, MangledNameNList, NList] 
                0x0000000237665008 (    0x48) _OBJC_METACLASS_RO_$_JPDataStream [NameNList, MangledNameNList, NList] 
                0x0000000237665050 (    0x28) _OBJC_$_INSTANCE_VARIABLES_JPDataStream [NameNList, MangledNameNList, NList] 
                0x0000000237665078 (    0x18) _OBJC_$_PROP_LIST_JPDataStream [NameNList, MangledNameNList, NList] 
                0x0000000237665090 (    0x48) _OBJC_METACLASS_RO_$_JPCallbackStream [NameNList, MangledNameNList, NList] 
                0x00000002376650d8 (    0x68) _OBJC_$_INSTANCE_VARIABLES_JPCallbackStream [NameNList, MangledNameNList, NList] 
                0x0000000237665140 (    0x38) _OBJC_$_PROP_LIST_JPCallbackStream [NameNList, MangledNameNList, NList] 
                0x0000000237665178 (    0x48) _OBJC_$_INSTANCE_VARIABLES_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x00000002376651c0 (    0x28) _OBJC_$_PROP_LIST_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x00000002376651e8 (    0x48) _OBJC_METACLASS_RO_$_JPFileStream [NameNList, MangledNameNList, NList] 
                0x0000000237665230 (    0x48) _OBJC_METACLASS_RO_$_JPFileEntry [NameNList, MangledNameNList, NList] 
                0x0000000237665278 (    0x48) _OBJC_$_INSTANCE_VARIABLES_JPFileEntry [NameNList, MangledNameNList, NList] 
                0x00000002376652c0 (    0x38) _OBJC_$_PROP_LIST_JPFileEntry [NameNList, MangledNameNList, NList] 
                0x00000002376652f8 (    0x48) _OBJC_METACLASS_RO_$_JPReader [NameNList, MangledNameNList, NList] 
                0x0000000237665340 (    0x88) _OBJC_$_INSTANCE_VARIABLES_JPReader [NameNList, MangledNameNList, NList] 
                0x00000002376653c8 (    0x48) _OBJC_$_PROP_LIST_JPReader [NameNList, MangledNameNList, NList] 
            0x0000000237665410 (   0x188) __DATA_CONST __objc_selrefs
        0x0000000237665598 (  0x1298) __AUTH_CONST SEGMENT
            0x0000000237665598 (   0x240) __AUTH_CONST __objc_const
                0x0000000237665598 (    0x48) _OBJC_CLASS_RO_$_JPStream [NameNList, MangledNameNList, NList] 
                0x00000002376655e0 (    0x48) _OBJC_CLASS_RO_$_JPDataStream [NameNList, MangledNameNList, NList] 
                0x0000000237665628 (    0x48) _OBJC_CLASS_RO_$_JPCallbackStream [NameNList, MangledNameNList, NList] 
                0x0000000237665670 (    0x48) _OBJC_METACLASS_RO_$_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x00000002376656b8 (    0x48) _OBJC_CLASS_RO_$_JPSignatureVerifier [NameNList, MangledNameNList, NList] 
                0x0000000237665700 (    0x48) _OBJC_CLASS_RO_$_JPFileStream [NameNList, MangledNameNList, NList] 
                0x0000000237665748 (    0x48) _OBJC_CLASS_RO_$_JPFileEntry [NameNList, MangledNameNList, NList] 
                0x0000000237665790 (    0x48) _OBJC_CLASS_RO_$_JPReader [NameNList, MangledNameNList, NList] 
            0x00000002376657d8 (    0x60) __AUTH_CONST __cfstring
            0x0000000237665838 (   0xc48) __AUTH_CONST __const
                0x0000000237665838 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665850 (    0x18) typeinfo for JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665868 (    0x18) typeinfo for JetPack::NotEnoughDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665880 (    0x18) typeinfo for JetPack::BrotliStreamNotFinishedAfterDecodingException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665898 (    0x18) typeinfo for JetPack::BrotliUnknownDecoderResultException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376658b0 (    0x18) typeinfo for JetPack::BrotliAvailableInNotEmptyOnFillException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376658c8 (    0x18) typeinfo for JetPack::ReaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376658e0 (    0x18) typeinfo for JetPack::InputStreamRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376658f8 (    0x18) typeinfo for JetPack::InvalidSegmentTagException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665910 (    0x10) typeinfo for std::__1::__function::__base<bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665920 (    0x18) typeinfo for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665938 (    0x10) typeinfo for bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665948 (    0x20) typeinfo for bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665968 (    0x18) typeinfo for JetPack::UnableToParseRootSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665980 (    0x18) typeinfo for JetPack::InvalidMagicNumberException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665998 (    0x18) typeinfo for JetPack::UnsupportedJetPackVersionException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376659b0 (    0x18) typeinfo for JetPack::MissingSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376659c8 (    0x18) typeinfo for JetPack::SignatureVerifierRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376659e0 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376659f8 (    0x10) typeinfo for std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665a08 (    0x18) typeinfo for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665a20 (    0x10) typeinfo for bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665a30 (    0x20) typeinfo for bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665a50 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseRootSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665a88 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665aa0 (    0x18) typeinfo for JetPack::PartialStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ab8 (    0x18) typeinfo for JetPack::ParseException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ad0 (    0x18) typeinfo for JetPack::UnableToParseDataSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ae8 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseDataSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665b20 (    0x18) typeinfo for JetPack::UnableToParseSerializationSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665b38 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::ArchiveStream, std::__1::allocator<JetPack::ArchiveStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665b50 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseSerializationSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665b88 (    0x18) typeinfo for JetPack::InvalidEncryptionTagLengthException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ba0 (    0x18) typeinfo for JetPack::AESDecoderStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665bb8 (    0x18) typeinfo for JetPack::UnableToParseEncryptedSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665bd0 (    0x18) typeinfo for JetPack::KeyProviderNotSpecifiedException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665be8 (    0x18) typeinfo for JetPack::MissingEncryptionKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c00 (    0x18) typeinfo for JetPack::CommonCryptoInvalidStatusException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c18 (    0x18) typeinfo for JetPack::BlockExceedsMaximumSizeException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c30 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c48 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseEncryptedSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c80 (    0x18) typeinfo for JetPack::UnableToParseMultiSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665c98 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseMultiSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665cd0 (    0x18) typeinfo for JetPack::MissingTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ce8 (    0x18) typeinfo for JetPack::InvalidSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d00 (    0x18) typeinfo for JetPack::InvalidDataAfterTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d18 (    0x18) typeinfo for JetPack::SignedStreamDecoder [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d30 (    0x18) typeinfo for JetPack::UnsafeIgnoreSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d48 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d60 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d78 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665d90 (    0x58) vtable for std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000237665de8 (    0x10) typeinfo for std::__1::__function::__base<bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665df8 (    0x18) typeinfo for std::__1::__function::__func<JetPackReaderSetDataSegmentFoundCallback::$_0, std::__1::allocator<JetPackReaderSetDataSegmentFoundCallback::$_0>, bool (JetPack::ReaderConfig&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<JetPack::BaseStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000237665e10 (    0x10) typeinfo for JetPackReaderSetDataSegmentFoundCallback::$_0 [NameNList, MangledNameNList, NList] 
                0x0000000237665e20 (    0x58) vtable for std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000237665e78 (    0x10) typeinfo for std::__1::__function::__base<bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665e88 (    0x18) typeinfo for std::__1::__function::__func<JetPackReaderSetFileEntryFoundCallback::$_1, std::__1::allocator<JetPackReaderSetFileEntryFoundCallback::$_1>, bool (JetPack::ReaderConfig&, void*, std::__1::shared_ptr<JetPack::ArchiveStream>)> [NameNList, MangledNameNList, NList] 
                0x0000000237665ea0 (    0x10) typeinfo for JetPackReaderSetFileEntryFoundCallback::$_1 [NameNList, MangledNameNList, NList] 
                0x0000000237665eb0 (    0x58) vtable for std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)> [NameNList, MangledNameNList, NList] 
                0x0000000237665f08 (    0x10) typeinfo for std::__1::__function::__base<std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665f18 (    0x18) typeinfo for std::__1::__function::__func<JetPackReaderSetKeyForIdentifierCallback::$_2, std::__1::allocator<JetPackReaderSetKeyForIdentifierCallback::$_2>, std::__1::optional<std::__1::array<unsigned char, 16ul>> (JetPack::ReaderConfig&, unsigned short)> [NameNList, MangledNameNList, NList] 
                0x0000000237665f30 (    0x10) typeinfo for JetPackReaderSetKeyForIdentifierCallback::$_2 [NameNList, MangledNameNList, NList] 
                0x0000000237665f40 (    0x10) typeinfo for JetPack::SignatureVerifier [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665f50 (    0x18) typeinfo for JetPack::CommonCryptoSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665f68 (    0x30) vtable for JetPack::AppleDecompressionInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665f98 (    0x18) typeinfo for JetPack::CompressionUnableToInitException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665fb0 (    0x10) typeinfo for JetPack::DecompressionInterface [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237665fc0 (    0x18) typeinfo for JetPack::AppleDecompressionInterface [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665fd8 (    0x18) typeinfo for JetPack::UnownedPartialStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237665ff0 (    0x18) typeinfo for JetPack::Exception [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666008 (    0x18) typeinfo for JetPack::UnableToOpenFileException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666020 (    0x10) typeinfo for JetPack::BaseStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666030 (    0x18) typeinfo for JetPack::FileStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237666048 (    0x18) typeinfo for JetPack::LibArchiveException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666060 (    0x18) typeinfo for JetPack::PathOutsideOutputDestinationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666078 (    0x18) typeinfo for JetPack::ArchiveStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237666090 (    0x18) typeinfo for JetPack::UnableToParseHeaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376660a8 (    0x38) typeinfo for std::__nested<JetPack::UnableToParseHeaderException> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376660e0 (    0x18) typeinfo for JetPack::BufferedStream [EXT, NameNList, MangledNameNList, NList] 
                0x00000002376660f8 (    0x18) typeinfo for JetPack::CallbackStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237666110 (    0x18) typeinfo for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666128 (    0x18) typeinfo for JetPack::BufferStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000237666140 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::CallbackStream, std::__1::allocator<JetPack::CallbackStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666158 (    0x58) vtable for std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)> [NameNList, MangledNameNList, NList] 
                0x00000002376661b0 (    0x10) typeinfo for std::__1::__function::__base<unsigned long (unsigned char*, unsigned long)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376661c0 (    0x18) typeinfo for std::__1::__function::__func<JetPackStreamCreate::$_0, std::__1::allocator<JetPackStreamCreate::$_0>, unsigned long (unsigned char*, unsigned long)> [NameNList, MangledNameNList, NList] 
                0x00000002376661d8 (    0x10) typeinfo for JetPackStreamCreate::$_0 [NameNList, MangledNameNList, NList] 
                0x00000002376661e8 (    0x58) vtable for std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)> [NameNList, MangledNameNList, NList] 
                0x0000000237666240 (    0x10) typeinfo for std::__1::__function::__base<void (unsigned long)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666250 (    0x18) typeinfo for std::__1::__function::__func<JetPackStreamCreate::$_1, std::__1::allocator<JetPackStreamCreate::$_1>, void (unsigned long)> [NameNList, MangledNameNList, NList] 
                0x0000000237666268 (    0x10) typeinfo for JetPackStreamCreate::$_1 [NameNList, MangledNameNList, NList] 
                0x0000000237666278 (    0x58) vtable for std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()> [NameNList, MangledNameNList, NList] 
                0x00000002376662d0 (    0x10) typeinfo for std::__1::__function::__base<unsigned long ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376662e0 (    0x18) typeinfo for std::__1::__function::__func<JetPackStreamCreate::$_2, std::__1::allocator<JetPackStreamCreate::$_2>, unsigned long ()> [NameNList, MangledNameNList, NList] 
                0x00000002376662f8 (    0x10) typeinfo for JetPackStreamCreate::$_2 [NameNList, MangledNameNList, NList] 
                0x0000000237666308 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::BufferStream, std::__1::allocator<JetPack::BufferStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666320 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666338 (    0x18) typeinfo for JetPack::FailedToGenerateKeyPairException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666350 (    0x18) typeinfo for JetPack::FailedToConvertKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666368 (    0x18) typeinfo for JetPack::FailedToDecodePrivateKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666380 (    0x18) typeinfo for JetPack::FailedToDecodeX509CertificateException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666398 (    0x10) typeinfo for JetPack::CryptoBackend [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376663a8 (    0x18) typeinfo for JetPack::CommonCryptoBackend [EXT, NameNList, MangledNameNList, NList] 
                0x00000002376663c0 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__CFString const*, void (*)(void const*), std::__1::allocator<__CFString const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376663d8 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__CFData const*, void (*)(void const*), std::__1::allocator<__CFData const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002376663f0 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__CFDictionary const*, void (*)(void const*), std::__1::allocator<__CFDictionary const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666408 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__CFNumber const*, void (*)(void const*), std::__1::allocator<__CFNumber const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666420 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__SecKey*, void (*)(void const*), std::__1::allocator<__SecKey>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666438 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__CFArray const*, void (*)(void const*), std::__1::allocator<__CFArray const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666450 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__SecCertificate*, void (*)(void const*), std::__1::allocator<__SecCertificate>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237666468 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>> [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000237666480 (     0x8) __AUTH_CONST __auth_ptr
            0x0000000237666488 (   0x3a8) __AUTH_CONST __auth_got
        0x0000000232867cf8 (  0x1200) __AUTH SEGMENT
            0x0000000232867cf8 (   0x230) __AUTH __objc_data
                0x0000000232867cf8 (    0x28) OBJC_CLASS_$_JPStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867d20 (    0x28) OBJC_METACLASS_$_JPStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867d48 (    0x28) OBJC_CLASS_$_JPDataStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867d70 (    0x28) OBJC_METACLASS_$_JPDataStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867d98 (    0x28) OBJC_CLASS_$_JPCallbackStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867dc0 (    0x28) OBJC_METACLASS_$_JPCallbackStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867de8 (    0x28) OBJC_CLASS_$_JPSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867e10 (    0x28) OBJC_METACLASS_$_JPSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867e38 (    0x28) OBJC_CLASS_$_JPFileStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867e60 (    0x28) OBJC_METACLASS_$_JPFileStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867e88 (    0x28) OBJC_CLASS_$_JPFileEntry [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867eb0 (    0x28) OBJC_METACLASS_$_JPFileEntry [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867ed8 (    0x28) OBJC_CLASS_$_JPReader [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232867f00 (    0x28) OBJC_METACLASS_$_JPReader [EXT, NameNList, MangledNameNList, NList] 
            0x0000000232867f28 (   0xfd0) __AUTH __const_weak
                0x0000000232867f28 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>, std::__1::allocator<JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232867f60 (    0x48) vtable for JetPack::BrotliDecoderStreamImpl<JetPack::AppleDecompressionInterface> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232867fa8 (    0x28) vtable for JetPack::BrotliAvailableInNotEmptyOnFillException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232867fd0 (    0x28) vtable for JetPack::NotEnoughDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232867ff8 (    0x28) vtable for JetPack::BrotliStreamNotFinishedAfterDecodingException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868020 (    0x28) vtable for JetPack::BrotliUnknownDecoderResultException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868048 (    0x28) vtable for JetPack::InputStreamRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868070 (    0x28) vtable for JetPack::ReaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868098 (    0x28) vtable for JetPack::InvalidSegmentTagException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328680c0 (    0x58) vtable for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, JetPack::SegmentTag, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868118 (    0x28) vtable for JetPack::UnableToParseRootSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868140 (    0x28) vtable for JetPack::InvalidMagicNumberException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868168 (    0x28) vtable for JetPack::UnsupportedJetPackVersionException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868190 (    0x28) vtable for JetPack::MissingSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328681b8 (    0x28) vtable for JetPack::SignatureVerifierRequiredException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328681e0 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::SignedStreamDecoder, std::__1::allocator<JetPack::SignedStreamDecoder>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868218 (    0x58) vtable for std::__1::__function::__func<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>), std::__1::allocator<bool (*)(JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)>, bool (JetPack::ReaderConfig&, std::__1::shared_ptr<JetPack::BaseStream>)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868270 (    0x48) vtable for std::__nested<JetPack::UnableToParseRootSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328682b8 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::PartialStream, std::__1::allocator<JetPack::PartialStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328682f0 (    0x48) vtable for JetPack::PartialStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868338 (    0x28) vtable for JetPack::UnableToParseDataSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868360 (    0x28) vtable for JetPack::ParseException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868388 (    0x48) vtable for std::__nested<JetPack::UnableToParseDataSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328683d0 (    0x28) vtable for JetPack::UnableToParseSerializationSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328683f8 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::ArchiveStream, std::__1::allocator<JetPack::ArchiveStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868430 (    0x48) vtable for std::__nested<JetPack::UnableToParseSerializationSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868478 (    0x48) vtable for JetPack::AESDecoderStream [EXT, NameNList, MangledNameNList, NList] 
                0x00000002328684c0 (    0x28) vtable for JetPack::InvalidEncryptionTagLengthException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328684e8 (    0x28) vtable for JetPack::UnableToParseEncryptedSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868510 (    0x28) vtable for JetPack::KeyProviderNotSpecifiedException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868538 (    0x28) vtable for JetPack::MissingEncryptionKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868560 (    0x28) vtable for JetPack::CommonCryptoInvalidStatusException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868588 (    0x28) vtable for JetPack::BlockExceedsMaximumSizeException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328685b0 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::AESDecoderStream, std::__1::allocator<JetPack::AESDecoderStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328685e8 (    0x48) vtable for std::__nested<JetPack::UnableToParseEncryptedSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868630 (    0x28) vtable for JetPack::UnableToParseMultiSegmentException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868658 (    0x48) vtable for std::__nested<JetPack::UnableToParseMultiSegmentException> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328686a0 (    0x58) vtable for JetPack::SignedStreamDecoder [EXT, NameNList, MangledNameNList, NList] 
                0x00000002328686f8 (    0x28) vtable for JetPack::MissingTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868720 (    0x28) vtable for JetPack::InvalidSignatureException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868748 (    0x28) vtable for JetPack::InvalidDataAfterTerminationBlockException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868770 (    0x28) vtable for JetPack::UnsafeIgnoreSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868798 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::ReaderConfig, std::__1::allocator<JetPack::ReaderConfig>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328687d0 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::CommonCryptoSignatureVerifier, std::__1::allocator<JetPack::CommonCryptoSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868808 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::UnsafeIgnoreSignatureVerifier, std::__1::allocator<JetPack::UnsafeIgnoreSignatureVerifier>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868840 (    0x28) vtable for JetPack::CommonCryptoSignatureVerifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868868 (    0x28) vtable for JetPack::CompressionUnableToInitException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868890 (    0x48) vtable for JetPack::UnownedPartialStream [EXT, NameNList, MangledNameNList, NList] 
                0x00000002328688d8 (    0x48) vtable for JetPack::FileStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868920 (    0x28) vtable for JetPack::UnableToOpenFileException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868948 (    0x28) vtable for JetPack::Exception [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868970 (    0x28) vtable for JetPack::LibArchiveException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868998 (    0x28) vtable for JetPack::PathOutsideOutputDestinationException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002328689c0 (    0x48) vtable for JetPack::ArchiveStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868a08 (    0x28) vtable for JetPack::UnableToParseHeaderException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868a30 (    0x48) vtable for std::__nested<JetPack::UnableToParseHeaderException> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868a78 (    0x58) vtable for JetPack::BufferedStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868ad0 (    0x48) vtable for JetPack::CallbackStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868b18 (    0x28) vtable for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868b40 (    0x48) vtable for JetPack::BufferStream [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868b88 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::CallbackStream, std::__1::allocator<JetPack::CallbackStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868bc0 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::BufferStream, std::__1::allocator<JetPack::BufferStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868bf8 (    0x38) vtable for std::__1::__shared_ptr_emplace<JetPack::FileStream, std::__1::allocator<JetPack::FileStream>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868c30 (    0x68) vtable for JetPack::CommonCryptoBackend [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232868c98 (    0x28) vtable for JetPack::FailedToGenerateKeyPairException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868cc0 (    0x28) vtable for JetPack::FailedToConvertKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868ce8 (    0x38) vtable for std::__1::__shared_ptr_pointer<__CFString const*, void (*)(void const*), std::__1::allocator<__CFString const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868d20 (    0x28) vtable for JetPack::FailedToDecodePrivateKeyException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868d48 (    0x28) vtable for JetPack::FailedToDecodeX509CertificateException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868d70 (    0x38) vtable for std::__1::__shared_ptr_pointer<__CFData const*, void (*)(void const*), std::__1::allocator<__CFData const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868da8 (    0x38) vtable for std::__1::__shared_ptr_pointer<__CFDictionary const*, void (*)(void const*), std::__1::allocator<__CFDictionary const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868de0 (    0x38) vtable for std::__1::__shared_ptr_pointer<__CFNumber const*, void (*)(void const*), std::__1::allocator<__CFNumber const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868e18 (    0x38) vtable for std::__1::__shared_ptr_pointer<__SecKey*, void (*)(void const*), std::__1::allocator<__SecKey>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868e50 (    0x38) vtable for std::__1::__shared_ptr_pointer<__CFArray const*, void (*)(void const*), std::__1::allocator<__CFArray const>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868e88 (    0x38) vtable for std::__1::__shared_ptr_pointer<__SecCertificate*, void (*)(void const*), std::__1::allocator<__SecCertificate>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232868ec0 (    0x38) vtable for std::__1::__shared_ptr_pointer<__SecTrust*, void (*)(void const*), std::__1::allocator<__SecTrust>> [PEXT, NameNList, MangledNameNList, NList] 
        0x00000002311c4d70 (   0x480) __DATA SEGMENT
            0x00000002311c4d70 (   0x318) __DATA __got_weak
            0x00000002311c5088 (    0x40) __DATA __objc_classrefs
            0x00000002311c50c8 (    0x38) __DATA __objc_superrefs
            0x00000002311c5100 (    0x38) __DATA __objc_ivar
                0x00000002311c5100 (     0x4) OBJC_IVAR_$_JPStream._releaseBackingOnDealloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5104 (     0x4) OBJC_IVAR_$_JPStream._backing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5108 (     0x4) OBJC_IVAR_$_JPDataStream._data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c510c (     0x4) OBJC_IVAR_$_JPCallbackStream._readCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5110 (     0x4) OBJC_IVAR_$_JPCallbackStream._seekForwardCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5114 (     0x4) OBJC_IVAR_$_JPCallbackStream._seekToEndCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5118 (     0x4) OBJC_IVAR_$_JPSignatureVerifier._releaseBackingOnDealloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c511c (     0x4) OBJC_IVAR_$_JPSignatureVerifier._backing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5120 (     0x4) OBJC_IVAR_$_JPFileEntry._releaseBackingOnDealloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5124 (     0x4) OBJC_IVAR_$_JPFileEntry._backing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5128 (     0x4) OBJC_IVAR_$_JPReader._fileEntryFound [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c512c (     0x4) OBJC_IVAR_$_JPReader._dataSegmentFound [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5130 (     0x4) OBJC_IVAR_$_JPReader._keyForIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002311c5134 (     0x4) OBJC_IVAR_$_JPReader._backing [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002311c5138 (    0xb8) __DATA __bss
                0x00000002311c5138 (     0x8) JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c5140 (     0x8) guard variable for JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c5148 (    0x10) getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c5158 (     0x8) guard variable for getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c5160 (     0x8) JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c5168 (     0x8) guard variable for JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c5170 (    0x10) getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c5180 (     0x8) guard variable for getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c5188 (    0x10) getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c5198 (     0x8) guard variable for getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c51a0 (     0x8) JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c51a8 (     0x8) guard variable for JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c51b0 (    0x10) getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c51c0 (     0x8) guard variable for getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c51c8 (    0x10) getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c51d8 (     0x8) guard variable for getGlobalLog()::sharedContext [NameNList, MangledNameNList, NList] 
                0x00000002311c51e0 (     0x8) JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
                0x00000002311c51e8 (     0x8) guard variable for JetPack::getSharedOSLog()::log [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
