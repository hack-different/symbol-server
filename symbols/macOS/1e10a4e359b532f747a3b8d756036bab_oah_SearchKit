Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit [arm64e, 0.031507 seconds]:
    5D2A7922-6126-3714-812F-98022C0C48FE /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000018cdc9000 ( 0x76ff4) __TEXT SEGMENT
            0x000000018cdc9000 (  0x12d8) MACH_HEADER
            0x000000018cdca2d8 ( 0x61598) __TEXT __text
                0x000000018cdca2d8 (    0x88) SKIndexCreateWithMutableData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca360 (    0x50) createAnalysisWithProperties(__CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca3b0 (    0x48) IATextAnalysisCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca3f8 (     0xc) GetDefaultTextAnalysisName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca404 (    0x9c) DocTextAnalysisCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca4a0 (    0x7c) TextAnalysisRegistryResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca51c (    0x94) TextAnalysisRegistryInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca5b0 (    0x38) IAMutexGetGlobalMutex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca5e8 (    0x20) initializeIAGlobalMutex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca608 (    0xa0) IAMutexCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca6a8 (     0x4) IAMutexLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca6ac (     0xc) AIATGetAllocator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca6b8 (    0x58) GetDefaultTextAnalysisCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca710 (    0xa4) TextAnalysisRegister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca7b4 (     0x4) IAMutexUnlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca7b8 (    0x1c) AIATMalloc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca7d4 (    0x5c) IADefaultTextAnalysisCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca830 (    0x10) IATextAnalysisSetProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca840 (    0x94) DocTextAnalysisSetProperties [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdca8d4 (   0x3d8) SKIndexInitialize(void const*, __CFString const*, unsigned int, OpaqueIATextAnalysisRef**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcacac (    0x54) SKGetMutex() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcad00 (    0xac) IAStorageMemoryOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcadac (    0xf8) InitMemoryStreamCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcaea4 (   0x188) StoreStreamNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb02c (     0x8) AIATFillData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb034 (    0x78) IAMemoryStoreStreamNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb0ac (    0xc0) IAStorageOpenFromStream [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb16c (   0x1b8) StorageNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb324 (    0x70) UInt32SetCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb394 (    0x78) UInt32DictionaryCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb40c (    0xf0) StorageInitialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb4fc (     0x8) StoreStreamLockMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb504 (     0xc) StoreStreamInitialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb510 (    0x48) IAMemoryStoreStreamInitialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb558 (    0x40) StoreStreamOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb598 (    0x2c) IAMemoryStoreStreamOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb5c4 (    0x80) UInt32SetAdd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb644 (    0xa4) UInt32SetAtOrBefore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb6e8 (     0x8) UInt32ArrayRetainCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb6f0 (    0x4c) StorageAllocAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb73c (    0xe4) StorageNewAddressInternal [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb820 (    0x20) UInt32SetCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb840 (    0x1c) UInt32SetGetItem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb85c (    0x60) UInt32SetPop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb8bc (     0x4) UInt32ArrayReleaseCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb8c0 (    0xa4) StorageAllocate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb964 (    0x54) StoragePopFreeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcb9b8 (    0xc0) StorageNewInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcba78 (    0x18) AIATFree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcba90 (   0x2f4) StorageCommit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcbd84 (     0x8) StoreStreamIsWritable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcbd8c (    0xc8) StorageDeallocateInternal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcbe54 (    0x38) UInt32DictionaryApplyFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcbe8c (   0x164) StorageFreeAddressesSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcbff0 (    0x3c) UInt32SetClone [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc02c (     0xc) UInt32SetDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc038 (    0xec) StorageGetWriteAddressInternal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc124 (    0x5c) StorageSizeLogSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc180 (    0x7c) StorageFreeAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc1fc (     0x4) UInt32SetDestroy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc200 (    0x78) StorageFreeNewFreeAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc278 (    0x58) StoreStreamSetWritePosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc2d0 (    0x84) StoreStreamMaybeFlushBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc354 (    0x30) StoreStreamWriteUInt32 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc384 (    0x94) StoreStreamWriteBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc418 (    0x50) StoreStreamWritePastEndOfBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc468 (    0x14) AIATCopyData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc47c (    0x7c) StorageBlockInfoWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc4f8 (    0x70) StorageTOCWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc568 (    0x18) UInt32DictionaryCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc580 (    0xa4) StorageFreeAddressesWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc624 (    0x7c) StorageFreedIDsWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc6a0 (    0x18) StoreStreamGetWritePosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc6b8 (    0x3c) StoreStreamFlush [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc6f4 (    0xac) IAMemoryStoreStreamWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc7a0 (    0x1c) IAMemoryStoreStreamFlush [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc7bc (     0x8) StoreStreamUnlockMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc7c4 (   0x13c) IAIndexInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc900 (    0x1c) operator new(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc91c (    0x38) IAMalloc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc954 (     0x4) IAStorage::IAStorage(OpaqueIAStorageRef*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcc958 (    0xa8) IAStorage::IAStorage(OpaqueIAStorageRef*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcca00 (    0x3c) IAObjRefCount::IAObjRefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcca3c (    0x20) IAObject::IAObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcca5c (    0x2c) IAStorageRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcca88 (    0x10) StorageRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcca98 (     0xc) IAStorageIsWritable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdccaa4 (     0x8) StorageIsWritable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdccaac (   0xb0c) TIAIndex::Create(IAStorage*, __CFString const*, unsigned int, OpaqueIATextAnalysisRef**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd5b8 (    0x44) IAMallocArrayOfType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd5fc (     0x8) IADeleteArrayOnUnwind::IADeleteArrayOnUnwind(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd604 (     0xc) IATextAnalysisGetProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd610 (     0x8) DocTextAnalysisGetProperties [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd618 (    0xe4) GetBooleanProperty(__CFDictionary const*, __CFString const*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd6fc (   0x204) CITokenizerCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd900 (    0x48) initializeCITokenizer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcd948 (   0x1b0) CICollationInfoInit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdaf8 (    0x20) CITokenizerCopyLocalInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdb18 (   0x110) CICollationInfoCopyVersionInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdc28 (    0x7c) hex_str [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdca4 (   0x1ac) ci_log [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcde50 (    0x14) TextAnalysisAddPropertyApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcde64 (     0xc) IAStorage::TOC_Get(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcde70 (    0x1c) IAStorageGetNamedBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcde8c (    0x64) StorageTOC_Get [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdef0 (    0x44) UInt32DictionaryGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdf34 (    0x78) IAStorage::AllocateNamedBlock(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdfac (     0xc) IAStorageAllocateBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcdfb8 (    0x58) IAStorage::TOC_Set(__CFString const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce010 (    0x3c) IAStorageSetBlockName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce04c (    0x80) StorageTOC_Set [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce0cc (    0x7c) UInt32DictionaryPut [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce148 (     0x8) UInt32DictionaryRetainCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce150 (     0x8) IAStorage::Allocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce158 (    0xdc) StoreAnalysis(IAStorage*, unsigned int, OpaqueIATextAnalysisRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce234 (     0xc) IATextAnalysisGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce240 (     0x8) DocTextAnalysisGetType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce248 (    0x3c) IAStorageCFStringSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce284 (    0x24) VInt32Size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce2a8 (   0x19c) IAStorageCFTypeSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce444 (    0x48) StoreSizeCFDictionaryApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce48c (    0x3c) IAStorageCFDataSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce4c8 (     0x4) IAOutputBlock::IAOutputBlock(IAStorage*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce4cc (    0xbc) IAOutputBlock::IAOutputBlock(IAStorage*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce588 (    0x10) IAStorageLockMutex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce598 (     0x8) StorageLockMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce5a0 (    0xdc) IAOutputBlockCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce67c (    0x2c) StorageGetWriteAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce6a8 (    0x20) StorageGetBlockSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce6c8 (     0x8) StorageGetStoreStream [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce6d0 (     0x8) StorageUnlockMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce6d8 (    0x4c) IAOutputBlock::WriteCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce724 (    0x2c) IAOutputBlockWriteCFString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce750 (   0x104) StoreStreamWriteCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce854 (   0x158) StoreStreamWriteVInt32 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce9ac (    0x4c) IAOutputBlock::WriteByte(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdce9f8 (     0x8) IAOutputBlockWriteByte [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcea00 (    0x54) StoreStreamWriteByte [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcea54 (    0x4c) IAOutputBlock::WriteCFType(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdceaa0 (   0x3e8) IAOutputBlockWriteCFType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcee88 (    0xa8) GetEntryTypeForCFType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcef30 (     0x8) IAOutputBlockWriteUInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcef38 (    0x48) StoreCFDictionaryApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcef80 (     0x8) IAOutputBlockWriteBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcef88 (    0x7c) IAOutputBlockWriteCFData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf004 (     0x8) IAOutputBlockWriteVInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf00c (     0x4) IAOutputBlock::~IAOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf010 (    0x80) IAOutputBlock::~IAOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf090 (    0x78) IAOutputBlockDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf108 (    0x10) IAStorageUnlockMutex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf118 (     0x4) IAObject::~IAObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf11c (    0x4c) IAOutputBlock::WriteUInt32(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf168 (   0x610) TIAIndex::TIAIndex(IAStorage*, __CFString const*, unsigned char, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf778 (    0x28) IARefCount::IARefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf7a0 (     0x4) UInt32Set::UInt32Set(unsigned char, short (*)(void const*, void const*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf7a4 (    0xa8) UInt32Set::UInt32Set(unsigned char, short (*)(void const*, void const*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf84c (    0x4c) IASkipListNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf898 (    0x9c) ListNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf934 (     0x4) IAInputBlock::IAInputBlock(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf938 (    0x9c) IAInputBlock::IAInputBlock(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcf9d4 (    0xb0) IAInputBlockCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfa84 (    0x48) StorageGetReadAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfacc (    0x98) StoreStreamSetReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfb64 (     0xc) IAStorageGetBlockSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfb70 (    0x18) StoreStreamGetReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfb88 (    0x4c) IAInputBlock::ReadUInt32() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfbd4 (    0x38) StoreStreamReadUInt32 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfc0c (    0xa4) StoreStreamReadBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfcb0 (    0x98) StoreStreamReadPastEndOfBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfd48 (    0x90) IAMemoryStoreStreamRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfdd8 (    0x50) UInt32Set::Put(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfe28 (    0x28) IASkipListPut [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcfe50 (    0xd0) ListPut [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdcff20 (   0x170) ListSearch [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0090 (   0x10c) ListAdd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd019c (    0x38) IAInputBlock::~IAInputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd01d4 (    0x2c) IAInputBlockDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0200 (     0x8) UInt32Set::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0208 (     0xc) IASkipListCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0214 (    0x24) UInt32Set::Pop(unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0238 (     0xc) IASkipListPop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0244 (    0x68) ListPop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd02ac (   0x1f4) RestoreAnalysis(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd04a0 (    0x4c) IAInputBlock::ReadCFString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd04ec (    0xfc) StoreStreamReadCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd05e8 (   0x118) StoreStreamReadVInt32 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0700 (    0x4c) IAInputBlock::ReadByte() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd074c (    0x54) StoreStreamReadByte [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd07a0 (    0x44) IAInputBlock::ReadCFType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd07e4 (   0x488) IAInputBlockReadCFType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0c6c (     0x4) IAInputBlockReadUInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0c70 (    0x58) GetCFTypeForEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0cc8 (    0x38) IAInputBlockReadCFString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0d00 (     0x4) IAInputBlockReadByte [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0d04 (     0x4) IAInputBlockReadBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0d08 (    0x98) IAInputBlockReadCFData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0da0 (     0x4) IAInputBlockReadVInt32 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0da4 (     0x4) IAAnalysis::IAAnalysis(OpaqueIATextAnalysisRef**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0da8 (    0xd8) IAAnalysis::IAAnalysis(OpaqueIATextAnalysisRef**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0e80 (   0x104) TIAInvertedIndex::TIAInvertedIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0f84 (    0x34) TermIndex::TermIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0fb8 (    0x40) IAIndex::IAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd0ff8 (    0xf4) InvertedIndex::InvertedIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd10ec (   0x1f0) TermIndex::Constructing(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd12dc (    0x98) IAIndex::Constructing(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1374 (    0x44) IADefaultMutexConstructor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd13b8 (    0xbc) IADefaultMutex::IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1474 (    0x20) IAStruct::IAStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1494 (    0x40) IADoc::IADoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd14d4 (    0x34) IAOrderedStorable::IAOrderedStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1508 (   0x10c) TaskAllocatorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1614 (    0x10) TaskAllocatorRetain [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1624 (    0x94) DocUpdateSet::DocUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd16b8 (     0x4) BitArray::BitArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd16bc (    0xa4) BitArray::BitArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1760 (    0x44) IAMallocArraySizedOfType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd17a4 (    0x40) TermIndex::SetName(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd17e4 (    0x10) IAObjRefCount::Retain() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd17f4 (    0x2c) IADeleteArrayOnUnwind::~IADeleteArrayOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1820 (     0x4) IAFree [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1824 (     0x4) UInt32Set::~UInt32Set() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1828 (    0x70) UInt32Set::~UInt32Set() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1898 (    0x4c) IASkipListDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd18e4 (    0x4c) ListDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1930 (    0x1c) virtual thunk to InvertedIndex::Initialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd194c (    0x84) TermIndex::Initialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd19d0 (   0x13c) IAIndex::Initialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1b0c (    0x4c) virtual thunk to TIAInvertedIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1b58 (    0x34) InvertedIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1b8c (    0x30) TermIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1bbc (     0x8) IAIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1bc4 (    0x68) TIAIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1c2c (    0x58) virtual thunk to TIAInvertedIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1c84 (    0x78) InvertedIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1cfc (   0x1b0) TermIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1eac (    0xfc) IAIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd1fa8 (    0xf8) TIAIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd20a0 (    0x4c) IAOutputBlock::WriteVInt32(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd20ec (    0x1c) virtual thunk to TIAInvertedIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2108 (    0xb4) InvertedIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd21bc (   0x418) TermIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd25d4 (     0x4) IAIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd25d8 (    0x7c) IADoc::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2654 (    0x7c) IADoc::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd26d0 (    0x74) TermIndex::MakeDocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2744 (    0x58) IAMakeOrderedStorableSet(IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd279c (    0xf0) BTree::BTree(IAOrderedStorable*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd288c (    0x34) IAOrderedStorableSet::IAOrderedStorableSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd28c0 (    0xdc) BTree::Initialize(IAStorage*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd299c (    0x50) IALock::IALock(IAMutex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd29ec (     0x8) IADefaultMutex::Lock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd29f4 (    0xa4) BTree::NewPage(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2a98 (    0xb0) Page::Page(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2b48 (    0xfc) BTree::Flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2c44 (   0x178) Page::Write(IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2dbc (    0x1c) IASkipListFirstNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2dd8 (   0x138) BTHeader::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2f10 (    0x24) IAStorage::IsValidBlockID(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2f34 (     0xc) IAStorageIsValidID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2f40 (    0x4c) StorageIsValidID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2f8c (    0x3c) UInt32SetExists [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd2fc8 (    0x4c) IALock::~IALock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3014 (     0x8) IADefaultMutex::Unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd301c (    0x64) IAAnalysis::GetProtoTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3080 (     0x4) virtual thunk to InvertedIndex::MakeTermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3084 (    0x84) InvertedIndex::MakeTermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3108 (    0x48) TermInfo::TermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3150 (    0x14) BitArray::StoreSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3164 (    0xa4) BitArray::Store(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3208 (    0x3c) TIADocPropertyEntry::TIADocPropertyEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3244 (   0x2e8) TIAIndex::Flush(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd352c (   0x31c) TermIndex::Flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3848 (    0x38) virtual thunk to TIAInvertedIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3880 (   0x1c4) TermIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3a44 (    0x48) IATaskGetCurrent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3a8c (    0x10) initializeIATaskKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3a9c (    0x20) Progress::Progress(unsigned long, bool (*)(float, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3abc (    0x54) Phase::Phase(unsigned int, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3b10 (    0xd4) Progress::Check() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3be4 (    0xa0) BTree::Purge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3c84 (    0x9c) TermIndex::RemoveUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd3d20 (   0xb74) TermIndex::FlushTermUpdates(Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4894 (    0x94) IDTerm::~IDTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4928 (     0x4) IAOrderedStorable::~IAOrderedStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd492c (   0x1b8) TermIndex::FlushDocUpdates(Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4ae4 (    0x98) TaskAllocatorRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4b7c (    0x2c) Progress::Complete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4ba8 (    0xb0) CallFlushProgressFn(float, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4c58 (    0x2c) Phase::~Phase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4c84 (    0x20) virtual thunk to InvertedIndex::FinishingUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4ca4 (    0xc4) InvertedIndex::FinishingUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4d68 (    0x48) TermIndex::GetMaxDocID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4db0 (   0x13c) BitArray::SetLength(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4eec (    0xe4) IAIndex::Flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd4fd0 (    0x4c) IAStorage::Commit(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd501c (    0x28) IAStorageCommit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5044 (     0x8) CFDictionaryUInt32ApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd504c (    0x44) StorageTOCSizeCompute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5090 (    0x58) UInt32SetRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd50e8 (    0xa4) StorageAddAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd518c (   0x120) StorageTOCWriteItem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd52ac (    0xa0) CITokenizerRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd534c (    0x3c) TIAIndex::ClassToRef(TIAIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5388 (    0x40) IAObjRefCount::Release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd53c8 (    0xe4) CreateSKIndex(OpaqueIAIndexRef*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd54ac (    0x3c) TIAIndex::RefToClass(OpaqueIAIndexRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd54e8 (    0x3c) IAIndexGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5524 (    0x2c) IAStorageRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5550 (    0x1c) StorageRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd556c (    0x68) LoggingEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd55d4 (    0x2c) IATextAnalysisRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5600 (    0x78) DocTextAnalysisRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5678 (    0xc4) IADefaultTextAnalysisDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd573c (     0x8) SKIndexFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5744 (    0xd8) SKIndexFlushInternal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd581c (    0x24) IAStorage::IsValid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5840 (    0x28) IAStorageIsValid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5868 (     0x8) StorageIsValid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5870 (     0xc) SKIndexClose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd587c (   0x110) SKIndexDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd598c (    0x54) IAIndexRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd59e0 (    0x70) TIAIndex::Close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5a50 (     0x8) IAReleaseOnUnwind::IAReleaseOnUnwind(IARefCount*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5a58 (    0x60) IAReleaseOnUnwind::~IAReleaseOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5ab8 (    0x4c) TIAIndex::~TIAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5b04 (    0xf4) TIAIndex::~TIAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5bf8 (    0x1c) virtual thunk to TIAInvertedIndex::~TIAInvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5c14 (    0x4c) TIAInvertedIndex::~TIAInvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5c60 (    0x50) TIAInvertedIndex::~TIAInvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5cb0 (    0xc4) InvertedIndex::~InvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5d74 (    0x4c) BitArray::~BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5dc0 (    0x78) BitArray::~BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5e38 (     0x4) IAFreeSized [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5e3c (    0x5c) operator delete(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd5e98 (   0x26c) TermIndex::~TermIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6104 (    0x4c) BTree::~BTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6150 (   0x170) BTree::~BTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd62c0 (    0x4c) IADefaultMutex::~IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd630c (    0x88) IADefaultMutex::~IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6394 (    0x40) IAMutexDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd63d4 (     0x4) IAStruct::~IAStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd63d8 (    0x4c) DocInfo::~DocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6424 (    0x94) DocInfo::~DocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd64b8 (    0x4c) IADoc::~IADoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6504 (    0x8c) IADoc::~IADoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6590 (    0x4c) Leaf::~Leaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd65dc (    0xb0) Page::~Page() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd668c (    0x4c) Scroll::~Scroll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd66d8 (    0x8c) Scroll::~Scroll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6764 (     0x4) IAOrderedStorableSet::~IAOrderedStorableSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6768 (    0x4c) IDDocCount::~IDDocCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd67b4 (    0x94) IDDoc::~IDDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6848 (    0x4c) InvertedTermInfo::~InvertedTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6894 (    0x78) InvertedTermInfo::~InvertedTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd690c (    0x94) TermInfo::~TermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd69a0 (    0x4c) IATerm::~IATerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd69ec (    0x5c) IATerm::~IATerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6a48 (    0x4c) IDTerm::~IDTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6a94 (    0x4c) DocUpdateSet::~DocUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6ae0 (    0xdc) DocUpdateSet::~DocUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6bbc (    0xf4) IAIndex::~IAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6cb0 (    0x4c) IAAnalysis::~IAAnalysis() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6cfc (    0x9c) IAAnalysis::~IAAnalysis() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6d98 (    0x4c) TIADocPropertyEntryNew::~TIADocPropertyEntryNew() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6de4 (    0x80) TIADocPropertyEntry::~TIADocPropertyEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6e64 (    0x4c) IAStorage::~IAStorage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6eb0 (    0x7c) IAStorage::~IAStorage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6f2c (    0xc0) StorageDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd6fec (    0x60) StorageFreeChunks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd704c (     0xc) UInt32DictionaryDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7058 (     0x4) UInt32DictionaryReleaseCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd705c (    0x74) StoreStreamDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd70d0 (    0x24) IAMemoryStoreStreamClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd70f4 (    0x44) IAMemoryStoreStreamDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7138 (     0x4) IAObjRefCount::~IAObjRefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd713c (     0x4) IARefCount::~IARefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7140 (    0x70) CITokenizerDispose [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd71b0 (    0x10) SKIndexOpenWithURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd71c0 (    0xb4) SKIndexOpenWithURLAndLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7274 (   0x594) SKIndexOpen(void const*, __CFString const*, __CFString const*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7808 (   0x170) IAStorageOpenFromFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7978 (    0xf4) InitFileStreamCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7a6c (    0x2c) AIATStringLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7a98 (    0xa0) IAFileStoreStreamNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7b38 (    0x2c) AIATStringCopy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7b64 (   0x1c0) StorageOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7d24 (    0xd8) IAFileStoreStreamOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7dfc (    0x44) IAFileStoreStreamDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7e40 (    0x38) _IAAssertionFunc(char const*, int, char const*, char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7e78 (    0x14) AIATReportError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7e8c (    0xe8) SKIndexCreateWithURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7f74 (    0x48) SKCopyDefaultIndexAnalysis() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7fbc (     0xc) IATextAnalysisRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7fc8 (    0x14) DocTextAnalysisRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd7fdc (    0x4c) IAFileStoreStreamInitialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8028 (    0x84) IAFileStoreStreamWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd80ac (    0x64) IAFileStoreStreamFlush [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8110 (    0x7c) IAFileStoreStreamRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd818c (    0x54) Phase::Phase(unsigned int, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd81e0 (   0x32c) SKDocumentCreateWithURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd850c (     0x4) IADocKeyCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8510 (   0x120) DocKeyCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8630 (    0xb4) SKIndexAddDocumentWithText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd86e4 (     0x4) SKDocumentGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd86e8 (     0xc) DocKeyGetCFTypeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd86f4 (    0x50) IATextStreamCreateFromCFString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8744 (    0x7c) TextStreamCreateFromCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd87c0 (    0xe0) IAIndexAddDocWithTextStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd88a0 (   0x1c8) TIAIndex::Add(OpaqueIADocKeyRef*, OpaqueIATextStreamRef*, __CFString const*, __CFDictionary const*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8a68 (    0x94) TIAIndex::GetDocState(OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8afc (   0x2b8) TIAIndex::BuildDoc(OpaqueIADocKeyRef*, unsigned char, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8db4 (     0x8) IADocKeyGetParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8dbc (    0x40) DocKeyGetParent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8dfc (     0x8) IADocKeyGetSchemeName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8e04 (    0x14) DocKeyGetSchemeName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8e18 (     0x8) IADocKeyGetName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8e20 (    0x14) DocKeyGetName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8e34 (     0x4) IADoc::IADoc(__CFString const*, __CFString const*, unsigned int, unsigned int, OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8e38 (    0xcc) IADoc::IADoc(__CFString const*, __CFString const*, unsigned int, unsigned int, OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd8f04 (   0x10c) TermIndex::GetDocInfo(IADoc const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9010 (    0xbc) BTree::Get(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd90cc (   0x1c4) BTree::GetReference(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9290 (    0x34) Page::FingerEntry(IAOrderedStorable const*, void**, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd92c4 (    0x8c) IASkipListSetFinger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9350 (    0x94) TermIndex::DocInDocUpdateSet(IADoc*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd93e4 (     0xc) IASkipListGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd93f0 (    0x68) ListGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9458 (     0x4) IADoc::~IADoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd945c (    0x14) TermIndex::NewDocID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9470 (     0xc) IADocKeyRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd947c (    0x30) DocKeyRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd94ac (   0x200) TermIndex::AddDocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd96ac (    0x54) DocUpdateSet::Put(DocUpdate*, DocUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9700 (    0xdc) BTree::Put(IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd97dc (    0x64) IDDocCount::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9840 (    0x18) IAStorageVInt32Size [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9858 (    0x68) IADoc::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd98c0 (   0x1bc) BTree::PutInternal(Page*, Page*, PageEntry*, IAOrderedStorable*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9a7c (    0xa0) Page::InsertEntryAtFinger(PageEntry*, void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9b1c (    0x8c) IASkipListFingerInsert [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9ba8 (     0x8) Leaf::EntryStoreSize(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9bb0 (    0x30) BTree::Rebalance(Page*, Page*, PageEntry*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9be0 (    0xac) BTree::RebalanceRoot() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9c8c (     0x8) Page::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9c94 (    0x9c) TIAIndex::GetRootKey(unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9d30 (    0x28) DocKeyDictionaryHash [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9d58 (     0x8) DocKeyDictionaryRetainCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9d60 (    0x50) IADeleteOnUnwind::~IADeleteOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9db0 (    0x1c) IADocKeyRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9dcc (     0xc) DocKeyRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9dd8 (    0x2c) ListCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9e04 (    0x44) DocUpdateCompare(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9e48 (    0x8c) IADoc::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9ed4 (    0x44) PageEntryCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9f18 (    0x18) IDDoc::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9f30 (     0x4) DocKeyDictionaryEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9f34 (    0x98) DocKeyEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdd9fcc (   0x634) TermIndex::AddDocInternal(IADoc*, unsigned int, OpaqueIATextStreamRef*, __CFString const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdda600 (     0x8) DocTextAnalysisGetCallbackRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdda608 (    0x58) IAAnalysis::GetMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdda660 (   0xcd0) IADefaultTextAnalysisCreateTokenizerNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb330 (     0xc) GetFastCharBitmap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb33c (     0xc) GetNeedNormCharBitmap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb348 (    0xd0) UniCharParserCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb418 (   0x340) TextStreamCopyString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb758 (    0x24) IADefaultTokenizerGetNextToken [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddb77c (   0x3c8) IADefaultTokenizerGetNextTokenNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddbb44 (   0xc18) GetNextTokenWithSKTokenizer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddc75c (    0xb4) TermUpdateCreate(__CFAllocator const*, unsigned char*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddc810 (    0xe4) TaskAllocatorAllocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddc8f4 (    0x98) TermUpdateCFSetHashCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddc98c (    0x40) TermUpdateCFSetEqualCallBack(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddc9cc (    0x4c) IADefaultTokenizerDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddca18 (    0x54) UniCharParserDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddca6c (    0x44) ListGetItem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcab0 (    0x44) ListSet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcaf4 (    0xb0) IDDocCount::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcba4 (    0xd4) Page::ReplaceObj(PageEntry*, IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcc78 (    0x84) TermIndex::MaybeFlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddccfc (    0xa8) TermIndex::ShouldMergeUpdates(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcda4 (    0x44) TaskAllocatorUsage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcde8 (   0x150) TermIndex::GetDocTermCount(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcf38 (    0x1c) IATextStreamRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcf54 (    0x9c) TextStreamRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcff0 (     0x8) DocKeyDictionaryReleaseCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddcff8 (    0x2c) Leaf::EntryStore(PageEntry*, IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd024 (    0xb4) IDDocCount::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd0d8 (   0x18c) IADoc::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd264 (    0x30) IASkipListNextNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd294 (    0x14) IDDoc::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd2a8 (    0x58) QSortTermUpdateCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd300 (    0xb4) IATerm::IATerm(unsigned char*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd3b4 (    0xe4) TermIndex::GetTermInfo(IATerm*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd498 (     0x4) IATerm::IATerm(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd49c (    0xac) IATerm::IATerm(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd548 (    0x1c) virtual thunk to InvertedIndex::UpdateTermInfo(TermInfo*, FreqPosting*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd564 (   0x16c) InvertedIndex::UpdateTermInfo(TermInfo*, FreqPosting*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd6d0 (    0x9c) FreqPostingsAppend(FreqPosting*, unsigned int, FreqPosting*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd76c (    0x44) InvertedTermInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd7b0 (    0x64) TermInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd814 (    0x30) IATerm::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd844 (    0x70) FreqPostingsStoreSize(FreqPosting*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd8b4 (    0x60) FreqPostingStoreSize(FreqPosting const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd914 (    0x2c) TermInfo::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd940 (    0x50) IATerm::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddd990 (    0x70) InvertedTermInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddda00 (    0xb0) TermInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddab0 (    0x8c) IATerm::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddb3c (    0x4c) IAOutputBlock::WriteBuffer(void const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddb88 (    0xc0) FreqPostingsStore(FreqPosting*, unsigned int, IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddc48 (     0xc) TermInfo::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddc54 (    0x48) IATerm::LessThanNonVirtual(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddc9c (    0x98) BTree::PutValues(int, IAOrderedStorable**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddd34 (    0x58) IDTerm::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddd8c (    0x18) IDTerm::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddda4 (    0x88) IDTerm::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddde2c (    0x14) IDTerm::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddde40 (    0x64) DocInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddea4 (    0x2c) DocInfo::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddded0 (    0xb0) DocInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddf80 (    0x2c) DocInfo::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdddfac (    0x90) IADoc::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde03c (    0x64) SKDocumentDealloc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde0a0 (    0x48) IAFileStoreStreamClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde0e8 (     0xc) StoreStreamGetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde0f4 (    0x1c) IAFileStoreStreamGetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde110 (    0xe4) StorageBlockInfoRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde1f4 (   0x1ac) StorageTOCRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde3a0 (    0xa4) StorageFreeAddressesRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde444 (    0x84) StorageFreedIDsRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde4c8 (   0x120) IAIndexOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde5e8 (   0x394) TIAIndex::Open(IAStorage*, __CFString const*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde97c (    0x1c) virtual thunk to InvertedIndex::Open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdde998 (    0x98) InvertedIndex::Open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddea30 (   0x604) TermIndex::Open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf034 (    0xf0) IAIndex::Open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf124 (    0x58) virtual thunk to TIAInvertedIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf17c (    0x4c) InvertedIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf1c8 (    0xc0) TermIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf288 (    0xcc) IAIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf354 (    0xf4) TIAIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf448 (    0x4c) IAInputBlock::ReadVInt32() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf494 (    0x10) IAStorage::IsWritable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf4a4 (   0x1a4) BTree::Open(IAStorage*, unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf648 (    0x8c) BTHeader::Restore(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf6d4 (   0x144) ReadPage(unsigned int, IAStorage*, IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf818 (     0x8) IAInputBlock::GetPosition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf820 (   0x168) Page::ReadEntries(IAInputBlock*, IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf988 (    0x10) IASkipListFingerFirst [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddf998 (    0x80) Leaf::EntryRestore(PageEntry*, IAOrderedStorable*, IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfa18 (    0x80) DocInfo::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfa98 (    0x8c) IADoc::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfb24 (    0xa0) IADoc::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfbc4 (    0xc4) IDDocCount::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfc88 (   0x160) InvertedTermInfo::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfde8 (    0x98) IATerm::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfe80 (    0x4c) IAInputBlock::ReadBuffer(void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddfecc (    0x8c) FreqPostingsRestore(unsigned int, IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cddff58 (    0xb4) IDTerm::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde000c (   0x330) TermIndex::RestoreUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde033c (    0x90) BitArray::Restore(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde03cc (    0x18) TermIndex::GetUpdateDocCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde03e4 (    0x58) SKDocumentGetName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde043c (    0x58) UniCharParserSwitchToCFT [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0494 (    0xb4) UniCharParserGetNextWord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0548 (   0x890) GetNextTokenFromCFToken [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0dd8 (    0x74) InvertedTermInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0e4c (    0x34) TermInfo::TermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0e80 (    0x58) TermInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0ed8 (    0x8c) IATerm::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0f64 (    0x60) FreqPostingsCopy(FreqPosting*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde0fc4 (    0x68) FreqPostingStoreSize(FreqPosting const*, FreqPosting const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde102c (   0x104) BTree::GrowTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1130 (     0x4) PageCache::PageCache(IAStorage*, IAOrderedStorable*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1134 (    0xc4) PageCache::PageCache(IAStorage*, IAOrderedStorable*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde11f8 (    0xc8) PageCache::Put(Page*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde12c0 (    0x74) PageCache::PurgeLru(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1334 (    0xc0) PageCache::AddMru(PageCacheEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde13f4 (     0x4) Page::Page(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde13f8 (    0xd8) BTree::SplitOne(Page*, Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde14d0 (     0x8) Leaf::IsLeaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde14d8 (    0x20) PageCacheEntryPtrCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde14f8 (    0x6c) Page::PopEntry(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1564 (    0x90) Page::InsertEntry(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde15f4 (     0xc) Page::EntryStoreSize(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1600 (    0xcc) BTree::RebalanceTwo(Page*, PageEntry*, Page*, Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde16cc (   0x208) Scroll::Initialize(Page*, PageEntry*, Page*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde18d4 (     0x8) Page::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde18dc (     0x8) Page::Next(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde18e4 (    0xd0) BTree::BestTwoPagination() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde19b4 (    0xe4) BTree::PaginateTwo(Page*, PageEntry*, Page*, Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1a98 (   0x1e0) Page::ShiftContentsLeft(Page*, PageEntry*, Page*, PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1c78 (    0x14) IASkipListFingerLast [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1c8c (     0x8) Page::LastNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1c94 (    0x24) IASkipListLastNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1cb8 (    0xa0) BTree::GetPage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1d58 (   0x184) PageCache::Get(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1edc (    0x94) PageCacheEntry::~PageCacheEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde1f70 (   0x140) BTree::RebalanceNonRoot(Page*, Page*, PageEntry*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde20b0 (    0xc0) PageCache::PurgeEntry(PageCacheEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2170 (     0xc) IASkipListRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde217c (    0x74) ListRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde21f0 (    0x74) ListRemoveItem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2264 (    0x88) PageCache::MaybeWritePage(PageCacheEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde22ec (    0x4c) PageCacheEntry::~PageCacheEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2338 (    0xdc) PageCache::Purge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2414 (    0xb8) Page::EntryStore(PageEntry*, IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde24cc (    0xa8) IDTerm::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2574 (    0x50) PageCache::WriteDirtyPages() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde25c4 (    0x4c) Page::~Page() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2610 (    0x4c) PageCache::~PageCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde265c (    0xdc) PageCache::~PageCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2738 (    0xb8) Page::EntryRestore(PageEntry*, IAOrderedStorable*, IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde27f0 (    0x98) DocInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2888 (   0x1d0) TIAIndex::RemoveDoc(OpaqueIADocKeyRef*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2a58 (   0x17c) TIAIndex::GetIterator(OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2bd4 (    0x84) TermIndex::GetDocIterator(IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2c58 (    0xe4) TermIndex::GetDocInfoIterator(IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2d3c (    0x8c) BTree::MakeIterator(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2dc8 (    0x78) BTreeIterator::BTreeIterator(BTree*, IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2e40 (    0x34) IAOrderedStorableIterator::IAOrderedStorableIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2e74 (    0x8c) BTreeIterator::BuildStack(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde2f00 (   0x15c) BTreeIterator::PushTo(Page*, IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde305c (    0x88) BTreeIterator::PopForward() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde30e4 (    0x4c) IteratorFrame::~IteratorFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3130 (    0x94) IteratorFrame::~IteratorFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde31c4 (    0x34) IADocIterator::IADocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde31f8 (    0xc8) TIAIndexDocIterator::TIAIndexDocIterator(TIAIndex*, IADocIterator*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde32c0 (    0x10) IARefCount::Retain() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde32d0 (   0x288) TIAIndexDocIterator::Increment() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3558 (    0x7c) TIDocIterator::GetNextDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde35d4 (   0x128) BTreeIterator::Next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde36fc (    0x3c) IARefCount::Release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3738 (    0x4c) TIAIndexDocIterator::~TIAIndexDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3784 (    0xac) TIAIndexDocIterator::~TIAIndexDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3830 (    0x4c) TIDocIterator::~TIDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde387c (    0x94) TIDocIterator::~TIDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3910 (    0x4c) BTreeIterator::~BTreeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde395c (   0x160) BTreeIterator::~BTreeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3abc (     0x4) IAOrderedStorableIterator::~IAOrderedStorableIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3ac0 (     0x4) IADocIterator::~IADocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3ac4 (    0xec) TermIndex::DeleteDoc(IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3bb0 (    0x70) virtual thunk to InvertedIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3c20 (    0x80) InvertedIndex::DeletingDocInternal(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3ca0 (    0xec) TermIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3d8c (    0x88) BTree::Remove(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde3e14 (   0x1fc) BTree::RemoveInternal(Page*, Page*, PageEntry*, IAOrderedStorable const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4010 (    0xb0) Page::RemoveEntryAtFinger(void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde40c0 (    0x38) IASkipListFingerGetNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde40f8 (    0x14) IASkipListFingerRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde410c (     0x8) Page::PreviousNode(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4114 (    0x30) IASkipListPreviousNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4144 (   0x1a8) Page::ShiftContentsRight(Page*, PageEntry*, Page*, PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde42ec (    0x10) AIATRegisterReportErrorUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde42fc (    0x18) AIATSetAllocator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4314 (    0x38) AIATStringCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde434c (    0x20) AIATCompareData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde436c (    0x40) UInt32DictionaryCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde43ac (     0xc) UInt32DictionaryEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde43b8 (    0x3c) UInt32DictionaryClone [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde43f4 (     0x4) UInt32DictionaryDestroy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde43f8 (    0x3c) UInt32DictionaryRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4434 (    0x40) UInt32ArrayCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4474 (     0xc) UInt32ArrayEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4480 (    0x34) UInt32SetGetItemPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde44b4 (    0xa8) UInt32VoidMapCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde455c (     0x8) UInt32VoidMapRetainCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4564 (     0x4) UInt32VoidMapReleaseCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4568 (    0x44) UInt32VoidMapCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde45ac (    0x14) UInt32VoidMapEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde45c0 (    0x5c) UInt32VoidMapDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde461c (    0x10) UInt32VoidMapPop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde462c (    0x1c) UInt32VoidMapCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4648 (    0xc8) UInt32VoidMapAtOrBefore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4710 (    0x34) UInt32VoidMapGetItemPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4744 (    0x78) UInt32VoidMapGetByPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde47bc (    0x5c) UInt32VoidMapGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4818 (    0xc4) UInt32VoidMapAdd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde48dc (    0x8c) UInt32VoidMapRemoveByPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4968 (    0x84) UInt32VoidMapRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde49ec (    0x58) HighLevelQuery::HighLevelQuery(InvertedAccessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4a44 (    0x58) HighLevelQuery::HighLevelQuery(InvertedAccessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4a9c (    0xb4) HighLevelQuery::~HighLevelQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4b50 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4b5c (     0x4) HighLevelQuery::~HighLevelQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4b60 (    0x4c) HighLevelQuery::~HighLevelQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4bac (   0x280) HighLevelQuery::Initialize(__CFArray const*, __CFArray const*, __CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4e2c (    0xd8) HighLevelQuery::MakeQuery(__CFArray const*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4f04 (    0xe8) HighLevelQuery::CombineQuery(__CFString const*, __CFString const*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde4fec (   0x1e0) HighLevelQuery::Initialize(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde51cc (   0x270) HighLevelQuery::BuildQueries(__CFString const*, __CFArray*, __CFArray*, __CFArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde543c (    0x74) HighLevelQuery::InitializeQuery(InvertedIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde54b0 (    0x2c) HighLevelQuery::GetMin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde54dc (    0xbc) HighLevelQuery::Evaluate(unsigned int, float*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5598 (    0x50) HighLevelQuery::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde55e8 (    0x28) HighLevelQuery::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5610 (    0x50) HighLevelQuery::ResetMins() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5660 (    0x98) HighLevelQuery::SetUpQuery(Similarity*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde56f8 (    0x10) HighLevelQuery::IsRequired(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5708 (    0x10) HighLevelQuery::IsExclude(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5718 (     0x8) IAAccessor::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5720 (    0x18) IAAccessor::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5738 (    0x98) IAHit::IAHit(IAIndex*, IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde57d0 (     0x4) IAHit::IAHit(IAIndex*, IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde57d4 (    0x94) IAHit::~IAHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5868 (     0x4) IAHit::~IAHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde586c (    0x4c) IAHit::~IAHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde58b8 (    0x3c) IAProgressReport::IAProgressReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde58f4 (    0x3c) IAProgressReport::IAProgressReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5930 (     0x4) IAProgressReport::~IAProgressReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5934 (     0x4) IAProgressReport::~IAProgressReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5938 (    0x4c) IAProgressReport::~IAProgressReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5984 (    0x38) IAAccessor::IAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde59bc (    0x60) IAAccessor::IAAccessor(IAIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5a1c (    0x20) IAAccessor::Constructing(IAIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5a3c (     0x4) IAAccessor::~IAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5a40 (     0x4) IAAccessor::~IAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5a44 (     0x4) IAAccessor::~IAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5a48 (   0x150) IAAccessor::Initialize(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5b98 (    0x9c) IAAccessor::RestoreInitValidation(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5c34 (   0x158) IAAccessor::StoreInitialization(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5d8c (    0x10) IAAccessor::InitValidationSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5d9c (    0xd4) IAAccessor::StoreInitValidation(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5e70 (    0xa8) IAAccessor::IsInitializationValid(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5f18 (    0x80) IAAccessor::UpdateInitValidation(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde5f98 (   0x178) IAAccessor::Update(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6110 (   0x12c) IAAccessor::Store(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde623c (     0x8) TSimpleStack::TSimpleStack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6244 (     0x8) TSimpleStack::TSimpleStack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde624c (     0x4) TSimpleStack::~TSimpleStack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6250 (     0x4) TSimpleStack::~TSimpleStack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6254 (    0x10) TSimpleStack::IsEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6264 (    0x10) TSimpleStack::IsFull() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6274 (     0x8) TSimpleStack::Count() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde627c (    0x28) TSimpleStack::Pop() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde62a4 (    0x44) TSimpleStack::Push(TStackEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde62e8 (    0x1c) TSimpleStack::ExamineTop() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6304 (    0x2c) TSimpleStack::GetEntry(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6330 (    0x68) TSimpleStack::Destroy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6398 (    0x20) IAParser::IAParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde63b8 (    0x20) IAParser::IAParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde63d8 (    0x5c) IAParser::IAParser(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6434 (     0x4) IAParser::IAParser(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6438 (    0x48) IAParser::~IAParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6480 (     0x4) IAParser::~IAParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6484 (    0x70) IAParser::SetText(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde64f4 (   0x33c) IAParser::Parse(IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6830 (   0x2e8) IAParser::Lexical(TStackEntry**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6b18 (    0x54) IAParser::CompareLeftFence(TStackEntry*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6b6c (    0x54) IAParser::CompareRightFence(TStackEntry*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6bc0 (    0xc4) IAParser::CreateTree(TStackEntry*, IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6c84 (    0x54) IAParser::GetCharType(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6cd8 (    0x48) IAParser::IsOperator(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6d20 (     0xc) IAParser::IsValid(unsigned char) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6d2c (   0x134) IAParser::CreateTreeInternal(TStackEntry*, IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6e60 (    0x14) IABooleanQueryTermNode::IABooleanQueryTermNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6e74 (    0x14) IABooleanQueryTermNode::IABooleanQueryTermNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6e88 (    0x94) IABooleanQueryTermNode::~IABooleanQueryTermNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6f1c (     0x4) IABooleanQueryTermNode::~IABooleanQueryTermNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6f20 (    0xb4) IABooleanQueryTermNode::InitializeQuery(InvertedIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde6fd4 (    0xf4) IABooleanQueryTermNode::SetUpQuery(InvertedAccessor*, Similarity*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde70c8 (     0x8) IABooleanQueryTermNodeList::IABooleanQueryTermNodeList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde70d0 (     0x8) IABooleanQueryTermNodeList::IABooleanQueryTermNodeList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde70d8 (    0x78) IABooleanQueryTermNodeList::~IABooleanQueryTermNodeList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7150 (     0x4) IABooleanQueryTermNodeList::~IABooleanQueryTermNodeList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7154 (    0xb8) IABooleanQueryTermNodeList::AddNode(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde720c (    0x60) IABooleanQueryTermNodeList::InitializeQuery(InvertedIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde726c (   0x198) IABooleanQueryTermNodeList::SetUpQuery(InvertedAccessor*, Similarity*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7404 (     0xc) IAQueryTree::IAQueryTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7410 (     0xc) IAQueryTree::Initialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde741c (     0xc) IAQueryTree::IAQueryTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7428 (    0x40) IAQueryTree::IAQueryTree(__CFString const*, IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7468 (    0x3c) IAQueryTree::SetTerm(__CFString const*, IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde74a4 (    0x40) IAQueryTree::IAQueryTree(__CFString const*, IABooleanQueryTermNodeList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde74e4 (    0x10) IAQueryTree::IAQueryTree(IAQueryTree::IAOperator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde74f4 (    0x10) IAQueryTree::IAQueryTree(IAQueryTree::IAOperator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7504 (     0x4) IAQueryTree::~IAQueryTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7508 (     0x4) IAQueryTree::~IAQueryTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde750c (     0x8) IAQueryTree::DestroyTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7514 (    0x54) IAQueryTree::DeleteTree(IAQueryTree*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7568 (    0x14) IAQueryTree::SetOperator(IAQueryTree::IAOperator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde757c (     0x8) IAQueryTree::GetOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7584 (     0xc) IAQueryTree::GetTerm() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7590 (    0x24) IAQueryTree::GetTermLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde75b4 (    0x14) IAQueryTree::HasChild() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde75c8 (    0x10) IAQueryTree::HasTerm() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde75d8 (    0x44) IAQueryTree::DumpTree() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde761c (    0x7c) IAQueryTree::Validate() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7698 (    0x4c) IAQueryTree::ResetMins() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde76e4 (    0xdc) IAQueryTree::GetMin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde77c0 (   0x2d4) IAQueryTree::Evaluate(unsigned int, float*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7a94 (    0x60) IABooleanQuery::IABooleanQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7af4 (     0x4) IABooleanQuery::IABooleanQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7af8 (    0x7c) IABooleanQuery::~IABooleanQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7b74 (     0x4) IABooleanQuery::~IABooleanQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7b78 (    0xfc) IABooleanQuery::Initialize(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7c74 (     0x8) IABooleanQuery::SetUpQuery(InvertedAccessor*, Similarity*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7c7c (    0x60) IABooleanQuery::InitializeQuery(InvertedIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7cdc (    0x48) IABooleanQuery::GetMin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d24 (     0x8) IABooleanQuery::Evaluate(unsigned int, float*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d2c (    0x24) IABooleanQuery::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d50 (     0x8) IABooleanQuery::ResetMins() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d58 (     0xc) IABooleanQuery::SetAndOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d64 (     0xc) IABooleanQuery::SetOrOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d70 (     0xc) IABooleanQuery::SetNotOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d7c (     0xc) IABooleanQuery::SetLeftFence(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d88 (     0xc) IABooleanQuery::SetRightFence(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7d94 (     0xc) IABooleanQuery::GetAndOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7da0 (     0xc) IABooleanQuery::GetOrOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7dac (     0xc) IABooleanQuery::GetNotOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7db8 (     0xc) IABooleanQuery::GetLeftFence() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7dc4 (     0xc) IABooleanQuery::GetRightFence() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7dd0 (   0x12c) IASearchSetCreateFromFSRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde7efc (   0x144) IASearchSetCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8040 (    0x48) IASearchSetRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8088 (    0x54) IASearchSetRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde80dc (    0x74) IASearchSetAddIndex(OpaqueIASearchSetRef*, OpaqueIAIndexRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8150 (    0x7c) IASearchSetAddIndices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde81cc (    0x38) IASearchSetGetIndexCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8204 (    0xac) IASearchSetGetIndices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde82b0 (     0x8) IASearchSetRemoveIndices [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde82b8 (    0xc4) IASearchSetRankedQueryFromTextStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde837c (    0x10) IASearchSetQueryNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde838c (    0xf8) _IASearchSetQuery(OpaqueIASearchSetRef*, __CFString const*, unsigned int, unsigned int, void*, unsigned char (*)(void*, OpaqueIAIndexRef*, OpaqueIADocKeyRef*), unsigned char (*)(void*, OpaqueIAIndexRef*, long), OpaqueIASearchResultsRef**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8484 (     0xc) IASearchSetQuery [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8490 (    0xf0) IASearchSetFindSimilarDocuments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8580 (    0x54) IASearchResultsDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde85d4 (    0x38) IASearchResultsGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde860c (   0x200) IASearchResultsGetInfoBulk [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde880c (   0x194) IASearchResultsCopyMatchingTerms [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde89a0 (    0x6c) QueryStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8a0c (    0x94) QueryDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8aa0 (    0x44) IASearchSetTaskGetSearchResults [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8ae4 (    0xcc) IASearchSetQueryAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8bb0 (   0x108) IASearchSetFindSimilarDocumentsAsync [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8cb8 (    0x70) FindSimilarStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8d28 (   0x15c) InVecAccessor::InVecAccessor(InVecIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8e84 (    0xb8) InVecAccessor::MakeMaxWeightCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde8f3c (   0x134) InVecAccessor::InVecAccessor(InVecIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9070 (   0x194) InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9204 (    0x50) InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9254 (     0x8) non-virtual thunk to InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde925c (    0x1c) _ZTv0_n24_N13InVecAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9278 (    0x1c) _ZTv0_n24_N13InVecAccessorD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9294 (    0x1c) virtual thunk to InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde92b0 (    0x4c) InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde92fc (     0x8) non-virtual thunk to InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9304 (    0x1c) _ZTv0_n24_N13InVecAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9320 (    0x1c) _ZTv0_n24_N13InVecAccessorD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde933c (    0x1c) virtual thunk to InVecAccessor::~InVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9358 (   0x114) InVecAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde946c (     0x8) non-virtual thunk to InVecAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9474 (    0x1c) virtual thunk to InVecAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9490 (   0x134) InVecAccessor::CacheTermStats(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde95c4 (     0x8) non-virtual thunk to InVecAccessor::CacheTermStats(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde95cc (    0xb0) InVecAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde967c (     0x8) non-virtual thunk to InVecAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9684 (    0x1c) virtual thunk to InVecAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde96a0 (   0x140) InVecAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde97e0 (     0x8) non-virtual thunk to InVecAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde97e8 (    0x1c) virtual thunk to InVecAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9804 (   0x154) InVecAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9958 (     0x8) non-virtual thunk to InVecAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9960 (    0x1c) virtual thunk to InVecAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde997c (    0x18) ScorePowerOrder [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9994 (   0x144) InVecAccessor::TrimQueryVector(TWVector*, unsigned char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9ad8 (   0x448) InVecAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9f20 (    0x10) non-virtual thunk to InVecAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9f30 (    0x24) virtual thunk to InVecAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cde9f54 (   0x448) InVecAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea39c (    0x10) non-virtual thunk to InVecAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea3ac (    0x24) virtual thunk to InVecAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea3d0 (    0xe4) InVecAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea4b4 (     0x8) non-virtual thunk to InVecAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea4bc (    0x1c) virtual thunk to InVecAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea4d8 (   0x284) InVecAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea75c (   0x134) InVecAccessor::UpdateCacheTermStats(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea890 (     0x8) non-virtual thunk to InVecAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea898 (    0x1c) virtual thunk to InVecAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea8b4 (     0x8) InvertedAccessor::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea8bc (    0x38) InvertedAccessor::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea8f4 (    0x4c) virtual thunk to InvertedAccessor::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdea940 (   0x130) InvertedAccessor::InvertedAccessor(InvertedIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeaa70 (    0x74) InvertedAccessor::UpcastIndices(InvertedIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeaae4 (   0x108) InvertedAccessor::InvertedAccessor(InvertedIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeabec (   0x17c) InvertedAccessor::~InvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdead68 (    0x50) InvertedAccessor::~InvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeadb8 (    0x1c) _ZTv0_n24_N16InvertedAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeadd4 (    0x1c) _ZTv0_n24_N16InvertedAccessorD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeadf0 (    0x1c) virtual thunk to InvertedAccessor::~InvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeae0c (    0x4c) InvertedAccessor::~InvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeae58 (    0x1c) _ZTv0_n24_N16InvertedAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeae74 (    0x1c) _ZTv0_n24_N16InvertedAccessorD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeae90 (    0x1c) virtual thunk to InvertedAccessor::~InvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeaeac (    0x40) InvertedAccessorInitializeProgressFn(float, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeaeec (   0x410) InvertedAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb2fc (    0x1c) virtual thunk to InvertedAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb318 (    0xb4) InvertedAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb3cc (    0x1c) virtual thunk to InvertedAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb3e8 (   0x22c) InvertedAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb614 (    0x1c) virtual thunk to InvertedAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb630 (   0x1e4) InvertedAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb814 (    0x1c) virtual thunk to InvertedAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb830 (    0x1c) FreqPSHead::FreqPSHead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb84c (    0x1c) FreqPSHead::FreqPSHead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb868 (    0x94) FreqPSQueue::FreqPSQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb8fc (    0x48) FreqPSHeadCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb944 (     0x4) FreqPSQueue::FreqPSQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeb948 (    0xbc) FreqPSQueue::~FreqPSQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba04 (    0x24) FreqPSQueue::Pop(FreqPSHead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba28 (     0x4) FreqPSQueue::~FreqPSQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba2c (    0x4c) FreqPSQueue::~FreqPSQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba78 (     0x8) FreqPSQueue::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba80 (     0x8) FreqPSQueue::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeba88 (    0x54) FreqPSQueue::Put(FreqPSHead*, FreqPSHead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebadc (   0x198) FreqPSQueue::Initialize(IAQuery*, InvertedIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebc74 (    0x34) InvertedHitQueue::InvertedHitQueue(RankedAccessor*, Similarity*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebca8 (    0x34) InvertedHitQueue::InvertedHitQueue(RankedAccessor*, Similarity*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebcdc (    0x34) InvertedHitQueue::InvertedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebd10 (    0x34) InvertedHitQueue::InvertedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebd44 (     0x4) InvertedHitQueue::~InvertedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebd48 (     0x4) InvertedHitQueue::~InvertedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebd4c (    0x4c) InvertedHitQueue::~InvertedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebd98 (    0xdc) InvertedHitQueue::AddHit(InvertedIndex*, IADoc*, float, unsigned int, FreqPSHead*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebe74 (    0xfc) InvertedTopTerms(FreqPSHead*, unsigned int, unsigned int*, Similarity*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebf70 (    0x18) RQEScorePowerOrder [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebf88 (    0x38) InvertedAccessor::GetDocNorm(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdebfc0 (   0x1c0) InvertedAccessor::TrimRankedQuery(IAQuery*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec180 (    0x4c) InvertedAccessor::TrimmedQuerySize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec1cc (   0x3d8) InvertedAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec5a4 (   0x17c) InvertedAccessor::RankedSearchIndices(IAQuery*, Progress*, RankedHit**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec720 (   0x10c) InvertedAccessor::NonRankedSearchIndices(IAQuery*, Progress*, RankedHit**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec82c (    0x24) virtual thunk to InvertedAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdec850 (   0x248) InvertedAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeca98 (    0x24) virtual thunk to InvertedAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdecabc (   0x5e4) InvertedAccessor::RankedSearchIndex(unsigned int, IAQuery*, Progress*, InvertedHitQueue*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cded0a0 (   0x50c) InvertedAccessor::NonRankedSearchIndex(unsigned int, IAQuery*, Progress*, RankedHit**, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cded5ac (   0x18c) InvertedAccessor::RankedSearchBoolean(__CFString const*, RankedHit**, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cded738 (   0x16c) InvertedAccessor::RankSearchBooleanIndecies(Progress*, RankedHit**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cded8a4 (   0x148) InvertedAccessor::RankedSearchBooleanIndex(unsigned int, Progress*, InvertedHitQueue*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cded9ec (   0x26c) InvertedAccessor::PutAway(unsigned int, unsigned int, float, unsigned int, InvertedHitQueue*, unsigned int, Progress*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc58 (     0x8) InvertedAccessor::SetBooleanAndOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc60 (     0x8) InvertedAccessor::SetBooleanOrOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc68 (     0x8) InvertedAccessor::SetBooleanNotOperator(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc70 (     0x8) InvertedAccessor::SetBooleanLeftFence(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc78 (     0x8) InvertedAccessor::SetBooleanRightFence(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc80 (     0x8) InvertedAccessor::GetBooleanAndOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc88 (     0x8) InvertedAccessor::GetBooleanOrOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc90 (     0x8) InvertedAccessor::GetBooleanNotOperator() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedc98 (     0x8) InvertedAccessor::GetBooleanLeftFence() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedca0 (     0x8) InvertedAccessor::GetBooleanRightFence() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedca8 (   0x1dc) InvertedAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdede84 (    0x1c) virtual thunk to InvertedAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdedea0 (   0x25c) InvertedAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee0fc (    0x1c) virtual thunk to InvertedAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee118 (   0x1d8) InvertedAccessor::RankedSearchRequired(__CFString const*, RankedHit**, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee2f0 (   0x180) InvertedAccessor::RankedSearchRequiredIndecies(HighLevelQuery*, Progress*, RankedHit**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee470 (   0x164) InvertedAccessor::RankedSearchRequiredIndex(HighLevelQuery*, unsigned int, Progress*, InvertedHitQueue*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee5d4 (    0x38) RankedProgress::RankedProgress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee60c (    0x38) RankedProgress::RankedProgress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee644 (     0x4) RankedProgress::~RankedProgress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee648 (     0x4) RankedProgress::~RankedProgress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee64c (    0x4c) RankedProgress::~RankedProgress() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee698 (     0x8) RankedProgress::GetTerm() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6a0 (     0x8) RankedProgress::SetTerm(IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6a8 (     0x4) RankedQueryDoc::RankedQueryDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6ac (     0x4) RankedQueryDoc::RankedQueryDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6b0 (     0x8) RankedQueryDoc::RankedQueryDoc(IADoc*, TermIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6b8 (     0x8) RankedQueryDoc::RankedQueryDoc(IADoc*, TermIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee6c0 (    0x5c) RankedHit::RankedHit(IAIndex*, IADoc*, float, IATerm**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee71c (    0x5c) RankedHit::RankedHit(IAIndex*, IADoc*, float, IATerm**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee778 (    0xc0) RankedHit::~RankedHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee838 (     0x4) RankedHit::~RankedHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee83c (    0x4c) RankedHit::~RankedHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee888 (    0xec) RankedHit::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee974 (    0x40) RankedAccessor::RankedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdee9b4 (    0x84) RankedAccessor::RankedAccessor(IAIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeea38 (    0x64) RankedAccessor::Constructing(IAIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeea9c (    0x94) RankedAccessor::~RankedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb30 (     0x4) RankedAccessor::~RankedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb34 (     0x4) RankedAccessor::~RankedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb38 (     0x8) RankedAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb40 (    0x2c) RankedAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb6c (    0x2c) RankedAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeb98 (    0x14) RankedAccessor::MergeHits(RankedHit const*, RankedHit const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeebac (     0x8) DefaultRankedProgressFn(RankedProgress const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeebb4 (    0x64) RankedProgressData::RankedProgressData(bool (*)(RankedProgress const*, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeec18 (    0x64) RankedProgressData::RankedProgressData(bool (*)(RankedProgress const*, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeec7c (    0x18) RankedPhaseProgressFn(float, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeec94 (   0x114) RankedAccessor::GetDocTopic(RankedQueryDoc*, IATerm**, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeeda8 (   0x21c) RankedAccessor::GetDocTopicInternal(RankedQueryDoc*, WeightedTermQueue*, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeefc4 (    0x58) RankedAccessor::SetRankedCoordinationDegree(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef01c (    0x4c) RankedAccessor::GetRankedCoordinationDegree() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef068 (    0x9c) RHQByDoc::RHQByDoc(RankedAccessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef104 (    0xa4) RankedHitPtrCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef1a8 (     0x4) RHQByDoc::RHQByDoc(RankedAccessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef1ac (    0x70) RHQByDoc::~RHQByDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef21c (     0x4) RHQByDoc::~RHQByDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef220 (    0x4c) RHQByDoc::~RHQByDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef26c (    0x34) RHQByDoc::Get(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef2a0 (    0x5c) RHQByDoc::Put(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef2fc (    0x34) RHQByDoc::Remove(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef330 (    0x74) RankedHitQueue::RankedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef3a4 (     0x4) RankedHitQueue::RankedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef3a8 (    0xd8) RankedHitQueue::RankedHitQueue(RankedAccessor*, Similarity*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef480 (    0xc0) RankedHitPtrCompareScores [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef540 (     0x4) RankedHitQueue::RankedHitQueue(RankedAccessor*, Similarity*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef544 (    0xe0) RankedHitQueue::~RankedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef624 (    0x24) RankedHitQueue::Pop(RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef648 (     0x4) RankedHitQueue::~RankedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef64c (    0x4c) RankedHitQueue::~RankedHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef698 (    0x5c) RankedHitQueue::Put(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef6f4 (    0x34) RankedHitQueue::Get(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef728 (    0x34) RankedHitQueue::Remove(RankedHit*, RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef75c (     0x8) RankedHitQueue::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef764 (    0x30) RankedHitQueue::LowScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef794 (   0x140) RankedHitQueue::AddHit(RankedHit*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef8d4 (    0xcc) RankedHitQueue::RemoveHit(RankedHit*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdef9a0 (    0xc0) RankedHitQueue::PopLowScoreHit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefa60 (    0x98) RankedHitQueue::MoveToArray(RankedHit**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefaf8 (    0x3c) RQEntry::RQEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefb34 (    0x3c) RQEntry::RQEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefb70 (     0x4) RQEntry::~RQEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefb74 (     0x4) RQEntry::~RQEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefb78 (    0x4c) RQEntry::~RQEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefbc4 (    0x44) RQEntryCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefc08 (    0x98) IAQuery::IAQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefca0 (   0x160) IAQuery::~IAQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefe00 (     0x4) IAQuery::~IAQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefe04 (     0x4) IAQuery::~IAQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefe08 (    0x24) IAQuery::Pop(RQEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefe2c (    0x54) IAQuery::Put(RQEntry*, RQEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefe80 (    0x24) IAQuery::Get(RQEntry*, RQEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefea4 (     0x8) IAQuery::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdefeac (   0x114) IAQuery::Remove(RQEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdeffc0 (   0x278) IAQuery::Initialize(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0238 (   0x1d8) IAQuery::ComputeDocTFMaps(RankedQueryDoc*, unsigned int, TFMap**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0410 (    0xe4) IAQuery::AddTerms(TFMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf04f4 (   0x17c) IAQuery::WeightTFMap(TFMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0670 (   0x19c) IAQuery::SumWeights(TFMap**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf080c (   0x2bc) IAQuery::InitializeForNonRanked(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0ac8 (     0x4) IAQueryIterator::IAQueryIterator(IAQuery*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0acc (    0x3c) IAQueryIterator::Next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0b08 (     0x4) IAQueryIterator::~IAQueryIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0b0c (    0xa8) RankedQueryDocOrder [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0bb4 (   0x260) IAQuery::ComputeTermScaleFactors() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0e14 (    0x58) Similarity::TermScaleFactor(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0e6c (    0x94) TFMapQueue::TFMapQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0f00 (    0xa4) TFMapPtrCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0fa4 (     0x4) TFMapQueue::TFMapQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf0fa8 (    0x70) TFMapQueue::~TFMapQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1018 (     0x4) TFMapQueue::~TFMapQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf101c (    0x4c) TFMapQueue::~TFMapQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1068 (    0x24) TFMapQueue::Pop(TFMap**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf108c (    0x5c) TFMapQueue::Put(TFMap*, TFMap**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf10e8 (    0x34) TFMapQueue::Get(TFMap*, TFMap**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf111c (   0x154) IAQuery::SetWeight(IATerm*, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1270 (    0x40) IARankedQuery::IARankedQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf12b0 (    0x40) IARankedQuery::IARankedQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf12f0 (    0xa0) IARankedQuery::IARankedQuery(__CFString const*, RankedQueryDoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1390 (     0x4) IARankedQuery::IARankedQuery(__CFString const*, RankedQueryDoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1394 (    0x74) IARankedQuery::~IARankedQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1408 (     0x4) IARankedQuery::~IARankedQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf140c (    0x4c) IARankedQuery::~IARankedQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1458 (    0x88) IATextStreamQuery::IATextStreamQuery(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf14e0 (     0x4) IATextStreamQuery::IATextStreamQuery(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf14e4 (    0x74) IATextStreamQuery::~IATextStreamQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1558 (     0x4) IATextStreamQuery::~IATextStreamQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf155c (    0x4c) IATextStreamQuery::~IATextStreamQuery() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf15a8 (     0x8) IATextStreamQuery::GetQueryText() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf15b0 (    0x74) IARankedQuery::SetTextQuery(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1624 (    0x70) IAQueryIterator::IAQueryIterator(IAQuery*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1694 (     0x4) IAQueryIterator::~IAQueryIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1698 (    0x4c) IAQueryIterator::~IAQueryIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf16e4 (     0x8) IATextStreamQuery::GetNumberOfQueryDocs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf16ec (     0x8) IATextStreamQuery::GetQueryDocs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf16f4 (     0x8) IARankedQuery::GetQueryText() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf16fc (     0x8) IARankedQuery::GetNumberOfQueryDocs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1704 (     0x8) IARankedQuery::GetQueryDocs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf170c (    0x2c) Similarity::SlowScale(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1738 (    0x24) Similarity::SlowLog(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf175c (   0x1f4) Similarity::Similarity(TermIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1950 (     0x4) Similarity::Similarity(TermIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1954 (    0x80) Similarity::~Similarity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf19d4 (     0x4) Similarity::~Similarity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf19d8 (    0x4c) Similarity::~Similarity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1a24 (    0x38) Similarity::TotalDocCount(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1a5c (    0x14) Similarity::DocNorm(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1a70 (   0x158) TIAAccessor::TIAAccessor(IAStorage*, __CFString const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1bc8 (    0x20) GetDefaultAccessorName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1be8 (   0x154) TIAAccessor::Initialize(IAStorage*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1d3c (   0x264) TIAAccessor::ReadHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1fa0 (     0x4) TIAAccessor::TIAAccessor(IAStorage*, __CFString const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf1fa4 (    0xd8) TIAAccessor::~TIAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf207c (     0x4) TIAAccessor::~TIAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2080 (    0x4c) TIAAccessor::~TIAAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf20cc (    0x24) TIAAccessor::RankedProgressFn(RankedProgress const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf20f0 (    0x40) TIAAccessor::RankedProgressInternal(RankedProgress const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2130 (   0x1ac) TIAAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf22dc (   0x2d0) TIAAccessor::HitCompare(IAIndex*, IADoc*, IAIndex*, IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf25ac (   0x214) TIAAccessor::WriteHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf27c0 (   0x130) TIAAccessor::AddIndex(TIAIndex*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf28f0 (   0x348) TIAAccessor::CreateAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2c38 (    0xc0) TIAInvertedAccessor::TIAInvertedAccessor(TIAAccessor*, InvertedIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2cf8 (    0xc0) TIAVectorAccessor::TIAVectorAccessor(TIAAccessor*, VectorIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2db8 (    0xe0) TIAInVecAccessor::TIAInVecAccessor(TIAAccessor*, InVecIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2e98 (    0xd0) TIAAccessor::VerifyAccessor(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf2f68 (   0x3cc) TIAAccessor::Query(__CFString const*, unsigned int, unsigned int, void*, unsigned char (*)(void*, OpaqueIAIndexRef*, OpaqueIADocKeyRef*), unsigned char (*)(void*, OpaqueIAIndexRef*, long)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3334 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000018cdf336c (    0x5c) TIASearchResults::TIASearchResults(RankedHit**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf33c8 (   0x1c8) TIAAccessor::Query(OpaqueIATextStreamRef*, unsigned int, unsigned int, void*, unsigned char (*)(void*, OpaqueIAIndexRef*, OpaqueIADocKeyRef*), unsigned char (*)(void*, OpaqueIAIndexRef*, long)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3590 (   0x34c) TIAAccessor::FindSimilar(OpaqueIADocKeyRef**, unsigned int, unsigned int, void*, unsigned char (*)(void*, OpaqueIAIndexRef*, OpaqueIADocKeyRef*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf38dc (    0x3c) TIAAccessor::ClassToRef(TIAAccessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3918 (    0x3c) TIAAccessor::RefToClass(OpaqueIASearchSetRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3954 (     0x4) TIAAccessor::Delete(IAStorage*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3958 (    0x5c) TIASearchResults::TIASearchResults(RankedHit**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf39b4 (    0xcc) TIASearchResults::~TIASearchResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3a80 (     0x4) TIASearchResults::~TIASearchResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3a84 (    0x4c) TIASearchResults::~TIASearchResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ad0 (    0x58) TIASearchResults::GetNthRankedHit(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3b28 (    0x3c) TIASearchResults::ClassToRef(TIASearchResults*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3b64 (    0x3c) TIASearchResults::RefToClass(OpaqueIASearchResultsRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ba0 (    0x54) TIAInvertedAccessor::~TIAInvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3bf4 (    0x4c) TIAInvertedAccessor::~TIAInvertedAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3c40 (     0x8) TIAInvertedAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3c48 (    0x1c) TIAInvertedAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3c64 (    0x20) TIAInvertedAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3c84 (    0x1c) _ZTv0_n24_N19TIAInvertedAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ca0 (    0x1c) _ZTv0_n24_N19TIAInvertedAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3cbc (    0x20) virtual thunk to TIAInvertedAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3cdc (    0x1c) virtual thunk to TIAInvertedAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3cf8 (    0x20) virtual thunk to TIAInvertedAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3d18 (    0x54) TIAVectorAccessor::~TIAVectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3d6c (    0x4c) TIAVectorAccessor::~TIAVectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3db8 (     0x8) TIAVectorAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3dc0 (    0x1c) TIAVectorAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ddc (    0x20) TIAVectorAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3dfc (    0x1c) _ZTv0_n24_N17TIAVectorAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3e18 (    0x1c) _ZTv0_n24_N17TIAVectorAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3e34 (    0x20) virtual thunk to TIAVectorAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3e54 (    0x1c) virtual thunk to TIAVectorAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3e70 (    0x20) virtual thunk to TIAVectorAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3e90 (    0x54) TIAInVecAccessor::~TIAInVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ee4 (    0x4c) TIAInVecAccessor::~TIAInVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f30 (     0x8) TIAInVecAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f38 (    0x1c) TIAInVecAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f54 (    0x20) TIAInVecAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f74 (     0x8) non-virtual thunk to TIAInVecAccessor::~TIAInVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f7c (     0x8) non-virtual thunk to TIAInVecAccessor::~TIAInVecAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3f84 (    0x1c) _ZTv0_n24_N16TIAInVecAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3fa0 (    0x1c) _ZTv0_n24_N16TIAInVecAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3fbc (    0x20) virtual thunk to TIAInVecAccessor::IsHit(IAIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3fdc (    0x1c) virtual thunk to TIAInVecAccessor::HitLessThan(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf3ff8 (    0x20) virtual thunk to TIAInVecAccessor::HitEqual(IAIndex*, IADoc const*, IAIndex*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4018 (    0x74) TWVector::TWVector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf408c (     0x4) TWVector::TWVector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4090 (    0x70) TWVector::~TWVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4100 (     0x4) TWVector::~TWVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4104 (    0x4c) TWVector::~TWVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4150 (    0x8c) TWVector::Similarity(TWVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf41dc (    0x60) TWVector::Normalize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf423c (   0x1b0) TWVector::Sum(TWVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf43ec (    0x84) TWVector::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4470 (    0x5c) TWVector::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf44cc (    0xdc) TWVector::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf45a8 (    0x90) TWVector::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4638 (    0x24) TWVector::SortByTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf465c (    0x18) TWComponentByTermOrder(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4674 (    0x24) TWVector::SortByWeight() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4698 (    0x18) TWComponentByWeightOrder(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf46b0 (    0x24) TWVector::SortByAbsoluteWeight() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf46d4 (    0x20) TWComponentByAbsoluteWeightOrder(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf46f4 (    0xcc) TWVector::Truncate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf47c0 (    0xcc) TWVector::TruncateByAbsoluteValue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf488c (    0x58) TWVector::HasNegativeComponents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf48e4 (   0x22c) TWVector::AddIntoAverage(TWVector const*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4b10 (   0x224) TWVector::AddWeighted(TWVector const*, float, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4d34 (   0x180) TWVector::AddWeightedAllowNegatives(TWVector const*, float, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4eb4 (    0x98) TWVectorAdder::TWVectorAdder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4f4c (    0x20) TWCStreamCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4f6c (     0x4) TWVectorAdder::TWVectorAdder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf4f70 (    0xb0) TWVectorAdder::~TWVectorAdder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5020 (    0x24) TWVectorAdder::Pop(TWCStream*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5044 (     0x4) TWVectorAdder::~TWVectorAdder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5048 (    0x4c) TWVectorAdder::~TWVectorAdder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5094 (    0x50) TWVectorAdder::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf50e4 (     0x8) TWVectorAdder::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf50ec (    0xbc) TWVectorAdder::Add(TWVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf51a8 (    0xb0) TWVectorAdder::Requeue(TWCStream*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5258 (   0x170) TWVectorAdder::Sum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf53c8 (    0xf8) VectorAccessor::VectorAccessor(VectorIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf54c0 (    0x74) VectorAccessor::UpcastIndices(VectorIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5534 (   0x12c) VectorAccessor::MakeScaleFactorCodec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5660 (    0xd4) VectorAccessor::VectorAccessor(VectorIndex**, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5734 (   0x15c) VectorAccessor::~VectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5890 (    0x50) VectorAccessor::~VectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf58e0 (    0x1c) _ZTv0_n24_N14VectorAccessorD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf58fc (    0x1c) _ZTv0_n24_N14VectorAccessorD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5918 (    0x1c) virtual thunk to VectorAccessor::~VectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5934 (    0x4c) VectorAccessor::~VectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5980 (    0x1c) _ZTv0_n24_N14VectorAccessorD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf599c (    0x1c) _ZTv0_n24_N14VectorAccessorD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf59b8 (    0x1c) virtual thunk to VectorAccessor::~VectorAccessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf59d4 (    0x28) VectorAccessorInitializeProgressFn(float, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf59fc (    0xf8) VectorAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf5af4 (   0x548) VectorAccessor::MergeTermInfos() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf603c (    0x1c) virtual thunk to VectorAccessor::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6058 (    0xe4) VectorAccessor::CacheTermStats(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf613c (    0xa4) VectorAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf61e0 (    0x1c) virtual thunk to VectorAccessor::InitsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf61fc (   0x130) VectorAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf632c (    0x1c) virtual thunk to VectorAccessor::StoringInits(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6348 (   0x144) VectorAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf648c (    0x1c) virtual thunk to VectorAccessor::RestoringInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf64a8 (   0x32c) VectorAccessor::VectorAccessor(VectorIndex**, TermIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf67d4 (   0x304) VectorAccessor::VectorAccessor(VectorIndex**, TermIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6ad8 (   0x1d0) VectorAccessor::GetTWVector(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6ca8 (    0xec) MakeTWVector(IAQuery*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6d94 (   0x18c) VectorScorer::VectorScorer(IAQuery*, VectorAccessor*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6f20 (     0x4) VectorScorer::VectorScorer(IAQuery*, VectorAccessor*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6f24 (    0xd4) VectorScorer::Score(TFVector*, Similarity*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf6ff8 (   0x12c) VectorScorer::TopTerms(TFVector*, unsigned int*, Similarity*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7124 (    0xe0) VectorHitQueue::AddHit(VectorIndex*, IADoc*, TFVector*, float, VectorScorer*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7204 (   0x5d8) VectorAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf77dc (     0x4) VectorScorer::~VectorScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf77e0 (     0x4) VectorHitQueue::~VectorHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf77e4 (    0x24) virtual thunk to VectorAccessor::RankedSearch(__CFString const*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7808 (   0x5ec) VectorAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7df4 (    0x24) virtual thunk to VectorAccessor::RankedSearch(OpaqueIATextStreamRef*, RankedQueryDoc*, unsigned int, RankedHit**, unsigned int, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7e18 (    0x18) TermWeightOrder [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7e30 (    0xc4) VectorAccessor::GetDocTopic(RankedQueryDoc*, IATerm**, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf7ef4 (   0x1dc) VectorAccessor::GetDocTopicInternal(RankedQueryDoc*, TWVector**, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf80d0 (    0x1c) virtual thunk to VectorAccessor::GetDocTopic(RankedQueryDoc*, IATerm**, unsigned int, bool (*)(RankedProgress const*, void*), unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf80ec (   0x14c) VectorAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8238 (    0x1c) virtual thunk to VectorAccessor::UpdatingInits(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8254 (   0x254) VectorAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf84a8 (    0xe4) VectorAccessor::UpdateCacheTermStats(TermInfo**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf858c (    0x1c) virtual thunk to VectorAccessor::ExtendingInits() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf85a8 (    0x4c) VectorScorer::~VectorScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf85f4 (    0x4c) VectorHitQueue::~VectorHitQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8640 (    0x9c) VectorScorer::~VectorScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf86dc (    0x9c) WeightedTermQueue::WeightedTermQueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8778 (    0x68) WeightedTermCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf87e0 (     0x4) WeightedTermQueue::WeightedTermQueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf87e4 (    0xb0) WeightedTermQueue::~WeightedTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8894 (    0x24) WeightedTermQueue::Pop(WeightedTerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf88b8 (     0x4) WeightedTermQueue::~WeightedTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf88bc (    0x4c) WeightedTermQueue::~WeightedTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8908 (     0x8) WeightedTermQueue::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8910 (    0x5c) WeightedTermQueue::LowWeight() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf896c (    0xd8) WeightedTermQueue::Update(IATerm*, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8a44 (    0x94) WeightedTermQueue::Add(IATerm*, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8ad8 (    0x68) WeightedTermQueue::MoveToArray(IATerm**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8b40 (     0x4) IATerm::IATerm(unsigned char*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8b44 (     0x4) IATerm::~IATerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8b48 (    0xc4) IATerm::RestoreFromBuffer(unsigned char const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8c0c (    0x30) IATerm::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8c3c (    0x48) IATerm::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8c84 (    0x40) IATerm::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8cc4 (    0x40) IATerm::EqualNonVirtual(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8d04 (    0x40) IATerm::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8d44 (    0x4c) IATokenStream::IATokenStream(IAAnalysis*, OpaqueIATextStreamRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8d90 (    0x4c) IATokenStream::IATokenStream(IAAnalysis*, OpaqueIATextStreamRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8ddc (    0x7c) IATokenStream::~IATokenStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8e58 (     0x4) IATokenStream::~IATokenStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8e5c (    0x4c) IATokenStream::~IATokenStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8ea8 (    0xac) IATokenStream::GetNextToken() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf8f54 (    0xe8) IATokenStream::GetNextTokenData(unsigned char*, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf903c (     0x4) IAAnalysis::~IAAnalysis() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9040 (    0x24) IAAnalysis::GetNextTokenThreadSafe() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9064 (    0x78) IAAnalysis::MakeTokenStream(OpaqueIATextStreamRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf90dc (    0x54) CFDataDocAccessorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9130 (    0x14) CFDataDocAccessorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9144 (    0x98) CreateCFDataDocAccessorRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf91dc (    0x50) CFDataDocAccessorOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf922c (    0x24) CFDataDocAccessorClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9250 (    0x7c) CFDataDocAccessorRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf92cc (    0x64) CFDataSetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9330 (    0x24) CFDataGetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9354 (    0x10) CFDataGetDocAccessorEOF [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9364 (    0x1c) DisposeCFDataDocAccessorRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9380 (    0x98) IACFDataDocAccessorCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9418 (    0x30) IACFDataDocAccessorDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9448 (    0x20) GetDefaultTextExtractorType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9468 (    0x5c) IADefaultTextExtractorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf94c4 (    0x24) IADefaultTextExtractorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf94e8 (   0x140) IADefaultTextExtractorGetNextTextRun [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9628 (     0xc) IADefaultTextExtractorGetTextRunEncoding [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9634 (    0x44) GetDefaultTextExtractorCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9678 (    0x48) DocKeySetParent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf96c0 (    0x50) DocKeySetSchemeName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9710 (    0x50) DocKeySetName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9760 (    0x48) DocKeySetCacheData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf97a8 (     0xc) DocKeyGetCacheData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf97b4 (    0x88) DocKeyCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf983c (     0x4) SKDocumentEqual [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9840 (    0x6c) DocKeyIteratorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf98ac (    0x44) DocKeyIteratorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf98f0 (     0x8) DocKeyIteratorCopyNext [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf98f8 (    0x60) DocSchemeEntryCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9958 (    0x10) DocSchemeEntryRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9968 (    0x60) DocSchemeEntryRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf99c8 (    0x68) DocSchemeRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9a30 (    0x7c) DocSchemeRegistryInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9aac (   0x128) DocSchemeRegister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9bd4 (    0x80) DocSchemeUnregister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9c54 (    0xbc) DocSchemeRegistryResolveCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9d10 (    0x88) DocSchemeRegistryResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9d98 (    0x30) DocSchemeCFDictionaryApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9dc8 (    0x74) DocSchemeTermRegistry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9e3c (    0xc4) DocSchemeResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f00 (    0x10) DocSchemeRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f10 (     0x8) DocSchemeGetName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f18 (     0xc) DocSchemeCopyModDate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f24 (     0xc) DocSchemeCopyDocMIMEType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f30 (     0xc) DocSchemeCopyURLEncodedName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f3c (     0xc) DocSchemeCanCreateIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f48 (     0xc) DocSchemeCanCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9f54 (    0x64) DocSchemeGetIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdf9fb8 (    0xa0) DocSchemeCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa058 (    0x10) DocSchemeIteratorRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa068 (    0x68) DocSchemeIteratorRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa0d0 (     0xc) DocSchemeIteratorCopyNextDoc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa0dc (    0x10) DocSchemeAccessorRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa0ec (    0x7c) DocSchemeAccessorRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa168 (    0x34) DocSchemeAccessorGetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa19c (    0x68) DocSchemeAccessorRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa204 (     0x8) DocSchemeAccessorGetAccessorRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa20c (    0x94) DocKeyGetURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa2a0 (    0x50) IADocKeyCopyURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa2f0 (    0x64) IADocKeyCopyMIMEType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa354 (    0x64) IADocKeyCopyURLEncodedName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa3b8 (    0x64) IADocKeyCopyModDate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa41c (    0x40) InstallDefaultTextAnalysis [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa45c (    0x5c) TextAnalysisTermRegistry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa4b8 (    0x48) TextAnalysisUnregister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa500 (    0x68) TokenizerCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa568 (    0x68) TokenizerRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa5d0 (    0x10) TokenizerRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa5e0 (     0xc) TokenizerGetNextToken [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa5ec (    0x34) HFSGetItemCache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa620 (    0x68) HFSSetItemCache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa688 (    0xdc) HFSIteratorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa764 (    0x30) IADocKeyGetFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa794 (    0xc0) HFSAccessorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa854 (    0x40) HFSAccessorClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa894 (   0x10c) InstallHFSDocScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa9a0 (     0xc) HFSDocSchemeCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa9ac (     0x8) HFSDocSchemeDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfa9b4 (   0x198) HFSDocSchemeCopyDocMIMEType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfab4c (   0x2ac) HFSDocSchemeCopyURLEncodedDocName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfadf8 (   0x134) HFSDocSchemeCopyDocModDate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfaf2c (    0xe4) HFSCanCreateDocIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb010 (     0x8) HFSDocSchemeDocIteratorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb018 (    0x3c) HFSDocSchemeDocIteratorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb054 (   0x1b0) HFSDocSchemeDocIteratorCopyNext [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb204 (    0xe8) HFSCanCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb2ec (    0xac) HFSDocSchemeCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb398 (    0x48) HFSDocSchemeDisposeAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb3e0 (    0x50) HFSDocSchemeCopySupportedTypes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb430 (    0x20) IAGetHFSDocSchemeName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb450 (    0x30) GetHFSFolderMIMEType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb480 (    0x74) HFSDocAccessorOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb4f4 (    0x40) HFSDocAccessorClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb534 (   0x16c) HFSDocAccessorRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb6a0 (    0xa4) HFSSetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb744 (    0x3c) HFSGetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb780 (    0x3c) HFSGetDocAccessorEOF [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb7bc (     0xc) HFSDocAccessorCopyURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfb7c8 (   0x2cc) FSRefFromDocKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfba94 (     0x4) IADocKeyCreateFromFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfba98 (   0x1c8) DocKeyFromFSRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbc60 (    0x2c) IADocKeySetCacheData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbc8c (     0x4) IADocKeyGetCacheData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbc90 (    0x1c) IADocKeyCompare [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbcac (    0x54) IADocKeyCanCreateAccessor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd00 (    0x68) IADocKeyAccessorCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd68 (     0x4) IADocKeyAccessorRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd6c (    0x1c) IADocKeyAccessorRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd88 (     0x4) IADocKeyAccessorLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd8c (     0x4) IADocKeyAccessorRead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbd90 (    0x5c) IADocKeyCanCreateIterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbdec (    0xc0) IADocKeyIteratorCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbeac (    0x6c) NewDocKeyArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbf18 (    0x1c) DocKeyCompartor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbf34 (    0x1c) IADocKeyIteratorDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbf50 (    0x4c) IADocKeyIteratorCopyNextDoc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbf9c (     0x8) DocKeyCFArrayRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbfa4 (     0x8) DocKeyCFArrayRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbfac (     0x8) DocKeyCFArrayCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbfb4 (    0x20) DocKeyCFArrayEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfbfd4 (    0x30) IATextAnalysisRegister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc004 (    0x2c) IATextAnalysisUnregister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc030 (    0x34) IATextAnalysisGetCallbacks [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc064 (    0x54) IATokenizerCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc0b8 (     0xc) IATokenizerRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc0c4 (    0x2c) IATokenizerRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc0f0 (    0x10) IATokenizerGetNextToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc100 (    0x64) IASentenceParserCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc164 (     0xc) IASentenceParserRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc170 (    0x2c) IASentenceParserRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc19c (    0x14) IASentenceParserSetSourceText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc1b0 (     0x4) IASentenceParserCopyNextSentence [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc1b4 (    0x5c) IATextStreamCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc210 (    0x50) IATextStreamCreateFromCFData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc260 (     0xc) IATextStreamRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc26c (     0x4) IATextStreamRead [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc270 (     0x4) IATextStreamGetCurrentEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc274 (     0x4) IATextStreamRewind [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc278 (   0x154) MIMERegistryInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc3cc (    0xbc) IAMIMETypeRegister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc488 (    0xc0) IAMIMETypeResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc548 (     0x8) PlugInAllocProc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc550 (     0x4) PlugInFreeProc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc554 (    0x34) IALoadExtractorPlugIn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc588 (   0x1d0) LoadExtractorPlugIn [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc758 (   0x110) RegisterExtractor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfc868 (   0x204) IALoadDefaultExtractorPlugIns [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfca6c (    0x50) UnloadExtractorPlugIn [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcabc (    0x58) LoadPlugInExtractorCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcb14 (    0xb4) PlugInTextExtractorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcbc8 (    0x54) PlugInTextExtractorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcc1c (    0x18) PlugInTextExtractorGetNextTextRun [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcc34 (    0x80) PlugInTextExtractorGetTextRunEncoding [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfccb4 (    0x14) IASentenceParserRegister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfccc8 (    0xa4) SentenceParserRegister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcd6c (    0x20) GetDefaultSentenceParserName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcd8c (    0x4c) InstallDefaultSentenceParser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcdd8 (    0x78) SentenceParserRegistryInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfce50 (    0x5c) SentenceParserTermRegistry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfceac (    0x48) SentenceParserUnregister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcef4 (    0x7c) SentenceParserRegistryResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfcf70 (    0xbc) SentenceParserCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd02c (     0xc) SentenceParserSetSource [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd038 (    0x68) SentenceParserRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0a0 (    0x10) SentenceParserRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0b0 (     0xc) SentenceParserCopyNextSentence [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0bc (    0x30) InstallDefaultTextExtractor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0ec (     0x8) TextExtractorRegister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0f4 (     0x4) TextExtractorRegistryInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0f8 (     0x4) TextExtractorTermRegistry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd0fc (    0x28) TextExtractorUnregister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd124 (     0x8) TextExtractorResolve [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd12c (     0x8) TextExtractorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd134 (     0x8) IADocAccessorStubOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd13c (     0x8) IADocAccessorStubClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd144 (    0x10) TextExtractorRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd154 (    0x80) TextExtractorRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd1d4 (    0xdc) TextExtractorGetNextTextRun [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd2b0 (     0xc) TextExtractorGetTextRunEncoding [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd2bc (    0x6c) TextExtractorRewind [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd328 (    0x44) TextStreamCreateFromExtractor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd36c (    0xa4) TextStreamCreateFromCFData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd410 (    0x14) TextStreamRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd424 (    0x50) TextStreamRewind [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd474 (    0xe8) TextStreamRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd55c (    0x54) TextStreamGetCurrentEncoding [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd5b0 (    0xa4) GetEncodingMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd654 (    0x98) CopyPropertyList [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd6ec (    0x30) ReleaseEncodingMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd71c (    0x50) GetEncodingMapURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd76c (    0xf8) CopyCFEncodingsForISOLanguages [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd864 (     0x4) FreqPosting::FreqPosting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd868 (     0x4) FreqPosting::FreqPosting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd86c (     0x8) FreqPosting::FreqPosting(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd874 (     0x8) FreqPosting::FreqPosting(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd87c (    0xc4) FreqPostingsPaginate(FreqPosting*, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd940 (    0x94) FreqPostingsStoreBlock(IAStorage*, unsigned int, unsigned int, FreqPosting*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfd9d4 (    0x84) FreqPostingsRestoreBlock(IAStorage*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfda58 (    0xb4) FreqPostingsRestoreFromBuffer(unsigned int, unsigned char const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdb0c (    0x48) FreqPostingsSkip(unsigned int, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdb54 (    0xec) FreqPostingsRemove(FreqPosting*, unsigned int*, BitArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdc40 (    0x9c) FreqTermQueue::FreqTermQueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdcdc (    0x68) FreqTermCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdd44 (     0x4) FreqTermQueue::FreqTermQueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdd48 (    0xa4) FreqTermQueue::~FreqTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfddec (    0x24) FreqTermQueue::Pop(FreqTerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfde10 (     0x4) FreqTermQueue::~FreqTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfde14 (    0x4c) FreqTermQueue::~FreqTermQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfde60 (     0x8) FreqTermQueue::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfde68 (    0xd4) FreqTermQueue::Update(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdf3c (    0x8c) FreqTermQueue::Add(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfdfc8 (    0x50) FreqTermQueue::LowestFreq() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe018 (    0x70) FreqTermQueue::MoveToArray(FreqTerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe088 (   0x13c) GetHighFreqTerms(TermIndex*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe1c4 (   0x144) IAIndexInitializeFromFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe308 (   0x10c) IAIndexOpenFromFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe414 (   0x134) IAIndexInitializeFromFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe548 (   0x108) IAIndexOpenFromFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe650 (    0x44) IAIndexRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe694 (    0xe0) _IAIndexAddDocument(OpaqueIAIndexRef*, OpaqueIADocKeyRef*, __CFString const*, __CFDictionary const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe774 (    0xd4) IAIndexAddDoc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe848 (    0x7c) IAIndexUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe8c4 (    0x60) IAIndexRemoveDoc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe924 (    0x64) IAIndexRenameDoc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe988 (    0x64) IAIndexMoveDoc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfe9ec (    0x7c) IAIndexCopyDocProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfea68 (    0x7c) IAIndexSetDocProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfeae4 (    0x44) IAIndexGetDocState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfeb28 (    0x48) IAIndexGetDocKeyID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfeb70 (    0x44) IAIndexCopyDocKeyFromID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfebb4 (    0x88) IAIndexFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfec3c (    0x5c) IAIndexSetBytesForUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfec98 (    0x3c) IAIndexGetBytesForUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfecd4 (    0x5c) IAIndexSetFlushProgressFrequency [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfed30 (    0x3c) IAIndexGetFlushProgressFrequency [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfed6c (    0x80) IAIndexCompact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfedec (    0x3c) IAIndexGetNumDocuments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfee28 (    0x60) IAIndexGetStorage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfee88 (    0x4c) IAIndexGetTextAnalysisTypeCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfeed4 (    0x9c) IAIndexGetTextAnalysisTypes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfef70 (    0x64) IAIndexMakeRootDocKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfefd4 (    0x3c) IAIndexGetRootDocKeyCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff010 (    0x4c) IAIndexGetRootDocKeys [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff05c (    0x74) IAIndexReplaceRootDocKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff0d0 (    0x4c) IAIndexDocIteratorCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff11c (    0x78) IAIndexDocIteratorDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff194 (    0x3c) IAIndexDocIteratorCopyNext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff1d0 (    0x3c) IAIndexGetMaxDocID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff20c (    0x44) IAIndexGetDocTermCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff250 (    0x44) IAIndexCopyDocTermIDArrray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff294 (    0x4c) IAIndexGetDocTermFrequency [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff2e0 (    0x3c) IAIndexGetMaxTermID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff31c (    0x44) IAIndexGetTermDocCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff360 (    0x44) IAIndexCopyTermDocIDArrray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff3a4 (    0x44) IAIndexCopyTermData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff3e8 (    0x44) IAIndexGetTermID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff42c (    0x60) AddDocAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff48c (    0x40) AddDocAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff4cc (    0x60) AddDocWithTextStreamAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff52c (    0x40) AddDocWithTextStreamAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff56c (    0xb8) IAIndexAddDocAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff624 (    0xb8) IAIndexAddDocWithTextStreamAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff6dc (    0x5c) CompactAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff738 (     0x8) CompactAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff740 (    0x84) IAIndexCompactAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff7c4 (    0x58) RemoveDocAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff81c (     0x8) RemoveDocAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff824 (    0x8c) IAIndexRemoveDocAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff8b0 (    0x60) UpdateAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff910 (     0x8) UpdateAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff918 (    0xa0) IAIndexUpdateAsync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff9b8 (    0x34) IADocIterator::IADocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff9ec (     0x4) IADocIterator::~IADocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdff9f0 (    0x4c) IADocIterator::~IADocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffa3c (     0x8) IADocIterator::GetNextDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffa44 (    0x40) IADoc::IADoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffa84 (    0x40) IADoc::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffac4 (    0xb4) IADoc::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffb78 (    0x80) IADoc::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffbf8 (    0x40) IADoc::SetSchemeName(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffc38 (    0x40) IADoc::SetName(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffc78 (   0x154) IADoc::GetTextStream(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffdcc (    0x10) IADoc::GetDocKey(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffddc (    0x58) IADoc::SetDocKey(OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffe34 (     0x8) IAIndex::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffe3c (    0x18) IAIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffe54 (    0x9c) IAIndex::IAIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffef0 (     0x4) IAIndex::~IAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffef4 (     0x4) IAIndex::~IAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdffef8 (    0x18) IAIndexTypes::IAIndexTypes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfff10 (    0x14) IAIndex::GetIndexTypes(IAIndexTypes*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfff24 (    0x88) IAIndexTypes::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfffac (    0x3c) IAIndexTypes::Restore(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018cdfffe8 (    0x60) IAIndexTypes::Equal(IAIndexTypes*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00048 (    0x70) IAReadIndexTypes(IAStorage*, unsigned int, IAIndexTypes*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce000b8 (    0x4c) IAIndex::SetPreferredAnalysis(IAAnalysis const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00104 (    0x18) IAIndex::GetQueryAnalysis() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0011c (     0x4) IAIndex::Update() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00120 (    0x28) IAIndex::Compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00148 (    0x18) IAIndexTypes::IAIndexTypes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00160 (    0x18) IAIndexTypes::IAIndexTypes(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00178 (    0x18) IAIndexTypes::IAIndexTypes(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00190 (    0x3c) IAQueue::IAQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce001cc (    0x3c) IAQueue::IAQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00208 (    0xa4) IAQueue::~IAQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce002ac (    0x6c) IAQueue::Remove() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00318 (     0x4) IAQueue::~IAQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0031c (    0x4c) IAQueue::~IAQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00368 (    0x98) IAQueue::Add(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00400 (    0x3c) IAObjectQueue::IAObjectQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0043c (    0x3c) IAObjectQueue::IAObjectQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00478 (     0x4) IAObjectQueue::~IAObjectQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0047c (     0x4) IAObjectQueue::~IAObjectQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00480 (    0x4c) IAObjectQueue::~IAObjectQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce004cc (     0x4) IAQueue::DeleteItem(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce004d0 (    0x30) IAObjectQueue::DeleteItem(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00500 (     0x4) IAQueueNode::~IAQueueNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00504 (    0x4c) IAQueueNode::~IAQueueNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00550 (     0x8) InVecIndex::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00558 (    0x78) InVecIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce005d0 (     0x8) non-virtual thunk to InVecIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce005d8 (    0x1c) virtual thunk to InVecIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce005f4 (   0x140) InVecIndex::InVecIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00734 (   0x128) InVecIndex::InVecIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0085c (    0x40) InVecIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0089c (    0x44) non-virtual thunk to InVecIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce008e0 (    0x5c) virtual thunk to InVecIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0093c (    0x80) InVecIndex::~InVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce009bc (    0xa0) InVecIndex::~InVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00a5c (    0x8c) non-virtual thunk to InVecIndex::~InVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00ae8 (     0x8) non-virtual thunk to InVecIndex::~InVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00af0 (    0x9c) _ZTv0_n24_N10InVecIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00b8c (    0x1c) _ZTv0_n24_N10InVecIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00ba8 (     0x8) InvertedIndex::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00bb0 (    0x38) InvertedIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00be8 (    0x4c) virtual thunk to InvertedIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00c34 (    0x34) FreqPS::FreqPS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00c68 (    0x34) FreqPS::FreqPS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00c9c (     0x4) FreqPS::~FreqPS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00ca0 (     0x4) FreqPS::~FreqPS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00ca4 (    0x4c) FreqPS::~FreqPS() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00cf0 (     0x8) FreqPS::Next(FreqPosting*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00cf8 (     0x8) FreqPS::NeedsUpdating() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00d00 (     0x4) InvertedTermInfo::~InvertedTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00d04 (    0x48) InvertedTermInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00d4c (    0x40) InvertedBlockTermInfo::InvertedBlockTermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00d8c (   0x244) InvertedTermInfo::RestoreFromBuffer(unsigned char const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce00fd0 (    0xc4) InvertedTermInfo::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01094 (     0x8) InvertedTermInfo::FirstBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0109c (    0x3c) InvertedBlockTermInfo::InvertedBlockTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce010d8 (    0x3c) InvertedBlockTermInfo::InvertedBlockTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01114 (    0x40) InvertedBlockTermInfo::InvertedBlockTermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01154 (    0x80) InvertedBlockTermInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce011d4 (    0x30) InvertedBlockTermInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01204 (    0x4c) InvertedBlockTermInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01250 (    0xf4) InvertedBlockTermInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01344 (     0x8) InvertedBlockTermInfo::FirstBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0134c (    0xec) InvertedIndex::InvertedIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01438 (    0x50) InvertedIndex::~InvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01488 (    0x1c) _ZTv0_n24_N13InvertedIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce014a4 (    0x1c) _ZTv0_n24_N13InvertedIndexD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce014c0 (    0x1c) virtual thunk to InvertedIndex::~InvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce014dc (    0x4c) InvertedIndex::~InvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01528 (    0x1c) _ZTv0_n24_N13InvertedIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01544 (    0x1c) _ZTv0_n24_N13InvertedIndexD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01560 (    0x1c) virtual thunk to InvertedIndex::~InvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0157c (    0x6c) InvertedIndex::Initialize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce015e8 (    0x4c) virtual thunk to InvertedIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01634 (    0x8c) virtual thunk to InvertedIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce016c0 (    0x60) virtual thunk to InvertedIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01720 (    0x1c) virtual thunk to InvertedIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0173c (    0x70) InvertedIndex::GetDeletedDocCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce017ac (    0x54) InvertedIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01800 (    0x30) InvertedIndex::DeletingPostings(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01830 (    0x30) virtual thunk to InvertedIndex::DeletingPostings(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01860 (    0x40) CallCompactProgressFn(float, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce018a0 (   0x410) InvertedIndex::Compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01cb0 (    0xe8) InvertedIndex::TermInfoNeedsUpdating(InvertedTermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01d98 (   0x1ec) InvertedIndex::ExpungePostings(InvertedTermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce01f84 (   0x204) InvertedIndex::ExpungeTermIds(UInt32Set*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02188 (    0x1c) virtual thunk to InvertedIndex::Compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce021a4 (    0xa4) InvertedIndex::GetFreqPostings(TermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02248 (     0x4) FreqPSImpl::FreqPSImpl(InvertedTermInfo*, BitArray*, IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0224c (    0xb4) FreqPSImpl::FreqPSImpl(InvertedTermInfo*, BitArray*, IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02300 (    0x9c) FreqPSImpl::RefillBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0239c (    0xa4) FreqPSImpl::~FreqPSImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02440 (     0x4) FreqPSImpl::~FreqPSImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02444 (    0x4c) FreqPSImpl::~FreqPSImpl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02490 (    0xd0) FreqPSImpl::Next(FreqPosting*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02560 (    0x30) InvertedIndex::UpdateTermMaxDocFreq(InvertedTermInfo*, FreqPosting*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02590 (   0x200) InvertedIndex::UpdatePostingBlocks(InvertedBlockTermInfo*, FreqPosting*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02790 (    0x20) FreqPostingsRename(FreqPosting*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce027b0 (   0x1e4) InvertedIndex::MergeTermInfo(TermInfo*, TermInfo*, TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02994 (    0x1c) virtual thunk to InvertedIndex::MergeTermInfo(TermInfo*, TermInfo*, TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce029b0 (    0x34) InvertedIndex::MergeTermCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce029e4 (    0x50) virtual thunk to InvertedIndex::MergeTermCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02a34 (    0xe0) InvertedIndex::MergeDocIDs(TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02b14 (    0x1c) virtual thunk to InvertedIndex::MergeDocIDs(TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02b30 (   0x154) InvertedIndex::ValidateTermInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02c84 (    0x1c) virtual thunk to InvertedIndex::ValidateTermInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02ca0 (   0x28c) InvertedIndex::GetTermInfo(IATerm*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02f2c (    0x1c) virtual thunk to InvertedIndex::GetTermInfo(IATerm*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce02f48 (   0x208) InvertedIndex::ResetPostings(TermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03150 (    0x20) virtual thunk to InvertedIndex::ResetPostings(TermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03170 (    0x7c) InvertedIndex::ResetDeletedDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce031ec (     0x4) InvertedBlockTermInfo::~InvertedBlockTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce031f0 (    0x4c) InvertedBlockTermInfo::~InvertedBlockTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0323c (     0x8) FreqPSImpl::NeedsUpdating() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03244 (     0x8) TermIndex::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0324c (    0x20) TermIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0326c (    0x20) GetProgressKeyStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0328c (    0x20) GetDocNameKeyStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce032ac (    0x34) TermInfo::TermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce032e0 (    0x48) TermInfo::TermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03328 (     0x4) TermInfo::~TermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0332c (    0x4c) TermInfo::~TermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03378 (    0x98) TermInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03410 (    0x80) TermInfo::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03490 (    0x68) TermInfo::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce034f8 (    0x80) TermInfo::RestoreFromBuffer(unsigned char const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03578 (    0xb8) TermInfo::RestoringFromBuffer(unsigned char const**, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03630 (    0x64) TermInfo::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03694 (    0x70) TermInfo::CompareBuffer(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03704 (     0xc) TermInfo::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03710 (    0x80) TermInfo::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03790 (    0x34) DocInfo::DocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce037c4 (    0x34) DocInfo::DocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce037f8 (    0x48) DocInfo::DocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03840 (    0x48) DocInfo::DocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03888 (     0x4) DocInfo::~DocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0388c (    0x80) DocInfo::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0390c (    0x58) DocInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03964 (    0x68) DocInfo::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce039cc (    0x2c) DocInfo::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce039f8 (   0x138) TermIndex::GetTFMaps(IADoc**, unsigned int, TFMap**, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03b30 (    0x88) TermIndex::GetProtoTermInfo() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03bb8 (    0x74) TermIndex::MakeTermInfo(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03c2c (    0x18) TermIndex::UpdateTermInfo(TermInfo*, FreqPosting*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03c44 (    0x18) TermIndex::MergeTermInfo(TermInfo*, TermInfo*, TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03c5c (    0x38) TermIndex::UpdateDocInfo(DocInfo*, TFVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03c94 (     0xc) TermIndex::MergeDocInfo(DocInfo*, DocInfo*, TermIndex*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03ca0 (    0x38) IDTerm::IDTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03cd8 (    0x38) IDTerm::IDTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03d10 (    0x4c) IDTerm::IDTerm(unsigned int, IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03d5c (    0x4c) IDTerm::IDTerm(unsigned int, IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03da8 (     0x4) IDTerm::~IDTerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03dac (    0x80) IDTerm::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03e2c (    0x14) IDTerm::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03e40 (    0x38) IDDoc::IDDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03e78 (    0x38) IDDoc::IDDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03eb0 (    0x4c) IDDoc::IDDoc(unsigned int, IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03efc (    0x4c) IDDoc::IDDoc(unsigned int, IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03f48 (     0x4) IDDoc::~IDDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03f4c (    0x4c) IDDoc::~IDDoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce03f98 (    0x80) IDDoc::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04018 (    0xa8) IDDoc::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce040c0 (    0x58) IDDoc::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04118 (    0x88) IDDoc::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce041a0 (    0x5c) IDDoc::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce041fc (    0xb4) IDDoc::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce042b0 (    0x14) IDDoc::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce042c4 (    0x90) IDDocCount::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04354 (    0x88) TIDRename::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce043dc (    0x88) TIDRename::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04464 (     0x4) TermOffsets::TermOffsets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04468 (     0x4) ProximityInfo::ProximityInfo(unsigned int, unsigned int, TermOffsets*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0446c (    0x20) TermInfoKey::~TermInfoKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0448c (   0x1ec) TermIndex::GetIDTerm(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04678 (    0x78) TermIndex::GetTermInfoIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce046f0 (    0x48) TermIndex::GetMaxTermID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04738 (    0x78) TermIndex::GetTermCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce047b0 (    0xe4) TermIndex::GetTermInfoIterator(IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04894 (    0x20) DocInfoKey::~DocInfoKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce048b4 (    0x24) DocUpdateSet::Get(DocUpdate*, DocUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce048d8 (    0x5c) TermIndex::IsDocIndexed(IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04934 (   0x2ec) TermIndex::CopyInfoForDocumentIDs(long, long*, __CFString const**, long*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04c20 (    0x18) BulkDocIDInfoQSortCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04c38 (    0x50) DocIDInfoCompareKeyDataWithBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04c88 (    0x1c) DocIDInfoCompareKeyDataWithObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce04ca4 (   0x390) DocIDInfoMatchKeyDataWithBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05034 (    0x80) DocIDInfoMatchKeyDataWithObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce050b4 (    0xfc) TermIndex::CopyDocIDName(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce051b0 (   0x120) TermIndex::CopyDocIDInfo(unsigned int, __CFString const**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce052d0 (    0xf0) TermIndex::GetDocIDParentID(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce053c0 (   0x130) TermIndex::GetIDDoc(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce054f0 (    0x78) TermIndex::GetDocCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05568 (     0x8) DocUpdateSet::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05570 (    0x78) TermIndex::GetDocInfoIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce055e8 (    0x34) TIDocIterator::TIDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0561c (    0x34) TIDocIterator::TIDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05650 (    0x40) TIDocIterator::TIDocIterator(IAOrderedStorableIterator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05690 (    0x40) TIDocIterator::TIDocIterator(IAOrderedStorableIterator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce056d0 (     0x4) TIDocIterator::~TIDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce056d4 (    0x74) TermIndex::GetDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05748 (     0x4) DocUpdateSet::DocUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0574c (    0x24) DocUpdateSet::Pop(DocUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05770 (     0x4) DocUpdateSet::~DocUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05774 (     0x8) DocUpdateSet::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0577c (     0x8) DocUpdateSet::Next(DocUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05784 (    0x24) DocUpdateSet::Remove(DocUpdate*, DocUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce057a8 (    0x34) TermIndex::TermIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce057dc (    0x98) TermIndex::TermIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05874 (     0x4) TermIndex::TermIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05878 (     0x4) TermIndex::~TermIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0587c (    0x4c) TermIndex::~TermIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce058c8 (    0x98) OSSetFirst(IAOrderedStorableSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05960 (    0x84) TermIndex::FinishingUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce059e4 (     0x4) TermIndex::AddDoc(IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce059e8 (     0x4) TermIndex::AddDoc(IADoc*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce059ec (   0x444) TermIndex::RenameDoc(IADoc const*, IADoc const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05e30 (   0x1a8) TermIndex::DeleteUpdate(IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce05fd8 (    0x2c) TermIndex::DeletedDocUpdate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06004 (    0xd0) TermIndex::DeletingPostings(IATerm*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce060d4 (    0xc8) TermIndex::StoreUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0619c (   0x3bc) TermIndex::StoreUpdatesInternal(TermUpdate**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06558 (    0xfc) TermIndex::CopyTermOffsets(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06654 (    0xdc) ProximityInfo::Offsets(IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06730 (     0x4) ProximityInfo::~ProximityInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06734 (    0x24) TermIndex::FlushTermUpdatesCancelCallback(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06758 (    0x6c) TermIndex::FlushTermUpdatesCompareCallback(void*, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce067c4 (   0x20c) TermIndex::FlushTermUpdatesMergeCallback(void**, IAOrderedStorable*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce069d0 (   0x1f0) TermIndex::FlushTermUpdatesBulk(Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06bc0 (    0x1c) TermOffsets::Count() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06bdc (    0x2c) QSortProximityListItemCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06c08 (    0x24) IATermKey::~IATermKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06c2c (    0x90) TermIndex::SetNextTermToValidate(IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06cbc (     0x8) TermIndex::MergeTermCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06cc4 (     0x8) TermIndex::MergeDocCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce06ccc (   0x3c0) TermIndex::Merge(IAIndex**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0708c (   0x478) TermIndex::MergeTermInfos(IAIndex**, unsigned int*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07504 (   0x744) TermIndex::MergeDocInfos(IAIndex**, unsigned int*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07c48 (     0x4) TermIndex::MergeDocIDs(TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07c4c (    0x90) TermIndex::Validate(bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07cdc (     0x8) TermIndex::ValidateDocInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07ce4 (     0x8) TermIndex::ValidateTermInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07cec (    0xe8) TermIndex::Purge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07dd4 (    0xb0) TermIndex::GetNorm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07e84 (    0x34) TermIndex::ResetPostings(TermInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce07eb8 (   0x4e8) TermIndex::DefaultInvertDocumentToUpdateSet(OpaqueIATextAnalysisRef*, IADoc*, OpaqueIATextStreamRef*, __CFString const*, __CFDictionary const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce083a0 (   0x3c4) TermIndex::InvertDocumentToUpdateSet(IADoc*, OpaqueIATextStreamRef*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08764 (   0x35c) TermIndex::InvertDocument(IADoc*, OpaqueIATextStreamRef*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08ac0 (    0x44) CFInversionApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08b04 (    0x7c) TermIndex::AddTermForFullUpdate(IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08b80 (   0x104) TermIndex::AddDocTermInternal(unsigned int, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08c84 (   0x234) TermIndex::InvertTokensCallback(unsigned char const*, long, unsigned short const*, long, CFRange, bool, bool, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08eb8 (    0x30) TermOffsets::Add(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08ee8 (     0x4) TermIndex::MetadataInvertTokensCallback(void const*, void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08eec (    0x78) TermOffsets::TermOffsets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08f64 (    0x70) TermOffsets::~TermOffsets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08fd4 (     0x4) TermOffsets::~TermOffsets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce08fd8 (    0x4c) TermOffsets::~TermOffsets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09024 (    0x34) TermOffsets::Get(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09058 (    0x74) TermOffsets::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce090cc (    0x94) TermOffsets::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09160 (    0x90) TermOffsets::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce091f0 (    0xa8) TermOffsets::StoreOffsets(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09298 (    0x68) TermOffsets::RestoreOffsets(IAInputBlock*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09300 (    0x84) TermOffsets::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09384 (    0x80) TermOffsets::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09404 (    0x68) TermOffsets::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0946c (    0xd8) TermOffsets::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09544 (    0xa0) ProximityInfo::ProximityInfo(unsigned int, unsigned int, TermOffsets*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce095e4 (    0x38) ProximityInfo::ProximityInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0961c (    0x38) ProximityInfo::ProximityInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09654 (    0x94) ProximityInfo::~ProximityInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce096e8 (    0x4c) ProximityInfo::~ProximityInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09734 (    0x40) ProximityInfo::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09774 (    0x84) ProximityInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce097f8 (   0x130) ProximityInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09928 (    0x74) ProximityInfo::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0999c (    0x74) ProximityInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09a10 (    0xd8) ProximityInfo::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09ae8 (    0x6c) ProximityInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09b54 (     0x4) IDDocCount::~IDDocCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09b58 (     0x4) TIDRename::~TIDRename() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09b5c (    0x4c) TIDRename::~TIDRename() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09ba8 (    0x74) TIDRename::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09c1c (    0x38) TIDRename::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09c54 (    0x14) TIDRename::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09c68 (    0x14) TIDRename::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09c7c (    0x18) TIDRename::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09c94 (    0x3c) ProximityInfo::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09cd0 (    0x40) ProximityInfo::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09d10 (    0x68) TermInfoKey::~TermInfoKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09d78 (    0x68) DocInfoKey::~DocInfoKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09de0 (    0x6c) TermUpdateCFSetCopyDescriptionCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09e4c (    0x6c) IATermKey::~IATermKey() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09eb8 (    0x10) ProtoPostingCFSetReleaseCallBack(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09ec8 (    0x78) ProtoPostingCFSetCopyDescriptionCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09f40 (    0x48) ProtoPostingCFSetEqualCallBack(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce09f88 (    0x9c) ProtoPostingCFSetHashCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a024 (    0x94) TermInfoStreamQueue::TermInfoStreamQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a0b8 (    0x7c) TISHeadCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a134 (     0x4) TermInfoStreamQueue::TermInfoStreamQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a138 (    0xdc) TermInfoStreamQueue::~TermInfoStreamQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a214 (    0x24) TermInfoStreamQueue::Pop(TISHead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a238 (     0x4) TermInfoStreamQueue::~TermInfoStreamQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a23c (    0x4c) TermInfoStreamQueue::~TermInfoStreamQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a288 (     0x8) TermInfoStreamQueue::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a290 (    0x54) TermInfoStreamQueue::Put(TISHead*, TISHead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a2e4 (     0x8) TermInfoStreamQueue::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a2ec (    0xcc) TermInfoStreamQueue::AddStream(TermIndex*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a3b8 (    0xd4) TermInfoStreamQueue::Requeue(TISHead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a48c (    0x18) TFComponentOrder [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a4a4 (    0x74) TFVector::TFVector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a518 (     0x4) TFVector::TFVector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a51c (    0x70) TFVector::~TFVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a58c (     0x4) TFVector::~TFVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a590 (    0x4c) TFVector::~TFVector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a5dc (    0x90) TFVector::ComponentsSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a66c (    0xc4) TFVector::ComponentsWrite(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a730 (    0x70) TFVector::ComponentsRead(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a7a0 (    0xac) TFVector::Validate(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a84c (    0x3c) TIADocPropertyEntry::TIADocPropertyEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a888 (    0xa0) TIADocPropertyEntry::TIADocPropertyEntry(unsigned int, __CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a928 (     0x4) TIADocPropertyEntry::TIADocPropertyEntry(unsigned int, __CFString const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a92c (     0x4) TIADocPropertyEntry::~TIADocPropertyEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a930 (    0x4c) TIADocPropertyEntry::~TIADocPropertyEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a97c (    0x78) TIADocPropertyEntry::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0a9f4 (    0x3c) TIADocPropertyEntry::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0aa30 (    0xb4) TIADocPropertyEntry::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0aae4 (    0x78) TIADocPropertyEntry::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ab5c (    0x4c) TIADocPropertyEntry::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0aba8 (    0x44) TIADocPropertyEntry::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0abec (    0x4c) TIADocPropertyEntry::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ac38 (    0x54) TIADocPropertyEntry::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ac8c (    0x54) TIADocPropertyEntryNew::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ace0 (    0xf4) TIADocPropertyEntryNew::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0add4 (    0x84) TIADocPropertyEntryNew::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ae58 (    0x30) TIADocPropertyEntryNew::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ae88 (    0x7c) TIADocPropertyEntryNew::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0af04 (    0x60) TIADocPropertyEntryNew::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0af64 (    0x6c) TIADocPropertyEntryNew::Resolve(IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0afd0 (     0x4) TIADocPropertyEntryNew::~TIADocPropertyEntryNew() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0afd4 (    0x84) IAOrderedStorable::Compare(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b058 (     0x4) TIADocPropertyEntry::Resolve(IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b05c (    0xfc) TIAInvertedIndex::TIAInvertedIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b158 (     0x8) TIAInvertedIndex::~TIAInvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b160 (    0x1c) _ZTv0_n24_N16TIAInvertedIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b17c (    0x1c) _ZTv0_n24_N16TIAInvertedIndexD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b198 (    0x1c) virtual thunk to TIAInvertedIndex::~TIAInvertedIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b1b4 (    0x1c) _ZTv0_n24_N16TIAInvertedIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b1d0 (    0x1c) _ZTv0_n24_N16TIAInvertedIndexD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b1ec (    0xfc) TIAVectorIndex::TIAVectorIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b2e8 (   0x104) TIAVectorIndex::TIAVectorIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b3ec (     0x8) TIAVectorIndex::~TIAVectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b3f4 (    0x50) TIAVectorIndex::~TIAVectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b444 (    0x1c) _ZTv0_n24_N14TIAVectorIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b460 (    0x1c) _ZTv0_n24_N14TIAVectorIndexD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b47c (    0x1c) virtual thunk to TIAVectorIndex::~TIAVectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b498 (    0x4c) TIAVectorIndex::~TIAVectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b4e4 (    0x1c) _ZTv0_n24_N14TIAVectorIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b500 (    0x1c) _ZTv0_n24_N14TIAVectorIndexD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b51c (    0x1c) virtual thunk to TIAVectorIndex::~TIAVectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b538 (   0x130) TIAInVecIndex::TIAInVecIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b668 (    0x6c) InVecIndex::~InVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b6d4 (   0x124) TIAInVecIndex::TIAInVecIndex(TIAIndex*, IAStorage*, IAAnalysis*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b7f8 (    0x6c) TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b864 (    0x50) TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b8b4 (     0x8) non-virtual thunk to TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b8bc (    0x1c) _ZTv0_n24_N13TIAInVecIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b8d8 (    0x1c) _ZTv0_n24_N13TIAInVecIndexD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b8f4 (    0x1c) virtual thunk to TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b910 (    0x4c) TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b95c (     0x8) non-virtual thunk to TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b964 (    0x1c) _ZTv0_n24_N13TIAInVecIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b980 (    0x1c) _ZTv0_n24_N13TIAInVecIndexD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b99c (    0x1c) virtual thunk to TIAInVecIndex::~TIAInVecIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b9b8 (    0x28) DocKeyDictionaryCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b9e0 (     0x4) TIAIndex::TIAIndex(IAStorage*, __CFString const*, unsigned char, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b9e4 (     0x4) TIAIndex::~TIAIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b9e8 (     0xc) TIAIndex::SetBytesForUpdate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0b9f4 (     0xc) TIAIndex::GetBytesForUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ba00 (    0x10) TIAIndex::SetFlushProgressFreq(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ba10 (     0xc) TIAIndex::GetFlushProgressFreq() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ba1c (     0x4) TIAIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ba20 (   0x424) TIAIndex::Compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0be44 (    0xf4) TIAIndex::CopyDocKeyFromID(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0bf38 (    0xe0) TIAIndex::MakeRootKey(OpaqueIADocKeyRef*, unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c018 (    0x28) TIAIndex::GetNumDocuments() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c040 (   0x304) TIAIndex::RenameDoc(OpaqueIADocKeyRef*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c344 (   0x2dc) TIAIndex::MoveDoc(OpaqueIADocKeyRef*, OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c620 (    0x6c) TIAIndex::GetDocKeyID(OpaqueIADocKeyRef*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c68c (    0x80) TIAIndex::ReplaceRootKey(OpaqueIADocKeyRef*, OpaqueIADocKeyRef*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c70c (    0x20) TIAIndex::GetRootKeyCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c72c (    0xdc) TIAIndex::GetRootDocKeys(OpaqueIADocKeyRef**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c808 (     0xc) TIAIndex::ShouldFlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c814 (   0x1d8) TIAIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0c9ec (   0x16c) TIAIndex::AddDoc(OpaqueIADocKeyRef*, __CFString const*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0cb58 (   0x214) TIAIndex::AddDocAndChildren(OpaqueIADocKeyRef*, unsigned int, OpaqueIATextStreamRef*, __CFString const*, void*, unsigned int (*)(OpaqueIAIndexRef*, OpaqueIADocKeyRef*, void*, OpaqueIATextStreamRef**, __CFString const**)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0cd6c (     0x4) IADocRefQueue::~IADocRefQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0cd70 (   0x4f0) TIAIndex::Update(OpaqueIADocKeyRef*, void*, unsigned int (*)(OpaqueIAIndexRef*, OpaqueIADocKeyRef*, void*, OpaqueIATextStreamRef**, __CFString const**), unsigned char (*)(OpaqueIAIndexRef*, OpaqueIADocKeyRef*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0d260 (   0x3b0) TIAIndex::CopyAllDocProperties(OpaqueIADocKeyRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0d610 (   0x280) TIAIndex::CopyDocProperties(OpaqueIADocKeyRef*, __CFString const**, void const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0d890 (   0x394) TIAIndex::SetDocProperties(OpaqueIADocKeyRef*, __CFString const**, void const**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0dc24 (   0x130) TIAIndex::Resolve(IADoc*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0dd54 (    0x94) TIAIndex::CopyInfoForDocumentIDs(long, long*, __CFString const**, long*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0dde8 (    0x6c) TIAIndex::CopyDocNameFromID(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0de54 (    0x6c) TIAIndex::GetDocParentIDFromID(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0dec0 (   0x244) TIAIndex::ContainsContent(unsigned int, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e104 (   0x2b0) TIAIndex::MatchQueryForDocumentIDs(__CFString const*, unsigned int, long*, long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e3b4 (     0x4) TIAIndexDocIterator::TIAIndexDocIterator(TIAIndex*, IADocIterator*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e3b8 (     0x8) TIAIndex::GetMaxDocID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e3c0 (    0x6c) TIAIndex::GetDocTermCount(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e42c (     0x8) TIAIndex::GetMaxTermID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e434 (    0xe4) TIAIndex::GetTermDocCount(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e518 (    0xa4) TIAIndex::CopyTermData(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e5bc (    0xd8) TIAIndex::GetTermDataID(__CFData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e694 (   0x34c) TIAIndex::CopyDocTermIDArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0e9e0 (    0xe0) TIAIndex::GetTotalTermCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0eac0 (   0x2c8) TIAIndex::GetDocTermFrequency(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ed88 (   0x460) TIAIndex::CopyTermDocIDArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f1e8 (     0x4) TIAIndexDocIterator::~TIAIndexDocIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f1ec (    0x3c) TIAIndexDocIterator::RefToClass(OpaqueIAIndexDocIteratorRef*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f228 (    0x3c) TIAIndexDocIterator::ClassToRef(TIAIndexDocIterator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f264 (    0x34) TIAInvertedIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f298 (    0x40) TIAInvertedIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f2d8 (    0x40) TIAInvertedIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f318 (     0x4) TIAInvertedIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f31c (    0x1c) TIAInvertedIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f338 (     0x4) TIAVectorIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f33c (    0x4c) TIAVectorIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f388 (    0x58) TIAVectorIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f3e0 (    0x58) TIAVectorIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f438 (    0x1c) TIAVectorIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f454 (    0x60) virtual thunk to TIAVectorIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f4b4 (    0x6c) virtual thunk to TIAVectorIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f520 (    0x6c) virtual thunk to TIAVectorIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f58c (    0x34) virtual thunk to TIAVectorIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f5c0 (    0x20) virtual thunk to TIAVectorIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f5e0 (    0x34) TIAInVecIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f614 (    0x40) TIAInVecIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f654 (    0x40) TIAInVecIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f694 (     0x4) TIAInVecIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f698 (     0x8) TIAInVecIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f6a0 (     0x4) non-virtual thunk to TIAInVecIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f6a4 (    0x4c) virtual thunk to TIAInVecIndex::RootSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f6f0 (    0x58) virtual thunk to TIAInVecIndex::StoreRoot(IAOutputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f748 (    0x58) virtual thunk to TIAInVecIndex::RestoreRoot(IAInputBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f7a0 (    0x1c) virtual thunk to TIAInVecIndex::Initializing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f7bc (    0x24) virtual thunk to TIAInVecIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f7e0 (    0x4c) IADocRefQueue::~IADocRefQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f82c (     0x8) IADocRefQueue::DeleteItem(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f834 (     0x8) VectorIndex::IAClassID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f83c (    0x38) VectorIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f874 (    0x4c) virtual thunk to VectorIndex::IANarrowInternal(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f8c0 (    0x7c) VectorDocInfo::DeepCopy() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f93c (    0x30) VectorDocInfo::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f96c (    0x34) VectorDocInfo::StoreSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0f9a0 (    0x60) VectorDocInfo::Store(IAOutputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fa00 (    0x90) VectorDocInfo::Restore(IAInputBlock*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fa90 (    0x34) VectorDocInfo::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fac4 (    0x94) TermIdUpdateSet::TermIdUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fb58 (    0x18) TermIdUpdateCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fb70 (     0x4) TermIdUpdateSet::TermIdUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fb74 (    0x70) TermIdUpdateSet::~TermIdUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fbe4 (     0x4) TermIdUpdateSet::~TermIdUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fbe8 (    0x4c) TermIdUpdateSet::~TermIdUpdateSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fc34 (    0x24) TermIdUpdateSet::Pop(TermIdUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fc58 (    0x24) TermIdUpdateSet::Get(TermIdUpdate*, TermIdUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fc7c (    0x54) TermIdUpdateSet::Put(TermIdUpdate*, TermIdUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fcd0 (    0x4c) VectorIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fd1c (    0xac) VectorIndex::FlushTermIdUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fdc8 (    0x68) virtual thunk to VectorIndex::FlushUpdates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0fe30 (    0xf0) VectorIndex::VectorIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce0ff20 (    0xe8) VectorIndex::VectorIndex(IAStorage*, IAAnalysis*, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10008 (    0xc4) VectorIndex::~VectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce100cc (    0x50) VectorIndex::~VectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1011c (    0x1c) _ZTv0_n24_N11VectorIndexD1EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10138 (    0x1c) _ZTv0_n24_N11VectorIndexD1EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10154 (    0x1c) virtual thunk to VectorIndex::~VectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10170 (    0x4c) VectorIndex::~VectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce101bc (    0x1c) _ZTv0_n24_N11VectorIndexD0EvU11__vtptrauthILj0Lb1Lj56959E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce101d8 (    0x1c) _ZTv0_n24_N11VectorIndexD0EvU11__vtptrauthILj0Lb1Lj50651E [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce101f4 (    0x1c) virtual thunk to VectorIndex::~VectorIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10210 (   0x15c) VectorIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1036c (    0xac) VectorIndex::ReadTFVector(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10418 (    0x20) virtual thunk to VectorIndex::DeletingDoc(DocInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10438 (    0x80) VectorIndex::GetTFVector(IADoc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce104b8 (    0x7c) VectorIndex::MakeDocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10534 (     0x4) virtual thunk to VectorIndex::MakeDocInfo(IADoc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10538 (    0xb0) VectorIndex::UpdateDocInfo(DocInfo*, TFVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce105e8 (    0xb0) VectorIndex::WriteTFVector(TFVector*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10698 (    0x20) virtual thunk to VectorIndex::UpdateDocInfo(DocInfo*, TFVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce106b8 (   0x134) VectorIndex::MergeDocInfo(DocInfo*, DocInfo*, TermIndex*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce107ec (    0x8c) VectorIndex::ReadTFVector(IAStorage*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10878 (    0x20) virtual thunk to VectorIndex::MergeDocInfo(DocInfo*, DocInfo*, TermIndex*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10898 (    0x38) VectorIndex::MergeDocCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce108d0 (    0x54) virtual thunk to VectorIndex::MergeDocCost() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10924 (    0x6c) TermIDSet::AddTerms(TFVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10990 (    0xc4) IDTermMap::~IDTermMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10a54 (     0x4) IDTermMap::~IDTermMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10a58 (    0x4c) IDTermMap::~IDTermMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10aa4 (   0x14c) IDTermMap::Initialize(TermIDSet*, TermIndex*, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10bf0 (    0xc8) IDTermMap::TFVectorToTFMap(TFVector*, TFMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10cb8 (   0x264) VectorIndex::GetTFMaps(IADoc**, unsigned int, TFMap**, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10f1c (     0x4) TermIDSet::~TermIDSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10f20 (    0x20) virtual thunk to VectorIndex::GetTFMaps(IADoc**, unsigned int, TFMap**, Progress*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce10f40 (   0x1e8) VectorIndex::ValidateDocInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11128 (    0x1c) virtual thunk to VectorIndex::ValidateDocInfos(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11144 (   0x14c) VectorIndex::ExpungeTermPostings() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11290 (     0x4) VectorDocInfo::~VectorDocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11294 (    0x4c) VectorDocInfo::~VectorDocInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce112e0 (    0x4c) TermIDSet::~TermIDSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1132c (    0x18) StorageMaxChunkIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11344 (     0x8) StorageGetMutex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1134c (     0x8) StorageIsOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11354 (    0x20) StorageBlockInfoSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11374 (    0x44) StorageTOCSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce113b8 (    0x24) StorageFreedIDsSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce113dc (    0x1c) StorageAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce113f8 (    0xe0) StorageDeallocate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce114d8 (    0x1c) StorageLogSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce114f4 (    0x28) StoragePushFreeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1151c (    0x50) StorageGetNamedBlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1156c (    0x64) StorageAllocateNamedBlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce115d0 (    0x60) StorageTOC_Remove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11630 (     0x8) StorageTotalSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11638 (    0x34) StorageFreeSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1166c (    0xbc) StorageOldFreeSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11728 (    0xbc) StorageNewFreeSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce117e4 (     0x8) StorageGetMaxBlockID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce117ec (     0x8) StorageSetIsValid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce117f4 (     0xc) StorageTOCAddName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11800 (    0x5c) StorageCopyBlockNames [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1185c (   0x218) StorageCompact [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11a74 (   0x2bc) StorageCompactInternal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11d30 (    0x18) AddressRangeCompare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11d48 (     0x8) StorageGetDiskBlockSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11d50 (     0x8) StorageSetDiskBlockSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11d58 (    0x58) StorageRemoveNamedBlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11db0 (    0x2c) StorageNewAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11ddc (    0x18) StorageInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11df4 (     0x8) MakeStorageInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11dfc (    0x10) StorageInfoChunk [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11e0c (    0x10) StorageBuddyAddress [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11e1c (    0xe8) StorageCopyBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11f04 (    0x48) IAFileStoreStreamStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11f4c (     0x4) IAFileStoreStreamRestore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11f50 (    0x28) IAFileStoreStreamEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11f78 (    0x1c) IAFileStoreStreamIsOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11f94 (    0x1c) IAFileStoreStreamIsWritable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11fb0 (    0x34) IAFileStoreStreamSetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce11fe4 (    0xf8) InitFSRefStreamCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce120dc (    0xc8) IAFSRefStoreStreamNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce121a4 (    0x54) IAFSRefStoreStreamDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce121f8 (    0x94) IAFSRefStoreStreamStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1228c (   0x108) IAFSRefStoreStreamRestore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12394 (    0x20) IAFSRefStoreStreamEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce123b4 (   0x220) IAFSRefStoreStreamInitialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce125d4 (   0x1f0) IAFSRefStoreStreamOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce127c4 (    0x14) IAFSRefStoreStreamIsOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce127d8 (    0x14) IAFSRefStoreStreamIsWritable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce127ec (    0x38) IAFSRefStoreStreamFlush [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12824 (    0x5c) IAFSRefStoreStreamGetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12880 (    0x40) IAFSRefStoreStreamSetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce128c0 (    0xa0) IAFSRefStoreStreamWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12960 (    0x80) IAFSRefStoreStreamRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce129e0 (    0x50) IAFSRefStoreStreamClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a30 (     0x4) IAInputBlockReadUInt64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a34 (     0x4) IAInputBlockReadVInt64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a38 (    0x44) IAInputBlockGetPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a7c (     0x8) IAOutputBlockWriteUInt64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a84 (     0x8) IAOutputBlockWriteVInt64 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12a8c (    0x2c) IAOutputBlockWriteVIntCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12ab8 (    0x44) IAOutputBlockGetPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12afc (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000018ce12b20 (    0x20) GetFSRefStreamType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12b40 (    0x20) GetFileStreamType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12b60 (    0x20) GetMemoryStreamType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12b80 (   0x138) IAStorageOpenFromFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12cb8 (     0x8) IAStorageGetFSRef [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12cc0 (     0x8) IAStorageGetCFData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12cc8 (     0x8) IAStorageCopyFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12cd0 (    0x54) IAStorageClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12d24 (    0x80) IAStorageEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12da4 (    0x28) IAStorageCompact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12dcc (     0xc) IAStorageIsOpen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12dd8 (    0x30) IAStorageGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12e08 (    0x30) IAStorageCopyPersistentReference [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12e38 (   0x158) IAStorageOpenFromPersistentRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12f90 (    0x28) IAStorageDeallocateBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12fb8 (    0x14) IAStorageAllocateNamedBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12fcc (    0x30) IAStorageDeallocateNamedBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce12ffc (    0x34) IAStorageRemoveBlockName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13030 (     0xc) IAStorageTotalSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1303c (     0xc) IAStorageFreeSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13048 (     0xc) IAStorageGetMaxBlockID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13054 (     0xc) IAStorageCopyBlockNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13060 (    0x6c) IAStorageGetStreamCallbacks [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce130cc (    0x48) IAStorageGetStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13114 (    0x30) IAStorageGetReadAddress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13144 (    0x30) IAStorageGetWriteAddress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13174 (     0xc) IAStorageGetDiskBlockSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13180 (     0xc) IAStorageSetDiskBlockSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1318c (     0xc) IAStorageSetIsValid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13198 (    0x18) IAStorageVInt64Size [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce131b0 (    0x30) StoreSizeCFArrayApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce131e0 (    0x30) StoreSizeCFSetApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13210 (    0x10) StoreCFArrayApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13220 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000018ce13258 (    0x10) StoreCFSetApplierFunction [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13268 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000018ce132a0 (    0x18) IAFSOpenFork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce132b8 (    0x18) IAFSCloseFork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce132d0 (    0x18) IAFSReadFork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce132e8 (    0x18) IAFSWriteFork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13300 (    0x18) IAFSSetForkSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13318 (    0x18) IAFSGetForkSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13330 (    0x18) IAFSFlushFork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13348 (    0x18) IAFSGetCatalogInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13360 (    0x18) IAFSMakeFSRefUnicode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13378 (    0x18) IAFSCreateFileUnicode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13390 (    0x18) IAFSGetVolumeInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce133a8 (    0x18) IAFSOpenIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce133c0 (    0x18) IAFSCloseIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce133d8 (    0x28) IAFSGetCatalogInfoBulk [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13400 (    0x10) IAMemoryStoreStreamStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13410 (     0x4) IAMemoryStoreStreamRestore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13414 (    0x14) IAMemoryStoreStreamEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13428 (     0xc) IAMemoryStoreStreamIsOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13434 (     0xc) IAMemoryStoreStreamIsWritable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13440 (    0x30) IAMemoryStoreStreamGetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13470 (    0x60) IAMemoryStoreStreamSetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce134d0 (     0xc) StoreStreamClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce134dc (     0x8) StoreStreamIsOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce134e4 (     0xc) StoreStreamStore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce134f0 (     0x8) StoreStreamGetName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce134f8 (    0x64) StoreStreamEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1355c (     0xc) StoreStreamSetLength [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13568 (     0xc) StoreStreamWrite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13574 (    0x14) StoreStreamRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13588 (    0x30) StoreStreamWriteUInt64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce135b8 (    0x38) StoreStreamReadUInt64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce135f0 (    0xb4) StoreStreamWriteVInt64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce136a4 (    0xac) StoreStreamReadVInt64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13750 (    0x40) StoreStreamWriteVIntCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13790 (   0x160) UInt64ForString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce138f0 (    0x54) StoreStreamReadVIntCFString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13944 (    0xa0) CreateStringForUInt64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce139e4 (    0x1c) VIntCFStringStoreSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13a00 (     0x4) StoreStreamGetCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13a04 (     0x8) StoreStreamGetRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13a0c (    0x14) ReadUInt32FromBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13a20 (    0xec) ReadCFStringFromBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13b0c (    0x38) ReadVIntCFStringFromBuffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13b44 (    0x3c) StoreStreamDictionaryCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13b80 (     0xc) StoreStreamDictionaryDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13b8c (     0x4) StoreStreamDictionaryDestroy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13b90 (    0x18) StoreStreamDictionaryCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13ba8 (    0x54) StoreStreamDictionaryGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13bfc (    0x88) StoreStreamDictionaryPut [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13c84 (    0x3c) StoreStreamDictionaryRemove [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13cc0 (    0x24) VInt64Size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13ce4 (    0xb4) IATaskCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13d98 (   0x114) IATaskEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13eac (     0x8) IATaskGetContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13eb4 (    0x14) IATaskCancel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13ec8 (    0xc0) IATaskDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13f88 (    0x1c) IATaskGetProgress [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13fa4 (     0x4) IATaskYield [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce13fa8 (    0xdc) IATaskCopyProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14084 (    0xcc) IATaskSetProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14150 (    0x14) IATaskIsDone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14164 (     0xc) IATaskWasCanceled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14170 (    0x28) IAPThreadTaskEntry [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14198 (     0x4) IAPThreadTaskYield [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1419c (     0x4) IAPThreadTaskGetCurrent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce141a0 (    0x84) IAPThreadTaskCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14224 (    0x20) IAPThreadTaskDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14244 (    0x34) BitArray::ClearAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14278 (     0x4) BitArray::~BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1427c (    0x20) BitArray::Clear(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1429c (    0x5c) BitArray::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce142f8 (     0x4) Scroll::~Scroll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce142fc (     0x4) BTree::BTree(IAOrderedStorable*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14300 (    0x18) BTree::SetSizes(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14318 (     0x4) BTree::~BTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1431c (    0x50) BTree::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1436c (   0x254) BTree::Dump() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce145c0 (     0x8) BTree::GetMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce145c8 (   0x4e4) BTree::PutValuesSorted(int, void**, int (*)(void*, unsigned char const*), IAOrderedStorable* (*)(void**, IAOrderedStorable*, void*), bool (*)(void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14aac (    0xd0) PtrList::Append(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14b7c (   0x204) BTree::PutValuesProcessLevel(LevelInfoList**, unsigned int, void**, int (*)(void*, unsigned char const*), IAOrderedStorable* (*)(void**, IAOrderedStorable*, void*), bool (*)(void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14d80 (    0xd0) BTree::WritePage(unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce14e50 (   0x2ec) BTree::SplitPageEntries(LevelInfoEntry*, IAMemoryOutputBlock*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1513c (    0x44) LevelInfoEntryAddressSortCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce15180 (   0x320) BTree::PutValuesProcessLevelEntryNonLeaf(LevelInfoList**, unsigned int, LevelInfoEntry*, void**, unsigned char*, int (*)(void*, unsigned char const*), IAOrderedStorable* (*)(void**, IAOrderedStorable*, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce154a0 (   0x41c) BTree::PutValuesProcessLevelEntryLeaf(LevelInfoList**, unsigned int, LevelInfoEntry*, void**, unsigned char*, int (*)(void*, unsigned char const*), IAOrderedStorable* (*)(void**, IAOrderedStorable*, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce158bc (   0x4cc) BTree::PutValuesUpdateNonLeafLevel(LevelInfoList**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce15d88 (    0xa4) LevelInfoEntry::Append(BulkUpdateEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce15e2c (    0x94) BTree::ObjectsForKeys(int, IAOrderedStorable**, IAOrderedStorable**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce15ec0 (    0x9c) BTree::ObjectsForSortedKeys(int, ObjectsForSortedKeysContext*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce15f5c (    0xd0) PageReadInfoAppend(PageReadInfo*, unsigned int*, Page*, unsigned int, CFRange, IAStorage*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1602c (   0x1b8) BTree::ProcessPageReadInfos(PageReadInfo*, unsigned int, int, ObjectsForSortedKeysContext*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce161e4 (    0x40) PageReadInfoCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16224 (   0x6ac) BTree::ProcessPageReadInfo(PageReadInfo*, int, ObjectsForSortedKeysContext*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce168d0 (    0x98) BTree::ResolveCachedPage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16968 (    0x90) BTree::InsertObject(Page*, void**, IAOrderedStorable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce169f8 (    0xfc) BTree::ReplaceWithPrevObj(Page*, PageEntry*, Page*, Page*, PageEntry*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16af4 (    0x14) BTree::RemovePage(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16b08 (     0x8) BTree::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16b10 (    0x10) BTree::TotalSize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16b20 (   0x104) BTree::ShrinkTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16c24 (    0xc4) BTree::MergeTwo(Page*, PageEntry*, Page*, Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16ce8 (    0xb0) BTree::Destroy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16d98 (    0x84) BTree::DestroyNonLeaf(Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16e1c (    0x74) BTree::DestroySubPage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16e90 (    0x6c) BTreeIterator::BTreeIterator(BTree*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16efc (     0x4) BTreeIterator::BTreeIterator(BTree*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16f00 (     0x4) BTreeIterator::BTreeIterator(BTree*, IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16f04 (    0x84) BTreeIterator::GetLockedPage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce16f88 (    0x94) BTreeIterator::UnlockPage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1701c (     0x4) BTreeIterator::~BTreeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17020 (    0xbc) BTreeIterator::PushForward(Page*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce170dc (    0xc8) BTreeIterator::Increment() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce171a4 (    0x7c) BTree::MakeIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17220 (    0xbc) BTree::PositionEstimate(IAOrderedStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce172dc (    0x84) LevelInfoList::LevelInfoListDisposeItem(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17360 (     0x4) LevelInfoList::~LevelInfoList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17364 (    0x4c) LevelInfoList::~LevelInfoList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce173b0 (     0x4) PtrList::~PtrList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce173b4 (    0x4c) PtrList::~PtrList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17400 (    0x6c) PtrList::~PtrList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1746c (    0x6c) PtrList::Clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce174d8 (    0x84) BulkUpdateList::BulkUpdateListDisposeItem(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1755c (     0x4) BulkUpdateList::~BulkUpdateList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17560 (    0x4c) BulkUpdateList::~BulkUpdateList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce175ac (    0x34) BulkUpdateList::BulkUpdateEntrySortCompare(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce175e0 (     0x4) IteratorFrame::~IteratorFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce175e4 (    0x58) PageCacheEntry::PageCacheEntry(Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1763c (    0x58) PageCacheEntry::PageCacheEntry(Page*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17694 (    0x48) PageCacheEntry::PageCacheEntry(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce176dc (    0x48) PageCacheEntry::PageCacheEntry(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17724 (     0x4) PageCacheEntry::~PageCacheEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17728 (    0x24) Page::Pop(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1774c (     0x4) Page::~Page() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17750 (   0x138) Page::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17888 (     0x8) Page::FingeredEntry(void**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17890 (     0x8) Page::IsLeaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17898 (   0x130) Leaf::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce179c8 (    0x88) Page::AppendEntry(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17a50 (    0x88) Page::RemoveEntry(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17ad8 (    0x88) Page::PushEntry(PageEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17b60 (     0x4) PageCache::~PageCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17b64 (     0x8) PageCache::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17b6c (    0x24) PageCache::Pop(PageCacheEntry**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17b90 (     0x8) PageCache::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17b98 (     0x8) PageCache::Next(PageCacheEntry**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17ba0 (    0xac) PageCache::Resolve(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17c4c (    0x30) PageCache::RemoveEntry(PageCacheEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17c7c (    0x24) PageCache::AddMruEntry(PageCacheEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17ca0 (   0x128) PageCache::Unlock(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17dc8 (    0x54) PageCache::Delete(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17e1c (   0x118) PageCache::Remove(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f34 (     0x4) Leaf::~Leaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f38 (    0x30) IAThrowException(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f68 (    0x20) IAStruct::IAStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f88 (     0x4) IAStruct::~IAStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f8c (     0x4) IAStruct::~IAStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17f90 (    0x20) IAObject::IAObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17fb0 (     0x4) IAObject::~IAObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17fb4 (     0x4) IAObject::~IAObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17fb8 (    0x34) IAObject::CopyDescription() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce17fec (    0x50) IADeleteOnUnwind::~IADeleteOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1803c (     0x8) IADeleteArrayOnUnwind::IADeleteArrayOnUnwind(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18044 (    0x2c) IADeleteArrayOnUnwind::~IADeleteArrayOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18070 (     0xc) IADeletePointerArrayOnUnwind::IADeletePointerArrayOnUnwind(IAObject**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1807c (     0xc) IADeletePointerArrayOnUnwind::IADeletePointerArrayOnUnwind(IAObject**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18088 (    0x84) IADeletePointerArrayOnUnwind::~IADeletePointerArrayOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1810c (     0x4) IADeletePointerArrayOnUnwind::~IADeletePointerArrayOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18110 (     0x4) IAMallocSized [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18114 (     0x4) IAMutex::~IAMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18118 (     0x4) IAMutex::~IAMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1811c (     0x4) IAMutex::~IAMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18120 (    0x50) IALock::IALock(IAMutex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18170 (    0x4c) IALock::~IALock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce181bc (     0x4) IADefaultMutex::~IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce181c0 (     0x8) non-virtual thunk to IADefaultMutex::~IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce181c8 (     0x8) non-virtual thunk to IADefaultMutex::~IADefaultMutex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce181d0 (    0x3c) IAObjRefCount::IAObjRefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1820c (     0x4) IAObjRefCount::~IAObjRefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18210 (    0x4c) IAObjRefCount::~IAObjRefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1825c (    0x28) IARefCount::IARefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18284 (     0x4) IARefCount::~IARefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18288 (     0x4) IARefCount::~IARefCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1828c (     0x8) IAReleaseOnUnwind::IAReleaseOnUnwind(IARefCount*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18294 (    0x60) IAReleaseOnUnwind::~IAReleaseOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce182f4 (     0x8) IAObjReleaseOnUnwind::IAObjReleaseOnUnwind(IAObjRefCount*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce182fc (     0x8) IAObjReleaseOnUnwind::IAObjReleaseOnUnwind(IAObjRefCount*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18304 (    0x64) IAObjReleaseOnUnwind::~IAObjReleaseOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18368 (    0x64) IAObjReleaseOnUnwind::~IAObjReleaseOnUnwind() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce183cc (    0x34) IAStorable::IAStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18400 (     0x4) IAStorable::~IAStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18404 (     0x4) IAStorable::~IAStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18408 (     0x4) IAStorable::~IAStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1840c (    0x34) IAOrderedStorableIterator::IAOrderedStorableIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18440 (     0x4) IAOrderedStorableIterator::~IAOrderedStorableIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18444 (    0x4c) IAOrderedStorableIterator::~IAOrderedStorableIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18490 (     0x8) IAOrderedStorableIterator::Next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18498 (     0x4) IAOrderedStorableSet::~IAOrderedStorableSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1849c (     0x4) IAOrderedStorableSet::~IAOrderedStorableSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce184a0 (     0x8) IAOrderedStorable::LessThan(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce184a8 (     0x8) IAOrderedStorable::Equal(IAOrderedStorable const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce184b0 (    0x30) IAStorable::RestoreFromBuffer(unsigned char const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce184e0 (    0x30) IAStorable::Skip(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18510 (    0x30) IAStorable::CompareBuffer(unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18540 (     0x4) IAStorable::DeepCopying(IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18544 (     0x4) IAStorable::Restoring(IAInputBlock*, IAStorable const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18548 (     0x4) IAOrderedStorable::~IAOrderedStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1854c (     0x4) IAOrderedStorable::~IAOrderedStorable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18550 (     0x4) IAOrderedStorableSet::ReportStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18554 (     0x4) IAStorage::~IAStorage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18558 (    0x24) IAStorage::IsOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1857c (    0x28) IAStorage::Equal(IAStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce185a4 (    0x4c) IAStorage::Deallocate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce185f0 (    0x24) IAStorage::TOC_Remove(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18614 (     0x8) IAStorage::TotalSpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1861c (     0x8) IAStorage::FreeSpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18624 (    0x4c) IAStorage::Compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18670 (     0x8) IAStorage::SetValid(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18678 (     0x8) IAStorage::GetBlockSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18680 (    0x30) IAStorage::GetBlockAddress(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce186b0 (    0x58) IAStorage::GetNamedBlock(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18708 (    0x54) IAStorage::RemoveNamedBlock(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1875c (     0x8) IAStorage::GetName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18764 (    0x74) IAStorage::GetPersistentReference(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce187d8 (    0x4c) IAOutputBlock::~IAOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18824 (    0x4c) IAOutputBlock::WriteUInt64(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18870 (    0x4c) IAOutputBlock::WriteVInt64(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce188bc (    0x4c) IAOutputBlock::WriteVIntCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18908 (    0x4c) IAOutputBlock::GetPosition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18954 (    0x38) IAInputBlock::~IAInputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1898c (    0x4c) IAInputBlock::ReadUInt64() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce189d8 (    0x4c) IAInputBlock::ReadVInt64() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18a24 (    0x4c) IAInputBlock::ReadVIntCFString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18a70 (    0x8c) IAMemoryOutputBlock::IAMemoryOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18afc (     0x4) IAMemoryOutputBlock::IAMemoryOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18b00 (    0x58) IAMemoryOutputBlock::Grow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18b58 (    0x5c) IAMemoryOutputBlock::~IAMemoryOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18bb4 (     0x4) IAMemoryOutputBlock::~IAMemoryOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18bb8 (    0x4c) IAMemoryOutputBlock::~IAMemoryOutputBlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18c04 (    0x50) IAMemoryOutputBlock::WriteByte(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18c54 (    0x58) IAMemoryOutputBlock::WriteUInt32(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18cac (    0x74) IAMemoryOutputBlock::WriteBuffer(void const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18d20 (    0x88) IAMemoryOutputBlock::WriteVInt32(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18da8 (    0x18) IAMemoryOutputBlock::WriteUInt64(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18dc0 (    0x18) IAMemoryOutputBlock::WriteVInt64(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18dd8 (    0x18) IAMemoryOutputBlock::WriteVIntCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18df0 (    0x18) IAMemoryOutputBlock::WriteCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18e08 (    0x18) IAMemoryOutputBlock::WriteCFType(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18e20 (     0x8) IAMemoryOutputBlock::GetPosition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18e28 (     0x8) IAMemoryOutputBlock::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18e30 (    0xc4) IASummaryCreateWithQuery [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce18ef4 (   0x36c) DoSummary [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19260 (    0x18) IASummaryCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19278 (    0x24) IASummaryDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1929c (    0x5c) SummaryDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce192f8 (    0x5c) IASummaryCopySentenceArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19354 (    0xcc) IASummaryCopyRankedSentenceArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19420 (    0xb8) IASummaryGetNthSentence [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce194d8 (    0xcc) IASummaryGetNthRankedSentence [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce195a4 (    0x24) IASummaryGetSentenceCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce195c8 (     0xc) IASummaryGetHitCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce195d4 (     0x4) IASummmaryCopyText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce195d8 (   0x24c) IASummaryCopyText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19824 (    0x58) SummaryOrderedSentenceComparator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1987c (   0x138) IASummarizeAsync [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce199b4 (    0x68) SummarizeAsyncStart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19a1c (    0x88) SummarizeAsyncDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19aa4 (    0xf4) IASummaryCopyParagraphs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19b98 (   0x1d8) IASummaryGetParagraphSummaryInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19d70 (   0x164) IASummaryCopyParagraphAtIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19ed4 (    0x4c) IASummaryTaskGetSummary [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19f20 (    0xc4) SummaryCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce19fe4 (   0x3b4) SummaryBuildSentenceInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a398 (     0xc) IASummaryGetParagraphCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a3a4 (    0x18) QSortParagraphRelevanceCompare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a3bc (    0x18) QSortParagraphIndexCompare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a3d4 (     0x8) ListGetRefCon [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a3dc (     0x8) ListCount [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a3e4 (    0x24) ListNodeGet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a408 (    0x18) ListFirstNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a420 (    0x20) ListLastNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a440 (    0x2c) ListNextNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a46c (    0x24) ListPrevNode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a490 (    0x3c) ListNodeGetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a4cc (    0x40) IASkipListNodeGetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a50c (    0x2c) Phase::~Phase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a538 (    0x20) Progress::Progress(unsigned long, bool (*)(float, void*), void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a558 (    0x3c) Progress::PercentComplete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a594 (    0x48) CopyFunc(char*, char*, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1a5dc (   0x458) IASort(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1aa34 (    0x94) TFMap::TFMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1aac8 (    0x44) TFEntryCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ab0c (     0x4) TFMap::TFMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ab10 (    0xb4) TFMap::~TFMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1abc4 (     0x8) TFEntry::TFEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1abcc (     0x4) TFMap::~TFMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1abd0 (    0x4c) TFMap::~TFMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ac1c (    0x24) TFMap::Pop(TFEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ac40 (    0x38) TFMap::Put(TFEntry*, TFEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ac78 (     0x8) TFMap::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ac80 (    0xb4) TFMap::AddTerm(OpaqueIASkipListRef*, IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ad34 (    0xa8) TFMap::AddPrefixTerm(OpaqueIASkipListRef*, IATerm*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1addc (   0x3e4) TFMap::AddDocText(IAIndex*, OpaqueIATextStreamRef*, Progress*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b1c0 (     0x8) TFEntry::TFEntry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b1c8 (     0x8) TFMap::First() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b1d0 (     0x8) TFMap::Next(TFEntry*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b1d8 (    0x18) UInt32Compare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b1f0 (    0x4c) UInt32Set::~UInt32Set() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b23c (    0x38) UInt32Set::Member(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b274 (    0x38) UInt32Set::Remove(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b2ac (    0xa8) UInt32VoidMap::UInt32VoidMap(unsigned char, short (*)(void const*, void const*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b354 (    0x18) UInt32VoidPairCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b36c (     0x4) UInt32VoidMap::UInt32VoidMap(unsigned char, short (*)(void const*, void const*, void*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b370 (    0x70) UInt32VoidMap::~UInt32VoidMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b3e0 (     0x4) UInt32VoidMap::~UInt32VoidMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b3e4 (    0x4c) UInt32VoidMap::~UInt32VoidMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b430 (    0x54) UInt32VoidMap::Put(unsigned int, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b484 (    0x38) UInt32VoidMap::Get(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b4bc (    0x38) UInt32VoidMap::Remove(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b4f4 (    0x24) UInt32VoidMap::Pop(UInt32VoidPair*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b518 (     0x8) UInt32VoidMap::Count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b520 (     0x4) NewIASearchIsHitFilterUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b524 (     0x4) DisposeIASearchIsHitFilterUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b528 (     0x4) InvokeIASearchIsHitFilterUPP [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b52c (    0xa0) RefCountMutexLock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b5cc (    0x20) RefCountMutexUnlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b5ec (     0xc) IAGetFileDocSchemeName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b5f8 (    0x80) BuildPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b678 (    0xdc) IADocKeyCreateFromFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b754 (    0x44) IADocKeyCopyFilePath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b798 (    0xec) InstallFileDocScheme [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b884 (     0xc) FileDocSchemeCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b890 (     0x8) FileDocSchemeDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b898 (    0xb0) FileDocSchemeCopyDocMIMEType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b948 (     0x8) FileDocSchemeCopyURLEncodedDocName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b950 (     0x8) FileCanCreateDocIterator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b958 (     0x8) FileDocSchemeDocIteratorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b960 (    0x48) FileDocSchemeDocIteratorDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1b9a8 (    0x6c) FileDocSchemeDocIteratorCopyNext [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ba14 (     0x8) FileCanCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ba1c (    0xac) FileDocSchemeCreateAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bac8 (    0x48) FileDocSchemeDisposeAccessor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bb10 (    0x50) FileCopySupportedDocumentTypes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bb60 (   0x1d0) FileIteratorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bd30 (    0x64) FileAccessorCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bd94 (    0x38) FileAccessorClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bdcc (    0xac) FileDocAccessorOpen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1be78 (    0x38) FileDocAccessorClose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1beb0 (    0x64) FileDocAccessorRead [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bf14 (    0x64) FileSetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bf78 (    0x5c) FileGetDocAccessorReadPosition [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1bfd4 (    0x9c) FileGetDocAccessorEOF [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c070 (    0x3c) FileDocAccessorCopyURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c0ac (    0x20) GetFileFolderMIMEType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c0cc (   0x64c) StemUnicode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c718 (   0x1fc) StemEnglishWord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c914 (    0x64) ContainsVowel [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c978 (     0x4) AddAnE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c97c (    0x20) RemoveAnE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1c99c (    0x98) EndsWithCVC [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ca34 (   0x188) ReplaceEnd [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cbbc (    0x80) BuildURLPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cc3c (    0x58) SKDocumentGetParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cc94 (   0x110) SKDocumentCopyURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cda4 (    0x58) SKDocumentGetSchemeName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cdfc (    0x70) SKDocumentCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ce6c (    0x30) NewIndexArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ce9c (     0xc) SKIndexGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cea8 (    0x30) SKCurrentLocaleData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ced8 (    0x10) SKIndexOpenWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cee8 (     0x8) SKIndexOpenWithDataAndLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cef0 (    0x10) SKIndexOpenWithMutableData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cf00 (     0x8) SKIndexOpenWithMutableDataAndLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cf08 (    0x40) SKIndexShouldFlushCache [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cf48 (    0x9c) SKIndexFlushCache [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1cfe4 (    0x34) SKIndexGetUpdateTime [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d018 (    0x2c) SKIndexSetMaximumBytesBeforeFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d044 (    0x34) SKIndexGetMaximumBytesBeforeFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d078 (    0x84) SKIndexCompact [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d0fc (     0x8) SKIndexGetIndexType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d104 (    0x90) SKIndexGetAnalysisProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d194 (    0x34) SKIndexGetDocumentCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d1c8 (    0x24) _SKAddDocument [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d1ec (    0xd0) SKIndexAddDocument [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d2bc (    0x60) SKIndexRemoveDocument [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d31c (    0x78) SKIndexCopyDocumentProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d394 (   0x108) SKIndexSetDocumentProperties [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d49c (    0x7c) SKIndexGetDocumentState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d518 (    0x5c) SKIndexGetDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d574 (     0x8) SKIndexCopyDocumentForDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d57c (    0x68) SKIndexRenameDocument [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d5e4 (    0x68) SKIndexMoveDocument [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d64c (    0x44) SKIndexGetVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d690 (    0xb4) SKIndexCreateTermIterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d744 (    0x78) InitSKIndexDocumentIterator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d7bc (    0xd4) SKIndexTermIteratorCopyNext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d890 (     0xc) SKIndexDocumentIteratorGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d89c (    0x7c) SKIndexDocumentIteratorCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d918 (     0x8) SKIndexDocumentIteratorCopyNext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d920 (    0x34) SKIndexGetMaximumDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d954 (    0x34) SKIndexGetDocumentTermCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d988 (    0x1c) SKIndexCopyTermIDArrayForDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d9a4 (    0x34) SKIndexGetDocumentTermFrequency [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1d9d8 (    0x34) SKIndexGetMaximumTermID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1da0c (    0x34) SKIndexGetTermDocumentCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1da40 (    0x1c) SKIndexCopyDocumentIDArrayForTermID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1da5c (    0x64) SKIndexCopyTermStringForTermID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dac0 (    0x78) SKIndexGetTermIDForTermString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1db38 (    0x58) SKIndexCopyDocumentNameForDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1db90 (    0x5c) SKIndexGetParentDocumentIDForDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dbec (    0x5c) SKIndexContainsContentForDocumentID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dc48 (    0xe8) SKIndexMatchQueryForDocumentIDs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dd30 (    0x38) _SKSearchSynchCallBack(__SKIndex*, SKDocIDScorePosting*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dd68 (     0xc) SKSearchGroupGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dd74 (   0x180) SKSearchGroupCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1def4 (    0xdc) SKSearchGroupCopyIndexes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dfd0 (     0xc) SKSearchGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1dfdc (   0x2f8) _SKSearchCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e2d4 (    0x90) _SKSearchEntry(OpaqueIATaskRef*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e364 (     0xc) SKSearchCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e370 (    0x14) SKSearchCancel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e384 (   0x220) SKSearchFindMatches [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e5a4 (    0x54) SKSearchGetQueryNode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e5f8 (    0x80) SKIndexCopyInfoForDocumentIDs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e678 (    0x58) SKIndexCopyDocumentRefsForDocumentIDs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e6d0 (    0x84) SKIndexCopyDocumentURLsForDocumentIDs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e754 (     0xc) SKSearchResultsGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e760 (   0x154) SKSearchResultsCreateWithQuery [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1e8b4 (   0x184) SKSearchResultsCreateWithDocuments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ea38 (    0x60) MyOldCallBack(void*, OpaqueIAIndexRef*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ea98 (    0xa8) CreateSKSearchResults(OpaqueIASearchResultsRef*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1eb40 (    0x20) SKSearchResultsGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1eb60 (    0x68) SKSearchResultsGetInfoInRange [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ebc8 (     0x8) SKSearchResultsCopyMatchingTerms [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ebd0 (    0x34) SKLoadDefaultExtractorPlugIns [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ec04 (    0xc0) SKIndexTokenizeString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ecc4 (    0x2c) _getTokens(unsigned char const*, long, unsigned short const*, long, CFRange, bool, bool, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ecf0 (    0xac) SKIndexEnumerateTokens [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ed9c (    0xac) _enumerateTokens(unsigned char const*, long, unsigned short const*, long, CFRange, bool, bool, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1ee48 (   0x2cc) SKIndexCopyUniqueTerms [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f114 (    0x10) GetTermsCFSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f124 (     0x8) TermStringCFComparatorFunction(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f12c (    0xa4) GetInversionTermsCFSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f1d0 (    0xb4) SKDocumentCopyText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f284 (    0x3c) SKSetDefault [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f2c0 (    0x50) SKIndexDocumentIteratorDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f310 (    0x10) SKSearchGroupDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f320 (    0x78) SKSearchDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f398 (    0x80) SKSearchContextDispose(SKSearchContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f418 (    0x74) _SKSearchFindMatchesCallBack(__SKIndex*, SKDocIDScorePosting*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f48c (    0x10) SKSearchResultsDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f49c (    0x6c) ConditionCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f508 (    0x4c) ConditionDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f554 (    0x88) ConditionWait [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f5dc (    0x68) ConditionSignal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce1f644 (   0x9cc) SKlex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20010 (    0x50) (null) [FUNC, FunctionStarts] 
                0x000000018ce20060 (    0xc4) SKensure_buffer_stack [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20124 (    0x84) SK_create_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce201a8 (    0xe4) yy_get_previous_state [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2028c (    0xb4) SKrestart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20340 (    0xa0) SK_init_buffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce203e0 (    0xd4) SK_switch_to_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce204b4 (     0x4) SKalloc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce204b8 (    0x7c) SK_delete_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20534 (     0x4) SKfree [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20538 (    0xa4) SK_flush_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce205dc (    0xc0) SKpush_buffer_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2069c (    0xa8) SKpop_buffer_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20744 (    0x94) SK_scan_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce207d8 (    0x3c) SK_scan_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20814 (    0x98) SK_scan_bytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208ac (     0xc) SKget_lineno [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208b8 (     0xc) SKget_in [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208c4 (     0xc) SKget_out [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208d0 (    0x10) SKget_leng [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208e0 (    0x10) SKget_text [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208f0 (     0xc) SKset_lineno [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce208fc (     0xc) SKset_in [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20908 (     0xc) SKset_out [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20914 (     0xc) SKget_debug [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20920 (     0xc) SKset_debug [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2092c (    0xa4) SKlex_destroy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce209d0 (     0x4) SKrealloc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce209d4 (    0x44) SKQueryScannerReset [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20a18 (   0x504) SKparse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce20f1c (    0x64) (null) [FUNC, FunctionStarts] 
                0x000000018ce20f80 (   0x17c) SKQueryNodeCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce210fc (    0xc4) SKQueryNodeGetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce211c0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000018ce211e0 (   0x21c) SKQueryCopyDescription [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce213fc (    0x24) (null) [FUNC, FunctionStarts] 
                0x000000018ce21420 (    0x74) SKQueryNodeCopy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21494 (    0x8c) SKQueryNodeDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21520 (    0x3c) SKQueryGrammarNodeCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2155c (   0x1f0) SKQueryParse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2174c (     0x4) ReleaseApplierFunction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21750 (    0x48) NodeDisposeApplierFunction [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21798 (    0x74) SKQueryScannerReadChars [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2180c (    0x18) SKQueryScannerAutoRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21824 (     0x4) SKQueryScannerFatalError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21828 (     0x4) SKerror [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2182c (     0x8) SKwrap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21834 (    0x44) SKDocIDScorePostingCFSetCopyDescriptionCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21878 (    0x14) SKDocIDScorePostingCFSetEqualCallBack(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2188c (     0xc) SKDocIDScorePostingCFSetHashCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce21898 (     0x4) SKDocIDScorePostingCFSetReleaseCallBack(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2189c (    0x30) QueryTermInfoReleaseCallBack(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce218cc (     0x8) SKQueryNodeReleaseCallBack(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce218d4 (     0x4) SKQueryNodeCopyDescriptionCallBack(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce218d8 (  0x1e88) SKIndexSearch [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23760 (    0x7c) InvertedIndexFromSKIndexRef(__SKIndex*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce237dc (   0x474) SKQueryUpdateForIndex(SKQueryNode*, OpaqueIAIndexRef*, __CFDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23c50 (    0x2c) QueryTermInfoCompareTerms(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23c7c (     0x8) SKIndexSearchCompareKeyDataWithBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23c84 (     0xc) SKIndexSearchCompareKeyDataWithObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23c90 (    0x64) QueryTermInfoCompareTermIDs(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce23cf4 (   0x614) QueryTermInfo::LoadPostings(__CFAllocator const*, InvertedIndex*, unsigned int, TIAIndex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24308 (    0x54) SKDocIDScorePostingSet::Add(SKDocIDScorePosting*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2435c (   0x1c8) QueryTermInfo::UpdatePostingsRanked(__CFAllocator const*, TIAIndex*, TermUpdate*, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24524 (    0xb4) QueryTermInfo::UpdatePostings(__CFAllocator const*, TIAIndex*, TermUpdate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce245d8 (   0x170) TermUpdateQueryInfoApplier(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24748 (   0x72c) SKQueryEvaluate(SKQueryNode*, SKEvaluateInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24e74 (    0x28) (null) [FUNC, FunctionStarts] 
                0x000000018ce24e9c (    0x14) MatchesHitsSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24eb0 (    0xf4) _CreateQueryNodeForNonNormalizedTerm(__CFDictionary*, __CFString const*, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce24fa4 (   0x230) _UpdateTermInfoDictionary(__CFDictionary*, int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce251d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000018ce251e4 (   0x354) EvalProximitySetApplierFunction(void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25538 (    0xa0) SKDocIDScorePostingSet::Append(SKDocIDScorePosting*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce255d8 (    0x88) SKDocIDScorePostingCreateSet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25660 (   0x4c4) SKIndexSearchCompareKeyDataWithObjOrBuffer(IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25b24 (    0x90) SKDocIDScorePostingSet::MergeToSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25bb4 (     0x4) QueryTermInfo::~QueryTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25bb8 (    0x4c) QueryTermInfo::~QueryTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25c04 (    0xb8) QueryTermInfo::~QueryTermInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25cbc (    0x3c) SKDocIDScorePostingSet::~SKDocIDScorePostingSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25cf8 (   0x1ec) UpdateForPartialTerm(__CFAllocator const*, TIAIndex*, unsigned int, QueryTermInfo*, TermUpdate*, __CFDictionary*, __CFDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25ee4 (    0xc4) SpotlightQueryTokenizer::SpotlightQueryTokenizer(CITokenizer*, bool, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25fa8 (     0x4) SpotlightQueryTokenizer::~SpotlightQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25fac (    0x4c) SpotlightQueryTokenizer::~SpotlightQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce25ff8 (    0x54) SpotlightQueryTokenizer::CopyNextToken(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2604c (    0x10) SpotlightQueryTokenizer::Done() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2605c (    0x74) SpotlightQueryTokenizer::~SpotlightQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce260d0 (   0x11c) LegacyQueryTokenizer::LegacyQueryTokenizer(OpaqueIAIndexRef*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce261ec (    0xbc) LegacyQueryTokenizer::_Increment(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce262a8 (     0x4) LegacyQueryTokenizer::~LegacyQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce262ac (    0x4c) LegacyQueryTokenizer::~LegacyQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce262f8 (    0x60) LegacyQueryTokenizer::CopyNextToken(unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26358 (    0x10) LegacyQueryTokenizer::Done() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26368 (    0xb8) LegacyQueryTokenizer::~LegacyQueryTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26420 (    0x70) MergeAndSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26490 (    0x90) SKDocIDScorePostingSet::MergeToArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26520 (    0x50) DocIDBitMap::Get(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26570 (    0xb0) DocIDBitMap::Set(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26620 (    0x70) OrSetRankedApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26690 (    0xd4) EvaluateParitalTerm(SKQueryNode*, __CFDictionary const*, SKEvaluateInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26764 (    0x58) ExcludeSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce267bc (    0x10) OrSetApplierFunction(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce267cc (    0x10) SKDocIDScorePostingSet::AppendSetValues(void const*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce267dc (    0x9c) DocIDBitMap::~DocIDBitMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26878 (    0x20) QSortSKDocIDScorePostingCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26898 (    0x20) SearchAllMatchBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce268b8 (    0x24) SearchAllMatchObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce268dc (     0x8) SearchAllFieldsPrefixMatchBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce268e4 (     0xc) SearchAllFieldsPrefixMatchObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce268f0 (     0x8) SearchPrefixMatchBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce268f8 (     0xc) SearchPrefixMatchObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26904 (     0x8) SearchAllFieldsMatchBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2690c (     0xc) SearchAllFieldsMatchObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26918 (    0x10) SearchTermCompareBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26928 (     0xc) SearchTermCompareObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26934 (    0x28) SearchTermMatchBuffer(int, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2695c (    0x24) SearchTermMatchObj(int, IAOrderedStorable*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26980 (   0x2cc) MatchInfoGetRankedPostingInfo(SearchContext*, MatchInfo**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce26c4c (   0x3e0) MatchInfoLoadPostings(SearchContext*, MatchInfo**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2702c (   0x254) TermUpdateMatchInfoApplier(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce27280 (   0x138) MatchInfoAddTermUpdate(MatchInfo**, long, TermUpdate*, SearchContext*, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce273b8 (   0x60c) SKQueryEvaluateNew(SKQueryNode*, SearchContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce279c4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x000000018ce279ec (    0xe0) MatchTermInfosDispose(MatchInfo**, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce27acc (   0x1e8) SearchAllMatchObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce27cb4 (   0x6ec) SearchTermHandleMatch(int, int, QueryTermInfo*, IAOrderedStorable*, unsigned char const*, SearchContext*, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce283a0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000018ce283c0 (    0xa0) MatchTermInfoCreate(__CFAllocator const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28460 (   0x204) SearchTermDocMatch(SearchContext*, MatchInfo*, SearchTermInfo*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28664 (   0x114) SearchAllFieldsPrefixMatchObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28778 (    0xdc) SearchPrefixMatchObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28854 (    0xf4) SearchAllFieldsMatchObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28948 (   0x16c) SearchTermCompareObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28ab4 (    0x5c) SearchTermMatchObjOrBuffer(int, IAOrderedStorable*, unsigned char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28b10 (    0x84) SearchTermInfoBlockIDCompareByAddress(void*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28b94 (   0x380) SKQueryProcessProximityNode(SKQueryNode*, SKDocIDScorePosting**, long, SearchContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28f14 (     0xc) SKSummaryGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce28f20 (   0x114) SKSummaryCreateWithString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29034 (    0x20) SKSummaryGetSentenceCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29054 (    0x20) SKSummaryGetParagraphCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29074 (    0x64) SKSummaryCopySentenceAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce290d8 (     0x8) SKSummaryCopyParagraphAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce290e0 (    0x18) SKSummaryCopySentenceSummaryString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce290f8 (    0x18) SKSummaryCopyParagraphSummaryString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29110 (    0x18) CompareCFIndexes(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29128 (   0x1f8) SKSummaryGetSentenceSummaryInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29320 (    0x18) SummarySortCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29338 (     0x8) SKSummaryGetParagraphSummaryInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29340 (    0x10) SKSummaryDealloc(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29350 (    0x38) ImportersLoaded [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29388 (   0x1f8) ImportersLoad [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29580 (   0x104) ProcessDirectoryForImporters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29684 (   0x19c) ProcessImporterPlugIn [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29820 (   0x5a4) ImportContentsFromURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29dc4 (    0x28) GetStripMarksChar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29dec (     0xc) TaskAllocatorCopyDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29df8 (    0x24) TaskAllocatorReallocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29e1c (     0x4) TaskAllocatorDeallocate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29e20 (    0x10) TaskAllocatorPreferredSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29e30 (     0x8) IADefaultTextAnalysisCreateTokenizer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29e38 (    0x48) GetDefaultSentenceParserCallbacks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29e80 (    0x24) IADefaultSentenceParserCreate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29ea4 (    0x40) IADefaultSentenceParserDispose [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29ee4 (     0x8) IADefaultSentenceParserSetSourceText [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29eec (     0x8) IADefaultSentenceParserCopyNextSentence [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29ef4 (    0xf8) GetPredfinedCharacterSetFromString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29fec (    0x10) UniCharParserPushChar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce29ffc (    0xac) UniCharParserGetNextChar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a0a8 (     0xc) _ci_set_log_level [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a0b4 (     0xc) _ci_get_log_level [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a0c0 (    0xbc) CILocaleGetInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a17c (    0x4c) CITokenizerRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a1c8 (    0x70) CITokenizerReset [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a238 (   0x29c) _CITokenizerCopyQueryTokens [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a4d4 (    0x2c) ___CITokenizerCopyQueryTokens_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a500 (   0x144) _CITokenizerGetTokens [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a644 (    0x50) GetQueryTokensCallbackData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a694 (    0x5c) GetQueryTokensCallbackString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a6f0 (     0x4) CITokenizerCopyQueryTokens [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a6f4 (     0x4) CITokenizerGetTokens [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2a6f8 (   0xcc0) _tokenizerGetTokens [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b3b8 (   0x270) utf16_to_utf8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b628 (   0x140) icu_build_pattern_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b768 (    0x2c) CICollationInfoInit.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b794 (    0x2c) ___CITokenizerCopyQueryTokens_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b7c0 (    0x2c) _CITokenizerGetTokens.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b7ec (    0x2c) initializeCITokenizer.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b818 (    0x2c) _tokenizerGetTokens.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018ce2b844 (    0x2c) _tokenizerGetTokens.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000018ce2b870 (  0x1180) __TEXT __auth_stubs
                0x000000018ce2b870 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b880 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetGregorianDate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b890 (    0x10) DYLD-STUB$$CFAllocatorAllocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8a0 (    0x10) DYLD-STUB$$CFAllocatorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8b0 (    0x10) DYLD-STUB$$CFAllocatorDeallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8c0 (    0x10) DYLD-STUB$$CFAllocatorGetContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8d0 (    0x10) DYLD-STUB$$CFAllocatorGetPreferredSizeForSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8e0 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b8f0 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b900 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b910 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b920 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b930 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b940 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b950 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b960 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b970 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b980 (    0x10) DYLD-STUB$$CFArrayGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b990 (    0x10) DYLD-STUB$$CFArrayInsertValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9a0 (    0x10) DYLD-STUB$$CFArrayRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9b0 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9c0 (    0x10) DYLD-STUB$$CFArrayReplaceValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9d0 (    0x10) DYLD-STUB$$CFArraySetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9e0 (    0x10) DYLD-STUB$$CFArraySortValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2b9f0 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba00 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba10 (    0x10) DYLD-STUB$$CFBundleCopyResourceURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba20 (    0x10) DYLD-STUB$$CFBundleCopyResourceURLsOfTypeInDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba30 (    0x10) DYLD-STUB$$CFBundleGetBundleWithIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba40 (    0x10) DYLD-STUB$$CFBundleGetFunctionPointerForName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba50 (    0x10) DYLD-STUB$$CFBundleGetInfoDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba60 (    0x10) DYLD-STUB$$CFBundleIsExecutableLoaded [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba70 (    0x10) DYLD-STUB$$CFBundleLoadExecutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba80 (    0x10) DYLD-STUB$$CFCharacterSetCreateBitmapRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2ba90 (    0x10) DYLD-STUB$$CFCharacterSetCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2baa0 (    0x10) DYLD-STUB$$CFCharacterSetCreateWithCharactersInString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bab0 (    0x10) DYLD-STUB$$CFCharacterSetGetPredefined [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bac0 (    0x10) DYLD-STUB$$CFCharacterSetIsCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bad0 (    0x10) DYLD-STUB$$CFCharacterSetRemoveCharactersInString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bae0 (    0x10) DYLD-STUB$$CFCharacterSetUnion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2baf0 (    0x10) DYLD-STUB$$CFCopySearchPathForDirectoriesInDomains [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb00 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb10 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb20 (    0x10) DYLD-STUB$$CFDataCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb30 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb40 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb50 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb60 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb70 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb80 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bb90 (    0x10) DYLD-STUB$$CFDataReplaceBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bba0 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bbb0 (    0x10) DYLD-STUB$$CFDateCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bbc0 (    0x10) DYLD-STUB$$CFDateGetAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bbd0 (    0x10) DYLD-STUB$$CFDateGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bbe0 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bbf0 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc00 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc10 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc20 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc30 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc40 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc50 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc60 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc70 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc80 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bc90 (    0x10) DYLD-STUB$$CFDictionaryRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bca0 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bcb0 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bcc0 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bcd0 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bce0 (    0x10) DYLD-STUB$$CFGregorianDateGetAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bcf0 (    0x10) DYLD-STUB$$CFHash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd00 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd10 (    0x10) DYLD-STUB$$CFNumberGetByteSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd20 (    0x10) DYLD-STUB$$CFNumberGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd30 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd40 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd50 (    0x10) DYLD-STUB$$CFPlugInCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd60 (    0x10) DYLD-STUB$$CFPlugInFindFactoriesForPlugInTypeInPlugIn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd70 (    0x10) DYLD-STUB$$CFPlugInGetBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd80 (    0x10) DYLD-STUB$$CFPlugInInstanceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bd90 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bda0 (    0x10) DYLD-STUB$$CFPropertyListCreateFromXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bdb0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bdc0 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bdd0 (    0x10) DYLD-STUB$$CFSetAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bde0 (    0x10) DYLD-STUB$$CFSetApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bdf0 (    0x10) DYLD-STUB$$CFSetContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be00 (    0x10) DYLD-STUB$$CFSetCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be10 (    0x10) DYLD-STUB$$CFSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be20 (    0x10) DYLD-STUB$$CFSetCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be30 (    0x10) DYLD-STUB$$CFSetGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be40 (    0x10) DYLD-STUB$$CFSetGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be50 (    0x10) DYLD-STUB$$CFSetGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be60 (    0x10) DYLD-STUB$$CFSetGetValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be70 (    0x10) DYLD-STUB$$CFSetRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be80 (    0x10) DYLD-STUB$$CFSetRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2be90 (    0x10) DYLD-STUB$$CFSetSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bea0 (    0x10) DYLD-STUB$$CFShow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2beb0 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bec0 (    0x10) DYLD-STUB$$CFStringAppendCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bed0 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bee0 (    0x10) DYLD-STUB$$CFStringConvertEncodingToIANACharSetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bef0 (    0x10) DYLD-STUB$$CFStringConvertIANACharSetNameToEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf00 (    0x10) DYLD-STUB$$CFStringCreateArrayBySeparatingStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf10 (    0x10) DYLD-STUB$$CFStringCreateByCombiningStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf20 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf30 (    0x10) DYLD-STUB$$CFStringCreateExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf40 (    0x10) DYLD-STUB$$CFStringCreateFromExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf50 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf60 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf70 (    0x10) DYLD-STUB$$CFStringCreateMutableWithExternalCharactersNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf80 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bf90 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bfa0 (    0x10) DYLD-STUB$$CFStringCreateWithCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bfb0 (    0x10) DYLD-STUB$$CFStringCreateWithCharactersNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bfc0 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bfd0 (    0x10) DYLD-STUB$$CFStringCreateWithFormatAndArguments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bfe0 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2bff0 (    0x10) DYLD-STUB$$CFStringDelete [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c000 (    0x10) DYLD-STUB$$CFStringEncodingUnicodeToBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c010 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c020 (    0x10) DYLD-STUB$$CFStringFindWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c030 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c040 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c050 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c060 (    0x10) DYLD-STUB$$CFStringGetCharacterAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c070 (    0x10) DYLD-STUB$$CFStringGetCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c080 (    0x10) DYLD-STUB$$CFStringGetCharactersPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c090 (    0x10) DYLD-STUB$$CFStringGetIntValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0a0 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0b0 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0c0 (    0x10) DYLD-STUB$$CFStringGetSystemEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0d0 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0e0 (    0x10) DYLD-STUB$$CFStringHasPrefix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c0f0 (    0x10) DYLD-STUB$$CFStringHasSuffix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c100 (    0x10) DYLD-STUB$$CFStringLowercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c110 (    0x10) DYLD-STUB$$CFStringNormalize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c120 (    0x10) DYLD-STUB$$CFStringTokenizerAdvanceToNextToken [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c130 (    0x10) DYLD-STUB$$CFStringTokenizerCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c140 (    0x10) DYLD-STUB$$CFStringTokenizerGetCurrentTokenRange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c150 (    0x10) DYLD-STUB$$CFStringTokenizerSetString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c160 (    0x10) DYLD-STUB$$CFStringTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c170 (    0x10) DYLD-STUB$$CFURLCanBeDecomposed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c180 (    0x10) DYLD-STUB$$CFURLCopyAbsoluteURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c190 (    0x10) DYLD-STUB$$CFURLCopyFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1a0 (    0x10) DYLD-STUB$$CFURLCopyNetLocation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1b0 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1c0 (    0x10) DYLD-STUB$$CFURLCopyPathExtension [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1d0 (    0x10) DYLD-STUB$$CFURLCopyResourceSpecifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1e0 (    0x10) DYLD-STUB$$CFURLCopyScheme [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c1f0 (    0x10) DYLD-STUB$$CFURLCreateDataAndPropertiesFromResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c200 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c210 (    0x10) DYLD-STUB$$CFURLCreateWithString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c220 (    0x10) DYLD-STUB$$CFURLGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c230 (    0x10) DYLD-STUB$$CFUUIDGetConstantUUIDWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c240 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c250 (    0x10) DYLD-STUB$$DisposeHandle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c260 (    0x10) DYLD-STUB$$FSCloseFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c270 (    0x10) DYLD-STUB$$FSCloseIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c280 (    0x10) DYLD-STUB$$FSCompareFSRefs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c290 (    0x10) DYLD-STUB$$FSCreateFileUnicode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2a0 (    0x10) DYLD-STUB$$FSFindFolder [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2b0 (    0x10) DYLD-STUB$$FSFlushFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2c0 (    0x10) DYLD-STUB$$FSGetCatalogInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2d0 (    0x10) DYLD-STUB$$FSGetCatalogInfoBulk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2e0 (    0x10) DYLD-STUB$$FSGetForkSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c2f0 (    0x10) DYLD-STUB$$FSGetVolumeInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c300 (    0x10) DYLD-STUB$$FSMakeFSRefUnicode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c310 (    0x10) DYLD-STUB$$FSNewAlias [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c320 (    0x10) DYLD-STUB$$FSOpenFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c330 (    0x10) DYLD-STUB$$FSOpenIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c340 (    0x10) DYLD-STUB$$FSReadFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c350 (    0x10) DYLD-STUB$$FSRefMakePath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c360 (    0x10) DYLD-STUB$$FSResolveAlias [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c370 (    0x10) DYLD-STUB$$FSSetForkSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c380 (    0x10) DYLD-STUB$$FSWriteFork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c390 (    0x10) DYLD-STUB$$GetHandleSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3a0 (    0x10) DYLD-STUB$$HLock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3b0 (    0x10) DYLD-STUB$$LSCopyItemInfoForURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3c0 (    0x10) DYLD-STUB$$PtrToHand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3d0 (    0x10) DYLD-STUB$$UTCreateStringForOSType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3e0 (    0x10) DYLD-STUB$$UTTypeCreatePreferredIdentifierForTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c3f0 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c400 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c410 (    0x10) DYLD-STUB$$_CFStringTokenizerGetDerivedTokens [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c420 (    0x10) DYLD-STUB$$_CFStringTokenizerTokenize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c430 (    0x10) DYLD-STUB$$_CFStringTokenizerTokenizeCompoundWord [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c440 (    0x10) DYLD-STUB$$_LSCopyLibraryItemURLs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c450 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c460 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c470 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c480 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c490 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4a0 (    0x10) DYLD-STUB$$__cxa_call_unexpected [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4b0 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4c0 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4d0 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4e0 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c4f0 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c500 (    0x10) DYLD-STUB$$__memcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c510 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c520 (    0x10) DYLD-STUB$$bcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c530 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c540 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c550 (    0x10) DYLD-STUB$$clock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c560 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c570 (    0x10) DYLD-STUB$$closedir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c580 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c590 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5a0 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5b0 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5c0 (    0x10) DYLD-STUB$$fileno [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5d0 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5e0 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c5f0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c600 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c610 (    0x10) DYLD-STUB$$fsync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c620 (    0x10) DYLD-STUB$$ftruncate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c630 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c640 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c650 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c660 (    0x10) DYLD-STUB$$isatty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c670 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c680 (    0x10) DYLD-STUB$$logf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c690 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6a0 (    0x10) DYLD-STUB$$lstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6b0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6c0 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6d0 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6e0 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c6f0 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c700 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c710 (    0x10) DYLD-STUB$$mergesort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c720 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c730 (    0x10) DYLD-STUB$$opendir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c740 (    0x10) DYLD-STUB$$pread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c750 (    0x10) DYLD-STUB$$pthread_cond_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c760 (    0x10) DYLD-STUB$$pthread_cond_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c770 (    0x10) DYLD-STUB$$pthread_cond_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c780 (    0x10) DYLD-STUB$$pthread_cond_timedwait_relative_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c790 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7a0 (    0x10) DYLD-STUB$$pthread_detach [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7b0 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7c0 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7d0 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7e0 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c7f0 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c800 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c810 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c820 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c830 (    0x10) DYLD-STUB$$pthread_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c840 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c850 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c860 (    0x10) DYLD-STUB$$pwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c870 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c880 (    0x10) DYLD-STUB$$qsort_r [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c890 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8a0 (    0x10) DYLD-STUB$$readdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8b0 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8c0 (    0x10) DYLD-STUB$$reallocf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8d0 (    0x10) DYLD-STUB$$setvbuf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8e0 (    0x10) DYLD-STUB$$strcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c8f0 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c900 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c910 (    0x10) DYLD-STUB$$strpbrk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c920 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c930 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c940 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c950 (    0x10) DYLD-STUB$$u_strFoldCase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c960 (    0x10) DYLD-STUB$$ucol_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c970 (    0x10) DYLD-STUB$$ucol_getLocaleByType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c980 (    0x10) DYLD-STUB$$ucol_getVersion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c990 (    0x10) DYLD-STUB$$ucol_nextSortKeyPart [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c9a0 (    0x10) DYLD-STUB$$ucol_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c9b0 (    0x10) DYLD-STUB$$ucol_setAttribute [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c9c0 (    0x10) DYLD-STUB$$uiter_setString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c9d0 (    0x10) DYLD-STUB$$unorm_normalize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018ce2c9e0 (    0x10) DYLD-STUB$$valloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000018ce2c9f0 (  0x84c4) __TEXT __const
                0x000000018ce2c9f0 (    0x30) SearchKitVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca20 (     0x8) SearchKitVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca28 (    0x11) typeinfo name for HighLevelQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca39 (     0x7) typeinfo name for IAHit [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca40 (    0x13) typeinfo name for IAProgressReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca53 (    0x15) typeinfo name for IAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca68 (    0x20) typeinfo name for InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca88 (    0x13) typeinfo name for InvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ca9b (     0xe) typeinfo name for FreqPSQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2caa9 (    0x13) typeinfo name for InvertedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cabc (    0x11) typeinfo name for RankedProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cacd (     0xb) typeinfo name for RankedHit [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cad8 (    0x11) typeinfo name for RankedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cae9 (     0xa) typeinfo name for RHQByDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2caf3 (    0x11) typeinfo name for RankedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb04 (    0x14) typeinfo name for IATextStreamQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb18 (     0x9) typeinfo name for IAQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb21 (     0x9) typeinfo name for RQEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb2a (     0xd) typeinfo name for TFMapQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb37 (    0x10) typeinfo name for IARankedQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb47 (    0x29) typeinfo name for IAQueryIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb70 (     0xd) typeinfo name for Similarity [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb7d (     0xe) typeinfo name for TIAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb8b (    0x13) typeinfo name for TIASearchResults [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cb9e (    0x16) typeinfo name for TIAInvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cbb4 (    0x14) typeinfo name for TIAVectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cbc8 (    0x13) typeinfo name for TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cbdb (     0xa) typeinfo name for TWVector [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cbe5 (    0x10) typeinfo name for TWVectorAdder [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cbf5 (    0x11) typeinfo name for VectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc06 (     0xf) typeinfo name for VectorScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc15 (    0x11) typeinfo name for VectorHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc26 (    0x14) typeinfo name for WeightedTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc3a (     0x8) typeinfo name for IATerm [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc42 (    0x10) typeinfo name for IATokenStream [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc52 (    0x1e) typeinfo name for IAAnalysis [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cc70 (    0x6e) AIAT_URLAcceptable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ccde (    0x10) typeinfo name for FreqTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ccee (    0x10) typeinfo name for IADocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ccfe (     0x7) typeinfo name for IADoc [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd05 (     0x9) typeinfo name for IAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd0e (     0x9) typeinfo name for IAQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd17 (    0x10) typeinfo name for IAObjectQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd27 (     0xe) typeinfo name for IAQueueNode [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd35 (     0xd) typeinfo name for InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd42 (     0x8) typeinfo name for FreqPS [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd4a (    0x13) typeinfo name for InvertedTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd5d (    0x18) typeinfo name for InvertedBlockTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd75 (    0x10) typeinfo name for InvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cd85 (    0x27) typeinfo name for FreqPSImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdac (     0xd) typeinfo name for IDDocCount [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdb9 (     0x7) typeinfo name for IDDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdc0 (     0xa) typeinfo name for TermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdca (     0x9) typeinfo name for DocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdd3 (     0x8) typeinfo name for IDTerm [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cddb (     0xb) typeinfo name for TIDRename [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cde6 (    0x10) typeinfo name for TIDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cdf6 (     0xf) typeinfo name for DocUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce05 (     0xb) typeinfo name for TermIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce10 (     0xe) typeinfo name for TermOffsets [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce1e (    0x10) typeinfo name for ProximityInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce2e (     0xe) typeinfo name for TermInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce3c (     0xd) typeinfo name for DocInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce49 (     0xb) typeinfo name for IATermKey [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce54 (    0x16) typeinfo name for TermInfoStreamQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce6a (     0xa) typeinfo name for TFVector [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce74 (    0x19) typeinfo name for TIADocPropertyEntryNew [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ce8d (    0x16) typeinfo name for TIADocPropertyEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cea3 (    0x13) typeinfo name for TIAInvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ceb6 (    0x11) typeinfo name for TIAVectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cec7 (    0x10) typeinfo name for TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2ced7 (     0xa) typeinfo name for TIAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cee1 (    0x16) typeinfo name for TIAIndexDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cef7 (    0x10) typeinfo name for IADocRefQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf07 (    0x10) typeinfo name for VectorDocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf17 (    0x12) typeinfo name for TermIdUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf29 (     0xe) typeinfo name for VectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf37 (     0xb) typeinfo name for IDTermMap [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf42 (     0xe) typeinfo name for TermIDSet [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf50 (     0x4) BuddyStorageType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf54 (     0x1) LogSizeBits [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf55 (     0x3) MaxLogSize [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf58 (     0x4) MaxBlockSize [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf5c (     0x4) MinLogSize [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf60 (     0x4) MinBlockSize [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf64 (     0x4) InfoLogSizeMask [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf68 (     0x4) InfoChunkBits [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf6c (     0x4) InfoChunkSize [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf70 (     0x4) InfoChunkMask [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf74 (    0x15) SysBlockID [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf89 (     0xa) typeinfo name for BitArray [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf93 (     0x8) typeinfo name for Scroll [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cf9b (     0x7) typeinfo name for BTree [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cfa2 (    0x10) typeinfo name for BTreeIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cfb2 (    0x10) typeinfo name for LevelInfoList [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cfc2 (     0x9) typeinfo name for PtrList [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cfcb (    0x11) typeinfo name for BulkUpdateList [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cfdc (    0x1c) typeinfo name for IteratorFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cff8 (     0x6) typeinfo name for Leaf [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2cffe (     0x6) typeinfo name for Page [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d004 (    0x11) typeinfo name for PageCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d015 (     0xb) typeinfo name for PageCache [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d020 (     0xa) typeinfo name for IAStruct [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d02a (     0xa) typeinfo name for IAObject [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d034 (     0xd) typeinfo name for std::bad_alloc [NameNList, MangledNameNList, NList] 
                0x000000018ce2d041 (     0x9) typeinfo name for IAMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d04a (    0x11) typeinfo name for IADefaultMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d05b (    0x10) typeinfo name for IAObjRefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d06b (     0xd) typeinfo name for IARefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d078 (     0x1) IACloneOSSetStoreStreams [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d079 (     0xd) typeinfo name for IAStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d086 (    0x1c) typeinfo name for IAOrderedStorableIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d0a2 (    0x17) typeinfo name for IAOrderedStorableSet [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d0b9 (    0x14) typeinfo name for IAOrderedStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d0cd (    0x10) typeinfo name for IAOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d0dd (     0xb) typeinfo name for IAStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d0e8 (    0x1c) typeinfo name for IAMemoryOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d104 (     0x7) typeinfo name for TFMap [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d10b (     0xb) typeinfo name for UInt32Set [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d116 (    0x10) typeinfo name for UInt32VoidMap [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2d126 (    0x32) BLANK [NameNList, MangledNameNList, NList] 
                0x000000018ce2d158 (   0x400) yy_ec [NameNList, MangledNameNList, NList] 
                0x000000018ce2d558 (    0xaa) yy_accept [NameNList, MangledNameNList, NList] 
                0x000000018ce2d602 (   0x27a) yy_chk [NameNList, MangledNameNList, NList] 
                0x000000018ce2d87c (    0xb8) yy_base [NameNList, MangledNameNList, NList] 
                0x000000018ce2d934 (    0xb8) yy_def [NameNList, MangledNameNList, NList] 
                0x000000018ce2d9ec (    0x7c) yy_meta [NameNList, MangledNameNList, NList] 
                0x000000018ce2da68 (   0x27c) yy_nxt [NameNList, MangledNameNList, NList] 
                0x000000018ce2dce4 (    0x40) yy_rule_can_match_eol [NameNList, MangledNameNList, NList] 
                0x000000018ce2dd24 (    0x22) yypact [NameNList, MangledNameNList, NList] 
                0x000000018ce2dd46 (   0x10d) yytranslate [NameNList, MangledNameNList, NList] 
                0x000000018ce2de53 (    0x23) yycheck [NameNList, MangledNameNList, NList] 
                0x000000018ce2de76 (    0x23) yytable [NameNList, MangledNameNList, NList] 
                0x000000018ce2de99 (    0x22) yydefact [NameNList, MangledNameNList, NList] 
                0x000000018ce2debb (    0x1b) yyr2 [NameNList, MangledNameNList, NList] 
                0x000000018ce2ded6 (    0x1b) yyr1 [NameNList, MangledNameNList, NList] 
                0x000000018ce2def1 (     0xf) yypgoto [NameNList, MangledNameNList, NList] 
                0x000000018ce2df00 (    0x2c) yydefgoto [NameNList, MangledNameNList, NList] 
                0x000000018ce2df2c (    0x10) typeinfo name for QueryTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2df3c (    0x1a) typeinfo name for SpotlightQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2df56 (    0x11) typeinfo name for QueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2df67 (    0x29) typeinfo name for LegacyQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce2df90 (  0x2000) sFastBytes [NameNList, MangledNameNList, NList] 
                0x000000018ce2ff90 (  0x2000) sNeedNormBytes [NameNList, MangledNameNList, NList] 
                0x000000018ce31f90 (   0x200) uniChars00 [NameNList, MangledNameNList, NList] 
                0x000000018ce32190 (   0x200) uniChars100 [NameNList, MangledNameNList, NList] 
                0x000000018ce32390 (   0x200) uniChars200 [NameNList, MangledNameNList, NList] 
                0x000000018ce32590 (   0x200) uniChars300 [NameNList, MangledNameNList, NList] 
                0x000000018ce32790 (   0x200) uniChars400 [NameNList, MangledNameNList, NList] 
                0x000000018ce32990 (   0x200) uniChars500 [NameNList, MangledNameNList, NList] 
                0x000000018ce32b90 (   0x200) uniChars600 [NameNList, MangledNameNList, NList] 
                0x000000018ce32d90 (   0x200) uniChars700 [NameNList, MangledNameNList, NList] 
                0x000000018ce32f90 (   0x200) uniChars900 [NameNList, MangledNameNList, NList] 
                0x000000018ce33190 (   0x200) uniCharsa00 [NameNList, MangledNameNList, NList] 
                0x000000018ce33390 (   0x200) uniCharsb00 [NameNList, MangledNameNList, NList] 
                0x000000018ce33590 (   0x200) uniCharsc00 [NameNList, MangledNameNList, NList] 
                0x000000018ce33790 (   0x200) uniCharsd00 [NameNList, MangledNameNList, NList] 
                0x000000018ce33990 (   0x200) uniCharsf00 [NameNList, MangledNameNList, NList] 
                0x000000018ce33b90 (   0x200) uniChars1000 [NameNList, MangledNameNList, NList] 
                0x000000018ce33d90 (   0x200) uniChars1700 [NameNList, MangledNameNList, NList] 
                0x000000018ce33f90 (   0x200) uniChars1800 [NameNList, MangledNameNList, NList] 
                0x000000018ce34190 (   0x200) uniChars1900 [NameNList, MangledNameNList, NList] 
                0x000000018ce34390 (   0x200) uniChars1e00 [NameNList, MangledNameNList, NList] 
                0x000000018ce34590 (   0x200) uniChars1f00 [NameNList, MangledNameNList, NList] 
                0x000000018ce34790 (   0x200) uniChars2000 [NameNList, MangledNameNList, NList] 
                0x000000018ce34990 (   0x200) uniChars2100 [NameNList, MangledNameNList, NList] 
                0x000000018ce34b90 (   0x208) uniChars2200 [NameNList, MangledNameNList, NList] 
                0x000000018ce34d98 (     0x4) num_ligatures [PEXT, NameNList, MangledNameNList, NList] 
                0x000000018ce34d9c (    0x80) kFastLowercaseAndStripDiacriticals [NameNList, MangledNameNList, NList] 
                0x000000018ce34e1c (    0x80) kFastStripDiacriticals [NameNList, MangledNameNList, NList] 
                0x000000018ce34e9c (    0x18) ligatures [NameNList, MangledNameNList, NList] 
            0x000000018ce34eb4 (   0xfdf) __TEXT __cstring
            0x000000018ce35e94 (  0x668c) __TEXT __gcc_except_tab
                0x000000018ce35e94 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce35eb8 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce35ec4 (    0x40) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f04 (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f1c (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f3c (    0x20) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f5c (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f68 (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f74 (    0x28) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce35f9c (    0x28) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000018ce35fc4 (    0x24) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce35fe8 (    0x28) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce36010 (    0x24) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce36034 (    0x40) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce36074 (    0x14) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce36088 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce3609c (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce360b0 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce360c4 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce360d8 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce360e4 (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce3610c (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce3611c (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x000000018ce3612c (    0x30) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000018ce3615c (    0x3c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce36198 (    0x50) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x000000018ce361e8 (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce36204 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce36220 (    0x20) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce36240 (    0x1c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3625c (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce36274 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce36294 (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce362b8 (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce362e0 (    0x28) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce36308 (    0x1c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce36324 (    0x18) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce3633c (    0x34) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce36370 (    0x40) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce363b0 (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce363d8 (    0x2c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce36404 (    0x34) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce36438 (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce36454 (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce36460 (    0x28) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce36488 (    0xa0) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce36528 (    0xa0) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce365c8 (    0x60) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce36628 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce3663c (    0x28) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce36664 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce36678 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce36694 (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce366a0 (    0x68) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce36708 (    0x20) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce36728 (    0x2c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce36754 (     0xc) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce36760 (    0x44) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce367a4 (     0xc) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000018ce367b0 (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce367c4 (    0x2c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce367f0 (    0x3c) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x000000018ce3682c (    0x70) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x000000018ce3689c (    0x38) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x000000018ce368d4 (    0x2c) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x000000018ce36900 (    0x44) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x000000018ce36944 (    0x84) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x000000018ce369c8 (    0x94) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x000000018ce36a5c (    0x40) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x000000018ce36a9c (    0x38) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce36ad4 (    0x3c) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000018ce36b10 (    0x50) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x000000018ce36b60 (    0x38) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000018ce36b98 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce36ba4 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce36bcc (     0xc) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce36bd8 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce36bec (    0x1c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce36c08 (    0x10) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce36c18 (    0x20) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000018ce36c38 (    0x2c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce36c64 (    0x74) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce36cd8 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce36cf8 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d14 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d20 (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d3c (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d64 (    0x28) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d8c (     0xc) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce36d98 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce36da4 (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce36dc4 (    0x40) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce36e04 (    0x30) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce36e34 (    0x50) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce36e84 (    0x38) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce36ebc (    0x2c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce36ee8 (    0x44) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce36f2c (    0x38) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce36f64 (    0x74) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000018ce36fd8 (    0x64) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce3703c (    0x20) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce3705c (    0x1c) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce37078 (     0xc) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce37084 (    0x28) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce370ac (    0x20) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce370cc (    0x1c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000018ce370e8 (     0xc) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000018ce370f4 (    0x1c) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce37110 (    0x1c) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x000000018ce3712c (     0xc) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x000000018ce37138 (    0x1c) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x000000018ce37154 (     0xc) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x000000018ce37160 (    0x38) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce37198 (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce371b4 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce371c0 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce371e0 (    0x4c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce3722c (    0x90) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce372bc (    0x28) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce372e4 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce372f0 (    0x38) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce37328 (    0x68) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce37390 (    0x20) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce373b0 (    0x20) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce373d0 (    0x20) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce373f0 (    0x8c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce3747c (    0x3c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce374b8 (    0x64) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce3751c (    0x2c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce37548 (     0xc) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce37554 (    0x1c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce37570 (     0xc) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x000000018ce3757c (    0x1c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000018ce37598 (     0xc) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce375a4 (    0x1c) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x000000018ce375c0 (     0xc) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x000000018ce375cc (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce375e8 (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce37604 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce37610 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce37628 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce37638 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce37648 (    0x30) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce37678 (    0x30) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce376a8 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce376bc (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce376d0 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce376e4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce37704 (    0x24) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce37728 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce37734 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce37748 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce37768 (    0x1c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce37784 (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce37790 (    0xc8) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce37858 (    0x50) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018ce378a8 (    0x64) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce3790c (    0x34) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce37940 (    0x34) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce37974 (    0x40) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000018ce379b4 (    0x34) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce379e8 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce379fc (    0xb0) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce37aac (    0xb0) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000018ce37b5c (    0x24) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000018ce37b80 (    0x44) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000018ce37bc4 (    0x60) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce37c24 (     0xc) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x000000018ce37c30 (     0xc) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000018ce37c3c (    0x20) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x000000018ce37c5c (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce37c7c (    0x24) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce37ca0 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce37cac (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce37cd0 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce37cf4 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d00 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d10 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d24 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d38 (    0x1c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d54 (     0xc) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d60 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d74 (    0x20) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce37d94 (    0x24) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000018ce37db8 (     0xc) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce37dc4 (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce37dd4 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce37de4 (    0x18) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x000000018ce37dfc (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce37e20 (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce37e40 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce37e60 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce37e80 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce37e8c (    0x48) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce37ed4 (    0x40) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce37f14 (    0x48) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x000000018ce37f5c (    0x3c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce37f98 (    0x48) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce37fe0 (    0x40) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce38020 (    0x3c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3805c (    0x1c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce38078 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce38094 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce380b4 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce380d4 (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce380f4 (    0x1c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce38110 (    0x1c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce3812c (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce38148 (    0x1c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce38164 (    0x1c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce38180 (    0x1c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce3819c (    0x1c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce381b8 (    0x1c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce381d4 (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce381f0 (    0x1c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000018ce3820c (    0x1c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce38228 (    0x1c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce38244 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce38260 (    0x1c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018ce3827c (    0x1c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce38298 (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce382b4 (    0x1c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce382d0 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000018ce382f0 (    0x1c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce3830c (    0x1c) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce38328 (    0x1c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce38344 (    0x1c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce38360 (    0x1c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce3837c (    0x1c) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x000000018ce38398 (    0x20) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000018ce383b8 (    0x1c) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce383d4 (    0x1c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000018ce383f0 (    0x1c) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x000000018ce3840c (    0x1c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce38428 (    0x1c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000018ce38444 (    0x1c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000018ce38460 (    0x1c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce3847c (    0x1c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000018ce38498 (    0x1c) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce384b4 (    0x1c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce384d0 (    0x1c) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x000000018ce384ec (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce384f8 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce38518 (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce38538 (     0xc) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce38544 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce38554 (    0x10) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce38564 (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce38580 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce385a0 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce385b4 (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce385d4 (    0x28) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce385fc (    0x28) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce38624 (    0x20) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce38644 (    0x28) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x000000018ce3866c (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce3868c (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce38698 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce386ac (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce386b8 (     0xc) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce386c4 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce386e4 (    0x24) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce38708 (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce3872c (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce38754 (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce3877c (    0x28) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce387a4 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce387b0 (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce387cc (     0xc) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce387d8 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce387e8 (    0x20) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce38808 (    0x24) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce3882c (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce3883c (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce38850 (    0x28) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce38878 (    0x1c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce38894 (     0xc) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000018ce388a0 (    0x24) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000018ce388c4 (    0x24) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x000000018ce388e8 (    0x28) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce38910 (    0x70) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x000000018ce38980 (    0x30) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x000000018ce389b0 (    0x14) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x000000018ce389c4 (    0x48) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a0c (    0x14) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a20 (    0x20) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a40 (    0x20) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a60 (     0xc) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a6c (    0x10) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a7c (    0x18) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000018ce38a94 (    0x38) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x000000018ce38acc (    0x4c) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x000000018ce38b18 (    0x40) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x000000018ce38b58 (    0x20) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x000000018ce38b78 (     0xc) GCC_except_table97 [NameNList, MangledNameNList, NList] 
                0x000000018ce38b84 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce38ba4 (     0xc) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce38bb0 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce38bc4 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce38bd4 (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce38be4 (    0x20) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c04 (     0xc) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c10 (    0x14) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c24 (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c34 (    0x3c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c70 (    0x28) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x000000018ce38c98 (    0x10) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce38ca8 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce38cb8 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x000000018ce38cc8 (    0x20) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000018ce38ce8 (     0xc) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x000000018ce38cf4 (    0x14) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d08 (    0x14) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d1c (    0x20) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d3c (     0xc) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d48 (    0x14) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d5c (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d70 (    0x14) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d84 (    0x14) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x000000018ce38d98 (    0x10) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x000000018ce38da8 (    0x44) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x000000018ce38dec (    0x9c) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x000000018ce38e88 (    0x7c) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x000000018ce38f04 (    0x28) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x000000018ce38f2c (    0x44) GCC_except_table101 [NameNList, MangledNameNList, NList] 
                0x000000018ce38f70 (    0x28) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x000000018ce38f98 (    0x3c) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x000000018ce38fd4 (    0x20) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x000000018ce38ff4 (    0x38) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x000000018ce3902c (    0x38) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x000000018ce39064 (    0x30) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x000000018ce39094 (    0x2c) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x000000018ce390c0 (    0x28) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x000000018ce390e8 (    0x20) GCC_except_table130 [NameNList, MangledNameNList, NList] 
                0x000000018ce39108 (     0xc) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x000000018ce39114 (    0x10) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x000000018ce39124 (    0x10) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x000000018ce39134 (    0x20) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x000000018ce39154 (    0x28) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x000000018ce3917c (     0xc) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x000000018ce39188 (    0x20) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x000000018ce391a8 (    0x18) GCC_except_table150 [NameNList, MangledNameNList, NList] 
                0x000000018ce391c0 (    0x30) GCC_except_table152 [NameNList, MangledNameNList, NList] 
                0x000000018ce391f0 (     0xc) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x000000018ce391fc (    0x24) GCC_except_table155 [NameNList, MangledNameNList, NList] 
                0x000000018ce39220 (    0x58) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x000000018ce39278 (    0x60) GCC_except_table160 [NameNList, MangledNameNList, NList] 
                0x000000018ce392d8 (    0x3c) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x000000018ce39314 (    0x38) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x000000018ce3934c (    0x28) GCC_except_table165 [NameNList, MangledNameNList, NList] 
                0x000000018ce39374 (    0x20) GCC_except_table166 [NameNList, MangledNameNList, NList] 
                0x000000018ce39394 (    0x50) GCC_except_table171 [NameNList, MangledNameNList, NList] 
                0x000000018ce393e4 (    0x28) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x000000018ce3940c (   0x140) GCC_except_table175 [NameNList, MangledNameNList, NList] 
                0x000000018ce3954c (    0x30) GCC_except_table177 [NameNList, MangledNameNList, NList] 
                0x000000018ce3957c (    0x30) GCC_except_table178 [NameNList, MangledNameNList, NList] 
                0x000000018ce395ac (    0x14) GCC_except_table182 [NameNList, MangledNameNList, NList] 
                0x000000018ce395c0 (    0x34) GCC_except_table183 [NameNList, MangledNameNList, NList] 
                0x000000018ce395f4 (    0x4c) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x000000018ce39640 (    0x68) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x000000018ce396a8 (    0xac) GCC_except_table192 [NameNList, MangledNameNList, NList] 
                0x000000018ce39754 (    0x48) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x000000018ce3979c (    0x98) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x000000018ce39834 (    0x74) GCC_except_table204 [NameNList, MangledNameNList, NList] 
                0x000000018ce398a8 (    0x4c) GCC_except_table205 [NameNList, MangledNameNList, NList] 
                0x000000018ce398f4 (    0x54) GCC_except_table206 [NameNList, MangledNameNList, NList] 
                0x000000018ce39948 (    0x14) GCC_except_table207 [NameNList, MangledNameNList, NList] 
                0x000000018ce3995c (    0x18) GCC_except_table210 [NameNList, MangledNameNList, NList] 
                0x000000018ce39974 (    0x1c) GCC_except_table213 [NameNList, MangledNameNList, NList] 
                0x000000018ce39990 (    0x1c) GCC_except_table214 [NameNList, MangledNameNList, NList] 
                0x000000018ce399ac (     0xc) GCC_except_table216 [NameNList, MangledNameNList, NList] 
                0x000000018ce399b8 (    0x10) GCC_except_table218 [NameNList, MangledNameNList, NList] 
                0x000000018ce399c8 (    0x10) GCC_except_table223 [NameNList, MangledNameNList, NList] 
                0x000000018ce399d8 (    0x20) GCC_except_table227 [NameNList, MangledNameNList, NList] 
                0x000000018ce399f8 (    0x20) GCC_except_table230 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a18 (     0xc) GCC_except_table231 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a24 (    0x10) GCC_except_table235 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a34 (    0x10) GCC_except_table236 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a44 (    0x14) GCC_except_table237 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a58 (     0xc) GCC_except_table240 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a64 (     0xc) GCC_except_table242 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a70 (    0x10) GCC_except_table243 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a80 (     0xc) GCC_except_table250 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a8c (     0xc) GCC_except_table251 [NameNList, MangledNameNList, NList] 
                0x000000018ce39a98 (     0xc) GCC_except_table255 [NameNList, MangledNameNList, NList] 
                0x000000018ce39aa4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce39ac4 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce39aec (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce39af8 (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b14 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b30 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b3c (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b5c (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b78 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b84 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce39b94 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce39ba4 (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce39bb4 (    0x10) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce39bc4 (    0x20) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce39be4 (     0xc) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce39bf0 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce39c14 (    0x28) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x000000018ce39c3c (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce39c58 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce39c64 (    0x24) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018ce39c88 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce39cb0 (    0x1c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce39ccc (     0xc) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce39cd8 (    0x24) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce39cfc (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce39d18 (    0x28) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018ce39d40 (    0x1c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce39d5c (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce39d78 (     0xc) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce39d84 (    0xdc) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce39e60 (    0x50) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce39eb0 (    0x20) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce39ed0 (     0xc) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x000000018ce39edc (    0xa4) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x000000018ce39f80 (    0x14) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000018ce39f94 (    0x9c) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a030 (    0x20) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a050 (    0xb4) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a104 (    0x40) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a144 (    0x24) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a168 (    0xe0) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a248 (    0x5c) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a2a4 (    0x38) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a2dc (    0x30) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a30c (    0x1c) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a328 (    0x24) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a34c (    0x28) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a374 (    0x48) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a3bc (    0x18) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a3d4 (    0x4c) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a420 (    0x50) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a470 (    0x44) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a4b4 (    0x80) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a534 (    0x40) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a574 (    0x5c) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a5d0 (    0x8c) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a65c (    0x5c) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a6b8 (    0x68) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a720 (    0x28) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a748 (    0x24) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a76c (    0x20) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a78c (    0x20) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a7ac (    0x74) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a820 (    0x84) GCC_except_table96 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a8a4 (    0x20) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a8c4 (    0x34) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a8f8 (    0x2c) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a924 (    0x2c) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a950 (    0x8c) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x000000018ce3a9dc (    0x30) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aa0c (    0x74) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aa80 (    0xa0) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab20 (    0x20) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab40 (    0x20) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab60 (     0xc) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab6c (     0xc) GCC_except_table152 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab78 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab88 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ab98 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce3abb8 (    0x1c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce3abd4 (     0xc) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce3abe0 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce3abf4 (    0x28) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ac1c (    0x1c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ac38 (     0xc) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ac44 (    0x2c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ac70 (    0x30) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aca0 (    0x20) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000018ce3acc0 (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce3acd0 (    0x24) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce3acf4 (    0x2c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ad20 (    0x2c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ad4c (    0x20) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ad6c (     0xc) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ad78 (    0x2c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ada4 (    0x58) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x000000018ce3adfc (    0x38) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ae34 (    0x3c) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ae70 (     0xc) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ae7c (     0xc) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ae88 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aeac (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aec8 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aed4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3aef4 (     0xc) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce3af00 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce3af10 (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce3af34 (    0x2c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce3af60 (     0xc) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce3af6c (    0x44) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce3afb0 (    0x24) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce3afd4 (    0x18) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x000000018ce3afec (    0x3c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b028 (    0x28) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b050 (    0x48) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b098 (    0xa4) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b13c (    0x3c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b178 (    0x24) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b19c (    0x20) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b1bc (    0x84) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b240 (    0x78) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b2b8 (    0x14) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b2cc (    0x24) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b2f0 (    0x38) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b328 (    0x7c) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b3a4 (    0x24) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b3c8 (    0x24) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b3ec (    0x20) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b40c (    0x14) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b420 (    0x24) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b444 (    0x1c) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b460 (    0x1c) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b47c (    0x44) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b4c0 (     0xc) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b4cc (    0x14) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b4e0 (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b4f4 (    0x38) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b52c (    0x24) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b550 (    0x28) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b578 (     0xc) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b584 (     0xc) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b590 (     0xc) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b59c (    0x1c) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b5b8 (     0xc) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b5c4 (     0xc) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b5d0 (     0xc) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b5dc (    0x20) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b5fc (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b61c (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b628 (    0x20) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b648 (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b66c (     0xc) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b678 (    0x48) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b6c0 (    0x34) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b6f4 (    0x20) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b714 (    0x28) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b73c (     0xc) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b748 (    0x24) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b76c (    0x2c) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b798 (    0x14) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b7ac (    0x28) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b7d4 (    0x2c) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b800 (     0xc) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b80c (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b824 (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b84c (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b85c (     0xc) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b868 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b888 (    0x1c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b8a4 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b8b0 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b8bc (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b8dc (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b8f8 (     0xc) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b904 (    0x20) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b924 (    0x1c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b940 (     0xc) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b94c (    0x20) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b96c (     0xc) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b978 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b998 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b9c0 (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3b9cc (    0x90) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ba5c (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ba7c (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3ba98 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3baa4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bac4 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bae0 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x000000018ce3baec (    0x5c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bb48 (    0x88) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bbd0 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bbe4 (    0x1c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc00 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc14 (    0x1c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc30 (    0x20) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc50 (    0x38) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc88 (    0x14) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bc9c (    0x20) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bcbc (    0x18) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bcd4 (    0x1c) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bcf0 (    0x1c) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bd0c (    0x44) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bd50 (    0x1c) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bd6c (    0x20) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bd8c (    0x1c) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x000000018ce3bda8 (    0x5c) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x000000018ce3be04 (    0x1c) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x000000018ce3be20 (   0x2a0) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c0c0 (    0x58) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c118 (    0x60) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c178 (    0x74) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c1ec (    0x18) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c204 (    0x70) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c274 (    0x18) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c28c (     0xc) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c298 (    0x24) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c2bc (    0x3c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c2f8 (    0x20) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c318 (     0xc) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c324 (    0x1c) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c340 (    0x28) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c368 (     0xc) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c374 (    0x20) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c394 (    0x14) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c3a8 (    0x28) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c3d0 (    0x30) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c400 (    0x68) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c468 (    0x18) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c480 (    0x14) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c494 (    0x28) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x000000018ce3c4bc (    0x64) GCC_except_table88 [NameNList, MangledNameNList, NList] 
            0x000000018ce3c520 (  0x378c) __TEXT __unwind_info
            0x000000018ce3fcb0 (   0x344) __TEXT __eh_frame
        0x00000001d3ab8d58 (  0x1560) __DATA_CONST SEGMENT
            0x00000001d3ab8d58 (    0x98) __DATA_CONST __got
            0x00000001d3ab8df0 (  0x14c8) __DATA_CONST __const
                0x00000001d3ab8df0 (    0xf0) step0_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab8ee0 (    0xf0) step1a_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab8fd0 (   0x480) step2_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9450 (   0x180) step3_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab95d0 (   0x420) step4_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab99f0 (    0x60) step5b_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a50 (     0x8) kSKLanguageTypes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a58 (     0x8) kSKSubstitutions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a60 (     0x8) kSKStopWords [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a68 (     0x8) kSKMinTermLength [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a70 (     0x8) kSKProximityIndexing [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a78 (     0x8) kSKMaximumTerms [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a80 (     0x8) kSKTermChars [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a88 (     0x8) kSKStartTermChars [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a90 (     0x8) kSKEndTermChars [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d3ab9a98 (   0x800) sUniChars [NameNList, MangledNameNList, NList] 
                0x00000001d3aba298 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
        0x00000001dbafb230 (  0x8c40) __AUTH_CONST SEGMENT
            0x00000001dbafb230 (  0x1280) __AUTH_CONST __cfstring
            0x00000001dbafc4b0 (  0x70e0) __AUTH_CONST __const
                0x00000001dbafc4b0 (    0x28) vtable for HighLevelQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc4d8 (    0x18) typeinfo for HighLevelQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc4f0 (    0x28) vtable for IAHit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc518 (    0x28) vtable for IAProgressReport [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc540 (    0x60) vtable for IAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc5a0 (    0x18) typeinfo for IAHit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc5b8 (    0x18) typeinfo for IAProgressReport [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc5d0 (    0x18) typeinfo for IAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc5e8 (   0x208) vtable for InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc7f0 (    0x38) VTT for InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc828 (   0x188) construction vtable for InvertedAccessor-in-InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafc9b0 (   0x190) construction vtable for VectorAccessor-in-InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcb40 (    0x38) typeinfo for InVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcb78 (   0x188) vtable for InvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcd00 (    0x10) VTT for InvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcd10 (    0x28) vtable for FreqPSQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcd38 (    0x28) vtable for InvertedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcd60 (    0x28) typeinfo for InvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcd88 (    0x18) typeinfo for FreqPSQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcda0 (    0x18) typeinfo for InvertedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcdb8 (    0x28) vtable for RankedProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcde0 (    0x28) vtable for RankedHit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafce08 (    0x98) vtable for RankedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcea0 (    0x18) typeinfo for RankedProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafceb8 (    0x18) typeinfo for RankedHit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafced0 (    0x18) typeinfo for RankedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcee8 (    0x28) vtable for RHQByDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcf10 (    0x28) vtable for RankedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcf38 (    0x18) typeinfo for RHQByDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcf50 (    0x18) typeinfo for RankedHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcf68 (    0x20) vtable for RQEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcf88 (    0x70) vtable for IAQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafcff8 (    0x28) vtable for TFMapQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd020 (    0x70) vtable for IARankedQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd090 (    0x70) vtable for IATextStreamQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd100 (    0x28) vtable for IAQueryIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd128 (    0x18) typeinfo for IAQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd140 (    0x18) typeinfo for IATextStreamQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd158 (    0x18) typeinfo for RQEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd170 (    0x18) typeinfo for TFMapQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd188 (    0x18) typeinfo for IARankedQuery [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd1a0 (    0x18) typeinfo for IAQueryIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd1b8 (    0x28) vtable for Similarity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd1e0 (    0x18) typeinfo for Similarity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd1f8 (    0x20) vtable for TIAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd218 (    0x20) vtable for TIASearchResults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd238 (    0x18) typeinfo for TIAAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd250 (    0x18) typeinfo for TIASearchResults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd268 (   0x1a0) vtable for TIAInvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd408 (    0x20) VTT for TIAInvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd428 (   0x188) construction vtable for InvertedAccessor-in-TIAInvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd5b0 (    0x18) typeinfo for TIAInvertedAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd5c8 (   0x1a8) vtable for TIAVectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd770 (    0x20) VTT for TIAVectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd790 (   0x190) construction vtable for VectorAccessor-in-TIAVectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd920 (    0x18) typeinfo for TIAVectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafd938 (   0x220) vtable for TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafdb58 (    0x50) VTT for TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafdba8 (   0x208) construction vtable for InVecAccessor-in-TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafddb0 (   0x188) construction vtable for InvertedAccessor-in-TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafdf38 (   0x190) construction vtable for VectorAccessor-in-TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe0c8 (    0x18) typeinfo for TIAInVecAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe0e0 (    0x28) vtable for TWVector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe108 (    0x18) typeinfo for TWVector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe120 (    0x28) vtable for TWVectorAdder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe148 (    0x18) typeinfo for TWVectorAdder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe160 (   0x190) vtable for VectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe2f0 (    0x10) VTT for VectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe300 (    0x28) vtable for VectorScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe328 (    0x28) typeinfo for VectorAccessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe350 (    0x18) typeinfo for VectorScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe368 (    0x28) vtable for VectorHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe390 (    0x18) typeinfo for VectorHitQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe3a8 (    0x28) vtable for WeightedTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe3d0 (    0x18) typeinfo for WeightedTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe3e8 (    0x88) vtable for IATerm [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe470 (    0x30) vtable for IATokenStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe4a0 (    0x38) vtable for IAAnalysis [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe4d8 (    0x18) typeinfo for IATerm [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe4f0 (    0x18) typeinfo for IATokenStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe508 (    0x18) typeinfo for IAAnalysis [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe520 (    0x28) vtable for FreqTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe548 (    0x28) typeinfo for FreqTermQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe570 (    0x30) vtable for IADocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe5a0 (    0x88) vtable for IADoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe628 (    0x18) typeinfo for IADocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe640 (    0x18) typeinfo for IADoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe658 (    0xc0) vtable for IAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe718 (    0x18) typeinfo for IAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe730 (    0x30) vtable for IAQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe760 (    0x30) vtable for IAObjectQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe790 (    0x18) typeinfo for IAQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe7a8 (    0x18) typeinfo for IAObjectQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe7c0 (    0x28) vtable for IAQueueNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe7e8 (    0x18) typeinfo for IAQueueNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafe800 (   0x3e0) vtable for InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafebe0 (    0x38) VTT for InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafec18 (   0x368) construction vtable for InvertedIndex-in-InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafef80 (   0x320) construction vtable for VectorIndex-in-InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff2a0 (    0x38) typeinfo for InVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff2d8 (    0x38) vtable for FreqPS [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff310 (    0x90) vtable for InvertedTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff3a0 (    0x90) vtable for InvertedBlockTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff430 (   0x368) vtable for InvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff798 (    0x10) VTT for InvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff7a8 (    0x38) vtable for FreqPSImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff7e0 (    0x18) typeinfo for FreqPS [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff7f8 (    0x18) typeinfo for InvertedTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff810 (    0x18) typeinfo for InvertedBlockTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff828 (    0x28) typeinfo for InvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff850 (    0x18) typeinfo for FreqPSImpl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff868 (    0x88) vtable for TermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff8f0 (    0x88) vtable for DocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaff978 (    0x88) vtable for IDTerm [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffa00 (    0x88) vtable for IDDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffa88 (    0x30) vtable for TIDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffab8 (    0x28) vtable for DocUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffae0 (   0x160) vtable for TermIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffc40 (    0x80) vtable for TermOffsets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffcc0 (    0x88) vtable for ProximityInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffd48 (    0x88) vtable for IDDocCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffdd0 (    0x18) typeinfo for IDDoc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffde8 (    0x18) typeinfo for IDDocCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffe00 (    0x18) typeinfo for TermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffe18 (    0x18) typeinfo for DocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffe30 (    0x18) typeinfo for IDTerm [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffe48 (    0x88) vtable for TIDRename [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffed0 (    0x18) typeinfo for TIDRename [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbaffee8 (    0x18) typeinfo for TIDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafff00 (    0x18) typeinfo for DocUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafff18 (    0x18) typeinfo for TermIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafff30 (    0x18) typeinfo for TermOffsets [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafff48 (    0x18) typeinfo for ProximityInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafff60 (    0x88) vtable for TermInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbafffe8 (    0x18) typeinfo for TermInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00000 (    0x88) vtable for DocInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00088 (    0x18) typeinfo for DocInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb000a0 (    0x88) vtable for IATermKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00128 (    0x18) typeinfo for IATermKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00140 (    0x28) vtable for TermInfoStreamQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00168 (    0x18) typeinfo for TermInfoStreamQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00180 (    0x28) vtable for TFVector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb001a8 (    0x18) typeinfo for TFVector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb001c0 (    0x90) vtable for TIADocPropertyEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00250 (    0x90) vtable for TIADocPropertyEntryNew [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb002e0 (    0x18) typeinfo for TIADocPropertyEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb002f8 (    0x18) typeinfo for TIADocPropertyEntryNew [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00310 (   0x370) vtable for TIAInvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00680 (    0x20) VTT for TIAInvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb006a0 (   0x340) vtable for TIAVectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb009e0 (    0x20) VTT for TIAVectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00a00 (   0x3e8) vtable for TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00de8 (    0x50) VTT for TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00e38 (    0x20) vtable for TIAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00e58 (    0x28) vtable for TIAIndexDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb00e80 (   0x368) construction vtable for InvertedIndex-in-TIAInvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb011e8 (    0x18) typeinfo for TIAInvertedIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01200 (   0x320) construction vtable for VectorIndex-in-TIAVectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01520 (    0x18) typeinfo for TIAVectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01538 (   0x3e0) construction vtable for InVecIndex-in-TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01918 (   0x368) construction vtable for InvertedIndex-in-TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01c80 (   0x320) construction vtable for VectorIndex-in-TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01fa0 (    0x18) typeinfo for TIAInVecIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01fb8 (    0x18) typeinfo for TIAIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01fd0 (    0x18) typeinfo for TIAIndexDocIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb01fe8 (    0x30) vtable for IADocRefQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02018 (    0x18) typeinfo for IADocRefQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02030 (    0x28) vtable for TermIdUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02058 (   0x320) vtable for VectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02378 (    0x10) VTT for VectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02388 (    0x50) vtable for IDTermMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb023d8 (    0x88) vtable for VectorDocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02460 (    0x18) typeinfo for VectorDocInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02478 (    0x28) typeinfo for TermIdUpdateSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb024a0 (    0x28) typeinfo for VectorIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb024c8 (    0x18) typeinfo for IDTermMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb024e0 (    0x48) vtable for TermIDSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02528 (    0x18) typeinfo for TermIDSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02540 (    0x28) vtable for BitArray [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02568 (    0x18) typeinfo for BitArray [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02580 (    0x20) vtable for Scroll [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb025a0 (    0xd0) vtable for BTree [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02670 (    0x30) vtable for BTreeIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb026a0 (    0x18) typeinfo for Scroll [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb026b8 (    0x18) typeinfo for BTree [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb026d0 (    0x18) typeinfo for BTreeIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb026e8 (    0x28) vtable for LevelInfoList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02710 (    0x18) typeinfo for PtrList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02728 (    0x18) typeinfo for LevelInfoList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02740 (    0x28) vtable for PtrList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02768 (    0x28) vtable for BulkUpdateList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02790 (    0x18) typeinfo for BulkUpdateList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb027a8 (    0x20) vtable for IteratorFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb027c8 (    0x18) typeinfo for IteratorFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb027e0 (    0x20) vtable for PageCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02800 (    0x48) vtable for Page [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02848 (    0x28) vtable for PageCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02870 (    0x48) vtable for Leaf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb028b8 (    0x18) typeinfo for Page [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb028d0 (    0x18) typeinfo for Leaf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb028e8 (    0x18) typeinfo for PageCacheEntry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02900 (    0x18) typeinfo for PageCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02918 (    0x20) vtable for IAStruct [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02938 (    0x28) vtable for IAObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02960 (    0x10) typeinfo for IAStruct [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02970 (    0x18) typeinfo for IAObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02988 (    0x10) typeinfo for std::bad_alloc [NameNList, MangledNameNList, NList] 
                0x00000001dbb02998 (    0x30) vtable for IAMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb029c8 (    0x10) typeinfo for IAMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb029d8 (    0x50) vtable for IADefaultMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02a28 (    0x38) typeinfo for IADefaultMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02a60 (    0x28) vtable for IAObjRefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02a88 (    0x20) vtable for IARefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02aa8 (    0x18) typeinfo for IAObjRefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02ac0 (    0x10) typeinfo for IARefCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02ad0 (    0x70) vtable for IAStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02b40 (    0x30) vtable for IAOrderedStorableIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02b70 (    0xd0) vtable for IAOrderedStorableSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02c40 (    0x88) vtable for IAOrderedStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02cc8 (    0x18) typeinfo for IAStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02ce0 (    0x18) typeinfo for IAOrderedStorableIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02cf8 (    0x18) typeinfo for IAOrderedStorableSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02d10 (    0x18) typeinfo for IAOrderedStorable [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02d28 (    0x28) vtable for IAStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02d50 (    0x78) vtable for IAOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02dc8 (    0x80) vtable for IAMemoryOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02e48 (    0x18) typeinfo for IAOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02e60 (    0x18) typeinfo for IAStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02e78 (    0x18) typeinfo for IAMemoryOutputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02e90 (    0x28) vtable for TFMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02eb8 (    0x18) typeinfo for TFMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02ed0 (    0x48) vtable for UInt32Set [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02f18 (    0x18) typeinfo for UInt32Set [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02f30 (    0x50) vtable for UInt32VoidMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02f80 (    0x18) typeinfo for UInt32VoidMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb02f98 (    0xc0) step1b_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03058 (   0x300) step1b1_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03358 (    0x60) step1c_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb033b8 (    0x60) step5a_rules [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03418 (    0x88) vtable for QueryTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb034a0 (    0x18) typeinfo for QueryTermInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb034b8 (    0x38) vtable for SpotlightQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb034f0 (    0x18) typeinfo for QueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03508 (    0x18) typeinfo for SpotlightQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03520 (    0x38) vtable for LegacyQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03558 (    0x18) typeinfo for LegacyQueryTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dbb03570 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
            0x00000001dbb03590 (    0x18) __AUTH_CONST __auth_ptr
            0x00000001dbb035a8 (   0x8c8) __AUTH_CONST __auth_got
        0x00000001d732dab0 (   0x118) __AUTH SEGMENT
            0x00000001d732dab0 (   0x118) __AUTH __data
                0x00000001d732dab0 (    0x30) TermUpdateCFSetCallBacks [NameNList, MangledNameNList, NList] 
                0x00000001d732dae0 (    0x30) ProtoPostingCFSetCallBacks [NameNList, MangledNameNList, NList] 
                0x00000001d732db10 (     0x8) IANewMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d732db18 (    0x30) SKDocIDScorePostingCFSetCallBacks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d732db48 (    0x30) SKDocIDScorePostingClientCFSetCallBacks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d732db78 (    0x28) QueryTermInfoCFDictionaryValueCallBacks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d732dba0 (    0x28) SKQueryNodeCFDictionaryValueCallBacks [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d5d47650 (   0x751) __DATA SEGMENT
            0x00000001d5d47650 (   0x2cc) __DATA __data
                0x00000001d5d47650 (    0x10) initializeIAGlobalMutexOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5d47660 (    0x10) initializeIATaskKeyOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5d47670 (    0x40) SKGetMutex()::sInitMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d476b0 (    0x40) gTokenizerLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d476f0 (    0x10) initializeCITokenizerOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5d47700 (     0x8) sSKDocumentTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47708 (     0x8) InitSKDocument.sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47710 (    0x60) InitSKDocument.sSKDocumentClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47770 (     0x8) sTextAnalysisInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47778 (     0x8) sTextAnalysisRegistry [NameNList, MangledNameNList, NList] 
                0x00000001d5d47780 (     0x8) sTaskKey [NameNList, MangledNameNList, NList] 
                0x00000001d5d47788 (     0x8) sMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d47790 (     0x8) LoggingEnabled()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47798 (     0x8) sSKIndexTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d477a0 (     0x8) sSKMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d477a8 (     0x8) sIndexStorageDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d5d477b0 (     0x8) InitSKIndex()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d477b8 (    0x60) InitSKIndex()::sSKIndexClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47818 (     0x8) ci_log.sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47820 (     0x8) gTokenizerDict [NameNList, MangledNameNList, NList] 
                0x00000001d5d47828 (     0x8) kIAStoreStreamCFDataType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47830 (     0x8) kIAStoreStreamFileType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47838 (     0x8) AIAT_hexchars [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47840 (    0x40) IALoadDefaultExtractorPlugIns.sLoadExtractorMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d47880 (     0x4) sASCIIEncoding [NameNList, MangledNameNList, NList] 
                0x00000001d5d47884 (     0x4) OrderedStorableSetType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47888 (     0x8) gIAPageSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47890 (    0x40) RefCountMutexLock.sInitMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d478d0 (     0x8) SKlineno [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d478d8 (    0x40) sSKParserMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d47918 (     0x4) g_log_level [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5d47920 (   0x3f9) __DATA __bss
                0x00000001d5d47920 (     0x8) gAIATReportErrorCallback [NameNList, MangledNameNList, NList] 
                0x00000001d5d47928 (     0x8) GetDefaultAccessorName()::defaultAccessorName [NameNList, MangledNameNList, NList] 
                0x00000001d5d47930 (     0x8) GetDefaultTextExtractorType.defaultTextExtractorName [NameNList, MangledNameNList, NList] 
                0x00000001d5d47938 (     0x8) sDocSchemeInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47940 (     0x8) sDocSchemeRegistry [NameNList, MangledNameNList, NList] 
                0x00000001d5d47948 (     0x8) GetHFSFolderMIMEType.sHFSFolderMIMEType [NameNList, MangledNameNList, NList] 
                0x00000001d5d47950 (     0x8) sExtensionMappings [NameNList, MangledNameNList, NList] 
                0x00000001d5d47958 (     0x8) sTypeMappings [NameNList, MangledNameNList, NList] 
                0x00000001d5d47960 (     0x8) IALoadDefaultExtractorPlugIns.sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47968 (     0x8) GetDefaultSentenceParserName.defaultSentenceParserName [NameNList, MangledNameNList, NList] 
                0x00000001d5d47970 (     0x8) sSentenceParserRegistry [NameNList, MangledNameNList, NList] 
                0x00000001d5d47978 (     0x8) TextStreamGetCurrentEncoding.unicodeStr [NameNList, MangledNameNList, NList] 
                0x00000001d5d47980 (     0x8) GetProgressKeyStr()::sProgressKey [NameNList, MangledNameNList, NList] 
                0x00000001d5d47988 (     0x8) GetDocNameKeyStr()::sDocNameKeyStr [NameNList, MangledNameNList, NList] 
                0x00000001d5d47990 (     0x8) IASummaryCopyParagraphAtIndex.lastSummaryRef [NameNList, MangledNameNList, NList] 
                0x00000001d5d47998 (     0x8) IASummaryCopyParagraphAtIndex.lastInI [NameNList, MangledNameNList, NList] 
                0x00000001d5d479a0 (     0x8) IASummaryCopyParagraphAtIndex.whereWeLeftOffLastTime [NameNList, MangledNameNList, NList] 
                0x00000001d5d479a8 (     0x8) sRefCountInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d479b0 (    0x40) sRefCountMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5d479f0 (     0x9) GetFileFolderMIMEType.sFileFolderMIMEType [NameNList, MangledNameNList, NList] 
                0x00000001d5d479f9 (     0x7) LoggingEnabled()::sEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a00 (     0x8) sSKIndexDocumentIteratorTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a08 (     0x8) sSKSearchGroupTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a10 (     0x8) sSKSearchTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a18 (     0x8) sSKSearchResultsTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a20 (     0x8) InitSKIndexDocumentIterator()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a28 (    0x60) InitSKIndexDocumentIterator()::sSKIndexDocumentIteratorClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a88 (     0x8) InitSKSearchGroup()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47a90 (    0x60) InitSKSearchGroup()::sSKSearchGroupClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47af0 (     0x8) InitSKSearch()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47af8 (    0x60) InitSKSearch()::sSKSearchClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47b58 (     0x8) InitSKSearchResults()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47b60 (    0x60) InitSKSearchResults()::sSKSearchResultsClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bc0 (     0x4) yy_init [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bc4 (     0x4) yy_start [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bc8 (     0x8) yy_buffer_stack [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bd0 (     0x8) yy_buffer_stack_top [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bd8 (     0x8) yy_c_buf_p [NameNList, MangledNameNList, NList] 
                0x00000001d5d47be0 (     0x4) yy_hold_char [NameNList, MangledNameNList, NList] 
                0x00000001d5d47be4 (     0x4) yy_last_accepting_state [NameNList, MangledNameNList, NList] 
                0x00000001d5d47be8 (     0x8) yy_last_accepting_cpos [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bf0 (     0x8) yy_n_chars [NameNList, MangledNameNList, NList] 
                0x00000001d5d47bf8 (     0x8) yy_did_buffer_switch_on_eof [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c00 (     0x8) yy_buffer_stack_max [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c08 (     0x8) sSKGrammarNodes [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c10 (     0x8) sSKAutoRelease [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c18 (     0x8) sSKInputBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c20 (     0x4) sSKInputBufferLength [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c24 (     0xc) sSKInputBufferPosition [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c30 (     0x1) sLogQueryInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c31 (     0x1) sLogQuery [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c32 (     0xe) sClosenessMultiplier (.init) [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c40 (    0x28) sClosenessMultiplier (.body) [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c68 (     0x8) sSKSummaryTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c70 (     0x8) InitSKSummary()::sInited [NameNList, MangledNameNList, NList] 
                0x00000001d5d47c78 (    0x60) InitSKSummary()::sSKSummaryClassInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5d47cd8 (     0x8) sImportersDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d5d47ce0 (     0x8) sInterfacesDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d5d47ce8 (     0x8) sInterfacesURLDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d5d47cf0 (     0x8) CITokenizerCreate.sLogged [NameNList, MangledNameNList, NList] 
                0x00000001d5d47cf8 (     0x8) _CITokenizerCopyQueryTokens.sWhiteSpaceCharacterSet [NameNList, MangledNameNList, NList] 
                0x00000001d5d47d00 (     0x8) _CITokenizerCopyQueryTokens.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5d47d08 (     0x8) CILocaleGetInfo.sLocaleStr [NameNList, MangledNameNList, NList] 
                0x00000001d5d47d10 (     0x8) CILocaleGetInfo.sVersionInfoData [NameNList, MangledNameNList, NList] 
                0x00000001d5d47d18 (     0x1) CILocaleGetInfo.sInited [NameNList, MangledNameNList, NList] 
            0x00000001d5d47d20 (    0x81) __DATA __common
                0x00000001d5d47d20 (     0x8) gAIATAllocator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d28 (     0x8) IAAnalysis::sMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d30 (     0x8) kIAFSRefDocScheme [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d38 (     0x8) gEncodingMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d40 (     0x8) kIAIndexDefaultAnalysis [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d48 (     0x8) kIAStoreStreamFSRefType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d50 (     0x4) gSKGlobalFlags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d54 (     0x4) sSKDocumentNumberTermLimit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d58 (     0x8) SKin [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d60 (     0x8) SKout [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d68 (     0x8) SK_flex_debug [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d70 (     0x8) SKleng [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d78 (     0x8) SKtext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d80 (     0x8) SKchar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d88 (     0x8) SKlval [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d90 (     0x8) SKnerrs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47d98 (     0x8) gSKParseResult [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d47da0 (     0x1) gSKSpaceMeansOr [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
