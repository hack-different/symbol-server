/System/Library/PrivateFrameworks/VoiceTrigger.framework/Versions/A/VoiceTrigger [arm64e, 0.096969 seconds]:
    FEE6FC12-3D26-32BC-A06C-C4E21E8D1A6E /System/Library/PrivateFrameworks/VoiceTrigger.framework/Versions/A/VoiceTrigger [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001a63d9000 ( 0xa3000) __TEXT SEGMENT
            0x00000001a63d9000 (  0x1a8c) MACH_HEADER
            0x00000001a63daa8c ( 0x87f2c) __TEXT __text
                0x00000001a63daa8c (   0x20c) -[VTPreferences(Endpoint) setPreferences:forEndpoint:inPreferenceDomain:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dac98 (   0x374) -[VTPreferences(Endpoint) getPreferencesForEndpoint:fromPreferenceDomain:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63db00c (   0x67c) +[VTVoiceProfileMigration updateVoiceProfileVersionFileForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63db688 (   0x9d4) +[VTVoiceProfileMigration migrateVoiceProfileToVersion:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dc05c (    0x38) +[VTVoiceProfileMigration checkIfMigrationNecessaryForCompatibilityVersion:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dc094 (   0x2b8) +[VTVoiceProfileMigration getCurrentVoiceProfileVersionForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dc34c (   0x3b4) +[VTSpeakerIdUtilities deleteExistingSATModelForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dc700 (    0xec) +[VTSpeakerIdUtilities timeStampWithSaltGrain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dc7ec (   0x228) +[VTSpeakerIdUtilities getSortedEnrollmentUtterancesForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dca14 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dca24 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dca2c (    0x60) __77+[VTSpeakerIdUtilities getSortedEnrollmentUtterancesForType:forLanguageCode:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dca8c (    0x40) __destroy_helper_block_e8_32s40r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dcacc (    0x48) __copy_helper_block_e8_32s40r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dcb14 (   0x33c) +[VTSpeakerIdUtilities getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dce50 (    0x60) __87+[VTSpeakerIdUtilities getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dceb0 (   0x20c) __87+[VTSpeakerIdUtilities getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd0bc (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd0c4 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd0cc (   0x27c) +[VTSpeakerIdUtilities getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd348 (    0x60) __85+[VTSpeakerIdUtilities getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd3a8 (   0x140) __85+[VTSpeakerIdUtilities getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd4e8 (    0xf0) __85+[VTSpeakerIdUtilities getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd5d8 (   0x220) +[VTSpeakerIdUtilities getExplicitEnrollmentUtterancesForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd7f8 (    0x60) __79+[VTSpeakerIdUtilities getExplicitEnrollmentUtterancesForType:forLanguageCode:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd858 (    0xf0) __79+[VTSpeakerIdUtilities getExplicitEnrollmentUtterancesForType:forLanguageCode:]_block_invoke.42 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd948 (    0x9c) +[VTSpeakerIdUtilities _getAssetHashFromConfigPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dd9e4 (    0x68) +[VTSpeakerIdUtilities getProfileVersionFilePathForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dda4c (     0xc) +[VTSpeakerIdUtilities getSpeakerModelPathForType:withLanguageCode:withConfigPath:createDirectory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dda58 (   0x388) +[VTSpeakerIdUtilities createSATDirectoriesForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ddde0 (   0x104) +[VTSpeakerIdUtilities getSATAudioDirectoryForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ddee4 (   0x104) +[VTSpeakerIdUtilities getSATModelDirectoryForType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ddfe8 (   0x168) +[VTSpeakerIdUtilities getSATDirectoryForModelType:forLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de150 (    0xc0) +[VTSpeakerIdUtilities stringForVTSpIdType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de210 (    0xf4) +[VTSpeakerIdUtilities getSATDirectoryForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de304 (    0x28) TSHMMDetector::~TSHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de32c (   0x30c) TSHMMDetector::~TSHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de638 (   0x124) NArray<NLRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de75c (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de768 (   0x194) NArray<NArray<bool>>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63de8fc (   0x17c) NArray<NArray<bool>>::fromArray(NArray<bool> const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dea78 (   0x180) NArray<NArray<bool>>::operator=(NArray<NArray<bool>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63debf8 (    0xc8) NArray<NArray<bool>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63decc0 (    0xb8) NArray<NArray<bool>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ded78 (   0x228) NArray<NLRHMMModel>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63defa0 (   0x20c) NLRHMMModel::operator=(NLRHMMModel const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df1ac (   0x218) NArray<NLRHMMModel>::fromArray(NLRHMMModel const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df3c4 (   0x21c) NArray<NLRHMMModel>::operator=(NArray<NLRHMMModel> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df5e0 (    0x28) NArray<NLRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df608 (     0x4) NArray<NLRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df60c (   0x108) NArray<float>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df714 (    0xdc) NArray<float>::fromArray(float const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df7f0 (    0xe8) NArray<float>::operator=(NArray<float> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df8d8 (    0x5c) NArray<float>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df934 (    0x4c) NArray<float>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63df980 (   0x108) NArray<int>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dfa88 (    0x90) NArray<int>::fromArray(int const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dfb18 (    0x9c) NArray<int>::operator=(NArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dfbb4 (    0x5c) NAutoArray<unsigned int>::~NAutoArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dfc10 (    0x4c) NAutoArray<unsigned int>::~NAutoArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dfc5c (   0x318) NArray<NLRHMMStateTokens>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63dff74 (   0x300) NArray<NLRHMMStateTokens>::fromArray(NLRHMMStateTokens const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0274 (   0x310) NArray<NLRHMMStateTokens>::operator=(NArray<NLRHMMStateTokens> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0584 (   0x100) NArray<NLRHMMStateTokens>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0684 (    0xf0) NArray<NLRHMMStateTokens>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0774 (   0x144) NArray<bool>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e08b8 (   0x11c) NArray<bool>::fromArray(bool const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e09d4 (   0x128) NArray<bool>::operator=(NArray<bool> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0afc (    0x5c) NArray<bool>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0b58 (    0x4c) NArray<bool>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0ba4 (     0x4) TSHMMDetector::~TSHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e0ba8 (   0x4f0) NLRHMMModel::init(NPhoneHMM const&, int const&, float const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e1098 (   0x1d8) NLRHMMStateTokens::init(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e1270 (    0x5c) NLRHMMStateTokens::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e12cc (   0x204) TSHMMDetector::TSHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e14d0 (    0x5c) NFrame::~NFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e152c (    0x4c) NFrame::~NFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e1578 (     0x4) TSHMMDetector::TSHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e157c (  0x1410) TSHMMDetector::init(NString const&, NString const&, NString const&, NString const&, NString const&, NString const&, float, unsigned int, unsigned int, unsigned int, unsigned int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e298c (   0x184) TSHMMDetector::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e2b10 (    0xb8) NArray<NString>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e2bc8 (   0x21c) NArray<NString>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e2de4 (   0x1ec) NArray<NString>::fromArray(NString const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e2fd0 (   0x1f8) NArray<NString>::operator=(NArray<NString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e31c8 (    0xc8) NArray<NString>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3290 (     0xc) TSHMMDetector::disablePriming() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e329c (   0x118) TSHMMDetector::feedFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e33b4 (   0x3a4) TSHMMDetector::stepFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3758 (   0x3c0) TSHMMDetector::updateStateProbs(NLRHMMModel const&, NLRHMMStateTokens&, float const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3b18 (   0x114) TSHMMDetector::skipUntilInitialize(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3c2c (   0x104) TSHMMDetector::skipUntilProcessedFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3d30 (    0x40) TSHMMDetector::maxScore(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3d70 (     0x8) TSHMMDetector::partialScore() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3d78 (    0x20) TSHMMDetector::partialLength() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3d98 (     0x8) TSHMMDetector::score() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3da0 (    0x10) TSHMMDetector::bestLength() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3db0 (     0x8) TSHMMDetector::bestPhrase() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3db8 (    0x70) TSHMMDetector::scorePhrase(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3e28 (    0x68) TSHMMDetector::bestLengthPhrase(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3e90 (     0x8) TSHMMDetector::numPhrases() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3e98 (    0x20) TSHMMDetector::frameLatency() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3eb8 (    0x20) TSHMMDetector::numStates() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3ed8 (    0x2c) TSHMMDetector::stateAlignment(NArray<unsigned int>&, unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3f04 (    0x2c) TSHMMDetector::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3f30 (    0x68) _baseDir [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e3f98 (    0x84) VTLogDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e401c (    0x54) VTAudioLogDirectory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4070 (    0x94) __VTAudioLogDirectory_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4104 (   0x30c) VTMakeTimestampedAudioLogFilenameWithPrefixAndSuffix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4410 (    0x28) VTLogInitIfNeeded [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4438 (   0x104) __VTLogInitIfNeeded_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e453c (   0x1c8) TSSATScorer::~TSSATScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4704 (   0x1b8) TSSATScorer::~TSSATScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e48bc (   0x118) TSSATScorer::TSSATScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e49d4 (   0x118) TSSATScorer::TSSATScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4aec (   0x1b8) TSSATScorer::~TSSATScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e4ca4 (   0x550) TSSATScorer::init(NString const&, NString const&, unsigned int const&, bool const&, bool const&, bool const&, float const&, unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e51f4 (   0x170) TSSATScorer::setModelFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5364 (   0x3b4) TSSATScorer::score(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5718 (   0x100) TSSATScorer::normaliseVector(NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5818 (    0x2c) TSSATScorer::applyTransform(NFrame const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5844 (    0x68) TSSATScorer::scoreTransformed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e58ac (   0x1a4) TSSATScorer::scoreSpeakerVector(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5a50 (    0x5c) TSSATScorer::update() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5aac (    0x54) TSSATScorer::deleteVector(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5b00 (    0x3c) TSSATScorer::getSpeakerVector(NArray<float>&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5b3c (    0x2c) TSSATScorer::getSpeakerVectorDimen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5b68 (     0x8) TSSATScorer::vectorCount() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5b70 (    0x44) TSSATScorer::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5bb4 (    0xd8) TSSupervectorScorer::~TSSupervectorScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5c8c (    0xc8) TSSupervectorScorer::~TSSupervectorScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5d54 (    0x70) TSSupervectorScorer::TSSupervectorScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5dc4 (    0x70) TSSupervectorScorer::TSSupervectorScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5e34 (    0xc8) TSSupervectorScorer::~TSSupervectorScorer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e5efc (   0x384) TSSupervectorScorer::init(NString const&, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e6280 (   0x11c) TSSupervectorScorer::score(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e639c (    0x28) NDEHMMDetector::~NDEHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e63c4 (   0x130) NDEHMMDetector::~NDEHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e64f4 (   0x19c) NArray<NDELRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e6690 (   0x2ec) NArray<NDELRHMMModel>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e697c (   0x320) NDELRHMMModel::operator=(NDELRHMMModel const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e6c9c (   0x2dc) NArray<NDELRHMMModel>::fromArray(NDELRHMMModel const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e6f78 (   0x2dc) NArray<NDELRHMMModel>::operator=(NArray<NDELRHMMModel> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7254 (    0x28) NArray<NDELRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e727c (     0x4) NArray<NDELRHMMModel>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7280 (     0x4) NDEHMMDetector::~NDEHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7284 (    0xbc) NDELRHMMModel::NDELRHMMModel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7340 (    0xbc) NDELRHMMModel::NDELRHMMModel() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e73fc (   0x580) NDELRHMMModel::init(NDEHMMState const*, int const&, unsigned int const&, float const&, float const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e797c (    0x18) NDELRHMMModel::updateFirstStateOutputID(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7994 (    0x50) NDELRHMMModel::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e79e4 (   0x184) NDELRHMMModel::stepFrame(NArray<float> const&, float const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7b68 (    0xe4) NDEHMMDetector::NDEHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7c4c (    0xe4) NDEHMMDetector::NDEHMMDetector() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e7d30 (   0x5c8) NDEHMMDetector::init(NDEHMMDetectorConfig const*, char const*, unsigned int const&, char const*, unsigned int const&, float, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e82f8 (   0x230) NDEHMMDetector::initHMM(char const*, unsigned int const&, unsigned int const&, int const&, int const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8528 (    0xd4) NDEHMMDetector::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e85fc (   0x118) NDEHMMDetector::feedFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8714 (   0x178) NDEHMMDetector::stepFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e888c (     0x8) NDEHMMDetector::numKeywords() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8894 (    0x38) NDEHMMDetector::skipUntilProcessedFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e88cc (    0x40) NDEHMMDetector::maxScore(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e890c (     0x8) NDEHMMDetector::partialScore() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8914 (    0x20) NDEHMMDetector::partialLength() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8934 (    0x44) NDEHMMDetector::scorePhrase(unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8978 (    0x24) NDEHMMDetector::phraseScoreOffset(unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e899c (    0x38) NDEHMMDetector::bestLengthPhrase(unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e89d4 (    0x1c) NDEHMMDetector::frameLatency() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e89f0 (    0x7c) NSATImpostor::~NSATImpostor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8a6c (    0x6c) NSATImpostor::~NSATImpostor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8ad8 (    0x80) NSATImpostor::NSATImpostor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8b58 (    0x80) NSATImpostor::NSATImpostor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8bd8 (    0x6c) NSATImpostor::~NSATImpostor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e8c44 (   0x78c) NSATImpostor::load(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e93d0 (    0x54) NSmartPointer<NBaseFile>::setPointer(NBaseFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9424 (    0x7c) NSmartPointer<NBaseFile>::~NSmartPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e94a0 (    0x6c) NSmartPointer<NBaseFile>::~NSmartPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e950c (    0x7c) NFilePtr::~NFilePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9588 (    0x6c) NFilePtr::~NFilePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e95f4 (   0x430) NSATImpostor::score(NArray<float> const&, float&, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9a24 (   0x104) NSATImpostor::dotproduct(NArray<float> const&, float const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9b28 (   0x184) NSATImpostor::matrixvector(float const*, NArray<float> const&, float*, unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9cac (     0x8) NSATImpostor::dimen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9cb4 (    0xd4) NSATSpeaker::~NSATSpeaker() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9d88 (    0xc4) NSATSpeaker::~NSATSpeaker() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9e4c (   0x154) NSATSpeaker::NSATSpeaker() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63e9fa0 (   0x154) NSATSpeaker::NSATSpeaker() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ea0f4 (    0xc4) NSATSpeaker::~NSATSpeaker() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ea1b8 (   0x284) NSATSpeaker::configure(unsigned int const&, unsigned int const&, bool const&, bool const&, bool const&, float const&, unsigned int const&, NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ea43c (    0x6c) NSATSpeaker::loadOrInit() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ea4a8 (   0x694) NSATSpeaker::read() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eab3c (   0x124) NSATSpeaker::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eac60 (   0x518) NSATSpeaker::score(NArray<float> const&, float const&, float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb178 (   0x1bc) NSATSpeaker::findTopNAverage(float const*, unsigned int const&, unsigned int const&, bool const&, float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb334 (   0x188) NSATSpeaker::findPercentile(float const*, unsigned int const&, float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb4bc (   0x184) NSATSpeaker::matrixvector(float const*, NArray<float> const&, float*, unsigned int const&, unsigned int const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb640 (    0x80) NSATSpeaker::findMean(float const*, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb6c0 (   0x1ec) NSATSpeaker::calcModelNormScale() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb8ac (     0x8) NSATSpeaker::numInserted() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb8b4 (    0xb4) NSATSpeaker::insert(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eb968 (    0xb4) NSATSpeaker::remove(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eba1c (   0x138) NSATSpeaker::getVector(NArray<float>&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ebb54 (   0x5ec) NSATSpeaker::write() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec140 (    0x30) NSATSpeaker::writeIfModified() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec170 (    0xcc) NSATSpeaker::bubbleSort(float const*, float*, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec23c (   0x598) NDBlobBuildBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec7d4 (    0x30) NLinkedList<NMap<NString, NConfigSection>::HashItem>::deleteElement(NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec804 (   0x13c) NLinkedList<NMap<NString, NConfigSection>::HashItem>::newElement(NMap<NString, NConfigSection>::HashItem const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ec940 (   0x150) NMap<NString, NString>::NMap(NMap<NString, NString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eca90 (   0x1ac) NArray<NLinkedList<NMap<NString, NString>::HashItem>>::operator=(NArray<NLinkedList<NMap<NString, NString>::HashItem>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ecc3c (    0x30) NLinkedList<NMap<NString, NString>::HashItem>::deleteElement(NLinkedList<NMap<NString, NString>::HashItem>::NElement*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ecc6c (   0x114) NLinkedList<NMap<NString, NString>::HashItem>::newElement(NMap<NString, NString>::HashItem const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ecd80 (    0xa8) NLinkedList<NMap<NString, NString>::HashItem>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ece28 (    0x98) NLinkedList<NMap<NString, NString>::HashItem>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ecec0 (    0x68) NLinkedList<NMap<NString, NString>::HashItem>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ecf28 (   0x140) NLinkedList<NMap<NString, NString>::HashItem>::insert(unsigned int const&, NMap<NString, NString>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed068 (    0x7c) NLinkedList<NMap<NString, NString>::HashItem>::append(NMap<NString, NString>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed0e4 (    0x68) NLinkedList<NMap<NString, NString>::HashItem>::prepend(NMap<NString, NString>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed14c (    0x94) NLinkedList<NMap<NString, NString>::HashItem>::operator=(NLinkedList<NMap<NString, NString>::HashItem> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed1e0 (    0x94) NLinkedList<NMap<NString, NString>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed274 (    0x8c) NLinkedList<NMap<NString, NString>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed300 (    0xcc) NLinkedList<NMap<NString, NString>::HashItem>::removeElement(NLinkedList<NMap<NString, NString>::HashItem>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed3cc (   0x1c0) NArray<NLinkedList<NMap<NString, NString>::HashItem>>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed58c (   0x1a0) NArray<NLinkedList<NMap<NString, NString>::HashItem>>::fromArray(NLinkedList<NMap<NString, NString>::HashItem> const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed72c (    0xec) NArray<NLinkedList<NMap<NString, NString>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed818 (    0xdc) NArray<NLinkedList<NMap<NString, NString>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed8f4 (    0xec) NHash<NMap<NString, NString>::HashItem>::~NHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ed9e0 (    0xdc) NHash<NMap<NString, NString>::HashItem>::~NHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63edabc (   0x10c) NMap<NString, NString>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63edbc8 (    0xfc) NMap<NString, NString>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63edcc4 (    0x28) NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63edcec (   0x174) NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ede60 (     0x4) NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ede64 (    0x68) NLinkedList<NMap<NString, NConfigSection>::HashItem>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63edecc (   0x140) NLinkedList<NMap<NString, NConfigSection>::HashItem>::insert(unsigned int const&, NMap<NString, NConfigSection>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee00c (    0x7c) NLinkedList<NMap<NString, NConfigSection>::HashItem>::append(NMap<NString, NConfigSection>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee088 (    0x68) NLinkedList<NMap<NString, NConfigSection>::HashItem>::prepend(NMap<NString, NConfigSection>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee0f0 (    0x94) NLinkedList<NMap<NString, NConfigSection>::HashItem>::operator=(NLinkedList<NMap<NString, NConfigSection>::HashItem> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee184 (    0x94) NLinkedList<NMap<NString, NConfigSection>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee218 (    0x8c) NLinkedList<NMap<NString, NConfigSection>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee2a4 (    0xcc) NLinkedList<NMap<NString, NConfigSection>::HashItem>::removeElement(NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee370 (   0x1c0) NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee530 (   0x1a0) NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>>::fromArray(NLinkedList<NMap<NString, NConfigSection>::HashItem> const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee6d0 (   0x1ac) NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>>::operator=(NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee87c (    0xec) NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ee968 (    0xdc) NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eea44 (   0x10c) NMap<NString, NConfigSection>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eeb50 (    0xfc) NMap<NString, NConfigSection>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63eec4c (   0x49c) NDBlobGetBlobSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef0e8 (    0xfc) NConfig::~NConfig() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef1e4 (     0x8) NDBlobGetDefaultBlobSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef1ec (     0x8) NDBlobBuildDefaultBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef1f4 (    0x3c) NLRHMMTraceback::NLRHMMTraceback(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef230 (   0x1b8) N2DArray<bool>::N2DArray(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef3e8 (    0xc8) N2DArray<bool>::~N2DArray() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef4b0 (    0xb8) N2DArray<bool>::~N2DArray() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef568 (    0x3c) NLRHMMTraceback::NLRHMMTraceback(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef5a4 (    0xe0) NLRHMMTraceback::resize(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef684 (     0x8) NLRHMMTraceback::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef68c (    0xa4) NLRHMMTraceback::drop(NArray<bool> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef730 (   0x10c) NLRHMMTraceback::stateAlignment(NArray<unsigned int>&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef83c (    0x80) NRingDropBuffer::NRingDropBuffer(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ef8bc (   0x230) NArray<NFrame>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63efaec (    0xb8) NArray<NFrame>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63efba4 (   0x21c) NArray<NFrame>::fromArray(NFrame const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63efdc0 (   0x224) NArray<NFrame>::operator=(NArray<NFrame> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63effe4 (    0xc8) NArray<NFrame>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f00ac (    0x50) NRingDropBuffer::resize(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f00fc (    0xfc) NRingDropBuffer::NRingDropBuffer(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f01f8 (     0x8) NRingDropBuffer::size() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0200 (     0x8) NRingDropBuffer::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0208 (   0x11c) NRingDropBuffer::pushFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0324 (    0x68) NRingDropBuffer::operator[](unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f038c (     0x8) NRingDropBuffer::maxSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0394 (   0x120) NDelta::init(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f04b4 (   0x234) NDelta::isFrame(NLinkedList<NArray<float>> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f06e8 (    0x2c) NDelta::getFrame() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0714 (    0x44) NDynamicMFCC::init(unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0758 (   0x1c4) NDynamicMFCC::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f091c (   0x208) NDynamicMFCC::isFrame(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0b24 (    0xd4) NDynamicMFCC::makeFrame(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0bf8 (   0x25c) NDynamicMFCC::finish() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0e54 (    0x28) NDynamicMFCC::getFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0e7c (    0x44) -[VTPreferences overwritingVoiceTriggerMLock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0ec0 (    0x8c) __45-[VTPreferences overwritingVoiceTriggerMLock]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0f4c (    0x44) -[VTPreferences shouldOverwriteVoiceTriggerMLock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0f90 (    0x60) __49-[VTPreferences shouldOverwriteVoiceTriggerMLock]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f0ff0 (    0x50) -[VTPreferences setEverNotifyUserCompactTrigger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1040 (    0x58) -[VTPreferences everNotifyUserCompactTrigger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1098 (    0x44) -[VTPreferences isMphVTEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f10dc (    0x78) __31-[VTPreferences isMphVTEnabled]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1154 (    0x44) -[VTPreferences corespeechDaemonEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1198 (   0x114) __40-[VTPreferences corespeechDaemonEnabled]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f12ac (    0x44) -[VTPreferences useSiriActivationSPIForwatchOS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f12f0 (    0x5c) __47-[VTPreferences useSiriActivationSPIForwatchOS]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f134c (    0x44) -[VTPreferences useSiriActivationSPIForiOS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1390 (    0x5c) __43-[VTPreferences useSiriActivationSPIForiOS]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f13ec (   0x218) -[VTPreferences audioInjectionFilePath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1604 (    0xc4) __39-[VTPreferences audioInjectionFilePath]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f16c8 (     0xc) __destroy_helper_block_e8_32r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f16d4 (    0x10) __copy_helper_block_e8_32r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f16e4 (   0x3d4) -[VTPreferences _gibraltarHasBuiltInMic] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1ab8 (   0x12c) -[VTPreferences enableVoiceTriggerUponVoiceProfileSyncForLanguage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f1be4 (   0x518) -[VTPreferences hasVoiceProfileIniCloudForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f20fc (   0x344) -[VTPreferences devicesWithVoiceProfileIniCloudForLanguage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2440 (    0x10) __Block_byref_object_copy_.302 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2450 (     0x8) __Block_byref_object_dispose_.303 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2458 (    0xf8) __60-[VTPreferences devicesWithVoiceProfileIniCloudForLanguage:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2550 (    0x48) __destroy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2598 (    0x50) __copy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f25e8 (     0x4) -[VTPreferences isSATAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f25ec (    0x34) -[VTPreferences isRemoteVoiceTriggerAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2620 (   0x224) -[VTPreferences isCompactVoiceTriggerAvailableForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2844 (   0x100) __getCSUtilsClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2944 (    0x74) __CoreSpeechFoundationLibraryCore_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f29b8 (    0x68) -[VTPreferences _isLocalVoiceTriggerAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2a20 (    0x90) -[VTPreferences isVoiceTriggerAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2ab0 (    0xf8) __40-[VTPreferences isVoiceTriggerAvailable]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2ba8 (     0x8) -[VTPreferences gestureSubscriptionEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2bb0 (    0x60) -[VTPreferences voiceTriggerInCoreSpeech] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2c10 (    0xdc) -[VTPreferences getSATEnrollmentPath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2cec (   0x1d0) -[VTPreferences getMD5HashForSATEnrollmentAudioForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f2ebc (   0x158) -[VTPreferences markSATEnrollmentSuccessForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3014 (    0xb0) -[VTPreferences _getSATEnrollmentAudioPathForLanguageCodeForLegacyVoiceProfile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f30c4 (   0x160) -[VTPreferences discardAllSATEnrollment] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3224 (   0x10c) -[VTPreferences discardSATEnrollmentForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3330 (   0x390) -[VTPreferences _isSATMarkedForMarker:languageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f36c0 (    0x10) -[VTPreferences isSATEnrollmentMigratedForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f36d0 (    0x10) -[VTPreferences isSATEnrolledForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f36e0 (     0xc) -[VTPreferences synchronize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f36ec (    0x60) -[VTPreferences setOnetimeRemoteAssetQueryRanSuccessfully:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f374c (    0x64) -[VTPreferences onetimeRemoteAssetQueryRanSuccessfully] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f37b0 (    0x6c) -[VTPreferences _storeModeEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f381c (    0x90) -[VTPreferences setSecondPassAudioLoggingEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f38ac (     0xc) ___VTReloadVoiceTrigger_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f38b8 (    0x70) -[VTPreferences secondPassAudioLoggingEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3928 (    0x4c) -[VTPreferences setFileLoggingLevel:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3974 (    0x50) -[VTPreferences fileLoggingLevel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f39c4 (    0x64) -[VTPreferences fileLoggingIsEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3a28 (    0x14) -[VTPreferences setFileLoggingIsEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3a3c (   0x1a4) -[VTPreferences localizedTriggerPhraseForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3be0 (   0x1b8) -[VTPreferences localizedCompactTriggerPhraseForLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3d98 (   0x124) -[VTPreferences localizedTriggerPhrase] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3ebc (    0x60) -[VTPreferences _localeIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3f1c (    0x60) -[VTPreferences _languageCode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f3f7c (    0x90) -[VTPreferences setVoiceTriggerEnabledWhenChargerConnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f400c (    0x58) -[VTPreferences voiceTriggerEnabledWhenChargerConnected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4064 (    0x90) -[VTPreferences setVoiceTriggerEnabledWhenChargerDisconnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f40f4 (    0x48) -[VTPreferences voiceTriggerEnabledWhenChargerDisconnected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f413c (    0xdc) -[VTPreferences setPhraseSpotterEnabled:sender:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4218 (     0x8) -[VTPreferences setPhraseSpotterEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4220 (    0x70) -[VTPreferences phraseSpotterEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4290 (    0x40) -[VTPreferences hasExplicitlySetVoiceTriggerEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f42d0 (   0x23c) -[VTPreferences getUserPreferredVoiceTriggerPhraseTypeForDeviceType:endpointId:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f450c (   0x2e8) -[VTPreferences setUserPreferredVoiceTriggerPhraseType:sender:deviceType:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f47f4 (   0x22c) -[VTPreferences _setVoiceTriggerEnabled:sender:deviceType:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4a20 (    0x1c) -[VTPreferences _getVoiceTriggerEnabledDidChangeNotificationStringWithDeviceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4a3c (    0x1c) -[VTPreferences _getVoiceTriggerEnabledKeyWithDeviceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4a58 (   0x384) -[VTPreferences _setVoiceTriggerEnabled:sender:deviceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4ddc (   0x148) -[VTPreferences setVoiceTriggerEnabled:sender:deviceType:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4f24 (    0x14) -[VTPreferences setVoiceTriggerEnabled:sender:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4f38 (     0x8) -[VTPreferences setVoiceTriggerEnabled:sender:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4f40 (     0x8) -[VTPreferences setVoiceTriggerEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4f48 (    0xb0) -[VTPreferences _setCanUseVoiceTriggerDuringPhoneCall:sender:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f4ff8 (     0x8) -[VTPreferences setCanUseVoiceTriggerDuringPhoneCall:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5000 (    0x6c) -[VTPreferences canUseVoiceTriggerDuringPhoneCallWithState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f506c (    0x84) -[VTPreferences canUseVoiceTriggerDuringPhoneCall] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f50f0 (    0x10) -[VTPreferences _isNonEndpointDeviceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5100 (   0x190) -[VTPreferences _voiceTriggerEnabledWithDeviceType:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5290 (    0x8c) -[VTPreferences _voiceTriggerEnabledWithDeviceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f531c (    0x58) -[VTPreferences remoteDarwinWasEverConnected] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5374 (    0x58) -[VTPreferences voiceTriggerWasEverUsed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f53cc (     0x4) -[VTPreferences voiceTriggerEnabledWithDeviceType:endpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f53d0 (    0x14) -[VTPreferences voiceTriggerEnabledForEndpointId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f53e4 (     0x8) -[VTPreferences voiceTriggerEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f53ec (    0xb0) -[VTPreferences _VTSATCachePath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f549c (    0xb0) -[VTPreferences _VTSATBasePath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f554c (    0x74) -[VTPreferences init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f55c0 (    0x28) +[VTPreferences deviceCategoryStringRepresentationForCategoryType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f55e8 (    0x54) +[VTPreferences sharedPreferences] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f563c (    0x40) __34+[VTPreferences sharedPreferences]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f567c (     0xc) VTInternalPreferencesSynchronize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5688 (    0x18) _VTPreferencesSetValueForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f56a0 (     0xc) _VTNotBackedupPreferencesSynchronize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f56ac (    0x18) _VTNotBackedupPreferencesSetValueForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f56c4 (    0x50) _VTReloadVoiceTrigger [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5714 (    0x30) _VTPreferencesValueForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5744 (    0x30) _VTNotBackedupPreferencesValueForKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5774 (    0x30) NDEFrameProc::NDEFrameProc() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f57a4 (    0x30) NDEFrameProc::NDEFrameProc() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f57d4 (   0x128) NDEFrameProc::init(unsigned int const&, float const&, float const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f58fc (   0x248) NDEFrameProc::apply(float const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5b44 (     0x4) NDEFrameProc::getFrameByRef() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5b48 (     0x8) NDEFrameProc::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5b50 (     0x8) NDEFrameProc::get_framerate() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5b58 (    0x1c) nextPowerOf2(int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5b74 (   0x460) AccelMelFilter::init(unsigned int const&, unsigned int const&, unsigned int const&, float const&, float const&, float const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f5fd4 (   0x194) NArray<NArray<float>>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f6168 (   0x354) AccelMelFilter::setPoints(float const&, float const&, float const&, float const&, NArray<float>&, NArray<float>&, NArray<float>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f64bc (   0x39c) AccelMelFilter::setFilters(NArray<float> const&, NArray<float> const&, NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f6858 (    0x4c) AccelMelFilter::freq2mel(float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f68a4 (    0x40) AccelMelFilter::mel2freq(float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f68e4 (    0xd8) AccelMelFilter::run(float*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f69bc (     0xc) AccelMelFilter::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f69c8 (   0x4ac) AccelCosine::init(unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f6e74 (   0x1ec) AccelCosine::dctCoef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f7060 (   0x1c8) AccelCosine::lifterCoef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f7228 (    0xd4) AccelCosine::run(float const*, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f72fc (    0x20) AccelPSD::init(unsigned int const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f731c (   0x1cc) AccelPSD::fixp_sqrt(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f74e8 (    0xc8) AccelPSD::fixp_sqrt_range(int const&, int const&, int, int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f75b0 (    0xbc) AccelPSD::run(DSPSplitComplex&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f766c (    0x34) AccelPSD::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f76a0 (   0x43c) NWavChunk2HTKFrames::init(NString const&, unsigned int const&, bool const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f7adc (  0x1230) NWavChunk2HTKFrames::loadCfg(NString const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f8d0c (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001a63f8db8 (    0x8c) NLinkedList<NString>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f8e44 (    0x30) NLinkedList<NString>::deleteElement(NLinkedList<NString>::NElement*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f8e74 (    0xac) NLinkedList<NString>::newElement(NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f8f20 (    0x7c) NLinkedList<NString>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f8f9c (    0x6c) NLinkedList<NString>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9008 (    0x68) NLinkedList<NString>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9070 (   0x140) NLinkedList<NString>::insert(unsigned int const&, NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f91b0 (    0x7c) NLinkedList<NString>::append(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f922c (    0x68) NLinkedList<NString>::prepend(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9294 (    0x94) NLinkedList<NString>::operator=(NLinkedList<NString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9328 (    0x94) NLinkedList<NString>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f93bc (    0xcc) NLinkedList<NString>::removeElement(NLinkedList<NString>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9488 (   0x15c) NWavChunk2HTKFrames::resetOpt() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f95e4 (    0x78) NWavChunk2HTKFrames::changeSamRate(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f965c (    0x80) NWavChunk2HTKFrames::initStatic() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f96dc (    0x44) NWavChunk2HTKFrames::initDyn() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9720 (    0x40) NWavChunk2HTKFrames::parmCode() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9760 (    0x18) NWavChunk2HTKFrames::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9778 (     0x8) NWavChunk2HTKFrames::numStatic() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9780 (    0x20) NWavChunk2HTKFrames::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f97a0 (   0x2f8) NWavChunk2HTKFrames::run(void const*, unsigned int const&, NSampleType const&, NResizingQueue<NFrame>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9a98 (   0x160) NResizingQueue<NFrame>::push(NFrame const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9bf8 (   0x270) NResizingQueue<NFrame>::enlargeBy(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9e68 (    0xdc) NArray<NResizingQueue<NFrame>::NElement>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9f44 (    0x7c) NResizingQueue<NFrame>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63f9fc0 (    0x6c) NResizingQueue<NFrame>::NElement::~NElement() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa02c (   0x18c) NArray<NResizingQueue<NFrame>::NElement>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa1b8 (   0x174) NArray<NResizingQueue<NFrame>::NElement>::fromArray(NResizingQueue<NFrame>::NElement const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa32c (   0x180) NArray<NResizingQueue<NFrame>::NElement>::operator=(NArray<NResizingQueue<NFrame>::NElement> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa4ac (    0xec) NArray<NResizingQueue<NFrame>::NElement>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa598 (    0x54) NWavChunk2HTKFrames::c0Invert() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa5ec (    0x7c) NWavChunk2HTKFrames::toOutType(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa668 (    0xfc) NWavChunk2HTKFrames::finish(NResizingQueue<NFrame>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa764 (    0x18) NWavChunk2HTKFrames::getFrameRate() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa77c (     0x8) NWavChunk2HTKFrames::isTypeInt4() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa784 (   0x170) AccelWin2MFCC::AccelWin2MFCC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fa8f4 (   0x17c) NArray<NArray<float>>::fromArray(NArray<float> const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63faa70 (   0x180) NArray<NArray<float>>::operator=(NArray<NArray<float>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fabf0 (    0xc8) N2DArray<float>::~N2DArray() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63facb8 (    0xb8) N2DArray<float>::~N2DArray() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fad70 (    0xc8) NArray<NArray<float>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fae38 (    0xb8) NArray<NArray<float>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63faef0 (   0x170) AccelWin2MFCC::AccelWin2MFCC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb060 (   0x100) AccelWin2MFCC::init(unsigned int const&, unsigned int const&, bool const&, bool const&, bool const&, bool const&, unsigned int const&, float const&, float const&, unsigned int const&, unsigned int const&, float const&, float const&, float const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb160 (    0xe8) AccelWin2MFCC::initProc() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb248 (   0x14c) AccelWin2MFCC::initData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb394 (   0x290) AccelWin2MFCC::~AccelWin2MFCC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb624 (     0x4) AccelWin2MFCC::~AccelWin2MFCC() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb628 (   0x2d4) AccelWin2MFCC::run(NArray<float>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb8fc (     0x8) AccelWin2MFCC::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fb904 (   0x1d4) TSAcAnal::init(NString const&, unsigned int, NString const&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbad8 (    0xb8) TSAcAnal::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbb90 (     0x8) TSAcAnal::get_framerate() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbb98 (    0x54) TSAcAnal::feedFromInt(short const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbbec (    0x58) TSAcAnal::feedFromFloat(float const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbc44 (    0x78) TSAcAnal::feed(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbcbc (    0x60) TSAcAnal::endfeed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbd1c (    0x38) TSAcAnal::eos() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbd54 (    0x28) TSAcAnal::framesAvailable() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbd7c (    0xec) TSAcAnal::getframe() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbe68 (   0x134) TSAcAnal::getFrameByRef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fbf9c (   0x250) TSAcAnal::getStringFrame() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc1ec (    0x10) TSAcAnal::framesQueued() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc1fc (     0x8) TSAcAnal::isTypeInt4() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc204 (    0x38) TSAcAnal::parmCode() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc23c (    0x18) TSAcAnal::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc254 (     0x8) TSAcAnal::numStatic() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc25c (    0x6c) nd_create [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc2c8 (   0x184) nd_initialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc44c (   0x184) nd_wavedata [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc5d0 (   0x184) nd_wavedataf [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc754 (   0x180) nd_getresults [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fc8d4 (   0x180) nd_getphraseresults [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fca54 (   0x204) nd_phrasecount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fcc58 (   0x180) nd_getresultsstr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fcdd8 (   0x180) nd_getsupervector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fcf58 (   0x180) nd_scoresupervector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd0d8 (   0x184) nd_resetbest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd25c (   0x184) nd_reset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd3e0 (    0x30) nd_close [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd410 (   0x180) nd_getoption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd590 (   0x184) nd_sat_initialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd714 (   0x218) nd_sat_analyze [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fd92c (   0x218) nd_sat_analyzetransformed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fdb44 (   0x184) nd_sat_update [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fdcc8 (   0x184) nd_sat_deletevector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fde4c (   0x208) nd_sat_vectorcount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe054 (   0x184) nd_sat_reset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe1d8 (   0x180) nd_sat_getspeakervector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe358 (    0x44) nd_error [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe39c (   0x104) nd_initlog [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe4a0 (   0x204) nd_logcontrol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fe6a4 (   0xc48) IntNovDetect::IntNovDetect() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff2ec (   0x128) NConfigSection::~NConfigSection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff414 (    0xb8) NRingDropBuffer::~NRingDropBuffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff4cc (    0xe8) NLocalCepNorm::~NLocalCepNorm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff5b4 (   0x114) TSAcAnal::~TSAcAnal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff6c8 (   0x1bc) NWavChunk2HTKFrames::~NWavChunk2HTKFrames() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff884 (   0x174) NDynamicMFCC::~NDynamicMFCC() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ff9f8 (    0x30) NLinkedList<NArray<float>>::deleteElement(NLinkedList<NArray<float>>::NElement*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffa28 (   0x10c) NLinkedList<NArray<float>>::newElement(NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffb34 (    0x7c) NLinkedList<NArray<float>>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffbb0 (    0x6c) NLinkedList<NArray<float>>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffc1c (    0x68) NLinkedList<NArray<float>>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffc84 (   0x140) NLinkedList<NArray<float>>::insert(unsigned int const&, NArray<float> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffdc4 (    0x7c) NLinkedList<NArray<float>>::append(NArray<float> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffe40 (    0x68) NLinkedList<NArray<float>>::prepend(NArray<float> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63ffea8 (    0x94) NLinkedList<NArray<float>>::operator=(NLinkedList<NArray<float>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fff3c (    0x94) NLinkedList<NArray<float>>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a63fffd0 (    0x8c) NLinkedList<NArray<float>>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640005c (    0xcc) NLinkedList<NArray<float>>::removeElement(NLinkedList<NArray<float>>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400128 (    0x30) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::deleteElement(NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400158 (   0x12c) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::newElement(NArray<NResizingQueue<NFrame>::NElement> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400284 (   0x10c) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400390 (    0xfc) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640048c (    0x68) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64004f4 (   0x140) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::insert(unsigned int const&, NArray<NResizingQueue<NFrame>::NElement> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400634 (    0x7c) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::append(NArray<NResizingQueue<NFrame>::NElement> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64006b0 (    0x68) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::prepend(NArray<NResizingQueue<NFrame>::NElement> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400718 (    0x94) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::operator=(NLinkedList<NArray<NResizingQueue<NFrame>::NElement>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64007ac (    0x94) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400840 (    0x8c) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64008cc (    0xcc) NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::removeElement(NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400998 (    0xb4) NResizingQueue<NFrame>::~NResizingQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400a4c (    0xac) NResizingQueue<NFrame>::~NResizingQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400af8 (   0x108) NArray<unsigned short>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400c00 (    0xdc) NArray<unsigned short>::fromArray(unsigned short const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400cdc (    0xe8) NArray<unsigned short>::operator=(NArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400dc4 (    0x5c) NArray<short>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400e20 (    0x4c) NArray<short>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400e6c (   0x160) NResizingQueue<NFrame>::NResizingQueue(unsigned int const&, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6400fcc (   0x1e0) AccelStaticMFCC::AccelStaticMFCC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64011ac (    0xb0) AccelStaticMFCC::~AccelStaticMFCC() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640125c (    0x70) IntNovDetect::clearError() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64012cc (     0x4) IntNovDetect::IntNovDetect() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64012d0 (   0x63c) IntNovDetect::~IntNovDetect() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640190c (     0x4) IntNovDetect::~IntNovDetect() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6401910 (  0x513c) IntNovDetect::initialize(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6406a4c (   0x184) IntNovDetect::zeroWavePrime() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6406bd0 (   0x3b0) IntNovDetect::advanceDetection() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6406f80 (    0xb4) IntNovDetect::feedFrameToNorm(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407034 (   0x1d4) IntNovDetect::getBestLengthNormalizedPhraseScore(TSHMMDetector const&, float const&, bool const&, NArray<float> const&, unsigned int&, unsigned int&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407208 (   0x200) IntNovDetect::rescoreInit() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407408 (   0x194) IntNovDetect::updateMultiphraseResults(TSHMMDetector const&, float const&, float const&, NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640759c (    0xec) IntNovDetect::convertStrArrToFloatArr(NArray<NString> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407688 (    0x44) IntNovDetect::resetMultiphraseResults() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64076cc (   0x1ec) IntNovDetect::handleWavedataOverflow(void const*, int&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64078b8 (   0x144) IntNovDetect::wavedata(short const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64079fc (   0x14c) IntNovDetect::wavedataf(float const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407b48 (   0x100) IntNovDetect::getresults() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407c48 (   0x13c) IntNovDetect::getphraseresults(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407d84 (    0xb0) IntNovDetect::phrasecount() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407e34 (    0xf8) IntNovDetect::getresultsstr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6407f2c (   0x3fc) IntNovDetect::getsupervector(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408328 (    0xd4) IntNovDetect::scoresupervector(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64083fc (   0x100) IntNovDetect::resetbest() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64084fc (   0x27c) IntNovDetect::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408778 (   0x138) IntNovDetect::getoption(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64088b0 (   0x178) IntNovDetect::sat_initialize(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408a28 (    0xc0) IntNovDetect::sat_analyze(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408ae8 (    0xc0) IntNovDetect::sat_analyzetransformed(float const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408ba8 (    0xe8) IntNovDetect::sat_update() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408c90 (   0x188) IntNovDetect::sat_deletevector(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408e18 (    0xb0) IntNovDetect::sat_vectorcount() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408ec8 (    0xf8) IntNovDetect::sat_getspeakervector(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6408fc0 (    0xd0) IntNovDetect::sat_reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409090 (    0x34) IntNovDetect::error() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64090c4 (    0x84) IntNovDetect::setError(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409148 (    0xc8) IntNovDetect::nextFrameFromAcanal() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409210 (    0x6c) IntNovDetect::feedFrameToDetector(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640927c (    0x18) initndlib() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409294 (    0xec) NLocalCepNorm::NLocalCepNorm() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409380 (   0x15c) NLocalCepNorm::NLocalCepNorm() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64094dc (   0x1c0) NLocalCepNorm::configure(unsigned int const&, unsigned int const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640969c (    0x20) NLocalCepNorm::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64096bc (   0x230) NLocalCepNorm::resync() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64098ec (    0xa4) NLocalCepNorm::endFrames() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409990 (   0x21c) NLocalCepNorm::pushFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409bac (    0x2c) NLocalCepNorm::frameReady() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409bd8 (   0x3ac) NLocalCepNorm::setOutputFrame(NFrame&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6409f84 (    0x7c) NLocalCepNorm::getFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640a000 (   0x180) NChunkGaussianMixtureModelsHeader::NChunkGaussianMixtureModelsHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640a180 (   0x180) NChunkGaussianMixtureModelsHeader::NChunkGaussianMixtureModelsHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640a300 (    0x58) NChunkGaussianMixtureModelsHeader::~NChunkGaussianMixtureModelsHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640a358 (    0x58) NChunkGaussianMixtureModelsHeader::~NChunkGaussianMixtureModelsHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640a3b0 (   0xcc8) NChunkGaussianMixtureModelsHeader::read(NString const&, NFilePtr&, NString const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640b078 (   0x600) NChunkGaussianMixtureModelsHeader::readField(NString const&, NFilePtr&, NString const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640b678 (   0x640) void NChunkGaussianMixtureModelsHeader::readField<unsigned int>(NString const&, NFilePtr&, NString const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640bcb8 (   0x640) void NChunkGaussianMixtureModelsHeader::readField<unsigned char>(NString const&, NFilePtr&, NString const&, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640c2f8 (  0x152c) NChunkGaussianMixtureModelsHeader::write(NFilePtr&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640d824 (   0x7b0) NChunkGaussianMixtureModelsHeader::writeBinary(NFilePtr&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640dfd4 (   0x110) NChunkGaussianMixtureModelsHeader::encodingString() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640e0e4 (   0x670) NFastFixedGaussians<signed char, int, unsigned char>::score(unsigned int const&, NArray<short> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640e754 (   0x18c) NFastFixedGaussians<short, int, unsigned char>::score(unsigned int const&, NArray<short> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640e8e0 (   0x62c) NFastFixedGaussians<signed char, int, unsigned short>::score(unsigned int const&, NArray<short> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640ef0c (    0xa8) NDeepnetDistribution::resetState(void*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640efb4 (    0xf0) NDeepnetDistribution::deallocateState(void*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f0a4 (   0x198) NDeepnetDistribution::allocateStateP() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f23c (    0xb8) NArray<unsigned int const*>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f2f4 (    0x8c) NArray<unsigned int const*>::fromArray(unsigned int const* const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f380 (    0x98) NArray<unsigned int const*>::operator=(NArray<unsigned int const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f418 (    0x5c) NArray<void*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f474 (    0x4c) NArray<void*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f4c0 (     0x8) NDeepnetDistribution::fixedPointScalesP() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f4c8 (    0x18) NDeepnetDistribution::baseGMM() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f4e0 (    0x18) NDeepnetDistribution::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f4f8 (    0x18) NDeepnetDistribution::firstComponentId(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f510 (    0x18) NDeepnetDistribution::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f528 (    0x18) NDeepnetDistribution::numComponents() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f540 (    0x18) NDeepnetDistribution::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f558 (    0x18) NDeepnetDistribution::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f570 (    0x90) NDeepnetDistribution::scoreAll(NArray<float> const&, NArray<float>&, void*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f600 (   0x218) NDeepnetDistribution::forwardComputeFixed(NArray<float> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640f818 (   0x358) NDeepnetDistribution::forwardComputeFloat(NArray<float> const&, NArray<float>&, void*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640fb70 (    0x18) NDeepnetDistribution::score(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a640fb88 (  0x1084) NDeepnetDistribution::read(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6410c0c (   0x124) NDeepnetDistribution::mapFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6410d30 (    0xdc) NDeepnetDistribution::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6410e0c (   0x1c4) NFixedPointSigmoidTable::initialize(unsigned int const&, float const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6410fd0 (   0x41c) NFixedPointLogaddTable::initialize(unsigned int const&, float const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64113ec (   0x154) NArray<NLayer>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411540 (   0x790) NLayer::initialize(unsigned int const&, unsigned int const&, unsigned int const&, char const*, unsigned int const&, NFixedPointTables const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411cd0 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001a6411d50 (     0x4) NBaseLayer::resetState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411d54 (     0x4) NBaseLayer::deallocateState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411d58 (     0x8) NBaseLayer::allocateStateP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411d60 (    0x18) NBaseLayer::compute(int const*, int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411d78 (   0x26c) Nfp16AMPalettizedLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6411fe4 (    0x84) Nfp16AMPalettizedLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412068 (     0x4) Nfp16AMPalettizedLayer::~Nfp16AMPalettizedLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641206c (     0x4) Nfp16AMPalettizedLayer::~Nfp16AMPalettizedLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412070 (   0x28c) Nfp16SigmoidOnlyLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64122fc (    0x50) Nfp16SigmoidOnlyLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641234c (     0x4) Nfp16SigmoidOnlyLayer::~Nfp16SigmoidOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412350 (     0x4) Nfp16SigmoidOnlyLayer::~Nfp16SigmoidOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412354 (    0xd4) Nfp16PalettizedLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412428 (    0x7c) Nfp16PalettizedLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64124a4 (     0x4) Nfp16PalettizedLayer::~Nfp16PalettizedLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64124a8 (     0x4) Nfp16PalettizedLayer::~Nfp16PalettizedLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64124ac (   0x334) Nfp16MatrixLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64127e0 (    0x80) Nfp16MatrixLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412860 (     0x4) Nfp16MatrixLayer::~Nfp16MatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412864 (     0x4) Nfp16MatrixLayer::~Nfp16MatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412868 (   0x124) Nfp16OffsetLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641298c (    0x70) Nfp16OffsetLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64129fc (     0x4) Nfp16OffsetLayer::~Nfp16OffsetLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412a00 (     0x4) Nfp16OffsetLayer::~Nfp16OffsetLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412a04 (   0x124) Nfp16ScaleLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412b28 (    0x70) Nfp16ScaleLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412b98 (     0x4) Nfp16ScaleLayer::~Nfp16ScaleLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412b9c (     0x4) Nfp16ScaleLayer::~Nfp16ScaleLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412ba0 (    0xbc) Nfp16tofp32Layer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412c5c (    0x5c) Nfp16tofp32Layer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412cb8 (     0x4) Nfp16tofp32Layer::~Nfp16tofp32Layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412cbc (     0x4) Nfp16tofp32Layer::~Nfp16tofp32Layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412cc0 (    0xd4) Nfp32tofp16Layer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412d94 (    0x68) Nfp32tofp16Layer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412dfc (     0x4) Nfp32tofp16Layer::~Nfp32tofp16Layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412e00 (     0x4) Nfp32tofp16Layer::~Nfp32tofp16Layer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6412e04 (   0x398) NSigned8BitMatrixLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641319c (   0x184) NSigned8BitMatrixLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413320 (    0xd0) N8BitMatrixLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64133f0 (    0x60) NSigned8BitMatrixLayer::~NSigned8BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413450 (    0x50) NSigned8BitMatrixLayer::~NSigned8BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64134a0 (   0x460) N8BitLSTMLayer::MatrixMultiply8Bit(unsigned int const&, unsigned int const&, signed char const*, float const*, float*, float const&, bool const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413900 (    0x60) N8BitLSTMLayer::computeProjection(unsigned int const&, float const*, float const*, float*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413960 (    0xf0) N8BitLSTMLayer::computeIFOC(unsigned int const&, float const*, float const*, float const*, float const*, float*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413a50 (    0x84) N8BitLSTMLayer::loadHeader(int const&, char const*&, unsigned int&, bool&, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413ad4 (    0x4c) NLSTMLayer::resetState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413b20 (    0x58) NLSTMLayer::deallocateState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413b78 (    0x8c) NLSTMLayer::allocateStateP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6413c04 (   0xa40) NLSTMLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414644 (   0x220) NLSTMLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414864 (     0x4) N8BitLSTMLayer::~N8BitLSTMLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414868 (     0x4) N8BitLSTMLayer::~N8BitLSTMLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641486c (   0x170) NLSTMLayer::computeProjection(unsigned int const&, float const*, float const*, float*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64149dc (   0x544) NLSTMLayer::computeIFOC(unsigned int const&, float const*, float const*, float const*, float const*, float*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414f20 (    0x6c) NLSTMLayer::loadHeader(int const&, char const*&, unsigned int&, bool&, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414f8c (     0x4) NLSTMLayer::~NLSTMLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414f90 (     0x4) NLSTMLayer::~NLSTMLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6414f94 (   0x33c) N4BitMatrixLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64152d0 (    0xc8) N4BitMatrixLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415398 (     0x4) N4BitMatrixLayer::~N4BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641539c (     0x4) N4BitMatrixLayer::~N4BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64153a0 (   0x60c) NSigned8BitInput1DConvLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64159ac (   0x160) NSigned8BitInput1DConvLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415b0c (     0x4) NSigned8BitInput1DConvLayer::~NSigned8BitInput1DConvLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415b10 (     0x4) NSigned8BitInput1DConvLayer::~NSigned8BitInput1DConvLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415b14 (    0xf4) NSigned8BitQuantizeLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415c08 (    0x60) NSigned8BitQuantizeLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415c68 (     0x4) NSigned8BitQuantizeLayer::~NSigned8BitQuantizeLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415c6c (     0x4) NSigned8BitQuantizeLayer::~NSigned8BitQuantizeLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415c70 (   0x1bc) NLogSoftmaxOnlyLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415e2c (    0x50) NLogSoftmaxOnlyLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415e7c (     0x4) NLogSoftmaxOnlyLayer::~NLogSoftmaxOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415e80 (     0x4) NLogSoftmaxOnlyLayer::~NLogSoftmaxOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415e84 (    0x50) NVectorScaleLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415ed4 (    0x70) NVectorScaleLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415f44 (     0x4) NVectorScaleLayer::~NVectorScaleLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415f48 (     0x4) NVectorScaleLayer::~NVectorScaleLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415f4c (    0x88) NSubVectorSelectLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6415fd4 (    0xfc) NSubVectorSelectLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64160d0 (     0x4) NSubVectorSelectLayer::~NSubVectorSelectLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64160d4 (     0x4) NSubVectorSelectLayer::~NSubVectorSelectLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64160d8 (    0xd0) NBlockDiagonalLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64161a8 (    0xb8) NBlockDiagonalLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416260 (     0x4) NBlockDiagonalLayer::~NBlockDiagonalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416264 (     0x4) NBlockDiagonalLayer::~NBlockDiagonalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416268 (    0x30) NShiftRegisterLayer::resetState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416298 (    0x70) NShiftRegisterLayer::deallocateState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416308 (    0xa4) NShiftRegisterLayer::allocateStateP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64163ac (    0x68) NShiftRegisterLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416414 (    0xb4) NShiftRegisterLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64164c8 (     0x4) NShiftRegisterLayer::~NShiftRegisterLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64164cc (     0x4) NShiftRegisterLayer::~NShiftRegisterLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64164d0 (    0xb4) NSigmoidOnlyLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416584 (    0x50) NSigmoidOnlyLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64165d4 (     0x4) NSigmoidOnlyLayer::~NSigmoidOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64165d8 (     0x4) NSigmoidOnlyLayer::~NSigmoidOnlyLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64165dc (   0x58c) N8BitMatrixLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416b68 (     0x4) N8BitMatrixLayer::~N8BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416b6c (     0x4) N8BitMatrixLayer::~N8BitMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416b70 (    0x5c) NClipLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416bcc (    0x50) NClipLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416c1c (     0x4) NClipLayer::~NClipLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416c20 (     0x4) NClipLayer::~NClipLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416c24 (    0x94) NMatrixLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416cb8 (    0x7c) NMatrixLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416d34 (     0x4) NMatrixLayer::~NMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416d38 (     0x4) NMatrixLayer::~NMatrixLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416d3c (   0x19c) N8BitLogSoftmaxLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416ed8 (     0x4) N8BitLogSoftmaxLayer::~N8BitLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416edc (     0x4) N8BitLogSoftmaxLayer::~N8BitLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416ee0 (    0x94) N8BitSigmoidalLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416f74 (     0x4) N8BitSigmoidalLayer::~N8BitSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416f78 (     0x4) N8BitSigmoidalLayer::~N8BitSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6416f7c (   0x2d8) NFixLogSoftmaxLayer::compute(int const*, int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417254 (    0x18) NBaseLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641726c (    0xa4) NFixMatrixBaseLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417310 (     0x4) NFixLogSoftmaxLayer::~NFixLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417314 (     0x4) NFixLogSoftmaxLayer::~NFixLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417318 (   0x294) NFixSigmoidalLayer::compute(int const*, int*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64175ac (     0x4) NFixSigmoidalLayer::~NFixSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64175b0 (     0x4) NFixSigmoidalLayer::~NFixSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64175b4 (    0x50) NOffsetLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417604 (    0x70) NOffsetLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417674 (     0x4) NOffsetLayer::~NOffsetLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417678 (     0x4) NOffsetLayer::~NOffsetLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641767c (   0x118) NNormalizationLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417794 (    0x6c) NNormalizationLayer::initialize(unsigned int const&, unsigned int const&, char const*, unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417800 (     0x4) NNormalizationLayer::~NNormalizationLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417804 (     0x4) NNormalizationLayer::~NNormalizationLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417808 (   0x200) NLogSoftmaxLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417a08 (     0x4) NLogSoftmaxLayer::~NLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417a0c (     0x4) NLogSoftmaxLayer::~NLogSoftmaxLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417a10 (    0xf8) NSigmoidalLayer::compute(float const*, float*, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417b08 (     0x4) NSigmoidalLayer::~NSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417b0c (     0x4) NSigmoidalLayer::~NSigmoidalLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417b10 (    0x54) NSmartPointer<NBaseLayer>::setPointer(NBaseLayer*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417b64 (    0x7c) NSmartPointer<NBaseLayer>::~NSmartPointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417be0 (    0x6c) NSmartPointer<NBaseLayer>::~NSmartPointer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417c4c (    0x7c) NLayer::~NLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417cc8 (    0x6c) NLayer::~NLayer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417d34 (    0x5c) NArray<int>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417d90 (    0x4c) NArray<int>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6417ddc (   0x518) NDeepnetDistribution::mapFromMemory(char const*, unsigned int const&, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64182f4 (     0x8) NDeepnetDistribution::scoreCacheTypes() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64182fc (     0x8) NDeepnetDistribution::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418304 (     0x8) NDeepnetDistribution::numFrames() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641830c (     0x8) NDeepnetDistribution::dimen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418314 (     0x8) NDeepnetDistribution::size() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641831c (    0x28) NDeepnetDistribution::~NDeepnetDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418344 (   0x198) NDeepnetDistribution::~NDeepnetDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64184dc (   0x140) NArray<NLayer>::fromArray(NLayer const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641861c (   0x14c) NArray<NLayer>::operator=(NArray<NLayer> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418768 (    0xd8) NArray<NLayer>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418840 (    0xc8) NArray<NLayer>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418908 (     0x4) NDeepnetDistribution::~NDeepnetDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641890c (   0x214) NDeepnetDistribution::NDeepnetDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418b20 (     0x4) NDeepnetDistribution::NDeepnetDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418b24 (   0x1ac) NDeepnetDistribution::verifyMemoryImage(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418cd0 (    0x58) NDeepnetDistribution::init(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418d28 (    0x5c) NDeepnetDistribution::loadFixedInputLayer(NArray<float> const&, int*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418d84 (    0xa0) NDeepnetDistribution::extractFixedOutputLayer(int const*, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418e24 (     0x8) NFixedPointScales::paramLimit() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418e2c (   0x100) NFixedPointScales::~NFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6418f2c (    0xf0) NFixedPointScales::~NFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641901c (     0x8) NGaussianFixedPointScales::paramLimit() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6419024 (    0x28) NGaussianFixedPointScales::~NGaussianFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641904c (   0x164) NGaussianFixedPointScales::~NGaussianFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64191b0 (     0x4) NGaussianFixedPointScales::~NGaussianFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64191b4 (    0xbc) NFixedPointScales::NFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6419270 (    0xbc) NFixedPointScales::NFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641932c (    0xf0) NFixedPointScales::~NFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641941c (    0xd0) NFixedPointScales::initialize(int const&, NArray<int> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64194ec (   0x308) NFixedPointScales::makeParamScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64197f4 (    0x4c) NFixedPointScales::setUp() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6419840 (   0x168) NFixedPointScales::toFloatVec(NArray<short>) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64199a8 (    0xd0) NFixedPointScales::toFixVec(NArray<float>) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6419a78 (   0x714) NFixedPointScales::readInt(NFilePtr&, bool const&, NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641a18c (   0x924) NFixedPointScales::readIntVec(NFilePtr&, bool const&, NString const&, unsigned int const&, NArray<int>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641aab0 (   0x180) NArray<NString>::NArray(NLinkedList<NString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ac30 (   0x17c) NFixedPointScales::read(NFilePtr&, unsigned int const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641adac (   0x5c4) NFixedPointScales::write(NFilePtr&, bool const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641b370 (   0x2dc) NString& operator<<<int>(NString&, NArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641b64c (   0x114) NGaussianFixedPointScales::NGaussianFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641b760 (   0x114) NGaussianFixedPointScales::NGaussianFixedPointScales() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641b874 (   0x188) NGaussianFixedPointScales::initialize(int const&, int const&, int const&, NArray<int> const&, NArray<int> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641b9fc (   0x300) NGaussianFixedPointScales::makeLogAddTable(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641bcfc (    0x74) NGaussianFixedPointScales::setUp() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641bd70 (   0x30c) NGaussianFixedPointScales::read(NFilePtr&, unsigned int const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641c07c (   0xc4c) NGaussianFixedPointScales::write(NFilePtr&, bool const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ccc8 (    0x44) NGaussianFixedPointScales::logadd(int, int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641cd0c (    0x9c) NGaussianFixedPointScales::setDimenShift(NArray<int> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641cda8 (    0x3c) NFrameWindow::NFrameWindow() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641cde4 (    0x3c) NFrameWindow::NFrameWindow() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ce20 (   0x218) NFrameWindow::configure(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d038 (    0x10) NFrameWindow::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d048 (     0xc) NFrameWindow::endFrames() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d054 (    0x60) NFrameWindow::pushFrame(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d0b4 (   0x114) NFrameWindow::pushFrame(float const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d1c8 (    0x60) NFrameWindow::copyInFrame(float const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d228 (    0x2c) NFrameWindow::frameReady() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d254 (    0x7c) NFrameWindow::setOutputFrameWindow(NFrame&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d2d0 (   0x244) NFrameWindow::setOutputFrameWindow(float*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d514 (    0xf4) NFrameWindow::endPadOneFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d608 (   0x318) NArray<NGaussianMixture>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641d920 (   0x300) NArray<NGaussianMixture>::fromArray(NGaussianMixture const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641dc20 (   0x310) NArray<NGaussianMixture>::operator=(NArray<NGaussianMixture> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641df30 (    0x28) NGaussianMixtureModels::~NGaussianMixtureModels() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641df58 (   0x1f0) NGaussianMixtureModels::~NGaussianMixtureModels() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e148 (   0x100) NArray<NGaussianMixture>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e248 (   0x1c8) NArray<NGaussian>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e410 (   0x1a0) NGaussian::operator=(NGaussian const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e5b0 (   0x1b8) NArray<NGaussian>::fromArray(NGaussian const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e768 (   0x1bc) NArray<NGaussian>::operator=(NArray<NGaussian> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641e924 (   0x100) NArray<NGaussian>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ea24 (    0xf0) NArray<NGaussian>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641eb14 (     0x4) NGaussianMixtureModels::~NGaussianMixtureModels() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641eb18 (   0x144) NGaussian::score(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ec5c (    0x78) NGaussian::refreshOffset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ecd4 (    0xc4) NGaussianMixtureModels::NGaussianMixtureModels() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ed98 (    0xf0) NArray<NGaussianMixture>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ee88 (    0xc8) NGaussianMixtureModels::NGaussianMixtureModels() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a641ef50 (  0x4078) NGaussianMixtureModels::read(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6422fc8 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001a6422fec (   0x124) NGaussianMixtureModels::logWeights(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6423110 (    0xc8) NGaussianMixtureModels::invertVars(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64231d8 (    0xcc) NGaussianMixtureModels::invertSquareVars(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64232a4 (    0xc8) NGaussianMixtureModels::validateVars(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642336c (   0x124) NGaussianMixtureModels::validateWeights(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6423490 (    0xb4) NGaussianMixtureModels::refreshOffsets() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6423544 (  0x158c) NGaussianMixtureModels::write(NString const&, NVarType const&, NWeightType const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6424ad0 (   0x2dc) NString& operator<<<float>(NString&, NArray<float> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6424dac (   0x2dc) NString& operator<<<unsigned int>(NString&, NArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425088 (    0xcc) NGaussianMixtureModels::invertSqrtVars(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425154 (   0x214) NGaussianMixtureModels::expWeights(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425368 (   0x7c4) NGaussianMixtureModels::writeBinary(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b2c (     0x8) NGaussianMixtureModels::dimen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b34 (     0x8) NGaussianMixtureModels::id() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b3c (     0x8) NGaussianMixtureModels::id() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b44 (     0x8) NGaussianMixtureModels::gaussians() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b4c (    0x2c) NGaussianMixtureModels::gaussian(unsigned int const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b78 (    0x20) NGaussianMixtureModels::weight(unsigned int const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425b98 (   0x2c8) NGaussianMixtureModels::score(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6425e60 (   0x37c) NGaussianMixtureModels::score2(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64261dc (    0xcc) NGaussianMixtureModels::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64262a8 (   0x5cc) NGaussianMixtureModels::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426874 (   0x108) NArray<double>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642697c (    0xdc) NArray<double>::fromArray(double const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426a58 (    0xe8) NArray<double>::operator=(NArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426b40 (    0x5c) NArray<double>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426b9c (    0x4c) NArray<double>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426be8 (   0x394) NGaussianMixtureModels::posteriors(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6426f7c (   0x33c) +[VTUtteranceMetadataManager recordedTimeStampOfFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64272b8 (   0x2c0) +[VTUtteranceMetadataManager isUtteranceImplicitlyTrained:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6427578 (   0x3ec) +[VTUtteranceMetadataManager _upgradeUtteranceMeta:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6427964 (   0x23c) +[VTUtteranceMetadataManager _audioDirectoryNeedsUpgrade:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6427ba0 (   0x484) +[VTUtteranceMetadataManager _upgradeLocaleDirectoryIfNecessary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428024 (   0x15c) +[VTUtteranceMetadataManager _saveMetaVersionFileAtPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428180 (   0x308) +[VTUtteranceMetadataManager upgradeMetaFilesIfNecessaaryAtSATRoot:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428488 (    0x5c) +[VTUtteranceMetadataManager saveMetaVersionFileAtSATAudioDirectory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64284e4 (   0x204) +[VTUtteranceMetadataManager _writeMetaDict:forUtterancePath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64286e8 (   0x15c) +[VTUtteranceMetadataManager _getBaseMetaDictionaryForUtterancePath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428844 (   0x1bc) +[VTUtteranceMetadataManager saveUtteranceMetadataForUtterance:isExplicitEnrollment:isHandheldEnrollment:withBiometricResult:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428a00 (    0x18) AccelLoga::init(unsigned int const&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428a18 (    0x74) AccelLoga::run(float*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428a8c (     0x8) AccelLoga::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428a94 (    0x34) AccelLoga::findMax(NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428ac8 (   0x310) NArray<NPhoneHMM>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428dd8 (    0x98) NPhoneHMM::~NPhoneHMM() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428e70 (    0xd4) NArray<NHMMState>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428f44 (    0xa8) NArray<NHMMState>::fromArray(NHMMState const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6428fec (    0xb4) NArray<NHMMState>::operator=(NArray<NHMMState> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64290a0 (    0x60) NArray<NHMMState>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429100 (    0x50) NArray<NHMMState>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429150 (    0xa8) NPhoneHMM::~NPhoneHMM() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64291f8 (   0x2f4) NArray<NPhoneHMM>::fromArray(NPhoneHMM const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64294ec (   0x300) NArray<NPhoneHMM>::operator=(NArray<NPhoneHMM> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64297ec (    0x28) NPhoneHMMArray::~NPhoneHMMArray() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429814 (   0x204) NPhoneHMMArray::~NPhoneHMMArray() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429a18 (   0x124) NAutoArray<NPhoneHMM>::~NAutoArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429b3c (    0x30) NLinkedList<NMap<NString, unsigned int>::HashItem>::deleteElement(NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429b6c (    0xb4) NLinkedList<NMap<NString, unsigned int>::HashItem>::newElement(NMap<NString, unsigned int>::HashItem const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429c20 (    0x7c) NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429c9c (    0x6c) NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement::~NElement() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429d08 (    0x68) NLinkedList<NMap<NString, unsigned int>::HashItem>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429d70 (   0x140) NLinkedList<NMap<NString, unsigned int>::HashItem>::insert(unsigned int const&, NMap<NString, unsigned int>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429eb0 (    0x7c) NLinkedList<NMap<NString, unsigned int>::HashItem>::append(NMap<NString, unsigned int>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429f2c (    0x68) NLinkedList<NMap<NString, unsigned int>::HashItem>::prepend(NMap<NString, unsigned int>::HashItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6429f94 (    0x94) NLinkedList<NMap<NString, unsigned int>::HashItem>::operator=(NLinkedList<NMap<NString, unsigned int>::HashItem> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a028 (    0x94) NLinkedList<NMap<NString, unsigned int>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a0bc (    0x8c) NLinkedList<NMap<NString, unsigned int>::HashItem>::~NLinkedList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a148 (    0xcc) NLinkedList<NMap<NString, unsigned int>::HashItem>::removeElement(NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a214 (   0x1c0) NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a3d4 (   0x1a0) NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>>::fromArray(NLinkedList<NMap<NString, unsigned int>::HashItem> const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a574 (   0x1ac) NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>>::operator=(NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a720 (    0xec) NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a80c (    0xdc) NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a8e8 (   0x10c) NMap<NString, unsigned int>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642a9f4 (    0xfc) NMap<NString, unsigned int>::~NMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642aaf0 (     0x4) NPhoneHMMArray::~NPhoneHMMArray() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642aaf4 (    0x6c) NPhoneHMMArray::NPhoneHMMArray() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ab60 (   0x10c) NStringHash<unsigned int>::~NStringHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ac6c (    0xfc) NStringHash<unsigned int>::~NStringHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ad68 (    0xec) NHash<NMap<NString, unsigned int>::HashItem>::~NHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ae54 (    0xdc) NHash<NMap<NString, unsigned int>::HashItem>::~NHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642af30 (    0x6c) NPhoneHMMArray::NPhoneHMMArray() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642af9c (   0xaf8) NPhoneHMMArray::read(NString const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ba94 (   0x114) NArray<NPhoneHMM>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642bba8 (   0x308) NAutoArray<NPhoneHMM>::resize(unsigned int const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642beb0 (    0x24) NAutoArray<NPhoneHMM>::operator=(NAutoArray<NPhoneHMM> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642bed4 (   0x2f4) NAutoArray<NPhoneHMM>::fromArray(NPhoneHMM const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642c1c8 (   0x364) NAutoArray<NPhoneHMM>::operator=(NArray<NPhoneHMM> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642c52c (   0x8c0) NPhoneHMMArray::write(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642cdec (    0x88) NPhoneHMMArray::initReverseLookup() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ce74 (   0x32c) NHash<NMap<NString, unsigned int>::HashItem>::resize(unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d1a0 (   0x23c) NMap<NString, unsigned int>::operator[](NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d3dc (   0x190) NHash<NMap<NString, unsigned int>::HashItem>::NHash(unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d56c (    0xa0) NPhoneHMMArray::endReverseLookup() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d60c (    0xbc) NPhoneHMMArray::operator()(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d6c8 (   0x148) NMap<NString, unsigned int>::contains(NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d810 (   0x154) NMap<NString, unsigned int>::operator[](NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d964 (    0x18) NPipeFile::getPosition() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d97c (    0x18) NPipeFile::setPosition(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642d994 (   0x138) NBaseFile::writeLine(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642dacc (    0x80) NPipeFile::write(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642db4c (    0x7c) NPipeFile::readString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642dbc8 (   0x128) NPipeFile::readLine(char const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642dcf0 (    0xa0) NPipeFile::read(unsigned int const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642dd90 (    0xf8) NPipeFile::read(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642de88 (   0x194) NPipeFile::read() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e01c (    0x8c) NPipeFile::good() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e0a8 (    0x18) NPipeFile::eof() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e0c0 (     0x8) NPipeFile::isOpen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e0c8 (    0x78) NPipeFile::close() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e140 (    0xac) NPipeFile::open(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e1ec (    0xf8) NPipeFile::~NPipeFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e2e4 (     0x4) NBaseFile::~NBaseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e2e8 (     0x4) NBaseFile::~NBaseFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e2ec (    0xe8) NPipeFile::~NPipeFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e3d4 (    0x9c) NPipeFile::NPipeFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e470 (    0x9c) NPipeFile::NPipeFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e50c (    0xd4) NPipeFile::NPipeFile(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e5e0 (    0xd4) NPipeFile::NPipeFile(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e6b4 (    0xe8) NPipeFile::~NPipeFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e79c (     0x4) NDistribution::resetState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7a0 (     0x4) NDistribution::deallocateState(void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7a4 (     0x8) NDistribution::allocateStateP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7ac (    0x18) NFloatDistribution::fixedPointScalesP() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7c4 (     0x8) NFloatDistribution::baseGMM() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7cc (     0x8) NFloatDistribution::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7d4 (    0x1c) NFloatDistribution::firstComponentId(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e7f0 (    0x88) NFloatDistribution::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e878 (     0x8) NFloatDistribution::numComponents() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e880 (   0x15c) NFloatDistribution::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642e9dc (    0xcc) NFloatDistribution::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eaa8 (    0xd8) NDistribution::scoreAll(NArray<float> const&, NArray<float>&, void*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eb80 (     0x8) NFloatDistribution::score(unsigned int const&, NArray<float> const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eb88 (     0x8) NFloatDistribution::read(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eb90 (     0x8) NDistribution::scoreCacheTypes() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eb98 (    0x24) NDistribution::frameSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ebbc (     0x8) NDistribution::numFrames() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ebc4 (     0x8) NFloatDistribution::dimen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ebcc (     0x8) NFloatDistribution::size() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ebd4 (    0x54) NFloatDistribution::~NFloatDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ec28 (    0x44) NFloatDistribution::~NFloatDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ec6c (    0x7c) NDistributionLoader::~NDistributionLoader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ece8 (    0x6c) NDistributionLoader::~NDistributionLoader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ed54 (    0x44) NFloatDistribution::NFloatDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ed98 (    0x44) NFloatDistribution::NFloatDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eddc (    0x44) NFloatDistribution::~NFloatDistribution() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ee20 (    0x20) NDistributionLoader::NDistributionLoader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ee40 (    0x20) NDistributionLoader::NDistributionLoader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ee60 (    0x6c) NDistributionLoader::~NDistributionLoader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642eecc (   0xd60) NDistributionLoader::read(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642fc2c (   0x3ac) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a642ffd8 (   0x3ac) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6430384 (   0x3ac) NFastFixedDistribution<short, int, unsigned short, unsigned char>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6430730 (   0x3ac) NFastFixedDistribution<short, int, unsigned int, unsigned char>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6430adc (   0x3ac) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6430e88 (   0x3ac) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431234 (     0x8) NFixedDummyDistribution::fixedPointScalesP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643123c (    0x10) NFixedDummyDistribution::baseGMM() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643124c (    0x28) NFixedDummyDistribution::notSupported(char const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431274 (    0x28) NFixedDummyDistribution::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643129c (    0x28) NFixedDummyDistribution::firstComponentId(unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64312c4 (    0x28) NFixedDummyDistribution::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64312ec (    0x28) NFixedDummyDistribution::numComponents() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431314 (    0x28) NFixedDummyDistribution::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643133c (    0x28) NFixedDummyDistribution::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431364 (    0x10) NFixedDummyDistribution::score(unsigned int const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431374 (   0xae4) NFixedDummyDistribution::read(NString const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431e58 (     0x8) NFixedDummyDistribution::dimen() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431e60 (     0x8) NFixedDummyDistribution::size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431e68 (    0x54) NFixedDummyDistribution::~NFixedDummyDistribution() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431ebc (    0x44) NFixedDummyDistribution::~NFixedDummyDistribution() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431f00 (    0x28) NDummyDistribution::fixedPointScalesP() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431f28 (    0x10) NDummyDistribution::baseGMM() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431f38 (    0x28) NDummyDistribution::notSupported(char const*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431f60 (    0x28) NDummyDistribution::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431f88 (    0x28) NDummyDistribution::firstComponentId(unsigned int const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431fb0 (    0x28) NDummyDistribution::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6431fd8 (    0x28) NDummyDistribution::numComponents() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432000 (    0x28) NDummyDistribution::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432028 (    0x28) NDummyDistribution::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432050 (    0x10) NDummyDistribution::score(unsigned int const&, NArray<float> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432060 (   0x83c) NDummyDistribution::read(NString const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643289c (     0x8) NDummyDistribution::dimen() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64328a4 (     0x8) NDummyDistribution::size() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64328ac (     0x4) NDummyDistribution::~NDummyDistribution() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64328b0 (     0x4) NDummyDistribution::~NDummyDistribution() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64328b4 (    0x5c) NArray<unsigned int const*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432910 (    0x4c) NArray<unsigned int const*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643295c (   0x250) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432bac (   0x2dc) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6432e88 (   0x628) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64334b0 (  0x11ec) NFastFixedGaussians<signed char, int, unsigned short>::read(NString const&, NFilePtr&, NGaussianFixedPointScales const&, unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643469c (  0x15a8) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6435c44 (    0xf8) NAutoArray<unsigned int>::resize(unsigned int const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6435d3c (    0x24) NAutoArray<unsigned int>::operator=(NAutoArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6435d60 (    0x90) NAutoArray<unsigned int>::fromArray(unsigned int const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6435df0 (    0xc4) NAutoArray<unsigned int>::operator=(NArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6435eb4 (   0x3c8) NGaussianFixedPointScales::operator=(NGaussianFixedPointScales const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643627c (   0x110) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643638c (   0x100) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643648c (    0x5c) NArray<unsigned short const*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64364e8 (    0x4c) NArray<unsigned short const*>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6436534 (   0x250) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6436784 (   0x2dc) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6436a60 (   0x640) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64370a0 (  0x15a8) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438648 (    0xf8) NAutoArray<unsigned short>::resize(unsigned int const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438740 (    0x24) NAutoArray<unsigned short>::operator=(NAutoArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438764 (    0xdc) NAutoArray<unsigned short>::fromArray(unsigned short const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438840 (   0x11c) NAutoArray<unsigned short>::operator=(NArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643895c (    0x5c) NArray<unsigned short>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64389b8 (    0x4c) NArray<unsigned short>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438a04 (   0x110) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438b14 (   0x100) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438c14 (   0x3b0) NFastFixedDistribution<short, int, unsigned int, unsigned char>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6438fc4 (   0x448) NFastFixedDistribution<short, int, unsigned int, unsigned char>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643940c (   0x62c) NFastFixedDistribution<short, int, unsigned int, unsigned char>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6439a38 (  0x11f0) NFastFixedGaussians<short, int, unsigned char>::read(NString const&, NFilePtr&, NGaussianFixedPointScales const&, unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643ac28 (  0x15a8) NFastFixedDistribution<short, int, unsigned int, unsigned char>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643c1d0 (   0x110) NFastFixedDistribution<short, int, unsigned int, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643c2e0 (   0x100) NFastFixedDistribution<short, int, unsigned int, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643c3e0 (   0x3b0) NFastFixedDistribution<short, int, unsigned short, unsigned char>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643c790 (   0x448) NFastFixedDistribution<short, int, unsigned short, unsigned char>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643cbd8 (   0x640) NFastFixedDistribution<short, int, unsigned short, unsigned char>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643d218 (  0x15a8) NFastFixedDistribution<short, int, unsigned short, unsigned char>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643e7c0 (   0x110) NFastFixedDistribution<short, int, unsigned short, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643e8d0 (   0x100) NFastFixedDistribution<short, int, unsigned short, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643e9d0 (    0x14) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::firstComponentId(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643e9e4 (    0x98) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643ea7c (   0x250) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643eccc (   0x14c) NFastFixedDistribution<signed char, int, unsigned int, unsigned short>::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643ee18 (   0x2dc) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643f0f4 (   0x62c) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a643f720 (  0x11ec) NFastFixedGaussians<signed char, int, unsigned char>::read(NString const&, NFilePtr&, NGaussianFixedPointScales const&, unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644090c (  0x15a8) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6441eb4 (   0x110) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6441fc4 (   0x100) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64420c4 (     0x8) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::fixedPointScalesP() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64420cc (    0x18) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::baseGMM() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64420e4 (    0x18) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::posteriorWeightedMean(unsigned int const&, NArray<float> const&, NArray<float>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64420fc (    0x14) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::firstComponentId(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6442110 (    0x98) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::setComponentMask(unsigned int const&, NArray<bool>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64421a8 (     0x8) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::numComponents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64421b0 (   0x250) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::componentScore(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6442400 (   0x14c) NFastFixedDistribution<signed char, int, unsigned short, unsigned short>::scoreUsingCache(unsigned int const&, NArray<bool> const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644254c (   0x2dc) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::score(unsigned int const&, NArray<float> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6442828 (   0x644) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::read(NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6442e6c (  0x15a8) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::readAsciiMixtures(NString const&, NFilePtr&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444414 (     0x8) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::dimen() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644441c (     0x8) NFastFixedDistribution<signed char, int, unsigned int, unsigned char>::size() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444424 (   0x110) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444534 (   0x100) NFastFixedDistribution<signed char, int, unsigned short, unsigned char>::~NFastFixedDistribution() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444634 (    0xc8) read_gaussian_models(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64446fc (     0xc) -[VTBuiltInRTModel .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444708 (     0x8) -[VTBuiltInRTModel setBuiltInRTModelDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444710 (     0xc) -[VTBuiltInRTModel builtInRTModelDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644471c (    0x84) -[VTBuiltInRTModel dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64447a0 (    0x54) +[VTBuiltInRTModel sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64447f4 (    0x40) __34+[VTBuiltInRTModel sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444834 (     0x8) +[VTUtilities horsemanDeviceType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644483c (   0x174) +[VTUtilities convertToShortLPCMBufFromFloatLPCMBuf:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64449b0 (    0x44) +[VTUtilities isTorpedo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64449f4 (    0x28) __24+[VTUtilities isTorpedo]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444a1c (    0x68) +[VTUtilities VTMachAbsoluteTimeGetTimeInterval:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444a84 (    0x44) __49+[VTUtilities VTMachAbsoluteTimeGetTimeInterval:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444ac8 (    0x9c) +[VTUtilities getAssetHashFromConfigPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444b64 (   0x15c) +[VTUtilities deviceCategoryForDeviceProductType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444cc0 (   0x1a8) __50+[VTUtilities deviceCategoryForDeviceProductType:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444e68 (     0xc) +[VTUtilities deviceSoftwareVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444e74 (    0xf0) +[VTUtilities deviceProductType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444f64 (     0xc) +[VTUtilities deviceProductVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444f70 (    0x44) +[VTUtilities isInternalInstall] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444fb4 (    0x28) __32+[VTUtilities isInternalInstall]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6444fdc (    0x44) +[VTUtilities supportRemoteDarwinVoiceTrigger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445020 (    0x28) __46+[VTUtilities supportRemoteDarwinVoiceTrigger]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445048 (    0x50) +[VTUtilities supportPremiumAssets] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445098 (    0x40) +[VTUtilities supportBargeIn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64450d8 (     0x4) __29+[VTUtilities supportBargeIn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64450dc (     0xc) +[VTUtilities isAlwaysOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64450e8 (     0x8) +[VTUtilities supportExternalPhraseSpotter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64450f0 (     0x8) +[VTUtilities supportTTS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64450f8 (    0x44) +[VTUtilities VTIsHorseman] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644513c (    0x28) __27+[VTUtilities VTIsHorseman]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445164 (     0x8) +[VTUtilities isNano] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644516c (     0x8) +[VTUtilities isIOS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445174 (    0x44) +[VTUtilities isNonUI] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64451b8 (    0x44) __22+[VTUtilities isNonUI]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64451fc (    0xd4) +[VTUtilities systemUpTime] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64452d0 (    0x34) +[VTUtilities _round:withPlaces:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445304 (   0x18c) +[VTUtilities sanitizeEventInfoForLogging:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445490 (   0x150) __43+[VTUtilities sanitizeEventInfoForLogging:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64455e0 (     0xc) +[VTUtilities forceReload] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64455ec (    0x78) N16ByteAlignedString::~N16ByteAlignedString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445664 (    0x68) N16ByteAlignedString::~N16ByteAlignedString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64456cc (     0x8) N16ByteAlignedString::deallocate(char*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64456d4 (    0x60) N16ByteAlignedString::allocate(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445734 (    0x8c) N16ByteAlignedString::N16ByteAlignedString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64457c0 (    0x8c) N16ByteAlignedString::N16ByteAlignedString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644584c (    0xac) N16ByteAlignedString::N16ByteAlignedString(N16ByteAlignedString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64458f8 (    0xac) N16ByteAlignedString::N16ByteAlignedString(N16ByteAlignedString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64459a4 (    0xac) N16ByteAlignedString::N16ByteAlignedString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445a50 (    0xac) N16ByteAlignedString::N16ByteAlignedString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445afc (    0xf4) N16ByteAlignedString::N16ByteAlignedString(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445bf0 (    0xf4) N16ByteAlignedString::N16ByteAlignedString(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445ce4 (   0x104) N16ByteAlignedString::N16ByteAlignedString(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445de8 (   0x104) N16ByteAlignedString::N16ByteAlignedString(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445eec (    0xb8) N16ByteAlignedString::N16ByteAlignedString(char const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6445fa4 (    0xb8) N16ByteAlignedString::N16ByteAlignedString(char const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644605c (    0x68) N16ByteAlignedString::~N16ByteAlignedString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64460c4 (   0x188) NZFile::open(NString const&, NString const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644624c (    0x18) NZFile::getPosition() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446264 (    0x18) NZFile::setPosition(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644627c (    0x80) NZFile::write(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64462fc (    0x7c) NZFile::readString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446378 (   0x128) NZFile::readLine(char const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64464a0 (    0xa0) NZFile::read(unsigned int const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446540 (    0xf8) NZFile::read(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446638 (   0x194) NZFile::read() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64467cc (    0x8c) NZFile::good() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446858 (    0x18) NZFile::eof() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446870 (     0x8) NZFile::isOpen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446878 (    0x78) NZFile::close() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64468f0 (    0x48) NZFile::open(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446938 (    0xf8) NZFile::~NZFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446a30 (    0xe8) NZFile::~NZFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446b18 (    0x9c) NZFile::NZFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446bb4 (    0x9c) NZFile::NZFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446c50 (    0xf0) NZFile::NZFile(NString const&, NString const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446d40 (    0xf0) NZFile::NZFile(NString const&, NString const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446e30 (    0xe8) NZFile::~NZFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6446f18 (   0x174) NZipFile::~NZipFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644708c (   0x164) NZipFile::~NZipFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64471f0 (    0xa8) NZipFile::NZipFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447298 (    0xa8) NZipFile::NZipFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447340 (   0x210) NZipFile::NZipFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447550 (    0xf8) NZipFile::open(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447648 (     0x4) NZipFile::NZipFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644764c (   0x164) NZipFile::~NZipFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64477b0 (    0xfc) NZipFile::close() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64478ac (   0x378) NZipFile::start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447c24 (   0x2e0) NZipFile::nextHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447f04 (     0x8) NZipFile::valid() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447f0c (    0x10) NZipFile::operator++(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447f1c (     0x8) NZipFile::operator*() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6447f24 (   0x2ec) NZipFile::getCurrentSubFile(NFilePtr&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448210 (   0x1c4) NFilePtr::openOffsetZFile(NString const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64483d4 (   0x12c) NFilePtr::openOffsetFile(NString const&, unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448500 (    0xa0) NZipFile::getSubFile(NString const&, NFilePtr&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64485a0 (   0x104) NFidFile::~NFidFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64486a4 (    0xf4) NFidFile::~NFidFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448798 (    0x4c) NFidFile::NFidFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64487e4 (    0x4c) NFidFile::NFidFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448830 (   0x170) NFidFile::NFidFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64489a0 (   0x200) NFidFile::readHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448ba0 (    0xc4) NFidFile::open(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448c64 (     0x4) NFidFile::NFidFile(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448c68 (    0xf4) NFidFile::~NFidFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448d5c (    0xc0) NFidFile::close() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6448e1c (   0x490) NFidFile::getSubFile(NString const&, NFilePtr&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64492ac (   0x118) sanity_check_model(NDEConfigHeader const*, unsigned long, unsigned int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64493c4 (   0x1fc) compute_blob_checksum(void const*, unsigned long, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64495c0 (   0x174) _nde_create(void const*, unsigned long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449734 (    0x38) nde_create [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644976c (    0xbc) nde_process [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449828 (    0xac) nde_process_v2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64498d4 (    0xb8) nde_processframe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644998c (    0xa8) nde_processframe_v2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449a34 (    0x44) nde_getchecksum [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449a78 (    0x5c) nde_reset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449ad4 (    0x7c) nde_destroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449b50 (    0x24) nde_enable_multiinstance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449b74 (   0x120) NAutoString::appendTo(void const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449c94 (    0xf8) NAutoString::assignTo(void const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449d8c (    0x68) NAutoString::operator+=(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449df4 (    0x6c) NAutoString::operator=(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449e60 (    0x70) NAutoString::operator=(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449ed0 (    0x5c) NAutoString::~NAutoString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449f2c (    0x4c) NAutoString::~NAutoString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449f78 (    0x70) NAutoString::NAutoString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6449fe8 (    0x70) NAutoString::NAutoString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a058 (   0x100) NAutoString::NAutoString(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a158 (   0x100) NAutoString::NAutoString(unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a258 (    0x94) NAutoString::NAutoString(NAutoString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a2ec (    0x94) NAutoString::NAutoString(NAutoString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a380 (    0x8c) NAutoString::NAutoString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a40c (    0x8c) NAutoString::NAutoString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a498 (    0x4c) NAutoString::~NAutoString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644a4e4 (   0x62c) BlobBuilder::buildBlob(NConfig const&, N16ByteAlignedString&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644ab10 (   0x844) BlobBuilder::build(NConfig const&, N16ByteAlignedString&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644b354 (   0x108) NDEAcAnal::~NDEAcAnal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644b45c (   0x108) BlobBuilder::~BlobBuilder() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644b564 (   0xb94) BlobBuilder::buildDistBlob(NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644c0f8 (   0x180) BlobBuilder::buildPhoneHmmArray(NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644c278 (  0x11c8) BlobBuilder::buildAcAnalConfig(NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644d440 (   0x200) BlobBuilder::buildNormConfig(NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644d640 (  0x19a0) BlobBuilder::buildDetectConfig(NConfigSection const&, NConfigSection const&, NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644efe0 (   0x104) BlobBuilder::buildConfgHeader(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f0e4 (   0x108) BlobBuilder::serializeDetectConfig(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f1ec (   0x10c) BlobBuilder::serializeAcAnalConfig(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f2f8 (   0x108) BlobBuilder::serializeNormConfig(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f400 (   0x134) BlobBuilder::serializeDistBlob(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f534 (   0x330) BlobBuilder::serializeHmmArray(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f864 (    0xf4) BlobBuilder::serializeHeap(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644f958 (   0x284) BlobBuilder::insertChecksum(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fbdc (    0xb0) NArray<unsigned char>::resize(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fc8c (    0x8c) NArray<unsigned char>::fromArray(unsigned char const*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fd18 (    0x98) NArray<unsigned char>::operator=(NArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fdb0 (    0x5c) NArray<unsigned char>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fe0c (    0x4c) NArray<unsigned char>::~NArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a644fe58 (   0xd08) BlobBuilder::sanityCheckAcAnalOption(NConfigSection const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6450b60 (   0x49c) BlobBuilder::analysisTargetKind(NConfigSection const&, NDEAcAnalConfig&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6450ffc (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001a64510a8 (    0x10) BlobBuilder::buildChecksumHeader() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64510b8 (    0x5c) BlobBuilder::serializeConfigHeader(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451114 (    0x5c) BlobBuilder::serializeChecksumHeader(N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451170 (     0x8) BlobBuilder::getConfigHeaderSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451178 (     0x8) BlobBuilder::getChecksumHeaderSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451180 (     0x8) BlobBuilder::getDetectorConfigSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451188 (     0x8) BlobBuilder::getAcAnalConfigSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451190 (     0x8) BlobBuilder::getNormConfigSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451198 (     0x8) BlobBuilder::getActualDistributionSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64511a0 (    0x10) BlobBuilder::getDistributionSize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64511b0 (    0x54) BlobBuilder::getActualHmmArraySize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451204 (    0x58) BlobBuilder::getHmmArraySize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645125c (   0x104) BlobBuilder::convertStrArrToFloatArr(NArray<NString>&, NArray<float>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451360 (    0xe4) BlobBuilder::serializePadding(unsigned int, N16ByteAlignedString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451444 (   0x150) NBaseFile::writeString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451594 (    0x24) NBaseFile::print(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64515b8 (    0xdc) NBaseFile::printf(char const*, ...) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451694 (   0x3e0) AccelStaticMFCC::init(unsigned int const&, unsigned int const&, unsigned int const&, bool const&, float const&, bool const&, bool const&, bool const&, unsigned int const&, float const&, float const&, unsigned int const&, unsigned int const&, float const&, float const&, float const&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451a74 (    0x1c) AccelStaticMFCC::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451a90 (    0x78) AccelStaticMFCC::start(void const*, unsigned int const&, NSampleType const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451b08 (   0x480) AccelStaticMFCC::isFrame() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6451f88 (    0xb8) AccelStaticMFCC::preemph() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452040 (     0x8) AccelStaticMFCC::getFrame() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452048 (     0x8) AccelStaticMFCC::getWindow() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452050 (     0x8) AccelStaticMFCC::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452058 (   0x498) IntNovDetectE::IntNovDetectE() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64524f0 (     0x4) IntNovDetectE::IntNovDetectE() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64524f4 (   0x158) IntNovDetectE::~IntNovDetectE() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645264c (     0x4) IntNovDetectE::~IntNovDetectE() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452650 (   0x3d0) IntNovDetectE::init(NDEHMMDetectorConfig const*, NDEAcAnalConfig const*, NLocalCepNormConfig const*, char const*, unsigned int const&, char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452a20 (   0x158) IntNovDetectE::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452b78 (   0x1c8) IntNovDetectE::process(short const*, int, bool*, bool*, NDEResult*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452d40 (   0x214) IntNovDetectE::wavedata(short const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6452f54 (   0x100) IntNovDetectE::advanceDetectionAfterFeed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6453054 (    0x38) IntNovDetectE::getResult(NDEResult*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645308c (    0xd0) IntNovDetectE::setTriggerSignal(bool*, bool*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645315c (   0x154) IntNovDetectE::processframe(float const*, int, bool*, bool*, NDEResult*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64532b0 (   0x1bc) IntNovDetectE::framedata(float const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645346c (    0x20) IntNovDetectE::resetbest() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645348c (   0x17c) IntNovDetectE::handleWavedataOverflow(short const*, int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6453608 (    0x8c) IntNovDetectE::feedFrameToNorm(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6453694 (     0x8) IntNovDetectE::feedFrameToDetector(NFrame const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645369c (   0x86c) NFilePtr::open(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6453f08 (    0xd4) NConfigSection::NConfigSection(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6453fdc (   0x190) NHash<NMap<NString, NString>::HashItem>::NHash(unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645416c (    0xd4) NConfigSection::NConfigSection(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454240 (    0x74) NConfigSection::sOpt(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64542b4 (   0x234) NMap<NString, NString>::contains(NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64544e8 (   0x244) NMap<NString, NString>::operator[](NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645472c (    0xe8) NConfigSection::iOpt(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454814 (    0xe0) NConfigSection::fOpt(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64548f4 (   0x210) NConfigSection::bOpt(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454b04 (    0xa0) NConfigSection::sOptDefault(NString const&, NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454ba4 (     0x8) NConfigSection::hasOpt(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454bac (    0x68) NConfigSection::iOptDefault(NString const&, int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454c14 (    0x68) NConfigSection::fOptDefault(NString const&, float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454c7c (    0x5c) NConfigSection::bOptDefault(NString const&, bool const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454cd8 (    0x5c) NConfigSection::setOpt(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6454d34 (   0x330) NMap<NString, NString>::operator[](NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455064 (    0x5c) NConfigSection::appendOpt(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64550c0 (   0x31c) NConfig::NConfig(bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64553dc (   0x190) NHash<NMap<NString, NConfigSection>::HashItem>::NHash(unsigned int const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645556c (   0x584) NMap<NString, NConfigSection>::operator[](NString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455af0 (   0x154) NMap<NString, NConfigSection>::HashItem::~HashItem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455c44 (    0xec) NHash<NMap<NString, NConfigSection>::HashItem>::~NHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455d30 (    0xdc) NHash<NMap<NString, NConfigSection>::HashItem>::~NHash() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455e0c (     0x4) NConfig::NConfig(bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6455e10 (   0x244) NConfig::load(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6456054 (  0x24d0) NConfig::loadString(NString const&, NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6458524 (   0x288) NStringSplitIterator::operator++(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64587ac (   0x49c) NMap<NString, NConfigSection>::contains(NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6458c48 (    0x60) NConfig::section(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6458ca8 (   0x4a0) NMap<NString, NConfigSection>::operator[](NString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459148 (     0x4) NConfig::hasSection(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645914c (     0x8) +[VTStateManager iPhoneShouldStartVoiceTriggerInCoreSpeech] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459154 (     0x4) +[VTStateManager notifyVoiceTrigger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459158 (     0x4) +[VTStateManager setCurrentBuiltInRTModelDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645915c (     0x8) +[VTStateManager requestCurrentBuiltInRTModelDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459164 (    0x18) +[VTStateManager requestCurrentVoiceTriggerAssetDictionaryWithReply:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645917c (     0x8) +[VTStateManager requestCurrentVoiceTriggerAssetDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459184 (     0x4) +[VTStateManager requestAudioCapture:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459188 (     0x8) +[VTStateManager firstChanceTriggeredDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459190 (     0x8) +[VTStateManager firstChanceVTEventInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459198 (     0x8) +[VTStateManager firstChanceAudioBuffer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591a0 (     0x8) +[VTStateManager getVoiceTriggerCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591a8 (     0x4) +[VTStateManager clearVoiceTriggerCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591ac (     0x8) +[VTStateManager isLastTriggerSecondChanceTriggered] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591b4 (     0x8) +[VTStateManager isLastTriggerForced] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591bc (     0x4) +[VTStateManager requestForcedTriggerEvent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591c0 (     0x4) +[VTStateManager requestForcedSecondChance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591c4 (     0x4) +[VTStateManager notifyVoiceTriggeredSiriSessionCancelled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591c8 (     0x4) +[VTStateManager notifyVoiceTriggeredSiriSessionCancelled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591cc (     0x4) +[VTStateManager requestRaiseToSpeakBypassing:timeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591d0 (     0x4) +[VTStateManager requestPhraseSpotterBypassing:timeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591d4 (     0x4) +[VTStateManager requestVoiceTriggerEnabled:forReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591d8 (     0xc) -[VTStateManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591e4 (     0xc) -[VTStateManager setCoreSpeechKeepAliveHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591f0 (     0x8) -[VTStateManager coreSpeechKeepAliveHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64591f8 (    0x60) AccelFFT::~AccelFFT() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459258 (    0x60) AccelFFT::~AccelFFT() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64592b8 (   0x174) AccelFFT::init(unsigned int const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645942c (    0x58) AccelFFT::zeroPadData(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459484 (   0x100) AccelFFT::run(NArray<float>&, DSPSplitComplex&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459584 (     0x4) Error::header(char const*, long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459588 (    0x68) Error::error(char const*, ...) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64595f0 (    0x70) Error::warning(char const*, ...) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459660 (    0x80) Error::chuck(char const*, ...) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64596e0 (    0x24) NMemPool::getAlignedSize(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459704 (    0x84) NMemPool::init(char*, unsigned int, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459788 (    0x84) NMemPool::getMem(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645980c (     0xc) NMemPool::lock(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459818 (     0xc) NMemPool::isLocked() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459824 (    0x50) NMemPool::report() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459874 (   0x3f4) NFile::readLine(char const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459c68 (   0x114) NFile::getPosition() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459d7c (   0x280) NFile::setPosition(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6459ffc (    0xa0) NFile::write(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645a09c (   0x1ec) NFile::readString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645a288 (    0xb0) NFile::readLine(char const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645a338 (   0x1dc) NFile::read(unsigned int const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645a514 (   0x214) NFile::read(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645a728 (   0x4a4) NFile::read() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645abcc (    0x28) NFile::good() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645abf4 (    0x24) NFile::eof() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ac18 (    0x10) NFile::isOpen() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ac28 (    0xbc) NFile::close() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ace4 (   0x1d8) NFile::open(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645aebc (    0x28) NFile::~NFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645aee4 (   0x194) NFile::~NFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b078 (    0xc8) virtual thunk to std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b140 (    0xc0) virtual thunk to std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b200 (    0xac) non-virtual thunk to std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b2ac (    0xa4) non-virtual thunk to std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b350 (    0xb4) std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b404 (    0xa4) std::__1::basic_fstream<char, std::__1::char_traits<char>>::~basic_fstream() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b4a8 (     0x4) NFile::~NFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b4ac (   0x1c0) NFile::NFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b66c (     0x4) NFile::NFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b670 (   0x210) NFile::NFile(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b880 (     0x4) NFile::NFile(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b884 (     0x8) NFile::flush() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b88c (    0x60) gIsPrime(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b8ec (    0x70) gNextPrime(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b95c (    0x88) NOffsetFile::open(NString const&, NString const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645b9e4 (   0x150) NOffsetFile::readLine(char const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bb34 (    0x10) NOffsetFile::getPosition() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bb44 (    0x74) NOffsetFile::setPosition(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bbb8 (   0x1ac) NOffsetFile::readString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bd64 (    0x48) NOffsetFile::read(unsigned int const&, NString&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bdac (    0x48) NOffsetFile::read(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bdf4 (    0x60) NOffsetFile::read() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645be54 (    0x40) NOffsetFile::good() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645be94 (    0x40) NOffsetFile::eof() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bed4 (    0x28) NOffsetFile::~NOffsetFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645befc (     0x4) NOffsetFile::~NOffsetFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bf00 (    0x44) NOffsetFile::NOffsetFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bf44 (    0x44) NOffsetFile::NOffsetFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645bf88 (    0xec) NOffsetFile::NOffsetFile(NString const&, NString const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c074 (     0x4) NOffsetFile::NOffsetFile(NString const&, NString const&, unsigned int const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c078 (     0x4) NOffsetFile::~NOffsetFile() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c07c (    0x18) +[VTBlobBuilder getDefaultBlob] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c094 (   0x158) +[VTBlobBuilder getBlobWithConfigFilename:rootDirectory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c1ec (    0x98) NScrambler::NScrambler(NString) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c284 (    0x98) NScrambler::NScrambler(NString) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c31c (    0x18) NScrambler::keystream() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c334 (    0xb4) NScrambler::convert(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c3e8 (    0xfc) NScrambler::scramble(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645c4e4 (   0x534) base64_encode(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ca18 (   0x27c) NScrambler::unscramble(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645cc94 (   0x59c) base64_decode(NString const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d230 (    0x7c) NString::stripComments(char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d2ac (   0x438) NString::creplace(NString const&, NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d6e4 (    0xe0) NString::replace(NString const&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d7c4 (   0x1a0) NString::vprintf(char const*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d964 (    0x5c) NString::printf(char const*, ...) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645d9c0 (    0x70) NString::chomp() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645da30 (    0xe4) NString::appendTo(void const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645db14 (    0xc4) NString::assignTo(void const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645dbd8 (    0xa4) NString::newAllocation(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645dc7c (    0x68) NString::operator+=(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645dce4 (    0x7c) NString::operator=(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645dd60 (    0x60) NString::operator=(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ddc0 (    0x5c) NString::~NString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645de1c (    0x4c) NString::~NString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645de68 (    0x10) NString::deallocate(char*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645de78 (     0xc) NString::allocate(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645de84 (    0x54) NString::NString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ded8 (    0x54) NString::NString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645df2c (    0x68) NString::NString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645df94 (    0x68) NString::NString(NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645dffc (    0x84) NString::NString(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e080 (    0x84) NString::NString(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e104 (    0x90) NString::NString(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e194 (    0x90) NString::NString(char const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e224 (    0x74) NString::NString(char const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e298 (    0x74) NString::NString(char const&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e30c (    0xf8) NString::NString(int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e404 (    0xf8) NString::NString(int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e4fc (    0xf8) NString::NString(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e5f4 (    0xf8) NString::NString(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e6ec (   0x100) NString::NString(double const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e7ec (   0x100) NString::NString(double const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e8ec (     0x8) NString::pointer() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e8f4 (     0x8) NString::length() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645e8fc (   0x16c) NString::operator+(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ea68 (    0x44) NString::operator==(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645eaac (    0x58) NString::operator==(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645eb04 (    0x44) NString::operator!=(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645eb48 (    0x24) NString::operator<(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645eb6c (    0x28) NString::operator<=(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645eb94 (    0x28) NString::operator>(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ebbc (    0x28) NString::operator>=(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ebe4 (    0x48) NString::operator[](unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ec2c (    0x48) NString::operator[](unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ec74 (    0xd8) NString::slice(unsigned int const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ed4c (    0xa4) NString::head(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645edf0 (    0xac) NString::tail(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ee9c (    0xa4) NString::cuttail(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645ef40 (   0x118) NString::uppercase() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f058 (   0x118) NString::lowercase() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f170 (    0x20) NString::tofloat() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f190 (    0x24) NString::toint(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f1b4 (    0x24) NString::touint(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f1d8 (    0x60) NString::checkFloat() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f238 (    0x64) NString::checkInt(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f29c (    0x64) NString::checkUint(unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f300 (    0x84) NString::tobool() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f384 (    0x5c) NString::startswith(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f3e0 (    0x44) NString::startswith(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f424 (    0x60) NString::endswith(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f484 (    0x4c) NString::endswith(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f4d0 (    0xbc) NString::contains(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f58c (    0xa8) NString::contains(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f634 (    0x4c) NString::contains(char const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f680 (    0xd0) NString::containsafter(NString const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645f750 (   0x320) operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fa70 (    0x10) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fa80 (    0x54) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fad4 (    0x3c) std::length_error::length_error[abi:v160006](char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fb10 (    0x48) operator<<(NString&, NString const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fb58 (    0x4c) NString::~NString() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fba4 (    0x68) NString::split(NString const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645fc0c (   0x2e0) NString::split(NLinkedList<NString>&, NString const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a645feec (   0x26c) NString::split(NArray<NString>&, NString const&, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460158 (   0x1a8) NString::split(NArray<NString>&, char, unsigned int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460300 (    0xc8) NString::hexcoded() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64603c8 (   0x2a0) NString::hexdecoded() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460668 (    0xd8) NString::strip(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460740 (   0x134) NString::dirname() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460874 (    0xf0) NString::prefixDirname() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460964 (    0xc0) NString::basename() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460a24 (   0x1d0) NString::basename(NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460bf4 (    0x38) NString::hashValue() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460c2c (   0x15c) operator<<(NString&, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460d88 (   0x15c) operator<<(NString&, int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6460ee4 (   0x160) operator<<(NString&, float const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461044 (   0x15c) operator<<(NString&, double const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611a0 (     0x4) NTimer::~NTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611a4 (     0x4) NTimer::~NTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611a8 (    0x24) NTimer::NTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611cc (    0x24) NTimer::NTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611f0 (     0x8) NTimer::running() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64611f8 (    0x3c) NTimer::start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461234 (    0x40) NTimer::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461274 (   0x130) NTimer::elapsed(NTimerType) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64613a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001a64613b8 (     0x4) NTimer::~NTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64613bc (    0xa0) NConfigSectionExt::sOpt(NString const&, NString const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646145c (    0x68) NConfigSectionExt::fOpt(NString const&, float const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64614c4 (    0x68) NConfigSectionExt::iOpt(NString const&, int const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646152c (    0x68) NConfigSectionExt::bOpt(NString const&, bool const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461594 (    0x68) NVersion::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64615fc (    0x68) NVersion::releaseDate() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461664 (    0x64) NVersion::buildType() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64616c8 (    0x68) NVersion::buildDate() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461730 (    0x70) NVersion::compilerVersion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64617a0 (    0x6c) NVersion::compileFlags() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646180c (    0x64) NVersion::buildMachine() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461870 (    0x70) NVersion::versionMessage() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64618e0 (   0x2b8) AccelWindow::init(unsigned int const&, bool const&, bool const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461b98 (   0x1d0) AccelWindow::initHamming() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461d68 (    0x60) AccelWindow::apply(NArray<float>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6461dc8 (   0x2b0) AccelWindow::applyHamming(NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462078 (    0x3c) AccelWindow::getOffset(NArray<float>&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64620b4 (     0x8) AccelWindow::getHamming() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64620bc (   0x17c) AccelWindow::rescale(NArray<float>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462238 (     0x8) AccelWindow::getScalingFactor() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462240 (   0x2e8) NDEAcAnal::init(NDEAcAnalConfig const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462528 (    0x78) NDEAcAnal::setSamRate(unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64625a0 (    0x7c) NDEAcAnal::initStatic() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646261c (   0x270) NDEAcAnal::feedFromInt(short const*, unsigned int const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646288c (    0x54) NDEAcAnal::c0Invert() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64628e0 (    0x7c) NDEAcAnal::toOutType(NArray<float> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a646295c (    0x1c) NDEAcAnal::reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462978 (    0x18) NDEAcAnal::get_framerate() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462990 (     0x8) NDEAcAnal::frameAvailable() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a6462998 (     0x8) NDEAcAnal::getFrameByRef() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001a64629a0 (    0x18) NDEAcAnal::frameSize() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001a64629b8 (   0xab0) __TEXT __auth_stubs
                0x00000001a64629b8 (    0x10) DYLD-STUB$$AudioObjectGetPropertyData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64629c8 (    0x10) DYLD-STUB$$AudioObjectGetPropertyDataSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64629d8 (    0x10) DYLD-STUB$$AudioObjectHasProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64629e8 (    0x10) DYLD-STUB$$BNNSFilterApply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64629f8 (    0x10) DYLD-STUB$$BNNSFilterCreateLayerFullyConnected [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a08 (    0x10) DYLD-STUB$$BNNSFilterDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a18 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a28 (    0x10) DYLD-STUB$$CFNotificationCenterGetDarwinNotifyCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a38 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a48 (    0x10) DYLD-STUB$$CFPreferencesAppSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a58 (    0x10) DYLD-STUB$$CFPreferencesCopyAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a68 (    0x10) DYLD-STUB$$CFPreferencesSetAppValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a78 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a88 (    0x10) DYLD-STUB$$IORegistryEntryGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462a98 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462aa8 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ab8 (    0x10) DYLD-STUB$$MGCopyAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ac8 (    0x10) DYLD-STUB$$MGGetBoolAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ad8 (    0x10) DYLD-STUB$$NSLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ae8 (    0x10) DYLD-STUB$$NSSearchPathForDirectoriesInDomains [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462af8 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b08 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b18 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b28 (    0x10) DYLD-STUB$$std::__1::locale::use_facet(std::__1::locale::id&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b38 (    0x10) DYLD-STUB$$std::__1::ios_base::getloc() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b48 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b58 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::open(char const*, unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b68 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::close() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b78 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b88 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::~basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462b98 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::read(char*, long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ba8 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::seekg(long long, std::__1::ios_base::seekdir) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462bb8 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::tellg() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462bc8 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::getline(char*, long, char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462bd8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462be8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::write(char const*, long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462bf8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c08 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c18 (    0x10) DYLD-STUB$$std::__1::basic_iostream<char, std::__1::char_traits<char>>::~basic_iostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c28 (    0x10) DYLD-STUB$$std::__1::locale::~locale() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c38 (    0x10) DYLD-STUB$$std::__1::ios_base::__set_badbit_and_consider_rethrow() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c48 (    0x10) DYLD-STUB$$std::__1::ios_base::init(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c58 (    0x10) DYLD-STUB$$std::__1::ios_base::clear(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c68 (    0x10) DYLD-STUB$$std::__1::basic_ios<char, std::__1::char_traits<char>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c78 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c88 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462c98 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ca8 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462cb8 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462cc8 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462cd8 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ce8 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462cf8 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d08 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d18 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d28 (    0x10) DYLD-STUB$$__exp10 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d38 (    0x10) DYLD-STUB$$__exp10f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d48 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d58 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d68 (    0x10) DYLD-STUB$$__tolower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d78 (    0x10) DYLD-STUB$$__toupper [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d88 (    0x10) DYLD-STUB$$_os_feature_enabled_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462d98 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462da8 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462db8 (    0x10) DYLD-STUB$$_sl_dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462dc8 (    0x10) DYLD-STUB$$arc4random_uniform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462dd8 (    0x10) DYLD-STUB$$atof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462de8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462df8 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e08 (    0x10) DYLD-STUB$$cblas_sgemm$NEWLAPACK$ILP64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e18 (    0x10) DYLD-STUB$$cblas_sgemv$NEWLAPACK$ILP64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e28 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e38 (    0x10) DYLD-STUB$$cosf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e48 (    0x10) DYLD-STUB$$dispatch_after [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e58 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e68 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e78 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e88 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462e98 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ea8 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462eb8 (    0x10) DYLD-STUB$$exp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ec8 (    0x10) DYLD-STUB$$expf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ed8 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ee8 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ef8 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f08 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f18 (    0x10) DYLD-STUB$$frexpf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f28 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f38 (    0x10) DYLD-STUB$$getpwuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f48 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f58 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f68 (    0x10) DYLD-STUB$$ldexp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f78 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f88 (    0x10) DYLD-STUB$$log10f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462f98 (    0x10) DYLD-STUB$$logf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462fa8 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462fb8 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462fc8 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462fd8 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462fe8 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6462ff8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463008 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463018 (    0x10) DYLD-STUB$$memset_pattern16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463028 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463038 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463048 (    0x10) DYLD-STUB$$notify_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463058 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463068 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463078 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463088 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463098 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630a8 (    0x10) DYLD-STUB$$objc_getClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630b8 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630c8 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630d8 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630e8 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64630f8 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463108 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463118 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463128 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463138 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463148 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463158 (    0x10) DYLD-STUB$$objc_setProperty_atomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463168 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463178 (    0x10) DYLD-STUB$$objc_unsafeClaimAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463188 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463198 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631a8 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631b8 (    0x10) DYLD-STUB$$os_variant_has_internal_diagnostics [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631c8 (    0x10) DYLD-STUB$$posix_memalign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631d8 (    0x10) DYLD-STUB$$powf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631e8 (    0x10) DYLD-STUB$$remote_device_copy_unique_of_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64631f8 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463208 (    0x10) DYLD-STUB$$sinf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463218 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463228 (    0x10) DYLD-STUB$$sscanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463238 (    0x10) DYLD-STUB$$strchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463248 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463258 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463268 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463278 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463288 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463298 (    0x10) DYLD-STUB$$strtod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632a8 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632b8 (    0x10) DYLD-STUB$$strtoul [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632c8 (    0x10) DYLD-STUB$$sysconf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632d8 (    0x10) DYLD-STUB$$sysctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632e8 (    0x10) DYLD-STUB$$times [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64632f8 (    0x10) DYLD-STUB$$vDSP_DFT_DestroySetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463308 (    0x10) DYLD-STUB$$vDSP_DFT_Execute [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463318 (    0x10) DYLD-STUB$$vDSP_DFT_zrop_CreateSetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463328 (    0x10) DYLD-STUB$$vDSP_conv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463338 (    0x10) DYLD-STUB$$vDSP_ctoz [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463348 (    0x10) DYLD-STUB$$vDSP_dotpr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463358 (    0x10) DYLD-STUB$$vDSP_meanv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463368 (    0x10) DYLD-STUB$$vDSP_vadd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463378 (    0x10) DYLD-STUB$$vDSP_vclip [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463388 (    0x10) DYLD-STUB$$vDSP_vfix16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463398 (    0x10) DYLD-STUB$$vDSP_vflt16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633a8 (    0x10) DYLD-STUB$$vDSP_vmul [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633b8 (    0x10) DYLD-STUB$$vDSP_vneg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633c8 (    0x10) DYLD-STUB$$vDSP_vsadd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633d8 (    0x10) DYLD-STUB$$vDSP_vsmul [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633e8 (    0x10) DYLD-STUB$$vDSP_zvmags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a64633f8 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463408 (    0x10) DYLD-STUB$$vsnprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463418 (    0x10) DYLD-STUB$$vvexpf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463428 (    0x10) DYLD-STUB$$vvlogf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463438 (    0x10) DYLD-STUB$$vvrecf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463448 (    0x10) DYLD-STUB$$vvsqrtf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001a6463458 (    0x10) DYLD-STUB$$vvtanhf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001a6463468 (   0x834) __TEXT __objc_methlist
                0x00000001a6463468 (    0x20) _OBJC_$_CLASS_METHODS_VTBlobBuilder [NameNList, MangledNameNList, NList] 
                0x00000001a6463488 (    0x18) _OBJC_$_CLASS_METHODS_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001a64634a0 (    0x20) _OBJC_$_CLASS_METHODS_VTPreferences(Endpoint) [NameNList, MangledNameNList, NList] 
                0x00000001a64634c0 (    0xc0) _OBJC_$_CLASS_METHODS_VTSpeakerIdUtilities [NameNList, MangledNameNList, NList] 
                0x00000001a6463580 (   0x108) _OBJC_$_CLASS_METHODS_VTStateManager [NameNList, MangledNameNList, NList] 
                0x00000001a6463688 (   0x128) _OBJC_$_CLASS_METHODS_VTUtilities [NameNList, MangledNameNList, NList] 
                0x00000001a64637b0 (    0x90) _OBJC_$_CLASS_METHODS_VTUtteranceMetadataManager [NameNList, MangledNameNList, NList] 
                0x00000001a6463840 (    0x38) _OBJC_$_CLASS_METHODS_VTVoiceProfileMigration [NameNList, MangledNameNList, NList] 
                0x00000001a6463878 (    0x38) _OBJC_$_INSTANCE_METHODS_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001a64638b0 (   0x3c0) _OBJC_$_INSTANCE_METHODS_VTPreferences(Endpoint) [NameNList, MangledNameNList, NList] 
                0x00000001a6463c70 (    0x2c) _OBJC_$_INSTANCE_METHODS_VTStateManager [NameNList, MangledNameNList, NList] 
            0x00000001a6463ca0 (   0xe46) __TEXT __const
                0x00000001a6463e00 (    0x10) typeinfo name for TSHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463e10 (    0x17) typeinfo name for NArray<NLRHMMModel> [NameNList, MangledNameNList, NList] 
                0x00000001a6463e27 (    0x1d) typeinfo name for NArray<NLRHMMStateTokens> [NameNList, MangledNameNList, NList] 
                0x00000001a6463e44 (     0xe) typeinfo name for TSSATScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463e52 (    0x16) typeinfo name for TSSupervectorScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463e68 (    0x11) typeinfo name for NDEHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463e79 (    0x19) typeinfo name for NArray<NDELRHMMModel> [NameNList, MangledNameNList, NList] 
                0x00000001a6463e92 (     0xf) typeinfo name for NSATImpostor [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463ea1 (     0xe) typeinfo name for NSATSpeaker [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463eaf (     0xd) typeinfo name for N2DArray<bool> [NameNList, MangledNameNList, NList] 
                0x00000001a6463ebc (     0xf) typeinfo name for NArray<NArray<bool>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463ecb (    0x31) typeinfo name for NArray<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6463efc (     0xf) typeinfo name for NArray<NArray<float>> [NameNList, MangledNameNList, NList] 
                0x00000001a6463f0b (     0xd) typeinfo name for N2DArray<float> [NameNList, MangledNameNList, NList] 
                0x00000001a6463f18 (    0x1a) typeinfo name for NLinkedList<NArray<float>> [NameNList, MangledNameNList, NList] 
                0x00000001a6463f32 (    0x25) typeinfo name for NLinkedList<NArray<float>>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001a6463f57 (    0x1a) typeinfo name for NResizingQueue<NFrame> [NameNList, MangledNameNList, NList] 
                0x00000001a6463f71 (    0x3d) typeinfo name for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>> [NameNList, MangledNameNList, NList] 
                0x00000001a6463fae (    0x48) typeinfo name for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001a6463ff6 (    0x2e) typeinfo name for NArray<NResizingQueue<NFrame>::NElement> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464024 (    0x25) typeinfo name for NResizingQueue<NFrame>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464049 (    0x17) typeinfo name for NDeepnetDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464060 (    0x12) typeinfo name for NSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464072 (     0xf) typeinfo name for NMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464081 (     0xd) typeinfo name for NBaseLayer [NameNList, MangledNameNList, NList] 
                0x00000001a646408e (    0x13) typeinfo name for NLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64640a1 (    0x16) typeinfo name for NNormalizationLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64640b7 (     0xf) typeinfo name for NOffsetLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64640c6 (    0x15) typeinfo name for NFixSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64640db (    0x16) typeinfo name for NFixMatrixBaseLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64640f1 (    0x16) typeinfo name for NFixLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464107 (    0x16) typeinfo name for N8BitSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001a646411d (    0x13) typeinfo name for N8BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464130 (    0x17) typeinfo name for N8BitLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464147 (     0xd) typeinfo name for NClipLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464154 (    0x14) typeinfo name for NSigmoidOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464168 (    0x16) typeinfo name for NShiftRegisterLayer [NameNList, MangledNameNList, NList] 
                0x00000001a646417e (    0x16) typeinfo name for NBlockDiagonalLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464194 (    0x18) typeinfo name for NSubVectorSelectLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64641ac (    0x14) typeinfo name for NVectorScaleLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64641c0 (    0x17) typeinfo name for NLogSoftmaxOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64641d7 (    0x1b) typeinfo name for NSigned8BitQuantizeLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64641f2 (    0x1e) typeinfo name for NSigned8BitInput1DConvLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464210 (    0x13) typeinfo name for N4BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464223 (     0xd) typeinfo name for NLSTMLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464230 (    0x11) typeinfo name for N8BitLSTMLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464241 (    0x19) typeinfo name for NSigned8BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001a646425a (    0x13) typeinfo name for Nfp32tofp16Layer [NameNList, MangledNameNList, NList] 
                0x00000001a646426d (    0x13) typeinfo name for Nfp16tofp32Layer [NameNList, MangledNameNList, NList] 
                0x00000001a6464280 (    0x12) typeinfo name for Nfp16ScaleLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464292 (    0x13) typeinfo name for Nfp16OffsetLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64642a5 (    0x13) typeinfo name for Nfp16MatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64642b8 (    0x17) typeinfo name for Nfp16PalettizedLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64642cf (    0x18) typeinfo name for Nfp16SigmoidOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001a64642e7 (    0x19) typeinfo name for Nfp16AMPalettizedLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464300 (    0x11) typeinfo name for NArray<NLayer> [NameNList, MangledNameNList, NList] 
                0x00000001a6464311 (    0x1e) typeinfo name for NSmartPointer<NBaseLayer> [NameNList, MangledNameNList, NList] 
                0x00000001a646432f (     0x8) typeinfo name for NLayer [NameNList, MangledNameNList, NList] 
                0x00000001a6464337 (     0xc) typeinfo name for NArray<void*> [NameNList, MangledNameNList, NList] 
                0x00000001a6464343 (    0x14) typeinfo name for NFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464357 (    0x1c) typeinfo name for NGaussianFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464373 (    0x19) typeinfo name for NGaussianMixtureModels [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a646438c (    0x1c) typeinfo name for NArray<NGaussianMixture> [NameNList, MangledNameNList, NList] 
                0x00000001a64643a8 (    0x14) typeinfo name for NArray<NGaussian> [NameNList, MangledNameNList, NList] 
                0x00000001a64643bc (     0xc) typeinfo name for NArray<double> [NameNList, MangledNameNList, NList] 
                0x00000001a64643c8 (     0x8) kCurrVTMetaVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64643d0 (    0x11) typeinfo name for NPhoneHMMArray [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64643e1 (    0x14) typeinfo name for NArray<NPhoneHMM> [NameNList, MangledNameNList, NList] 
                0x00000001a64643f5 (    0x11) typeinfo name for NStringHash<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001a6464406 (    0x11) typeinfo name for NMap<NString, unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001a6464417 (    0x24) typeinfo name for NHash<NMap<NString, unsigned int>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001a646443b (    0x34) typeinfo name for NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>> [NameNList, MangledNameNList, NList] 
                0x00000001a646446f (    0x2b) typeinfo name for NLinkedList<NMap<NString, unsigned int>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001a646449a (    0x36) typeinfo name for NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001a64644d0 (     0xb) typeinfo name for NPhoneHMM [NameNList, MangledNameNList, NList] 
                0x00000001a64644db (    0x14) typeinfo name for NArray<NHMMState> [NameNList, MangledNameNList, NList] 
                0x00000001a64644ef (    0x19) typeinfo name for NAutoArray<NPhoneHMM> [NameNList, MangledNameNList, NList] 
                0x00000001a6464508 (     0x4) PFILE_READ_LENGTH [NameNList, MangledNameNList, NList] 
                0x00000001a646450c (     0xb) typeinfo name for NPipeFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464517 (    0x15) typeinfo name for NFloatDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a646452c (    0x10) typeinfo name for NDistribution [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646453c (    0x16) typeinfo name for NDistributionLoader [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464552 (    0x15) typeinfo name for NDummyDistribution [NameNList, MangledNameNList, NList] 
                0x00000001a6464567 (    0x1a) typeinfo name for NFixedDummyDistribution [NameNList, MangledNameNList, NList] 
                0x00000001a6464581 (    0x1f) typeinfo name for NFastFixedDistribution<signed char, int, unsigned short, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001a64645a0 (     0xd) typeinfo name for NArray<unsigned short const*> [NameNList, MangledNameNList, NList] 
                0x00000001a64645ad (    0x10) typeinfo name for NAutoArray<unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001a64645bd (     0xb) typeinfo name for NArray<unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001a64645c8 (     0xb) typeinfo name for NArray<short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64645d3 (    0x1f) typeinfo name for NFastFixedDistribution<signed char, int, unsigned int, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001a64645f2 (     0xd) typeinfo name for NArray<unsigned int const*> [NameNList, MangledNameNList, NList] 
                0x00000001a64645ff (    0x10) typeinfo name for NAutoArray<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001a646460f (    0x1f) typeinfo name for NFastFixedDistribution<short, int, unsigned short, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001a646462e (    0x1f) typeinfo name for NFastFixedDistribution<short, int, unsigned int, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001a646464d (    0x1f) typeinfo name for NFastFixedDistribution<signed char, int, unsigned short, unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001a646466c (    0x1f) typeinfo name for NFastFixedDistribution<signed char, int, unsigned int, unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001a646468b (    0x19) typeinfo name for N16ByteAlignedString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646a4 (     0x4) NZFILE_READ_LENGTH [NameNList, MangledNameNList, NList] 
                0x00000001a64646a8 (     0x8) typeinfo name for NZFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646b0 (     0xa) typeinfo name for NZipFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646ba (     0xe) typeinfo name for NFidFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646c8 (     0x8) kNDEStateBufferSizeBytes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646d0 (     0x8) kNDEConfigDataMaxSizeBytes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646d8 (     0xe) typeinfo name for NAutoString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646e6 (     0xb) typeinfo name for NArray<int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646f1 (     0xb) typeinfo name for NArray<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64646fc (     0xb) typeinfo name for NArray<unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001a6464707 (     0x8) typeinfo name for NFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646470f (    0x11) typeinfo name for NArray<NFrame> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464720 (    0x2d) typeinfo name for NLinkedList<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646474d (    0x38) typeinfo name for NLinkedList<NMap<NString, NString>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464785 (    0x13) typeinfo name for NMap<NString, NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464798 (    0x36) typeinfo name for NArray<NLinkedList<NMap<NString, NString>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64647ce (     0xa) typeinfo name for NFilePtr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64647d8 (    0x1c) typeinfo name for NSmartPointer<NBaseFile> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64647f4 (    0x26) typeinfo name for NHash<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646481a (    0x20) typeinfo name for NMap<NString, NConfigSection> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646483a (    0x33) typeinfo name for NHash<NMap<NString, NConfigSection>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001a646486d (    0x43) typeinfo name for NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64648b0 (    0x3a) typeinfo name for NLinkedList<NMap<NString, NConfigSection>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a64648ea (    0x45) typeinfo name for NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646492f (    0x12) typeinfo name for NArray<NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464941 (     0xb) typeinfo name for NArray<float> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646494c (     0x7) typeinfo name for NFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464953 (     0xb) typeinfo name for NBaseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a646495e (    0x2f) typeinfo name for std::__1::basic_fstream<char, std::__1::char_traits<char>> [NameNList, MangledNameNList, NList] 
                0x00000001a646498d (     0xe) typeinfo name for NOffsetFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a646499b (    0xff) base64_revtable [NameNList, MangledNameNList, NList] 
                0x00000001a6464a9a (     0x9) typeinfo name for NString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464aa3 (    0x18) typeinfo name for NLinkedList<NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464abb (    0x23) typeinfo name for NLinkedList<NString>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a6464ade (     0x8) typeinfo name for NTimer [EXT, NameNList, MangledNameNList, NList] 
            0x00000001a6464ae8 (  0x5b10) __TEXT __gcc_except_tab
                0x00000001a6464ae8 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b04 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b24 (    0x34) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b58 (    0x1c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b74 (    0x18) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b8c (    0x10) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001a6464b9c (   0x134) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001a6464cd0 (    0x18) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001a6464ce8 (    0x18) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d00 (    0x18) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d18 (    0x18) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d30 (    0x18) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d48 (    0x18) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d60 (    0x18) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d78 (    0x18) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001a6464d90 (    0x18) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x00000001a6464da8 (    0x14) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001a6464dbc (    0x84) GCC_except_table173 [NameNList, MangledNameNList, NList] 
                0x00000001a6464e40 (    0x1c) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001a6464e5c (    0x1c) GCC_except_table186 [NameNList, MangledNameNList, NList] 
                0x00000001a6464e78 (    0x1c) GCC_except_table188 [NameNList, MangledNameNList, NList] 
                0x00000001a6464e94 (    0x78) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001a6464f0c (    0x14) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x00000001a6464f20 (    0x70) GCC_except_table202 [NameNList, MangledNameNList, NList] 
                0x00000001a6464f90 (    0x68) GCC_except_table205 [NameNList, MangledNameNList, NList] 
                0x00000001a6464ff8 (    0x28) GCC_except_table207 [NameNList, MangledNameNList, NList] 
                0x00000001a6465020 (    0x1c) GCC_except_table208 [NameNList, MangledNameNList, NList] 
                0x00000001a646503c (    0x18) GCC_except_table209 [NameNList, MangledNameNList, NList] 
                0x00000001a6465054 (    0x1c) GCC_except_table211 [NameNList, MangledNameNList, NList] 
                0x00000001a6465070 (    0x10) GCC_except_table219 [NameNList, MangledNameNList, NList] 
                0x00000001a6465080 (    0x10) GCC_except_table220 [NameNList, MangledNameNList, NList] 
                0x00000001a6465090 (    0x18) GCC_except_table222 [NameNList, MangledNameNList, NList] 
                0x00000001a64650a8 (    0x18) GCC_except_table223 [NameNList, MangledNameNList, NList] 
                0x00000001a64650c0 (    0x14) GCC_except_table224 [NameNList, MangledNameNList, NList] 
                0x00000001a64650d4 (    0x14) GCC_except_table225 [NameNList, MangledNameNList, NList] 
                0x00000001a64650e8 (    0x14) GCC_except_table226 [NameNList, MangledNameNList, NList] 
                0x00000001a64650fc (    0x14) GCC_except_table227 [NameNList, MangledNameNList, NList] 
                0x00000001a6465110 (    0x14) GCC_except_table228 [NameNList, MangledNameNList, NList] 
                0x00000001a6465124 (    0x14) GCC_except_table229 [NameNList, MangledNameNList, NList] 
                0x00000001a6465138 (    0x14) GCC_except_table231 [NameNList, MangledNameNList, NList] 
                0x00000001a646514c (    0x10) GCC_except_table238 [NameNList, MangledNameNList, NList] 
                0x00000001a646515c (    0x10) GCC_except_table239 [NameNList, MangledNameNList, NList] 
                0x00000001a646516c (    0x18) GCC_except_table241 [NameNList, MangledNameNList, NList] 
                0x00000001a6465184 (    0x18) GCC_except_table242 [NameNList, MangledNameNList, NList] 
                0x00000001a646519c (    0x18) GCC_except_table243 [NameNList, MangledNameNList, NList] 
                0x00000001a64651b4 (    0x14) GCC_except_table244 [NameNList, MangledNameNList, NList] 
                0x00000001a64651c8 (    0x14) GCC_except_table245 [NameNList, MangledNameNList, NList] 
                0x00000001a64651dc (    0x14) GCC_except_table246 [NameNList, MangledNameNList, NList] 
                0x00000001a64651f0 (    0x14) GCC_except_table247 [NameNList, MangledNameNList, NList] 
                0x00000001a6465204 (    0x5c) GCC_except_table248 [NameNList, MangledNameNList, NList] 
                0x00000001a6465260 (    0x14) GCC_except_table249 [NameNList, MangledNameNList, NList] 
                0x00000001a6465274 (    0x18) GCC_except_table253 [NameNList, MangledNameNList, NList] 
                0x00000001a646528c (     0xc) GCC_except_table261 [NameNList, MangledNameNList, NList] 
                0x00000001a6465298 (    0x10) GCC_except_table268 [NameNList, MangledNameNList, NList] 
                0x00000001a64652a8 (    0x18) GCC_except_table297 [NameNList, MangledNameNList, NList] 
                0x00000001a64652c0 (    0x28) GCC_except_table304 [NameNList, MangledNameNList, NList] 
                0x00000001a64652e8 (    0x18) GCC_except_table312 [NameNList, MangledNameNList, NList] 
                0x00000001a6465300 (    0x28) GCC_except_table396 [NameNList, MangledNameNList, NList] 
                0x00000001a6465328 (    0xc0) GCC_except_table414 [NameNList, MangledNameNList, NList] 
                0x00000001a64653e8 (    0x10) GCC_except_table415 [NameNList, MangledNameNList, NList] 
                0x00000001a64653f8 (    0x14) GCC_except_table417 [NameNList, MangledNameNList, NList] 
                0x00000001a646540c (    0x10) GCC_except_table425 [NameNList, MangledNameNList, NList] 
                0x00000001a646541c (    0x10) GCC_except_table437 [NameNList, MangledNameNList, NList] 
                0x00000001a646542c (    0x14) GCC_except_table461 [NameNList, MangledNameNList, NList] 
                0x00000001a6465440 (    0x30) GCC_except_table476 [NameNList, MangledNameNList, NList] 
                0x00000001a6465470 (    0x18) GCC_except_table482 [NameNList, MangledNameNList, NList] 
                0x00000001a6465488 (    0x50) GCC_except_table483 [NameNList, MangledNameNList, NList] 
                0x00000001a64654d8 (    0x50) GCC_except_table484 [NameNList, MangledNameNList, NList] 
                0x00000001a6465528 (    0x50) GCC_except_table485 [NameNList, MangledNameNList, NList] 
                0x00000001a6465578 (    0x50) GCC_except_table486 [NameNList, MangledNameNList, NList] 
                0x00000001a64655c8 (    0x50) GCC_except_table487 [NameNList, MangledNameNList, NList] 
                0x00000001a6465618 (    0x54) GCC_except_table488 [NameNList, MangledNameNList, NList] 
                0x00000001a646566c (    0x50) GCC_except_table489 [NameNList, MangledNameNList, NList] 
                0x00000001a64656bc (    0x50) GCC_except_table490 [NameNList, MangledNameNList, NList] 
                0x00000001a646570c (    0x50) GCC_except_table491 [NameNList, MangledNameNList, NList] 
                0x00000001a646575c (    0x50) GCC_except_table492 [NameNList, MangledNameNList, NList] 
                0x00000001a64657ac (    0x50) GCC_except_table493 [NameNList, MangledNameNList, NList] 
                0x00000001a64657fc (    0x50) GCC_except_table495 [NameNList, MangledNameNList, NList] 
                0x00000001a646584c (    0x50) GCC_except_table496 [NameNList, MangledNameNList, NList] 
                0x00000001a646589c (    0x54) GCC_except_table497 [NameNList, MangledNameNList, NList] 
                0x00000001a64658f0 (    0x54) GCC_except_table498 [NameNList, MangledNameNList, NList] 
                0x00000001a6465944 (    0x50) GCC_except_table499 [NameNList, MangledNameNList, NList] 
                0x00000001a6465994 (    0x50) GCC_except_table500 [NameNList, MangledNameNList, NList] 
                0x00000001a64659e4 (    0x54) GCC_except_table501 [NameNList, MangledNameNList, NList] 
                0x00000001a6465a38 (    0x50) GCC_except_table502 [NameNList, MangledNameNList, NList] 
                0x00000001a6465a88 (    0x50) GCC_except_table503 [NameNList, MangledNameNList, NList] 
                0x00000001a6465ad8 (    0x20) GCC_except_table505 [NameNList, MangledNameNList, NList] 
                0x00000001a6465af8 (    0x3c) GCC_except_table506 [NameNList, MangledNameNList, NList] 
                0x00000001a6465b34 (    0x78) GCC_except_table507 [NameNList, MangledNameNList, NList] 
                0x00000001a6465bac (    0x14) GCC_except_table508 [NameNList, MangledNameNList, NList] 
                0x00000001a6465bc0 (    0x14) GCC_except_table511 [NameNList, MangledNameNList, NList] 
                0x00000001a6465bd4 (    0x18) GCC_except_table513 [NameNList, MangledNameNList, NList] 
                0x00000001a6465bec (    0x14) GCC_except_table515 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c00 (    0x10) GCC_except_table523 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c10 (    0x10) GCC_except_table524 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c20 (    0x18) GCC_except_table527 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c38 (    0x10) GCC_except_table535 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c48 (    0x10) GCC_except_table536 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c58 (    0x10) GCC_except_table538 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c68 (    0x10) GCC_except_table539 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c78 (    0x1c) GCC_except_table545 [NameNList, MangledNameNList, NList] 
                0x00000001a6465c94 (    0x20) GCC_except_table550 [NameNList, MangledNameNList, NList] 
                0x00000001a6465cb4 (   0x7cc) GCC_except_table552 [NameNList, MangledNameNList, NList] 
                0x00000001a6466480 (    0x20) GCC_except_table572 [NameNList, MangledNameNList, NList] 
                0x00000001a64664a0 (    0x18) GCC_except_table573 [NameNList, MangledNameNList, NList] 
                0x00000001a64664b8 (    0x10) GCC_except_table586 [NameNList, MangledNameNList, NList] 
                0x00000001a64664c8 (    0x10) GCC_except_table587 [NameNList, MangledNameNList, NList] 
                0x00000001a64664d8 (     0xc) GCC_except_table595 [NameNList, MangledNameNList, NList] 
                0x00000001a64664e4 (    0xfc) GCC_except_table600 [NameNList, MangledNameNList, NList] 
                0x00000001a64665e0 (    0x74) GCC_except_table601 [NameNList, MangledNameNList, NList] 
                0x00000001a6466654 (    0x68) GCC_except_table602 [NameNList, MangledNameNList, NList] 
                0x00000001a64666bc (    0x68) GCC_except_table603 [NameNList, MangledNameNList, NList] 
                0x00000001a6466724 (   0x1c0) GCC_except_table604 [NameNList, MangledNameNList, NList] 
                0x00000001a64668e4 (    0x90) GCC_except_table605 [NameNList, MangledNameNList, NList] 
                0x00000001a6466974 (    0x14) GCC_except_table606 [NameNList, MangledNameNList, NList] 
                0x00000001a6466988 (    0x18) GCC_except_table612 [NameNList, MangledNameNList, NList] 
                0x00000001a64669a0 (   0x120) GCC_except_table630 [NameNList, MangledNameNList, NList] 
                0x00000001a6466ac0 (    0x14) GCC_except_table632 [NameNList, MangledNameNList, NList] 
                0x00000001a6466ad4 (    0x20) GCC_except_table636 [NameNList, MangledNameNList, NList] 
                0x00000001a6466af4 (    0x10) GCC_except_table676 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b04 (    0x10) GCC_except_table677 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b14 (    0x10) GCC_except_table684 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b24 (    0x30) GCC_except_table782 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b54 (    0x18) GCC_except_table789 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b6c (    0x10) GCC_except_table795 [NameNList, MangledNameNList, NList] 
                0x00000001a6466b7c (    0x5c) GCC_except_table816 [NameNList, MangledNameNList, NList] 
                0x00000001a6466bd8 (    0x6c) GCC_except_table817 [NameNList, MangledNameNList, NList] 
                0x00000001a6466c44 (    0x18) GCC_except_table818 [NameNList, MangledNameNList, NList] 
                0x00000001a6466c5c (    0x20) GCC_except_table819 [NameNList, MangledNameNList, NList] 
                0x00000001a6466c7c (    0x6c) GCC_except_table820 [NameNList, MangledNameNList, NList] 
                0x00000001a6466ce8 (    0x40) GCC_except_table821 [NameNList, MangledNameNList, NList] 
                0x00000001a6466d28 (    0x40) GCC_except_table827 [NameNList, MangledNameNList, NList] 
                0x00000001a6466d68 (    0xec) GCC_except_table828 [NameNList, MangledNameNList, NList] 
                0x00000001a6466e54 (    0x10) GCC_except_table859 [NameNList, MangledNameNList, NList] 
                0x00000001a6466e64 (    0x10) GCC_except_table861 [NameNList, MangledNameNList, NList] 
                0x00000001a6466e74 (   0x498) GCC_except_table862 [NameNList, MangledNameNList, NList] 
                0x00000001a646730c (    0x1c) GCC_except_table863 [NameNList, MangledNameNList, NList] 
                0x00000001a6467328 (    0x14) GCC_except_table864 [NameNList, MangledNameNList, NList] 
                0x00000001a646733c (    0x14) GCC_except_table865 [NameNList, MangledNameNList, NList] 
                0x00000001a6467350 (    0x14) GCC_except_table866 [NameNList, MangledNameNList, NList] 
                0x00000001a6467364 (   0x1c0) GCC_except_table869 [NameNList, MangledNameNList, NList] 
                0x00000001a6467524 (    0x40) GCC_except_table870 [NameNList, MangledNameNList, NList] 
                0x00000001a6467564 (    0x40) GCC_except_table871 [NameNList, MangledNameNList, NList] 
                0x00000001a64675a4 (    0x14) GCC_except_table872 [NameNList, MangledNameNList, NList] 
                0x00000001a64675b8 (    0x14) GCC_except_table873 [NameNList, MangledNameNList, NList] 
                0x00000001a64675cc (    0x84) GCC_except_table874 [NameNList, MangledNameNList, NList] 
                0x00000001a6467650 (    0x18) GCC_except_table884 [NameNList, MangledNameNList, NList] 
                0x00000001a6467668 (    0x20) GCC_except_table890 [NameNList, MangledNameNList, NList] 
                0x00000001a6467688 (    0x18) GCC_except_table906 [NameNList, MangledNameNList, NList] 
                0x00000001a64676a0 (    0x18) GCC_except_table914 [NameNList, MangledNameNList, NList] 
                0x00000001a64676b8 (    0x18) GCC_except_table915 [NameNList, MangledNameNList, NList] 
                0x00000001a64676d0 (    0x14) GCC_except_table917 [NameNList, MangledNameNList, NList] 
                0x00000001a64676e4 (    0x14) GCC_except_table921 [NameNList, MangledNameNList, NList] 
                0x00000001a64676f8 (    0x10) GCC_except_table929 [NameNList, MangledNameNList, NList] 
                0x00000001a6467708 (    0x10) GCC_except_table930 [NameNList, MangledNameNList, NList] 
                0x00000001a6467718 (    0x18) GCC_except_table932 [NameNList, MangledNameNList, NList] 
                0x00000001a6467730 (    0x18) GCC_except_table933 [NameNList, MangledNameNList, NList] 
                0x00000001a6467748 (    0x18) GCC_except_table934 [NameNList, MangledNameNList, NList] 
                0x00000001a6467760 (    0x14) GCC_except_table935 [NameNList, MangledNameNList, NList] 
                0x00000001a6467774 (    0x14) GCC_except_table936 [NameNList, MangledNameNList, NList] 
                0x00000001a6467788 (    0x14) GCC_except_table937 [NameNList, MangledNameNList, NList] 
                0x00000001a646779c (    0x14) GCC_except_table938 [NameNList, MangledNameNList, NList] 
                0x00000001a64677b0 (    0x14) GCC_except_table941 [NameNList, MangledNameNList, NList] 
                0x00000001a64677c4 (    0x14) GCC_except_table942 [NameNList, MangledNameNList, NList] 
                0x00000001a64677d8 (    0x14) GCC_except_table943 [NameNList, MangledNameNList, NList] 
                0x00000001a64677ec (    0x14) GCC_except_table944 [NameNList, MangledNameNList, NList] 
                0x00000001a6467800 (    0x8c) GCC_except_table946 [NameNList, MangledNameNList, NList] 
                0x00000001a646788c (    0x18) GCC_except_table948 [NameNList, MangledNameNList, NList] 
                0x00000001a64678a4 (    0x18) GCC_except_table950 [NameNList, MangledNameNList, NList] 
                0x00000001a64678bc (    0x1c) GCC_except_table951 [NameNList, MangledNameNList, NList] 
                0x00000001a64678d8 (    0xb0) GCC_except_table953 [NameNList, MangledNameNList, NList] 
                0x00000001a6467988 (    0x40) GCC_except_table955 [NameNList, MangledNameNList, NList] 
                0x00000001a64679c8 (    0x18) GCC_except_table956 [NameNList, MangledNameNList, NList] 
                0x00000001a64679e0 (    0x1c) GCC_except_table957 [NameNList, MangledNameNList, NList] 
                0x00000001a64679fc (    0x14) GCC_except_table960 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a10 (    0x14) GCC_except_table961 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a24 (    0x1c) GCC_except_table964 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a40 (    0x1c) GCC_except_table967 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a5c (    0x14) GCC_except_table969 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a70 (    0x20) GCC_except_table970 [NameNList, MangledNameNList, NList] 
                0x00000001a6467a90 (    0x14) GCC_except_table976 [NameNList, MangledNameNList, NList] 
                0x00000001a6467aa4 (    0x14) GCC_except_table979 [NameNList, MangledNameNList, NList] 
                0x00000001a6467ab8 (    0x14) GCC_except_table982 [NameNList, MangledNameNList, NList] 
                0x00000001a6467acc (    0x14) GCC_except_table983 [NameNList, MangledNameNList, NList] 
                0x00000001a6467ae0 (    0x14) GCC_except_table984 [NameNList, MangledNameNList, NList] 
                0x00000001a6467af4 (    0xf4) GCC_except_table1014 [NameNList, MangledNameNList, NList] 
                0x00000001a6467be8 (    0x1c) GCC_except_table1015 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c04 (    0x1c) GCC_except_table1016 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c20 (    0x1c) GCC_except_table1017 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c3c (    0x1c) GCC_except_table1018 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c58 (    0x1c) GCC_except_table1019 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c74 (    0x1c) GCC_except_table1020 [NameNList, MangledNameNList, NList] 
                0x00000001a6467c90 (    0xdc) GCC_except_table1031 [NameNList, MangledNameNList, NList] 
                0x00000001a6467d6c (    0x90) GCC_except_table1046 [NameNList, MangledNameNList, NList] 
                0x00000001a6467dfc (    0x18) GCC_except_table1062 [NameNList, MangledNameNList, NList] 
                0x00000001a6467e14 (    0x18) GCC_except_table1064 [NameNList, MangledNameNList, NList] 
                0x00000001a6467e2c (    0x84) GCC_except_table1065 [NameNList, MangledNameNList, NList] 
                0x00000001a6467eb0 (   0x134) GCC_except_table1066 [NameNList, MangledNameNList, NList] 
                0x00000001a6467fe4 (   0x190) GCC_except_table1067 [NameNList, MangledNameNList, NList] 
                0x00000001a6468174 (    0x18) GCC_except_table1090 [NameNList, MangledNameNList, NList] 
                0x00000001a646818c (    0x18) GCC_except_table1092 [NameNList, MangledNameNList, NList] 
                0x00000001a64681a4 (    0x84) GCC_except_table1093 [NameNList, MangledNameNList, NList] 
                0x00000001a6468228 (   0x190) GCC_except_table1094 [NameNList, MangledNameNList, NList] 
                0x00000001a64683b8 (    0x18) GCC_except_table1116 [NameNList, MangledNameNList, NList] 
                0x00000001a64683d0 (    0x18) GCC_except_table1118 [NameNList, MangledNameNList, NList] 
                0x00000001a64683e8 (    0x84) GCC_except_table1119 [NameNList, MangledNameNList, NList] 
                0x00000001a646846c (   0x134) GCC_except_table1120 [NameNList, MangledNameNList, NList] 
                0x00000001a64685a0 (   0x190) GCC_except_table1121 [NameNList, MangledNameNList, NList] 
                0x00000001a6468730 (    0x18) GCC_except_table1132 [NameNList, MangledNameNList, NList] 
                0x00000001a6468748 (    0x18) GCC_except_table1134 [NameNList, MangledNameNList, NList] 
                0x00000001a6468760 (    0x84) GCC_except_table1135 [NameNList, MangledNameNList, NList] 
                0x00000001a64687e4 (   0x190) GCC_except_table1136 [NameNList, MangledNameNList, NList] 
                0x00000001a6468974 (    0x18) GCC_except_table1147 [NameNList, MangledNameNList, NList] 
                0x00000001a646898c (    0x18) GCC_except_table1149 [NameNList, MangledNameNList, NList] 
                0x00000001a64689a4 (    0x84) GCC_except_table1150 [NameNList, MangledNameNList, NList] 
                0x00000001a6468a28 (   0x134) GCC_except_table1151 [NameNList, MangledNameNList, NList] 
                0x00000001a6468b5c (   0x190) GCC_except_table1152 [NameNList, MangledNameNList, NList] 
                0x00000001a6468cec (    0x18) GCC_except_table1163 [NameNList, MangledNameNList, NList] 
                0x00000001a6468d04 (    0x18) GCC_except_table1165 [NameNList, MangledNameNList, NList] 
                0x00000001a6468d1c (    0x84) GCC_except_table1166 [NameNList, MangledNameNList, NList] 
                0x00000001a6468da0 (   0x190) GCC_except_table1167 [NameNList, MangledNameNList, NList] 
                0x00000001a6468f30 (    0x10) GCC_except_table1172 [NameNList, MangledNameNList, NList] 
                0x00000001a6468f40 (    0x24) GCC_except_table1209 [NameNList, MangledNameNList, NList] 
                0x00000001a6468f64 (    0x18) GCC_except_table1222 [NameNList, MangledNameNList, NList] 
                0x00000001a6468f7c (    0x18) GCC_except_table1223 [NameNList, MangledNameNList, NList] 
                0x00000001a6468f94 (    0x18) GCC_except_table1224 [NameNList, MangledNameNList, NList] 
                0x00000001a6468fac (    0x18) GCC_except_table1225 [NameNList, MangledNameNList, NList] 
                0x00000001a6468fc4 (    0x1c) GCC_except_table1234 [NameNList, MangledNameNList, NList] 
                0x00000001a6468fe0 (    0x14) GCC_except_table1236 [NameNList, MangledNameNList, NList] 
                0x00000001a6468ff4 (    0x20) GCC_except_table1237 [NameNList, MangledNameNList, NList] 
                0x00000001a6469014 (    0x14) GCC_except_table1243 [NameNList, MangledNameNList, NList] 
                0x00000001a6469028 (    0x14) GCC_except_table1244 [NameNList, MangledNameNList, NList] 
                0x00000001a646903c (    0x14) GCC_except_table1247 [NameNList, MangledNameNList, NList] 
                0x00000001a6469050 (    0x14) GCC_except_table1248 [NameNList, MangledNameNList, NList] 
                0x00000001a6469064 (    0x14) GCC_except_table1249 [NameNList, MangledNameNList, NList] 
                0x00000001a6469078 (    0x14) GCC_except_table1250 [NameNList, MangledNameNList, NList] 
                0x00000001a646908c (    0x14) GCC_except_table1251 [NameNList, MangledNameNList, NList] 
                0x00000001a64690a0 (    0x14) GCC_except_table1252 [NameNList, MangledNameNList, NList] 
                0x00000001a64690b4 (    0x14) GCC_except_table1253 [NameNList, MangledNameNList, NList] 
                0x00000001a64690c8 (    0x30) GCC_except_table1254 [NameNList, MangledNameNList, NList] 
                0x00000001a64690f8 (    0x14) GCC_except_table1255 [NameNList, MangledNameNList, NList] 
                0x00000001a646910c (    0x14) GCC_except_table1257 [NameNList, MangledNameNList, NList] 
                0x00000001a6469120 (    0x40) GCC_except_table1259 [NameNList, MangledNameNList, NList] 
                0x00000001a6469160 (    0x34) GCC_except_table1260 [NameNList, MangledNameNList, NList] 
                0x00000001a6469194 (    0x38) GCC_except_table1264 [NameNList, MangledNameNList, NList] 
                0x00000001a64691cc (    0x28) GCC_except_table1265 [NameNList, MangledNameNList, NList] 
                0x00000001a64691f4 (    0x20) GCC_except_table1266 [NameNList, MangledNameNList, NList] 
                0x00000001a6469214 (    0x14) GCC_except_table1268 [NameNList, MangledNameNList, NList] 
                0x00000001a6469228 (    0x14) GCC_except_table1269 [NameNList, MangledNameNList, NList] 
                0x00000001a646923c (    0x28) GCC_except_table1272 [NameNList, MangledNameNList, NList] 
                0x00000001a6469264 (    0x20) GCC_except_table1273 [NameNList, MangledNameNList, NList] 
                0x00000001a6469284 (    0x14) GCC_except_table1274 [NameNList, MangledNameNList, NList] 
                0x00000001a6469298 (    0x14) GCC_except_table1276 [NameNList, MangledNameNList, NList] 
                0x00000001a64692ac (    0x3c) GCC_except_table1278 [NameNList, MangledNameNList, NList] 
                0x00000001a64692e8 (    0x18) GCC_except_table1281 [NameNList, MangledNameNList, NList] 
                0x00000001a6469300 (    0x14) GCC_except_table1300 [NameNList, MangledNameNList, NList] 
                0x00000001a6469314 (    0x14) GCC_except_table1301 [NameNList, MangledNameNList, NList] 
                0x00000001a6469328 (    0x24) GCC_except_table1307 [NameNList, MangledNameNList, NList] 
                0x00000001a646934c (    0xa0) GCC_except_table1308 [NameNList, MangledNameNList, NList] 
                0x00000001a64693ec (    0xf4) GCC_except_table1311 [NameNList, MangledNameNList, NList] 
                0x00000001a64694e0 (    0x30) GCC_except_table1312 [NameNList, MangledNameNList, NList] 
                0x00000001a6469510 (   0x194) GCC_except_table1313 [NameNList, MangledNameNList, NList] 
                0x00000001a64696a4 (    0x2c) GCC_except_table1314 [NameNList, MangledNameNList, NList] 
                0x00000001a64696d0 (   0x1d0) GCC_except_table1315 [NameNList, MangledNameNList, NList] 
                0x00000001a64698a0 (    0x14) GCC_except_table1317 [NameNList, MangledNameNList, NList] 
                0x00000001a64698b4 (    0x14) GCC_except_table1318 [NameNList, MangledNameNList, NList] 
                0x00000001a64698c8 (    0x14) GCC_except_table1319 [NameNList, MangledNameNList, NList] 
                0x00000001a64698dc (    0x14) GCC_except_table1320 [NameNList, MangledNameNList, NList] 
                0x00000001a64698f0 (    0x14) GCC_except_table1321 [NameNList, MangledNameNList, NList] 
                0x00000001a6469904 (    0x14) GCC_except_table1322 [NameNList, MangledNameNList, NList] 
                0x00000001a6469918 (   0x16c) GCC_except_table1329 [NameNList, MangledNameNList, NList] 
                0x00000001a6469a84 (    0x6c) GCC_except_table1330 [NameNList, MangledNameNList, NList] 
                0x00000001a6469af0 (    0x14) GCC_except_table1344 [NameNList, MangledNameNList, NList] 
                0x00000001a6469b04 (    0x1c) GCC_except_table1345 [NameNList, MangledNameNList, NList] 
                0x00000001a6469b20 (    0x14) GCC_except_table1347 [NameNList, MangledNameNList, NList] 
                0x00000001a6469b34 (    0x10) GCC_except_table1356 [NameNList, MangledNameNList, NList] 
                0x00000001a6469b44 (    0xac) GCC_except_table1373 [NameNList, MangledNameNList, NList] 
                0x00000001a6469bf0 (    0x14) GCC_except_table1374 [NameNList, MangledNameNList, NList] 
                0x00000001a6469c04 (    0x1c) GCC_except_table1375 [NameNList, MangledNameNList, NList] 
                0x00000001a6469c20 (    0x14) GCC_except_table1376 [NameNList, MangledNameNList, NList] 
                0x00000001a6469c34 (    0x28) GCC_except_table1378 [NameNList, MangledNameNList, NList] 
                0x00000001a6469c5c (    0x28) GCC_except_table1379 [NameNList, MangledNameNList, NList] 
                0x00000001a6469c84 (    0x28) GCC_except_table1389 [NameNList, MangledNameNList, NList] 
                0x00000001a6469cac (    0x3c) GCC_except_table1391 [NameNList, MangledNameNList, NList] 
                0x00000001a6469ce8 (    0x1c) GCC_except_table1392 [NameNList, MangledNameNList, NList] 
                0x00000001a6469d04 (    0x58) GCC_except_table1393 [NameNList, MangledNameNList, NList] 
                0x00000001a6469d5c (    0x14) GCC_except_table1394 [NameNList, MangledNameNList, NList] 
                0x00000001a6469d70 (    0x14) GCC_except_table1395 [NameNList, MangledNameNList, NList] 
                0x00000001a6469d84 (    0x14) GCC_except_table1396 [NameNList, MangledNameNList, NList] 
                0x00000001a6469d98 (    0x30) GCC_except_table1398 [NameNList, MangledNameNList, NList] 
                0x00000001a6469dc8 (   0x230) GCC_except_table1399 [NameNList, MangledNameNList, NList] 
                0x00000001a6469ff8 (    0x18) GCC_except_table1400 [NameNList, MangledNameNList, NList] 
                0x00000001a646a010 (    0x50) GCC_except_table1401 [NameNList, MangledNameNList, NList] 
                0x00000001a646a060 (    0x50) GCC_except_table1403 [NameNList, MangledNameNList, NList] 
                0x00000001a646a0b0 (    0x10) GCC_except_table1429 [NameNList, MangledNameNList, NList] 
                0x00000001a646a0c0 (    0x10) GCC_except_table1430 [NameNList, MangledNameNList, NList] 
                0x00000001a646a0d0 (    0x10) GCC_except_table1437 [NameNList, MangledNameNList, NList] 
                0x00000001a646a0e0 (    0x4c) GCC_except_table1444 [NameNList, MangledNameNList, NList] 
                0x00000001a646a12c (    0x2c) GCC_except_table1446 [NameNList, MangledNameNList, NList] 
                0x00000001a646a158 (    0x20) GCC_except_table1448 [NameNList, MangledNameNList, NList] 
                0x00000001a646a178 (    0x14) GCC_except_table1449 [NameNList, MangledNameNList, NList] 
                0x00000001a646a18c (    0x18) GCC_except_table1450 [NameNList, MangledNameNList, NList] 
                0x00000001a646a1a4 (    0x30) GCC_except_table1451 [NameNList, MangledNameNList, NList] 
                0x00000001a646a1d4 (    0x64) GCC_except_table1452 [NameNList, MangledNameNList, NList] 
                0x00000001a646a238 (    0x10) GCC_except_table1459 [NameNList, MangledNameNList, NList] 
                0x00000001a646a248 (    0x1c) GCC_except_table1467 [NameNList, MangledNameNList, NList] 
                0x00000001a646a264 (    0x20) GCC_except_table1469 [NameNList, MangledNameNList, NList] 
                0x00000001a646a284 (    0x18) GCC_except_table1475 [NameNList, MangledNameNList, NList] 
                0x00000001a646a29c (    0x14) GCC_except_table1478 [NameNList, MangledNameNList, NList] 
                0x00000001a646a2b0 (    0x14) GCC_except_table1488 [NameNList, MangledNameNList, NList] 
                0x00000001a646a2c4 (    0x14) GCC_except_table1497 [NameNList, MangledNameNList, NList] 
                0x00000001a646a2d8 (    0x5c) GCC_except_table1498 [NameNList, MangledNameNList, NList] 
                0x00000001a646a334 (    0x34) GCC_except_table1499 [NameNList, MangledNameNList, NList] 
                0x00000001a646a368 (    0x60) GCC_except_table1500 [NameNList, MangledNameNList, NList] 
                0x00000001a646a3c8 (    0x60) GCC_except_table1502 [NameNList, MangledNameNList, NList] 
                0x00000001a646a428 (    0x14) GCC_except_table1503 [NameNList, MangledNameNList, NList] 
                0x00000001a646a43c (    0x20) GCC_except_table1504 [NameNList, MangledNameNList, NList] 
                0x00000001a646a45c (    0x2c) GCC_except_table1535 [NameNList, MangledNameNList, NList] 
                0x00000001a646a488 (    0x1c) GCC_except_table1549 [NameNList, MangledNameNList, NList] 
                0x00000001a646a4a4 (    0x1c) GCC_except_table1550 [NameNList, MangledNameNList, NList] 
                0x00000001a646a4c0 (    0x5c) GCC_except_table1566 [NameNList, MangledNameNList, NList] 
                0x00000001a646a51c (    0x10) GCC_except_table1568 [NameNList, MangledNameNList, NList] 
                0x00000001a646a52c (     0xc) GCC_except_table1572 [NameNList, MangledNameNList, NList] 
                0x00000001a646a538 (    0x20) GCC_except_table1573 [NameNList, MangledNameNList, NList] 
                0x00000001a646a558 (    0x30) GCC_except_table1577 [NameNList, MangledNameNList, NList] 
                0x00000001a646a588 (    0x20) GCC_except_table1582 [NameNList, MangledNameNList, NList] 
                0x00000001a646a5a8 (    0x14) GCC_except_table1584 [NameNList, MangledNameNList, NList] 
                0x00000001a646a5bc (    0x14) GCC_except_table1585 [NameNList, MangledNameNList, NList] 
                0x00000001a646a5d0 (    0x14) GCC_except_table1586 [NameNList, MangledNameNList, NList] 
                0x00000001a646a5e4 (    0x14) GCC_except_table1587 [NameNList, MangledNameNList, NList] 
            0x00000001a646a5f8 (  0xb3b0) __TEXT __cstring
                0x00000001a647520e (   0x79a) base64_table [NameNList, MangledNameNList, NList] 
            0x00000001a64759a8 (  0x1345) __TEXT __oslogstring
            0x00000001a6476cee (    0xb4) __TEXT __ustring
            0x00000001a6476da2 (    0x66) __TEXT __dlopen_cstrs
                0x00000001a6476da2 (    0x66) audit_stringCoreSpeechFoundation [NameNList, MangledNameNList, NList] 
            0x00000001a6476e08 (  0x1bcc) __TEXT __unwind_info
            0x00000001a64789d8 (    0x38) __TEXT __eh_frame
            0x00000001a6478a10 (    0x9c) __TEXT __objc_classname
            0x00000001a6478aac (  0x1ecf) __TEXT __objc_methname
            0x00000001a647a97b (   0x1f7) __TEXT __objc_methtype
            0x00000001a647ab80 (  0x1480) __TEXT __objc_stubs
                0x00000001a647ab80 (    0x20) objc_msgSend$JSONObjectWithData:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647aba0 (    0x20) objc_msgSend$MD5HashString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647abc0 (    0x20) objc_msgSend$URLByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647abe0 (    0x20) objc_msgSend$URLWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ac00 (    0x20) objc_msgSend$UUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ac20 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ac40 (    0x20) objc_msgSend$VTIsHorseman [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ac60 (    0x20) objc_msgSend$_VTSATBasePath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ac80 (    0x20) objc_msgSend$_VTSATCachePath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647aca0 (    0x20) objc_msgSend$_audioDirectoryNeedsUpgrade: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647acc0 (    0x20) objc_msgSend$_getBaseMetaDictionaryForUtterancePath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ace0 (    0x20) objc_msgSend$_getSATEnrollmentAudioPathForLanguageCodeForLegacyVoiceProfile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ad00 (    0x20) objc_msgSend$_getVoiceTriggerEnabledDidChangeNotificationStringWithDeviceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ad20 (    0x20) objc_msgSend$_getVoiceTriggerEnabledKeyWithDeviceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ad40 (    0x20) objc_msgSend$_gibraltarHasBuiltInMic [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ad60 (    0x20) objc_msgSend$_isLocalVoiceTriggerAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ad80 (    0x20) objc_msgSend$_isNonEndpointDeviceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ada0 (    0x20) objc_msgSend$_isSATMarkedForMarker:languageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647adc0 (    0x20) objc_msgSend$_languageCode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ade0 (    0x20) objc_msgSend$_localeIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ae00 (    0x20) objc_msgSend$_round:withPlaces: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ae20 (    0x20) objc_msgSend$_saveMetaVersionFileAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ae40 (    0x20) objc_msgSend$_setCanUseVoiceTriggerDuringPhoneCall:sender: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ae60 (    0x20) objc_msgSend$_setVoiceTriggerEnabled:sender:deviceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ae80 (    0x20) objc_msgSend$_setVoiceTriggerEnabled:sender:deviceType:endpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647aea0 (    0x20) objc_msgSend$_storeModeEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647aec0 (    0x20) objc_msgSend$_upgradeLocaleDirectoryIfNecessary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647aee0 (    0x20) objc_msgSend$_upgradeUtteranceMeta: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647af00 (    0x20) objc_msgSend$_voiceTriggerEnabledWithDeviceType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647af20 (    0x20) objc_msgSend$_voiceTriggerEnabledWithDeviceType:endpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647af40 (    0x20) objc_msgSend$_writeMetaDict:forUtterancePath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647af60 (    0x20) objc_msgSend$absoluteString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647af80 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647afa0 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647afc0 (    0x20) objc_msgSend$arrayWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647afe0 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b000 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b020 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b040 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b060 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b080 (    0x20) objc_msgSend$compare:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b0a0 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b0c0 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b0e0 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b100 (    0x20) objc_msgSend$containsString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b120 (    0x20) objc_msgSend$contentsOfDirectoryAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b140 (    0x20) objc_msgSend$contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b160 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b180 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b1a0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b1c0 (    0x20) objc_msgSend$createDirectoryAtPath:withIntermediateDirectories:attributes:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b1e0 (    0x20) objc_msgSend$createFileAtPath:contents:attributes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b200 (    0x20) objc_msgSend$createSATDirectoriesForType:forLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b220 (    0x20) objc_msgSend$currentLocale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b240 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b260 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b280 (    0x20) objc_msgSend$dataWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b2a0 (    0x20) objc_msgSend$dataWithContentsOfURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b2c0 (    0x20) objc_msgSend$dataWithJSONObject:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b2e0 (    0x20) objc_msgSend$dataWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b300 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b320 (    0x20) objc_msgSend$dateFromString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b340 (    0x20) objc_msgSend$dateWithTimeIntervalSinceNow: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b360 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b380 (    0x20) objc_msgSend$deviceCategoryForDeviceProductType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b3a0 (    0x20) objc_msgSend$deviceCategoryStringRepresentationForCategoryType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b3c0 (    0x20) objc_msgSend$deviceProductType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b3e0 (    0x20) objc_msgSend$deviceProductVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b400 (    0x20) objc_msgSend$deviceSoftwareVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b420 (    0x20) objc_msgSend$devicesWithVoiceProfileIniCloudForLanguage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b440 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b460 (    0x20) objc_msgSend$dictionaryForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b480 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b4a0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b4c0 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b4e0 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b500 (    0x20) objc_msgSend$enumerateObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b520 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b540 (    0x20) objc_msgSend$fileExistsAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b560 (    0x20) objc_msgSend$fileExistsAtPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b580 (    0x20) objc_msgSend$fileLoggingIsEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b5a0 (    0x20) objc_msgSend$fileLoggingLevel [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b5c0 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b5e0 (    0x20) objc_msgSend$filteredArrayUsingPredicate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b600 (    0x20) objc_msgSend$forceReload [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b620 (    0x20) objc_msgSend$getCurrentVoiceProfileVersionForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b640 (    0x20) objc_msgSend$getDevicesWithAvailablePHSAssetsForLanguage:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b660 (    0x20) objc_msgSend$getPreferencesForEndpoint:fromPreferenceDomain:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b680 (    0x20) objc_msgSend$getProfileVersionFilePathForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b6a0 (    0x20) objc_msgSend$getResourceValue:forKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b6c0 (    0x20) objc_msgSend$getSATAudioDirectoryForType:forLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b6e0 (    0x20) objc_msgSend$getSATDirectoryForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b700 (    0x20) objc_msgSend$getSATDirectoryForModelType:forLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b720 (    0x20) objc_msgSend$getSATModelDirectoryForType:forLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b740 (    0x20) objc_msgSend$initWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b760 (    0x20) objc_msgSend$initWithSuiteName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b780 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b7a0 (    0x20) objc_msgSend$isAlwaysOn [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b7c0 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b7e0 (    0x20) objc_msgSend$isIOS [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b800 (    0x20) objc_msgSend$isInternalInstall [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b820 (    0x20) objc_msgSend$isNano [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b840 (    0x20) objc_msgSend$isRemoteVoiceTriggerAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b860 (    0x20) objc_msgSend$isUtteranceImplicitlyTrained: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b880 (    0x20) objc_msgSend$languageCode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b8a0 (    0x20) objc_msgSend$lastPathComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b8c0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b8e0 (    0x20) objc_msgSend$localeIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b900 (    0x20) objc_msgSend$localeWithLocaleIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b920 (    0x20) objc_msgSend$localizedDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b940 (    0x20) objc_msgSend$localizedTriggerPhraseForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b960 (    0x20) objc_msgSend$moveItemAtPath:toPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b980 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b9a0 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b9c0 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647b9e0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ba00 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ba20 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ba40 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ba60 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647ba80 (    0x20) objc_msgSend$path [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647baa0 (    0x20) objc_msgSend$pathExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bac0 (    0x20) objc_msgSend$predicateWithBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bae0 (    0x20) objc_msgSend$predicateWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bb00 (    0x20) objc_msgSend$rangeOfString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bb20 (    0x20) objc_msgSend$recordedTimeStampOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bb40 (    0x20) objc_msgSend$removeItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bb60 (    0x20) objc_msgSend$saveMetaVersionFileAtSATAudioDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bb80 (    0x20) objc_msgSend$setDateFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bba0 (    0x20) objc_msgSend$setFileLoggingLevel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bbc0 (    0x20) objc_msgSend$setLocale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bbe0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bc00 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bc20 (    0x20) objc_msgSend$setPhraseSpotterEnabled:sender: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bc40 (    0x20) objc_msgSend$setPreferences:forEndpoint:inPreferenceDomain: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bc60 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bc80 (    0x20) objc_msgSend$setVoiceTriggerEnabled:sender: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bca0 (    0x20) objc_msgSend$setVoiceTriggerEnabled:sender:deviceType:endpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bcc0 (    0x20) objc_msgSend$setVoiceTriggerEnabled:sender:endpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bce0 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bd00 (    0x20) objc_msgSend$setWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bd20 (    0x20) objc_msgSend$sharedPreferences [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bd40 (    0x20) objc_msgSend$sortedArrayUsingComparator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bd60 (    0x20) objc_msgSend$sortedArrayUsingSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bd80 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bda0 (    0x20) objc_msgSend$stringByAppendingPathExtension: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bdc0 (    0x20) objc_msgSend$stringByDeletingPathExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bde0 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647be00 (    0x20) objc_msgSend$stringForVTSpIdType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647be20 (    0x20) objc_msgSend$stringFromDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647be40 (    0x20) objc_msgSend$stringWithCString:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647be60 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647be80 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bea0 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bec0 (    0x20) objc_msgSend$supportsMphForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bee0 (    0x20) objc_msgSend$timeIntervalSinceDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bf00 (    0x20) objc_msgSend$timeStampWithSaltGrain [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bf20 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bf40 (    0x20) objc_msgSend$updateVoiceProfileVersionFileForLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bf60 (    0x20) objc_msgSend$voiceTriggerEnabledForEndpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bf80 (    0x20) objc_msgSend$voiceTriggerEnabledWithDeviceType:endpointId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bfa0 (    0x20) objc_msgSend$writeToFile:atomically: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bfc0 (    0x20) objc_msgSend$writeToFile:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001a647bfe0 (    0x20) objc_msgSend$writeToURL:atomically: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001ddb48818 (   0xf18) __DATA_CONST SEGMENT
            0x00000001ddb48818 (    0x90) __DATA_CONST __got
            0x00000001ddb488a8 (   0x238) __DATA_CONST __const
                0x00000001ddb488a8 (     0x8) kVTRemoraEndpointDevices [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb488b0 (    0x20) __block_descriptor_32_e35_B24?0"NSString"8"NSDictionary"16l [NameNList, MangledNameNList, NList] 
                0x00000001ddb488d0 (    0x38) __block_descriptor_32_e31_q24?0"NSString"8"NSString"16l [NameNList, MangledNameNList, NList] 
                0x00000001ddb48908 (     0x8) kVTPreferencesDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48910 (     0x8) kVTNotBackedupPreferencesDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48918 (     0x8) kVTPreferencesVoiceTriggerEnabledDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48920 (     0x8) kVTPreferencesRemoraVoiceTriggerEnabledDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48928 (     0x8) kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48930 (     0x8) kVTPreferencesCanUseVoiceTriggerDuringPhoneCallDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48938 (     0x8) kVTPreferencesRemoteDarwinVoiceTriggerEnabledDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48940 (     0x8) kVTRemoteDarwinVoiceTriggerEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48948 (     0x8) kVTRemoteDarwinWasEverConnectedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48950 (     0x8) kVTVoiceTriggerEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48958 (     0x8) kVTVoiceTriggerWasEverUsedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48960 (     0x8) kVTUserPreferredVoiceTriggerPhraseTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48968 (     0x8) kVTVoiceTriggerEverNotifyCompactTrigger [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48970 (     0x8) kVTEnableVoiceTriggerUponVoiceProfileSyncForLanguageKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48978 (     0x8) kVTPhraseSpotterEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48980 (     0x8) kVTCanUseVoiceTriggerDuringPhoneCall [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48988 (     0x8) kVTBatteryPowerAllowedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48990 (     0x8) kVTEnabledOnChargerKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48998 (     0x8) kVTLFileLoggingLevelKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489a0 (     0x8) kVTOnetimeRemoteAssetQueryRanSuccessfullyKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489a8 (     0x8) kVTSecondPassAudioLoggingEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489b0 (     0x8) kVTInCoreSpeechEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489b8 (     0x8) kVTAudioInjectionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489c0 (     0x8) kVTUseSiriActivationiOS [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489c8 (     0x8) kVTUseSiriActivationwatchOS [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489d0 (     0x8) kVTCoreSpeechInDaemonEnabledKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489d8 (     0x8) kVTMultiPhraseVTEnabled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489e0 (     0x8) kVTVoiceTriggerMLockEnabled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb489e8 (    0x20) kVTPreferencesVTPhraseTypeDidChangeDarwinNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a08 (    0x38) __block_descriptor_40_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001ddb48a40 (     0x8) kVTMetaVersionFileName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a48 (     0x8) kVTMetaVersionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a50 (     0x8) kVTMetaTrainingTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a58 (     0x8) kVTExplicitTrainingType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a60 (     0x8) kVTImplicitTrainingType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a68 (     0x8) kVTMetaHandheldKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a70 (     0x8) kVTNearField [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a78 (     0x8) kVTFarField [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a80 (     0x8) kVTMetaUtteranceWavKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a88 (     0x8) kVTMetaProductVersionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a90 (     0x8) kVTMetaProductTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48a98 (     0x8) kVTAudioRecordContextKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48aa0 (     0x8) kVTAudioRecordDeviceInfoKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48aa8 (     0x8) kVTOtherBiometricResultKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48ab0 (     0x8) kVTContainsPayload [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48ab8 (     0x8) kVTRecordingTimeStampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb48ac0 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001ddb48ae0 (    0x40) __DATA_CONST __objc_classlist
            0x00000001ddb48b20 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001ddb48b28 (   0x1e8) __DATA_CONST __objc_const
                0x00000001ddb48b28 (    0x48) _OBJC_CLASS_RO_$_VTVoiceProfileMigration [NameNList, MangledNameNList, NList] 
                0x00000001ddb48b70 (    0x48) _OBJC_CLASS_RO_$_VTSpeakerIdUtilities [NameNList, MangledNameNList, NList] 
                0x00000001ddb48bb8 (    0x48) _OBJC_CLASS_RO_$_VTUtteranceMetadataManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb48c00 (    0x28) _OBJC_$_INSTANCE_VARIABLES_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001ddb48c28 (    0x18) _OBJC_$_PROP_LIST_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001ddb48c40 (    0x48) _OBJC_CLASS_RO_$_VTUtilities [NameNList, MangledNameNList, NList] 
                0x00000001ddb48c88 (    0x28) _OBJC_$_INSTANCE_VARIABLES_VTStateManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb48cb0 (    0x18) _OBJC_$_PROP_LIST_VTStateManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb48cc8 (    0x48) _OBJC_CLASS_RO_$_VTBlobBuilder [NameNList, MangledNameNList, NList] 
            0x00000001ddb48d10 (   0x860) __DATA_CONST __objc_selrefs
            0x00000001ddb49570 (   0x1c0) __DATA_CONST __objc_arraydata
                0x00000001ddb49570 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x00000001ddb49580 (    0x10) _unnamed_array_storage.121 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49590 (    0xc0) _unnamed_array_storage.243 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49650 (    0xc0) _unnamed_array_storage.244 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49710 (    0x20) _unnamed_array_storage.1239 [NameNList, MangledNameNList, NList] 
        0x00000001ddb49730 (  0x44c0) __AUTH_CONST SEGMENT
            0x00000001ddb49730 (  0x2420) __AUTH_CONST __const
                0x00000001ddb49730 (    0x30) __block_descriptor_48_e8_32s40r_e25_v32?0"NSString"8Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001ddb49760 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001ddb49780 (    0x20) __block_literal_global.53 [NameNList, MangledNameNList, NList] 
                0x00000001ddb497a0 (    0x20) __block_literal_global.56 [NameNList, MangledNameNList, NList] 
                0x00000001ddb497c0 (    0x30) __block_descriptor_40_e8_32s_e35_B24?0"NSString"8"NSDictionary"16l [NameNList, MangledNameNList, NList] 
                0x00000001ddb497f0 (    0x20) vtable for TSHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49810 (    0x10) typeinfo for TSHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49820 (    0x10) typeinfo for NArray<NLRHMMModel> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49830 (    0x10) typeinfo for NArray<NLRHMMStateTokens> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49840 (    0x20) __block_literal_global.82 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49860 (    0x20) __block_literal_global.21 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49880 (    0x20) vtable for TSSATScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb498a0 (    0x10) typeinfo for TSSATScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb498b0 (    0x20) vtable for TSSupervectorScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb498d0 (    0x10) typeinfo for TSSupervectorScorer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb498e0 (    0x20) vtable for NDEHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49900 (    0x10) typeinfo for NDEHMMDetector [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49910 (    0x10) typeinfo for NArray<NDELRHMMModel> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49920 (    0x20) vtable for NSATImpostor [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49940 (    0x10) typeinfo for NSATImpostor [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49950 (    0x20) vtable for NSATSpeaker [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49970 (    0x10) typeinfo for NSATSpeaker [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49980 (    0x10) typeinfo for NArray<NArray<bool>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49990 (    0x18) typeinfo for N2DArray<bool> [NameNList, MangledNameNList, NList] 
                0x00000001ddb499a8 (    0x10) typeinfo for NArray<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb499b8 (    0x20) __block_literal_global.325 [NameNList, MangledNameNList, NList] 
                0x00000001ddb499d8 (    0x20) __block_literal_global.97 [NameNList, MangledNameNList, NList] 
                0x00000001ddb499f8 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001ddb49a28 (    0x30) __block_descriptor_56_e8_32s40s48r_e17_v16?0"NSArray"8l [NameNList, MangledNameNList, NList] 
                0x00000001ddb49a58 (    0x30) __block_descriptor_40_e8_32r_e15_v32?08Q16^B24l [NameNList, MangledNameNList, NList] 
                0x00000001ddb49a88 (    0x20) __block_literal_global.322 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49aa8 (    0x20) __block_literal_global.324 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49ac8 (    0x20) __block_literal_global.326 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49ae8 (    0x20) __block_literal_global.328 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49b08 (    0x20) __block_literal_global.330 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49b28 (    0x20) __block_literal_global.332 [NameNList, MangledNameNList, NList] 
                0x00000001ddb49b48 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001ddb49b78 (    0x10) typeinfo for NArray<NArray<float>> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49b88 (    0x18) typeinfo for N2DArray<float> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49ba0 (    0x10) typeinfo for NLinkedList<NArray<float>> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49bb0 (    0x20) vtable for NLinkedList<NArray<float>>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49bd0 (    0x10) typeinfo for NLinkedList<NArray<float>>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001ddb49be0 (    0x10) typeinfo for NResizingQueue<NFrame> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49bf0 (    0x10) typeinfo for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>> [NameNList, MangledNameNList, NList] 
                0x00000001ddb49c00 (    0x20) vtable for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49c20 (    0x10) typeinfo for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001ddb49c30 (    0x10) typeinfo for NArray<NResizingQueue<NFrame>::NElement> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49c40 (    0x20) vtable for NResizingQueue<NFrame>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49c60 (    0x10) typeinfo for NResizingQueue<NFrame>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49c70 (    0xb8) vtable for NDeepnetDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49d28 (    0x18) typeinfo for NDeepnetDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49d40 (    0x50) vtable for NSigmoidalLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49d90 (    0x10) typeinfo for NBaseLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49da0 (    0x18) typeinfo for NMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49db8 (    0x18) typeinfo for NSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49dd0 (    0x50) vtable for NMatrixLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49e20 (    0x50) vtable for NLogSoftmaxLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49e70 (    0x18) typeinfo for NLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49e88 (    0x50) vtable for NNormalizationLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49ed8 (    0x18) typeinfo for NNormalizationLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49ef0 (    0x50) vtable for NOffsetLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49f40 (    0x18) typeinfo for NOffsetLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49f58 (    0x50) vtable for NFixSigmoidalLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb49fa8 (    0x18) typeinfo for NFixMatrixBaseLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49fc0 (    0x18) typeinfo for NFixSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb49fd8 (    0x50) vtable for NFixLogSoftmaxLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a028 (    0x18) typeinfo for NFixLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a040 (    0x50) vtable for N8BitSigmoidalLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a090 (    0x18) typeinfo for N8BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a0a8 (    0x18) typeinfo for N8BitSigmoidalLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a0c0 (    0x50) vtable for N8BitMatrixLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a110 (    0x50) vtable for N8BitLogSoftmaxLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a160 (    0x18) typeinfo for N8BitLogSoftmaxLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a178 (    0x50) vtable for NClipLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a1c8 (    0x18) typeinfo for NClipLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a1e0 (    0x50) vtable for NSigmoidOnlyLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a230 (    0x18) typeinfo for NSigmoidOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a248 (    0x50) vtable for NShiftRegisterLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a298 (    0x18) typeinfo for NShiftRegisterLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a2b0 (    0x50) vtable for NBlockDiagonalLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a300 (    0x18) typeinfo for NBlockDiagonalLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a318 (    0x50) vtable for NSubVectorSelectLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a368 (    0x18) typeinfo for NSubVectorSelectLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a380 (    0x50) vtable for NVectorScaleLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a3d0 (    0x18) typeinfo for NVectorScaleLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a3e8 (    0x50) vtable for NLogSoftmaxOnlyLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a438 (    0x18) typeinfo for NLogSoftmaxOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a450 (    0x50) vtable for NSigned8BitQuantizeLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a4a0 (    0x18) typeinfo for NSigned8BitQuantizeLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a4b8 (    0x50) vtable for NSigned8BitInput1DConvLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a508 (    0x18) typeinfo for NSigned8BitInput1DConvLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a520 (    0x50) vtable for N4BitMatrixLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a570 (    0x18) typeinfo for N4BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a588 (    0x68) vtable for NLSTMLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a5f0 (    0x18) typeinfo for NLSTMLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a608 (    0x70) vtable for N8BitLSTMLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a678 (    0x18) typeinfo for N8BitLSTMLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a690 (    0x50) vtable for NSigned8BitMatrixLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a6e0 (    0x18) typeinfo for NSigned8BitMatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a6f8 (    0x50) vtable for Nfp32tofp16Layer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a748 (    0x18) typeinfo for Nfp32tofp16Layer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a760 (    0x50) vtable for Nfp16tofp32Layer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a7b0 (    0x18) typeinfo for Nfp16tofp32Layer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a7c8 (    0x50) vtable for Nfp16ScaleLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a818 (    0x18) typeinfo for Nfp16ScaleLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a830 (    0x50) vtable for Nfp16OffsetLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a880 (    0x18) typeinfo for Nfp16OffsetLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a898 (    0x50) vtable for Nfp16MatrixLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a8e8 (    0x18) typeinfo for Nfp16MatrixLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a900 (    0x50) vtable for Nfp16PalettizedLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a950 (    0x18) typeinfo for Nfp16PalettizedLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a968 (    0x50) vtable for Nfp16SigmoidOnlyLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4a9b8 (    0x18) typeinfo for Nfp16SigmoidOnlyLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4a9d0 (    0x50) vtable for Nfp16AMPalettizedLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4aa20 (    0x18) typeinfo for Nfp16AMPalettizedLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aa38 (    0x10) typeinfo for NArray<NLayer> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aa48 (    0x28) vtable for NSmartPointer<NBaseLayer> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4aa70 (    0x10) typeinfo for NSmartPointer<NBaseLayer> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aa80 (    0x28) vtable for NLayer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4aaa8 (    0x18) typeinfo for NLayer [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aac0 (    0x10) typeinfo for NArray<void*> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aad0 (    0x28) vtable for NFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4aaf8 (    0x28) vtable for NGaussianFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab20 (    0x10) typeinfo for NFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab30 (    0x18) typeinfo for NGaussianFixedPointScales [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab48 (    0x10) typeinfo for NArray<NGaussianMixture> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab58 (    0x18) typeinfo for NGaussianMixtureModels [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab70 (    0x10) typeinfo for NArray<NGaussian> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab80 (    0x10) typeinfo for NArray<double> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ab90 (    0x10) typeinfo for NArray<NPhoneHMM> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aba0 (    0x18) typeinfo for NPhoneHMMArray [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4abb8 (    0x20) vtable for NStringHash<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4abd8 (    0x10) typeinfo for NMap<NString, unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4abe8 (    0x18) typeinfo for NStringHash<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac00 (    0x10) typeinfo for NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac10 (    0x18) typeinfo for NHash<NMap<NString, unsigned int>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac28 (    0x10) typeinfo for NLinkedList<NMap<NString, unsigned int>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac38 (    0x20) vtable for NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac58 (    0x10) typeinfo for NLinkedList<NMap<NString, unsigned int>::HashItem>::NElement [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac68 (    0x10) typeinfo for NArray<NHMMState> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac78 (    0x18) typeinfo for NPhoneHMM [NameNList, MangledNameNList, NList] 
                0x00000001ddb4ac90 (    0x18) typeinfo for NAutoArray<NPhoneHMM> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4aca8 (    0x90) vtable for NPipeFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ad38 (    0x18) typeinfo for NPipeFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ad50 (    0xb8) vtable for NFloatDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ae08 (    0x20) vtable for NDistributionLoader [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ae28 (    0x10) typeinfo for NDistribution [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ae38 (    0x18) typeinfo for NFloatDistribution [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ae50 (    0x10) typeinfo for NDistributionLoader [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ae60 (    0xb8) vtable for NDummyDistribution [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4af18 (    0x18) typeinfo for NDummyDistribution [NameNList, MangledNameNList, NList] 
                0x00000001ddb4af30 (    0xb8) vtable for NFixedDummyDistribution [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4afe8 (    0x18) typeinfo for NFixedDummyDistribution [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b000 (    0x18) typeinfo for NFastFixedDistribution<signed char, int, unsigned short, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b018 (    0x10) typeinfo for NArray<unsigned short const*> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b028 (    0x10) typeinfo for NArray<unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b038 (    0x18) typeinfo for NAutoArray<unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b050 (    0x10) typeinfo for NArray<short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b060 (    0x18) typeinfo for NFastFixedDistribution<signed char, int, unsigned int, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b078 (    0x10) typeinfo for NArray<unsigned int const*> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b088 (    0x18) typeinfo for NAutoArray<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b0a0 (    0x18) typeinfo for NFastFixedDistribution<short, int, unsigned short, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b0b8 (    0x18) typeinfo for NFastFixedDistribution<short, int, unsigned int, unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b0d0 (    0x18) typeinfo for NFastFixedDistribution<signed char, int, unsigned short, unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b0e8 (    0x18) typeinfo for NFastFixedDistribution<signed char, int, unsigned int, unsigned short> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b100 (    0x20) __block_literal_global.1131 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b120 (    0x30) __block_descriptor_64_e8_32s40s48r_e15_v32?0816^B24l [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b150 (    0x20) __block_literal_global.1231 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b170 (    0x20) __block_literal_global.22 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b190 (    0x20) __block_literal_global.30 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b1b0 (    0x20) __block_literal_global.33 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b1d0 (    0x20) __block_literal_global.38 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b1f0 (    0x20) __block_literal_global.46 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b210 (    0x20) __block_literal_global.153 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b230 (    0x20) __block_literal_global.155 [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b250 (    0x90) vtable for N16ByteAlignedString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b2e0 (    0x18) typeinfo for N16ByteAlignedString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b2f8 (    0x98) vtable for NZFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b390 (    0x18) typeinfo for NZFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b3a8 (    0x20) vtable for NZipFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b3c8 (    0x10) typeinfo for NZipFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b3d8 (    0x20) vtable for NFidFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b3f8 (    0x10) typeinfo for NFidFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b408 (    0x90) vtable for NAutoString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b498 (    0x18) typeinfo for NAutoString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b4b0 (    0x10) typeinfo for NArray<int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b4c0 (    0x10) typeinfo for NArray<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b4d0 (    0x10) typeinfo for NArray<unsigned char> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b4e0 (    0x18) typeinfo for NFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b4f8 (    0x10) typeinfo for NArray<NFrame> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b508 (    0x10) typeinfo for NLinkedList<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b518 (    0x20) vtable for NLinkedList<NMap<NString, NString>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b538 (    0x10) typeinfo for NLinkedList<NMap<NString, NString>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b548 (    0x10) typeinfo for NMap<NString, NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b558 (    0x10) typeinfo for NArray<NLinkedList<NMap<NString, NString>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b568 (    0x28) vtable for NFilePtr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b590 (    0x10) typeinfo for NSmartPointer<NBaseFile> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b5a0 (    0x18) typeinfo for NFilePtr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b5b8 (    0x28) vtable for NSmartPointer<NBaseFile> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b5e0 (    0x18) typeinfo for NHash<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b5f8 (    0x10) typeinfo for NMap<NString, NConfigSection> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b608 (    0x10) typeinfo for NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b618 (    0x18) typeinfo for NHash<NMap<NString, NConfigSection>::HashItem> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b630 (    0x10) typeinfo for NLinkedList<NMap<NString, NConfigSection>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b640 (    0x20) vtable for NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b660 (    0x10) typeinfo for NLinkedList<NMap<NString, NConfigSection>::HashItem>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b670 (    0x10) typeinfo for NArray<NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b680 (    0x10) typeinfo for NArray<float> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b690 (    0x98) vtable for NFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b728 (    0x10) typeinfo for NBaseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b738 (    0x90) vtable for NBaseFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b7c8 (    0x78) vtable for std::__1::basic_fstream<char, std::__1::char_traits<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b840 (    0x78) construction vtable for std::__1::basic_iostream<char, std::__1::char_traits<char>>-in-std::__1::basic_fstream<char, std::__1::char_traits<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b8b8 (    0x50) construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char>>-in-std::__1::basic_fstream<char, std::__1::char_traits<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b908 (    0x50) construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char>>-in-std::__1::basic_fstream<char, std::__1::char_traits<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4b958 (    0x18) typeinfo for std::__1::basic_fstream<char, std::__1::char_traits<char>> [NameNList, MangledNameNList, NList] 
                0x00000001ddb4b970 (    0xa0) vtable for NOffsetFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ba10 (    0x18) typeinfo for NFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ba28 (    0x18) typeinfo for NOffsetFile [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4ba40 (    0x90) vtable for NString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4bad0 (    0x10) typeinfo for NString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4bae0 (    0x10) typeinfo for NLinkedList<NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4baf0 (    0x20) vtable for NLinkedList<NString>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4bb10 (    0x10) typeinfo for NLinkedList<NString>::NElement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4bb20 (    0x20) vtable for NTimer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ddb4bb40 (    0x10) typeinfo for NTimer [EXT, NameNList, MangledNameNList, NList] 
            0x00000001ddb4bb50 (  0x1760) __AUTH_CONST __cfstring
            0x00000001ddb4d2b0 (    0x48) __AUTH_CONST __objc_intobj
            0x00000001ddb4d2f8 (   0x318) __AUTH_CONST __objc_const
                0x00000001ddb4d2f8 (    0x48) _OBJC_METACLASS_RO_$_VTVoiceProfileMigration [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d340 (    0x48) _OBJC_METACLASS_RO_$_VTSpeakerIdUtilities [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d388 (    0x48) _OBJC_METACLASS_RO_$_VTPreferences [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d3d0 (    0x48) _OBJC_CLASS_RO_$_VTPreferences [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d418 (    0x48) _OBJC_METACLASS_RO_$_VTUtteranceMetadataManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d460 (    0x48) _OBJC_METACLASS_RO_$_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d4a8 (    0x48) _OBJC_CLASS_RO_$_VTBuiltInRTModel [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d4f0 (    0x48) _OBJC_METACLASS_RO_$_VTUtilities [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d538 (    0x48) _OBJC_METACLASS_RO_$_VTStateManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d580 (    0x48) _OBJC_CLASS_RO_$_VTStateManager [NameNList, MangledNameNList, NList] 
                0x00000001ddb4d5c8 (    0x48) _OBJC_METACLASS_RO_$_VTBlobBuilder [NameNList, MangledNameNList, NList] 
            0x00000001ddb4d610 (    0x50) __AUTH_CONST __objc_dictobj
            0x00000001ddb4d660 (    0x18) __AUTH_CONST __objc_arrayobj
            0x00000001ddb4d678 (     0x8) __AUTH_CONST __auth_ptr
            0x00000001ddb4d680 (   0x570) __AUTH_CONST __auth_got
        0x00000001d754cd98 (  0x1248) __AUTH SEGMENT
            0x00000001d754cd98 (   0x230) __AUTH __objc_data
                0x00000001d754cd98 (    0x28) OBJC_CLASS_$_VTUtilities [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cdc0 (    0x28) OBJC_METACLASS_$_VTUtilities [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cde8 (    0x28) OBJC_METACLASS_$_VTVoiceProfileMigration [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ce10 (    0x28) OBJC_METACLASS_$_VTSpeakerIdUtilities [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ce38 (    0x28) OBJC_CLASS_$_VTVoiceProfileMigration [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ce60 (    0x28) OBJC_CLASS_$_VTSpeakerIdUtilities [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ce88 (    0x28) OBJC_CLASS_$_VTUtteranceMetadataManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ceb0 (    0x28) OBJC_METACLASS_$_VTUtteranceMetadataManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ced8 (    0x28) OBJC_CLASS_$_VTBuiltInRTModel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cf00 (    0x28) OBJC_METACLASS_$_VTBuiltInRTModel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cf28 (    0x28) OBJC_METACLASS_$_VTStateManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cf50 (    0x28) OBJC_CLASS_$_VTStateManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cf78 (    0x28) OBJC_METACLASS_$_VTBlobBuilder [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754cfa0 (    0x28) OBJC_CLASS_$_VTBlobBuilder [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d754cfc8 (  0x1018) __AUTH __const_weak
                0x00000001d754cfc8 (    0x38) vtable for NArray<NLRHMMModel> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d000 (    0x38) vtable for NArray<NLRHMMStateTokens> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d038 (    0x38) vtable for NArray<NDELRHMMModel> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d070 (    0x38) vtable for N2DArray<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d0a8 (    0x38) vtable for NArray<NArray<bool>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d0e0 (    0x38) vtable for NArray<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d118 (    0x38) vtable for NArray<NArray<float>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d150 (    0x38) vtable for N2DArray<float> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d188 (    0x60) vtable for NLinkedList<NArray<float>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d1e8 (    0x20) vtable for NResizingQueue<NFrame> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d208 (    0x60) vtable for NLinkedList<NArray<NResizingQueue<NFrame>::NElement>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d268 (    0x38) vtable for NArray<NResizingQueue<NFrame>::NElement> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d2a0 (    0x38) vtable for NArray<NLayer> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d2d8 (    0x38) vtable for NArray<void*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d310 (    0x38) vtable for NGaussianMixtureModels [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d348 (    0x38) vtable for NArray<NGaussian> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d380 (    0x38) vtable for NArray<NGaussianMixture> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d3b8 (    0x38) vtable for NArray<double> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d3f0 (    0x38) vtable for NPhoneHMMArray [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d428 (    0x20) vtable for NMap<NString, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d448 (    0x38) vtable for NHash<NMap<NString, unsigned int>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d480 (    0x38) vtable for NArray<NLinkedList<NMap<NString, unsigned int>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d4b8 (    0x60) vtable for NLinkedList<NMap<NString, unsigned int>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d518 (    0x38) vtable for NArray<NPhoneHMM> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d550 (    0x38) vtable for NPhoneHMM [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d588 (    0x38) vtable for NArray<NHMMState> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d5c0 (    0x48) vtable for NAutoArray<NPhoneHMM> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d608 (    0xb8) vtable for NFastFixedDistribution<signed char, int, unsigned short, unsigned char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d6c0 (    0x38) vtable for NArray<unsigned short const*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d6f8 (    0x48) vtable for NAutoArray<unsigned short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d740 (    0x38) vtable for NArray<unsigned short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d778 (    0x38) vtable for NArray<short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d7b0 (    0xb8) vtable for NFastFixedDistribution<signed char, int, unsigned int, unsigned char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d868 (    0x38) vtable for NArray<unsigned int const*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d8a0 (    0x48) vtable for NAutoArray<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d8e8 (    0xb8) vtable for NFastFixedDistribution<short, int, unsigned short, unsigned char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754d9a0 (    0xb8) vtable for NFastFixedDistribution<short, int, unsigned int, unsigned char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754da58 (    0xb8) vtable for NFastFixedDistribution<signed char, int, unsigned short, unsigned short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754db10 (    0xb8) vtable for NFastFixedDistribution<signed char, int, unsigned int, unsigned short> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dbc8 (    0x38) vtable for NArray<int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dc00 (    0x38) vtable for NArray<unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dc38 (    0x38) vtable for NArray<unsigned char> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dc70 (    0x38) vtable for NFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dca8 (    0x38) vtable for NArray<NFrame> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dce0 (    0x60) vtable for NLinkedList<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dd40 (    0x20) vtable for NMap<NString, NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dd60 (    0x38) vtable for NArray<NLinkedList<NMap<NString, NString>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dd98 (    0x38) vtable for NHash<NMap<NString, NString>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ddd0 (    0x20) vtable for NMap<NString, NConfigSection> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754ddf0 (    0x38) vtable for NHash<NMap<NString, NConfigSection>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754de28 (    0x38) vtable for NArray<NLinkedList<NMap<NString, NConfigSection>::HashItem>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754de60 (    0x60) vtable for NLinkedList<NMap<NString, NConfigSection>::HashItem> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754dec0 (    0x38) vtable for NArray<NString> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754def8 (    0x38) vtable for NArray<float> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754df30 (    0x50) VTT for std::__1::basic_fstream<char, std::__1::char_traits<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d754df80 (    0x60) vtable for NLinkedList<NString> [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d6161658 (  0xa598) __DATA SEGMENT
            0x00000001d6161658 (   0x330) __DATA __got_weak
            0x00000001d6161988 (    0xd8) __DATA __objc_classrefs
            0x00000001d6161a60 (    0x10) __DATA __objc_superrefs
            0x00000001d6161a70 (     0x8) __DATA __objc_ivar
                0x00000001d6161a70 (     0x4) OBJC_IVAR_$_VTBuiltInRTModel._builtInRTModelDictionary [NameNList, MangledNameNList, NList] 
                0x00000001d6161a74 (     0x4) OBJC_IVAR_$_VTStateManager._coreSpeechKeepAliveHandler [NameNList, MangledNameNList, NList] 
            0x00000001d6161a78 (  0xa039) __DATA __data
                0x00000001d6161a78 (     0x8) sharedPreferences.sSharedPreferences [NameNList, MangledNameNList, NList] 
                0x00000001d6161a80 (     0x8) sharedPreferences.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d6161a88 (     0x8) isInternalInstall.isInternal [NameNList, MangledNameNList, NList] 
                0x00000001d6161a90 (     0x8) isInternalInstall.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d6161a98 (     0x8) VTLoggingSubsystem [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6161aa0 (     0x8) kVTLoggingContextFramework [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6161aa8 (     0x8) VTErrorDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6161ab0 (     0x1) NMemPool::m_bLocked [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6161ab1 (  0xa000) gVTRTModelData [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d616bab8 (    0x14) __DATA __common
                0x00000001d616bab8 (     0x8) NMemPool::m_pData [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d616bac0 (     0x4) NMemPool::m_iAlignBytes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d616bac4 (     0x4) NMemPool::m_iSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d616bac8 (     0x4) NMemPool::m_iPos [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d616bad0 (   0x120) __DATA __bss
                0x00000001d616bad0 (     0x8) VTAudioLogDirectory.logPath [NameNList, MangledNameNList, NList] 
                0x00000001d616bad8 (     0x8) VTAudioLogDirectory.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bae0 (     0x8) _dateFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d616bae8 (     0x8) _VTGetOrCreateAudioLogDirectory.audioFileDir [NameNList, MangledNameNList, NList] 
                0x00000001d616baf0 (     0x8) isVoiceTriggerAvailable.retValue [NameNList, MangledNameNList, NList] 
                0x00000001d616baf8 (     0x8) isVoiceTriggerAvailable.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb00 (     0x8) useSiriActivationSPIForiOS.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb08 (     0x8) useSiriActivationSPIForiOS.ret [NameNList, MangledNameNList, NList] 
                0x00000001d616bb10 (     0x8) useSiriActivationSPIForwatchOS.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb18 (     0x1) useSiriActivationSPIForwatchOS.ret [NameNList, MangledNameNList, NList] 
                0x00000001d616bb19 (     0x7) corespeechDaemonEnabled.defaultValue [NameNList, MangledNameNList, NList] 
                0x00000001d616bb20 (     0x8) corespeechDaemonEnabled.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb28 (     0x8) isMphVTEnabled.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb30 (     0x1) isMphVTEnabled.mphVTEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d616bb31 (     0x7) shouldOverwriteVoiceTriggerMLock.shouldOverwrite [NameNList, MangledNameNList, NList] 
                0x00000001d616bb38 (     0x8) shouldOverwriteVoiceTriggerMLock.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb40 (     0x8) overwritingVoiceTriggerMLock.voiceTriggerMLockEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d616bb48 (     0x8) overwritingVoiceTriggerMLock.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb50 (     0x8) getCSUtilsClass.softClass [NameNList, MangledNameNList, NList] 
                0x00000001d616bb58 (     0x8) CoreSpeechFoundationLibraryCore.frameworkLibrary [NameNList, MangledNameNList, NList] 
                0x00000001d616bb60 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb68 (     0x8) sharedInstance.sharedRTModel [NameNList, MangledNameNList, NList] 
                0x00000001d616bb70 (     0x8) isNonUI.isNonUI [NameNList, MangledNameNList, NList] 
                0x00000001d616bb78 (     0x8) isNonUI.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb80 (     0x8) VTIsHorseman.isHorseman [NameNList, MangledNameNList, NList] 
                0x00000001d616bb88 (     0x8) VTIsHorseman.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb90 (     0x8) supportBargeIn.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bb98 (     0x8) supportRemoteDarwinVoiceTrigger.supportDarwinVT [NameNList, MangledNameNList, NList] 
                0x00000001d616bba0 (     0x8) supportRemoteDarwinVoiceTrigger.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bba8 (     0x8) deviceCategoryForDeviceProductType:.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bbb0 (     0x8) deviceCategoryForDeviceProductType:.nonAopDeviceSet [NameNList, MangledNameNList, NList] 
                0x00000001d616bbb8 (     0x8) deviceCategoryForDeviceProductType:.macOsDeviceSet [NameNList, MangledNameNList, NList] 
                0x00000001d616bbc0 (     0x8) VTMachAbsoluteTimeGetTimeInterval:.rate [NameNList, MangledNameNList, NList] 
                0x00000001d616bbc8 (     0x8) VTMachAbsoluteTimeGetTimeInterval:.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bbd0 (     0x8) isTorpedo.isTorpedo [NameNList, MangledNameNList, NList] 
                0x00000001d616bbd8 (     0x8) isTorpedo.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d616bbe0 (     0x1) gIsMultiInstance [NameNList, MangledNameNList, NList] 
                0x00000001d616bbe1 (     0x7) gHasValidModel [NameNList, MangledNameNList, NList] 
                0x00000001d616bbe8 (     0x8) gpNovDetect [NameNList, MangledNameNList, NList] 
        0x00000001d6f75640 (    0x68) __DATA_DIRTY SEGMENT
            0x00000001d6f75640 (    0x50) __DATA_DIRTY __objc_data
                0x00000001d6f75640 (    0x28) OBJC_CLASS_$_VTPreferences [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6f75668 (    0x28) OBJC_METACLASS_$_VTPreferences [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d6f75690 (     0x8) __DATA_DIRTY __common
                0x00000001d6f75690 (     0x8) VTLogContextFacilityVoiceTrigger [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d6f75698 (    0x10) __DATA_DIRTY __bss
                0x00000001d6f75698 (     0x8) VTLogInitIfNeeded.once [NameNList, MangledNameNList, NList] 
                0x00000001d6f756a0 (     0x8) initndlib()::bNDLibInitialized [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
