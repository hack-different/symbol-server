Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/SiriNetwork.framework/Versions/A/SiriNetwork [arm64e, 0.029474 seconds]:
    284BBBE3-939F-361F-805D-A7A9A3309433 /System/Library/PrivateFrameworks/SiriNetwork.framework/Versions/A/SiriNetwork [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000020faf0000 ( 0x98000) __TEXT SEGMENT
            0x000000020faf0000 (  0x2840) MACH_HEADER
            0x000000020faf2840 ( 0x7ac30) __TEXT __text
                0x000000020faf2840 (     0x8) -[SNLinkRecommendationInfo btPreference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2848 (     0x8) -[SNLinkRecommendationInfo setBtPreference:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2850 (     0x8) -[SNLinkRecommendationInfo wifiPreference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2858 (     0x8) -[SNLinkRecommendationInfo setWifiPreference:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2860 (     0x8) -[SNLinkRecommendationInfo btRSSI] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2868 (     0x8) -[SNLinkRecommendationInfo setBtRSSI:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2870 (     0x8) -[SNLinkRecommendationInfo wifiRSSI] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2878 (     0x8) -[SNLinkRecommendationInfo setWifiRSSI:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2880 (     0x8) -[SNLinkRecommendationInfo wifiSNR] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2888 (     0x8) -[SNLinkRecommendationInfo setWifiSNR:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2890 (     0x8) -[SNLinkRecommendationInfo beaconPER] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2898 (     0x8) -[SNLinkRecommendationInfo setBeaconPER:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28a0 (     0x8) -[SNLinkRecommendationInfo nwType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28a8 (     0x8) -[SNLinkRecommendationInfo setNwType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28b0 (     0x8) -[SNLinkRecommendationInfo wifiCCA] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28b8 (     0x8) -[SNLinkRecommendationInfo setWifiCCA:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28c0 (     0x8) -[SNLinkRecommendationInfo lsmRecommendationBe] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28c8 (     0x8) -[SNLinkRecommendationInfo setLsmRecommendationBe:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28d0 (     0x8) -[SNLinkRecommendationInfo expectedThroughputVIBE] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28d8 (     0x8) -[SNLinkRecommendationInfo setExpectedThroughputVIBE:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28e0 (     0x8) -[SNLinkRecommendationInfo packetLifetimeVIBE] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28e8 (     0x8) -[SNLinkRecommendationInfo setPacketLifetimeVIBE:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28f0 (     0x8) -[SNLinkRecommendationInfo packetLossRateVIBE] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf28f8 (     0x8) -[SNLinkRecommendationInfo setPacketLossRateVIBE:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2900 (     0x8) -[SNLinkRecommendationInfo btRetransmissionRateTx] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2908 (     0x8) -[SNLinkRecommendationInfo setBtRetransmissionRateTx:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2910 (     0x8) -[SNLinkRecommendationInfo btRetransmissionRateRx] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2918 (     0x8) -[SNLinkRecommendationInfo setBtRetransmissionRateRx:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2920 (     0x8) -[SNLinkRecommendationInfo btTech] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2928 (     0x8) -[SNLinkRecommendationInfo setBtTech:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2930 (     0x8) -[SNLinkRecommendationInfo timeTaken] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2938 (     0x8) -[SNLinkRecommendationInfo setTimeTaken:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2940 (    0x68) -[SNSpeechPacket init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29a8 (     0x8) -[SNSpeechPacket aceId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29b0 (     0x8) -[SNSpeechPacket setAceId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29b8 (     0x8) -[SNSpeechPacket refId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29c0 (     0x8) -[SNSpeechPacket setRefId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29c8 (     0x8) -[SNSpeechPacket packets] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29d0 (     0x8) -[SNSpeechPacket setPackets:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29d8 (     0x8) -[SNSpeechPacket packetNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29e0 (     0x8) -[SNSpeechPacket setPacketNumber:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29e8 (     0x8) -[SNSpeechPacket serializedAceDataError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29f0 (     0x8) -[SNSpeechPacket bufferingAllowedDuringActiveSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf29f8 (     0x8) -[SNSpeechPacket isProvisional] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a00 (     0x8) -[SNSpeechPacket isRestartable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a08 (     0x8) -[SNSpeechPacket isRetryable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a10 (     0x8) -[SNSpeechPacket logDiagnostics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a18 (     0x8) -[SNSpeechPacket requestId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a20 (     0x8) -[SNSpeechPacket setSessionRequestId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a28 (     0x8) -[SNSpeechPacket supportedByLocalSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a30 (     0x8) -[SNSpeechPacket supportedByRemoteLimitedSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a38 (     0x8) -[SNSpeechPacket underlyingSpeechPacket] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a40 (     0xc) -[SNSpeechPacket setUnderlyingSpeechPacket:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a4c (     0xc) -[SNSpeechPacket .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2a58 (    0xc0) -[SNConnectionMetrics getConnectionMetricsDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b18 (     0x8) -[SNConnectionMetrics remoteMetrics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b20 (     0xc) -[SNConnectionMetrics setRemoteMetrics:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b2c (     0x8) -[SNConnectionMetrics snapshotTriggerReason] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b34 (     0x8) -[SNConnectionMetrics setSnapshotTriggerReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b3c (     0x8) -[SNConnectionMetrics providerStyle] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b44 (     0x8) -[SNConnectionMetrics setProviderStyle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b4c (     0x8) -[SNConnectionMetrics metricsCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b54 (     0x8) -[SNConnectionMetrics setMetricsCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b5c (     0x8) -[SNConnectionMetrics policyId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b64 (     0x8) -[SNConnectionMetrics setPolicyId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b6c (     0x8) -[SNConnectionMetrics timeUntilOpen] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b74 (     0x8) -[SNConnectionMetrics setTimeUntilOpen:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b7c (     0x8) -[SNConnectionMetrics timeUntilFirstByteRead] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b84 (     0x8) -[SNConnectionMetrics setTimeUntilFirstByteRead:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b8c (     0x8) -[SNConnectionMetrics attemptCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b94 (     0x8) -[SNConnectionMetrics setAttemptCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2b9c (     0x8) -[SNConnectionMetrics dnsResolutionTime] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2ba4 (     0x8) -[SNConnectionMetrics setDnsResolutionTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bac (     0x8) -[SNConnectionMetrics connectionStartTimeToDNSResolutionTimeMsec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bb4 (     0x8) -[SNConnectionMetrics setConnectionStartTimeToDNSResolutionTimeMsec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bbc (     0x8) -[SNConnectionMetrics connectionEstablishmentTimeMsec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bc4 (     0x8) -[SNConnectionMetrics setConnectionEstablishmentTimeMsec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bcc (     0x8) -[SNConnectionMetrics connectionStartTimeToConnectionEstablishmentTimeMsec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bd4 (     0x8) -[SNConnectionMetrics setConnectionStartTimeToConnectionEstablishmentTimeMsec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bdc (     0x8) -[SNConnectionMetrics connectionStartTimeToTLSHandshakeTimeMsec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2be4 (     0x8) -[SNConnectionMetrics setConnectionStartTimeToTLSHandshakeTimeMsec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bec (     0x8) -[SNConnectionMetrics tlsVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bf4 (     0x8) -[SNConnectionMetrics setTlsVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2bfc (     0x8) -[SNConnectionMetrics tlsHandshakeTimeMsec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c04 (     0x8) -[SNConnectionMetrics setTlsHandshakeTimeMsec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c0c (     0x8) -[SNConnectionMetrics pingCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c14 (     0x8) -[SNConnectionMetrics setPingCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c1c (     0x8) -[SNConnectionMetrics meanPing] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c24 (     0x8) -[SNConnectionMetrics setMeanPing:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c2c (     0x8) -[SNConnectionMetrics unacknowledgedPingCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c34 (     0x8) -[SNConnectionMetrics setUnacknowledgedPingCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c3c (     0x8) -[SNConnectionMetrics flowNetworkInterfaceType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c44 (     0x8) -[SNConnectionMetrics setFlowNetworkInterfaceType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c4c (     0x8) -[SNConnectionMetrics tcpInfoMetricsByInterfaceName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c54 (     0x8) -[SNConnectionMetrics setTCPInfoMetricsByInterfaceName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c5c (     0x8) -[SNConnectionMetrics subflowCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c64 (     0x8) -[SNConnectionMetrics setSubflowCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c6c (     0x8) -[SNConnectionMetrics connectedSubflowCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c74 (     0x8) -[SNConnectionMetrics setConnectedSubflowCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c7c (     0x8) -[SNConnectionMetrics subflowSwitchCounts] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c84 (     0x8) -[SNConnectionMetrics setSubflowSwitchCounts:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c8c (     0x8) -[SNConnectionMetrics primarySubflowInterfaceName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c94 (     0x8) -[SNConnectionMetrics setPrimarySubflowInterfaceName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2c9c (     0x8) -[SNConnectionMetrics connectionMethod] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2ca4 (     0x8) -[SNConnectionMetrics setConnectionMethod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cac (     0x8) -[SNConnectionMetrics connectionEdgeID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cb4 (     0x8) -[SNConnectionMetrics setConnectionEdgeID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cbc (     0x8) -[SNConnectionMetrics connectionEdgeType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cc4 (     0x8) -[SNConnectionMetrics setConnectionEdgeType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2ccc (     0x8) -[SNConnectionMetrics connectionMethodHistory] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cd4 (     0x8) -[SNConnectionMetrics setConnectionMethodHistory:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cdc (     0x8) -[SNConnectionMetrics connectionFallbackReason] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2ce4 (     0x8) -[SNConnectionMetrics setConnectionFallbackReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cec (     0x8) -[SNConnectionMetrics connectionDelay] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cf4 (     0x8) -[SNConnectionMetrics setConnectionDelay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2cfc (     0x8) -[SNConnectionMetrics firstTxByteDelay] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d04 (     0x8) -[SNConnectionMetrics setFirstTxByteDelay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d0c (     0x8) -[SNConnectionMetrics carrierName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d14 (     0x8) -[SNConnectionMetrics setCarrierName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d1c (     0x8) -[SNConnectionMetrics signalStrengthBars] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d24 (     0x8) -[SNConnectionMetrics setSignalStrengthBars:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d2c (     0x8) -[SNConnectionMetrics simSubscriptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d34 (     0x8) -[SNConnectionMetrics setSimSubscriptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d3c (     0x8) -[SNConnectionMetrics wifiPhyMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d44 (     0x8) -[SNConnectionMetrics setWifiPhyMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d4c (     0x8) -[SNConnectionMetrics wifiChannelInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d54 (     0x8) -[SNConnectionMetrics setWifiChannelInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d5c (     0x8) -[SNConnectionMetrics rssi] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d64 (     0x8) -[SNConnectionMetrics setRssi:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d6c (     0x8) -[SNConnectionMetrics snr] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d74 (     0x8) -[SNConnectionMetrics setSnr:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d7c (     0x8) -[SNConnectionMetrics cca] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d84 (     0x8) -[SNConnectionMetrics setCca:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d8c (     0x8) -[SNConnectionMetrics isCaptive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d94 (     0x8) -[SNConnectionMetrics setIsCaptive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2d9c (     0x8) -[SNConnectionMetrics symptomsBasedNetworkQuality] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2da4 (     0x8) -[SNConnectionMetrics setSymptomsBasedNetworkQuality:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2dac (     0x8) -[SNConnectionMetrics idsLastMessageDelay] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2db4 (     0x8) -[SNConnectionMetrics setIdsLastMessageDelay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2dbc (     0x8) -[SNConnectionMetrics idsLastSocketDelay] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2dc4 (     0x8) -[SNConnectionMetrics setIdsLastSocketDelay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2dcc (     0x8) -[SNConnectionMetrics idsLastSocketOpenError] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2dd4 (     0x8) -[SNConnectionMetrics setIdsLastSocketOpenError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf2ddc (   0x23c) -[SNConnectionMetrics .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3018 (     0x4) -[AceObject(SNSessionObject) serializedAceDataError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf301c (    0x1c) -[SNConnection init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3038 (   0x2c0) -[SNConnection initWithConnectionInfo:connectionQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf32f8 (    0x44) -[SNConnection start] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf333c (    0x10) -[SNConnection sendData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf334c (     0x4) __25-[SNConnection sendData:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3350 (     0x8) -[SNConnection setSendPings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3358 (     0x8) -[SNConnection cancelSynchronously:isOnConnectionQueue:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3360 (     0x8) -[SNConnection getSNConnectionMetrics:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3368 (    0xbc) -[SNConnection willStartConnection:type:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3424 (    0x8c) -[SNConnection willStartConnection:with:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf34b0 (   0x10c) -[SNConnection didOpenConnectionType:type:routeId:delay:method:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf35bc (    0x8c) -[SNConnection didReceiveObject:object:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3648 (    0x8c) -[SNConnection didReceiveAceObject:object:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf36d4 (    0x74) -[SNConnection didCloseConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3748 (    0x8c) -[SNConnection didEncounterError:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf37d4 (    0x8c) -[SNConnection didEncounterIntermediateError:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3860 (    0x2c) -[SNConnection delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf388c (     0xc) -[SNConnection setDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3898 (     0x8) -[SNConnection connectionInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf38a0 (     0xc) -[SNConnection setConnectionInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf38ac (     0x8) -[SNConnection underlyingConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf38b4 (     0xc) -[SNConnection setUnderlyingConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf38c0 (    0x4c) -[SNConnection .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf390c (    0x54) +[SNNetworkManager sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3960 (    0x44) __34+[SNNetworkManager sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf39a4 (    0xb8) -[SNNetworkManager _init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3a5c (    0xdc) -[SNNetworkManager addObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3b38 (    0x58) __32-[SNNetworkManager addObserver:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3b90 (    0x44) __copy_helper_block_e8_32s40w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3bd4 (    0x3c) __destroy_helper_block_e8_32s40w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3c10 (    0xdc) -[SNNetworkManager removeObserver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3cec (    0x64) __35-[SNNetworkManager removeObserver:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3d50 (    0xdc) -[SNNetworkManager startMonitoringNetworkForHost:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3e2c (    0x4c) __50-[SNNetworkManager startMonitoringNetworkForHost:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3e78 (    0xa8) -[SNNetworkManager stopMonitoringNetwork] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3f20 (    0x44) __41-[SNNetworkManager stopMonitoringNetwork]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3f64 (     0xc) __copy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3f70 (     0x8) __destroy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf3f78 (    0xb8) -[SNNetworkManager acquireWiFiAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4030 (    0x4c) __41-[SNNetworkManager acquireWiFiAssertion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf407c (    0xa8) -[SNNetworkManager releaseWiFiAssertion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4124 (    0x44) __40-[SNNetworkManager releaseWiFiAssertion]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4168 (     0x8) -[SNNetworkManager forceFastDormancy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4170 (     0xc) +[SNNetworkManager acquireDormancySuspendAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf417c (     0xc) +[SNNetworkManager releaseDormancySuspendAssertion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4188 (     0x8) -[SNNetworkManager registerClient] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4190 (     0x8) -[SNNetworkManager unregisterClient] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4198 (     0x8) -[SNNetworkManager subscribeLinkRecommendation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf41a0 (     0x8) -[SNNetworkManager getLinkRecommendation:recommendation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf41a8 (     0x8) -[SNNetworkManager getLinkRecommendationMetrics:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf41b0 (    0xb4) -[SNNetworkManager networkManagerLostNonWWANConnectivity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4264 (   0x114) __58-[SNNetworkManager networkManagerLostNonWWANConnectivity:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4378 (    0xb4) -[SNNetworkManager networkManagerNetworkUnreachable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf442c (   0x114) __53-[SNNetworkManager networkManagerNetworkUnreachable:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4540 (    0xb4) -[SNNetworkManager networkManagerNonWWANDidBecomeAvailable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf45f4 (   0x114) __60-[SNNetworkManager networkManagerNonWWANDidBecomeAvailable:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4708 (     0x8) -[SNNetworkManager underlyingNetworkManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4710 (     0xc) -[SNNetworkManager setUnderlyingNetworkManager:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf471c (    0x50) -[SNNetworkManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf476c (    0x1c) -[SNNetworkAnalytics init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4788 (    0x70) -[SNNetworkAnalytics _init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf47f8 (    0x54) +[SNNetworkAnalytics sharedSNNetworkAnalytics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf484c (    0x44) __46+[SNNetworkAnalytics sharedSNNetworkAnalytics]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4890 (     0x8) -[SNNetworkAnalytics reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4898 (     0x8) -[SNNetworkAnalytics resetNetId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48a0 (     0x8) -[SNNetworkAnalytics setNetId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48a8 (     0x8) -[SNNetworkAnalytics getNetId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48b0 (     0x8) -[SNNetworkAnalytics getSequenceNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48b8 (     0x8) -[SNNetworkAnalytics setIsConnectionActive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48c0 (     0x8) -[SNNetworkAnalytics isConnectionActive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48c8 (     0x8) -[SNNetworkAnalytics setNetIdAvailable:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48d0 (     0x8) -[SNNetworkAnalytics isNetIdAvailable] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48d8 (     0x8) -[SNNetworkAnalytics increaseSequenceNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48e0 (     0x8) -[SNNetworkAnalytics resetSequenceNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48e8 (     0x8) -[SNNetworkAnalytics setOrchestratorRequestId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48f0 (     0x8) -[SNNetworkAnalytics getOrchestratorRequestId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf48f8 (     0x8) -[SNNetworkAnalytics logRequestLinkBetweenOrchestratorAndNetworkComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4900 (     0x8) -[SNNetworkAnalytics logSessionConnectionHttpHeaderCreated:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4908 (     0x8) -[SNNetworkAnalytics logNetworkConnectionStatePreparationSnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4910 (     0x8) -[SNNetworkAnalytics logDebugNetworkConnectionStatePreparationSnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4918 (     0x8) -[SNNetworkAnalytics logNetworkConnectionStateReadySnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4920 (     0x8) -[SNNetworkAnalytics logDebugNetworkConnectionStateReadySnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4928 (     0x8) -[SNNetworkAnalytics logSessionConnectionSnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4930 (     0x8) -[SNNetworkAnalytics logDebugSessionConnectionSnapshotCaptured:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4938 (     0x8) -[SNNetworkAnalytics logSessionConnectionFailed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4940 (     0x8) -[SNNetworkAnalytics logPeerConnectionFailed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4948 (     0x8) -[SNNetworkAnalytics underlyingNetworkAnalytics] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4950 (     0xc) -[SNNetworkAnalytics setUnderlyingNetworkAnalytics:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf495c (     0xc) -[SNNetworkAnalytics .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4968 (    0x74) -[SNConnectionType initWithTechnology:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf49dc (    0xac) -[SNConnectionType description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4a88 (     0x8) -[SNConnectionType technology] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4a90 (     0x8) -[SNConnectionType isWWAN] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4a98 (     0x8) -[SNConnectionType isEdge] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4aa0 (     0x8) -[SNConnectionType canUseWiFiDirectly] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4aa8 (     0x8) -[SNConnectionType underlyingConnectionType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4ab0 (     0xc) -[SNConnectionType setUnderlyingConnectionType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4abc (     0xc) -[SNConnectionType .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4ac8 (    0x1c) -[SNConnectionTCPInfoMetrics init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4ae4 (   0x3b0) -[SNConnectionTCPInfoMetrics initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:packetsReceived:bytesSent:bytesReceived:bytesRetransmitted:bytesUnacked:duplicateBytesReceived:outOfOrderBytesReceived:sendBufferBytes:sendBandwidth:synRetransmits:tfoSynDataAcked:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4e94 (    0xe4) -[SNConnectionTCPInfoMetrics description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4f78 (     0x8) -[SNConnectionTCPInfoMetrics interfaceName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4f80 (     0x8) -[SNConnectionTCPInfoMetrics rttCurrent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4f88 (     0x8) -[SNConnectionTCPInfoMetrics rttSmoothed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4f90 (     0x8) -[SNConnectionTCPInfoMetrics rttVariance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4f98 (     0x8) -[SNConnectionTCPInfoMetrics rttBest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fa0 (     0x8) -[SNConnectionTCPInfoMetrics packetsSent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fa8 (     0x8) -[SNConnectionTCPInfoMetrics packetsReceived] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fb0 (     0x8) -[SNConnectionTCPInfoMetrics bytesSent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fb8 (     0x8) -[SNConnectionTCPInfoMetrics bytesReceived] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fc0 (     0x8) -[SNConnectionTCPInfoMetrics bytesRetransmitted] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fc8 (     0x8) -[SNConnectionTCPInfoMetrics bytesUnacked] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fd0 (     0x8) -[SNConnectionTCPInfoMetrics duplicateBytesReceived] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fd8 (     0x8) -[SNConnectionTCPInfoMetrics outOfOrderBytesReceived] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fe0 (     0x8) -[SNConnectionTCPInfoMetrics sendBufferBytes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4fe8 (     0x8) -[SNConnectionTCPInfoMetrics sendBandwidth] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4ff0 (     0x8) -[SNConnectionTCPInfoMetrics synRetransmits] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf4ff8 (     0x8) -[SNConnectionTCPInfoMetrics tfoSynDataAcked] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5000 (    0xf8) -[SNConnectionTCPInfoMetrics .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf50f8 (    0x70) -[SNNetworkWiFiManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5168 (   0x138) -[SNNetworkWiFiManager getWiFiRecord] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52a0 (     0x8) -[SNNetworkWiFiManager isWiFiEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52a8 (     0x8) -[SNNetworkWiFiManager underlyingNetworkWiFiManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52b0 (     0xc) -[SNNetworkWiFiManager setUnderlyingNetworkWiFiManager:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52bc (     0xc) -[SNNetworkWiFiManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52c8 (     0x8) -[SNWiFiRecord rssi] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52d0 (     0x8) -[SNWiFiRecord setRssi:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52d8 (     0x8) -[SNWiFiRecord snr] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52e0 (     0x8) -[SNWiFiRecord setSnr:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52e8 (     0x8) -[SNWiFiRecord cca] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52f0 (     0x8) -[SNWiFiRecord setCca:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf52f8 (     0x8) -[SNWiFiRecord channelInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5300 (     0x8) -[SNWiFiRecord setChannelInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5308 (     0x8) -[SNWiFiRecord phyMode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5310 (     0x8) -[SNWiFiRecord setPhyMode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5318 (     0x8) -[SNWiFiRecord isCaptive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5320 (     0x8) -[SNWiFiRecord setIsCaptive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5328 (     0x8) -[SNWiFiRecord timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5330 (     0x8) -[SNWiFiRecord setTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5338 (    0x50) -[SNWiFiRecord .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5388 (    0x68) -[SNConnectionInfo init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf53f0 (     0x8) -[SNConnectionInfo setConnectionProtocolTechnology:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf53f8 (    0x28) -[SNConnectionInfo connectionProtocolTechnology] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5420 (     0x8) -[SNConnectionInfo setAssistantIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5428 (     0x8) -[SNConnectionInfo assistantIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5430 (     0x8) -[SNConnectionInfo setPeerAssistantIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5438 (     0x8) -[SNConnectionInfo peerAssistantIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5440 (     0x8) -[SNConnectionInfo setConnectionId:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5448 (     0x8) -[SNConnectionInfo connectionId] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5450 (     0x8) -[SNConnectionInfo setAceHost:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5458 (     0x8) -[SNConnectionInfo aceHost] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5460 (     0x8) -[SNConnectionInfo setLanguageCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5468 (     0x8) -[SNConnectionInfo languageCode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5470 (     0x8) -[SNConnectionInfo setPrefersWWAN:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5478 (     0x8) -[SNConnectionInfo prefersWWAN] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5480 (     0x8) -[SNConnectionInfo setSkipPeer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5488 (     0x8) -[SNConnectionInfo skipPeer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5490 (     0x8) -[SNConnectionInfo setUseWiFiHint:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5498 (     0x8) -[SNConnectionInfo useWiFiHint] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54a0 (     0x8) -[SNConnectionInfo setSkipPeerErrorReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54a8 (     0x8) -[SNConnectionInfo skipPeerErrorReason] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54b0 (     0x8) -[SNConnectionInfo setForceReconnect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54b8 (     0x8) -[SNConnectionInfo forceReconnect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54c0 (     0x8) -[SNConnectionInfo setTimeout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54c8 (     0x8) -[SNConnectionInfo timeout] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54d0 (     0x8) -[SNConnectionInfo setImposePolicyBan:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54d8 (     0x8) -[SNConnectionInfo imposePolicyBan] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54e0 (     0x8) -[SNConnectionInfo setConnectionPolicy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54e8 (     0x8) -[SNConnectionInfo connectionPolicy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54f0 (     0x8) -[SNConnectionInfo setConnectionPolicyRoute:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf54f8 (     0x8) -[SNConnectionInfo connectionPolicyRoute] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5500 (     0x8) -[SNConnectionInfo setForceOnDeviceOnlyDictation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5508 (     0x8) -[SNConnectionInfo isForceOnDeviceOnlyDictationEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5510 (     0x8) -[SNConnectionInfo underlyingConnectionInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5518 (     0xc) -[SNConnectionInfo setUnderlyingConnectionInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5524 (     0xc) -[SNConnectionInfo .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5530 (    0x60) ZlibDataDecompressor.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5590 (    0x30) ZlibDataDecompressor.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf55c0 (    0x24) type metadata accessor for ZlibDataDecompressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf55e4 (    0x14) type metadata accessor for nw_path_status_t [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf55f8 (    0x34) initializeBufferWithCopyOfBuffer for z_stream_s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf562c (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5630 (     0x8) __swift_memcpy112_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5638 (    0x54) getEnumTagSinglePayload for z_stream_s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf568c (    0x70) storeEnumTagSinglePayload for z_stream_s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf56fc (    0x14) type metadata accessor for z_stream_s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5710 (    0x14) type metadata accessor for CTSubscriptionSlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5724 (    0x34) protocol witness for RawRepresentable.init(rawValue:) in conformance CTSubscriptionSlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5758 (     0x8) CTSubscriptionSlot.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5760 (    0x2c) protocol witness for RawRepresentable.rawValue.getter in conformance CTSubscriptionSlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf578c (    0x4c) protocol witness for Hashable.hashValue.getter in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf57d8 (    0x58) protocol witness for Hashable.hash(into:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5830 (    0x68) protocol witness for Hashable._rawHashValue(seed:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5898 (    0x10) protocol witness for RawRepresentable.init(rawValue:) in conformance nw_path_status_t [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf58a8 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance nw_path_status_t [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf58b4 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance nw_path_status_t [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf58c0 (    0x2c) protocol witness for RawRepresentable.rawValue.getter in conformance NSComparisonResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf58ec (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance NSComparisonResult [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf58f8 (    0x14) type metadata accessor for CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf590c (     0x8) __swift_memcpy352_4 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5914 (    0x20) getEnumTagSinglePayload for tcp_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5934 (    0x88) storeEnumTagSinglePayload for tcp_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf59bc (    0x14) type metadata accessor for tcp_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf59d0 (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5a3c (    0x34) base witness table accessor for Hashable in CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5a70 (    0x34) base witness table accessor for Equatable in CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5aa4 (    0x44) lazy protocol witness table accessor for type CFStringRef and conformance CFStringRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5ae8 (    0x14) type metadata accessor for tcp_conn_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5afc (    0x14) type metadata accessor for tcp_conn_status.__Unnamed_union___Anonymous_field0 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5b10 (    0x48) type metadata accessor for nw_path_status_t [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5b58 (     0x4) initializeBufferWithCopyOfBuffer for tcp_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5b5c (   0x3ac) ConnectionInterfaceReport.init(interface:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5f08 (    0x48) outlined consume of ConnectionTCPInfoMetrics? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5f50 (    0x48) outlined copy of ConnectionTCPInfoMetrics? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5f98 (    0x58) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf5ff0 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf600c (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6028 (    0x18) NetworkManager.dataServiceDescriptor.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6040 (     0xc) NetworkManager.subscriptionSlotOneStatus.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf604c (     0xc) NetworkManager.subscriptionSlotTwoStatus.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6058 (     0xc) NetworkManager.carrierName.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6064 (    0x18) NetworkManager.subscriptionSlotOneStatus.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf607c (    0x18) NetworkManager.pathEvaluator.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6094 (    0x3c) one-time initialization function for shared [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf60d0 (    0x5c) static NetworkManager.shared.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf612c (    0x28) @objc static NetworkManager.shared.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6154 (   0x49c) NetworkManager.init(coreTelephonyClient:queue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf65f0 (   0x130) NetworkManager.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6720 (    0x28) @objc NetworkManager.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6748 (    0xe8) @objc NetworkManager.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6830 (    0x34) NetworkManager.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6864 (    0x30) NetworkManager.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6894 (    0x10) @objc NetworkManager.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf68a4 (    0x38) __swift_project_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf68dc (    0x24) type metadata accessor for NetworkManager [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6900 (    0x10) serialize(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6910 (    0x18) method lookup function for NetworkManager [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6928 (    0x40) type metadata accessor for OS_dispatch_queue [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6968 (    0x50) lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf69b8 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf69fc (    0x54) lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6a50 (    0x48) __swift_instantiateConcreteTypeFromMangledNameAbstract [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6a98 (    0x10) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6aa8 (    0x18) static ConnectionConfigurationError.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6ac0 (    0x2c) ConnectionConfigurationError.hash(into:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6aec (    0x48) ConnectionConfigurationError.hashValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b34 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b38 (     0x4) protocol witness for Hashable.hashValue.getter in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b3c (     0x4) protocol witness for Hashable.hash(into:) in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b40 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b84 (     0x4) base witness table accessor for Equatable in ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6b88 (    0x4c) lazy protocol witness table accessor for type ConnectionConfigurationError and conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6bd4 (     0x4) protocol witness for Error._domain.getter in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6bd8 (     0x4) protocol witness for Error._code.getter in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6bdc (     0x4) protocol witness for Error._userInfo.getter in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6be0 (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6be4 (     0xc) __swift_memcpy1_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6bf0 (    0x88) getEnumTagSinglePayload for ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6c78 (    0xcc) storeEnumTagSinglePayload for ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6d44 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020faf6d58 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020faf6d6c (     0x8) getEnumTag for ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6d74 (     0x4) destructiveProjectEnumData for ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6d78 (     0xc) destructiveInjectEnumTag for ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6d84 (    0x10) type metadata accessor for ConnectionConfigurationError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6d94 (    0x20) NetworkManager.registerClient() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6db4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020faf6dec (    0x84) closure #1 in NetworkManager.registerClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6e70 (     0x8) partial apply for closure #1 in NetworkManager.registerClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6e78 (    0x44) thunk for @escaping @callee_guaranteed @Sendable () -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6ebc (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6ecc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6ed4 (    0x50) lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6f24 (    0x54) lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6f78 (    0x40) @objc NetworkManager.registerClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6fb8 (    0x20) NetworkManager.unregisterClient() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf6fd8 (   0x1e8) NetworkManager.registerClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf71c0 (    0x48) closure #1 in NetworkManager.unregisterClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7208 (     0x8) partial apply for closure #1 in NetworkManager.unregisterClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7210 (    0x40) @objc NetworkManager.unregisterClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7250 (    0x34) NetworkManager.getSNSubscribeLinkRecommendation(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7284 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf7288 (    0x28) NetworkManager.subscribeLinkRecommendation(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf72b0 (    0xa8) @objc NetworkManager.getSNSubscribeLinkRecommendation(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7358 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf735c (    0x34) partial apply for closure #1 in NetworkManager.subscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7390 (    0x10) outlined copy of (@escaping @callee_guaranteed (@in_guaranteed LinkRecommendationInfo?) -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf73a0 (    0x94) NetworkManager.getSNProximityLinkRecommendation(retry:completion:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7434 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf7438 (   0x234) NetworkManager.getProximityLinkRecommendation(retry:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf766c (    0xb8) @objc NetworkManager.getSNProximityLinkRecommendation(retry:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7724 (    0xa4) closure #1 in NetworkManager.getProximityLinkRecommendation(retry:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf77c8 (    0x48) (null) [FUNC, FunctionStarts] 
                0x000000020faf7810 (    0x10) partial apply for closure #1 in NetworkManager.getProximityLinkRecommendation(retry:_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7820 (    0x34) NetworkManager.getSNLinkRecommendationMetrics(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7854 (    0x84) NetworkManager.getSNSubscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf78d8 (    0xd8) closure #1 in NetworkManager.getSNSubscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf79b0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf79b4 (    0x40) objectdestroy.6Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf79f4 (    0x1c) partial apply for closure #1 in NetworkManager.getSNLinkRecommendationMetrics(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7a10 (    0x28) NetworkManager.getLinkRecommendationMetrics(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7a38 (   0x208) NetworkManager.subscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7c40 (    0xa8) @objc NetworkManager.getSNLinkRecommendationMetrics(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7ce8 (    0xa4) closure #1 in NetworkManager.subscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7d8c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf7d90 (    0x48) objectdestroy.10Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7dd8 (    0x34) partial apply for closure #1 in NetworkManager.getLinkRecommendationMetrics(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e0c (    0x10) outlined consume of (@escaping @callee_guaranteed (@guaranteed SNLinkRecommendationInfo?) -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e1c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020faf7e54 (    0x14) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned SNLinkRecommendationInfo?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e68 (     0x4) block_copy_helper.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e6c (     0x4) block_copy_helper.12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e70 (     0x4) block_copy_helper.22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e74 (     0x4) block_copy_helper.32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e78 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf7e7c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020faf7e80 (     0x4) partial apply for closure #1 in NetworkManager.getSNSubscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e84 (     0x4) partial apply for closure #1 in NetworkManager.getSNProximityLinkRecommendation(retry:completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e88 (     0x4) block_destroy_helper.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e8c (     0x4) block_destroy_helper.13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e90 (     0x4) block_destroy_helper.23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e94 (     0x4) block_destroy_helper.33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e98 (     0x4) thunk for @escaping @callee_unowned @convention(block) (@unowned SNLinkRecommendationInfo?) -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7e9c (     0x4) thunk for @escaping @callee_unowned @convention(block) (@unowned SNLinkRecommendationInfo?) -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7ea0 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7ebc (    0x28) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7ee4 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7f00 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7f18 (    0x24) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7f3c (    0x18) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7f54 (    0x4c) initializeBufferWithCopyOfBuffer for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7fa0 (    0x14) outlined copy of AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7fb4 (    0x14) outlined copy of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf7fc8 (    0x64) outlined copy of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf802c (    0x10) destroy for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf803c (    0x14) outlined consume of AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8050 (    0x14) outlined consume of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8064 (    0x58) outlined consume of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf80bc (    0x4c) initializeWithCopy for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8108 (    0x58) assignWithCopy for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8160 (    0x14) __swift_memcpy17_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8174 (    0x48) assignWithTake for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf81bc (    0x40) getEnumTagSinglePayload for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf81fc (    0x44) storeEnumTagSinglePayload for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8240 (    0x18) getEnumTag for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8258 (     0x4) destructiveProjectEnumData for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf825c (    0x18) destructiveInjectEnumTag for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8274 (    0x10) type metadata accessor for AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8284 (     0x4) protocol witness for Error._domain.getter in conformance AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8288 (     0x4) protocol witness for Error._code.getter in conformance AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf828c (     0x4) protocol witness for Error._userInfo.getter in conformance AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8290 (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8294 (    0x28) NetworkManager.dataSubscriptionContextUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf82bc (    0x28) NetworkManager.dataServiceDescriptorUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf82e4 (    0x28) NetworkManager.serviceSubscriptionInfoUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf830c (    0x28) NetworkManager.signalStrengthUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8334 (   0x284) NetworkManager.dataSubscriptionContextUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf85b8 (    0x40) NetworkManager.preferredDataSimChanged(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf85f8 (    0xf8) NetworkManager.dataSubscriptionContextChange(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf86f0 (    0x64) @objc NetworkManager.preferredDataSimChanged(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8754 (   0x178) NetworkManager.carrierBundleChange(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf88cc (    0x64) @objc NetworkManager.carrierBundleChange(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8930 (   0x2c8) NetworkManager.simStatusDidChange(_:status:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8bf8 (    0x90) @objc NetworkManager.simStatusDidChange(_:status:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8c88 (   0x1c8) NetworkManager.signalStrengthChanged(_:info:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8e50 (    0x8c) @objc NetworkManager.signalStrengthChanged(_:info:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf8edc (   0x188) NetworkManager.subscriptionContextUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9064 (    0x30) NetworkManager.carrierNameUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9094 (   0x1a0) closure #1 in NetworkManager.carrierNameUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9234 (    0xd8) closure #1 in closure #1 in NetworkManager.carrierNameUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf930c (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed NSObject?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9310 (   0x220) closure #1 in closure #1 in NetworkManager.dataSubscriptionContextUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9530 (   0x130) closure #1 in NetworkManager.dataServiceDescriptorUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9660 (   0x264) closure #1 in closure #1 in NetworkManager.dataServiceDescriptorUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf98c4 (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed CTServiceDescriptor?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf98c8 (   0x130) closure #1 in NetworkManager.serviceSubscriptionInfoUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf99f8 (   0x2ec) closure #1 in closure #1 in NetworkManager.serviceSubscriptionInfoUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9ce4 (   0x128) closure #1 in NetworkManager.dataSubscriptionContextUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faf9e0c (   0x250) closure #1 in closure #1 in NetworkManager.signalStrengthUpdate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa05c (    0x30) NetworkManager.signalStrengthUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa08c (   0x2a4) NetworkManager.carrierNameUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa330 (   0x140) closure #1 in NetworkManager.signalStrengthUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa470 (   0x2a4) closure #1 in closure #1 in NetworkManager.signalStrengthUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa714 (    0x90) thunk for @escaping @callee_guaranteed (@guaranteed NSObject?, @guaranteed Error?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa7a4 (   0x200) NetworkManager.connectionTechnologyForCellularInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa9a4 (     0x4) CTSubscriptionSlot.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa9a8 (    0x3c) closure #1 in osLogInternal(_:log:type:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa9e4 (    0x10) closure #1 in OSLogArguments.append(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafa9f4 (    0x28) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:align:privacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafaa1c (    0x8c) closure #1 in OSLogArguments.append(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafaaa8 (    0xd4) getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafab7c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fafabb4 (     0x8) partial apply for closure #1 in NetworkManager.serviceSubscriptionInfoUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafabbc (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafabcc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafabd4 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.serviceSubscriptionInfoUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafabdc (   0x138) specialized _StringGuts._deconstructUTF8<A>(scratch:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafad14 (    0x98) _StringGuts._allocateForDeconstruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafadac (    0x9c) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafae48 (    0x68) specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafaeb0 (    0xec) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafaf9c (    0x74) outlined bridged method (pb) of @objc CTXPCServiceSubscriptionInfo.subscriptions.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb010 (    0x3c) type metadata accessor for CTServiceDescriptor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb04c (    0x50) __swift_destroy_boxed_opaque_existential_0 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb09c (    0x5c) outlined init with copy of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb0f8 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb0fc (    0x40) partial apply for closure #1 in NetworkManager.dataSubscriptionContextUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb13c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fafb174 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.dataSubscriptionContextUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb17c (     0x8) partial apply for closure #1 in NetworkManager.dataServiceDescriptorUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb184 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.dataServiceDescriptorUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb18c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb190 (     0x8) partial apply for closure #1 in NetworkManager.carrierNameUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb198 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.carrierNameUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb1a0 (    0x40) partial apply for closure #1 in NetworkManager.signalStrengthUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb1e0 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.signalStrengthUpdate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb1e8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb1ec (    0x40) objectdestroy.29Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb22c (     0x8) partial apply for closure #1 in NetworkManager.signalStrengthUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb234 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.signalStrengthUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb23c (     0x4) block_copy_helper.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb240 (     0x4) block_copy_helper.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb244 (     0x4) block_copy_helper.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb248 (     0x4) block_copy_helper.18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb24c (     0x4) block_copy_helper.24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb250 (     0x4) block_copy_helper.31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb254 (     0x4) block_copy_helper.37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb258 (     0x4) block_copy_helper.41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb25c (     0x4) block_copy_helper.47 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb260 (     0x4) block_copy_helper.54 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb264 (     0x4) block_copy_helper.60 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb268 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb26c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb270 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb274 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb278 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fafb27c (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed CTXPCServiceSubscriptionContext?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb280 (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed CTXPCServiceSubscriptionInfo?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb284 (     0x4) thunk for @escaping @callee_guaranteed (@guaranteed CTSignalStrengthInfo?, @guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb288 (     0x4) block_destroy_helper.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb28c (     0x4) block_destroy_helper.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb290 (     0x4) block_destroy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb294 (     0x4) block_destroy_helper.19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb298 (     0x4) block_destroy_helper.25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb29c (     0x4) block_destroy_helper.32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2a0 (     0x4) block_destroy_helper.38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2a4 (     0x4) block_destroy_helper.42 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2a8 (     0x4) block_destroy_helper.48 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2ac (     0x4) block_destroy_helper.55 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2b0 (     0x4) block_destroy_helper.61 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2b4 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2d0 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb2e8 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb300 (    0x20) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb320 (    0x1c) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb33c (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb358 (    0x28) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb380 (    0x1c) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb39c (    0x20) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb3bc (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb3d4 (    0x18) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb3ec (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb400 (    0x14) dispatch thunk of ConnectionProviderProtocol.connection.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb414 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionMetrics.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb428 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionMetrics.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb43c (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionMetrics.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb450 (    0x14) dispatch thunk of ConnectionProviderProtocol.networkManager.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb464 (    0x14) dispatch thunk of ConnectionProviderProtocol.networkManager.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb478 (    0x14) dispatch thunk of ConnectionProviderProtocol.networkManager.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb48c (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionProviderState.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb4a0 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionProviderState.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb4b4 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionProviderState.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb4c8 (    0x14) dispatch thunk of ConnectionProviderProtocol.delegate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb4dc (    0x14) dispatch thunk of ConnectionProviderProtocol.delegate.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb4f0 (    0x14) dispatch thunk of ConnectionProviderProtocol.delegate.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb504 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionConfiguration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb518 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionQueue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb52c (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb540 (    0x14) dispatch thunk of ConnectionProviderProtocol.openCompletion.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb554 (    0x14) dispatch thunk of ConnectionProviderProtocol.openCompletion.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb568 (    0x14) dispatch thunk of ConnectionProviderProtocol.openCompletion.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb57c (    0x14) dispatch thunk of ConnectionProviderProtocol.readWriteCounter.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb590 (    0x14) dispatch thunk of ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb5a4 (    0x14) dispatch thunk of ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb5b8 (    0x14) dispatch thunk of ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb5cc (    0x14) dispatch thunk of ConnectionProviderProtocol.betterPathAvailable.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb5e0 (    0x14) dispatch thunk of ConnectionProviderProtocol.scopeToWiFiOnly.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb5f4 (    0x14) dispatch thunk of ConnectionProviderProtocol.isViable.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb608 (    0x14) dispatch thunk of ConnectionProviderProtocol.isCancelled.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb61c (    0x14) dispatch thunk of ConnectionProviderProtocol.isCancelled.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb630 (    0x14) dispatch thunk of ConnectionProviderProtocol.isCancelled.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb644 (    0x14) dispatch thunk of ConnectionProviderProtocol.isMPTCP.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb658 (    0x14) dispatch thunk of ConnectionProviderProtocol.isMPTCP.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb66c (    0x14) dispatch thunk of ConnectionProviderProtocol.isMPTCP.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb680 (    0x14) dispatch thunk of ConnectionProviderProtocol.mostRecentErrorFromConnection.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb694 (    0x14) dispatch thunk of ConnectionProviderProtocol.openTimeoutTimer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb6a8 (    0x14) dispatch thunk of ConnectionProviderProtocol.openTimeoutTimer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb6bc (    0x14) dispatch thunk of ConnectionProviderProtocol.openTimeoutTimer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb6d0 (    0x14) dispatch thunk of ConnectionProviderProtocol.openTimeoutTimerInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb6e4 (    0x14) dispatch thunk of ConnectionProviderProtocol.staleConnectionTimer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb6f8 (    0x14) dispatch thunk of ConnectionProviderProtocol.staleConnectionTimer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb70c (    0x14) dispatch thunk of ConnectionProviderProtocol.staleConnectionTimer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb720 (    0x14) dispatch thunk of ConnectionProviderProtocol.staleConnectionTimerInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb734 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionUnviableTimer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb748 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionUnviableTimer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb75c (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionUnviableTimer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb770 (    0x14) dispatch thunk of ConnectionProviderProtocol.connectionUnviableTimerInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb784 (    0x14) dispatch thunk of ConnectionProviderProtocol.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb798 (    0x28) dispatch thunk of ConnectionProviderProtocol.openConnectionWithInitialPayload(_:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb7c0 (    0x14) dispatch thunk of ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb7d4 (    0x14) dispatch thunk of ConnectionProviderProtocol.close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb7e8 (    0x14) dispatch thunk of ConnectionProviderProtocol.cancelConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb7fc (    0x14) dispatch thunk of ConnectionProviderProtocol.closeWithError(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb810 (    0x14) dispatch thunk of ConnectionProviderProtocol.shouldFallBackFromError(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb824 (    0x28) dispatch thunk of ConnectionProviderProtocol.send(data:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb84c (    0x28) dispatch thunk of ConnectionProviderProtocol.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb874 (    0x14) dispatch thunk of ConnectionProviderProtocol.updateConnectionMetricsSnapshotReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb888 (    0x14) dispatch thunk of ConnectionProviderProtocol.updateConnectionMetrics(with:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb89c (    0x14) dispatch thunk of ConnectionProviderDelegate.connectionProvider(_:received:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb8b0 (    0x14) dispatch thunk of ConnectionProviderDelegate.connectionProvider(_:receivedViabilityChangeNotification:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb8c4 (    0x14) dispatch thunk of ConnectionProviderDelegate.connectionProviderReceivedBetterRouteNotification(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafb8d8 (   0x144) ConnectionProviderProtocol.cancelOpenTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafba1c (   0x294) ConnectionProviderProtocol.close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafbcb0 (    0x80) closure #1 in ConnectionProviderProtocol.close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafbd30 (   0x3a0) ConnectionProviderProtocol.cancelConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafc0d0 (   0x31c) ConnectionProviderProtocol.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafc3ec (   0x648) static ConnectionProviderProtocol.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafca34 (    0x28) __swift_getEnumTagSinglePayload [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafca5c (     0x4) protocol witness for ConnectionProviderProtocol.close() in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafca60 (     0x4) protocol witness for ConnectionProviderProtocol.cancelConnection() in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafca64 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fafca9c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fafcad4 (     0xc) partial apply for closure #1 in ConnectionProviderProtocol.close() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcae0 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcaf0 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcaf8 (    0x48) lazy protocol witness table accessor for type NetworkConnectionError and conformance NetworkConnectionError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcb40 (    0x4c) outlined consume of ConnectionPolicy? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcb8c (    0x74) outlined consume of ConnectionPolicyRoute? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc00 (     0x4) protocol witness for ConnectionProviderProtocol.close() in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc04 (     0x4) protocol witness for ConnectionProviderProtocol.cancelConnection() in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc08 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc24 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc3c (    0x14) dispatch thunk of NetworkConnectionProtocol.identifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc50 (    0x14) dispatch thunk of NetworkConnectionProtocol.currentPath.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc64 (    0x14) dispatch thunk of NetworkConnectionProtocol.parameters.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc78 (    0x14) dispatch thunk of NetworkConnectionProtocol.endpoint.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcc8c (    0x14) dispatch thunk of NetworkConnectionProtocol.stateUpdateHandler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcca0 (    0x14) dispatch thunk of NetworkConnectionProtocol.stateUpdateHandler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafccb4 (    0x14) dispatch thunk of NetworkConnectionProtocol.stateUpdateHandler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafccc8 (    0x14) dispatch thunk of NetworkConnectionProtocol.viabilityUpdateHandler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafccdc (    0x14) dispatch thunk of NetworkConnectionProtocol.viabilityUpdateHandler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafccf0 (    0x14) dispatch thunk of NetworkConnectionProtocol.viabilityUpdateHandler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd04 (    0x14) dispatch thunk of NetworkConnectionProtocol.betterPathUpdateHandler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd18 (    0x14) dispatch thunk of NetworkConnectionProtocol.betterPathUpdateHandler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd2c (    0x14) dispatch thunk of NetworkConnectionProtocol.betterPathUpdateHandler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd40 (    0x14) dispatch thunk of NetworkConnectionProtocol.pathUpdateHandler.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd54 (    0x14) dispatch thunk of NetworkConnectionProtocol.pathUpdateHandler.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd68 (    0x14) dispatch thunk of NetworkConnectionProtocol.pathUpdateHandler.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd7c (    0x14) dispatch thunk of NetworkConnectionProtocol.init(endpoint:configuration:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcd90 (    0x14) dispatch thunk of NetworkConnectionProtocol.start(queue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcda4 (    0x14) dispatch thunk of NetworkConnectionProtocol.cancel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcdb8 (    0x14) dispatch thunk of NetworkConnectionProtocol.send(content:contentContext:isComplete:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcdcc (    0x14) dispatch thunk of NetworkConnectionProtocol.receive(minimumIncompleteLength:maximumLength:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcde0 (    0x14) dispatch thunk of NetworkConnectionProtocol.readyEstablishmentReport(queue:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcdf4 (    0x54) RPCOspreyConnectionProvider.connectionMetrics.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafce48 (     0x4) RPCOspreyConnectionProvider.connectionMetrics.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafce4c (     0x8) RPCOspreyConnectionProvider.connectionType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafce54 (    0x68) RPCOspreyConnectionProvider.__allocating_init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafcebc (   0x740) RPCOspreyConnectionProvider.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafd5fc (   0x518) RPCOspreyConnectionProvider.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafdb14 (    0x30) RPCOspreyConnectionProvider.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafdb44 (    0x24) type metadata accessor for RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafdb68 (   0x13c) RPCOspreyConnectionProvider.openConnectionWithInitialPayload(_:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafdca4 (   0x818) specialized RPCOspreyConnectionProvider.createConnectionWithInitialPayload<A>(_:rpcOspreyConnectionProtocolType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafe4bc (    0xfc) RPCOspreyConnectionProvider.configureConnectionHandler(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafe5b8 (   0x448) RPCOspreyConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafea00 (   0x110) closure #1 in RPCOspreyConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafeb10 (   0x21c) RPCOspreyConnectionProvider.closeWithError(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fafed2c (   0x2dc) RPCOspreyConnectionProvider.send(data:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faff008 (   0x48c) RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faff494 (   0x21c) closure #1 in RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faff6b0 (   0x464) closure #2 in RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faffb14 (    0xc4) closure #1 in closure #2 in RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faffbd8 (   0x308) closure #3 in RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020faffee0 (   0x200) closure #1 in closure #3 in RPCOspreyConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb000e0 (   0xac0) RPCOspreyConnectionProvider.updateConnectionMetrics(with:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00ba0 (     0x4) RPCOspreyConnectionProvider.updateConnectionMetricsSnapshotReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00ba4 (    0x40) RPCOspreyConnectionProvider.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00be4 (    0x4c) protocol witness for ConnectionProviderProtocol.connection.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00c30 (    0x1c) protocol witness for ConnectionProviderProtocol.connectionProviderState.setter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00c4c (    0x20) protocol witness for ConnectionProviderProtocol.delegate.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00c6c (    0x44) protocol witness for ConnectionProviderProtocol.delegate.setter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00cb0 (   0x2b0) protocol witness for ConnectionProviderProtocol.connectionConfiguration.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00f60 (     0x8) protocol witness for ConnectionProviderProtocol.connectionQueue.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00f68 (    0x18) protocol witness for ConnectionProviderProtocol.connectionType.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00f80 (    0x1c) protocol witness for ConnectionProviderProtocol.openCompletion.setter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00f9c (     0x8) protocol witness for ConnectionProviderProtocol.isMPTCP.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fa4 (     0x8) protocol witness for ConnectionProviderProtocol.openTimeoutTimer.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fac (    0x10) protocol witness for ConnectionProviderProtocol.openTimeoutTimer.setter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fbc (     0x4) protocol witness for ConnectionProviderProtocol.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fc0 (    0x18) protocol witness for ConnectionProviderProtocol.openConnectionWithInitialPayload(_:completion:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fd8 (     0x4) protocol witness for ConnectionProviderProtocol.closeWithError(_:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00fdc (    0x18) protocol witness for ConnectionProviderProtocol.send(data:completion:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb00ff4 (    0x18) protocol witness for ConnectionProviderProtocol.readData(_:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0100c (     0x4) protocol witness for ConnectionProviderProtocol.updateConnectionMetricsSnapshotReport() in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01010 (     0x4) protocol witness for ConnectionProviderProtocol.updateConnectionMetrics(with:completion:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01014 (    0x24) protocol witness for Hashable.hashValue.getter in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01038 (    0x58) protocol witness for Hashable.hash(into:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01090 (    0x68) protocol witness for Hashable._rawHashValue(seed:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb010f8 (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01164 (    0x48) base witness table accessor for Equatable in RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb011ac (    0x58) instantiation function for generic protocol witness table for RPCOspreyConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01204 (    0x10) outlined consume of (@escaping @callee_guaranteed (@in_guaranteed Result<(), NetworkConnectionError>) -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01214 (    0x4c) outlined copy of ConnectionPolicy? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01260 (    0x74) outlined copy of ConnectionPolicyRoute? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb012d4 (    0x14) outlined consume of ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb012e8 (    0x68) outlined init with copy of RPCOspreyConnectionProtocol? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01350 (    0x50) outlined copy of ConnectionHTTPHeaderReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb013a0 (    0x70) outlined copy of ConnectionPreparationReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01410 (    0x70) outlined copy of ConnectionEstablishmentReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01480 (   0x250) outlined copy of ConnectionSnapshotReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb016d0 (    0x94) outlined copy of ConnectionNetworkReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01764 (    0x50) outlined consume of ConnectionHTTPHeaderReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb017b4 (    0x70) outlined consume of ConnectionPreparationReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01824 (    0x70) outlined consume of ConnectionEstablishmentReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01894 (   0x250) outlined consume of ConnectionSnapshotReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01ae4 (    0x94) outlined consume of ConnectionNetworkReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01b78 (    0x18) outlined init with take of RPCOspreyConnectionProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01b90 (    0x44) __swift_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01bd4 (     0x8) partial apply for closure #1 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01bdc (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb01c14 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000020fb01c2c (     0xc) partial apply for closure #2 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01c38 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000020fb01c50 (     0xc) partial apply for closure #3 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01c5c (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01c6c (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01c74 (    0x50) __swift_destroy_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01cc4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000020fb01cdc (    0x48) objectdestroy.98Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01d24 (     0xc) partial apply for closure #1 in closure #3 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01d30 (    0x48) lazy protocol witness table accessor for type RPCOspreyConnectionProvider and conformance RPCOspreyConnectionProvider [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01d78 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb01db8 (    0x38) partial apply for closure #2 in closure #2 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01df0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb01e28 (     0x8) partial apply for closure #1 in closure #2 in RPCOspreyConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01e30 (    0x28) __swift_storeEnumTagSinglePayload [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01e58 (    0x68) outlined init with take of NWError? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01ec0 (    0x68) outlined assign with copy of RPCOspreyConnectionProtocol? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01f28 (     0x8) partial apply for closure #1 in RPCOspreyConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01f30 (    0x5c) outlined destroy of RPCOspreyConnectionProtocol? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01f8c (    0x28) outlined destroy of weak ConnectionProviderDelegate? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fb4 (     0x4) block_copy_helper.104 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fb8 (     0x4) block_copy_helper.107 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fbc (     0x4) block_copy_helper.113 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fc0 (     0x4) block_copy_helper.119 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fc4 (     0x4) block_copy_helper.125 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fc8 (     0x4) block_copy_helper.129 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fcc (     0x4) block_destroy_helper.105 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fd0 (     0x4) block_destroy_helper.108 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fd4 (     0x4) block_destroy_helper.114 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fd8 (     0x4) block_destroy_helper.120 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fdc (     0x4) block_destroy_helper.126 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fe0 (     0x4) block_destroy_helper.130 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb01fe4 (    0xa0) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02084 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb020a0 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb020b8 (    0x3c) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb020f4 (    0x34) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02128 (    0x20) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02148 (    0x24) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0216c (     0xc) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02178 (    0x10) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02188 (    0x10) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02198 (    0x18) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb021b0 (     0xc) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb021bc (    0x10) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb021cc (    0x10) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb021dc (    0x18) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb021f4 (    0x18) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0220c (    0x18) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02224 (    0x60) ConnectionResolutionReport.durationInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02284 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb022b8 (    0x3c) destroy for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb022f4 (    0x68) initializeWithCopy for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0235c (    0xa8) assignWithCopy for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02404 (     0x8) __swift_memcpy72_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0240c (    0x70) assignWithTake for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0247c (    0x40) getEnumTagSinglePayload for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb024bc (    0x50) storeEnumTagSinglePayload for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0250c (    0x10) type metadata accessor for ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0251c (   0x324) ConnectionResolutionReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02840 (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionResolutionReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0287c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb02898 (    0x24) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb028bc (     0xc) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb028c8 (   0x7c4) static NSURLSessionConfiguration.defaultSessionConfiguration(with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0308c (    0x74) lazy protocol witness table accessor for type CFStringRef? and conformance <A> A? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03100 (    0x50) lazy protocol witness table accessor for type CFStringRef and conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03150 (    0x70) specialized Dictionary.subscript.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb031c0 (    0x60) outlined destroy of Any? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03220 (   0x144) specialized Dictionary._Variant.removeValue(forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03364 (    0x54) outlined destroy of AnyHashable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb033b8 (    0x10) outlined init with take of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb033c8 (   0x124) specialized Dictionary._Variant.removeValue(forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb034ec (    0x20) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0350c (    0x1c) Logger.Subsystem.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03528 (    0x18) Logger.Category.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03540 (    0x8c) one-time initialization function for siriNetwork [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb035cc (    0x64) __swift_allocate_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03630 (    0x40) type metadata accessor for OS_os_log [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03670 (    0x30) ConnectionTCPInfoMetrics.interfaceName.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb036a0 (    0x38) ConnectionTCPInfoMetrics.interfaceName.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb036d8 (    0x20) ConnectionTCPInfoMetrics.interfaceName.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb036f8 (     0x4) ConnectionTCPInfoMetrics.interfaceName.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb036fc (    0x30) ConnectionTCPInfoMetrics.connectionIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0372c (    0x38) ConnectionTCPInfoMetrics.connectionIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03764 (    0x20) ConnectionTCPInfoMetrics.connectionIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03784 (     0x4) ConnectionTCPInfoMetrics.connectionIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03788 (     0xc) ConnectionTCPInfoMetrics.connectionType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03794 (     0xc) ConnectionTCPInfoMetrics.connectionType.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb037a0 (    0x20) ConnectionTCPInfoMetrics.connectionType.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb037c0 (     0x4) ConnectionTCPInfoMetrics.connectionType.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb037c4 (     0xc) ConnectionTCPInfoMetrics.bytesReceived.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb037d0 (    0x10) ConnectionTCPInfoMetrics.bytesReceived.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb037e0 (    0x20) ConnectionTCPInfoMetrics.bytesReceived.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03800 (     0x4) ConnectionTCPInfoMetrics.bytesReceived.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03804 (     0xc) ConnectionTCPInfoMetrics.bytesRetransmitted.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03810 (    0x10) ConnectionTCPInfoMetrics.bytesRetransmitted.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03820 (    0x20) ConnectionTCPInfoMetrics.bytesRetransmitted.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03840 (     0x4) ConnectionTCPInfoMetrics.bytesRetransmitted.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03844 (     0xc) ConnectionTCPInfoMetrics.bytesSent.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03850 (    0x10) ConnectionTCPInfoMetrics.bytesSent.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03860 (    0x20) ConnectionTCPInfoMetrics.bytesSent.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03880 (     0x4) ConnectionTCPInfoMetrics.bytesSent.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03884 (     0xc) ConnectionTCPInfoMetrics.bytesUnacked.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03890 (    0x10) ConnectionTCPInfoMetrics.bytesUnacked.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb038a0 (    0x20) ConnectionTCPInfoMetrics.bytesUnacked.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb038c0 (     0x4) ConnectionTCPInfoMetrics.bytesUnacked.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb038c4 (     0xc) ConnectionTCPInfoMetrics.duplicateBytesReceived.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb038d0 (    0x10) ConnectionTCPInfoMetrics.duplicateBytesReceived.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb038e0 (    0x20) ConnectionTCPInfoMetrics.duplicateBytesReceived.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03900 (     0x4) ConnectionTCPInfoMetrics.duplicateBytesReceived.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03904 (     0xc) ConnectionTCPInfoMetrics.outOfOrderBytesReceived.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03910 (    0x10) ConnectionTCPInfoMetrics.outOfOrderBytesReceived.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03920 (    0x20) ConnectionTCPInfoMetrics.outOfOrderBytesReceived.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03940 (     0x4) ConnectionTCPInfoMetrics.outOfOrderBytesReceived.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03944 (     0xc) ConnectionTCPInfoMetrics.packetsReceived.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03950 (    0x10) ConnectionTCPInfoMetrics.packetsReceived.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03960 (    0x20) ConnectionTCPInfoMetrics.packetsReceived.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03980 (     0x4) ConnectionTCPInfoMetrics.packetsReceived.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03984 (     0xc) ConnectionTCPInfoMetrics.packetsSent.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03990 (    0x10) ConnectionTCPInfoMetrics.packetsSent.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb039a0 (    0x20) ConnectionTCPInfoMetrics.packetsSent.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb039c0 (     0x4) ConnectionTCPInfoMetrics.packetsSent.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb039c4 (    0x10) ConnectionTCPInfoMetrics.rttBest.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb039d4 (    0x10) ConnectionTCPInfoMetrics.rttBest.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb039e4 (    0x20) ConnectionTCPInfoMetrics.rttBest.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a04 (     0x4) ConnectionTCPInfoMetrics.rttBest.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a08 (    0x10) ConnectionTCPInfoMetrics.rttCurrent.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a18 (    0x10) ConnectionTCPInfoMetrics.rttCurrent.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a28 (    0x20) ConnectionTCPInfoMetrics.rttCurrent.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a48 (     0x4) ConnectionTCPInfoMetrics.rttCurrent.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a4c (    0x10) ConnectionTCPInfoMetrics.rttSmoothed.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a5c (    0x10) ConnectionTCPInfoMetrics.rttSmoothed.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a6c (    0x20) ConnectionTCPInfoMetrics.rttSmoothed.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a8c (     0x4) ConnectionTCPInfoMetrics.rttSmoothed.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03a90 (    0x10) ConnectionTCPInfoMetrics.rttVariance.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03aa0 (    0x10) ConnectionTCPInfoMetrics.rttVariance.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03ab0 (    0x20) ConnectionTCPInfoMetrics.rttVariance.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03ad0 (     0x4) ConnectionTCPInfoMetrics.rttVariance.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03ad4 (     0xc) ConnectionTCPInfoMetrics.sendBandwidth.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03ae0 (    0x10) ConnectionTCPInfoMetrics.sendBandwidth.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03af0 (    0x20) ConnectionTCPInfoMetrics.sendBandwidth.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b10 (     0x4) ConnectionTCPInfoMetrics.sendBandwidth.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b14 (     0xc) ConnectionTCPInfoMetrics.sendBufferBytes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b20 (    0x10) ConnectionTCPInfoMetrics.sendBufferBytes.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b30 (    0x20) ConnectionTCPInfoMetrics.sendBufferBytes.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b50 (     0x4) ConnectionTCPInfoMetrics.sendBufferBytes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b54 (    0x10) ConnectionTCPInfoMetrics.synRetransmits.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b64 (    0x10) ConnectionTCPInfoMetrics.synRetransmits.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b74 (    0x20) ConnectionTCPInfoMetrics.synRetransmits.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b94 (     0x4) ConnectionTCPInfoMetrics.synRetransmits.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03b98 (    0x10) ConnectionTCPInfoMetrics.tfoSynDataAcked.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03ba8 (    0x10) ConnectionTCPInfoMetrics.tfoSynDataAcked.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03bb8 (    0x20) ConnectionTCPInfoMetrics.tfoSynDataAcked.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03bd8 (     0x4) ConnectionTCPInfoMetrics.tfoSynDataAcked.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03bdc (    0x10) ConnectionTCPInfoMetrics.subflowSwitchCount.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03bec (    0x10) ConnectionTCPInfoMetrics.subflowSwitchCount.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03bfc (    0x20) ConnectionTCPInfoMetrics.subflowSwitchCount.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03c1c (     0x4) ConnectionTCPInfoMetrics.subflowSwitchCount.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb03c20 (   0xa70) ConnectionTCPInfoMetrics.debugDescription.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04690 (     0x4) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04694 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb046c8 (    0x3c) destroy for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04704 (   0x158) initializeWithCopy for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0485c (   0x188) assignWithCopy for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb049e4 (     0x8) __swift_memcpy249_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb049ec (   0x160) assignWithTake for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04b4c (    0x54) getEnumTagSinglePayload for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04ba0 (    0x94) storeEnumTagSinglePayload for ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04c34 (    0x10) type metadata accessor for ConnectionTCPInfoMetrics [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04c44 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04c60 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04c74 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04c94 (    0x20) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04cb4 (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04ccc (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04cd8 (    0x10) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04ce8 (     0xc) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04cf4 (    0x1c) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04d10 (    0x10) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04d20 (     0x4) type metadata instantiation function for SafeCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04d24 (    0x44) type metadata completion function for SafeCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04d68 (    0x20) SafeCallback.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04d88 (    0x38) SafeCallback.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04dc0 (    0x18) type metadata accessor for SafeCallback [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04dd8 (    0x30) __swift_instantiateGenericMetadata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04e08 (    0xd0) CWFInterface.channelInfo.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04ed8 (    0x8c) CWFInterface.frequencyBand.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb04f64 (   0x318) NWConnection.getAttemptedEndpoints() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0527c (   0x36c) NWConnection.getConnectionEdgeID(wasConnected:attemptedEndpoints:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb055e8 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05608 (    0x54) lazy protocol witness table accessor for type [String] and conformance [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0565c (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0567c (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0569c (    0xf8) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05794 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05798 (   0x100) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05898 (   0x110) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb059a8 (    0xfc) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05aa4 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05abc (    0x18) SiriNetworkOspreyChannel.ospreyClientStreamingContext.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05ad4 (    0x20) SiriNetworkOspreyChannel.ospreyRequestBuilder.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb05af4 (   0x7d0) SiriNetworkOspreyChannel.__allocating_init(url:connectionConfiguration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb062c4 (    0x94) SiriNetworkOspreyChannel.send(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06358 (   0x220) SiriNetworkOspreyChannel.bidirectionalStreamingRequest(withMethodName:requestBuilder:streamingResponseHandler:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06578 (    0x68) thunk for @escaping @callee_guaranteed (@guaranteed OspreyMutableRequest) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb065e0 (    0x90) thunk for @escaping @callee_guaranteed (@guaranteed Data) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06670 (    0x68) thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb066d8 (   0x180) @objc SiriNetworkOspreyChannel.bidirectionalStreamingRequest(withMethodName:requestBuilder:streamingResponseHandler:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06858 (    0x50) thunk for @escaping @callee_unowned @convention(block) (@unowned NSData) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb068a8 (    0xd0) SiriNetworkOspreyChannel.init(url:configuration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06978 (    0x98) @objc SiriNetworkOspreyChannel.init(url:configuration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06a10 (    0xe0) SiriNetworkOspreyChannel.init(url:configuration:useCache:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06af0 (    0xa8) @objc SiriNetworkOspreyChannel.init(url:configuration:useCache:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06b98 (    0x68) SiriNetworkOspreyChannel.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06c00 (    0x24) @objc SiriNetworkOspreyChannel.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06c24 (    0x34) SiriNetworkOspreyChannel.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06c58 (    0xe0) @objc SiriNetworkOspreyChannel.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06d38 (    0x24) type metadata accessor for SiriNetworkOspreyChannel [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06d5c (    0x40) type metadata accessor for NSURLSessionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06d9c (   0x1c0) outlined consume of ConnectionConfiguration? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06f5c (    0x10) outlined consume of (@escaping @callee_guaranteed (@guaranteed OspreyMutableRequest) -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06f6c (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb06fa4 (     0x8) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSData) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06fac (     0x8) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06fb4 (    0x14) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned OspreyMutableRequest) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06fc8 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06fd8 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06fe0 (    0x10) outlined copy of (@escaping @callee_guaranteed (@guaranteed OspreyMutableRequest) -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06ff0 (     0x4) block_copy_helper.29 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06ff4 (     0x4) block_copy_helper.32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb06ff8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb06ffc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb07000 (     0x4) block_destroy_helper.30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07004 (     0x4) block_destroy_helper.33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07008 (    0x24) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0702c (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07040 (    0x88) getEnumTagSinglePayload for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb070c8 (    0xcc) storeEnumTagSinglePayload for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07194 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb071a8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb071bc (     0x8) getEnumTag for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb071c4 (     0x4) destructiveProjectEnumData for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb071c8 (     0x8) destructiveInjectEnumTag for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb071d0 (    0x10) type metadata accessor for ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb071e0 (    0x4c) ConnectionMethod.nextConnectionMethod(prioritizeWiFi:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0722c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb0723c (    0xdc) ConnectionMethod.providerClass(for:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07318 (   0x1e8) ConnectionMethod.connectionMethodDescription(connectionConfiguration:isMPTCP:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07500 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb07510 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb07524 (   0x140) static ConnectionMethod.nextConnectionMethodSupported(methods:connectionPolicyType:usesProxyConnection:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07664 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb07674 (    0x10) ConnectionMethod.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07684 (    0x44) static ConnectionMethod.allCases.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076c8 (     0x8) ConnectionMethod.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076d0 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076dc (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076e4 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076ec (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb076f4 (    0x28) protocol witness for static CaseIterable.allCases.getter in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0771c (    0x2c) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07748 (    0x2c) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07774 (     0x4) associated type witness table accessor for CaseIterable.AllCases : Collection in ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07778 (    0x54) lazy protocol witness table accessor for type [ConnectionMethod] and conformance [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb077cc (     0x4) base witness table accessor for Equatable in ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb077d0 (    0x4c) lazy protocol witness table accessor for type ConnectionMethod and conformance ConnectionMethod [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0781c (    0x48) lazy protocol witness table accessor for type RPCOspreyConnectionProvider and conformance RPCOspreyConnectionProvider [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07864 (    0x14) specialized ConnectionProviderProtocol.openTimeoutTimerInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07878 (    0x14) specialized ConnectionProviderProtocol.openTimeoutTimerInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0788c (    0xa4) specialized ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07930 (    0xac) specialized ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb079dc (   0x518) specialized closure #1 in ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb07ef4 (   0x510) specialized closure #1 in ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb08404 (     0xc) specialized ConnectionProviderProtocol.cancelOpenTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb08410 (   0x10c) specialized ConnectionProviderProtocol.cancelOpenTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0851c (   0x244) specialized ConnectionProviderProtocol.cancelConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb08760 (   0x260) specialized ConnectionProviderProtocol.cancelConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb089c0 (   0x6c4) specialized ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09084 (   0x838) specialized ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb098bc (   0x298) specialized closure #1 in ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09b54 (   0x28c) specialized closure #1 in ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09de0 (    0x44) thunk for @escaping @callee_guaranteed () -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09e24 (    0xcc) default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09ef0 (    0x74) default argument 1 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09f64 (    0x78) default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb09fdc (   0x5c8) specialized ConnectionProviderProtocol.setupConnectionUnviableTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0a5a4 (    0xfc) specialized ConnectionProviderProtocol.cancelOpenTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0a6a0 (   0x164) specialized closure #1 in ConnectionProviderProtocol.setupConnectionUnviableTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0a804 (   0x50c) specialized ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0ad10 (   0x638) specialized ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0b348 (   0x10c) specialized ConnectionProviderProtocol.cancelStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0b454 (   0x10c) specialized ConnectionProviderProtocol.cancelStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0b560 (   0x328) specialized closure #1 in ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0b888 (   0x328) specialized closure #1 in ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0bbb0 (   0x17c) specialized ConnectionProviderProtocol.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0bd2c (   0x188) specialized ConnectionProviderProtocol.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0beb4 (    0x6c) specialized SafeCallback.reify(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0bf20 (   0x188) NetworkConnectionProvider.connectionIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c0a8 (    0x54) NetworkConnectionProvider.connectionMetrics.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c0fc (     0x4) NetworkConnectionProvider.connectionMetrics.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c100 (     0x8) NetworkConnectionProvider.connectionType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c108 (    0x68) NetworkConnectionProvider.__allocating_init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c170 (   0x694) NetworkConnectionProvider.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0c804 (   0x534) NetworkConnectionProvider.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0cd38 (    0x30) NetworkConnectionProvider.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0cd68 (    0x24) type metadata accessor for NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0cd8c (   0x14c) NetworkConnectionProvider.openConnectionWithInitialPayload(_:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0ced8 (   0x988) specialized NetworkConnectionProvider.createConnectionWithInitialPayload<A>(_:networkConnectionProtocolType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0d860 (    0xd8) NetworkConnectionProvider.configureNetworkAnalytics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0d938 (   0x348) NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0dc80 (    0x48) implicit closure #2 in implicit closure #1 in NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0dcc8 (    0x70) implicit closure #4 in implicit closure #3 in NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0dd38 (   0x1b8) NetworkConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0def0 (   0xcb4) NetworkConnectionProvider.closeWithError(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0eba4 (     0x4) NetworkConnectionProvider.StateUpdateHandler.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0eba8 (   0xbc4) NetworkConnectionProvider.handleStateUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0f76c (     0x4) NetworkConnectionProvider.ViabilityUpdateHandler.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0f770 (    0x30) NetworkConnectionProvider.handleViabilityUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0f7a0 (   0x340) closure #1 in NetworkConnectionProvider.handleViabilityUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0fae0 (    0x38) NetworkConnectionProvider.StateUpdateHandler.__deallocating_deinit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0fb18 (    0x30) NetworkConnectionProvider.handleBetterPathUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0fb48 (   0x2f8) NetworkConnectionProvider.handleViabilityUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb0fe40 (   0x39c) closure #1 in NetworkConnectionProvider.handleBetterPathUpdate(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb101dc (   0x240) NetworkConnectionProvider.send(data:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1041c (   0x710) closure #1 in NetworkConnectionProvider.send(data:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb10b2c (   0x230) NetworkConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb10d5c (   0x454) closure #1 in NetworkConnectionProvider.readData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb111b0 (  0x1254) specialized NetworkConnectionProvider.updateConnectionMetrics(with:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb12404 (  0x1570) NetworkConnectionProvider.updateConnectionMetrics(with:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb13974 (   0x5ec) NetworkConnectionProvider.updateAndEmitConnectionMetricsPreparationReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb13f60 (   0x164) NetworkConnectionProvider.updateAndEmitConnectionMetricsReadyEstablishmentReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb140c4 (   0x6d4) closure #1 in NetworkConnectionProvider.updateAndEmitConnectionMetricsReadyEstablishmentReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb14798 (   0xd98) NetworkConnectionProvider.updateConnectionMetricsSnapshotReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15530 (    0x40) NetworkConnectionProvider.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15570 (    0x20) type metadata accessor for NetworkConnectionProvider.StateUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15590 (     0x4) type metadata completion function for NetworkConnectionProvider.StateUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15594 (    0x20) type metadata accessor for NetworkConnectionProvider.ViabilityUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb155b4 (    0x20) type metadata accessor for NetworkConnectionProvider.BetterPathUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb155d4 (    0x34) type metadata accessor for NetworkConnectionProvider.StateUpdateHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15608 (    0x38) type metadata completion function for NetworkConnectionProvider.StateUpdateHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15640 (    0x54) protocol witness for ConnectionProviderProtocol.connection.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15694 (    0x1c) protocol witness for ConnectionProviderProtocol.connectionProviderState.setter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb156b0 (    0x20) protocol witness for ConnectionProviderProtocol.delegate.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb156d0 (    0x44) protocol witness for ConnectionProviderProtocol.delegate.setter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15714 (   0x2b0) protocol witness for ConnectionProviderProtocol.connectionConfiguration.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb159c4 (     0x8) protocol witness for ConnectionProviderProtocol.connectionQueue.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb159cc (    0x18) protocol witness for ConnectionProviderProtocol.connectionType.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb159e4 (    0x1c) protocol witness for ConnectionProviderProtocol.openCompletion.setter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a00 (     0x8) protocol witness for ConnectionProviderProtocol.isMPTCP.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a08 (     0x8) protocol witness for ConnectionProviderProtocol.openTimeoutTimer.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a10 (    0x10) protocol witness for ConnectionProviderProtocol.openTimeoutTimer.setter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a20 (     0x4) protocol witness for ConnectionProviderProtocol.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a24 (    0x18) protocol witness for ConnectionProviderProtocol.openConnectionWithInitialPayload(_:completion:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a3c (     0x4) protocol witness for ConnectionProviderProtocol.closeWithError(_:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a40 (    0x18) protocol witness for ConnectionProviderProtocol.send(data:completion:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a58 (    0x18) protocol witness for ConnectionProviderProtocol.readData(_:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a70 (     0x4) protocol witness for ConnectionProviderProtocol.updateConnectionMetricsSnapshotReport() in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a74 (     0x4) protocol witness for ConnectionProviderProtocol.updateConnectionMetrics(with:completion:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a78 (    0x24) protocol witness for Hashable.hashValue.getter in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15a9c (    0x58) protocol witness for Hashable.hash(into:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15af4 (    0x68) protocol witness for Hashable._rawHashValue(seed:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15b5c (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15bc8 (    0x48) base witness table accessor for Equatable in NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15c10 (    0x58) instantiation function for generic protocol witness table for NetworkConnectionProvider [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15c68 (    0x18) outlined init with take of NetworkConnectionProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15c80 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb15cb8 (    0x64) outlined init with copy of NetworkConnectionProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15d1c (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb15d5c (     0xc) partial apply for closure #1 in NetworkConnectionProvider.updateAndEmitConnectionMetricsReadyEstablishmentReport() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15d68 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb15da0 (     0x8) partial apply for closure #1 in NWConnection.readyEstablishmentReport(queue:completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15da8 (    0x54) outlined retain of ConnectionEstablishmentReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15dfc (    0x38) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:privacy:attributes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15e34 (    0x28) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:privacy:attributes:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15e5c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb15e60 (     0xc) partial apply for closure #1 in NetworkConnectionProvider.readData(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15e6c (    0x64) outlined init with take of NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15ed0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb15ed4 (    0x18) partial apply for closure #1 in NetworkConnectionProvider.send(data:completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15eec (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb15f24 (     0xc) partial apply for closure #1 in NetworkConnectionProvider.handleBetterPathUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15f30 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15f40 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15f48 (    0x5c) outlined init with take of ConnectionSnapshotReport? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb15fa4 (   0x330) specialized BackgroundConnection.connectionProvider(_:received:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb162d4 (   0x32c) specialized BackgroundConnection.connectionProvider(_:received:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16600 (   0x284) specialized BackgroundConnection.connectionProvider(_:receivedViabilityChangeNotification:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16884 (   0x1c0) specialized BackgroundConnection.connectionProviderReceivedBetterRouteNotification(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16a44 (     0xc) partial apply for closure #1 in NetworkConnectionProvider.handleViabilityUpdate(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16a50 (    0x40) type metadata accessor for OS_dispatch_source [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16a90 (    0x50) lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A] [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16ae0 (     0x8) partial apply for specialized closure #1 in ConnectionProviderProtocol.setupConnectionUnviableTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16ae8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16aec (     0x4) partial apply for closure #1 in BackgroundConnection.connectionProvider(_:received:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16af0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb16b00 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16b04 (     0x8) partial apply for specialized closure #1 in ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16b0c (    0x68) outlined assign with copy of NetworkConnectionProtocol? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16b74 (     0x8) partial apply for specialized closure #1 in ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16b7c (    0x64) outlined init with copy of NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16be0 (    0x5c) outlined destroy of NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16c3c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16c40 (    0x18) partial apply for specialized closure #1 in ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16c58 (     0x8) partial apply for implicit closure #2 in implicit closure #1 in NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16c60 (    0x50) __swift_mutable_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16cb0 (    0x30) partial apply for implicit closure #4 in implicit closure #3 in NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16ce0 (    0x30) partial apply for implicit closure #6 in implicit closure #5 in NetworkConnectionProvider.configureConnectionHandler(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16d10 (    0x2c) partial apply for closure #1 in NetworkConnectionProvider.StateUpdateHandler.handleStateUpdate@Sendable (_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16d3c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16d40 (    0x40) objectdestroy.178Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16d80 (     0x8) partial apply for specialized closure #1 in ConnectionProviderProtocol.setupStaleConnectionTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16d88 (    0x48) lazy protocol witness table accessor for type NetworkConnectionProvider and conformance NetworkConnectionProvider [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16dd0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16dd4 (    0x48) objectdestroy.168Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e1c (     0x4) closure #1 in BackgroundConnection.connectionProvider(_:received:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e20 (     0xc) partial apply for closure #1 in BackgroundConnection.connectionProvider(_:received:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e2c (     0x8) partial apply for specialized closure #1 in ConnectionProviderProtocol.setupOpenTimeoutTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16e38 (    0x40) objectdestroy.141Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e78 (    0x18) partial apply for specialized closure #1 in ConnectionProviderProtocol.openCompletionSetup(completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16e90 (    0x14) partial apply for closure #1 in NetworkConnectionProvider.send(data:completion:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16ea4 (    0x5c) outlined init with copy of NetworkConnectionProtocol? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f00 (    0x50) outlined destroy of NetworkConnectionProtocol? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f50 (     0x4) block_copy_helper.155 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f54 (     0x4) block_copy_helper.161 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f58 (     0x4) block_copy_helper.170 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f5c (     0x4) block_copy_helper.180 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f60 (     0x4) block_copy_helper.184 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f64 (     0x4) block_copy_helper.198 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f68 (     0x4) block_copy_helper.206 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f6c (     0x4) block_copy_helper.210 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f70 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16f74 (     0x4) type metadata completion function for NetworkConnectionProvider.ViabilityUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f78 (     0x4) type metadata completion function for NetworkConnectionProvider.BetterPathUpdateHandler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f7c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16f80 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16f84 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb16f88 (     0x4) block_destroy_helper.156 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f8c (     0x4) block_destroy_helper.162 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f90 (     0x4) block_destroy_helper.171 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f94 (     0x4) block_destroy_helper.181 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f98 (     0x4) block_destroy_helper.185 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16f9c (     0x4) block_destroy_helper.199 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16fa0 (     0x4) block_destroy_helper.207 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16fa4 (     0x4) block_destroy_helper.211 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16fa8 (     0x4) NetworkConnectionProvider.BetterPathUpdateHandler.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16fac (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb16fc8 (    0xf0) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb170b8 (    0x64) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1711c (    0xa0) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb171bc (    0x4c) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17208 (    0x7c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17284 (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1729c (    0x34) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb172d0 (    0x18) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb172e8 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17300 (    0x24) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17324 (    0x3c) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17360 (    0x3c) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1739c (    0x10) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb173ac (    0x10) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb173bc (    0x14) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb173d0 (    0x14) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb173e4 (    0x38) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1741c (    0x30) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1744c (    0x30) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1747c (     0xc) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17488 (    0x20) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb174a8 (    0x20) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb174c8 (    0x18) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb174e0 (    0x18) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb174f8 (    0x28) OUTLINED_FUNCTION_25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17520 (    0x30) OUTLINED_FUNCTION_26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17550 (    0x24) OUTLINED_FUNCTION_27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17574 (    0x24) OUTLINED_FUNCTION_28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17598 (    0x24) OUTLINED_FUNCTION_29 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb175bc (    0x14) OUTLINED_FUNCTION_30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb175d0 (    0x1c) OUTLINED_FUNCTION_31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb175ec (    0x14) OUTLINED_FUNCTION_32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17600 (    0x10) OUTLINED_FUNCTION_33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17610 (    0x18) OUTLINED_FUNCTION_34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17628 (    0x20) OUTLINED_FUNCTION_35 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17648 (     0xc) OUTLINED_FUNCTION_36 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17654 (    0x1c) OUTLINED_FUNCTION_37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17670 (    0x18) OUTLINED_FUNCTION_38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17688 (     0xc) OUTLINED_FUNCTION_39 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17694 (    0x1c) OUTLINED_FUNCTION_40 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb176b0 (    0x1c) OUTLINED_FUNCTION_41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb176cc (    0x1c) OUTLINED_FUNCTION_42 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb176e8 (    0x1c) OUTLINED_FUNCTION_43 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17704 (    0x18) OUTLINED_FUNCTION_44 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1771c (    0x10) OUTLINED_FUNCTION_45 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1772c (    0x18) OUTLINED_FUNCTION_46 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17744 (    0x10) OUTLINED_FUNCTION_47 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17754 (    0x18) OUTLINED_FUNCTION_48 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1776c (    0x10) OUTLINED_FUNCTION_49 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1777c (    0x18) OUTLINED_FUNCTION_50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17794 (    0x18) OUTLINED_FUNCTION_51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb177ac (     0xc) OUTLINED_FUNCTION_52 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb177b8 (    0x10) OUTLINED_FUNCTION_53 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb177c8 (    0x18) OUTLINED_FUNCTION_54 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb177e0 (    0x18) OUTLINED_FUNCTION_55 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb177f8 (    0x18) OUTLINED_FUNCTION_56 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17810 (    0x18) OUTLINED_FUNCTION_57 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17828 (    0x10) OUTLINED_FUNCTION_58 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17838 (    0x18) OUTLINED_FUNCTION_59 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17850 (    0x18) OUTLINED_FUNCTION_60 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17868 (    0x18) OUTLINED_FUNCTION_61 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17880 (    0x18) OUTLINED_FUNCTION_62 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17898 (    0x1c) OUTLINED_FUNCTION_63 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb178b4 (     0xc) OUTLINED_FUNCTION_64 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb178c0 (    0x20) OUTLINED_FUNCTION_65 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb178e0 (    0x18) OUTLINED_FUNCTION_66 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb178f8 (    0x14) OUTLINED_FUNCTION_67 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1790c (    0x14) OUTLINED_FUNCTION_68 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17920 (    0x18) OUTLINED_FUNCTION_69 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17938 (    0x18) OUTLINED_FUNCTION_70 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17950 (    0x20) OUTLINED_FUNCTION_71 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17970 (    0x18) OUTLINED_FUNCTION_72 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17988 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.connectionConfiguration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1799c (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.connectionConfiguration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb179b0 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.connectionConfiguration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb179c4 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.enableDeviceAuthentication.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb179d8 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.enableDeviceAuthentication.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb179ec (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.enableDeviceAuthentication.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a00 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.ospreyRequestBuilder.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a14 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.ospreyRequestBuilder.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a28 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.ospreyRequestBuilder.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a3c (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.init(url:connectionConfiguration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a50 (    0x24) dispatch thunk of RPCOspreyConnectionProtocol.serverStreamingRequest(withMethodName:request:requestBuilder:streamingResponseHandler:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a74 (    0x1c) dispatch thunk of RPCOspreyConnectionProtocol.bidirectionalStreamingRequest(withMethodName:requestBuilder:streamingResponseHandler:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17a90 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.send(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17aa4 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.preconnect() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17ab8 (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17acc (    0x14) dispatch thunk of RPCOspreyConnectionProtocol.cancel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17ae0 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17b14 (    0x98) destroy for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17bac (   0x218) initializeWithCopy for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb17dc4 (   0x458) assignWithCopy for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1821c (    0x54) outlined destroy of ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb18270 (     0x8) __swift_memcpy400_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb18278 (   0x238) assignWithTake for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb184b0 (    0x40) getEnumTagSinglePayload for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb184f0 (    0xa8) storeEnumTagSinglePayload for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb18598 (    0x10) type metadata accessor for ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb185a8 (   0x114) ConnectionSnapshotReport.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb186bc (   0x570) ConnectionSnapshotReport.flowNetworkInterfaceType.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb18c2c (    0x60) (null) [FUNC, FunctionStarts] 
                0x000000020fb18c8c (   0x27c) ConnectionSnapshotReport.tcpInfoMetricsByInterfaceName.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb18f08 (   0x634) ConnectionSnapshotReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1953c (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19578 (    0x64) outlined init with take of ConnectionPingInfoReport? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb195dc (    0x2c) outlined release of [ConnectionTCPInfoMetrics] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19608 (    0x60) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19668 (    0x4c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb196b4 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb196d0 (    0x14) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb196e4 (     0xc) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb196f0 (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb196fc (     0xc) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19708 (    0x34) static ConnectionPolicy.maxGlobalTimeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1973c (    0x50) static ConnectionPolicy.maxGlobalTimeout.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1978c (    0x58) static ConnectionPolicy.maxGlobalTimeout.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb197e4 (     0x4) static ConnectionPolicy.maxGlobalTimeout.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb197e8 (    0x30) ConnectionPolicy.policyId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19818 (    0x38) ConnectionPolicy.policyId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19850 (    0x20) ConnectionPolicy.policyId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19870 (     0x4) ConnectionPolicy.policyId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19874 (     0x8) ConnectionPolicy.disableMPTCP.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1987c (     0x8) ConnectionPolicy.disableMPTCP.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19884 (    0x20) ConnectionPolicy.disableMPTCP.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198a4 (     0x4) ConnectionPolicy.disableMPTCP.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198a8 (     0x8) ConnectionPolicy.enableOptimisticDNS.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198b0 (     0x8) ConnectionPolicy.enableOptimisticDNS.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198b8 (    0x20) ConnectionPolicy.enableOptimisticDNS.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198d8 (     0x4) ConnectionPolicy.enableOptimisticDNS.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198dc (     0x8) ConnectionPolicy.enableTLS13.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198e4 (     0x8) ConnectionPolicy.enableTLS13.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb198ec (    0x20) ConnectionPolicy.enableTLS13.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1990c (     0x4) ConnectionPolicy.enableTLS13.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19910 (     0x8) ConnectionPolicy.enableTLS13ZeroRTT.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19918 (     0x8) ConnectionPolicy.enableTLS13ZeroRTT.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19920 (    0x20) ConnectionPolicy.enableTLS13ZeroRTT.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19940 (     0x4) ConnectionPolicy.enableTLS13ZeroRTT.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19944 (     0x8) ConnectionPolicy.enableTcpFastOpen.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1994c (     0x8) ConnectionPolicy.enableTcpFastOpen.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19954 (    0x20) ConnectionPolicy.enableTcpFastOpen.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19974 (     0x4) ConnectionPolicy.enableTcpFastOpen.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19978 (     0x8) ConnectionPolicy.enabled.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19980 (     0x8) ConnectionPolicy.enabled.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19988 (    0x20) ConnectionPolicy.enabled.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199a8 (     0x4) ConnectionPolicy.enabled.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199ac (     0xc) ConnectionPolicy.globalTimeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199b8 (    0x10) ConnectionPolicy.globalTimeout.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199c8 (    0x20) ConnectionPolicy.globalTimeout.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199e8 (     0x4) ConnectionPolicy.globalTimeout.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb199ec (    0x6c) ConnectionPolicy.maxRoutesTimeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19a58 (    0x48) ConnectionPolicy.delayBetweenScheduledRoutes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19aa0 (     0xc) ConnectionPolicy.mptcpFallbackPort.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19aac (    0x10) ConnectionPolicy.mptcpFallbackPort.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19abc (    0x20) ConnectionPolicy.mptcpFallbackPort.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19adc (     0x4) ConnectionPolicy.mptcpFallbackPort.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19ae0 (     0xc) ConnectionPolicy.timeToLive.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19aec (    0x10) ConnectionPolicy.timeToLive.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19afc (    0x20) ConnectionPolicy.timeToLive.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b1c (     0x4) ConnectionPolicy.timeToLive.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b20 (     0x8) ConnectionPolicy.routes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b28 (    0x2c) ConnectionPolicy.routes.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b54 (    0x20) ConnectionPolicy.routes.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b74 (     0x4) ConnectionPolicy.routes.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19b78 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19bac (    0x3c) destroy for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19be8 (    0x80) initializeWithCopy for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19c68 (    0xc8) assignWithCopy for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19d30 (     0x8) __swift_memcpy80_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19d38 (    0xa8) assignWithTake for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19de0 (    0x40) getEnumTagSinglePayload for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19e20 (    0x54) storeEnumTagSinglePayload for ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19e74 (    0x10) type metadata accessor for ConnectionPolicy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb19e84 (   0x538) ConnectionPolicy.init(from:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a3bc (    0x68) outlined bridged method (pb) of @objc SAConnectionPolicy.policyId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a424 (    0x64) outlined bridged method (pb) of @objc SAConnectionPolicy.routes.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a488 (    0x40) type metadata accessor for SAConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a4c8 (    0x20) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a4e8 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a500 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a520 (   0x120) Double.dispatchTimeInterval.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a640 (    0x4c) Double.seconds.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1a68c (   0xda0) static ConnectionConfiguration.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b42c (    0x28) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b454 (    0x84) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b4d8 (    0x2c) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b504 (    0x28) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b52c (    0x34) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1b560 (   0x4ac) ConnectionConfiguration.hash(into:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1ba0c (   0x188) ConnectionConfiguration.hashValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bb94 (     0x4) protocol witness for Hashable.hashValue.getter in conformance ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bb98 (     0x4) protocol witness for Hashable.hash(into:) in conformance ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bb9c (   0x184) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd20 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd24 (     0x4) base witness table accessor for Equatable in ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd28 (    0x4c) lazy protocol witness table accessor for type ConnectionConfiguration and conformance ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd74 (     0x4) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd78 (     0x4) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd7c (     0x4) specialized RawRepresentable<>.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bd80 (    0x2c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bdac (    0x38) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bde4 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bdfc (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be14 (    0x24) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be38 (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be54 (     0xc) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be60 (     0xc) NetworkAnalytics.netId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be6c (     0xc) NetworkAnalytics.orchestratorRequestId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be78 (     0xc) NetworkAnalytics.netIdForRequestLink.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be84 (     0xc) NetworkAnalytics.httpHeaderEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be90 (     0xc) NetworkAnalytics.preparationSnapshotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1be9c (     0xc) NetworkAnalytics.debugPreparationSnapshotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bea8 (     0xc) NetworkAnalytics.readySnapshotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1beb4 (     0xc) NetworkAnalytics.debugReadySnapshotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bec0 (     0xc) NetworkAnalytics.sessionConnectionSnapthotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1becc (     0xc) NetworkAnalytics.debugSessionConnectionSnapthotEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bed8 (     0xc) NetworkAnalytics.sessionConnectionFailedEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bee4 (     0xc) NetworkAnalytics.peerConnectionFailedEvent.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bef0 (    0x58) NetworkAnalytics.httpHeaderEvent.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bf48 (    0x6c) one-time initialization function for sharedNetworkAnalytics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1bfb4 (   0x1e0) default argument 0 of NetworkAnalytics.init(queue:siriAnalyticsMessageStream:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c194 (    0x5c) static NetworkAnalytics.sharedNetworkAnalytics.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c1f0 (    0x28) @objc static NetworkAnalytics.sharedNetworkAnalytics.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c218 (   0x11c) NetworkAnalytics.init(queue:siriAnalyticsMessageStream:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c334 (    0x28) NetworkAnalytics.reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c35c (    0x40) @objc NetworkAnalytics.reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c39c (   0x1d4) NetworkAnalytics.resetNetId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c570 (   0x1f4) closure #1 in NetworkAnalytics.resetNetId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c764 (    0x40) @objc NetworkAnalytics.resetNetId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c7a4 (    0x28) NetworkAnalytics.setNetId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c7cc (    0x78) NSUUID.__allocating_init(uuidString:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c844 (    0x18) @objc NetworkAnalytics.setNetId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c85c (   0x134) NetworkAnalytics.getNetId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c990 (    0x28) thunk for @callee_guaranteed () -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c9b8 (    0x28) thunk for @escaping @callee_guaranteed () -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1c9e0 (    0x4c) @objc NetworkAnalytics.getNetId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1ca2c (   0x134) NetworkAnalytics.getSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cb60 (    0x3c) @objc NetworkAnalytics.getSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cb9c (    0x28) NetworkAnalytics.setIsConnectionActive(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cbc4 (    0x50) @objc NetworkAnalytics.setIsConnectionActive(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cc14 (   0x134) NetworkAnalytics.getIsConnectionActive() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cd48 (    0x3c) @objc NetworkAnalytics.getIsConnectionActive() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cd84 (    0x28) NetworkAnalytics.setNetIdAvailable(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cdac (   0x1d0) NetworkAnalytics.setIsConnectionActive(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1cf7c (   0x138) closure #1 in NetworkAnalytics.setNetIdAvailable(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d0b4 (    0x50) @objc NetworkAnalytics.setNetIdAvailable(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d104 (   0x134) NetworkAnalytics.isNetIdAvailable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d238 (    0x3c) @objc NetworkAnalytics.isNetIdAvailable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d274 (    0x28) NetworkAnalytics.increaseSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d29c (    0x40) @objc NetworkAnalytics.increaseSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d2dc (    0x28) NetworkAnalytics.resetSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d304 (   0x1e0) NetworkAnalytics.increaseSequenceNumber() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d4e4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d51c (     0x8) partial apply for closure #1 in NetworkAnalytics.resetNetId() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d524 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d534 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d53c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d540 (    0x44) partial apply for closure #1 in NetworkAnalytics.setNetId(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d584 (    0x24) partial apply for closure #1 in NetworkAnalytics.getNetId() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d5a8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d5ac (    0x28) partial apply for thunk for @callee_guaranteed () -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d5d4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d60c (    0x18) partial apply for closure #1 in NetworkAnalytics.getSequenceNumber() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d624 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d628 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d660 (    0x18) partial apply for closure #1 in NetworkAnalytics.setIsConnectionActive(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d678 (     0xc) partial apply for closure #1 in NetworkAnalytics.getIsConnectionActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d684 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d688 (     0xc) partial apply for closure #1 in NetworkAnalytics.setNetIdAvailable(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d694 (     0xc) partial apply for closure #1 in NetworkAnalytics.isNetIdAvailable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d6a0 (    0x14) partial apply for closure #1 in NetworkAnalytics.getIsConnectionActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d6b4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d6b8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb1d6f0 (    0x24) partial apply for closure #1 in NetworkAnalytics.increaseSequenceNumber() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d714 (    0x18) partial apply for closure #1 in NetworkAnalytics.resetSequenceNumber() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d72c (    0x40) @objc NetworkAnalytics.resetSequenceNumber() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d76c (    0x28) NetworkAnalytics.setOrchestatorRequestId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d794 (   0x204) NetworkAnalytics.setNetId(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1d998 (   0x234) closure #1 in NetworkAnalytics.setNetId(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dbcc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1dbd0 (    0x40) objectdestroy.3Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dc10 (    0x44) partial apply for closure #1 in NetworkAnalytics.setOrchestatorRequestId(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dc54 (    0x18) @objc NetworkAnalytics.setOrchestatorRequestId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dc6c (    0x8c) @objc NetworkAnalytics.setNetId(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dcf8 (   0x134) NetworkAnalytics.getOrchestratorRequestId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1de2c (    0x48) closure #1 in NetworkAnalytics.getNetId() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1de74 (    0x24) partial apply for closure #1 in NetworkAnalytics.getOrchestratorRequestId() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1de98 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb1de9c (    0x4c) @objc NetworkAnalytics.getOrchestratorRequestId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1dee8 (    0x30) NetworkAnalytics.emitLogDebug() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1df18 (    0x38) @objc NetworkAnalytics.emitLogDebug() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1df50 (   0x240) NetworkAnalytics.createRequestLinkInfo(from:component:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1e190 (    0xa0) SISchemaUUID.__allocating_init(nsuuid:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1e230 (   0x294) NetworkAnalytics.createSchemaClientEventFromUUID(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1e4c4 (   0x1f8) NetworkAnalytics.emitAllCachedMessagesFor(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1e6bc (  0x135c) closure #1 in NetworkAnalytics.emitAllCachedMessagesFor(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1fa18 (    0xb4) emitClientEvent #1 (_:timestamp:) in closure #1 in NetworkAnalytics.emitAllCachedMessagesFor(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1facc (   0x1e8) NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb1fcb4 (   0x55c) closure #1 in NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20210 (    0x40) @objc NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20250 (    0x28) NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20278 (   0x778) closure #1 in NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb209f0 (    0x64) @objc NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20a54 (    0x28) NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20a7c (   0x1fc) NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb20c78 (   0x688) closure #1 in NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb21300 (    0x64) @objc NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb21364 (    0x28) NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2138c (   0x688) closure #1 in NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb21a14 (    0x64) @objc NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb21a78 (    0x28) NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb21aa0 (   0x688) closure #1 in NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb22128 (    0x64) @objc NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2218c (    0x28) NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb221b4 (   0x220) NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb223d4 (   0x688) closure #1 in NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb22a5c (    0x64) @objc NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb22ac0 (    0x28) NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb22ae8 (   0x688) closure #1 in NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb23170 (    0x64) @objc NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb231d4 (    0x28) NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb231fc (   0x688) closure #1 in NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb23884 (    0x64) @objc NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb238e8 (    0x28) NetworkAnalytics.logSessionConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb23910 (   0x688) closure #1 in NetworkAnalytics.logSessionConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb23f98 (    0x64) @objc NetworkAnalytics.logSessionConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb23ffc (    0x28) NetworkAnalytics.logPeerConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24024 (   0x688) closure #1 in NetworkAnalytics.logPeerConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb246ac (    0x64) @objc NetworkAnalytics.logPeerConnectionFailed(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24710 (    0x34) NetworkAnalytics.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24744 (    0x30) NetworkAnalytics.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24774 (    0x10) @objc NetworkAnalytics.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24784 (    0x34) NetworkAnalytics.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb247b8 (   0x130) @objc NetworkAnalytics.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb248e8 (    0xd4) closure #1 in OSLogArguments.append(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb249bc (    0x9c) specialized RandomNumberGenerator.next<A>(upperBound:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24a58 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb24a90 (     0x8) partial apply for closure #1 in NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24a98 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24a9c (    0x18) partial apply for closure #1 in NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24ab4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24ab8 (    0x18) partial apply for closure #1 in NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24ad0 (    0x14) partial apply for closure #1 in NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24ae4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24ae8 (    0x18) partial apply for closure #1 in NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b00 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b04 (    0x18) partial apply for closure #1 in NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b1c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b20 (    0x18) partial apply for closure #1 in NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b38 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b3c (    0x18) partial apply for closure #1 in NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b54 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b58 (    0x18) partial apply for closure #1 in NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b70 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b74 (    0x18) partial apply for closure #1 in NetworkAnalytics.logSessionConnectionFailed(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24b8c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb24b90 (    0x18) partial apply for closure #1 in NetworkAnalytics.logPeerConnectionFailed(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24ba8 (    0x24) type metadata accessor for NetworkAnalytics [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24bcc (    0x18) method lookup function for NetworkAnalytics [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24be4 (    0x3c) dispatch thunk of NetworkAnalytics.reset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24c20 (    0x3c) dispatch thunk of NetworkAnalytics.resetNetId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24c5c (    0x3c) dispatch thunk of NetworkAnalytics.setNetId(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24c98 (    0x3c) dispatch thunk of NetworkAnalytics.getNetId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24cd4 (    0x3c) dispatch thunk of NetworkAnalytics.getSequenceNumber() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24d10 (    0x3c) dispatch thunk of NetworkAnalytics.setIsConnectionActive(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24d4c (    0x3c) dispatch thunk of NetworkAnalytics.getIsConnectionActive() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24d88 (    0x3c) dispatch thunk of NetworkAnalytics.setNetIdAvailable(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24dc4 (    0x3c) dispatch thunk of NetworkAnalytics.isNetIdAvailable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24e00 (    0x3c) dispatch thunk of NetworkAnalytics.increaseSequenceNumber() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24e3c (    0x3c) dispatch thunk of NetworkAnalytics.resetSequenceNumber() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24e78 (    0x3c) dispatch thunk of NetworkAnalytics.setOrchestatorRequestId(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24eb4 (    0x3c) dispatch thunk of NetworkAnalytics.getOrchestratorRequestId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24ef0 (    0x3c) dispatch thunk of NetworkAnalytics.emitLogDebug() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24f2c (    0x3c) dispatch thunk of NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24f68 (    0x3c) dispatch thunk of NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24fa4 (    0x3c) dispatch thunk of NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb24fe0 (    0x3c) dispatch thunk of NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2501c (    0x3c) dispatch thunk of NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25058 (    0x3c) dispatch thunk of NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25094 (    0x3c) dispatch thunk of NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb250d0 (    0x3c) dispatch thunk of NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2510c (    0x3c) dispatch thunk of NetworkAnalytics.logSessionConnectionFailed(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25148 (    0x3c) dispatch thunk of NetworkAnalytics.logPeerConnectionFailed(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25184 (    0x34) initializeBufferWithCopyOfBuffer for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb251b8 (    0x3c) destroy for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb251f4 (    0x48) initializeWithCopy for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2523c (    0x70) assignWithCopy for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb252ac (    0x14) __swift_memcpy25_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb252c0 (    0x58) assignWithTake for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25318 (    0x54) getEnumTagSinglePayload for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2536c (    0x58) storeEnumTagSinglePayload for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb253c4 (    0x10) type metadata accessor for NetworkAnalyticsEventMessage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb253d4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x000000020fb253dc (    0x4c) objectdestroy.97Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25428 (     0x8) partial apply for closure #1 in NetworkAnalytics.emitAllCachedMessagesFor(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25430 (    0x60) outlined destroy of UUID? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25490 (    0x3c) type metadata accessor for NSUUID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb254cc (    0x48) lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25514 (    0x50) lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A] [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25564 (     0x4) block_copy_helper.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25568 (     0x4) block_copy_helper.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2556c (     0x4) block_copy_helper.24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25570 (     0x4) block_copy_helper.30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25574 (     0x4) block_copy_helper.40 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25578 (     0x4) block_copy_helper.46 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2557c (     0x4) block_copy_helper.56 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25580 (     0x4) block_copy_helper.62 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25584 (     0x4) block_copy_helper.68 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25588 (     0x4) block_copy_helper.75 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2558c (     0x4) block_copy_helper.85 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25590 (     0x4) block_copy_helper.92 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25594 (     0x4) block_copy_helper.99 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25598 (     0x4) block_copy_helper.106 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2559c (     0x4) block_copy_helper.113 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255a0 (     0x4) block_copy_helper.120 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255a4 (     0x4) block_copy_helper.127 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255a8 (     0x4) block_copy_helper.134 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255ac (     0x4) block_copy_helper.141 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255b0 (     0x4) block_copy_helper.148 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255b4 (     0x4) block_copy_helper.155 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255b8 (     0x4) block_copy_helper.203 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255bc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255c0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255c8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255cc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255d0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb255d4 (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255d8 (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255dc (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255e0 (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255e4 (     0x4) block_destroy_helper.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255e8 (     0x4) block_destroy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255ec (     0x4) block_destroy_helper.25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255f0 (     0x4) block_destroy_helper.31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255f4 (     0x4) block_destroy_helper.41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255f8 (     0x4) block_destroy_helper.47 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb255fc (     0x4) block_destroy_helper.57 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25600 (     0x4) block_destroy_helper.63 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25604 (     0x4) block_destroy_helper.69 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25608 (     0x4) block_destroy_helper.76 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2560c (     0x4) block_destroy_helper.86 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25610 (     0x4) block_destroy_helper.93 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25614 (     0x4) block_destroy_helper.100 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25618 (     0x4) block_destroy_helper.107 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2561c (     0x4) block_destroy_helper.114 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25620 (     0x4) block_destroy_helper.121 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25624 (     0x4) block_destroy_helper.128 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25628 (     0x4) block_destroy_helper.135 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2562c (     0x4) block_destroy_helper.142 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25630 (     0x4) block_destroy_helper.149 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25634 (     0x4) block_destroy_helper.156 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25638 (     0x4) block_destroy_helper.204 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2563c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25658 (    0x28) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25680 (     0x8) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25688 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25698 (    0x1c) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb256b4 (    0x18) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb256cc (    0x24) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb256f0 (    0x2c) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2571c (    0x14) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25730 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25748 (    0x10) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25758 (    0x18) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25770 (    0x18) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25788 (    0x1c) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb257a4 (    0x10) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb257b4 (    0x18) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb257cc (    0x14) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb257e0 (     0xc) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb257ec (    0x2c) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25818 (    0x2c) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25844 (    0x18) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2585c (    0x1c) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25878 (    0x18) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25890 (    0x18) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb258a8 (    0x18) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb258c0 (    0x18) OUTLINED_FUNCTION_25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb258d8 (    0x18) OUTLINED_FUNCTION_26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb258f0 (     0xc) OUTLINED_FUNCTION_27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb258fc (    0x18) OUTLINED_FUNCTION_28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25914 (     0xc) OUTLINED_FUNCTION_29 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25920 (    0x24) OUTLINED_FUNCTION_30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25944 (    0x18) OUTLINED_FUNCTION_31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2595c (    0x24) OUTLINED_FUNCTION_32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25980 (    0x18) OUTLINED_FUNCTION_33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25998 (    0x14) OUTLINED_FUNCTION_34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb259ac (    0x14) OUTLINED_FUNCTION_35 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb259c0 (    0x38) initializeBufferWithCopyOfBuffer for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb259f8 (     0x8) destroy for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25a00 (    0x38) initializeWithCopy for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25a38 (    0x60) assignWithCopy for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25a98 (    0x14) __swift_memcpy24_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25aac (    0x40) assignWithTake for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25aec (    0x40) getEnumTagSinglePayload for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25b2c (    0x40) storeEnumTagSinglePayload for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25b6c (    0x10) type metadata accessor for ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25b7c (   0x1c8) ConnectionEndpointReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25d44 (     0xc) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionEndpointReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25d50 (    0x48) initializeBufferWithCopyOfBuffer for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25d98 (    0x14) outlined copy of ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25dac (    0x10) destroy for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25dbc (    0x48) initializeWithCopy for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25e04 (    0x54) assignWithCopy for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25e58 (    0x14) __swift_memcpy9_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25e6c (    0x40) assignWithTake for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25eac (    0x40) getEnumTagSinglePayload for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25eec (    0x44) storeEnumTagSinglePayload for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25f30 (    0x18) getEnumTag for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25f48 (     0x4) destructiveProjectEnumData for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25f4c (    0x18) destructiveInjectEnumTag for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25f64 (    0x10) type metadata accessor for ConnectionProviderState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb25f74 (   0x2a4) ConnectionProviderState.init(from:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26218 (    0x50) lazy protocol witness table accessor for type NWError and conformance NWError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26268 (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2627c (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26298 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb262a8 (    0x1c) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb262c4 (    0x20) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb262e4 (   0x270) NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26554 (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb26584 (   0x52c) closure #1 in NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26ab0 (    0x48) (null) [FUNC, FunctionStarts] 
                0x000000020fb26af8 (     0xc) partial apply for closure #1 in NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26b04 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26b14 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26b1c (    0x10) outlined copy of (@escaping @callee_guaranteed () -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26b2c (    0xdc) closure #1 in closure #1 in NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26c08 (    0x68) thunk for @escaping @callee_guaranteed (@guaranteed CWFEvent) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26c70 (    0xa4) @objc NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26d14 (   0x240) NetworkWiFiManager.powerStateDidChangeForWiFiInterface(withName:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb26f54 (    0xb0) closure #1 in NetworkWiFiManager.powerStateDidChangeForWiFiInterface(withName:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27004 (    0x60) @objc NetworkWiFiManager.powerStateDidChangeForWiFiInterface(withName:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27064 (     0x8) partial apply for closure #1 in NetworkWiFiManager.powerStateDidChangeForWiFiInterface(withName:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2706c (    0x10) outlined consume of (@escaping @callee_guaranteed () -> ())? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2707c (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb270ac (     0x8) partial apply for thunk for @escaping @callee_unowned @convention(block) () -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb270b4 (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb270e4 (     0x8) partial apply for closure #1 in closure #1 in NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb270ec (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb27124 (    0x28) partial apply for closure #2 in closure #1 in NetworkWiFiManager.registerOneShotPowerStateDidChangeForWiFiInterface(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2714c (     0x4) block_copy_helper.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27150 (     0x4) block_copy_helper.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27154 (     0x4) block_copy_helper.20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27158 (     0x4) block_destroy_helper.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2715c (     0x4) block_destroy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27160 (     0x4) block_destroy_helper.21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27164 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27180 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27198 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb271a8 (    0xb4) ConnectionMetrics.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2725c (     0xc) ConnectionMetrics.connectionIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27268 (    0x10) ConnectionMetrics.connectionIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27278 (    0x20) ConnectionMetrics.connectionIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27298 (     0x4) ConnectionMetrics.connectionIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2729c (     0x8) ConnectionMetrics.connectionMethodHistory.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb272a4 (    0x2c) ConnectionMetrics.connectionMethodHistory.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb272d0 (    0x20) ConnectionMetrics.connectionMethodHistory.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb272f0 (     0x4) ConnectionMetrics.connectionMethodHistory.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb272f4 (    0x2c) ConnectionMetrics.policyId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27320 (    0x34) ConnectionMetrics.policyId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27354 (    0x20) ConnectionMetrics.policyId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27374 (     0x4) ConnectionMetrics.policyId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27378 (   0x720) ConnectionMetrics.remoteMetrics.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27a98 (   0x3bc) key path getter for ConnectionMetrics.remoteMetrics : ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb27e54 (   0x800) key path setter for ConnectionMetrics.remoteMetrics : ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb28654 (   0x4c0) ConnectionMetrics.remoteMetrics.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb28b14 (   0x704) ConnectionMetrics.remoteMetrics.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb29218 (   0xf18) ConnectionMetrics.remoteMetrics.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a130 (    0x10) ConnectionMetrics.metricsCount.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a140 (    0x10) ConnectionMetrics.metricsCount.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a150 (    0x20) ConnectionMetrics.metricsCount.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a170 (     0x4) ConnectionMetrics.metricsCount.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a174 (     0x8) ConnectionMetrics.attemptedEndpoints.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a17c (    0x2c) ConnectionMetrics.attemptedEndpoints.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a1a8 (    0x20) ConnectionMetrics.attemptedEndpoints.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a1c8 (     0x4) ConnectionMetrics.attemptedEndpoints.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a1cc (    0x30) ConnectionMetrics.connectionEdgeID.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a1fc (    0x38) ConnectionMetrics.connectionEdgeID.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a234 (    0x20) ConnectionMetrics.connectionEdgeID.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a254 (     0x4) ConnectionMetrics.connectionEdgeID.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a258 (    0x30) ConnectionMetrics.connectionEdgeType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a288 (    0x38) ConnectionMetrics.connectionEdgeType.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a2c0 (    0x20) ConnectionMetrics.connectionEdgeType.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a2e0 (     0x4) ConnectionMetrics.connectionEdgeType.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a2e4 (     0xc) ConnectionMetrics.connectionFallbackReason.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a2f0 (    0x10) ConnectionMetrics.connectionFallbackReason.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a300 (    0x20) ConnectionMetrics.connectionFallbackReason.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a320 (     0x4) ConnectionMetrics.connectionFallbackReason.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a324 (     0xc) ConnectionMetrics.connectionDelay.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a330 (    0x10) ConnectionMetrics.connectionDelay.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a340 (    0x20) ConnectionMetrics.connectionDelay.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a360 (     0x4) ConnectionMetrics.connectionDelay.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a364 (     0xc) ConnectionMetrics.firstTxByteDelay.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a370 (    0x10) ConnectionMetrics.firstTxByteDelay.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a380 (    0x20) ConnectionMetrics.firstTxByteDelay.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a3a0 (     0x4) ConnectionMetrics.firstTxByteDelay.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a3a4 (    0x30) ConnectionMetrics.wifiChannelInfo.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a3d4 (    0x38) ConnectionMetrics.wifiChannelInfo.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a40c (    0x20) ConnectionMetrics.wifiChannelInfo.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a42c (     0x4) ConnectionMetrics.wifiChannelInfo.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a430 (    0x14) ConnectionMetrics.simSubscriptions.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a444 (    0x10) ConnectionMetrics.simSubscriptions.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a454 (    0x20) ConnectionMetrics.simSubscriptions.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a474 (     0x4) ConnectionMetrics.simSubscriptions.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a478 (     0xc) ConnectionMetrics.idsLastMessageDelay.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a484 (    0x10) ConnectionMetrics.idsLastMessageDelay.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a494 (    0x20) ConnectionMetrics.idsLastMessageDelay.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4b4 (     0x4) ConnectionMetrics.idsLastMessageDelay.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4b8 (     0xc) ConnectionMetrics.idsLastSocketDelay.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4c4 (    0x10) ConnectionMetrics.idsLastSocketDelay.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4d4 (    0x20) ConnectionMetrics.idsLastSocketDelay.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4f4 (     0x4) ConnectionMetrics.idsLastSocketDelay.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a4f8 (     0xc) ConnectionMetrics.idsLastSocketOpenError.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a504 (    0x10) ConnectionMetrics.idsLastSocketOpenError.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a514 (    0x20) ConnectionMetrics.idsLastSocketOpenError.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a534 (     0x4) ConnectionMetrics.idsLastSocketOpenError.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a538 (    0x18) specialized Array._makeUniqueAndReserveCapacityIfNotUnique() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a550 (    0x5c) specialized Array._makeUniqueAndReserveCapacityIfNotUnique() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a5ac (    0x18) specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a5c4 (    0x48) specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2a60c (   0x448) outlined consume of ConnectionMetrics? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2aa54 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb2aa58 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb2aa5c (    0x34) initializeBufferWithCopyOfBuffer for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2aa90 (   0x154) destroy for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2abe4 (   0x488) initializeWithCopy for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2b06c (   0xc00) assignWithCopy for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bc6c (    0x54) outlined destroy of ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bcc0 (    0x54) outlined destroy of ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bd14 (    0x54) outlined destroy of ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bd68 (    0x54) outlined destroy of ConnectionSnapshotReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bdbc (     0x8) __swift_memcpy809_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2bdc4 (   0x538) assignWithTake for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c2fc (    0x40) getEnumTagSinglePayload for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c33c (   0x118) storeEnumTagSinglePayload for ConnectionMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c454 (    0x10) type metadata accessor for ConnectionMetrics [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c464 (   0x44c) outlined copy of ConnectionMetrics? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8b0 (     0x8) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8b8 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8cc (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8e4 (     0xc) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8f0 (     0xc) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c8fc (    0x20) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c91c (    0x10) NoneDataDecompressor.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c92c (    0x24) type metadata accessor for NoneDataDecompressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2c950 (   0x208) ConnectionType.stringRawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2cb58 (    0x60) (null) [FUNC, FunctionStarts] 
                0x000000020fb2cbb8 (   0x950) ConnectionType.init(fromStringValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d508 (    0x14) ConnectionType.isWWAN() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d51c (    0x14) ConnectionType.isEdge() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d530 (     0x8) ConnectionType.canUseWifiDirectly() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d538 (   0x130) ConnectionType.init(rawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d668 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x000000020fb2d6a4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000020fb2d6c0 (    0x14) ConnectionType.rawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d6d4 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d6e0 (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d6e8 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d6f0 (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d6f8 (     0x8) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d700 (    0x28) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d728 (    0x14) ConnectionTypeWrapper.connectionType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d73c (    0x34) ConnectionTypeWrapper.__allocating_init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d770 (    0x54) ConnectionTypeWrapper.init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d7c4 (    0x24) type metadata accessor for ConnectionTypeWrapper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d7e8 (    0x28) @objc ConnectionTypeWrapper.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d810 (    0x1c) ConnectionTypeWrapper.connectionTypeRawValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d82c (    0x24) @objc ConnectionTypeWrapper.connectionTypeRawValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d850 (    0x3c) ConnectionTypeWrapper.connectionTypeStringRawValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d88c (    0x4c) @objc ConnectionTypeWrapper.connectionTypeStringRawValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d8d8 (    0x1c) ConnectionTypeWrapper.isWWAN() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d8f4 (    0x28) @objc ConnectionTypeWrapper.isWWAN() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d91c (    0x1c) ConnectionTypeWrapper.isEdge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d938 (    0x28) @objc ConnectionTypeWrapper.isEdge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d960 (    0x10) ConnectionTypeWrapper.canUseWiFiDirectly() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d970 (    0x28) @objc ConnectionTypeWrapper.canUseWiFiDirectly() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d998 (    0x34) ConnectionTypeWrapper.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d9cc (    0x30) ConnectionTypeWrapper.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2d9fc (    0x10) @objc ConnectionTypeWrapper.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2da0c (    0x34) ConnectionTypeWrapper.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2da40 (     0x4) base witness table accessor for Equatable in ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2da44 (    0x4c) lazy protocol witness table accessor for type ConnectionType and conformance ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2da90 (    0x88) getEnumTagSinglePayload for ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2db18 (    0xcc) storeEnumTagSinglePayload for ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dbe4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb2dbf8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb2dc0c (     0x8) getEnumTag for ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc14 (     0x4) destructiveProjectEnumData for ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc18 (     0x8) destructiveInjectEnumTag for ConnectionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc20 (    0x10) type metadata accessor for ConnectionType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc30 (    0x18) method lookup function for ConnectionTypeWrapper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc48 (    0x14) dispatch thunk of ConnectionTypeWrapper.__allocating_init(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc5c (    0x34) dispatch thunk of ConnectionTypeWrapper.connectionTypeRawValue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dc90 (    0x34) dispatch thunk of ConnectionTypeWrapper.connectionTypeStringRawValue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dcc4 (    0x34) dispatch thunk of ConnectionTypeWrapper.isWWAN() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dcf8 (    0x34) dispatch thunk of ConnectionTypeWrapper.isEdge() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dd2c (    0x34) dispatch thunk of ConnectionTypeWrapper.canUseWiFiDirectly() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dd60 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dd7c (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dd98 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ddb4 (     0xc) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ddc0 (    0x88) specialized Data.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2de48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb2de58 (    0x24) AceObject.internalAceId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2de7c (    0x2c) key path getter for AceObject.internalAceId : AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dea8 (     0xc) AceObject.internalAceId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2deb4 (    0x54) AceObject.internalAceId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2df08 (    0x18) AceObject.internalAceId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2df20 (    0x24) AceObject.internalRefId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2df44 (    0x2c) key path getter for AceObject.internalRefId : AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2df70 (    0x40) key path setter for AceObject.internalAceId : AceObject [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dfb0 (     0xc) AceObject.internalRefId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2dfbc (    0x70) AceObject.internalAceId.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e02c (    0x54) AceObject.internalRefId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e080 (    0x18) AceObject.internalRefId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e098 (    0x70) AceObject.internalAceId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e108 (    0xb0) AceObject.serializedAceData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e1b8 (    0xa0) @objc AceObject.serializedAceData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e258 (     0x4) AceObject.bufferingAllowedDuringActiveSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e25c (     0x8) @objc AceObject.bufferingAllowedDuringActiveSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e264 (     0x4) AceObject.isRetryable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e268 (     0x8) @objc AceObject.isRetryable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e270 (    0x24) AceObject.isRestartable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e294 (    0x3c) @objc AceObject.isRestartable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2d0 (     0x8) AceObject.isProvisional() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2d8 (     0x8) @objc AceObject.isProvisional() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2e0 (     0x4) AceObject.logDiagnostics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2e4 (     0x4) @objc AceObject.logDiagnostics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2e8 (     0xc) AceObject.requestId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2f4 (     0x8) @objc AceObject.requestId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e2fc (     0x4) AceObject.setSessionRequestId(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e300 (    0x48) @objc AceObject.setSessionRequestId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e348 (     0x4) AceObject.supportedByLocalSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e34c (     0x8) @objc AceObject.supportedByLocalSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e354 (     0x4) AceObject.supportedByRemoteLimitedSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e358 (     0x8) @objc AceObject.supportedByRemoteLimitedSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e360 (    0x24) protocol witness for SessionObject.internalAceId.getter in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e384 (    0x24) protocol witness for SessionObject.internalAceId.setter in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e3a8 (    0x54) protocol witness for SessionObject.internalAceId.modify in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e3fc (    0x18) protocol witness for SessionObject.internalAceId.modify in conformance AceObject [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e414 (    0x24) protocol witness for SessionObject.internalRefId.getter in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e438 (    0x24) protocol witness for SessionObject.internalRefId.setter in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e45c (    0x54) protocol witness for SessionObject.internalRefId.modify in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e4b0 (    0x18) protocol witness for SessionObject.internalRefId.modify in conformance AceObject [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e4c8 (    0x70) protocol witness for SessionObject.internalAceId.modify in conformance AceObject [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e538 (    0xb0) protocol witness for SessionObject.serializedAceData() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e5e8 (    0x24) protocol witness for SessionObject.bufferingAllowedDuringActiveSession() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e60c (    0x24) protocol witness for SessionObject.isRetryable() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e630 (    0x24) protocol witness for SessionObject.isRestartable() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e654 (    0x24) protocol witness for SessionObject.isProvisional() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e678 (    0x10) protocol witness for SessionObject.logDiagnostics() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e688 (    0x24) protocol witness for SessionObject.requestId() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e6ac (    0x5c) protocol witness for SessionObject.setSessionRequestId(_:) in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e708 (    0x24) protocol witness for SessionObject.supportedByLocalSession() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e72c (    0x24) protocol witness for SessionObject.supportedByRemoteLimitedSession() in conformance AceObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e750 (   0x1d0) specialized withUnsafeBytes<A, B>(of:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e920 (    0x20) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2e940 (   0x138) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ea78 (    0x4c) lazy protocol witness table accessor for type AceSerializationError and conformance AceSerializationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2eac4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb2eac8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb2eaf4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb2eaf8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb2eb24 (    0x64) outlined bridged method (pb) of @objc AceObject.aceId.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2eb88 (    0x10) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2eb98 (     0x8) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2eba0 (    0x10) NoneDataCompressor.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebb0 (    0x24) type metadata accessor for NoneDataCompressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebd4 (     0x4) NetworkManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebd8 (     0x4) @objc NetworkManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebdc (     0x4) NetworkManager.acquireWiFiAssertion(wifiAssertionType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebe0 (     0x4) NetworkManager.releaseWiFiAssertion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebe4 (     0x4) @objc NetworkManager.releaseWiFiAssertion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ebe8 (   0x39c) NWConnection.init(endpoint:configuration:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2ef84 (    0xa8) closure #1 in NWConnection.readyEstablishmentReport(queue:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f02c (    0x24) protocol witness for NetworkConnectionProtocol.stateUpdateHandler.setter in conformance NWConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f050 (    0x24) protocol witness for NetworkConnectionProtocol.viabilityUpdateHandler.setter in conformance NWConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f074 (    0x24) protocol witness for NetworkConnectionProtocol.betterPathUpdateHandler.setter in conformance NWConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f098 (    0x68) outlined init with copy of NWConnection.EstablishmentReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f100 (    0x54) outlined release of ConnectionEstablishmentReport? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f154 (   0x27c) ConnectionTCPInfoMetrics.init(tcpInfo:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb2f3d0 (  0x1520) static ConnectionTCPInfoMetrics.connectionTCPInfoMetrics(from:wasConnected:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb308f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb30900 (    0xa4) closure #1 in static ConnectionTCPInfoMetrics.connectionTCPInfoMetrics(from:wasConnected:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb309a4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x000000020fb309b0 (     0x8) partial apply for closure #1 in static ConnectionTCPInfoMetrics.connectionTCPInfoMetrics(from:wasConnected:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb309b8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x000000020fb309c4 (     0x8) partial apply for thunk for @callee_guaranteed (@unowned UnsafePointer<Int8>, @guaranteed OS_xpc_object) -> (@unowned Bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb309cc (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb309dc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb309e4 (    0x60) outlined destroy of NWPath? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30a44 (    0x68) outlined init with take of tcp_info? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30aac (     0xc) $So8tcp_infoV$tcpi_tfo_syn_data_acked$getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30ab8 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30ad4 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30af4 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30b04 (     0x8) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30b0c (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30b24 (    0x88) specialized Data.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30bac (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb30bbc (    0x18) @objc SpeechPacket.internalAceId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30bd4 (     0xc) SpeechPacket.internalAceId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30be0 (    0x18) @objc SpeechPacket.internalAceId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30bf8 (     0xc) SpeechPacket.internalAceId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30c04 (    0x2c) key path getter for SpeechPacket.internalAceId : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30c30 (    0x48) SpeechPacket.internalAceId.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30c78 (    0x18) @objc SpeechPacket.internalRefId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30c90 (    0x5c) @objc SpeechPacket.internalAceId.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30cec (     0xc) SpeechPacket.internalRefId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30cf8 (    0x40) SpeechPacket.internalAceId.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30d38 (    0x18) @objc SpeechPacket.internalRefId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30d50 (    0x84) @objc SpeechPacket.internalAceId.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30dd4 (     0xc) SpeechPacket.internalRefId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30de0 (    0x48) SpeechPacket.internalAceId.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30e28 (    0x2c) key path getter for SpeechPacket.internalRefId : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30e54 (    0x48) key path setter for SpeechPacket.internalAceId : SpeechPacket [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30e9c (    0x48) SpeechPacket.internalRefId.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30ee4 (    0x5c) @objc SpeechPacket.packets.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30f40 (    0x38) SpeechPacket.packets.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30f78 (    0x6c) @objc SpeechPacket.packets.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb30fe4 (    0x40) SpeechPacket.packets.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31024 (    0x2c) key path getter for SpeechPacket.packets : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31050 (    0x2c) key path setter for SpeechPacket.packets : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3107c (    0x48) SpeechPacket.packets.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb310c4 (    0x24) @objc SpeechPacket.packetNumber.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb310e8 (    0x34) SpeechPacket.packetNumber.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3111c (    0x28) @objc SpeechPacket.packetNumber.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31144 (    0x38) SpeechPacket.packetNumber.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3117c (    0x2c) key path getter for SpeechPacket.packetNumber : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb311a8 (    0x28) key path setter for SpeechPacket.packetNumber : SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb311d0 (    0x48) SpeechPacket.packetNumber.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31218 (     0x4) SpeechPacket.packetNumber.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3121c (    0x34) SpeechPacket.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31250 (    0x74) SpeechPacket.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb312c4 (    0x24) type metadata accessor for SpeechPacket [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb312e8 (    0x24) @objc SpeechPacket.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3130c (    0x74) SpeechPacket.__allocating_init(aceId:refId:packets:packetNumber:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31380 (   0x18c) SpeechPacket.init(aceId:refId:packets:packetNumber:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3150c (    0xb0) SpeechPacket.serializedAceData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb315bc (    0xa0) @objc SpeechPacket.serializedAceData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3165c (     0x8) SpeechPacket.bufferingAllowedDuringActiveSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31664 (     0x8) @objc SpeechPacket.bufferingAllowedDuringActiveSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3166c (     0x8) SpeechPacket.isRetryable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31674 (     0x8) @objc SpeechPacket.isRetryable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3167c (     0x4) SpeechPacket.isRestartable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31680 (     0x8) @objc SpeechPacket.isRestartable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31688 (     0x4) SpeechPacket.isProvisional() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3168c (     0x8) @objc SpeechPacket.isProvisional() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31694 (     0x4) SpeechPacket.logDiagnostics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31698 (     0x4) @objc SpeechPacket.logDiagnostics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3169c (     0xc) SpeechPacket.requestId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb316a8 (     0x8) @objc SpeechPacket.requestId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb316b0 (     0x4) SpeechPacket.setSessionRequestId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb316b4 (    0x48) @objc SpeechPacket.setSessionRequestId(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb316fc (     0x4) SpeechPacket.supportedByLocalSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31700 (     0x8) @objc SpeechPacket.supportedByLocalSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31708 (     0x4) SpeechPacket.supportedByRemoteLimitedSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3170c (     0x8) @objc SpeechPacket.supportedByRemoteLimitedSession() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31714 (    0x34) SpeechPacket.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31748 (    0x64) @objc SpeechPacket.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb317ac (    0x24) protocol witness for SessionObject.internalAceId.getter in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb317d0 (    0x24) protocol witness for SessionObject.internalAceId.setter in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb317f4 (    0x60) protocol witness for SessionObject.internalAceId.modify in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31854 (    0x24) protocol witness for SessionObject.internalRefId.getter in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31878 (    0x24) protocol witness for SessionObject.internalRefId.setter in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3189c (    0x60) protocol witness for SessionObject.internalRefId.modify in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb318fc (    0x24) protocol witness for SessionObject.serializedAceData() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31920 (     0x8) protocol witness for SessionObject.bufferingAllowedDuringActiveSession() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31928 (     0x8) protocol witness for SessionObject.isRetryable() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31930 (     0x8) protocol witness for SessionObject.isRestartable() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31938 (     0x8) protocol witness for SessionObject.isProvisional() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31940 (     0x4) protocol witness for SessionObject.logDiagnostics() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31944 (     0xc) protocol witness for SessionObject.requestId() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31950 (     0x4) protocol witness for SessionObject.setSessionRequestId(_:) in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31954 (     0x8) protocol witness for SessionObject.supportedByLocalSession() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3195c (     0x8) protocol witness for SessionObject.supportedByRemoteLimitedSession() in conformance SpeechPacket [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31964 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb31968 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb31994 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb31998 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb319c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb319c8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb319cc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb319d0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb319d4 (    0x18) method lookup function for SpeechPacket [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb319ec (    0x34) dispatch thunk of SpeechPacket.internalAceId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31a20 (    0x34) dispatch thunk of SpeechPacket.internalAceId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31a54 (    0x34) dispatch thunk of SpeechPacket.internalAceId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31a88 (    0x34) dispatch thunk of SpeechPacket.internalRefId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31abc (    0x34) dispatch thunk of SpeechPacket.internalRefId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31af0 (    0x34) dispatch thunk of SpeechPacket.internalRefId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31b24 (    0x34) dispatch thunk of SpeechPacket.packets.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31b58 (    0x34) dispatch thunk of SpeechPacket.packets.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31b8c (    0x34) dispatch thunk of SpeechPacket.packets.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31bc0 (    0x34) dispatch thunk of SpeechPacket.packetNumber.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31bf4 (    0x34) dispatch thunk of SpeechPacket.packetNumber.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31c28 (    0x34) dispatch thunk of SpeechPacket.packetNumber.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31c5c (    0x14) dispatch thunk of SpeechPacket.__allocating_init(aceId:refId:packets:packetNumber:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31c70 (    0x48) dispatch thunk of SpeechPacket.serializedAceData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31cb8 (    0x34) dispatch thunk of SpeechPacket.bufferingAllowedDuringActiveSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31cec (    0x34) dispatch thunk of SpeechPacket.isRetryable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31d20 (    0x34) dispatch thunk of SpeechPacket.isRestartable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31d54 (    0x34) dispatch thunk of SpeechPacket.isProvisional() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31d88 (    0x3c) dispatch thunk of SpeechPacket.logDiagnostics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31dc4 (    0x3c) dispatch thunk of SpeechPacket.requestId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31e00 (    0x3c) dispatch thunk of SpeechPacket.setSessionRequestId(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31e3c (    0x3c) dispatch thunk of SpeechPacket.supportedByLocalSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31e78 (    0x3c) dispatch thunk of SpeechPacket.supportedByRemoteLimitedSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31eb4 (    0x40) type metadata accessor for NSData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb31ef4 (   0x1d0) specialized withUnsafeBytes<A, B>(of:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb320c4 (    0x20) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb320e4 (   0x138) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3221c (     0x4) SpeechPacket.internalRefId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32220 (     0x4) SpeechPacket.packets.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32224 (     0x4) SpeechPacket.internalAceId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32228 (     0x4) protocol witness for SessionObject.internalAceId.modify in conformance SpeechPacket [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3222c (     0x4) protocol witness for SessionObject.internalRefId.modify in conformance SpeechPacket [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32230 (    0x24) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32254 (    0x24) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb32278 (    0x24) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3229c (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb322b4 (     0x8) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb322bc (  0x1428) NWParameters.init(configuration:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb336e4 (    0x60) outlined destroy of URL? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33744 (    0x40) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33784 (    0x50) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb337d4 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb337f4 (    0x1c) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33810 (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33828 (    0x2c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33854 (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3386c (    0x24) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33890 (    0x1c) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb338ac (    0x1c) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb338c8 (    0x14) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb338dc (    0x18) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb338f4 (    0x18) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3390c (    0x20) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3392c (    0x20) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3394c (    0x20) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3396c (   0x328) ConnectionQualityReport.symptomsBasedNetworkQuality.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33c94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb33ca4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb33cb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb33cc4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb33cd4 (    0x60) ConnectionQualityReport.Quality.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33d34 (    0x50) ConnectionQualityReport.Quality.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33d84 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33d90 (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33d98 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33da0 (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33da8 (    0x30) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33dd8 (    0x2c) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb33e04 (   0x350) ConnectionQualityReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34154 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb34164 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb34174 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb34184 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb34194 (     0x8) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionQualityReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3419c (     0xc) __swift_memcpy4_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb341a8 (    0x4c) getEnumTagSinglePayload for ConnectionQualityReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb341f4 (    0x40) storeEnumTagSinglePayload for ConnectionQualityReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34234 (    0x10) type metadata accessor for ConnectionQualityReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34244 (    0x88) getEnumTagSinglePayload for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb342cc (    0xcc) storeEnumTagSinglePayload for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34398 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb343ac (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb343c0 (     0x8) getEnumTag for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb343c8 (     0x4) destructiveProjectEnumData for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb343cc (     0x8) destructiveInjectEnumTag for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb343d4 (    0x10) type metadata accessor for ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb343e4 (     0x4) base witness table accessor for Equatable in ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb343e8 (    0x4c) lazy protocol witness table accessor for type ConnectionQualityReport.Quality and conformance ConnectionQualityReport.Quality [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34434 (    0x20) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34454 (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34464 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34474 (    0x14) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34488 (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34498 (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb344b4 (    0x10) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb344c4 (    0x10) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb344d4 (    0x18) NetworkWiFiManager.queueGroup.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb344ec (    0x30) one-time initialization function for shared [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3451c (    0x5c) static NetworkWiFiManager.shared.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34578 (    0x28) @objc static NetworkWiFiManager.shared.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb345a0 (   0x29c) NetworkWiFiManager.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3483c (    0x24) @objc NetworkWiFiManager.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34860 (    0x50) NetworkWiFiManager.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb348b0 (    0x24) type metadata accessor for NetworkWiFiManager [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb348d4 (    0x28) @objc NetworkWiFiManager.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb348fc (    0x6c) @objc NetworkWiFiManager.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34968 (    0xf4) NetworkWiFiManager.getWiFiRecordRepresentation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34a5c (    0x4c) @objc NetworkWiFiManager.getWiFiRecordRepresentation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34aa8 (   0x3e8) NetworkWiFiManager.getWiFiRecord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34e90 (    0x60) outlined destroy of WiFiRecord? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34ef0 (    0x64) outlined init with take of WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34f54 (    0x5c) outlined destroy of WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb34fb0 (   0x158) NetworkWiFiManager.isWiFiEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35108 (    0x3c) @objc NetworkWiFiManager.isWiFiEnabled() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35144 (     0x4) NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35148 (     0x4) @objc NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3514c (     0x4) NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionType:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35150 (     0x4) NetworkWiFiManager.releaseWiFiAssertion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35154 (     0x4) @objc NetworkWiFiManager.releaseWiFiAssertion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35158 (    0x30) thunk for @escaping @callee_guaranteed () -> (@unowned Int32) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35188 (    0x44) closure #1 in serialize<A>(_:at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb351cc (    0x2c) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:format:privacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb351f8 (    0x28) implicit closure #1 in OSLogInterpolation.appendInterpolation(_:format:privacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35220 (    0x68) outlined bridged method (pb) of @objc CWFInterface.ssid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35288 (    0x68) outlined init with copy of WiFiRecord? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb352f0 (    0x18) method lookup function for NetworkWiFiManager [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35308 (    0x34) dispatch thunk of NetworkWiFiManager.getWiFiRecordRepresentation() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3533c (    0x34) dispatch thunk of NetworkWiFiManager.getWiFiRecord() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35370 (    0x34) dispatch thunk of NetworkWiFiManager.isWiFiEnabled() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb353a4 (    0x34) dispatch thunk of NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb353d8 (    0x34) dispatch thunk of NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3540c (    0x3c) dispatch thunk of NetworkWiFiManager.releaseWiFiAssertion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35448 (    0x10) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35458 (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35468 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35480 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35498 (   0x230) static AceSerialization.aceDataForObject(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb356c8 (   0x608) static AceSerialization.aceDataForSpeechPacket(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35cd0 (    0x10) one-time initialization function for isLittleEndian [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35ce0 (    0x84) one-time initialization function for htons [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35d64 (    0x1c) @nonobjc _OSSwapInt16(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35d80 (     0x4) closure #1 in variable initialization expression of static Endian.htons [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35d84 (    0x84) one-time initialization function for htonl [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35e08 (     0x4) @nonobjc _OSSwapInt32(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35e0c (     0x4) closure #1 in variable initialization expression of static Endian.htonl [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35e10 (    0x20) AceDataType.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35e30 (   0x1b8) static AceDataHeader.createHeaderData(forType:lengthOrIdentifier:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35fe8 (     0x8) _OSSwapInt16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35ff0 (     0x8) _OSSwapInt32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb35ff8 (    0x68) outlined bridged method (pb) of @objc AceObject._serializedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36060 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3607c (    0x2c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb360a8 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb360c4 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb360dc (    0x14) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb360f0 (    0x14) dispatch thunk of BackgroundConnectionProtocol.delegate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36104 (    0x14) dispatch thunk of BackgroundConnectionProtocol.delegate.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36118 (    0x14) dispatch thunk of BackgroundConnectionProtocol.delegate.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3612c (    0x14) dispatch thunk of BackgroundConnectionProtocol.connectionConfiguration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36140 (    0x28) dispatch thunk of BackgroundConnectionProtocol.start() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36168 (    0x14) dispatch thunk of BackgroundConnectionProtocol.setSendPings(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3617c (    0x14) dispatch thunk of BackgroundConnectionProtocol.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36190 (    0x14) dispatch thunk of BackgroundConnectionProtocol.cancel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb361a4 (    0x14) dispatch thunk of BackgroundConnectionProtocol.updateActiveBackgroundConnectionWithSecondary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb361b8 (    0x14) dispatch thunk of BackgroundConnectionDelegate.willStartConnection(_:type:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb361cc (    0x14) dispatch thunk of BackgroundConnectionDelegate.willStartConnection(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb361e0 (    0x14) dispatch thunk of BackgroundConnectionDelegate.didOpenConnectionType(_:type:routeId:delay:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb361f4 (    0x14) dispatch thunk of BackgroundConnectionDelegate.didReceiveObject(_:object:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36208 (    0x14) dispatch thunk of BackgroundConnectionDelegate.didReceiveAceObject(_:object:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3621c (    0x14) dispatch thunk of BackgroundConnectionDelegate.didClose(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36230 (    0x14) dispatch thunk of BackgroundConnectionDelegate.didEncounterError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36244 (    0x14) dispatch thunk of BackgroundConnectionDelegate.didEncounterIntermediateError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36258 (   0x324) BackgroundConnectionProtocol.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3657c (   0x650) static BackgroundConnectionProtocol.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36bcc (   0x3ec) ConnectionTCPInfoMetrics.snConnectionTCPInfoMetrics.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb36fb8 (   0x180) @nonobjc SNConnectionTCPInfoMetrics.init(interfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:packetsReceived:bytesSent:bytesReceived:bytesRetransmitted:bytesUnacked:duplicateBytesReceived:outOfOrderBytesReceived:sendBufferBytes:sendBandwidth:synRetransmits:tfoSynDataAcked:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37138 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37150 (    0x28) QueueMonitorManager.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37178 (    0x30) QueueMonitorManager.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb371a8 (    0x24) type metadata accessor for QueueMonitorManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb371cc (    0x28) QueueObserver.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb371f4 (    0x30) QueueObserver.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37224 (    0x24) type metadata accessor for QueueObserver [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37248 (    0x90) QueueMonitor.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb372d8 (    0x54) QueueMonitor.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3732c (     0x8) ObjC metadata update function for QueueMonitor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37334 (    0x48) type metadata accessor for QueueMonitor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3737c (    0xcc) type metadata completion function for QueueMonitor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37448 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3747c (    0x5c) destroy for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb374d8 (   0x180) initializeWithCopy for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37658 (   0x1e0) assignWithCopy for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37838 (     0x8) __swift_memcpy297_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37840 (   0x180) assignWithTake for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb379c0 (    0x40) getEnumTagSinglePayload for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37a00 (    0x90) storeEnumTagSinglePayload for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37a90 (    0x10) type metadata accessor for ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37aa0 (    0xe4) ConnectionNetworkReport.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37b84 (    0x9c) ConnectionNetworkReport.firstByteTimeInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37c20 (    0x64) ConnectionNetworkReport.openTimeInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb37c84 (   0xa58) ConnectionNetworkReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb386dc (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionNetworkReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38718 (    0x68) outlined init with take of Double? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38780 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3879c (    0x28) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb387c4 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb387e0 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb387f8 (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38808 (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38814 (    0x24) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38838 (    0x1c) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38854 (     0xc) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38860 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38878 (     0xc) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38884 (    0x10) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38894 (    0x1c) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb388b0 (    0x10) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb388c0 (    0x18) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb388d8 (     0xc) __swift_memcpy16_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb388e4 (    0x20) getEnumTagSinglePayload for ConnectionPingInfoReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38904 (    0x28) storeEnumTagSinglePayload for ConnectionPingInfoReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3892c (    0x10) type metadata accessor for ConnectionPingInfoReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3893c (   0x20c) ConnectionPingInfoReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38b48 (     0xc) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionPingInfoReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb38b54 (  0x13ac) ConnectionSnapshotReport.init(connection:wasConnected:sequenceNumber:provider:snapshotTriggerReason:connectionMethod:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb39f00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb39f10 (    0x10) outlined consume of (@escaping @callee_guaranteed (@unowned UnsafePointer<Int8>, @guaranteed OS_xpc_object) -> (@unowned Bool))? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb39f20 (    0x2c) thunk for @callee_guaranteed (@unowned UnsafePointer<Int8>, @guaranteed OS_xpc_object) -> (@unowned Bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb39f4c (    0x58) thunk for @escaping @callee_guaranteed (@unowned UnsafePointer<Int8>, @guaranteed OS_xpc_object) -> (@unowned Bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb39fa4 (    0x94) closure #1 in ConnectionSnapshotReport.init(connection:wasConnected:sequenceNumber:provider:snapshotTriggerReason:connectionMethod:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a038 (     0xc) (null) [FUNC, FunctionStarts] 
                0x000000020fb3a044 (     0x8) partial apply for closure #1 in ConnectionSnapshotReport.init(connection:wasConnected:sequenceNumber:provider:snapshotTriggerReason:connectionMethod:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a04c (     0xc) (null) [FUNC, FunctionStarts] 
                0x000000020fb3a058 (    0x2c) partial apply for thunk for @callee_guaranteed (@unowned UnsafePointer<Int8>, @guaranteed OS_xpc_object) -> (@unowned Bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a084 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a094 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a09c (    0x70) specialized Dictionary._Variant.setValue(_:forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a10c (    0x88) specialized Dictionary._Variant.setValue(_:forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a194 (    0x90) specialized Dictionary._Variant.setValue(_:forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a224 (   0x138) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a35c (   0x134) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a490 (   0x11c) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a5ac (   0x140) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a6ec (   0x120) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a80c (    0x80) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a88c (    0x50) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a8dc (    0x4c) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a928 (    0x50) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a978 (    0x4c) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3a9c4 (    0x5c) outlined init with copy of AnyHashable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa20 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa3c (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa54 (    0x14) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa68 (     0x8) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa70 (     0xc) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa7c (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aa88 (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aaa0 (    0x14) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aab4 (     0xc) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aac0 (     0xc) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aacc (     0xc) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aad8 (     0xc) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3aae4 (    0xfc) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3abe0 (    0x10) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3abf0 (    0x10) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ac00 (    0x10) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ac10 (    0x10) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ac20 (    0x10) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ac30 (    0x24) specialized == infix<A>(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ac54 (   0x22c) ConnectionPolicyRoute.hash(into:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ae80 (   0x3f0) static ConnectionPolicyRoute.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b270 (    0x44) ConnectionPolicyRoute.hashValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b2b4 (     0x4) protocol witness for Hashable.hashValue.getter in conformance ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b2b8 (     0x4) protocol witness for Hashable.hash(into:) in conformance ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b2bc (    0x40) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b2fc (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b300 (     0x4) base witness table accessor for Equatable in ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b304 (    0x4c) lazy protocol witness table accessor for type ConnectionPolicyRoute and conformance ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b350 (    0x58) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b3a8 (   0x144) static WiFiRecord.channelInfo(channel:frequencyBand:channelInMHz:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b4ec (   0x108) static WiFiPhyModeApple80211.wifiPhyMode(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b5f4 (   0x14c) static WiFiRecordRepresentation.wiFiRecordRepresentation(from:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b740 (    0x18) WiFiAssertionType.init(rawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b758 (     0xc) WiFiAssertionType.rawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b764 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b770 (     0x8) protocol witness for Hashable.hashValue.getter in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b778 (     0x8) protocol witness for Hashable.hash(into:) in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b780 (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b788 (     0x8) protocol witness for RawRepresentable.init(rawValue:) in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b790 (    0x28) protocol witness for RawRepresentable.rawValue.getter in conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b7b8 (     0x8) WiFiRecord.rssi.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b7c0 (     0x8) WiFiRecord.snr.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b7c8 (     0x8) WiFiRecord.cca.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b7d0 (    0x2c) WiFiRecord.channelInfo.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b7fc (    0x2c) WiFiRecord.phyMode.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b828 (     0x8) WiFiRecord.isCaptive.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b830 (    0x6c) WiFiRecord.timestamp.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b89c (    0x20) type metadata accessor for WiFiRecord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3b8bc (   0x3d0) WiFiRecord.debugDescription.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bc8c (    0x60) outlined destroy of Locale? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bcec (     0x4) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bcf0 (    0x24) @objc WiFiRecordRepresentation.rssi.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd14 (     0xc) WiFiRecordRepresentation.rssi.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd20 (    0x24) @objc WiFiRecordRepresentation.snr.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd44 (     0xc) WiFiRecordRepresentation.snr.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd50 (    0x24) @objc WiFiRecordRepresentation.cca.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd74 (     0xc) WiFiRecordRepresentation.cca.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd80 (    0x18) @objc WiFiRecordRepresentation.channelInfo.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bd98 (     0xc) WiFiRecordRepresentation.channelInfo.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bda4 (    0x18) @objc WiFiRecordRepresentation.phyMode.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bdbc (    0x50) @objc WiFiRecordRepresentation.channelInfo.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3be0c (     0xc) WiFiRecordRepresentation.phyMode.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3be18 (    0x34) WiFiRecordRepresentation.channelInfo.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3be4c (    0x28) @objc WiFiRecordRepresentation.isCaptive.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3be74 (    0x10) WiFiRecordRepresentation.isCaptive.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3be84 (    0xe0) @objc WiFiRecordRepresentation.timestamp.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bf64 (    0x68) WiFiRecordRepresentation.timestamp.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3bfcc (    0x9c) WiFiRecordRepresentation.__allocating_init(rssi:snr:cca:channelInfo:phyMode:isCaptive:timestamp:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c068 (   0x15c) WiFiRecordRepresentation.init(rssi:snr:cca:channelInfo:phyMode:isCaptive:timestamp:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c1c4 (    0x20) type metadata accessor for WiFiRecordRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c1e4 (    0x34) type metadata accessor for WiFiRecord [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c218 (   0x100) @objc WiFiRecordRepresentation.init(rssi:snr:cca:channelInfo:phyMode:isCaptive:timestamp:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c318 (    0x34) WiFiRecordRepresentation.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c34c (    0x30) WiFiRecordRepresentation.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c37c (    0x10) @objc WiFiRecordRepresentation.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c38c (    0x38) WiFiRecordRepresentation.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c3c4 (     0x4) base witness table accessor for Equatable in WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c3c8 (    0x4c) lazy protocol witness table accessor for type WiFiAssertionType and conformance WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c414 (    0x88) getEnumTagSinglePayload for WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c49c (    0xcc) storeEnumTagSinglePayload for WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c568 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb3c57c (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb3c590 (     0x8) getEnumTag for WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c598 (     0x4) destructiveProjectEnumData for WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c59c (     0x8) destructiveInjectEnumTag for WiFiAssertionType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c5a4 (    0x10) type metadata accessor for WiFiAssertionType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c5b4 (   0x108) initializeBufferWithCopyOfBuffer for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c6bc (    0x80) destroy for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c73c (    0xb8) initializeWithCopy for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c7f4 (    0xdc) assignWithCopy for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c8d0 (    0x9c) initializeWithTake for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3c96c (    0xac) assignWithTake for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ca18 (    0x14) getEnumTagSinglePayload for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ca2c (    0x88) (null) [FUNC, FunctionStarts] 
                0x000000020fb3cab4 (    0x14) storeEnumTagSinglePayload for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cac8 (    0x80) (null) [FUNC, FunctionStarts] 
                0x000000020fb3cb48 (    0xb4) type metadata completion function for WiFiRecord [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cbfc (    0x90) @objc WiFiRecordRepresentation.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cc8c (     0x8) ObjC metadata update function for WiFiRecordRepresentation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cc94 (    0xb8) type metadata completion function for WiFiRecordRepresentation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cd4c (    0x18) method lookup function for WiFiRecordRepresentation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cd64 (    0x1c) dispatch thunk of WiFiRecordRepresentation.__allocating_init(rssi:snr:cca:channelInfo:phyMode:isCaptive:timestamp:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cd80 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cd9c (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cdac (     0xc) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cdb8 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cdc8 (    0x1c) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cde4 (     0x8) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cdec (    0x14) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ce00 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ce34 (    0x44) destroy for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ce78 (    0x58) initializeWithCopy for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ced0 (    0x88) assignWithCopy for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cf58 (    0x14) __swift_memcpy40_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cf6c (    0x58) assignWithTake for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3cfc4 (    0x40) getEnumTagSinglePayload for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d004 (    0x48) storeEnumTagSinglePayload for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d04c (    0x10) type metadata accessor for ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d05c (   0x178) ConnectionHTTPHeaderReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d1d4 (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionHTTPHeaderReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d210 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d244 (    0x60) destroy for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d2a4 (   0x1b4) initializeWithCopy for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d458 (   0x368) assignWithCopy for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d7c0 (    0x54) outlined destroy of ConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d814 (     0x8) __swift_memcpy289_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d81c (   0x1d0) assignWithTake for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3d9ec (    0x40) getEnumTagSinglePayload for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3da2c (    0x90) storeEnumTagSinglePayload for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3dabc (    0x10) type metadata accessor for ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3dacc (   0x400) ConnectionInterfaceReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3decc (     0x4) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionInterfaceReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ded0 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3deec (    0x5c) thunk for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3df48 (    0x3c) specialized Set.isEmpty.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3df84 (     0x4) thunk for @escaping @callee_unowned @convention(block) () -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3df88 (   0x100) specialized Collection.first.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e088 (   0x2e4) specialized static BackgroundConnectionProtocol.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e36c (    0x34) @objc Connection.delegate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e3a0 (    0x40) Connection.delegate.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e3e0 (    0x54) @objc Connection.delegate.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e434 (    0x54) Connection.delegate.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e488 (    0x2c) key path getter for Connection.delegate : Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e4b4 (    0x2c) key path setter for Connection.delegate : Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e4e0 (    0x84) Connection.delegate.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e564 (     0x4) Connection.delegate.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e568 (   0x288) Connection.connectionConfiguration.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e7f0 (    0x10) Connection.connectionQueue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e800 (    0x18) Connection.activeBackgroundConnection.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e818 (    0x80) Connection.activeRoute.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3e898 (   0x194) Connection.__allocating_init(connectionConfiguration:connectionQueue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ea2c (    0x44) Connection.__allocating_init(connectionInfo:connectionQueue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ea70 (   0x2d4) Connection.init(connectionInfo:connectionQueue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ed44 (    0x50) @objc Connection.init(connectionInfo:connectionQueue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3ed94 (   0x2ac) Connection.init(connectionInfo:connectionQueue:networkManager:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3f040 (    0x60) @objc Connection.init(connectionInfo:connectionQueue:networkManager:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3f0a0 (    0x54) Connection.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3f0f4 (    0x28) @objc Connection.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3f11c (   0x250) @objc Connection.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb3f36c (  0x1438) Connection.start() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb407a4 (    0x84) @objc Connection.start() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40828 (   0x274) Connection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40a9c (    0xc8) closure #1 in Connection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40b64 (    0xdc) closure #1 in closure #1 in Connection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40c40 (    0xb8) @objc Connection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40cf8 (    0xa4) Connection.setSendPings(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40d9c (    0x48) closure #1 in Connection.setSendPings(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40de4 (    0x50) @objc Connection.setSendPings(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb40e34 (   0x528) specialized Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4135c (   0x3b8) Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41714 (    0x74) closure #1 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41788 (    0x84) @objc Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4180c (   0x340) Connection.getConnectionMetrics(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41b4c (    0xc0) closure #1 in Connection.getConnectionMetrics(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41c0c (    0x88) Connection.getSNConnectionMetrics(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41c94 (   0x334) closure #1 in Connection.getSNConnectionMetrics(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb41fc8 (    0x9c) @objc Connection.getSNConnectionMetrics(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb42064 (   0x298) closure #1 in Connection.willStartConnection(_:type:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb422fc (   0x8ac) closure #1 in Connection.didOpenConnectionType(_:type:routeId:delay:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb42ba8 (   0x39c) closure #1 in Connection.didReceiveObject(_:object:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb42f44 (    0xb8) closure #1 in Connection.didClose(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb42ffc (    0x70) closure #1 in closure #1 in Connection.didClose(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4306c (   0x464) closure #2 in closure #1 in Connection.didClose(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb434d0 (   0x100) closure #1 in Connection.didEncounterError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb435d0 (    0x98) closure #1 in closure #1 in Connection.didEncounterError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb43668 (   0x630) closure #2 in closure #1 in Connection.didEncounterError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb43c98 (   0xce8) Connection.scheduleBackgroundConnection(_:after:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb44980 (   0x870) closure #1 in Connection.scheduleBackgroundConnection(_:after:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb451f0 (   0x530) closure #1 in closure #1 in Connection.scheduleBackgroundConnection(_:after:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb45720 (   0x1fc) Connection.waitForActiveConnectionToExecute(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4591c (   0x34c) Connection.accessPotentiallyActiveConnections(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb45c68 (    0xb8) Connection.activeOrAnyPendingConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb45d20 (   0x4fc) Connection.cancelSynchronously(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4621c (   0x474) specialized Connection.handleCloseAndErrorEventsFromBackgroundConnection(_:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46690 (   0x4cc) specialized Connection.handleCloseAndErrorEventsFromBackgroundConnection(_:completion:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46b5c (   0x178) specialized Set.contains(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46cd4 (   0x140) specialized Set.contains(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e14 (    0x34) Connection.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e48 (    0x30) Connection.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e78 (    0x10) @objc Connection.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e88 (     0x4) protocol witness for ConnectionProtocol.connectionConfiguration.getter in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e8c (     0x4) protocol witness for ConnectionProtocol.delegate.getter in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e90 (     0x4) protocol witness for ConnectionProtocol.delegate.setter in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46e94 (    0x84) protocol witness for ConnectionProtocol.delegate.modify in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46f18 (     0x4) protocol witness for ConnectionProtocol.delegate.modify in conformance Connection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46f1c (    0x80) Connection.delegate.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46f9c (    0x18) protocol witness for ConnectionProtocol.start() in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46fb4 (     0x4) protocol witness for ConnectionProtocol.sendData(_:with:) in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46fb8 (     0x4) protocol witness for ConnectionProtocol.setSendPings(_:) in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46fbc (     0x4) protocol witness for ConnectionProtocol.cancelSynchronously(_:isOnConnectionQueue:with:) in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46fc0 (     0x4) protocol witness for ConnectionProtocol.getConnectionMetrics(_:with:) in conformance Connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb46fc4 (    0x44) specialized Sequence<>.max() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47008 (    0x24) type metadata accessor for Connection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4702c (    0x4c) lazy protocol witness table accessor for type ConnectionConfigurationError and conformance ConnectionConfigurationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47078 (    0xc0) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47138 (    0xc0) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb471f8 (    0xbc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb472b4 (    0xd4) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47388 (    0xc0) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47448 (    0xbc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47504 (    0xd4) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb475d8 (    0xc0) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47698 (    0xbc) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47754 (    0x60) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb477b4 (    0x60) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47814 (    0x64) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47878 (    0x64) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb478dc (    0x58) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47934 (    0x64) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47998 (    0x64) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb479fc (    0x60) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47a5c (    0x64) specialized _ArrayBuffer._copyContents(subRange:initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47ac0 (    0x20) specialized UnsafeMutablePointer.moveInitialize(from:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47ae0 (    0x30) specialized UnsafeMutablePointer.moveInitialize(from:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47b10 (    0x20) specialized UnsafeMutablePointer.moveInitialize(from:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47b30 (    0x20) specialized UnsafeMutablePointer.moveInitialize(from:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47b50 (    0x30) thunk for @escaping @callee_guaranteed () -> (@unowned Int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47b80 (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb47bb0 (    0x48) (null) [FUNC, FunctionStarts] 
                0x000000020fb47bf8 (    0x10) partial apply for closure #1 in Connection.sendData(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c08 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c18 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c20 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb47c58 (     0xc) partial apply for closure #1 in Connection.setSendPings(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c64 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47c68 (     0x4) partial apply for closure #2 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c6c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47c70 (     0x8) partial apply for thunk for @callee_guaranteed () -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c78 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47c7c (     0x4) partial apply for closure #1 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c80 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47c84 (     0x4) partial apply for closure #2 in Connection.getConnectionMetrics(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47c88 (    0x20) partial apply for closure #1 in Connection.getConnectionMetrics(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47ca8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47cac (     0x4) partial apply for closure #1 in Connection.getConnectionMetrics(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47cb0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47cb4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb47cec (     0x8) partial apply for closure #1 in Connection.getSNConnectionMetrics(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47cf4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47cf8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb47cfc (    0x18) method lookup function for Connection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47d14 (    0x34) dispatch thunk of Connection.delegate.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47d48 (    0x34) dispatch thunk of Connection.delegate.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47d7c (    0x34) dispatch thunk of Connection.delegate.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47db0 (    0x14) dispatch thunk of Connection.__allocating_init(connectionInfo:connectionQueue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47dc4 (    0x50) dispatch thunk of Connection.start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47e14 (    0x3c) dispatch thunk of Connection.sendData(_:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47e50 (    0x3c) dispatch thunk of Connection.setSendPings(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47e8c (    0x3c) dispatch thunk of Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47ec8 (    0x3c) dispatch thunk of Connection.getConnectionMetrics(_:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47f04 (    0x3c) dispatch thunk of Connection.getSNConnectionMetrics(_:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47f40 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb47f80 (     0x8) partial apply for closure #1 in closure #1 in Connection.didEncounterError(_:error:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47f88 (    0x64) specialized UnsafeMutablePointer.assign(repeating:count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb47fec (   0x260) specialized Set._Variant.insert(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4824c (   0x120) specialized Set._Variant.insert(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4836c (   0x2b0) specialized Set._Variant.insert(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4861c (   0x178) specialized Set._Variant.insert(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb48794 (   0x200) specialized _NativeSet.init(_:capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb48994 (   0x340) specialized _NativeSet.resize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb48cd4 (   0x294) specialized _NativeSet.resize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb48f68 (   0x2b0) specialized _NativeSet.resize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb49218 (   0x2c0) specialized _NativeSet.resize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb494d8 (    0xa4) specialized _NativeSet._unsafeInsertNew(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4957c (   0x200) specialized _NativeSet.insertNew(_:at:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4977c (   0x150) specialized _NativeSet.insertNew(_:at:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb498cc (   0x1b8) specialized _NativeSet.insertNew(_:at:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb49a84 (   0x18c) specialized _NativeSet.insertNew(_:at:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb49c10 (   0x240) specialized _NativeSet.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb49e50 (   0x174) specialized _NativeSet.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb49fc4 (   0x188) specialized _NativeSet.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4a14c (   0x1b4) specialized _NativeSet.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4a300 (   0x338) specialized _NativeSet.copyAndResize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4a638 (   0x250) specialized _NativeSet.copyAndResize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4a888 (   0x278) specialized _NativeSet.copyAndResize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ab00 (   0x284) specialized _NativeSet.copyAndResize(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ad84 (   0x244) specialized Set._Variant.remove(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4afc8 (   0x1e4) specialized Set._Variant.remove(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b1ac (   0x160) specialized Set._Variant.remove(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b30c (   0x1a4) specialized Set._Variant._migrateToNative(_:removing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b4b0 (   0x298) specialized _NativeSet._delete(at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b748 (   0x1cc) specialized _NativeSet._delete(at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b914 (    0x6c) outlined retain of ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b980 (    0x6c) outlined release of ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b9ec (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4b9f0 (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb4ba20 (     0x8) partial apply for closure #1 in closure #1 in Connection.didClose(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ba28 (   0x1cc) specialized _NativeSet._delete(at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bbf4 (    0x54) specialized Set.endIndex.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bc48 (   0x260) specialized Set.subscript.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bea8 (    0x80) specialized _NativeSet.startIndex.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bf28 (    0x34) specialized static Set.Index.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bf5c (     0xc) outlined consume of Set<A>.Index._Variant<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bf68 (    0x48) lazy protocol witness table accessor for type NetworkConnectionError and conformance NetworkConnectionError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bfb0 (    0x10) outlined consume of Set<A>.Iterator._Variant<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4bfc0 (    0x30) (null) [FUNC, FunctionStarts] 
                0x000000020fb4bff0 (    0x14) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned SNConnectionMetrics?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c004 (     0x8) partial apply for thunk for @escaping @callee_unowned @convention(block) () -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c00c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c010 (    0x40) objectdestroy.9Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c050 (     0x4) closure #2 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c054 (    0x2c) partial apply for closure #2 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c080 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c084 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c088 (    0x40) objectdestroy.19Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c0c8 (     0x4) closure #1 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:)partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c0cc (     0xc) partial apply for closure #1 in Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c0d8 (     0x8) partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c0e0 (    0x28) outlined destroy of weak ConnectionDelegate? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c108 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c148 (     0xc) partial apply for closure #1 in closure #1 in Connection.sendData(_:with:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c154 (    0x68) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c1bc (    0x14) partial apply for closure #1 in Connection.scheduleBackgroundConnection(_:after:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c1d0 (    0x70) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c240 (    0x10) partial apply for closure #1 in closure #1 in Connection.scheduleBackgroundConnection(_:after:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c250 (     0x4) block_copy_helper.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c254 (     0x4) block_copy_helper.21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c258 (     0x4) block_copy_helper.27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c25c (     0x4) block_copy_helper.37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c260 (     0x4) block_copy_helper.117 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c264 (     0x4) block_copy_helper.125 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c268 (     0x4) block_copy_helper.131 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c26c (     0x4) block_copy_helper.141 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c270 (     0x4) block_copy_helper.147 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c274 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c278 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb4c27c (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c280 (     0x4) thunk for @callee_guaranteed () -> ()partial apply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c284 (     0x4) block_destroy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c288 (     0x4) block_destroy_helper.22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c28c (     0x4) block_destroy_helper.28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c290 (     0x4) block_destroy_helper.38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c294 (     0x4) block_destroy_helper.118 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c298 (     0x4) block_destroy_helper.126 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c29c (     0x4) block_destroy_helper.132 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2a0 (     0x4) block_destroy_helper.142 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2a4 (     0x4) block_destroy_helper.148 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2a8 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2c4 (    0x10) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2d4 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2e4 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c2fc (    0x40) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c33c (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c358 (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c370 (    0x10) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c380 (    0x10) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c390 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c3a8 (    0x34) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c3dc (    0x10) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c3ec (    0x10) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c3fc (    0x28) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c424 (    0x18) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c43c (     0xc) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c448 (    0x18) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c460 (    0x18) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c478 (     0xc) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c484 (     0xc) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c490 (    0x18) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c4a8 (    0x18) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c4c0 (    0x18) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c4d8 (    0x28) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c500 (    0x24) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c524 (    0x10) OUTLINED_FUNCTION_25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c534 (    0x20) OUTLINED_FUNCTION_26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c554 (    0x14) OUTLINED_FUNCTION_27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c568 (    0x1c) OUTLINED_FUNCTION_28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c584 (    0x1c) OUTLINED_FUNCTION_29 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c5a0 (    0x18) OUTLINED_FUNCTION_30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c5b8 (     0xc) OUTLINED_FUNCTION_31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c5c4 (    0x18) OUTLINED_FUNCTION_32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c5dc (    0x10) OUTLINED_FUNCTION_33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c5ec (    0x14) OUTLINED_FUNCTION_34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c600 (    0x18) OUTLINED_FUNCTION_35 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c618 (    0x28) OUTLINED_FUNCTION_36 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c640 (    0x24) OUTLINED_FUNCTION_37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c664 (    0x1c) OUTLINED_FUNCTION_38 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c680 (    0x24) OUTLINED_FUNCTION_39 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c6a4 (    0x18) OUTLINED_FUNCTION_40 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c6bc (    0x24) OUTLINED_FUNCTION_41 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c6e0 (    0x10) OUTLINED_FUNCTION_42 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c6f0 (     0xc) OUTLINED_FUNCTION_43 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c6fc (    0x1c) OUTLINED_FUNCTION_44 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c718 (    0x28) OUTLINED_FUNCTION_45 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c740 (    0x10) OUTLINED_FUNCTION_46 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c750 (    0x10) OUTLINED_FUNCTION_47 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c760 (    0x1c) OUTLINED_FUNCTION_48 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c77c (    0x14) OUTLINED_FUNCTION_49 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c790 (    0x18) OUTLINED_FUNCTION_50 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c7a8 (    0x18) OUTLINED_FUNCTION_51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c7c0 (    0x18) OUTLINED_FUNCTION_52 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c7d8 (     0xc) OUTLINED_FUNCTION_53 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c7e4 (    0x18) OUTLINED_FUNCTION_54 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c7fc (    0x18) OUTLINED_FUNCTION_55 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c814 (    0x18) OUTLINED_FUNCTION_56 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c82c (     0xc) OUTLINED_FUNCTION_57 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c838 (    0x1c) OUTLINED_FUNCTION_58 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c854 (    0x18) OUTLINED_FUNCTION_59 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c86c (    0x18) OUTLINED_FUNCTION_60 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c884 (    0x18) OUTLINED_FUNCTION_61 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c89c (    0x20) OUTLINED_FUNCTION_62 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c8bc (    0x34) initializeBufferWithCopyOfBuffer for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c8f0 (    0x54) destroy for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c944 (    0x98) initializeWithCopy for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4c9dc (    0xf0) assignWithCopy for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cacc (     0x8) __swift_memcpy96_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cad4 (    0xa0) assignWithTake for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cb74 (    0x40) getEnumTagSinglePayload for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cbb4 (    0x58) storeEnumTagSinglePayload for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cc0c (    0x10) type metadata accessor for ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cc1c (    0x64) ConnectionEstablishmentReport.attemptDelayInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cc80 (    0x60) ConnectionEstablishmentReport.durationInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4cce0 (   0x5b0) ConnectionEstablishmentReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d290 (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionEstablishmentReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d2cc (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d2e8 (     0xc) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d2f4 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d304 (    0x14) dispatch thunk of ConnectionProtocol.connectionConfiguration.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d318 (    0x14) dispatch thunk of ConnectionProtocol.delegate.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d32c (    0x14) dispatch thunk of ConnectionProtocol.delegate.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d340 (    0x14) dispatch thunk of ConnectionProtocol.delegate.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d354 (    0x28) dispatch thunk of ConnectionProtocol.start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d37c (    0x14) dispatch thunk of ConnectionProtocol.sendData(_:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d390 (    0x14) dispatch thunk of ConnectionProtocol.setSendPings(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d3a4 (    0x14) dispatch thunk of ConnectionProtocol.cancelSynchronously(_:isOnConnectionQueue:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d3b8 (    0x14) dispatch thunk of ConnectionProtocol.getConnectionMetrics(_:with:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d3cc (    0x74) ConnectionPolicyType.stringRawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d440 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb4d454 (   0x408) static ConnectionPolicyRoute.aceptableRoutes(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d85c (   0x108) static ConnectionPolicyRoute.maxTimeoutFromRoutes(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4d964 (   0x388) ConnectionPolicyRoute.init(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4dcec (   0x380) static ConnectionPolicyRoute.groupedRoutesAndSortedByPriority(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e06c (   0x18c) ConnectionPolicyType.init(fromRawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e1f8 (    0x14) ConnectionPolicyType.init(rawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e20c (     0x8) ConnectionPolicyType.rawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e214 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e220 (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e228 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e230 (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e238 (     0x8) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e240 (    0x28) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e268 (    0x48) ConnectionPolicyProtocol.stringRawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2b0 (    0x14) ConnectionPolicyProtocol.init(rawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2c4 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2d0 (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2d8 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2e0 (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2e8 (     0x8) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e2f0 (    0x28) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e318 (     0x8) static ConnectionPolicyRoute.maxTimeoutBetweenScheduledRoute.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e320 (    0x2c) ConnectionPolicyRoute.routeId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e34c (    0x34) ConnectionPolicyRoute.routeId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e380 (    0x20) ConnectionPolicyRoute.routeId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e3a0 (     0x4) ConnectionPolicyRoute.routeId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e3a4 (    0x2c) ConnectionPolicyRoute.connectionId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e3d0 (    0x34) ConnectionPolicyRoute.connectionId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e404 (    0x20) ConnectionPolicyRoute.connectionId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e424 (     0x4) ConnectionPolicyRoute.connectionId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e428 (     0x8) ConnectionPolicyRoute.priority.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e430 (     0x8) ConnectionPolicyRoute.priority.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e438 (    0x20) ConnectionPolicyRoute.priority.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e458 (     0x4) ConnectionPolicyRoute.priority.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e45c (    0xc4) ConnectionPolicyRoute.routeHost.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e520 (    0x2c) ConnectionPolicyRoute.cname.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e54c (    0x34) ConnectionPolicyRoute.cname.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e580 (    0x20) ConnectionPolicyRoute.cname.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e5a0 (     0x4) ConnectionPolicyRoute.cname.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e5a4 (    0x2c) ConnectionPolicyRoute.host.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e5d0 (    0x34) ConnectionPolicyRoute.host.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e604 (    0x20) ConnectionPolicyRoute.host.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e624 (     0x4) ConnectionPolicyRoute.host.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e628 (     0x8) ConnectionPolicyRoute.mptcp.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e630 (     0x8) ConnectionPolicyRoute.mptcp.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e638 (    0x20) ConnectionPolicyRoute.mptcp.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e658 (     0x4) ConnectionPolicyRoute.mptcp.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e65c (    0x2c) ConnectionPolicyRoute.resolver.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e688 (    0x34) ConnectionPolicyRoute.resolver.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e6bc (    0x20) ConnectionPolicyRoute.resolver.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e6dc (     0x4) ConnectionPolicyRoute.resolver.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e6e0 (     0xc) ConnectionPolicyRoute.resolverProtocol.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e6ec (     0xc) ConnectionPolicyRoute.resolverProtocol.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e6f8 (    0x20) ConnectionPolicyRoute.resolverProtocol.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e718 (     0x4) ConnectionPolicyRoute.resolverProtocol.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e71c (     0xc) ConnectionPolicyRoute.timeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e728 (    0x10) ConnectionPolicyRoute.timeout.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e738 (    0x20) ConnectionPolicyRoute.timeout.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e758 (     0x4) ConnectionPolicyRoute.timeout.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e75c (     0xc) ConnectionPolicyRoute.type.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e768 (     0xc) ConnectionPolicyRoute.type.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e774 (    0x20) ConnectionPolicyRoute.type.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e794 (     0x4) ConnectionPolicyRoute.type.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e798 (    0x2c) ConnectionPolicyRoute.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4e7c4 (   0x2e0) ConnectionPolicyRoute.connectionPolicyRouteObject() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4eaa4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb4eab4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000020fb4eacc (   0x2a4) specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ed70 (    0xdc) specialized _copyCollectionToContiguousArray<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ee4c (    0x6c) specialized MutableCollection<>.sort(by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4eeb8 (   0x640) specialized UnsafeMutableBufferPointer._stableSortImpl(by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f4f8 (    0x70) specialized MutableCollection<>._insertionSort(within:sortedEnd:by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f568 (   0x180) specialized _merge<A>(low:mid:high:buffer:by:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f6e8 (    0xf8) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f7e0 (    0x14) specialized _ArrayBuffer._consumeAndCreateNew() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f7f4 (    0x60) outlined bridged method (pb) of @objc SAConnectionPolicyRoute.routeId.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f854 (     0x4) base witness table accessor for Equatable in ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f858 (    0x4c) lazy protocol witness table accessor for type ConnectionPolicyType and conformance ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f8a4 (     0x4) base witness table accessor for Equatable in ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f8a8 (    0x4c) lazy protocol witness table accessor for type ConnectionPolicyProtocol and conformance ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f8f4 (    0x88) getEnumTagSinglePayload for ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4f97c (    0xcc) storeEnumTagSinglePayload for ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fa48 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb4fa5c (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb4fa70 (     0x8) getEnumTag for ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fa78 (     0x4) destructiveProjectEnumData for ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fa7c (     0x8) destructiveInjectEnumTag for ConnectionPolicyType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fa84 (     0xc) type metadata accessor for ConnectionPolicyType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fa90 (    0x88) getEnumTagSinglePayload for ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fb18 (    0xcc) storeEnumTagSinglePayload for ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fbe4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb4fbf8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb4fc0c (     0x4) destructiveProjectEnumData for ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fc10 (     0xc) type metadata accessor for ConnectionPolicyProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fc1c (    0x34) initializeBufferWithCopyOfBuffer for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fc50 (    0x54) destroy for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fca4 (    0xa8) initializeWithCopy for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fd4c (   0x100) assignWithCopy for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fe4c (     0x8) __swift_memcpy114_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fe54 (    0xa0) assignWithTake for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4fef4 (    0x54) getEnumTagSinglePayload for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ff48 (    0x74) storeEnumTagSinglePayload for ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ffbc (     0xc) type metadata accessor for ConnectionPolicyRoute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb4ffc8 (   0x1a8) specialized Sequence._copySequenceContents(initializing:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50170 (    0x10) outlined consume of [A : B].Iterator._Variant<A, B> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50180 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50184 (    0x14) specialized _ContiguousArrayBuffer._consumeAndCreateNew() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50198 (     0x4) destructiveInjectEnumTag for ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5019c (     0x4) getEnumTag for ConnectionPolicyProtocol [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb501a0 (     0x4) ConnectionPolicyProtocol.rawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb501a4 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb501c0 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb501e0 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb501f8 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50210 (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50220 (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5022c (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50244 (     0xc) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50250 (     0xc) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5025c (    0x20) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5027c (     0x8) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50284 (    0x28) NetworkManager.addObserver(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb502ac (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb502e4 (   0x114) closure #1 in NetworkManager.addObserver(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb503f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb503fc (     0x8) partial apply for closure #1 in NetworkManager.addObserver(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50404 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50414 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5041c (    0x18) @objc NetworkManager.addObserver(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50434 (    0x28) NetworkManager.removeObserver(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5045c (   0x228) NetworkManager.addObserver(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50684 (   0x140) closure #1 in NetworkManager.removeObserver(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb507c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb507c8 (    0x40) objectdestroy.2Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50808 (     0x8) partial apply for closure #1 in NetworkManager.removeObserver(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50810 (    0x18) @objc NetworkManager.removeObserver(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50828 (    0x64) @objc NetworkManager.addObserver(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5088c (   0x1fc) NetworkManager.startMonitoringNetwork(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50a88 (   0x320) closure #1 in NetworkManager.startMonitoringNetwork(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50da8 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb50de8 (     0xc) partial apply for closure #1 in NetworkManager.startMonitoringNetwork(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50df4 (    0x5c) closure #1 in closure #1 in NetworkManager.startMonitoringNetwork(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb50e50 (   0x638) NetworkManager.pathUpdated(status:usesCellular:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51488 (    0x64) thunk for @escaping @callee_guaranteed (@guaranteed OS_nw_path?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb514ec (    0x6c) @objc NetworkManager.startMonitoringNetwork(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51558 (   0x1cc) NetworkManager.stopMonitoringNetwork() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51724 (   0x160) closure #1 in NetworkManager.stopMonitoringNetwork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51884 (     0x8) partial apply for closure #1 in NetworkManager.stopMonitoringNetwork() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5188c (    0x40) @objc NetworkManager.stopMonitoringNetwork() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb518cc (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb51904 (     0x8) partial apply for closure #1 in closure #1 in NetworkManager.startMonitoringNetwork(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5190c (    0x60) outlined destroy of AnyHashable? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5196c (     0x4) block_copy_helper.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51970 (     0x4) block_copy_helper.15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51974 (     0x4) block_copy_helper.19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51978 (     0x4) block_copy_helper.25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5197c (     0x4) block_destroy_helper.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51980 (     0x4) block_destroy_helper.16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51984 (     0x4) block_destroy_helper.20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51988 (     0x4) block_destroy_helper.26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5198c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb519a8 (    0x48) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb519f0 (    0x28) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51a18 (    0x24) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51a3c (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51a54 (    0x24) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51a78 (    0x2c) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51aa4 (    0x1c) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51ac0 (    0x10) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51ad0 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51ae8 (    0x18) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b00 (    0x18) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b18 (    0x1c) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b34 (    0x1c) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b50 (    0x14) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b64 (    0x14) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b78 (    0x14) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51b8c (    0x34) ConnectionInfo.__allocating_init(connectionConfiguration:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51bc0 (   0x16c) key path getter for ConnectionInfo.connectionConfiguration : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51d2c (   0x2cc) key path setter for ConnectionInfo.connectionConfiguration : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb51ff8 (   0x29c) ConnectionInfo.connectionConfiguration.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52294 (   0x380) ConnectionInfo.connectionConfiguration.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52614 (    0x58) ConnectionInfo.connectionConfiguration.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5266c (     0x4) ConnectionInfo.connectionConfiguration.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52670 (    0x34) @objc ConnectionInfo.policy.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb526a4 (    0x2c) ConnectionInfo.policy.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb526d0 (    0x58) @objc ConnectionInfo.policy.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52728 (     0xc) ConnectionInfo.policy.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52734 (    0x34) @objc ConnectionInfo.policyRoute.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52768 (    0x2c) ConnectionInfo.policyRoute.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52794 (    0x58) @objc ConnectionInfo.policyRoute.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb527ec (     0xc) ConnectionInfo.policyRoute.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb527f8 (   0x298) ConnectionInfo.init(connectionConfiguration:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52a90 (    0x24) type metadata accessor for ConnectionInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52ab4 (    0x34) ConnectionInfo.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52ae8 (   0x2d0) ConnectionInfo.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52db8 (    0x24) @objc ConnectionInfo.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52ddc (    0x3c) @objc ConnectionInfo.connectionProtocolTechnology.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52e18 (    0x94) ConnectionInfo.connectionProtocolTechnology.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52eac (    0x28) @objc ConnectionInfo.connectionProtocolTechnology.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52ed4 (    0x54) ConnectionInfo.connectionProtocolTechnology.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52f28 (    0x2c) key path getter for ConnectionInfo.connectionProtocolTechnology : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52f54 (    0x28) key path setter for ConnectionInfo.connectionProtocolTechnology : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb52f7c (   0x144) ConnectionInfo.connectionProtocolTechnology.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb530c0 (    0x24) ConnectionInfo.connectionProtocolTechnology.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb530e4 (    0x18) @objc ConnectionInfo.assistantIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb530fc (    0x88) ConnectionInfo.assistantIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53184 (    0x18) @objc ConnectionInfo.assistantIdentifier.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5319c (    0x48) ConnectionInfo.assistantIdentifier.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb531e4 (    0x2c) key path getter for ConnectionInfo.assistantIdentifier : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53210 (    0x44) ConnectionInfo.assistantIdentifier.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53254 (    0x18) ConnectionInfo.assistantIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5326c (    0x18) @objc ConnectionInfo.peerAssistantIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53284 (    0x84) ConnectionInfo.peerAssistantIdentifier.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53308 (    0x18) @objc ConnectionInfo.peerAssistantIdentifier.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53320 (    0x48) ConnectionInfo.peerAssistantIdentifier.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53368 (    0x2c) key path getter for ConnectionInfo.peerAssistantIdentifier : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53394 (    0x44) ConnectionInfo.peerAssistantIdentifier.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb533d8 (    0x18) ConnectionInfo.peerAssistantIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb533f0 (    0x18) @objc ConnectionInfo.connectionId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53408 (    0x84) ConnectionInfo.connectionId.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5348c (    0x18) @objc ConnectionInfo.connectionId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb534a4 (    0x48) ConnectionInfo.connectionId.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb534ec (    0x2c) key path getter for ConnectionInfo.connectionId : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53518 (    0x44) ConnectionInfo.connectionId.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5355c (    0x18) ConnectionInfo.connectionId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53574 (    0x18) @objc ConnectionInfo.aceHost.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5358c (    0x84) ConnectionInfo.aceHost.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53610 (    0x18) @objc ConnectionInfo.aceHost.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53628 (    0x48) ConnectionInfo.aceHost.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53670 (    0x2c) key path getter for ConnectionInfo.aceHost : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5369c (    0x44) ConnectionInfo.aceHost.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb536e0 (    0x18) ConnectionInfo.aceHost.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb536f8 (    0x18) @objc ConnectionInfo.languageCode.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53710 (    0x80) @objc ConnectionInfo.assistantIdentifier.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53790 (    0x84) ConnectionInfo.languageCode.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53814 (    0x18) @objc ConnectionInfo.languageCode.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5382c (    0x84) @objc ConnectionInfo.assistantIdentifier.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb538b0 (    0x48) ConnectionInfo.languageCode.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb538f8 (    0x2c) key path getter for ConnectionInfo.languageCode : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53924 (    0x40) key path setter for ConnectionInfo.assistantIdentifier : ConnectionInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53964 (    0x44) ConnectionInfo.languageCode.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb539a8 (    0x18) ConnectionInfo.languageCode.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb539c0 (    0x70) ConnectionInfo.assistantIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53a30 (    0x3c) @objc ConnectionInfo.prefersWWAN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53a6c (    0x80) ConnectionInfo.prefersWWAN.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53aec (    0x28) @objc ConnectionInfo.prefersWWAN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53b14 (    0x38) ConnectionInfo.prefersWWAN.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53b4c (    0x30) key path getter for ConnectionInfo.prefersWWAN : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53b7c (    0x28) key path setter for ConnectionInfo.prefersWWAN : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53ba4 (    0xa0) ConnectionInfo.prefersWWAN.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53c44 (    0x5c) ConnectionInfo.prefersWWAN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53ca0 (    0x3c) @objc ConnectionInfo.skipPeer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53cdc (    0x80) ConnectionInfo.skipPeer.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53d5c (    0x28) @objc ConnectionInfo.skipPeer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53d84 (    0x38) ConnectionInfo.skipPeer.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53dbc (    0x30) key path getter for ConnectionInfo.skipPeer : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53dec (    0x28) key path setter for ConnectionInfo.skipPeer : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53e14 (    0xa0) ConnectionInfo.skipPeer.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53eb4 (    0x5c) ConnectionInfo.skipPeer.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53f10 (    0x3c) @objc ConnectionInfo.useWiFiHint.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53f4c (    0x80) ConnectionInfo.useWiFiHint.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53fcc (    0x28) @objc ConnectionInfo.useWiFiHint.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb53ff4 (    0x38) ConnectionInfo.useWiFiHint.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5402c (    0x30) key path getter for ConnectionInfo.useWiFiHint : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5405c (    0x28) key path setter for ConnectionInfo.useWiFiHint : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54084 (    0xa0) ConnectionInfo.useWiFiHint.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54124 (    0x5c) ConnectionInfo.useWiFiHint.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54180 (    0x74) @objc ConnectionInfo.skipPeerErrorReason.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb541f4 (   0x140) ConnectionInfo.skipPeerErrorReason.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54334 (    0x5c) @objc ConnectionInfo.skipPeerErrorReason.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54390 (    0x40) ConnectionInfo.skipPeerErrorReason.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb543d0 (    0x2c) key path getter for ConnectionInfo.skipPeerErrorReason : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb543fc (    0x34) key path setter for ConnectionInfo.skipPeerErrorReason : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54430 (    0x48) ConnectionInfo.skipPeerErrorReason.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54478 (    0x5c) ConnectionInfo.skipPeerErrorReason.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb544d4 (    0x3c) @objc ConnectionInfo.forceReconnect.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54510 (    0x7c) ConnectionInfo.forceReconnect.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5458c (    0x28) @objc ConnectionInfo.forceReconnect.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb545b4 (    0x38) ConnectionInfo.forceReconnect.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb545ec (    0x30) key path getter for ConnectionInfo.forceReconnect : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5461c (    0x28) key path setter for ConnectionInfo.forceReconnect : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54644 (    0x9c) ConnectionInfo.forceReconnect.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb546e0 (    0x5c) ConnectionInfo.forceReconnect.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5473c (    0x44) @objc ConnectionInfo.timeout.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54780 (    0xf8) ConnectionInfo.timeout.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54878 (    0x24) @objc ConnectionInfo.timeout.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5489c (    0x50) ConnectionInfo.timeout.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb548ec (    0x2c) key path getter for ConnectionInfo.timeout : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54918 (    0x28) key path setter for ConnectionInfo.timeout : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54940 (    0x60) ConnectionInfo.timeout.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb549a0 (    0x64) ConnectionInfo.timeout.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54a04 (    0x3c) @objc ConnectionInfo.imposePolicyBan.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54a40 (    0x7c) ConnectionInfo.imposePolicyBan.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54abc (    0x28) @objc ConnectionInfo.imposePolicyBan.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54ae4 (    0x38) ConnectionInfo.imposePolicyBan.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54b1c (    0x30) key path getter for ConnectionInfo.imposePolicyBan : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54b4c (    0x28) key path setter for ConnectionInfo.imposePolicyBan : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54b74 (    0x9c) ConnectionInfo.imposePolicyBan.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54c10 (    0x5c) ConnectionInfo.imposePolicyBan.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54c6c (    0x34) @objc ConnectionInfo.connectionPolicy.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54ca0 (    0x2c) ConnectionInfo.connectionPolicy.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54ccc (    0x58) @objc ConnectionInfo.connectionPolicy.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54d24 (   0x140) ConnectionInfo.connectionPolicy.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54e64 (    0x2c) key path getter for ConnectionInfo.connectionPolicy : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54e90 (    0x34) key path setter for ConnectionInfo.connectionPolicy : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54ec4 (    0x50) ConnectionInfo.connectionPolicy.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54f14 (    0x18) ConnectionInfo.connectionPolicy.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54f2c (    0x34) @objc ConnectionInfo.connectionPolicyRoute.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54f60 (    0x2c) ConnectionInfo.connectionPolicyRoute.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54f8c (    0x58) @objc ConnectionInfo.connectionPolicyRoute.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb54fe4 (   0x1ac) ConnectionInfo.connectionPolicyRoute.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55190 (    0x2c) key path getter for ConnectionInfo.connectionPolicyRoute : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb551bc (    0x34) key path setter for ConnectionInfo.connectionPolicyRoute : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb551f0 (    0x50) ConnectionInfo.connectionPolicyRoute.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55240 (    0x18) ConnectionInfo.connectionPolicyRoute.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55258 (    0x78) ConnectionInfo.connectionPolicy.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb552d0 (    0x3c) @objc ConnectionInfo.forceOnDeviceOnlyDictation.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5530c (    0x7c) ConnectionInfo.forceOnDeviceOnlyDictation.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55388 (    0x28) @objc ConnectionInfo.forceOnDeviceOnlyDictation.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb553b0 (    0x38) ConnectionInfo.forceOnDeviceOnlyDictation.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb553e8 (    0x30) key path getter for ConnectionInfo.forceOnDeviceOnlyDictation : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55418 (    0x28) key path setter for ConnectionInfo.forceOnDeviceOnlyDictation : ConnectionInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55440 (    0x9c) ConnectionInfo.forceOnDeviceOnlyDictation.modify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb554dc (    0x5c) ConnectionInfo.forceOnDeviceOnlyDictation.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55538 (    0x34) ConnectionInfo.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5556c (   0x188) @objc ConnectionInfo.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb556f4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb556f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb556fc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55700 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55704 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55708 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb55734 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55738 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb55764 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55768 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb55794 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55798 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb557c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb557c8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000020fb557f4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb557f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb557fc (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55800 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55804 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55808 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb5580c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55810 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55814 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55818 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb5581c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55820 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55824 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55828 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb5582c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55830 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55834 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55838 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb5583c (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55840 (     0x4) (null) [FUNC, FunctionStarts] 
                0x000000020fb55844 (    0x18) method lookup function for ConnectionInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5585c (    0x34) dispatch thunk of ConnectionInfo.connectionConfiguration.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55890 (    0x34) dispatch thunk of ConnectionInfo.connectionConfiguration.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb558c4 (    0x34) dispatch thunk of ConnectionInfo.connectionConfiguration.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb558f8 (    0x14) dispatch thunk of ConnectionInfo.__allocating_init(connectionConfiguration:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5590c (    0x34) dispatch thunk of ConnectionInfo.connectionProtocolTechnology.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55940 (    0x34) dispatch thunk of ConnectionInfo.connectionProtocolTechnology.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55974 (    0x34) dispatch thunk of ConnectionInfo.connectionProtocolTechnology.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb559a8 (    0x34) dispatch thunk of ConnectionInfo.assistantIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb559dc (    0x34) dispatch thunk of ConnectionInfo.assistantIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55a10 (    0x34) dispatch thunk of ConnectionInfo.assistantIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55a44 (    0x34) dispatch thunk of ConnectionInfo.peerAssistantIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55a78 (    0x34) dispatch thunk of ConnectionInfo.peerAssistantIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55aac (    0x34) dispatch thunk of ConnectionInfo.peerAssistantIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55ae0 (    0x3c) dispatch thunk of ConnectionInfo.connectionId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55b1c (    0x3c) dispatch thunk of ConnectionInfo.connectionId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55b58 (    0x3c) dispatch thunk of ConnectionInfo.connectionId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55b94 (    0x3c) dispatch thunk of ConnectionInfo.aceHost.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55bd0 (    0x3c) dispatch thunk of ConnectionInfo.aceHost.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55c0c (    0x3c) dispatch thunk of ConnectionInfo.aceHost.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55c48 (    0x3c) dispatch thunk of ConnectionInfo.languageCode.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55c84 (    0x3c) dispatch thunk of ConnectionInfo.languageCode.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55cc0 (    0x3c) dispatch thunk of ConnectionInfo.languageCode.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55cfc (    0x3c) dispatch thunk of ConnectionInfo.prefersWWAN.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55d38 (    0x3c) dispatch thunk of ConnectionInfo.prefersWWAN.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55d74 (    0x3c) dispatch thunk of ConnectionInfo.prefersWWAN.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55db0 (    0x3c) dispatch thunk of ConnectionInfo.skipPeer.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55dec (    0x3c) dispatch thunk of ConnectionInfo.skipPeer.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55e28 (    0x3c) dispatch thunk of ConnectionInfo.skipPeer.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55e64 (    0x3c) dispatch thunk of ConnectionInfo.useWiFiHint.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55ea0 (    0x3c) dispatch thunk of ConnectionInfo.useWiFiHint.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55edc (    0x3c) dispatch thunk of ConnectionInfo.useWiFiHint.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55f18 (    0x3c) dispatch thunk of ConnectionInfo.skipPeerErrorReason.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55f54 (    0x3c) dispatch thunk of ConnectionInfo.skipPeerErrorReason.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55f90 (    0x3c) dispatch thunk of ConnectionInfo.skipPeerErrorReason.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb55fcc (    0x3c) dispatch thunk of ConnectionInfo.forceReconnect.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56008 (    0x3c) dispatch thunk of ConnectionInfo.forceReconnect.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56044 (    0x3c) dispatch thunk of ConnectionInfo.forceReconnect.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56080 (    0x3c) dispatch thunk of ConnectionInfo.timeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb560bc (    0x3c) dispatch thunk of ConnectionInfo.timeout.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb560f8 (    0x3c) dispatch thunk of ConnectionInfo.timeout.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56134 (    0x3c) dispatch thunk of ConnectionInfo.imposePolicyBan.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56170 (    0x3c) dispatch thunk of ConnectionInfo.imposePolicyBan.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb561ac (    0x3c) dispatch thunk of ConnectionInfo.imposePolicyBan.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb561e8 (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicy.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56224 (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicy.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56260 (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicy.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5629c (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicyRoute.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb562d8 (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicyRoute.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56314 (    0x3c) dispatch thunk of ConnectionInfo.connectionPolicyRoute.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56350 (    0x3c) dispatch thunk of ConnectionInfo.forceOnDeviceOnlyDictation.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5638c (    0x3c) dispatch thunk of ConnectionInfo.forceOnDeviceOnlyDictation.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb563c8 (    0x3c) dispatch thunk of ConnectionInfo.forceOnDeviceOnlyDictation.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56404 (    0x90) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56494 (    0x90) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56524 (    0x9c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb565c0 (    0x2c) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb565ec (    0x94) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56680 (    0x34) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb566b4 (    0x24) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb566d8 (    0x1c) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb566f4 (    0x18) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5670c (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56724 (    0x20) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56744 (    0x28) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5676c (    0x24) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56790 (    0x14) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb567a4 (    0x20) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb567c4 (    0x20) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb567e4 (    0x20) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56804 (    0x18) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5681c (    0x34) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56850 (    0x1c) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5686c (    0x10) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5687c (    0x10) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5688c (    0x18) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb568a4 (    0x18) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb568bc (    0x10) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb568cc (    0x1c) OUTLINED_FUNCTION_25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb568e8 (    0x20) OUTLINED_FUNCTION_26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56908 (    0x1c) OUTLINED_FUNCTION_27 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56924 (     0xc) OUTLINED_FUNCTION_28 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56930 (     0xc) OUTLINED_FUNCTION_29 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5693c (    0x18) OUTLINED_FUNCTION_30 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56954 (     0xc) OUTLINED_FUNCTION_31 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56960 (     0xc) OUTLINED_FUNCTION_32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5696c (    0x10) OUTLINED_FUNCTION_33 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5697c (     0xc) OUTLINED_FUNCTION_34 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56988 (    0x18) OUTLINED_FUNCTION_35 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb569a0 (    0x14) OUTLINED_FUNCTION_36 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb569b4 (     0xc) OUTLINED_FUNCTION_37 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb569c0 (   0x1dc) ConnectionPolicy.hash(into:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56b9c (   0x23c) static ConnectionPolicy.== infix(_:_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb56dd8 (   0x35c) specialized static Set.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57134 (    0xb4) ConnectionPolicy.hashValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb571e8 (     0x4) protocol witness for Hashable.hashValue.getter in conformance ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb571ec (     0x4) protocol witness for Hashable.hash(into:) in conformance ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb571f0 (    0xb0) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb572a0 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb572a4 (   0x240) specialized Set.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb574e4 (     0x4) base witness table accessor for Equatable in ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb574e8 (    0x4c) lazy protocol witness table accessor for type ConnectionPolicy and conformance ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57534 (    0x24) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57558 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5758c (    0x54) destroy for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb575e0 (    0x88) initializeWithCopy for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57668 (    0xe0) assignWithCopy for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57748 (    0x14) __swift_memcpy64_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5775c (    0xa0) assignWithTake for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb577fc (    0x40) getEnumTagSinglePayload for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5783c (    0x50) storeEnumTagSinglePayload for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5788c (    0x10) type metadata accessor for ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5789c (   0x498) ConnectionPreparationReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57d34 (    0x3c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionPreparationReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57d70 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57d8c (     0xc) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57d98 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57db0 (     0xc) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57dbc (   0x19c) Data.init(copying:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57f58 (    0x6c) closure #1 in Data.init(copying:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb57fc4 (   0x228) Data.init(instance:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb581ec (    0x60) outlined destroy of DispatchData? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5824c (    0x68) outlined init with copy of DispatchData? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb582b4 (    0x1c) partial apply for closure #1 in Data.init(copying:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb582d0 (   0x30c) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb585dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb585ec (    0xb0) specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5869c (    0x50) lazy protocol witness table accessor for type DispatchData and conformance DispatchData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb586ec (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb58708 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb58720 (   0xf9c) ConnectionMetrics.snConnectionMetrics.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb596bc (   0x128) specialized _arrayForceCast<A, B>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb597e4 (   0x378) specialized _dictionaryUpCast<A, B, C, D>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59b5c (    0x40) type metadata accessor for SNConnectionTCPInfoMetrics [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59b9c (   0x364) specialized _dictionaryUpCast<A, B, C, D>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f00 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f18 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f30 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f48 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f60 (    0x14) dispatch thunk of SessionObject.internalAceId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f74 (    0x14) dispatch thunk of SessionObject.internalAceId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f88 (    0x14) dispatch thunk of SessionObject.internalAceId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59f9c (    0x14) dispatch thunk of SessionObject.internalRefId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59fb0 (    0x14) dispatch thunk of SessionObject.internalRefId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59fc4 (    0x14) dispatch thunk of SessionObject.internalRefId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb59fd8 (    0x28) dispatch thunk of SessionObject.serializedAceData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a000 (    0x14) dispatch thunk of SessionObject.bufferingAllowedDuringActiveSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a014 (    0x14) dispatch thunk of SessionObject.isRetryable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a028 (    0x14) dispatch thunk of SessionObject.isRestartable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a03c (    0x14) dispatch thunk of SessionObject.isProvisional() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a050 (    0x14) dispatch thunk of SessionObject.logDiagnostics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a064 (    0x14) dispatch thunk of SessionObject.requestId() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a078 (    0x14) dispatch thunk of SessionObject.setSessionRequestId(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a08c (    0x14) dispatch thunk of SessionObject.supportedByLocalSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a0a0 (    0x14) dispatch thunk of SessionObject.supportedByRemoteLimitedSession() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a0b4 (    0x60) ZlibDataCompressor.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a114 (    0x30) ZlibDataCompressor.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a144 (    0x24) type metadata accessor for ZlibDataCompressor [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a168 (   0x5b4) ConnectionPreparationReport.netDebugConnectionStatePreparationSnapshot.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a71c (    0x2c) outlined release of [ConnectionEndpointReport] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a748 (    0x7c) outlined bridged method (mbnn) of @objc NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCaptured.pathGateways.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a7c4 (    0x68) outlined init with take of String? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a82c (    0x3c) type metadata accessor for NETSchemaNETPathInterface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a868 (    0x74) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a8dc (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a8f0 (    0x54) specialized Collection.isEmpty.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a944 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb5a954 (     0x4) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a958 (    0x4c) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a9a4 (     0xc) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a9b0 (    0x44) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a9f4 (     0x4) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a9f8 (     0x4) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5a9fc (    0x40) specialized RawRepresentable<>.hashValue.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5aa3c (    0x40) specialized RawRepresentable<>.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5aa7c (    0x50) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5aacc (     0x4) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5aad0 (    0x48) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ab18 (     0x4) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ab1c (    0x98) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5abb4 (     0x4) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5abb8 (    0x44) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5abfc (    0x44) specialized RawRepresentable<>._rawHashValue(seed:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ac40 (   0x168) specialized BackgroundConnectionProtocol.hash(into:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ada8 (    0x10) ConnectionState.init(rawValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5adb8 (     0x8) ConnectionState.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5adc0 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5adcc (    0x1c) protocol witness for Hashable.hashValue.getter in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ade8 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5adf0 (    0x1c) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ae0c (    0x2c) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ae38 (    0x2c) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ae64 (   0x6d4) BackgroundConnection.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5b538 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb5b548 (   0x1c8) BackgroundConnection.deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5b710 (    0x30) BackgroundConnection.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5b740 (    0x24) type metadata accessor for BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5b764 (   0xba8) BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5c30c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb5c31c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb5c32c (   0x5a0) specialized closure #1 in BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5c8cc (    0xac) closure #1 in closure #1 in BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5c978 (   0x4ac) BackgroundConnection.startSecondaryConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ce24 (   0x5e8) closure #1 in BackgroundConnection.startSecondaryConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5d40c (   0x138) BackgroundConnection.cancelSecondaryConnection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5d544 (   0x108) BackgroundConnection.updateActiveBackgroundConnectionWithSecondary() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5d64c (   0x3dc) BackgroundConnection.networkProviderDidOpen() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5da28 (   0x1f8) BackgroundConnection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5dc20 (     0x4) closure #1 in BackgroundConnection.sendData(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5dc24 (    0x90) BackgroundConnection.cancel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5dcb4 (    0x64) BackgroundConnection.didEncounterError(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5dd18 (    0x98) BackgroundConnection.closeConnectionAndPrepareForReconnect(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ddb0 (   0x3f4) BackgroundConnection.getConnectionMethod() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5e1a4 (  0x1d8c) BackgroundConnection.getConnectionMetrics(connectionMethodHistory:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb5ff30 (   0x9d0) thunk for @escaping @callee_guaranteed (@in_guaranteed ConnectionMetrics?) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb60900 (    0x54) BackgroundConnection.fallbackToNextConnectionMethodWithError(_:with:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb60954 (   0x334) closure #1 in BackgroundConnection.connectionProvider(_:received:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb60c88 (   0x140) BackgroundConnection.setupReadHandlerOnProvider() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb60dc8 (   0x460) closure #1 in BackgroundConnection.setupReadHandlerOnProvider() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61228 (   0x164) BackgroundConnection.connectionHasBytesAvailable(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6138c (    0x38) BackgroundConnection.hashValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb613c4 (    0x88) getEnumTagSinglePayload for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6144c (    0xcc) storeEnumTagSinglePayload for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61518 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb6152c (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000020fb61540 (     0x8) getEnumTag for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61548 (     0x4) destructiveProjectEnumData for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6154c (     0x8) destructiveInjectEnumTag for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61554 (    0x10) type metadata accessor for ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61564 (     0x4) base witness table accessor for Equatable in ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61568 (    0x4c) lazy protocol witness table accessor for type ConnectionState and conformance ConnectionState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb615b4 (   0x280) protocol witness for BackgroundConnectionProtocol.connectionConfiguration.getter in conformance BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61834 (    0x24) protocol witness for Hashable.hashValue.getter in conformance BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61858 (    0x58) protocol witness for Hashable.hash(into:) in conformance BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb618b0 (    0x68) protocol witness for Hashable._rawHashValue(seed:) in conformance BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61918 (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61984 (    0x48) base witness table accessor for Equatable in BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb619cc (    0x58) instantiation function for generic protocol witness table for BackgroundConnection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61a24 (   0x384) specialized Connection.didEncounterError(_:error:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb61da8 (   0x348) specialized Connection.didClose(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb620f0 (   0x388) specialized Connection.didOpenConnectionType(_:type:routeId:delay:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62478 (   0x344) specialized Connection.willStartConnection(_:type:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb627bc (   0x358) specialized Connection.didReceiveObject(_:object:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62b14 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb62b4c (    0x50) (null) [FUNC, FunctionStarts] 
                0x000000020fb62b9c (    0x10) partial apply for closure #1 in Connection.didReceiveObject(_:object:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62bac (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62bbc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62bc4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb62bfc (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb62c3c (     0xc) partial apply for closure #1 in BackgroundConnection.setupReadHandlerOnProvider() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62c48 (    0x38) (null) [FUNC, FunctionStarts] 
                0x000000020fb62c80 (     0x8) partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed ConnectionMetrics?) -> () [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62c88 (    0x48) (null) [FUNC, FunctionStarts] 
                0x000000020fb62cd0 (    0x10) partial apply for closure #1 in Connection.didEncounterError(_:error:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62ce0 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb62d20 (     0x8) partial apply for closure #1 in Connection.didClose(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62d28 (    0x50) (null) [FUNC, FunctionStarts] 
                0x000000020fb62d78 (    0x18) partial apply for closure #1 in Connection.didOpenConnectionType(_:type:routeId:delay:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62d90 (     0x8) partial apply for closure #1 in BackgroundConnection.startSecondaryConnection() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62d98 (    0x68) outlined init with copy of Result<(), NetworkConnectionError> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62e00 (    0x48) lazy protocol witness table accessor for type BackgroundConnection and conformance BackgroundConnection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62e48 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb62e88 (    0x10) partial apply for specialized closure #1 in BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62e98 (    0x40) (null) [FUNC, FunctionStarts] 
                0x000000020fb62ed8 (    0x10) partial apply for closure #1 in Connection.willStartConnection(_:type:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb62ee8 (   0x144) (null) [FUNC, FunctionStarts] 
                0x000000020fb6302c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb6303c (    0x64) partial apply for closure #1 in closure #1 in BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630a0 (    0x28) outlined destroy of weak BackgroundConnectionDelegate? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630c8 (     0x4) block_copy_helper.129 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630cc (     0x4) block_copy_helper.136 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630d0 (     0x4) block_copy_helper.143 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630d4 (     0x4) block_copy_helper.155 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630d8 (     0x4) block_destroy_helper.130 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630dc (     0x4) block_destroy_helper.137 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630e0 (     0x4) block_destroy_helper.144 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630e4 (     0x4) block_destroy_helper.156 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb630e8 (    0x48) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63130 (    0x44) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63174 (    0x40) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb631b4 (    0x30) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb631e4 (    0x28) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6320c (    0x18) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63224 (    0x24) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63248 (    0x24) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6326c (    0x20) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6328c (    0x14) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb632a0 (    0x18) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb632b8 (    0x20) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb632d8 (    0x1c) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb632f4 (    0x28) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6331c (    0x1c) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63338 (    0x18) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63350 (    0x18) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63368 (    0x10) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63378 (    0x18) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63390 (    0x1c) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb633ac (    0x18) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb633c4 (    0x18) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb633dc (    0x14) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb633f0 (    0x20) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63410 (    0x20) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63430 (    0x14) OUTLINED_FUNCTION_25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63444 (    0x30) NetworkWirelessCoexManager.init(queue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63474 (    0x38) NetworkWirelessCoexManager.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb634ac (    0x24) type metadata accessor for NetworkWirelessCoexManager [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb634d0 (     0x4) NetworkWirelessCoexManager.subscribeLinkRecommendation(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb634d4 (    0x58) NetworkWirelessCoexManager.getProximityLinkRecommendation(retry:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6352c (     0x4) NetworkWirelessCoexManager.getLinkRecommendationMetrics(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63530 (    0x60) NetworkWirelessCoexManager.subscribeLinkRecommendation(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63590 (   0x1ec) LinkRecommendationInfo.snLinkRecommendationInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6377c (    0x30) LinkRecommendationInfo.init(btPreference:wifiPreference:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637ac (     0x8) LinkRecommendationInfo.btPreference.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637b4 (     0x8) LinkRecommendationInfo.btPreference.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637bc (    0x20) LinkRecommendationInfo.btPreference.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637dc (     0x4) LinkRecommendationInfo.btPreference.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637e0 (     0x8) LinkRecommendationInfo.wifiPreference.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637e8 (     0x8) LinkRecommendationInfo.wifiPreference.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb637f0 (    0x20) LinkRecommendationInfo.wifiPreference.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63810 (     0x4) LinkRecommendationInfo.wifiPreference.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63814 (     0x8) LinkRecommendationInfo.btRSSI.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6381c (     0x8) LinkRecommendationInfo.btRSSI.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63824 (    0x20) LinkRecommendationInfo.btRSSI.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63844 (     0x4) LinkRecommendationInfo.btRSSI.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63848 (     0x8) LinkRecommendationInfo.wifiRSSI.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63850 (     0x8) LinkRecommendationInfo.wifiRSSI.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63858 (    0x20) LinkRecommendationInfo.wifiRSSI.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63878 (     0x4) LinkRecommendationInfo.wifiRSSI.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6387c (     0x8) LinkRecommendationInfo.wifiSNR.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63884 (     0x8) LinkRecommendationInfo.wifiSNR.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6388c (    0x20) LinkRecommendationInfo.wifiSNR.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638ac (     0x4) LinkRecommendationInfo.wifiSNR.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638b0 (     0x8) LinkRecommendationInfo.beaconPER.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638b8 (     0x8) LinkRecommendationInfo.beaconPER.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638c0 (    0x20) LinkRecommendationInfo.beaconPER.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638e0 (     0x4) LinkRecommendationInfo.beaconPER.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638e4 (     0x8) LinkRecommendationInfo.nwType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638ec (     0x8) LinkRecommendationInfo.nwType.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb638f4 (    0x20) LinkRecommendationInfo.nwType.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63914 (     0x4) LinkRecommendationInfo.nwType.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63918 (     0x8) LinkRecommendationInfo.wifiCCA.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63920 (     0x8) LinkRecommendationInfo.wifiCCA.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63928 (    0x20) LinkRecommendationInfo.wifiCCA.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63948 (     0x4) LinkRecommendationInfo.wifiCCA.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6394c (     0x8) LinkRecommendationInfo.lsmRecommendationBe.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63954 (     0x8) LinkRecommendationInfo.lsmRecommendationBe.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6395c (    0x20) LinkRecommendationInfo.lsmRecommendationBe.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6397c (     0x4) LinkRecommendationInfo.lsmRecommendationBe.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63980 (     0x8) LinkRecommendationInfo.expectedThroughputVIBE.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63988 (     0x8) LinkRecommendationInfo.expectedThroughputVIBE.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63990 (    0x20) LinkRecommendationInfo.expectedThroughputVIBE.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639b0 (     0x4) LinkRecommendationInfo.expectedThroughputVIBE.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639b4 (     0x8) LinkRecommendationInfo.packetLifetimeVIBE.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639bc (     0x8) LinkRecommendationInfo.packetLifetimeVIBE.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639c4 (    0x20) LinkRecommendationInfo.packetLifetimeVIBE.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639e4 (     0x4) LinkRecommendationInfo.packetLifetimeVIBE.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639e8 (     0x8) LinkRecommendationInfo.packetLossRateVIBE.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639f0 (     0x8) LinkRecommendationInfo.packetLossRateVIBE.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb639f8 (    0x20) LinkRecommendationInfo.packetLossRateVIBE.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a18 (     0x4) LinkRecommendationInfo.packetLossRateVIBE.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a1c (     0x8) LinkRecommendationInfo.btRetransmissionRateTx.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a24 (     0x8) LinkRecommendationInfo.btRetransmissionRateTx.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a2c (    0x20) LinkRecommendationInfo.btRetransmissionRateTx.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a4c (     0x4) LinkRecommendationInfo.btRetransmissionRateTx.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a50 (     0x8) LinkRecommendationInfo.btRetransmissionRateRx.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a58 (     0x8) LinkRecommendationInfo.btRetransmissionRateRx.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a60 (    0x20) LinkRecommendationInfo.btRetransmissionRateRx.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a80 (     0x4) LinkRecommendationInfo.btRetransmissionRateRx.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a84 (     0x8) LinkRecommendationInfo.btTech.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a8c (     0x8) LinkRecommendationInfo.btTech.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63a94 (    0x20) LinkRecommendationInfo.btTech.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63ab4 (     0x4) LinkRecommendationInfo.btTech.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63ab8 (     0x8) LinkRecommendationInfo.timeTaken.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63ac0 (     0x8) LinkRecommendationInfo.timeTaken.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63ac8 (    0x20) LinkRecommendationInfo.timeTaken.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63ae8 (     0x4) LinkRecommendationInfo.timeTaken.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb63aec (   0x7a8) LinkRecommendationInfo.debugDescription.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64294 (     0x4) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LinkRecommendationInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64298 (    0x34) initializeBufferWithCopyOfBuffer for LinkRecommendationInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb642cc (    0x4c) getEnumTagSinglePayload for LinkRecommendationInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64318 (    0x60) storeEnumTagSinglePayload for LinkRecommendationInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64378 (    0x10) type metadata accessor for LinkRecommendationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64388 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643a4 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643c4 (    0x18) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643dc (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643ec (     0xc) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643f8 (     0x4) protocol witness for Error._domain.getter in conformance NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb643fc (     0x4) protocol witness for Error._code.getter in conformance NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64400 (     0x4) protocol witness for Error._userInfo.getter in conformance NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64404 (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64408 (   0x264) initializeBufferWithCopyOfBuffer for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6466c (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb6467c (    0xd8) destroy for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64754 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb64764 (   0x220) initializeWithCopy for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64984 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb64994 (   0x230) assignWithCopy for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64bc4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000020fb64bd4 (    0x48) type metadata accessor for NetworkConnectionError [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64c1c (   0x1c4) initializeWithTake for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64de0 (   0x1d4) assignWithTake for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fb4 (     0x4) getEnumTagSinglePayload for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fb8 (     0x4) storeEnumTagSinglePayload for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fbc (     0x4) getEnumTag for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fc0 (     0x4) destructiveProjectEnumData for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fc4 (    0x10) destructiveInjectEnumTag for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb64fd4 (    0x94) type metadata completion function for NetworkConnectionError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65068 (    0x58) type metadata accessor for NWError? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb650c0 (   0x108) static NetworkAnalytics.netProvider(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb651c8 (   0x108) static NetworkAnalytics.netSnapshotState(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb652d0 (   0x1d4) static NetworkAnalytics.netConnectionMethod(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb654a4 (    0x4c) lazy protocol witness table accessor for type String and conformance String [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb654f0 (   0x1b8) static NetworkAnalytics.netTLSVersion(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb656a8 (   0x2a0) static NetworkAnalytics.netWiFiPhyMode(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65948 (    0x48) specialized Dictionary.subscript.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65990 (    0x40) specialized Dictionary.subscript.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb659d0 (   0x420) static NetworkAnalytics.netDebugSessionConnectionQuality(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65df0 (     0xc) static NetworkAnalytics.netEndpointType(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65dfc (   0x12c) static NetworkAnalytics.netPathStatus(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb65f28 (    0xdc) static NetworkAnalytics.netConnectionMode(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb66004 (   0x188) static NetworkAnalytics.netSessionType(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6618c (   0x468) static NetworkAnalytics.netSessionState(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb665f4 (    0xc8) static NetworkAnalytics.netEndpointFromDictionary(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb666bc (   0x12c) static NetworkAnalytics.netEndpointsFromArray(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb667e8 (    0x10) static NetworkAnalytics.netPathType(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb667f8 (   0x1a8) static NetworkAnalytics.netPathType(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb669a0 (   0x290) static NetworkAnalytics.netPathInterfaces(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb66c30 (     0xc) static NetworkAnalytics.netPathStatus(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb66c3c (   0x39c) static NetworkAnalytics.netEstablishmentResolution(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb66fd8 (    0xa8) static NetworkAnalytics.netProxyConfiguration(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67080 (    0xfc) static NetworkAnalytics.netProtocol(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6717c (   0x290) static NetworkAnalytics.netHandshakeProtocol(from:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6740c (   0x11c) static NetworkAnalytics.netQuality(fromString:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67528 (    0x78) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb675a0 (    0x44) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb675e4 (    0x44) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67628 (    0xe4) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6770c (    0xc8) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb677d4 (    0x9c) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67870 (    0x50) outlined bridged method (mbgnn) of @objc NETSchemaNETPathInterface.name.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb678c0 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb678dc (    0x24) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67900 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67910 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67920 (    0x18) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67938 (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67954 (    0x10) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67964 (    0x10) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67974 (     0xc) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67980 (    0x18) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67998 (    0x1c) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb679b4 (    0x18) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb679cc (    0x10) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb679dc (    0x10) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb679ec (    0x10) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb679fc (    0x1c) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a18 (    0x10) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a28 (    0x24) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a4c (    0x1c) OUTLINED_FUNCTION_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a68 (    0x14) OUTLINED_FUNCTION_19 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a7c (    0x20) OUTLINED_FUNCTION_20 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67a9c (     0xc) OUTLINED_FUNCTION_21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67aa8 (    0x14) OUTLINED_FUNCTION_22 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67abc (    0x18) OUTLINED_FUNCTION_23 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67ad4 (     0xc) OUTLINED_FUNCTION_24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67ae0 (     0x4) NetworkManager.forceFastDormancy() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67ae4 (     0x4) @objc NetworkManager.forceFastDormancy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67ae8 (     0x4) static NetworkManager.acquireDormancySuspendAssertion(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67aec (     0x4) @objc static NetworkManager.acquireDormancySuspendAssertion(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67af0 (     0x4) @objc static NetworkManager.releaseDormancySuspendAssertion(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67af4 (     0x4) static NetworkManager.releaseDormancySuspendAssertion(_:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb67af8 (   0x9d4) ConnectionEstablishmentReport.init(report:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb684cc (    0x5c) outlined destroy of NWConnection.EstablishmentReport? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68528 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68544 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68558 (    0x10) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68568 (    0x5c) ConnectionHandshakeReport.handshakeDurationInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb685c4 (    0x60) ConnectionHandshakeReport.handshakeRTTInMs.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68624 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68658 (     0x8) destroy for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68660 (    0x38) initializeWithCopy for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68698 (    0x60) assignWithCopy for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb686f8 (     0xc) __swift_memcpy32_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68704 (    0x40) assignWithTake for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68744 (    0x40) getEnumTagSinglePayload for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68784 (    0x40) storeEnumTagSinglePayload for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb687c4 (    0x10) type metadata accessor for ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb687d4 (   0x220) ConnectionHandshakeReport.debugDescription.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb689f4 (     0xc) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConnectionHandshakeReport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb68a00 (   0xdf0) NWEndpoint.init(configuration:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb697f0 (   0x320) NWEndpoint.endpointReport() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69b10 (    0x5c) outlined destroy of NWInterface? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69b6c (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69b88 (    0x38) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69bc0 (    0x48) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c08 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c20 (    0x38) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c58 (    0x14) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c6c (    0x1c) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c88 (    0x10) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69c98 (    0x14) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69cac (    0x14) dispatch thunk of DataCompressing.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69cc0 (    0x28) dispatch thunk of DataCompressing.compressedDataForData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69ce8 (    0x14) dispatch thunk of DataDecompressing.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69cfc (    0x28) dispatch thunk of DataDecompressing.decompressedDataForData(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69d24 (    0xdc) ConnectionEstablishmentReport.emitConnectionStateReadySnapshot() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb69e00 (   0x650) ConnectionEstablishmentReport.netDebugConnectionStateReadySnapshot.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6a450 (    0x2c) outlined release of [ConnectionHandshakeReport] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6a47c (    0x7c) outlined bridged method (mbnn) of @objc NETSchemaNETDebugNetworkConnectionStateReadySnapshotCaptured.resolutions.setter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6a4f8 (    0x3c) type metadata accessor for NETSchemaNETHandShakeProtocol [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6a534 (   0xb80) ConnectionPreparationReport.init(path:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b0b4 (    0x68) outlined init with copy of NWPath? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b11c (    0x58) outlined destroy of NWPath? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b174 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b190 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b1ac (    0x14) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b1c0 (    0x18) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b1d8 (     0xc) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b1e4 (     0xc) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b1f0 (   0x3e0) ConnectionConfiguration.resolvedURL.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b5d0 (   0x280) ConnectionConfiguration.usingTLS.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b850 (    0xc8) ConnectionConfiguration.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b918 (     0x4) ConnectionProtocolTechnology.rawValue.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6b91c (   0x2c0) ConnectionConfiguration.resolvedPort.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bbdc (    0x24) ConnectionProtocolTechnology.init(rawValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc00 (     0xc) protocol witness for static Equatable.== infix(_:_:) in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc0c (     0x8) protocol witness for Hashable.hashValue.getter in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc14 (     0x8) protocol witness for Hashable.hash(into:) in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc1c (     0x8) protocol witness for Hashable._rawHashValue(seed:) in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc24 (    0x34) protocol witness for RawRepresentable.init(rawValue:) in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc58 (     0xc) protocol witness for RawRepresentable.rawValue.getter in conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bc64 (   0x114) static ConnectionConfiguration.default.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bd78 (   0x148) ConnectionConfiguration.init(connectionProtocolTechnology:assistantIdentifier:peerAssistantIdentifier:connectionId:remoteHost:languageCode:prefersWWAN:skipPeer:useWiFiHint:skipPeerErrorReason:forceReconnect:forceOnDeviceOnlyDictation:timeout:useTFO:useTLSSessionTickets:keepAliveIdleTime:keepAliveIntervalTime:keepAliveUnackedCount:retransmissionBasedconnectionDropTime:openConnectionTimeoutTime:staleConnectionTime:imposePolicyBan:connectionPolicy:connectionPolicyRoute:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bec0 (     0x8) ConnectionConfiguration.connectionProtocolTechnology.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bec8 (     0x8) ConnectionConfiguration.connectionProtocolTechnology.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bed0 (    0x20) ConnectionConfiguration.connectionProtocolTechnology.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bef0 (     0x4) ConnectionConfiguration.connectionProtocolTechnology.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bef4 (    0x2c) ConnectionConfiguration.assistantIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bf20 (    0x34) ConnectionConfiguration.assistantIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bf54 (    0x20) ConnectionConfiguration.assistantIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bf74 (     0x4) ConnectionConfiguration.assistantIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bf78 (    0x2c) ConnectionConfiguration.peerAssistantIdentifier.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bfa4 (    0x34) ConnectionConfiguration.peerAssistantIdentifier.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bfd8 (    0x20) ConnectionConfiguration.peerAssistantIdentifier.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bff8 (     0x4) ConnectionConfiguration.peerAssistantIdentifier.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6bffc (    0x2c) ConnectionConfiguration.connectionId.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c028 (    0x34) ConnectionConfiguration.connectionId.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c05c (    0x20) ConnectionConfiguration.connectionId.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c07c (     0x4) ConnectionConfiguration.connectionId.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c080 (    0x2c) ConnectionConfiguration.remoteHost.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c0ac (    0x34) ConnectionConfiguration.remoteHost.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c0e0 (    0x20) ConnectionConfiguration.remoteHost.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c100 (     0x4) ConnectionConfiguration.remoteHost.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c104 (    0x2c) ConnectionConfiguration.languageCode.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c130 (    0x34) ConnectionConfiguration.languageCode.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c164 (    0x20) ConnectionConfiguration.languageCode.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c184 (     0x4) ConnectionConfiguration.languageCode.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c188 (     0x8) ConnectionConfiguration.prefersWWAN.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c190 (     0x8) ConnectionConfiguration.prefersWWAN.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c198 (    0x20) ConnectionConfiguration.prefersWWAN.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1b8 (     0x4) ConnectionConfiguration.prefersWWAN.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1bc (     0x8) ConnectionConfiguration.skipPeer.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1c4 (     0x8) ConnectionConfiguration.skipPeer.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1cc (    0x20) ConnectionConfiguration.skipPeer.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1ec (     0x4) ConnectionConfiguration.skipPeer.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1f0 (     0x8) ConnectionConfiguration.useWiFiHint.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c1f8 (     0x8) ConnectionConfiguration.useWiFiHint.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c200 (    0x20) ConnectionConfiguration.useWiFiHint.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c220 (     0x4) ConnectionConfiguration.useWiFiHint.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c224 (    0x2c) ConnectionConfiguration.skipPeerErrorReason.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c250 (    0x2c) ConnectionConfiguration.skipPeerErrorReason.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c27c (    0x20) ConnectionConfiguration.skipPeerErrorReason.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c29c (     0x4) ConnectionConfiguration.skipPeerErrorReason.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2a0 (     0x8) ConnectionConfiguration.forceReconnect.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2a8 (     0x8) ConnectionConfiguration.forceReconnect.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2b0 (    0x20) ConnectionConfiguration.forceReconnect.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2d0 (     0x4) ConnectionConfiguration.forceReconnect.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2d4 (     0x8) ConnectionConfiguration.forceOnDeviceOnlyDictation.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2dc (     0x8) ConnectionConfiguration.forceOnDeviceOnlyDictation.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c2e4 (    0x20) ConnectionConfiguration.forceOnDeviceOnlyDictation.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c304 (     0x4) ConnectionConfiguration.forceOnDeviceOnlyDictation.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c308 (     0xc) ConnectionConfiguration.timeout.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c314 (    0x10) ConnectionConfiguration.timeout.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c324 (    0x20) ConnectionConfiguration.timeout.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c344 (     0x4) ConnectionConfiguration.timeout.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c348 (     0x8) ConnectionConfiguration.imposePolicyBan.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c350 (     0x8) ConnectionConfiguration.imposePolicyBan.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c358 (    0x20) ConnectionConfiguration.imposePolicyBan.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c378 (     0x4) ConnectionConfiguration.imposePolicyBan.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c37c (    0x30) ConnectionConfiguration.connectionPolicy.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c3ac (    0x78) ConnectionConfiguration.connectionPolicy.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c424 (    0x20) ConnectionConfiguration.connectionPolicy.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c444 (     0x4) ConnectionConfiguration.connectionPolicy.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c448 (    0x54) ConnectionConfiguration.connectionPolicyRoute.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c49c (    0xa8) ConnectionConfiguration.connectionPolicyRoute.setter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c544 (    0x20) ConnectionConfiguration.connectionPolicyRoute.modify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c564 (     0x4) ConnectionConfiguration.connectionPolicyRoute.modify [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c568 (     0x4) base witness table accessor for Equatable in ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c56c (    0x4c) lazy protocol witness table accessor for type ConnectionProtocolTechnology and conformance ConnectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c5b8 (    0x10) type metadata accessor for ConnectionProtocolTechnology [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c5c8 (    0x34) initializeBufferWithCopyOfBuffer for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c5fc (    0xb0) destroy for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c6ac (   0x254) initializeWithCopy for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6c900 (   0x4cc) assignWithCopy for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6cdcc (    0x54) outlined destroy of ConnectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6ce20 (    0x54) outlined destroy of ConnectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6ce74 (     0x8) __swift_memcpy434_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6ce7c (   0x2bc) assignWithTake for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d138 (    0x54) getEnumTagSinglePayload for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d18c (    0xc8) storeEnumTagSinglePayload for ConnectionConfiguration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d254 (    0x10) type metadata accessor for ConnectionConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d264 (    0x5c) outlined destroy of URL? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d2c0 (     0x4) NSComparisonResult.rawValue.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d2c4 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d2e0 (    0x30) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d310 (    0x28) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d338 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d348 (    0x28) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d370 (    0x1c) OUTLINED_FUNCTION_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d38c (    0x18) OUTLINED_FUNCTION_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d3a4 (    0x18) OUTLINED_FUNCTION_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d3bc (    0x18) OUTLINED_FUNCTION_8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d3d4 (     0xc) OUTLINED_FUNCTION_9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d3e0 (     0xc) OUTLINED_FUNCTION_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d3ec (    0x14) OUTLINED_FUNCTION_11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d400 (    0x14) OUTLINED_FUNCTION_12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d414 (    0x14) OUTLINED_FUNCTION_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d428 (    0x14) OUTLINED_FUNCTION_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d43c (    0x14) OUTLINED_FUNCTION_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d450 (     0xc) OUTLINED_FUNCTION_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000020fb6d45c (    0x14) OUTLINED_FUNCTION_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000020fb6d470 (  0x1990) __TEXT __auth_stubs
                0x000000020fb6d470 (    0x10) DYLD-STUB$$DataProtocol.copyBytes(to:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d480 (    0x10) DYLD-STUB$$URLComponents.init(url:resolvingAgainstBaseURL:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d490 (    0x10) DYLD-STUB$$URLComponents.url.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4a0 (    0x10) DYLD-STUB$$type metadata accessor for URLComponents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4b0 (    0x10) DYLD-STUB$$__DataStorage.init(bytes:length:copy:deallocator:offset:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4c0 (    0x10) DYLD-STUB$$__DataStorage._bytes.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4d0 (    0x10) DYLD-STUB$$__DataStorage._length.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4e0 (    0x10) DYLD-STUB$$__DataStorage._offset.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d4f0 (    0x10) DYLD-STUB$$type metadata accessor for __DataStorage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d500 (    0x10) DYLD-STUB$$_convertErrorToNSError(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d510 (    0x10) DYLD-STUB$$_convertNSErrorToError(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d520 (    0x10) DYLD-STUB$$URL._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d530 (    0x10) DYLD-STUB$$static URL._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d540 (    0x10) DYLD-STUB$$URL.host.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d550 (    0x10) DYLD-STUB$$URL.scheme.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d560 (    0x10) DYLD-STUB$$URL.init(string:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d570 (    0x10) DYLD-STUB$$type metadata accessor for URL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d580 (    0x10) DYLD-STUB$$Data.LargeSlice.ensureUniqueReference() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d590 (    0x10) DYLD-STUB$$Data.Deallocator._deallocator.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5a0 (    0x10) DYLD-STUB$$type metadata accessor for Data.Deallocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5b0 (    0x10) DYLD-STUB$$Data.init(bytesNoCopy:count:deallocator:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5c0 (    0x10) DYLD-STUB$$Data._Representation.init(_:count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5d0 (    0x10) DYLD-STUB$$Data._Representation.init(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5e0 (    0x10) DYLD-STUB$$Data._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d5f0 (    0x10) DYLD-STUB$$static Data._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d600 (    0x10) DYLD-STUB$$Data.init(count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d610 (    0x10) DYLD-STUB$$Data.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d620 (    0x10) DYLD-STUB$$Data.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d630 (    0x10) DYLD-STUB$$Date.description(with:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d640 (    0x10) DYLD-STUB$$Date._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d650 (    0x10) DYLD-STUB$$static Date._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d660 (    0x10) DYLD-STUB$$Date.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d670 (    0x10) DYLD-STUB$$type metadata accessor for Date [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d680 (    0x10) DYLD-STUB$$UUID.init(uuidString:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d690 (    0x10) DYLD-STUB$$UUID.uuidString.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6a0 (    0x10) DYLD-STUB$$UUID._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6b0 (    0x10) DYLD-STUB$$UUID.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6c0 (    0x10) DYLD-STUB$$type metadata accessor for UUID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6d0 (    0x10) DYLD-STUB$$static Locale.current.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6e0 (    0x10) DYLD-STUB$$type metadata accessor for Locale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d6f0 (    0x10) DYLD-STUB$$static _CFObject.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d700 (    0x10) DYLD-STUB$$_CFObject.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d710 (    0x10) DYLD-STUB$$_CFObject.hashValue.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d720 (    0x10) DYLD-STUB$$Logger.logObject.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d730 (    0x10) DYLD-STUB$$type metadata accessor for Logger [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d740 (    0x10) DYLD-STUB$$Logger.init(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d750 (    0x10) DYLD-STUB$$XPC_TYPE_DATA.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d760 (    0x10) DYLD-STUB$$XPC_TYPE_DICTIONARY.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d770 (    0x10) DYLD-STUB$$NWEndpoint.Host.debugDescription.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d780 (    0x10) DYLD-STUB$$type metadata accessor for NWEndpoint.Host [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d790 (    0x10) DYLD-STUB$$NWEndpoint.Host.init(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7a0 (    0x10) DYLD-STUB$$NWEndpoint.Port.init(rawValue:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7b0 (    0x10) DYLD-STUB$$NWEndpoint.Port.rawValue.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7c0 (    0x10) DYLD-STUB$$type metadata accessor for NWEndpoint.Port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7d0 (    0x10) DYLD-STUB$$type metadata accessor for NWEndpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7e0 (    0x10) DYLD-STUB$$type metadata accessor for NWInterface.InterfaceType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d7f0 (    0x10) DYLD-STUB$$NWInterface.name.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d800 (    0x10) DYLD-STUB$$NWInterface.type.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d810 (    0x10) DYLD-STUB$$NWInterface.index.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d820 (    0x10) DYLD-STUB$$type metadata accessor for NWInterface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d830 (    0x10) DYLD-STUB$$NWConnection.identifier.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d840 (    0x10) DYLD-STUB$$NWConnection.currentPath.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d850 (    0x10) DYLD-STUB$$static NWConnection.ContentContext.defaultMessage.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d860 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.ContentContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d870 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.SendCompletion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d880 (    0x10) DYLD-STUB$$NWConnection.stateUpdateHandler.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d890 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Resolution.endpointCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8a0 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Resolution.preferredEndpoint.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8b0 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Resolution.successfulEndpoint.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8c0 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.EstablishmentReport.Resolution.Source [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8d0 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Resolution.source.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8e0 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Resolution.duration.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d8f0 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.EstablishmentReport.Resolution [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d900 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.handshakes.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d910 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.resolutions.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d920 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.proxyEndpoint.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d930 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.proxyConfigured.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d940 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.previousAttemptCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d950 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.attemptStartedAfterInterval.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d960 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.duration.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d970 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Handshake.definition.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d980 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Handshake.handshakeRTT.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d990 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.Handshake.handshakeDuration.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9a0 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.EstablishmentReport.Handshake [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9b0 (    0x10) DYLD-STUB$$NWConnection.EstablishmentReport.usedProxy.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9c0 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.EstablishmentReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9d0 (    0x10) DYLD-STUB$$NWConnection.viabilityUpdateHandler.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9e0 (    0x10) DYLD-STUB$$NWConnection.betterPathUpdateHandler.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6d9f0 (    0x10) DYLD-STUB$$NWConnection.requestEstablishmentReport(queue:completion:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da00 (    0x10) DYLD-STUB$$NWConnection.nw.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da10 (    0x10) DYLD-STUB$$dispatch thunk of NWConnection.__allocating_init(to:using:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da20 (    0x10) DYLD-STUB$$NWConnection.send(content:contentContext:isComplete:completion:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da30 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection.State [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da40 (    0x10) DYLD-STUB$$NWConnection.start(queue:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da50 (    0x10) DYLD-STUB$$NWConnection.cancel() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da60 (    0x10) DYLD-STUB$$NWConnection.receive(minimumIncompleteLength:maximumLength:completion:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da70 (    0x10) DYLD-STUB$$type metadata accessor for NWConnection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da80 (    0x10) DYLD-STUB$$type metadata accessor for NWParameters.ServiceClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6da90 (    0x10) DYLD-STUB$$NWParameters.serviceClass.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6daa0 (    0x10) DYLD-STUB$$NWParameters.nw.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dab0 (    0x10) DYLD-STUB$$NWParameters.__allocating_init(tls:tcp:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dac0 (    0x10) DYLD-STUB$$type metadata accessor for NWParameters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dad0 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dae0 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6daf0 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db00 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db10 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveCount.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db20 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db30 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveInterval.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db40 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.keepaliveInterval.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db50 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.connectionDropTime.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db60 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTCP.Options.noDelay.setter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db70 (    0x10) DYLD-STUB$$NWProtocolTCP.Options.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db80 (    0x10) DYLD-STUB$$type metadata accessor for NWProtocolTCP.Options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6db90 (    0x10) DYLD-STUB$$dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dba0 (    0x10) DYLD-STUB$$NWProtocolTLS.Options.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dbb0 (    0x10) DYLD-STUB$$type metadata accessor for NWProtocolTLS.Options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dbc0 (    0x10) DYLD-STUB$$NWProtocolDefinition.name.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dbd0 (    0x10) DYLD-STUB$$NWPath.isExpensive.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dbe0 (    0x10) DYLD-STUB$$NWPath.supportsDNS.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dbf0 (    0x10) DYLD-STUB$$NWPath.supportsIPv4.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc00 (    0x10) DYLD-STUB$$NWPath.supportsIPv6.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc10 (    0x10) DYLD-STUB$$NWPath.isConstrained.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc20 (    0x10) DYLD-STUB$$NWPath.availableInterfaces.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc30 (    0x10) DYLD-STUB$$type metadata accessor for NWPath.Status [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc40 (    0x10) DYLD-STUB$$NWPath.status.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc50 (    0x10) DYLD-STUB$$NWPath.gateways.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc60 (    0x10) DYLD-STUB$$type metadata accessor for NWPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc70 (    0x10) DYLD-STUB$$type metadata accessor for NWError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc80 (    0x10) DYLD-STUB$$type metadata accessor for DispatchTimeInterval [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dc90 (    0x10) DYLD-STUB$$type metadata accessor for DispatchWorkItemFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dca0 (    0x10) DYLD-STUB$$static DispatchQoS.unspecified.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dcb0 (    0x10) DYLD-STUB$$static DispatchQoS.utility.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dcc0 (    0x10) DYLD-STUB$$type metadata accessor for DispatchQoS [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dcd0 (    0x10) DYLD-STUB$$DispatchData._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dce0 (    0x10) DYLD-STUB$$DispatchData.init(bytes:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dcf0 (    0x10) DYLD-STUB$$DispatchData.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd00 (    0x10) DYLD-STUB$$type metadata accessor for DispatchData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd10 (    0x10) DYLD-STUB$$static DispatchTime.now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd20 (    0x10) DYLD-STUB$$DispatchTime.advanced(by:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd30 (    0x10) DYLD-STUB$$type metadata accessor for DispatchTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd40 (    0x10) DYLD-STUB$$DispatchWorkItem.init(flags:block:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd50 (    0x10) DYLD-STUB$$type metadata accessor for DispatchWorkItem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd60 (    0x10) DYLD-STUB$$+ infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd70 (    0x10) DYLD-STUB$$Dictionary._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd80 (    0x10) DYLD-STUB$$Dictionary.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dd90 (    0x10) DYLD-STUB$$Dictionary.init(dictionaryLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dda0 (    0x10) DYLD-STUB$$BidirectionalCollection<>.joined(separator:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ddb0 (    0x10) DYLD-STUB$$String._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ddc0 (    0x10) DYLD-STUB$$static String._conditionallyBridgeFromObjectiveC(_:result:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ddd0 (    0x10) DYLD-STUB$$static String._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dde0 (    0x10) DYLD-STUB$$String.init<A>(describing:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ddf0 (    0x10) DYLD-STUB$$String.lowercased() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de00 (    0x10) DYLD-STUB$$String.utf8CString.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de10 (    0x10) DYLD-STUB$$String.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de20 (    0x10) DYLD-STUB$$String.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de30 (    0x10) DYLD-STUB$$String.init(cString:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de40 (    0x10) DYLD-STUB$$String.UTF8View._foreignCount() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de50 (    0x10) DYLD-STUB$$String.hasPrefix(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de60 (    0x10) DYLD-STUB$$String.hasSuffix(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de70 (    0x10) DYLD-STUB$$String.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de80 (    0x10) DYLD-STUB$$specialized Array._makeUniqueAndReserveCapacityIfNotUnique() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6de90 (    0x10) DYLD-STUB$$Array._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dea0 (    0x10) DYLD-STUB$$static Array._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6deb0 (    0x10) DYLD-STUB$$Array.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dec0 (    0x10) DYLD-STUB$$specialized Array._endMutation() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ded0 (    0x10) DYLD-STUB$$specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dee0 (    0x10) DYLD-STUB$$static Array._allocateBufferUninitialized(minimumCapacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6def0 (    0x10) DYLD-STUB$$specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df00 (    0x10) DYLD-STUB$$Bool._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df10 (    0x10) DYLD-STUB$$Double._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df20 (    0x10) DYLD-STUB$$static Double._conditionallyBridgeFromObjectiveC(_:result:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df30 (    0x10) DYLD-STUB$$Double.write<A>(to:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df40 (    0x10) DYLD-STUB$$Set.Iterator.init(_cocoa:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df50 (    0x10) DYLD-STUB$$Int.init(truncating:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df60 (    0x10) DYLD-STUB$$static Int._conditionallyBridgeFromObjectiveC(_:result:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df70 (    0x10) DYLD-STUB$$static os_log_type_t.info.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df80 (    0x10) DYLD-STUB$$static os_log_type_t.debug.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6df90 (    0x10) DYLD-STUB$$static os_log_type_t.error.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dfa0 (    0x10) DYLD-STUB$$static os_log_type_t.default.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dfb0 (    0x10) DYLD-STUB$$OS_dispatch_group.notify(qos:flags:queue:execute:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dfc0 (    0x10) DYLD-STUB$$OS_dispatch_group.notify(queue:work:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dfd0 (    0x10) DYLD-STUB$$type metadata accessor for OS_dispatch_queue.Attributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dfe0 (    0x10) DYLD-STUB$$OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6dff0 (    0x10) DYLD-STUB$$type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e000 (    0x10) DYLD-STUB$$OS_dispatch_queue.async(group:qos:flags:execute:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e010 (    0x10) DYLD-STUB$$OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e020 (    0x10) DYLD-STUB$$type metadata accessor for OS_dispatch_source.TimerFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e030 (    0x10) DYLD-STUB$$static OS_dispatch_source.makeTimerSource(flags:queue:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e040 (    0x10) DYLD-STUB$$OS_dispatch_source.setEventHandler(qos:flags:handler:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e050 (    0x10) DYLD-STUB$$OS_dispatch_source.cancel() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e060 (    0x10) DYLD-STUB$$OS_dispatch_source.resume() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e070 (    0x10) DYLD-STUB$$OS_dispatch_source_timer.schedule(deadline:repeating:leeway:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e080 (    0x10) DYLD-STUB$$static NSObject.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e090 (    0x10) DYLD-STUB$$OS_os_log.init(subsystem:category:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0a0 (    0x10) DYLD-STUB$$type metadata accessor for Optional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0b0 (    0x10) DYLD-STUB$$UnsafeMutableRawBufferPointer.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0c0 (    0x10) DYLD-STUB$$StringProtocol.caseInsensitiveCompare<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0d0 (    0x10) DYLD-STUB$$StringProtocol.contains<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0e0 (    0x10) DYLD-STUB$$_bridgeAnyObjectToAny(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e0f0 (    0x10) DYLD-STUB$$dispatch thunk of SetAlgebra.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e100 (    0x10) DYLD-STUB$$_HashTable.previousHole(before:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e110 (    0x10) DYLD-STUB$$_HashTable.nextHole(atOrAfter:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e120 (    0x10) DYLD-STUB$$__CocoaSet.startIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e130 (    0x10) DYLD-STUB$$__CocoaSet.makeIterator() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e140 (    0x10) DYLD-STUB$$static __CocoaSet.Index.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e150 (    0x10) DYLD-STUB$$__CocoaSet.Index.age.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e160 (    0x10) DYLD-STUB$$__CocoaSet.Index.element.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e170 (    0x10) DYLD-STUB$$__CocoaSet.count.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e180 (    0x10) DYLD-STUB$$__CocoaSet.member(for:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e190 (    0x10) DYLD-STUB$$__CocoaSet.element(at:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1a0 (    0x10) DYLD-STUB$$__CocoaSet.Iterator.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1b0 (    0x10) DYLD-STUB$$__CocoaSet.contains(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1c0 (    0x10) DYLD-STUB$$__CocoaSet.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1d0 (    0x10) DYLD-STUB$$AnyHashable._rawHashValue(seed:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1e0 (    0x10) DYLD-STUB$$static AnyHashable.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e1f0 (    0x10) DYLD-STUB$$AnyHashable.init<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e200 (    0x10) DYLD-STUB$$static _SetStorage.copy(original:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e210 (    0x10) DYLD-STUB$$static _SetStorage.resize(original:capacity:move:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e220 (    0x10) DYLD-STUB$$static _SetStorage.convert(_:capacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e230 (    0x10) DYLD-STUB$$_StringGuts.grow(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e240 (    0x10) DYLD-STUB$$_StringGuts.copyUTF8(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e250 (    0x10) DYLD-STUB$$specialized _ArrayBuffer._getElementSlowPath(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e260 (    0x10) DYLD-STUB$$_StringObject.sharedUTF8.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e270 (    0x10) DYLD-STUB$$_print_unlocked<A, B>(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e280 (    0x10) DYLD-STUB$$_NativeDictionary.ensureUnique(isUnique:capacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e290 (    0x10) DYLD-STUB$$_NativeDictionary._delete(at:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2a0 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2b0 (    0x10) DYLD-STUB$$static _DictionaryStorage.resize(original:capacity:move:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2c0 (    0x10) DYLD-STUB$$static _DictionaryStorage.allocate(capacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2d0 (    0x10) DYLD-STUB$$_findStringSwitchCase(cases:string:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2e0 (    0x10) DYLD-STUB$$_minimumMergeRunLength(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e2f0 (    0x10) DYLD-STUB$$dispatch thunk of CustomStringConvertible.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e300 (    0x10) DYLD-STUB$$_stringCompareWithSmolCheck(_:_:expecting:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e310 (    0x10) DYLD-STUB$$_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e320 (    0x10) DYLD-STUB$$ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e330 (    0x10) DYLD-STUB$$KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e340 (    0x10) DYLD-STUB$$Error._getEmbeddedNSError() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e350 (    0x10) DYLD-STUB$$Error._code.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e360 (    0x10) DYLD-STUB$$Error._domain.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e370 (    0x10) DYLD-STUB$$Error._userInfo.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e380 (    0x10) DYLD-STUB$$static Hasher._hash(seed:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e390 (    0x10) DYLD-STUB$$Hasher.init(_seed:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3a0 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3b0 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3c0 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3d0 (    0x10) DYLD-STUB$$Hasher._finalize() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3e0 (    0x10) DYLD-STUB$$AFIsInternalInstall [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e3f0 (    0x10) DYLD-STUB$$_AFPreferencesShouldUseTFO [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e400 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e410 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e420 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e430 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e440 (    0x10) DYLD-STUB$$_swift_stdlib_bridgeErrorToNSError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e450 (    0x10) DYLD-STUB$$_swift_stdlib_reportUnimplementedInitializer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e460 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e470 (    0x10) DYLD-STUB$$deflateEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e480 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e490 (    0x10) DYLD-STUB$$dispatch_group_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4a0 (    0x10) DYLD-STUB$$dispatch_group_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4b0 (    0x10) DYLD-STUB$$dispatch_group_leave [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4c0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4d0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4e0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e4f0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e500 (    0x10) DYLD-STUB$$inflateEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e510 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e520 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e530 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e540 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e550 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e560 (    0x10) DYLD-STUB$$nw_array_get_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e570 (    0x10) DYLD-STUB$$nw_array_get_object_at_index [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e580 (    0x10) DYLD-STUB$$nw_connection_copy_attempted_endpoint_array [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e590 (    0x10) DYLD-STUB$$nw_connection_copy_connected_remote_endpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5a0 (    0x10) DYLD-STUB$$nw_connection_copy_protocol_metadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5b0 (    0x10) DYLD-STUB$$nw_connection_copy_tcp_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5c0 (    0x10) DYLD-STUB$$nw_connection_fillout_tcp_statistics [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5d0 (    0x10) DYLD-STUB$$nw_connection_multipath_copy_subflow_counts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5e0 (    0x10) DYLD-STUB$$nw_connection_multipath_get_primary_subflow_interface_index [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e5f0 (    0x10) DYLD-STUB$$nw_connection_multipath_get_subflow_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e600 (    0x10) DYLD-STUB$$nw_connection_uses_multipath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e610 (    0x10) DYLD-STUB$$nw_context_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e620 (    0x10) DYLD-STUB$$nw_context_set_isolate_protocol_cache [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e630 (    0x10) DYLD-STUB$$nw_context_set_isolate_protocol_stack [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e640 (    0x10) DYLD-STUB$$nw_context_set_privacy_level [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e650 (    0x10) DYLD-STUB$$nw_context_set_scheduling_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e660 (    0x10) DYLD-STUB$$nw_endpoint_create_host [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e670 (    0x10) DYLD-STUB$$nw_endpoint_get_description [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e680 (    0x10) DYLD-STUB$$nw_parameters_set_context [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e690 (    0x10) DYLD-STUB$$nw_parameters_set_data_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6a0 (    0x10) DYLD-STUB$$nw_parameters_set_expired_dns_behavior [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6b0 (    0x10) DYLD-STUB$$nw_parameters_set_indefinite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6c0 (    0x10) DYLD-STUB$$nw_parameters_set_initial_data_payload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6d0 (    0x10) DYLD-STUB$$nw_parameters_set_source_application [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6e0 (    0x10) DYLD-STUB$$nw_parameters_set_tfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e6f0 (    0x10) DYLD-STUB$$nw_parameters_set_tls_session_id [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e700 (    0x10) DYLD-STUB$$nw_parameters_set_traffic_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e710 (    0x10) DYLD-STUB$$nw_path_create_evaluator_for_endpoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e720 (    0x10) DYLD-STUB$$nw_path_evaluator_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e730 (    0x10) DYLD-STUB$$nw_path_evaluator_set_update_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e740 (    0x10) DYLD-STUB$$nw_path_get_status [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e750 (    0x10) DYLD-STUB$$nw_path_uses_interface_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e760 (    0x10) DYLD-STUB$$nw_protocol_copy_tls_definition [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e770 (    0x10) DYLD-STUB$$nw_tls_copy_sec_protocol_metadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e780 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e790 (    0x10) DYLD-STUB$$objc_allocWithZone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7a0 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7b0 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7c0 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7d0 (    0x10) DYLD-STUB$$objc_copyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7e0 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e7f0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e800 (    0x10) DYLD-STUB$$objc_initWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e810 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e820 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e830 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e840 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e850 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e860 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e870 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e880 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e890 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8a0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8b0 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8c0 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8d0 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8e0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e8f0 (    0x10) DYLD-STUB$$sec_protocol_metadata_get_negotiated_tls_protocol_version [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e900 (    0x10) DYLD-STUB$$sec_protocol_options_add_tls_application_protocol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e910 (    0x10) DYLD-STUB$$sec_protocol_options_set_max_tls_protocol_version [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e920 (    0x10) DYLD-STUB$$sec_protocol_options_set_tls_false_start_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e930 (    0x10) DYLD-STUB$$sec_protocol_options_set_tls_resumption_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e940 (    0x10) DYLD-STUB$$sec_protocol_options_set_tls_tickets_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e950 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e960 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e970 (    0x10) DYLD-STUB$$swift_allocError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e980 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e990 (    0x10) DYLD-STUB$$swift_allocateGenericClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9a0 (    0x10) DYLD-STUB$$swift_arrayDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9b0 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9c0 (    0x10) DYLD-STUB$$swift_beginAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9d0 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9e0 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6e9f0 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea00 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea10 (    0x10) DYLD-STUB$$swift_checkMetadataState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea20 (    0x10) DYLD-STUB$$swift_deallocClassInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea30 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea40 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea50 (    0x10) DYLD-STUB$$swift_dynamicCastClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea60 (    0x10) DYLD-STUB$$swift_dynamicCastObjCClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea70 (    0x10) DYLD-STUB$$swift_dynamicCastObjCProtocolConditional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea80 (    0x10) DYLD-STUB$$swift_endAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ea90 (    0x10) DYLD-STUB$$swift_errorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eaa0 (    0x10) DYLD-STUB$$swift_errorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eab0 (    0x10) DYLD-STUB$$swift_getAssociatedTypeWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eac0 (    0x10) DYLD-STUB$$swift_getEnumCaseMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ead0 (    0x10) DYLD-STUB$$swift_getEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eae0 (    0x10) DYLD-STUB$$swift_getForeignTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eaf0 (    0x10) DYLD-STUB$$swift_getGenericMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb00 (    0x10) DYLD-STUB$$swift_getObjCClassFromMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb10 (    0x10) DYLD-STUB$$swift_getObjCClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb20 (    0x10) DYLD-STUB$$swift_getObjectType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb30 (    0x10) DYLD-STUB$$swift_getSingletonMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb40 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb50 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContextInMetadataState2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb60 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb70 (    0x10) DYLD-STUB$$swift_initClassMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb80 (    0x10) DYLD-STUB$$swift_initEnumMetadataMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eb90 (    0x10) DYLD-STUB$$swift_initStackObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eba0 (    0x10) DYLD-STUB$$swift_initStaticObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ebb0 (    0x10) DYLD-STUB$$swift_initStructMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ebc0 (    0x10) DYLD-STUB$$swift_isEscapingClosureAtFileLocation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ebd0 (    0x10) DYLD-STUB$$swift_isUniquelyReferenced_nonNull_native [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ebe0 (    0x10) DYLD-STUB$$swift_lookUpClassMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ebf0 (    0x10) DYLD-STUB$$swift_makeBoxUnique [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec00 (    0x10) DYLD-STUB$$swift_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec10 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec20 (    0x10) DYLD-STUB$$swift_release_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec30 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec40 (    0x10) DYLD-STUB$$swift_retain_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec50 (    0x10) DYLD-STUB$$swift_slowAlloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec60 (    0x10) DYLD-STUB$$swift_slowDealloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec70 (    0x10) DYLD-STUB$$swift_stdlib_random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec80 (    0x10) DYLD-STUB$$swift_storeEnumTagMultiPayload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ec90 (    0x10) DYLD-STUB$$swift_storeEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eca0 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ecb0 (    0x10) DYLD-STUB$$swift_unknownObjectRelease_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ecc0 (    0x10) DYLD-STUB$$swift_unknownObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ecd0 (    0x10) DYLD-STUB$$swift_unknownObjectRetain_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ece0 (    0x10) DYLD-STUB$$swift_unknownObjectWeakAssign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ecf0 (    0x10) DYLD-STUB$$swift_unknownObjectWeakDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed00 (    0x10) DYLD-STUB$$swift_unknownObjectWeakInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed10 (    0x10) DYLD-STUB$$swift_unknownObjectWeakLoadStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed20 (    0x10) DYLD-STUB$$swift_updateClassMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed30 (    0x10) DYLD-STUB$$swift_weakAssign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed40 (    0x10) DYLD-STUB$$swift_weakDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed50 (    0x10) DYLD-STUB$$swift_weakInit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed60 (    0x10) DYLD-STUB$$swift_weakLoadStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed70 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed80 (    0x10) DYLD-STUB$$task_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ed90 (    0x10) DYLD-STUB$$xpc_data_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6eda0 (    0x10) DYLD-STUB$$xpc_data_get_bytes_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6edb0 (    0x10) DYLD-STUB$$xpc_data_get_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6edc0 (    0x10) DYLD-STUB$$xpc_dictionary_apply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6edd0 (    0x10) DYLD-STUB$$xpc_dictionary_get_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6ede0 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000020fb6edf0 (    0x10) DYLD-STUB$$xpc_uint64_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000020fb6ee00 (  0x16e0) __TEXT __objc_methlist
                0x000000020fb6ee00 (   0x188) _OBJC_$_INSTANCE_METHODS_SNLinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x000000020fb6ef88 (   0x110) _OBJC_$_INSTANCE_METHODS_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x000000020fb6f098 (   0x440) _OBJC_$_INSTANCE_METHODS_SNConnectionMetrics [NameNList, MangledNameNList, NList] 
                0x000000020fb6f4d8 (    0x90) _OBJC_$_INSTANCE_METHODS_AceObject(SNSessionObject|SiriNetwork) [NameNList, MangledNameNList, NList] 
                0x000000020fb6f568 (   0x110) _OBJC_$_INSTANCE_METHODS_SNConnection [NameNList, MangledNameNList, NList] 
                0x000000020fb6f678 (    0x30) _OBJC_$_CLASS_METHODS_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x000000020fb6f6a8 (    0xf0) _OBJC_$_INSTANCE_METHODS_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x000000020fb6f798 (    0x18) _OBJC_$_CLASS_METHODS_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x000000020fb6f7b0 (   0x158) _OBJC_$_INSTANCE_METHODS_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x000000020fb6f908 (    0x78) _OBJC_$_INSTANCE_METHODS_SNConnectionType [NameNList, MangledNameNList, NList] 
                0x000000020fb6f980 (   0x108) _OBJC_$_INSTANCE_METHODS_SNConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x000000020fb6fa88 (    0x50) _OBJC_$_INSTANCE_METHODS_SNNetworkWiFiManager [NameNList, MangledNameNList, NList] 
                0x000000020fb6fad8 (    0xc0) _OBJC_$_INSTANCE_METHODS_SNWiFiRecord [NameNList, MangledNameNList, NList] 
                0x000000020fb6fb98 (   0x1b8) _OBJC_$_INSTANCE_METHODS_SNConnectionInfo [NameNList, MangledNameNList, NList] 
                0x000000020fb6fd50 (    0x30) _OBJC_$_CLASS_METHODS_SNNetworkManagerInternal(SiriNetwork|SiriNetwork1|SiriNetwork2|SiriNetwork3|SiriNetwork4) [NameNList, MangledNameNList, NList] 
                0x000000020fb6fd80 (    0xf0) _OBJC_$_INSTANCE_METHODS_SNNetworkManagerInternal(SiriNetwork|SiriNetwork1|SiriNetwork2|SiriNetwork3|SiriNetwork4) [NameNList, MangledNameNList, NList] 
                0x000000020fb6fe70 (    0x48) _OBJC_$_INSTANCE_METHODS_SNOspreyChannel [NameNList, MangledNameNList, NList] 
                0x000000020fb6feb8 (    0x18) _OBJC_$_CLASS_METHODS_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb6fed0 (   0x140) _OBJC_$_INSTANCE_METHODS_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb70010 (    0x60) _OBJC_$_INSTANCE_METHODS_SNConnectionTypeInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb70070 (    0xf8) _OBJC_$_INSTANCE_METHODS_SNSpeechPacketInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb70168 (    0x18) _OBJC_$_CLASS_METHODS_SNNetworkWiFiManagerInternal(SiriNetwork) [NameNList, MangledNameNList, NList] 
                0x000000020fb70180 (    0x78) _OBJC_$_INSTANCE_METHODS_SNNetworkWiFiManagerInternal(SiriNetwork) [NameNList, MangledNameNList, NList] 
                0x000000020fb701f8 (    0x80) _OBJC_$_INSTANCE_METHODS_SNWiFiRecordInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb70278 (    0x98) _OBJC_$_INSTANCE_METHODS_SNConnectionInternal [NameNList, MangledNameNList, NList] 
                0x000000020fb70310 (   0x1d0) _OBJC_$_INSTANCE_METHODS_SNConnectionInfoInternal [NameNList, MangledNameNList, NList] 
            0x000000020fb704e0 (  0x2438) __TEXT __const
                0x000000020fb704e0 (    0x30) SiriNetworkVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70510 (    0x18) SiriNetworkVersionNumber [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70528 (     0x8) direct field offset for ZlibDataDecompressor.inflateStream [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70530 (    0x74) direct field offset for ZlibDataDecompressor.inflateBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb705a4 (    0x38) protocol conformance descriptor for CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb705dc (    0x3c) protocol conformance descriptor for nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70618 (    0x2c) protocol conformance descriptor for nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70644 (    0x50) protocol conformance descriptor for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70694 (    0x2c) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb706c0 (    0x2c) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb706ec (    0xb4) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb707a0 (    0x10) class metadata base offset for NetworkManager [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb707b0 (    0x28) protocol conformance descriptor for ConnectionConfigurationError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb707d8 (    0x40) protocol conformance descriptor for ConnectionConfigurationError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70818 (    0x40) protocol conformance descriptor for ConnectionConfigurationError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70858 (    0x38) property descriptor for ConnectionConfigurationError.hashValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70890 (     0x4) enum case for ConnectionConfigurationError.noRoutes(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70894 (    0x34) enum case for ConnectionConfigurationError.localRecognitionAndHIPAACompliantEnabled(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb708c8 (    0xe8) protocol conformance descriptor for AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709b0 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709b8 (     0x8) direct field offset for RPCOspreyConnectionProvider.connection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709c0 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709c8 (     0x8) direct field offset for RPCOspreyConnectionProvider.networkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709d0 (     0x8) direct field offset for RPCOspreyConnectionProvider.delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709d8 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709e0 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709e8 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709f0 (     0x8) direct field offset for RPCOspreyConnectionProvider.openCompletion [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb709f8 (     0x8) direct field offset for RPCOspreyConnectionProvider.readWriteCounter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a00 (     0x8) direct field offset for RPCOspreyConnectionProvider.betterPathAvailableNotificationMachTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a08 (     0x8) direct field offset for RPCOspreyConnectionProvider.betterPathAvailable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a10 (     0x8) direct field offset for RPCOspreyConnectionProvider.scopeToWiFiOnly [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a18 (     0x8) direct field offset for RPCOspreyConnectionProvider.isViable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a20 (     0x8) direct field offset for RPCOspreyConnectionProvider.isCancelled [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a28 (     0x8) direct field offset for RPCOspreyConnectionProvider.isMPTCP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a30 (     0x8) direct field offset for RPCOspreyConnectionProvider.mostRecentErrorFromConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a38 (     0x8) direct field offset for RPCOspreyConnectionProvider.openTimeoutTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a40 (     0x8) direct field offset for RPCOspreyConnectionProvider.staleConnectionTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a48 (     0x8) direct field offset for RPCOspreyConnectionProvider.connectionUnviableTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a50 (    0x3c) direct field offset for RPCOspreyConnectionProvider.networkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70a8c (    0x28) protocol conformance descriptor for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ab4 (    0x40) protocol conformance descriptor for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70af4 (    0x1c) protocol conformance descriptor for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70b10 (    0x4c) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70b5c (    0x54) protocol conformance descriptor for ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bb0 (    0x28) protocol conformance descriptor for ConnectionTCPInfoMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bd8 (     0x4) property descriptor for ConnectionTCPInfoMetrics.interfaceName [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bdc (     0x4) property descriptor for ConnectionTCPInfoMetrics.connectionIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70be0 (     0x4) property descriptor for ConnectionTCPInfoMetrics.connectionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70be4 (     0x4) property descriptor for ConnectionTCPInfoMetrics.bytesReceived [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70be8 (     0x4) property descriptor for ConnectionTCPInfoMetrics.bytesRetransmitted [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bec (     0x4) property descriptor for ConnectionTCPInfoMetrics.bytesSent [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bf0 (     0x4) property descriptor for ConnectionTCPInfoMetrics.bytesUnacked [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bf4 (     0x4) property descriptor for ConnectionTCPInfoMetrics.duplicateBytesReceived [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bf8 (     0x4) property descriptor for ConnectionTCPInfoMetrics.outOfOrderBytesReceived [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70bfc (     0x4) property descriptor for ConnectionTCPInfoMetrics.packetsReceived [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c00 (     0x4) property descriptor for ConnectionTCPInfoMetrics.packetsSent [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c04 (     0x4) property descriptor for ConnectionTCPInfoMetrics.rttBest [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c08 (     0x4) property descriptor for ConnectionTCPInfoMetrics.rttCurrent [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c0c (     0x4) property descriptor for ConnectionTCPInfoMetrics.rttSmoothed [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c10 (     0x4) property descriptor for ConnectionTCPInfoMetrics.rttVariance [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c14 (     0x4) property descriptor for ConnectionTCPInfoMetrics.sendBandwidth [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c18 (     0x4) property descriptor for ConnectionTCPInfoMetrics.sendBufferBytes [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c1c (     0x4) property descriptor for ConnectionTCPInfoMetrics.synRetransmits [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c20 (     0x4) property descriptor for ConnectionTCPInfoMetrics.tfoSynDataAcked [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c24 (     0x4) property descriptor for ConnectionTCPInfoMetrics.subflowSwitchCount [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c28 (    0x38) property descriptor for ConnectionTCPInfoMetrics.debugDescription [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70c60 (    0x40) direct field offset for SafeCallback.maybeObj [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ca0 (    0x6c) generic type metadata pattern for SafeCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70d0c (    0x48) protocol conformance descriptor for SiriNetworkOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70d54 (    0x38) protocol conformance descriptor for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70d8c (    0x38) protocol conformance descriptor for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70dc4 (    0x40) protocol conformance descriptor for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e04 (    0x3c) protocol conformance descriptor for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e40 (     0x8) direct field offset for NetworkConnectionProvider.connection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e48 (     0x8) direct field offset for NetworkConnectionProvider.connectionMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e50 (     0x8) direct field offset for NetworkConnectionProvider.networkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e58 (     0x8) direct field offset for NetworkConnectionProvider.delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e60 (     0x8) direct field offset for NetworkConnectionProvider.connectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e68 (     0x8) direct field offset for NetworkConnectionProvider.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e70 (     0x8) direct field offset for NetworkConnectionProvider.connectionQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e78 (     0x8) direct field offset for NetworkConnectionProvider.openCompletion [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e80 (     0x8) direct field offset for NetworkConnectionProvider.readWriteCounter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e88 (     0x8) direct field offset for NetworkConnectionProvider.betterPathAvailableNotificationMachTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e90 (     0x8) direct field offset for NetworkConnectionProvider.betterPathAvailable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70e98 (     0x8) direct field offset for NetworkConnectionProvider.scopeToWiFiOnly [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ea0 (     0x8) direct field offset for NetworkConnectionProvider.isViable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ea8 (     0x8) direct field offset for NetworkConnectionProvider.isCancelled [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70eb0 (     0x8) direct field offset for NetworkConnectionProvider.isMPTCP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70eb8 (     0x8) direct field offset for NetworkConnectionProvider.wasConnected [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ec0 (     0x8) direct field offset for NetworkConnectionProvider.mostRecentErrorFromConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ec8 (     0x8) direct field offset for NetworkConnectionProvider.openTimeoutTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ed0 (     0x8) direct field offset for NetworkConnectionProvider.staleConnectionTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ed8 (     0x8) direct field offset for NetworkConnectionProvider.connectionUnviableTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ee0 (     0x8) direct field offset for NetworkConnectionProvider.networkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ee8 (     0x8) direct field offset for NetworkConnectionProvider.stateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ef0 (     0x8) direct field offset for NetworkConnectionProvider.viabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ef8 (    0x90) direct field offset for NetworkConnectionProvider.betterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70f88 (    0x28) protocol conformance descriptor for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70fb0 (    0x40) protocol conformance descriptor for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb70ff0 (    0x7c) protocol conformance descriptor for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7106c (    0x34) protocol conformance descriptor for ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710a0 (     0x4) property descriptor for ConnectionPolicy.policyId [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710a4 (     0x4) property descriptor for ConnectionPolicy.disableMPTCP [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710a8 (     0x4) property descriptor for ConnectionPolicy.enableOptimisticDNS [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710ac (     0x4) property descriptor for ConnectionPolicy.enableTLS13 [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710b0 (     0x4) property descriptor for ConnectionPolicy.enableTLS13ZeroRTT [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710b4 (     0x4) property descriptor for ConnectionPolicy.enableTcpFastOpen [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710b8 (     0x4) property descriptor for ConnectionPolicy.enabled [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710bc (     0x4) property descriptor for ConnectionPolicy.globalTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710c0 (     0x4) property descriptor for ConnectionPolicy.maxRoutesTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710c0 (     0x4) property descriptor for ConnectionPolicy.delayBetweenScheduledRoutes [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb710c4 (     0x4) property descriptor for ConnectionPolicy.mptcpFallbackPort [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710c8 (     0x4) property descriptor for ConnectionPolicy.timeToLive [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710cc (    0x2c) property descriptor for ConnectionPolicy.routes [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb710f8 (    0x40) protocol conformance descriptor for ConnectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71138 (    0x28) protocol conformance descriptor for ConnectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71160 (    0xf8) property descriptor for ConnectionConfiguration.hashValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71258 (    0x64) class metadata base offset for NetworkAnalytics [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb712bc (    0x64) protocol conformance descriptor for ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71320 (     0x4) property descriptor for ConnectionMetrics.connectionIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71324 (     0x4) property descriptor for ConnectionMetrics.connectionMethodHistory [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71328 (     0x4) property descriptor for ConnectionMetrics.policyId [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7132c (     0x4) property descriptor for ConnectionMetrics.metricsCount [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71330 (     0x4) property descriptor for ConnectionMetrics.attemptedEndpoints [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71334 (     0x4) property descriptor for ConnectionMetrics.connectionEdgeID [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71338 (     0x4) property descriptor for ConnectionMetrics.connectionEdgeType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7133c (     0x4) property descriptor for ConnectionMetrics.connectionFallbackReason [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71340 (     0x4) property descriptor for ConnectionMetrics.connectionDelay [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71344 (     0x4) property descriptor for ConnectionMetrics.firstTxByteDelay [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71348 (     0x4) property descriptor for ConnectionMetrics.wifiChannelInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7134c (     0x4) property descriptor for ConnectionMetrics.simSubscriptions [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71350 (     0x4) property descriptor for ConnectionMetrics.idsLastMessageDelay [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71354 (     0x4) property descriptor for ConnectionMetrics.idsLastSocketDelay [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71358 (    0x60) property descriptor for ConnectionMetrics.idsLastSocketOpenError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb713b8 (    0x18) protocol conformance descriptor for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb713d0 (    0x28) protocol conformance descriptor for ConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb713f8 (    0x40) protocol conformance descriptor for ConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71438 (    0x38) protocol conformance descriptor for ConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71470 (    0x20) property descriptor for ConnectionType.stringRawValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71470 (    0x20) property descriptor for ConnectionType.rawValue [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb71490 (     0x4) enum case for ConnectionType.unknown(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71494 (     0x4) enum case for ConnectionType.wifi(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71498 (     0x4) enum case for ConnectionType.wwan(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7149c (     0x4) enum case for ConnectionType.utran(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714a0 (     0x4) enum case for ConnectionType.cdma1x(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714a4 (     0x4) enum case for ConnectionType.gprs(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714a8 (     0x4) enum case for ConnectionType.edge(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714ac (     0x4) enum case for ConnectionType.wcdma(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714b0 (     0x4) enum case for ConnectionType.hsdpa(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714b4 (     0x4) enum case for ConnectionType.hsupa(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714b8 (     0x4) enum case for ConnectionType.cdmaevdorev0(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714bc (     0x4) enum case for ConnectionType.cdmaevdorevA(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714c0 (     0x4) enum case for ConnectionType.cdmaevdorevB(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714c4 (     0x4) enum case for ConnectionType.hrpd(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714c8 (     0x4) enum case for ConnectionType.lte(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714cc (     0x4) enum case for ConnectionType.nrnsa(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714d0 (     0x4) enum case for ConnectionType.nr(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714d4 (     0x4) enum case for ConnectionType.mptcp(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714d8 (     0x4) enum case for ConnectionType.ledbelly(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714dc (     0x4) enum case for ConnectionType.ids(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714e0 (     0x4) enum case for ConnectionType.pop(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714e4 (     0x4) enum case for ConnectionType.florence(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714e8 (     0x4) enum case for ConnectionType.local(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb714ec (    0x1c) enum case for ConnectionType.nwmptcp(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71508 (    0xe8) class metadata base offset for ConnectionTypeWrapper [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb715f0 (    0x44) protocol conformance descriptor for AceObject [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71634 (    0x10) protocol conformance descriptor for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71644 (    0x14) protocol conformance descriptor for NWConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71658 (    0x30) protocol conformance descriptor for SpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71688 (    0x40) class metadata base offset for SpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb716c8 (    0x30) protocol conformance descriptor for ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb716f8 (    0x38) protocol conformance descriptor for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71730 (    0x40) protocol conformance descriptor for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71770 (    0x58) protocol conformance descriptor for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb717c8 (    0x88) class metadata base offset for NetworkWiFiManager [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71850 (     0x8) direct field offset for QueueMonitorManager.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71858 (    0x30) direct field offset for QueueMonitorManager.observers [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71888 (     0x8) direct field offset for QueueObserver.queueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71890 (    0x18) direct field offset for QueueObserver.dispatchSourceTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb718a8 (     0x8) direct field offset for QueueMonitor.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb718b0 (     0x8) direct field offset for QueueMonitor.watcher [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb718b8 (     0x8) direct field offset for QueueMonitor.maxToleranceInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb718c0 (    0x88) direct field offset for QueueMonitor.queueIdentifier [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71948 (    0x54) protocol conformance descriptor for ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7199c (    0x2c) protocol conformance descriptor for ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb719c8 (    0x40) protocol conformance descriptor for ConnectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71a08 (    0x28) protocol conformance descriptor for ConnectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71a30 (    0xd0) property descriptor for ConnectionPolicyRoute.hashValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71b00 (    0x28) protocol conformance descriptor for WiFiAssertionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71b28 (    0x40) protocol conformance descriptor for WiFiAssertionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71b68 (    0x38) protocol conformance descriptor for WiFiAssertionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71ba0 (    0x28) protocol conformance descriptor for WiFiRecord [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bc8 (     0x4) property descriptor for WiFiRecord.debugDescription [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bc8 (     0x4) property descriptor for WiFiAssertionType.rawValue [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb71bcc (     0x4) property descriptor for WiFiRecord.rssi [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bd0 (     0x4) property descriptor for WiFiRecord.snr [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bd4 (     0x4) property descriptor for WiFiRecord.cca [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bd8 (     0x4) property descriptor for WiFiRecord.channelInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71bdc (     0x4) property descriptor for WiFiRecord.phyMode [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71be0 (     0x4) property descriptor for WiFiRecord.isCaptive [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71be4 (    0x30) property descriptor for WiFiRecord.timestamp [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71c14 (     0x4) enum case for WiFiAssertionType.background(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71c18 (     0x4) enum case for WiFiAssertionType.directToCloud(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71c1c (    0x64) enum case for WiFiAssertionType.sidekick(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71c80 (    0x3c) class metadata base offset for WiFiRecordRepresentation [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71cbc (    0x60) protocol conformance descriptor for ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71d1c (    0x2c) protocol conformance descriptor for ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71d48 (    0x10) protocol conformance descriptor for Connection [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71d58 (    0x28) protocol conformance descriptor for Connection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71d80 (   0x100) class metadata base offset for Connection [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71e80 (    0x60) protocol conformance descriptor for ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71ee0 (    0x28) protocol conformance descriptor for ConnectionPolicyType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71f08 (    0x40) protocol conformance descriptor for ConnectionPolicyType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71f48 (    0x38) protocol conformance descriptor for ConnectionPolicyType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71f80 (    0x28) protocol conformance descriptor for ConnectionPolicyProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71fa8 (    0x40) protocol conformance descriptor for ConnectionPolicyProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb71fe8 (    0x38) protocol conformance descriptor for ConnectionPolicyProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72020 (     0x4) property descriptor for ConnectionPolicyType.stringRawValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72020 (     0x4) property descriptor for ConnectionPolicyType.rawValue [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb72020 (     0x4) property descriptor for ConnectionPolicyRoute.routeHost [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb72020 (     0x4) property descriptor for ConnectionPolicyProtocol.stringRawValue [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb72020 (     0x4) property descriptor for ConnectionPolicyProtocol.rawValue [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000020fb72024 (     0x4) property descriptor for ConnectionPolicyRoute.routeId [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72028 (     0x4) property descriptor for ConnectionPolicyRoute.connectionId [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7202c (     0x4) property descriptor for ConnectionPolicyRoute.priority [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72030 (     0x4) property descriptor for ConnectionPolicyRoute.cname [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72034 (     0x4) property descriptor for ConnectionPolicyRoute.host [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72038 (     0x4) property descriptor for ConnectionPolicyRoute.mptcp [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7203c (     0x4) property descriptor for ConnectionPolicyRoute.resolver [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72040 (     0x4) property descriptor for ConnectionPolicyRoute.resolverProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72044 (     0x4) property descriptor for ConnectionPolicyRoute.timeout [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72048 (    0x30) property descriptor for ConnectionPolicyRoute.type [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72078 (     0x4) enum case for ConnectionPolicyType.unknown(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7207c (     0x4) enum case for ConnectionPolicyType.systemDNS(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72080 (     0x4) enum case for ConnectionPolicyType.customDNS(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72084 (     0x4) enum case for ConnectionPolicyType.ledbelly(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72088 (    0x24) enum case for ConnectionPolicyType.pop(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb720ac (     0x4) enum case for ConnectionPolicyProtocol.unknown(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb720b0 (     0x4) enum case for ConnectionPolicyProtocol.udp(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb720b4 (    0x44) enum case for ConnectionPolicyProtocol.tcp(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb720f8 (    0x10) class metadata base offset for ConnectionInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72108 (    0x40) protocol conformance descriptor for ConnectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72148 (    0x28) protocol conformance descriptor for ConnectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72170 (    0x3c) property descriptor for ConnectionPolicy.hashValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb721ac (    0x84) protocol conformance descriptor for ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72230 (     0x8) direct field offset for ZlibDataCompressor.deflateStream [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72238 (    0x2c) direct field offset for ZlibDataCompressor.deflateBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72264 (    0x1c) protocol conformance descriptor for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72280 (     0x8) direct field offset for BackgroundConnection.delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72288 (     0x8) direct field offset for BackgroundConnection.connectionQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72290 (     0x8) direct field offset for BackgroundConnection.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72298 (     0x8) direct field offset for BackgroundConnection.connectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722a0 (     0x8) direct field offset for BackgroundConnection.connectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722a8 (     0x8) direct field offset for BackgroundConnection.networkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722b0 (     0x8) direct field offset for BackgroundConnection.connectionMethodsSupported [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722b8 (     0x8) direct field offset for BackgroundConnection.secondaryConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722c0 (     0x8) direct field offset for BackgroundConnection.networkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722c8 (     0x8) direct field offset for BackgroundConnection.secondaryConnectionOpenState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722d0 (     0x8) direct field offset for BackgroundConnection.usesProxyConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722d8 (     0x8) direct field offset for BackgroundConnection.isOpened [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722e0 (     0x8) direct field offset for BackgroundConnection.isCancelled [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722e8 (     0x8) direct field offset for BackgroundConnection.hasReportedError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722f0 (     0x8) direct field offset for BackgroundConnection.primaryConnectionViable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb722f8 (     0x8) direct field offset for BackgroundConnection.betterPathAvailable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72300 (     0x8) direct field offset for BackgroundConnection.bufferedInputData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72308 (     0x8) direct field offset for BackgroundConnection.bufferedProviderHeaderOutputData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72310 (     0x8) direct field offset for BackgroundConnection.bufferedGeneralOutputData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72318 (     0x8) direct field offset for BackgroundConnection.bufferedUncompressedData [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72320 (     0x8) direct field offset for BackgroundConnection.safetyNetBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72328 (     0x8) direct field offset for BackgroundConnection.firstStartTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72330 (     0x8) direct field offset for BackgroundConnection.currentStartTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72338 (     0x8) direct field offset for BackgroundConnection.currentOpenTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72340 (     0x8) direct field offset for BackgroundConnection.firstByteReadTime [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72348 (     0x8) direct field offset for BackgroundConnection.startCount [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72350 (     0x8) direct field offset for BackgroundConnection.metricsCount [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72358 (     0x8) direct field offset for BackgroundConnection.maxNumberOfQueueBlockedReports [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72360 (    0x48) direct field offset for BackgroundConnection.currentNumberOfQueueBlockedReports [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb723a8 (    0x38) protocol conformance descriptor for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb723e0 (    0x40) protocol conformance descriptor for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72420 (    0x28) protocol conformance descriptor for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72448 (    0x28) protocol conformance descriptor for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72470 (    0x40) protocol conformance descriptor for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb724b0 (    0x10) protocol conformance descriptor for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb724c0 (    0xe0) protocol conformance descriptor for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb725a0 (     0x8) direct field offset for NetworkWirelessCoexManager.linkRecommendationInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb725a8 (    0x38) direct field offset for NetworkWirelessCoexManager.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb725e0 (    0x28) protocol conformance descriptor for LinkRecommendationInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72608 (     0x4) property descriptor for LinkRecommendationInfo.btPreference [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7260c (     0x4) property descriptor for LinkRecommendationInfo.wifiPreference [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72610 (     0x4) property descriptor for LinkRecommendationInfo.btRSSI [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72614 (     0x4) property descriptor for LinkRecommendationInfo.wifiRSSI [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72618 (     0x4) property descriptor for LinkRecommendationInfo.wifiSNR [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7261c (     0x4) property descriptor for LinkRecommendationInfo.beaconPER [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72620 (     0x4) property descriptor for LinkRecommendationInfo.nwType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72624 (     0x4) property descriptor for LinkRecommendationInfo.wifiCCA [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72628 (     0x4) property descriptor for LinkRecommendationInfo.lsmRecommendationBe [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7262c (     0x4) property descriptor for LinkRecommendationInfo.expectedThroughputVIBE [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72630 (     0x4) property descriptor for LinkRecommendationInfo.packetLifetimeVIBE [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72634 (     0x4) property descriptor for LinkRecommendationInfo.packetLossRateVIBE [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72638 (     0x4) property descriptor for LinkRecommendationInfo.btRetransmissionRateTx [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7263c (     0x4) property descriptor for LinkRecommendationInfo.btRetransmissionRateRx [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72640 (     0x4) property descriptor for LinkRecommendationInfo.btTech [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72644 (     0x4) property descriptor for LinkRecommendationInfo.timeTaken [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72648 (    0x38) property descriptor for LinkRecommendationInfo.debugDescription [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72680 (    0x80) protocol conformance descriptor for NetworkConnectionError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72700 (     0x4) enum case for NetworkConnectionError.connectionUnviable(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72704 (     0x4) enum case for NetworkConnectionError.connectionOptimisticUnviable(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72708 (     0x4) enum case for NetworkConnectionError.readFailure(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7270c (     0x4) enum case for NetworkConnectionError.sendFailure(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72710 (     0x4) enum case for NetworkConnectionError.endpointCreationFailed(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72714 (     0x4) enum case for NetworkConnectionError.connectionIsCancelled(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72718 (     0x4) enum case for NetworkConnectionError.connectionExist(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7271c (     0x4) enum case for NetworkConnectionError.connectionDoesNotExist(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72720 (     0x4) enum case for NetworkConnectionError.connectionDoesNotStarted(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72724 (     0x4) enum case for NetworkConnectionError.connectionClosedBeforeOpen(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72728 (     0x4) enum case for NetworkConnectionError.connectionOpenTimeout(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7272c (     0x4) enum case for NetworkConnectionError.staleConnection(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72730 (     0x4) enum case for NetworkConnectionError.httpHeaderNeedsMoreData(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72734 (    0x38) enum case for NetworkConnectionError.protocolTechonologyUnknown(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7276c (    0x84) protocol conformance descriptor for ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb727f0 (    0x28) protocol conformance descriptor for ConnectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72818 (    0x40) protocol conformance descriptor for ConnectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72858 (    0x38) protocol conformance descriptor for ConnectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72890 (     0x4) property descriptor for ConnectionProtocolTechnology.rawValue [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72894 (     0x4) property descriptor for ConnectionConfiguration.connectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb72898 (     0x4) property descriptor for ConnectionConfiguration.assistantIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7289c (     0x4) property descriptor for ConnectionConfiguration.peerAssistantIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728a0 (     0x4) property descriptor for ConnectionConfiguration.connectionId [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728a4 (     0x4) property descriptor for ConnectionConfiguration.remoteHost [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728a8 (     0x4) property descriptor for ConnectionConfiguration.languageCode [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728ac (     0x4) property descriptor for ConnectionConfiguration.prefersWWAN [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728b0 (     0x4) property descriptor for ConnectionConfiguration.skipPeer [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728b4 (     0x4) property descriptor for ConnectionConfiguration.useWiFiHint [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728b8 (     0x4) property descriptor for ConnectionConfiguration.skipPeerErrorReason [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728bc (     0x4) property descriptor for ConnectionConfiguration.forceReconnect [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728c0 (     0x4) property descriptor for ConnectionConfiguration.forceOnDeviceOnlyDictation [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728c4 (     0x4) property descriptor for ConnectionConfiguration.timeout [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728c8 (     0x4) property descriptor for ConnectionConfiguration.imposePolicyBan [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728cc (     0x4) property descriptor for ConnectionConfiguration.connectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb728d0 (    0x48) property descriptor for ConnectionConfiguration.connectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
            0x000000020fb72920 (  0x3da9) __TEXT __cstring
            0x000000020fb766cc (  0x2404) __TEXT __constg_swiftt
                0x000000020fb766cc (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb766d8 (    0x4c) nominal type descriptor for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76724 (     0x8) method descriptor for ZlibDataDecompressor.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7672c (     0x8) method descriptor for ZlibDataDecompressor.decompressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76734 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76740 (    0x20) nominal type descriptor for nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76760 (    0x20) nominal type descriptor for z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76780 (    0x20) nominal type descriptor for CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb767a0 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb767ac (    0x30) nominal type descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb767dc (    0x20) nominal type descriptor for tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb767fc (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76808 (    0x20) nominal type descriptor for tcp_conn_status [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76828 (    0x20) nominal type descriptor for tcp_conn_status.__Unnamed_union___Anonymous_field0 [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76848 (    0x34) nominal type descriptor for NetworkManager [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7687c (     0x8) method descriptor for NetworkManager.lock.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76884 (     0x8) method descriptor for NetworkManager.lock.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7688c (     0x8) method descriptor for NetworkManager.lock.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76894 (     0x8) method descriptor for NetworkManager.observers.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7689c (     0x8) method descriptor for NetworkManager.observers.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768a4 (     0x8) method descriptor for NetworkManager.observers.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768ac (     0x8) method descriptor for NetworkManager.dataServiceDescriptor.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768b4 (     0x8) method descriptor for NetworkManager.dataServiceDescriptor.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768bc (     0x8) method descriptor for NetworkManager.dataServiceDescriptor.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768c4 (     0x8) method descriptor for NetworkManager.lastDataSubscriptionSlot.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768cc (     0x8) method descriptor for NetworkManager.lastDataSubscriptionSlot.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768d4 (     0x8) method descriptor for NetworkManager.lastDataSubscriptionSlot.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768dc (     0x8) method descriptor for NetworkManager.subscriptionSlotOneStatus.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768e4 (     0x8) method descriptor for NetworkManager.subscriptionSlotOneStatus.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768ec (     0x8) method descriptor for NetworkManager.subscriptionSlotOneStatus.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768f4 (     0x8) method descriptor for NetworkManager.subscriptionSlotTwoStatus.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb768fc (     0x8) method descriptor for NetworkManager.subscriptionSlotTwoStatus.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76904 (     0x8) method descriptor for NetworkManager.subscriptionSlotTwoStatus.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7690c (     0x8) method descriptor for NetworkManager.lastSuccessfulSymptomsFetch.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76914 (     0x8) method descriptor for NetworkManager.lastSuccessfulSymptomsFetch.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7691c (     0x8) method descriptor for NetworkManager.lastSuccessfulSymptomsFetch.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76924 (     0x8) method descriptor for NetworkManager.lastFetchInProgress.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7692c (     0x8) method descriptor for NetworkManager.lastFetchInProgress.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76934 (     0x8) method descriptor for NetworkManager.lastFetchInProgress.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7693c (     0x8) method descriptor for NetworkManager.lastSignalStrength.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76944 (     0x8) method descriptor for NetworkManager.lastSignalStrength.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7694c (     0x8) method descriptor for NetworkManager.lastSignalStrength.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76954 (     0x8) method descriptor for NetworkManager.subscriptionCount.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7695c (     0x8) method descriptor for NetworkManager.subscriptionCount.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76964 (     0x8) method descriptor for NetworkManager.subscriptionCount.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7696c (     0x8) method descriptor for NetworkManager.carrierName.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76974 (     0x8) method descriptor for NetworkManager.carrierName.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7697c (     0x8) method descriptor for NetworkManager.carrierName.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76984 (     0x8) method descriptor for NetworkManager.pathEvaluator.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7698c (     0x8) method descriptor for NetworkManager.pathEvaluator.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76994 (     0x8) method descriptor for NetworkManager.pathEvaluator.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7699c (     0x8) method descriptor for NetworkManager.pathStatus.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769a4 (     0x8) method descriptor for NetworkManager.pathStatus.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769ac (     0x8) method descriptor for NetworkManager.pathStatus.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769b4 (     0x8) method descriptor for NetworkManager.pathUsesCellular.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769bc (     0x8) method descriptor for NetworkManager.pathUsesCellular.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769c4 (     0x8) method descriptor for NetworkManager.pathUsesCellular.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769cc (     0x8) method descriptor for NetworkManager.queue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769d4 (     0x8) method descriptor for NetworkManager.queue.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769dc (     0x8) method descriptor for NetworkManager.queue.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769e4 (     0x8) method descriptor for NetworkManager.networkWiFiManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769ec (     0x8) method descriptor for NetworkManager.networkWiFiManager.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769f4 (     0x8) method descriptor for NetworkManager.networkWiFiManager.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb769fc (     0x8) method descriptor for NetworkManager.networkWirelessCoexManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a04 (     0x8) method descriptor for NetworkManager.networkWirelessCoexManager.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a0c (     0x8) method descriptor for NetworkManager.networkWirelessCoexManager.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a14 (     0x8) method descriptor for NetworkManager.__allocating_init(coreTelephonyClient:queue:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a1c (    0x1c) nominal type descriptor for ConnectionConfigurationError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a38 (    0x1c) nominal type descriptor for AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a54 (    0x28) protocol descriptor for ConnectionProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a7c (     0x8) protocol requirements base descriptor for ConnectionProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a84 (     0x8) base conformance descriptor for ConnectionProviderProtocol: Hashable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a8c (     0x8) associated type descriptor for ConnectionProviderProtocol.ConnectionProtocolType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a94 (     0x8) method descriptor for ConnectionProviderProtocol.connectionIdentifier.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76a9c (     0x8) method descriptor for ConnectionProviderProtocol.connection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76aa4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionMetrics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76aac (     0x8) method descriptor for ConnectionProviderProtocol.connectionMetrics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ab4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionMetrics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76abc (     0x8) method descriptor for ConnectionProviderProtocol.networkManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ac4 (     0x8) method descriptor for ConnectionProviderProtocol.networkManager.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76acc (     0x8) method descriptor for ConnectionProviderProtocol.networkManager.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ad4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionProviderState.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76adc (     0x8) method descriptor for ConnectionProviderProtocol.connectionProviderState.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ae4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionProviderState.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76aec (     0x8) method descriptor for ConnectionProviderProtocol.delegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76af4 (     0x8) method descriptor for ConnectionProviderProtocol.delegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76afc (     0x8) method descriptor for ConnectionProviderProtocol.delegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b04 (     0x8) method descriptor for ConnectionProviderProtocol.connectionConfiguration.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b0c (     0x8) method descriptor for ConnectionProviderProtocol.connectionQueue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b14 (     0x8) method descriptor for ConnectionProviderProtocol.connectionType.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b1c (     0x8) method descriptor for ConnectionProviderProtocol.openCompletion.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b24 (     0x8) method descriptor for ConnectionProviderProtocol.openCompletion.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b2c (     0x8) method descriptor for ConnectionProviderProtocol.openCompletion.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b34 (     0x8) method descriptor for ConnectionProviderProtocol.readWriteCounter.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b3c (     0x8) method descriptor for ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b44 (     0x8) method descriptor for ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b4c (     0x8) method descriptor for ConnectionProviderProtocol.betterPathAvailableNotificationMachTime.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b54 (     0x8) method descriptor for ConnectionProviderProtocol.betterPathAvailable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b5c (     0x8) method descriptor for ConnectionProviderProtocol.scopeToWiFiOnly.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b64 (     0x8) method descriptor for ConnectionProviderProtocol.isViable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b6c (     0x8) method descriptor for ConnectionProviderProtocol.isCancelled.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b74 (     0x8) method descriptor for ConnectionProviderProtocol.isCancelled.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b7c (     0x8) method descriptor for ConnectionProviderProtocol.isCancelled.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b84 (     0x8) method descriptor for ConnectionProviderProtocol.isMPTCP.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b8c (     0x8) method descriptor for ConnectionProviderProtocol.isMPTCP.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b94 (     0x8) method descriptor for ConnectionProviderProtocol.isMPTCP.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76b9c (     0x8) method descriptor for ConnectionProviderProtocol.mostRecentErrorFromConnection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ba4 (     0x8) method descriptor for ConnectionProviderProtocol.openTimeoutTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bac (     0x8) method descriptor for ConnectionProviderProtocol.openTimeoutTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bb4 (     0x8) method descriptor for ConnectionProviderProtocol.openTimeoutTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bbc (     0x8) method descriptor for ConnectionProviderProtocol.openTimeoutTimerInterval.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bc4 (     0x8) method descriptor for ConnectionProviderProtocol.staleConnectionTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bcc (     0x8) method descriptor for ConnectionProviderProtocol.staleConnectionTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bd4 (     0x8) method descriptor for ConnectionProviderProtocol.staleConnectionTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bdc (     0x8) method descriptor for ConnectionProviderProtocol.staleConnectionTimerInterval.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76be4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionUnviableTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bec (     0x8) method descriptor for ConnectionProviderProtocol.connectionUnviableTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bf4 (     0x8) method descriptor for ConnectionProviderProtocol.connectionUnviableTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76bfc (     0x8) method descriptor for ConnectionProviderProtocol.connectionUnviableTimerInterval.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c04 (     0x8) method descriptor for ConnectionProviderProtocol.init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c0c (     0x8) method descriptor for ConnectionProviderProtocol.openConnectionWithInitialPayload(_:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c14 (     0x8) method descriptor for ConnectionProviderProtocol.openCompletionSetup(completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c1c (     0x8) method descriptor for ConnectionProviderProtocol.close() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c24 (     0x8) method descriptor for ConnectionProviderProtocol.cancelConnection() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c2c (     0x8) method descriptor for ConnectionProviderProtocol.closeWithError(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c34 (     0x8) method descriptor for ConnectionProviderProtocol.shouldFallBackFromError(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c3c (     0x8) method descriptor for ConnectionProviderProtocol.send(data:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c44 (     0x8) method descriptor for ConnectionProviderProtocol.readData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c4c (     0x8) method descriptor for ConnectionProviderProtocol.updateConnectionMetricsSnapshotReport() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c54 (     0x8) method descriptor for ConnectionProviderProtocol.updateConnectionMetrics(with:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c5c (    0x1c) protocol descriptor for ConnectionProviderDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c78 (     0x8) protocol requirements base descriptor for ConnectionProviderDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c80 (     0x8) method descriptor for ConnectionProviderDelegate.connectionProvider(_:received:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c88 (     0x8) method descriptor for ConnectionProviderDelegate.connectionProvider(_:receivedViabilityChangeNotification:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c90 (     0x8) method descriptor for ConnectionProviderDelegate.connectionProviderReceivedBetterRouteNotification(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76c98 (    0x10) protocol descriptor for NetworkConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ca8 (     0x8) protocol requirements base descriptor for NetworkConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cb0 (     0x8) method descriptor for NetworkConnectionProtocol.identifier.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cb8 (     0x8) method descriptor for NetworkConnectionProtocol.currentPath.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cc0 (     0x8) method descriptor for NetworkConnectionProtocol.parameters.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cc8 (     0x8) method descriptor for NetworkConnectionProtocol.endpoint.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cd0 (     0x8) method descriptor for NetworkConnectionProtocol.stateUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cd8 (     0x8) method descriptor for NetworkConnectionProtocol.stateUpdateHandler.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ce0 (     0x8) method descriptor for NetworkConnectionProtocol.stateUpdateHandler.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ce8 (     0x8) method descriptor for NetworkConnectionProtocol.viabilityUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cf0 (     0x8) method descriptor for NetworkConnectionProtocol.viabilityUpdateHandler.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76cf8 (     0x8) method descriptor for NetworkConnectionProtocol.viabilityUpdateHandler.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d00 (     0x8) method descriptor for NetworkConnectionProtocol.betterPathUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d08 (     0x8) method descriptor for NetworkConnectionProtocol.betterPathUpdateHandler.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d10 (     0x8) method descriptor for NetworkConnectionProtocol.betterPathUpdateHandler.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d18 (     0x8) method descriptor for NetworkConnectionProtocol.pathUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d20 (     0x8) method descriptor for NetworkConnectionProtocol.pathUpdateHandler.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d28 (     0x8) method descriptor for NetworkConnectionProtocol.pathUpdateHandler.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d30 (     0x8) method descriptor for NetworkConnectionProtocol.init(endpoint:configuration:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d38 (     0x8) method descriptor for NetworkConnectionProtocol.start(queue:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d40 (     0x8) method descriptor for NetworkConnectionProtocol.cancel() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d48 (     0x8) method descriptor for NetworkConnectionProtocol.send(content:contentContext:isComplete:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d50 (     0x8) method descriptor for NetworkConnectionProtocol.receive(minimumIncompleteLength:maximumLength:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d58 (     0x8) method descriptor for NetworkConnectionProtocol.readyEstablishmentReport(queue:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d60 (    0x34) nominal type descriptor for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76d94 (    0x18) method descriptor for RPCOspreyConnectionProvider.connectionIdentifier.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dac (     0x8) method descriptor for RPCOspreyConnectionProvider.connection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76db4 (     0x8) method descriptor for RPCOspreyConnectionProvider.connection.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dbc (     0x8) method descriptor for RPCOspreyConnectionProvider.connection.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dc4 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionMetrics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dcc (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionMetrics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dd4 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionMetrics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ddc (     0x8) method descriptor for RPCOspreyConnectionProvider.networkManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76de4 (     0x8) method descriptor for RPCOspreyConnectionProvider.networkManager.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dec (     0x8) method descriptor for RPCOspreyConnectionProvider.networkManager.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76df4 (     0x8) method descriptor for RPCOspreyConnectionProvider.delegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76dfc (     0x8) method descriptor for RPCOspreyConnectionProvider.delegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e04 (     0x8) method descriptor for RPCOspreyConnectionProvider.delegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e0c (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionProviderState.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e14 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionProviderState.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e1c (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionProviderState.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e24 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionType.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e2c (     0x8) method descriptor for RPCOspreyConnectionProvider.openCompletion.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e34 (     0x8) method descriptor for RPCOspreyConnectionProvider.openCompletion.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e3c (     0x8) method descriptor for RPCOspreyConnectionProvider.openCompletion.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e44 (    0x18) method descriptor for RPCOspreyConnectionProvider.readWriteCounter.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e5c (     0x8) method descriptor for RPCOspreyConnectionProvider.betterPathAvailableNotificationMachTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e64 (     0x8) method descriptor for RPCOspreyConnectionProvider.betterPathAvailableNotificationMachTime.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e6c (     0x8) method descriptor for RPCOspreyConnectionProvider.betterPathAvailableNotificationMachTime.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e74 (    0x18) method descriptor for RPCOspreyConnectionProvider.betterPathAvailable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76e8c (    0x18) method descriptor for RPCOspreyConnectionProvider.scopeToWiFiOnly.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ea4 (    0x18) method descriptor for RPCOspreyConnectionProvider.isViable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ebc (     0x8) method descriptor for RPCOspreyConnectionProvider.isCancelled.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ec4 (     0x8) method descriptor for RPCOspreyConnectionProvider.isCancelled.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ecc (     0x8) method descriptor for RPCOspreyConnectionProvider.isCancelled.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ed4 (     0x8) method descriptor for RPCOspreyConnectionProvider.isMPTCP.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76edc (     0x8) method descriptor for RPCOspreyConnectionProvider.isMPTCP.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ee4 (     0x8) method descriptor for RPCOspreyConnectionProvider.isMPTCP.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76eec (    0x18) method descriptor for RPCOspreyConnectionProvider.mostRecentErrorFromConnection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f04 (     0x8) method descriptor for RPCOspreyConnectionProvider.openTimeoutTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f0c (     0x8) method descriptor for RPCOspreyConnectionProvider.openTimeoutTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f14 (     0x8) method descriptor for RPCOspreyConnectionProvider.openTimeoutTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f1c (     0x8) method descriptor for RPCOspreyConnectionProvider.staleConnectionTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f24 (     0x8) method descriptor for RPCOspreyConnectionProvider.staleConnectionTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f2c (     0x8) method descriptor for RPCOspreyConnectionProvider.staleConnectionTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f34 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionUnviableTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f3c (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionUnviableTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f44 (     0x8) method descriptor for RPCOspreyConnectionProvider.connectionUnviableTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f4c (     0x8) method descriptor for RPCOspreyConnectionProvider.networkAnalytics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f54 (     0x8) method descriptor for RPCOspreyConnectionProvider.networkAnalytics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f5c (     0x8) method descriptor for RPCOspreyConnectionProvider.networkAnalytics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f64 (     0x8) method descriptor for RPCOspreyConnectionProvider.__allocating_init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f6c (     0x8) method descriptor for RPCOspreyConnectionProvider.openConnectionWithInitialPayload(_:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f74 (     0x8) method descriptor for RPCOspreyConnectionProvider.createConnectionWithInitialPayload<A>(_:rpcOspreyConnectionProtocolType:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f7c (     0x8) method descriptor for RPCOspreyConnectionProvider.configureConnectionHandler(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f84 (     0x8) method descriptor for RPCOspreyConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f8c (     0x8) method descriptor for RPCOspreyConnectionProvider.closeWithError(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f94 (     0x8) method descriptor for RPCOspreyConnectionProvider.send(data:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76f9c (     0x8) method descriptor for RPCOspreyConnectionProvider.readData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76fa4 (     0x8) method descriptor for RPCOspreyConnectionProvider.updateConnectionMetrics(with:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76fac (     0x8) method descriptor for RPCOspreyConnectionProvider.updateConnectionMetricsSnapshotReport() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76fb4 (     0x8) method descriptor for RPCOspreyConnectionProvider.hashValue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76fbc (    0x1c) nominal type descriptor for ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76fd8 (    0x1c) nominal type descriptor for ConnectionTCPInfoMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb76ff4 (    0x54) nominal type descriptor for SafeCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77048 (     0x8) method descriptor for SafeCallback.maybeObj.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77050 (     0x8) method descriptor for SafeCallback.maybeObj.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77058 (     0x8) method descriptor for SafeCallback.maybeObj.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77060 (     0x8) method descriptor for SafeCallback.reify(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77068 (     0x8) method descriptor for SafeCallback.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77070 (    0x34) nominal type descriptor for SiriNetworkOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770a4 (     0x8) method descriptor for SiriNetworkOspreyChannel.connectionConfiguration.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770ac (     0x8) method descriptor for SiriNetworkOspreyChannel.connectionConfiguration.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770b4 (     0x8) method descriptor for SiriNetworkOspreyChannel.connectionConfiguration.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770bc (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyClientStreamingContext.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770c4 (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyClientStreamingContext.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770cc (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyClientStreamingContext.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770d4 (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyRequestBuilder.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770dc (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyRequestBuilder.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770e4 (     0x8) method descriptor for SiriNetworkOspreyChannel.ospreyRequestBuilder.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770ec (     0x8) method descriptor for SiriNetworkOspreyChannel.__allocating_init(url:connectionConfiguration:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770f4 (     0x8) method descriptor for SiriNetworkOspreyChannel.send(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb770fc (    0x1c) nominal type descriptor for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77118 (    0x34) nominal type descriptor for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7714c (     0x8) method descriptor for NetworkConnectionProvider.connectionIdentifier.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77154 (     0x8) method descriptor for NetworkConnectionProvider.connection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7715c (     0x8) method descriptor for NetworkConnectionProvider.connection.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77164 (     0x8) method descriptor for NetworkConnectionProvider.connection.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7716c (     0x8) method descriptor for NetworkConnectionProvider.connectionMetrics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77174 (     0x8) method descriptor for NetworkConnectionProvider.connectionMetrics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7717c (     0x8) method descriptor for NetworkConnectionProvider.connectionMetrics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77184 (     0x8) method descriptor for NetworkConnectionProvider.networkManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7718c (     0x8) method descriptor for NetworkConnectionProvider.networkManager.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77194 (     0x8) method descriptor for NetworkConnectionProvider.networkManager.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7719c (     0x8) method descriptor for NetworkConnectionProvider.delegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771a4 (     0x8) method descriptor for NetworkConnectionProvider.delegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771ac (     0x8) method descriptor for NetworkConnectionProvider.delegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771b4 (     0x8) method descriptor for NetworkConnectionProvider.connectionProviderState.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771bc (     0x8) method descriptor for NetworkConnectionProvider.connectionProviderState.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771c4 (     0x8) method descriptor for NetworkConnectionProvider.connectionProviderState.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771cc (     0x8) method descriptor for NetworkConnectionProvider.connectionType.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771d4 (     0x8) method descriptor for NetworkConnectionProvider.openCompletion.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771dc (     0x8) method descriptor for NetworkConnectionProvider.openCompletion.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771e4 (     0x8) method descriptor for NetworkConnectionProvider.openCompletion.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb771ec (    0x18) method descriptor for NetworkConnectionProvider.readWriteCounter.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77204 (     0x8) method descriptor for NetworkConnectionProvider.betterPathAvailableNotificationMachTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7720c (     0x8) method descriptor for NetworkConnectionProvider.betterPathAvailableNotificationMachTime.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77214 (     0x8) method descriptor for NetworkConnectionProvider.betterPathAvailableNotificationMachTime.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7721c (    0x18) method descriptor for NetworkConnectionProvider.betterPathAvailable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77234 (    0x18) method descriptor for NetworkConnectionProvider.scopeToWiFiOnly.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7724c (    0x18) method descriptor for NetworkConnectionProvider.isViable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77264 (     0x8) method descriptor for NetworkConnectionProvider.isCancelled.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7726c (     0x8) method descriptor for NetworkConnectionProvider.isCancelled.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77274 (     0x8) method descriptor for NetworkConnectionProvider.isCancelled.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7727c (     0x8) method descriptor for NetworkConnectionProvider.isMPTCP.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77284 (     0x8) method descriptor for NetworkConnectionProvider.isMPTCP.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7728c (     0x8) method descriptor for NetworkConnectionProvider.isMPTCP.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77294 (     0x8) method descriptor for NetworkConnectionProvider.wasConnected.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7729c (     0x8) method descriptor for NetworkConnectionProvider.wasConnected.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772a4 (     0x8) method descriptor for NetworkConnectionProvider.wasConnected.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772ac (    0x18) method descriptor for NetworkConnectionProvider.mostRecentErrorFromConnection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772c4 (     0x8) method descriptor for NetworkConnectionProvider.openTimeoutTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772cc (     0x8) method descriptor for NetworkConnectionProvider.openTimeoutTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772d4 (     0x8) method descriptor for NetworkConnectionProvider.openTimeoutTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772dc (     0x8) method descriptor for NetworkConnectionProvider.staleConnectionTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772e4 (     0x8) method descriptor for NetworkConnectionProvider.staleConnectionTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772ec (     0x8) method descriptor for NetworkConnectionProvider.staleConnectionTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772f4 (     0x8) method descriptor for NetworkConnectionProvider.connectionUnviableTimer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb772fc (     0x8) method descriptor for NetworkConnectionProvider.connectionUnviableTimer.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77304 (     0x8) method descriptor for NetworkConnectionProvider.connectionUnviableTimer.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7730c (     0x8) method descriptor for NetworkConnectionProvider.networkAnalytics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77314 (     0x8) method descriptor for NetworkConnectionProvider.networkAnalytics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7731c (     0x8) method descriptor for NetworkConnectionProvider.networkAnalytics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77324 (     0x8) method descriptor for NetworkConnectionProvider.__allocating_init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7732c (     0x8) method descriptor for NetworkConnectionProvider.openConnectionWithInitialPayload(_:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77334 (     0x8) method descriptor for NetworkConnectionProvider.createConnectionWithInitialPayload<A>(_:networkConnectionProtocolType:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7733c (     0x8) method descriptor for NetworkConnectionProvider.configureNetworkAnalytics() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77344 (     0x8) method descriptor for NetworkConnectionProvider.configureConnectionHandler(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7734c (     0x8) method descriptor for NetworkConnectionProvider.startConnectionWithOpenTimeoutTimer(completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77354 (     0x8) method descriptor for NetworkConnectionProvider.closeWithError(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7735c (    0x20) method descriptor for NetworkConnectionProvider.stateUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7737c (    0x20) method descriptor for NetworkConnectionProvider.viabilityUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7739c (    0x20) method descriptor for NetworkConnectionProvider.betterPathUpdateHandler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773bc (     0x8) method descriptor for NetworkConnectionProvider.send(data:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773c4 (     0x8) method descriptor for NetworkConnectionProvider.readData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773cc (     0x8) method descriptor for NetworkConnectionProvider.updateConnectionMetrics(with:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773d4 (     0x8) method descriptor for NetworkConnectionProvider.updateAndEmitConnectionMetricsPreparationReport() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773dc (     0x8) method descriptor for NetworkConnectionProvider.updateAndEmitConnectionMetricsReadyEstablishmentReport() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773e4 (     0x8) method descriptor for NetworkConnectionProvider.updateConnectionMetricsSnapshotReport() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773ec (     0x8) method descriptor for NetworkConnectionProvider.hashValue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb773f4 (    0x40) nominal type descriptor for NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77434 (    0x18) method descriptor for NetworkConnectionProvider.StateUpdateHandler.handleStateUpdate@Sendable (_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7744c (    0x40) nominal type descriptor for NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7748c (    0x18) method descriptor for NetworkConnectionProvider.ViabilityUpdateHandler.handleViabilityUpdate@Sendable (_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb774a4 (    0x40) nominal type descriptor for NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb774e4 (    0x18) method descriptor for NetworkConnectionProvider.BetterPathUpdateHandler.handleBetterPathUpdate@Sendable (_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb774fc (    0x10) protocol descriptor for RPCOspreyConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7750c (     0x8) protocol requirements base descriptor for RPCOspreyConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77514 (     0x8) method descriptor for RPCOspreyConnectionProtocol.connectionConfiguration.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7751c (     0x8) method descriptor for RPCOspreyConnectionProtocol.connectionConfiguration.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77524 (     0x8) method descriptor for RPCOspreyConnectionProtocol.connectionConfiguration.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7752c (     0x8) method descriptor for RPCOspreyConnectionProtocol.enableDeviceAuthentication.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77534 (     0x8) method descriptor for RPCOspreyConnectionProtocol.enableDeviceAuthentication.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7753c (     0x8) method descriptor for RPCOspreyConnectionProtocol.enableDeviceAuthentication.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77544 (     0x8) method descriptor for RPCOspreyConnectionProtocol.ospreyRequestBuilder.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7754c (     0x8) method descriptor for RPCOspreyConnectionProtocol.ospreyRequestBuilder.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77554 (     0x8) method descriptor for RPCOspreyConnectionProtocol.ospreyRequestBuilder.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7755c (     0x8) method descriptor for RPCOspreyConnectionProtocol.init(url:connectionConfiguration:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77564 (     0x8) method descriptor for RPCOspreyConnectionProtocol.serverStreamingRequest(withMethodName:request:requestBuilder:streamingResponseHandler:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7756c (     0x8) method descriptor for RPCOspreyConnectionProtocol.bidirectionalStreamingRequest(withMethodName:requestBuilder:streamingResponseHandler:completion:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77574 (     0x8) method descriptor for RPCOspreyConnectionProtocol.send(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7757c (     0x8) method descriptor for RPCOspreyConnectionProtocol.preconnect() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77584 (     0x8) method descriptor for RPCOspreyConnectionProtocol.close() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7758c (     0x8) method descriptor for RPCOspreyConnectionProtocol.cancel() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77594 (    0x1c) nominal type descriptor for ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb775b0 (    0x1c) nominal type descriptor for ConnectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb775cc (    0x34) nominal type descriptor for NetworkAnalytics [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77600 (     0x8) method descriptor for NetworkAnalytics.queue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77608 (     0x8) method descriptor for NetworkAnalytics.queue.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77610 (     0x8) method descriptor for NetworkAnalytics.queue.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77618 (     0x8) method descriptor for NetworkAnalytics.netId.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77620 (     0x8) method descriptor for NetworkAnalytics.netId.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77628 (     0x8) method descriptor for NetworkAnalytics.netId.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77630 (     0x8) method descriptor for NetworkAnalytics.orchestratorRequestId.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77638 (     0x8) method descriptor for NetworkAnalytics.orchestratorRequestId.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77640 (     0x8) method descriptor for NetworkAnalytics.orchestratorRequestId.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77648 (     0x8) method descriptor for NetworkAnalytics.netIdForRequestLink.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77650 (     0x8) method descriptor for NetworkAnalytics.netIdForRequestLink.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77658 (     0x8) method descriptor for NetworkAnalytics.netIdForRequestLink.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77660 (     0x8) method descriptor for NetworkAnalytics.isConnectionActive.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77668 (     0x8) method descriptor for NetworkAnalytics.isConnectionActive.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77670 (     0x8) method descriptor for NetworkAnalytics.isConnectionActive.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77678 (     0x8) method descriptor for NetworkAnalytics.netIdAvailable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77680 (     0x8) method descriptor for NetworkAnalytics.netIdAvailable.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77688 (     0x8) method descriptor for NetworkAnalytics.netIdAvailable.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77690 (     0x8) method descriptor for NetworkAnalytics.sequenceNumber.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77698 (     0x8) method descriptor for NetworkAnalytics.sequenceNumber.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776a0 (     0x8) method descriptor for NetworkAnalytics.sequenceNumber.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776a8 (     0x8) method descriptor for NetworkAnalytics.httpHeaderEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776b0 (     0x8) method descriptor for NetworkAnalytics.httpHeaderEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776b8 (     0x8) method descriptor for NetworkAnalytics.httpHeaderEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776c0 (     0x8) method descriptor for NetworkAnalytics.preparationSnapshotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776c8 (     0x8) method descriptor for NetworkAnalytics.preparationSnapshotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776d0 (     0x8) method descriptor for NetworkAnalytics.preparationSnapshotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776d8 (     0x8) method descriptor for NetworkAnalytics.debugPreparationSnapshotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776e0 (     0x8) method descriptor for NetworkAnalytics.debugPreparationSnapshotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776e8 (     0x8) method descriptor for NetworkAnalytics.debugPreparationSnapshotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776f0 (     0x8) method descriptor for NetworkAnalytics.readySnapshotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb776f8 (     0x8) method descriptor for NetworkAnalytics.readySnapshotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77700 (     0x8) method descriptor for NetworkAnalytics.readySnapshotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77708 (     0x8) method descriptor for NetworkAnalytics.debugReadySnapshotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77710 (     0x8) method descriptor for NetworkAnalytics.debugReadySnapshotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77718 (     0x8) method descriptor for NetworkAnalytics.debugReadySnapshotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77720 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionSnapthotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77728 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionSnapthotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77730 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionSnapthotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77738 (     0x8) method descriptor for NetworkAnalytics.debugSessionConnectionSnapthotEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77740 (     0x8) method descriptor for NetworkAnalytics.debugSessionConnectionSnapthotEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77748 (     0x8) method descriptor for NetworkAnalytics.debugSessionConnectionSnapthotEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77750 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionFailedEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77758 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionFailedEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77760 (     0x8) method descriptor for NetworkAnalytics.sessionConnectionFailedEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77768 (     0x8) method descriptor for NetworkAnalytics.peerConnectionFailedEvent.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77770 (     0x8) method descriptor for NetworkAnalytics.peerConnectionFailedEvent.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77778 (     0x8) method descriptor for NetworkAnalytics.peerConnectionFailedEvent.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77780 (     0x8) method descriptor for NetworkAnalytics.siriAnalyticsMessageStream.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77788 (     0x8) method descriptor for NetworkAnalytics.siriAnalyticsMessageStream.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77790 (     0x8) method descriptor for NetworkAnalytics.siriAnalyticsMessageStream.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77798 (     0x8) method descriptor for NetworkAnalytics.__allocating_init(queue:siriAnalyticsMessageStream:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777a0 (     0x8) method descriptor for NetworkAnalytics.reset() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777a8 (     0x8) method descriptor for NetworkAnalytics.resetNetId() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777b0 (     0x8) method descriptor for NetworkAnalytics.setNetId(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777b8 (     0x8) method descriptor for NetworkAnalytics.getNetId() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777c0 (     0x8) method descriptor for NetworkAnalytics.getSequenceNumber() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777c8 (     0x8) method descriptor for NetworkAnalytics.setIsConnectionActive(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777d0 (     0x8) method descriptor for NetworkAnalytics.getIsConnectionActive() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777d8 (     0x8) method descriptor for NetworkAnalytics.setNetIdAvailable(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777e0 (     0x8) method descriptor for NetworkAnalytics.isNetIdAvailable() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777e8 (     0x8) method descriptor for NetworkAnalytics.increaseSequenceNumber() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777f0 (     0x8) method descriptor for NetworkAnalytics.resetSequenceNumber() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb777f8 (     0x8) method descriptor for NetworkAnalytics.setOrchestatorRequestId(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77800 (     0x8) method descriptor for NetworkAnalytics.getOrchestratorRequestId() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77808 (     0x8) method descriptor for NetworkAnalytics.emitLogDebug() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77810 (     0x8) method descriptor for NetworkAnalytics.createRequestLinkInfo(from:component:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77818 (     0x8) method descriptor for NetworkAnalytics.createSchemaClientEventFromUUID(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77820 (     0x8) method descriptor for NetworkAnalytics.emitAllCachedMessagesFor(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77828 (     0x8) method descriptor for NetworkAnalytics.logRequestLinkBetweenOrchestratorAndNetworkComponent() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77830 (     0x8) method descriptor for NetworkAnalytics.logSessionConnectionHttpHeaderCreated(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77838 (     0x8) method descriptor for NetworkAnalytics.logNetworkConnectionStatePreparationSnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77840 (     0x8) method descriptor for NetworkAnalytics.logDebugNetworkConnectionStatePreparationSnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77848 (     0x8) method descriptor for NetworkAnalytics.logNetworkConnectionStateReadySnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77850 (     0x8) method descriptor for NetworkAnalytics.logDebugNetworkConnectionStateReadySnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77858 (     0x8) method descriptor for NetworkAnalytics.logSessionConnectionSnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77860 (     0x8) method descriptor for NetworkAnalytics.logDebugSessionConnectionSnapshotCaptured(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77868 (     0x8) method descriptor for NetworkAnalytics.logSessionConnectionFailed(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77870 (     0x8) method descriptor for NetworkAnalytics.logPeerConnectionFailed(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77878 (    0x1c) nominal type descriptor for NetworkAnalyticsEventMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77894 (    0x1c) nominal type descriptor for ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb778b0 (    0x1c) nominal type descriptor for ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb778cc (    0x1c) nominal type descriptor for ConnectionMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb778e8 (    0x34) nominal type descriptor for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7791c (     0x8) method descriptor for NoneDataDecompressor.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77924 (     0x8) method descriptor for NoneDataDecompressor.decompressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7792c (    0x1c) nominal type descriptor for ConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77948 (    0x34) nominal type descriptor for ConnectionTypeWrapper [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7797c (     0x8) method descriptor for ConnectionTypeWrapper.__allocating_init(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77984 (     0x8) method descriptor for ConnectionTypeWrapper.connectionTypeRawValue() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7798c (     0x8) method descriptor for ConnectionTypeWrapper.connectionTypeStringRawValue() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77994 (     0x8) method descriptor for ConnectionTypeWrapper.isWWAN() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7799c (     0x8) method descriptor for ConnectionTypeWrapper.isEdge() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb779a4 (     0x8) method descriptor for ConnectionTypeWrapper.canUseWiFiDirectly() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb779ac (    0x34) nominal type descriptor for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb779e0 (     0x8) method descriptor for NoneDataCompressor.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb779e8 (     0x8) method descriptor for NoneDataCompressor.compressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb779f0 (    0x34) nominal type descriptor for SpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a24 (     0x8) method descriptor for SpeechPacket.internalAceId.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a2c (     0x8) method descriptor for SpeechPacket.internalAceId.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a34 (     0x8) method descriptor for SpeechPacket.internalAceId.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a3c (     0x8) method descriptor for SpeechPacket.internalRefId.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a44 (     0x8) method descriptor for SpeechPacket.internalRefId.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a4c (     0x8) method descriptor for SpeechPacket.internalRefId.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a54 (     0x8) method descriptor for SpeechPacket.packets.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a5c (     0x8) method descriptor for SpeechPacket.packets.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a64 (     0x8) method descriptor for SpeechPacket.packets.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a6c (     0x8) method descriptor for SpeechPacket.packetNumber.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a74 (     0x8) method descriptor for SpeechPacket.packetNumber.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a7c (     0x8) method descriptor for SpeechPacket.packetNumber.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a84 (     0x8) method descriptor for SpeechPacket.__allocating_init(aceId:refId:packets:packetNumber:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a8c (     0x8) method descriptor for SpeechPacket.serializedAceData() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a94 (     0x8) method descriptor for SpeechPacket.bufferingAllowedDuringActiveSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77a9c (     0x8) method descriptor for SpeechPacket.isRetryable() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77aa4 (     0x8) method descriptor for SpeechPacket.isRestartable() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77aac (     0x8) method descriptor for SpeechPacket.isProvisional() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ab4 (     0x8) method descriptor for SpeechPacket.logDiagnostics() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77abc (     0x8) method descriptor for SpeechPacket.requestId() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ac4 (     0x8) method descriptor for SpeechPacket.setSessionRequestId(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77acc (     0x8) method descriptor for SpeechPacket.supportedByLocalSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ad4 (     0x8) method descriptor for SpeechPacket.supportedByRemoteLimitedSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77adc (    0x1c) nominal type descriptor for ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77af8 (    0x1c) nominal type descriptor for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b14 (    0x34) nominal type descriptor for NetworkWiFiManager [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b48 (     0x8) method descriptor for NetworkWiFiManager.wifiClient.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b50 (     0x8) method descriptor for NetworkWiFiManager.wifiClient.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b58 (     0x8) method descriptor for NetworkWiFiManager.wifiClient.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b60 (     0x8) method descriptor for NetworkWiFiManager.interface.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b68 (     0x8) method descriptor for NetworkWiFiManager.interface.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b70 (     0x8) method descriptor for NetworkWiFiManager.interface.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b78 (     0x8) method descriptor for NetworkWiFiManager.queue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b80 (     0x8) method descriptor for NetworkWiFiManager.queue.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b88 (     0x8) method descriptor for NetworkWiFiManager.queue.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b90 (     0x8) method descriptor for NetworkWiFiManager.queueGroup.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77b98 (     0x8) method descriptor for NetworkWiFiManager.queueGroup.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ba0 (     0x8) method descriptor for NetworkWiFiManager.queueGroup.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ba8 (     0x8) method descriptor for NetworkWiFiManager.__allocating_init(interface:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bb0 (     0x8) method descriptor for NetworkWiFiManager.getWiFiRecordRepresentation() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bb8 (     0x8) method descriptor for NetworkWiFiManager.getWiFiRecord() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bc0 (     0x8) method descriptor for NetworkWiFiManager.isWiFiEnabled() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bc8 (     0x8) method descriptor for NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionTypeRawValue:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bd0 (     0x8) method descriptor for NetworkWiFiManager.acquireWiFiAssertion(wifiAssertionType:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77bd8 (     0x8) method descriptor for NetworkWiFiManager.releaseWiFiAssertion() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77be0 (    0x28) protocol descriptor for BackgroundConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c08 (     0x8) protocol requirements base descriptor for BackgroundConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c10 (     0x8) base conformance descriptor for BackgroundConnectionProtocol: Hashable [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c18 (     0x8) method descriptor for BackgroundConnectionProtocol.delegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c20 (     0x8) method descriptor for BackgroundConnectionProtocol.delegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c28 (     0x8) method descriptor for BackgroundConnectionProtocol.delegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c30 (     0x8) method descriptor for BackgroundConnectionProtocol.connectionConfiguration.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c38 (     0x8) method descriptor for BackgroundConnectionProtocol.start() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c40 (     0x8) method descriptor for BackgroundConnectionProtocol.setSendPings(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c48 (     0x8) method descriptor for BackgroundConnectionProtocol.sendData(_:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c50 (     0x8) method descriptor for BackgroundConnectionProtocol.cancel() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c58 (     0x8) method descriptor for BackgroundConnectionProtocol.updateActiveBackgroundConnectionWithSecondary() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c60 (    0x1c) protocol descriptor for BackgroundConnectionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c7c (     0x8) protocol requirements base descriptor for BackgroundConnectionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c84 (     0x8) method descriptor for BackgroundConnectionDelegate.willStartConnection(_:type:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c8c (     0x8) method descriptor for BackgroundConnectionDelegate.willStartConnection(_:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c94 (     0x8) method descriptor for BackgroundConnectionDelegate.didOpenConnectionType(_:type:routeId:delay:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77c9c (     0x8) method descriptor for BackgroundConnectionDelegate.didReceiveObject(_:object:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ca4 (     0x8) method descriptor for BackgroundConnectionDelegate.didReceiveAceObject(_:object:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77cac (     0x8) method descriptor for BackgroundConnectionDelegate.didClose(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77cb4 (     0x8) method descriptor for BackgroundConnectionDelegate.didEncounterError(_:error:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77cbc (     0x8) method descriptor for BackgroundConnectionDelegate.didEncounterIntermediateError(_:error:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77cc4 (    0x34) nominal type descriptor for QueueMonitorManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77cf8 (     0x8) method descriptor for QueueMonitorManager.queue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d00 (     0x8) method descriptor for QueueMonitorManager.queue.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d08 (     0x8) method descriptor for QueueMonitorManager.queue.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d10 (     0x8) method descriptor for QueueMonitorManager.observers.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d18 (     0x8) method descriptor for QueueMonitorManager.observers.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d20 (     0x8) method descriptor for QueueMonitorManager.observers.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d28 (     0x8) method descriptor for QueueMonitorManager.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d30 (     0x8) method descriptor for QueueMonitorManager.addQueueObserver(_:heartBeatInterval:toleranceInterval:maxNumberOfReports:handler:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d38 (     0x8) method descriptor for QueueMonitorManager.removeQueueObserver(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d40 (    0x34) nominal type descriptor for QueueObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d74 (     0x8) method descriptor for QueueObserver.__allocating_init(queueMonitor:dispatchSourceTimer:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77d7c (    0x40) nominal type descriptor for QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dbc (     0x8) method descriptor for QueueMonitor.queue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dc4 (     0x8) method descriptor for QueueMonitor.queue.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dcc (     0x8) method descriptor for QueueMonitor.queue.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dd4 (     0x8) method descriptor for QueueMonitor.watcher.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ddc (     0x8) method descriptor for QueueMonitor.watcher.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77de4 (     0x8) method descriptor for QueueMonitor.watcher.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dec (     0x8) method descriptor for QueueMonitor.initialWaitingTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77df4 (     0x8) method descriptor for QueueMonitor.initialWaitingTime.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77dfc (     0x8) method descriptor for QueueMonitor.initialWaitingTime.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e04 (     0x8) method descriptor for QueueMonitor.handler.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e0c (     0x8) method descriptor for QueueMonitor.handler.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e14 (     0x8) method descriptor for QueueMonitor.handler.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e1c (     0x8) method descriptor for QueueMonitor.currentReports.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e24 (     0x8) method descriptor for QueueMonitor.currentReports.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e2c (     0x8) method descriptor for QueueMonitor.currentReports.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e34 (     0x8) method descriptor for QueueMonitor.maxNumberOfReports.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e3c (     0x8) method descriptor for QueueMonitor.maxNumberOfReports.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e44 (     0x8) method descriptor for QueueMonitor.maxNumberOfReports.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e4c (     0x8) method descriptor for QueueMonitor.__allocating_init(_:queueIdentifier:maxNumberOfReports:handler:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e54 (     0x8) method descriptor for QueueMonitor.startMonitor() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e5c (     0x8) method descriptor for QueueMonitor.stopMonitor() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e64 (     0x8) method descriptor for QueueMonitor.wait(isCurrentlyBlocked:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e6c (     0x8) method descriptor for QueueMonitor.signal() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e74 (    0x1c) nominal type descriptor for ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77e90 (    0x1c) nominal type descriptor for ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77eac (    0x1c) nominal type descriptor for WiFiAssertionType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ec8 (    0x28) nominal type descriptor for WiFiRecord [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77ef0 (    0x40) nominal type descriptor for WiFiRecordRepresentation [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77f30 (     0x8) method descriptor for WiFiRecordRepresentation.__allocating_init(rssi:snr:cca:channelInfo:phyMode:isCaptive:timestamp:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77f38 (    0x1c) nominal type descriptor for ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77f54 (    0x1c) nominal type descriptor for ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77f70 (    0x34) nominal type descriptor for Connection [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77fa4 (     0x8) method descriptor for Connection.delegate.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77fac (     0x8) method descriptor for Connection.delegate.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77fb4 (    0x20) method descriptor for Connection.delegate.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77fd4 (    0x18) method descriptor for Connection.activeBackgroundConnection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb77fec (    0x18) method descriptor for Connection.activeRoute.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78004 (    0x18) method descriptor for Connection.pendingBackgroundConnections.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7801c (    0x18) method descriptor for Connection.pendingRoutes.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78034 (    0x18) method descriptor for Connection.comatoseBackgroundConnections.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7804c (    0x18) method descriptor for Connection.comatoseRoutes.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78064 (    0x18) method descriptor for Connection.scheduledRoutes.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7807c (    0x18) method descriptor for Connection.isCanceled.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78094 (    0x48) method descriptor for Connection.isCanceledInternal.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb780dc (     0x8) method descriptor for Connection.__allocating_init(connectionConfiguration:connectionQueue:networkManager:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb780e4 (     0x8) method descriptor for Connection.__allocating_init(connectionInfo:connectionQueue:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb780ec (     0x8) method descriptor for Connection.__allocating_init(connectionInfo:connectionQueue:networkManager:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb780f4 (     0x8) method descriptor for Connection.start() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb780fc (     0x8) method descriptor for Connection.sendData(_:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78104 (     0x8) method descriptor for Connection.setSendPings(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7810c (     0x8) method descriptor for Connection.cancelSynchronously(_:isOnConnectionQueue:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78114 (     0x8) method descriptor for Connection.getConnectionMetrics(_:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7811c (     0x8) method descriptor for Connection.getSNConnectionMetrics(_:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78124 (     0x8) method descriptor for Connection.willStartConnection(_:type:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7812c (     0x8) method descriptor for Connection.willStartConnection(_:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78134 (     0x8) method descriptor for Connection.didOpenConnectionType(_:type:routeId:delay:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7813c (     0x8) method descriptor for Connection.didReceiveObject(_:object:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78144 (     0x8) method descriptor for Connection.didReceiveAceObject(_:object:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7814c (     0x8) method descriptor for Connection.didClose(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78154 (     0x8) method descriptor for Connection.didEncounterError(_:error:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7815c (    0x38) method descriptor for Connection.didEncounterIntermediateError(_:error:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78194 (    0x1c) nominal type descriptor for ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781b0 (    0x1c) protocol descriptor for ConnectionProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781cc (     0x8) protocol requirements base descriptor for ConnectionProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781d4 (     0x8) method descriptor for ConnectionProtocol.connectionConfiguration.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781dc (     0x8) method descriptor for ConnectionProtocol.delegate.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781e4 (     0x8) method descriptor for ConnectionProtocol.delegate.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781ec (     0x8) method descriptor for ConnectionProtocol.delegate.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781f4 (     0x8) method descriptor for ConnectionProtocol.start() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb781fc (     0x8) method descriptor for ConnectionProtocol.sendData(_:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78204 (     0x8) method descriptor for ConnectionProtocol.setSendPings(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7820c (     0x8) method descriptor for ConnectionProtocol.cancelSynchronously(_:isOnConnectionQueue:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78214 (     0x8) method descriptor for ConnectionProtocol.getConnectionMetrics(_:with:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7821c (    0x1c) nominal type descriptor for ConnectionPolicyType [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78238 (    0x1c) nominal type descriptor for ConnectionPolicyProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78254 (    0x1c) nominal type descriptor for ConnectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78270 (    0x34) nominal type descriptor for ConnectionInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782a4 (     0x8) method descriptor for ConnectionInfo.connectionConfiguration.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782ac (     0x8) method descriptor for ConnectionInfo.connectionConfiguration.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782b4 (    0x38) method descriptor for ConnectionInfo.connectionConfiguration.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782ec (     0x8) method descriptor for ConnectionInfo.__allocating_init(connectionConfiguration:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782f4 (     0x8) method descriptor for ConnectionInfo.connectionProtocolTechnology.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb782fc (     0x8) method descriptor for ConnectionInfo.connectionProtocolTechnology.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78304 (     0x8) method descriptor for ConnectionInfo.connectionProtocolTechnology.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7830c (     0x8) method descriptor for ConnectionInfo.assistantIdentifier.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78314 (     0x8) method descriptor for ConnectionInfo.assistantIdentifier.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7831c (     0x8) method descriptor for ConnectionInfo.assistantIdentifier.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78324 (     0x8) method descriptor for ConnectionInfo.peerAssistantIdentifier.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7832c (     0x8) method descriptor for ConnectionInfo.peerAssistantIdentifier.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78334 (     0x8) method descriptor for ConnectionInfo.peerAssistantIdentifier.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7833c (     0x8) method descriptor for ConnectionInfo.connectionId.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78344 (     0x8) method descriptor for ConnectionInfo.connectionId.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7834c (     0x8) method descriptor for ConnectionInfo.connectionId.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78354 (     0x8) method descriptor for ConnectionInfo.aceHost.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7835c (     0x8) method descriptor for ConnectionInfo.aceHost.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78364 (     0x8) method descriptor for ConnectionInfo.aceHost.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7836c (     0x8) method descriptor for ConnectionInfo.languageCode.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78374 (     0x8) method descriptor for ConnectionInfo.languageCode.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7837c (     0x8) method descriptor for ConnectionInfo.languageCode.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78384 (     0x8) method descriptor for ConnectionInfo.prefersWWAN.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7838c (     0x8) method descriptor for ConnectionInfo.prefersWWAN.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78394 (     0x8) method descriptor for ConnectionInfo.prefersWWAN.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7839c (     0x8) method descriptor for ConnectionInfo.skipPeer.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783a4 (     0x8) method descriptor for ConnectionInfo.skipPeer.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783ac (     0x8) method descriptor for ConnectionInfo.skipPeer.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783b4 (     0x8) method descriptor for ConnectionInfo.useWiFiHint.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783bc (     0x8) method descriptor for ConnectionInfo.useWiFiHint.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783c4 (     0x8) method descriptor for ConnectionInfo.useWiFiHint.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783cc (     0x8) method descriptor for ConnectionInfo.skipPeerErrorReason.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783d4 (     0x8) method descriptor for ConnectionInfo.skipPeerErrorReason.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783dc (     0x8) method descriptor for ConnectionInfo.skipPeerErrorReason.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783e4 (     0x8) method descriptor for ConnectionInfo.forceReconnect.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783ec (     0x8) method descriptor for ConnectionInfo.forceReconnect.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783f4 (     0x8) method descriptor for ConnectionInfo.forceReconnect.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb783fc (     0x8) method descriptor for ConnectionInfo.timeout.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78404 (     0x8) method descriptor for ConnectionInfo.timeout.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7840c (     0x8) method descriptor for ConnectionInfo.timeout.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78414 (     0x8) method descriptor for ConnectionInfo.imposePolicyBan.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7841c (     0x8) method descriptor for ConnectionInfo.imposePolicyBan.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78424 (     0x8) method descriptor for ConnectionInfo.imposePolicyBan.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7842c (     0x8) method descriptor for ConnectionInfo.connectionPolicy.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78434 (     0x8) method descriptor for ConnectionInfo.connectionPolicy.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7843c (     0x8) method descriptor for ConnectionInfo.connectionPolicy.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78444 (     0x8) method descriptor for ConnectionInfo.connectionPolicyRoute.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7844c (     0x8) method descriptor for ConnectionInfo.connectionPolicyRoute.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78454 (     0x8) method descriptor for ConnectionInfo.connectionPolicyRoute.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7845c (     0x8) method descriptor for ConnectionInfo.forceOnDeviceOnlyDictation.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78464 (     0x8) method descriptor for ConnectionInfo.forceOnDeviceOnlyDictation.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7846c (     0x8) method descriptor for ConnectionInfo.forceOnDeviceOnlyDictation.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78474 (    0x1c) nominal type descriptor for ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78490 (    0x10) protocol descriptor for SessionObject [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784a0 (     0x8) protocol requirements base descriptor for SessionObject [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784a8 (     0x8) method descriptor for SessionObject.internalAceId.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784b0 (     0x8) method descriptor for SessionObject.internalAceId.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784b8 (     0x8) method descriptor for SessionObject.internalAceId.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784c0 (     0x8) method descriptor for SessionObject.internalRefId.getter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784c8 (     0x8) method descriptor for SessionObject.internalRefId.setter [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784d0 (     0x8) method descriptor for SessionObject.internalRefId.modify [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784d8 (     0x8) method descriptor for SessionObject.serializedAceData() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784e0 (     0x8) method descriptor for SessionObject.bufferingAllowedDuringActiveSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784e8 (     0x8) method descriptor for SessionObject.isRetryable() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784f0 (     0x8) method descriptor for SessionObject.isRestartable() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb784f8 (     0x8) method descriptor for SessionObject.isProvisional() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78500 (     0x8) method descriptor for SessionObject.logDiagnostics() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78508 (     0x8) method descriptor for SessionObject.requestId() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78510 (     0x8) method descriptor for SessionObject.setSessionRequestId(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78518 (     0x8) method descriptor for SessionObject.supportedByLocalSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78520 (     0x8) method descriptor for SessionObject.supportedByRemoteLimitedSession() [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78528 (    0x4c) nominal type descriptor for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78574 (     0x8) method descriptor for ZlibDataCompressor.__allocating_init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7857c (     0x8) method descriptor for ZlibDataCompressor.compressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78584 (    0x34) nominal type descriptor for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb785b8 (     0x8) method descriptor for BackgroundConnection.delegate.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb785c0 (     0x8) method descriptor for BackgroundConnection.delegate.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb785c8 (     0x8) method descriptor for BackgroundConnection.delegate.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb785d0 (    0x18) method descriptor for BackgroundConnection.connectionConfiguration.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb785e8 (    0x18) method descriptor for BackgroundConnection.connectionProvider.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78600 (    0x18) method descriptor for BackgroundConnection.connectionMethod.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78618 (    0x18) method descriptor for BackgroundConnection.networkManager.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78630 (    0x18) method descriptor for BackgroundConnection.secondaryConnectionProvider.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78648 (     0x8) method descriptor for BackgroundConnection.networkAnalytics.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78650 (     0x8) method descriptor for BackgroundConnection.networkAnalytics.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78658 (     0x8) method descriptor for BackgroundConnection.networkAnalytics.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78660 (    0x18) method descriptor for BackgroundConnection.secondaryConnectionOpenState.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78678 (    0x18) method descriptor for BackgroundConnection.usesProxyConnection.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78690 (    0x18) method descriptor for BackgroundConnection.isOpened.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb786a8 (    0x18) method descriptor for BackgroundConnection.isCancelled.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb786c0 (    0x18) method descriptor for BackgroundConnection.hasReportedError.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb786d8 (    0x18) method descriptor for BackgroundConnection.primaryConnectionViable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb786f0 (    0x18) method descriptor for BackgroundConnection.betterPathAvailable.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78708 (    0x18) method descriptor for BackgroundConnection.bufferedInputData.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78720 (    0x18) method descriptor for BackgroundConnection.bufferedProviderHeaderOutputData.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78738 (    0x18) method descriptor for BackgroundConnection.bufferedGeneralOutputData.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78750 (    0x18) method descriptor for BackgroundConnection.bufferedUncompressedData.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78768 (    0x18) method descriptor for BackgroundConnection.safetyNetBuffer.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78780 (    0x18) method descriptor for BackgroundConnection.firstStartTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78798 (    0x18) method descriptor for BackgroundConnection.currentStartTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb787b0 (    0x18) method descriptor for BackgroundConnection.currentOpenTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb787c8 (    0x18) method descriptor for BackgroundConnection.firstByteReadTime.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb787e0 (    0x18) method descriptor for BackgroundConnection.startCount.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb787f8 (    0x48) method descriptor for BackgroundConnection.metricsCount.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78840 (     0x8) method descriptor for BackgroundConnection.__allocating_init(connectionConfiguration:connectionQueue:networkManager:networkAnalytics:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78848 (     0x8) method descriptor for BackgroundConnection.start() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78850 (    0x18) method descriptor for BackgroundConnection.start(proposedFallbackMethod:allowFallbackToNewMethod:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78868 (    0x10) method descriptor for BackgroundConnection.updateActiveBackgroundConnectionWithSecondary() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78878 (     0x8) method descriptor for BackgroundConnection.sendData(_:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78880 (    0x20) method descriptor for BackgroundConnection.cancel() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788a0 (     0x8) method descriptor for BackgroundConnection.getConnectionMethod() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788a8 (    0x10) method descriptor for BackgroundConnection.getConnectionMetrics(connectionMethodHistory:with:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788b8 (     0x8) method descriptor for BackgroundConnection.setSendPings(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788c0 (     0x8) method descriptor for BackgroundConnection.connectionProvider(_:received:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788c8 (     0x8) method descriptor for BackgroundConnection.connectionProvider(_:receivedViabilityChangeNotification:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788d0 (    0x28) method descriptor for BackgroundConnection.connectionProviderReceivedBetterRouteNotification(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb788f8 (     0x8) method descriptor for BackgroundConnection.handleAcePing(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78900 (     0x8) method descriptor for BackgroundConnection.handleAcePong(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78908 (     0x8) method descriptor for BackgroundConnection.handleAceEnd() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78910 (     0x8) method descriptor for BackgroundConnection.pingTimerFired() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78918 (     0x8) method descriptor for BackgroundConnection.startHeartBeat() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78920 (     0x8) method descriptor for BackgroundConnection.stopHeartBeat() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78928 (     0x8) method descriptor for BackgroundConnection.hashValue.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78930 (    0x1c) nominal type descriptor for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7894c (    0x64) nominal type descriptor for NetworkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789b0 (     0x8) method descriptor for NetworkWirelessCoexManager.__allocating_init(queue:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789b8 (     0x8) method descriptor for NetworkWirelessCoexManager.registerClient() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789c0 (     0x8) method descriptor for NetworkWirelessCoexManager.unregisterClient() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789c8 (     0x8) method descriptor for NetworkWirelessCoexManager.resetLinkRecommendationInfo() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789d0 (     0x8) method descriptor for NetworkWirelessCoexManager.subscribeLinkRecommendation(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789d8 (     0x8) method descriptor for NetworkWirelessCoexManager.getProximityLinkRecommendation(retry:_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789e0 (     0x8) method descriptor for NetworkWirelessCoexManager.getLinkRecommendationMetrics(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb789e8 (    0x1c) nominal type descriptor for LinkRecommendationInfo [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a04 (    0x28) nominal type descriptor for NetworkConnectionError [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a2c (    0x1c) nominal type descriptor for ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a48 (    0x10) protocol descriptor for DataCompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a58 (     0x8) protocol requirements base descriptor for DataCompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a60 (     0x8) method descriptor for DataCompressing.init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a68 (     0x8) method descriptor for DataCompressing.compressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a70 (    0x10) protocol descriptor for DataDecompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a80 (     0x8) protocol requirements base descriptor for DataDecompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a88 (     0x8) method descriptor for DataDecompressing.init() [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a90 (     0x8) method descriptor for DataDecompressing.decompressedDataForData(_:) [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78a98 (    0x1c) nominal type descriptor for ConnectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ab4 (    0x1c) nominal type descriptor for ConnectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
            0x000000020fb78ad0 (  0x113a) __TEXT __swift5_typeref
                0x000000020fb78ad0 (     0x6) symbolic _____ 11SiriNetwork20ZlibDataDecompressorC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ad6 (     0x6) symbolic _____ So10z_stream_sV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78adc (     0xa) symbolic Spy_____G s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ae6 (     0x6) symbolic _____ So18CTSubscriptionSlotV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78aec (     0xc) symbolic Spy_____GSg s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78af8 (     0x6) symbolic _____ s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78afe (     0x4) symbolic Su [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b02 (     0xc) symbolic Spy_____GSg s4Int8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b0e (     0x8) symbolic _____Sg s13OpaquePointerV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b16 (    0x14) symbolic SvSgAA______ABtXCSg s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b2a (     0xe) symbolic ySvSg_AAtXCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b38 (     0x6) symbolic SvSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b3e (     0x6) symbolic _____ s5Int32V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b44 (     0x6) symbolic _____ So16nw_path_status_ta [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b4a (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b4e (     0x6) symbolic $sSY [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b54 (     0x6) symbolic _____ So8tcp_infoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b5a (     0x6) symbolic _____ s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b60 (     0x6) symbolic _____ s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b66 (     0x6) symbolic _____ s6UInt16V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b6c (     0x6) symbolic _____ So15tcp_conn_statusV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b72 (     0x8) associated conformance So11CFStringRefa14CoreFoundation9_CFObjectSCSH [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b7a (     0x8) associated conformance So11CFStringRefaSHSCSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b82 (     0x6) symbolic _____ So15tcp_conn_statusV34__Unnamed_union___Anonymous_field0V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78b88 (    0x24) symbolic $s11SiriNetwork0B15ManagerObserverP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bac (     0xe) symbolic So8NSObjectC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bba (     0x6) symbolic _____ 11SiriNetwork0B7ManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bc0 (     0xc) symbolic So6NSLockC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bcc (     0xa) symbolic Shy_____G s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bd6 (    0x1a) symbolic So19CoreTelephonyClientC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78bf0 (    0x1c) symbolic So19CTServiceDescriptorCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c0c (     0x6) symbolic SSSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c12 (     0x6) symbolic SdSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c18 (     0x4) symbolic Sb [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c1c (     0x6) symbolic SiSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c22 (     0x6) symbolic SuSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c28 (    0x1e) symbolic So20OS_nw_path_evaluator_pSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c46 (    0x18) symbolic So17OS_dispatch_queueC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c5e (     0x6) symbolic _____ 11SiriNetwork0B11WiFiManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c64 (     0x6) symbolic _____ 11SiriNetwork0B19WirelessCoexManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c6a (     0xa) symbolic Say_____G So17OS_dispatch_queueC8DispatchE10AttributesV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c74 (     0x8) associated conformance 11SiriNetwork28ConnectionConfigurationErrorOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c7c (     0x6) symbolic _____ 11SiriNetwork28ConnectionConfigurationErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c82 (     0xa) symbolic _____SgXw 11SiriNetwork0B7ManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c8c (     0xa) symbolic Say_____G 8Dispatch0A13WorkItemFlagsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78c96 (    0x28) symbolic So24SNLinkRecommendationInfoCSgIegg_Sg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78cbe (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork0B7ManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ccc (    0x10) symbolic _____SgIegn_Sg 11SiriNetwork22LinkRecommendationInfoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78cdc (    0x26) symbolic So24SNLinkRecommendationInfoCSgIeyBy_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d02 (     0x6) symbolic _____ 11SiriNetwork21AceSerializationErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d08 (     0x8) symbolic _____Sg 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d10 (    0x10) symbolic So8NSObjectCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d20 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d2e (    0x26) symbolic So31CTXPCServiceSubscriptionContextC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d54 (    0x2e) symbolic $s11SiriNetwork26ConnectionProviderProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d82 (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78d84 (    0x2e) symbolic $s11SiriNetwork26ConnectionProviderDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78db2 (     0x6) symbolic xSgXw [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78db8 (    0x14) symbolic xSgXwz_x______RzlXX 11SiriNetwork26ConnectionProviderProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78dcc (     0x4) symbolic B0 [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78dd0 (    0x28) symbolic $s11SiriNetwork0B18ConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78df8 (     0x6) symbolic _____ 11SiriNetwork27RPCOspreyConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78dfe (     0x4) symbolic SS [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e02 (     0xa) symbolic ______pSg 11SiriNetwork27RPCOspreyConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e0c (     0x6) symbolic _____ 11SiriNetwork17ConnectionMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e12 (     0x8) symbolic _____Sg 11SiriNetwork0B7ManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e1a (     0xc) symbolic ______pSgXw 11SiriNetwork26ConnectionProviderDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e26 (     0x6) symbolic _____ 11SiriNetwork23ConnectionProviderStateO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e2c (     0x6) symbolic _____ 11SiriNetwork23ConnectionConfigurationV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e32 (    0x14) symbolic y_____yyt_____GcSg s6ResultO 11SiriNetwork0C15ConnectionErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e46 (     0xa) symbolic ______pSg s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e50 (    0x22) symbolic So24OS_dispatch_source_timer_pSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e72 (     0x6) symbolic _____ 11SiriNetwork0B9AnalyticsC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e78 (     0x8) associated conformance 11SiriNetwork27RPCOspreyConnectionProviderCSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e80 (     0x8) symbolic ______p 11SiriNetwork27RPCOspreyConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e88 (     0xa) symbolic _____SgXw 11SiriNetwork27RPCOspreyConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78e92 (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork27RPCOspreyConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ea0 (    0x1a) symbolic _____Sg______pSgSbIegggy_ 10Foundation4DataV s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78eba (     0x6) symbolic _____ 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ec0 (     0x8) symbolic _____Sg 7Network7NWErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ec8 (     0x8) symbolic ______p s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ed0 (    0x10) symbolic _____yyt_____G s6ResultO 11SiriNetwork0C15ConnectionErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ee0 (     0x8) symbolic _____Sg 10Foundation3URLV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ee8 (     0x6) symbolic _____ 11SiriNetwork26ConnectionResolutionReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78eee (     0x4) symbolic Sd [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ef2 (     0x6) symbolic _____ 11SiriNetwork24ConnectionEndpointReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ef8 (    0x12) symbolic _____y______yptG s23_ContiguousArrayStorageC s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f0a (     0x8) symbolic _____Sg So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f12 (    0x14) symbolic _____y_____Sg_SbtG s23_ContiguousArrayStorageC So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f26 (     0xe) symbolic SDy_____SgSbG So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f34 (     0x6) symbolic ypSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f3a (    0x10) symbolic _____y_____ypG s17_NativeDictionaryV s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f4a (     0xc) symbolic _____yS2SG s17_NativeDictionaryV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f56 (     0x6) symbolic _____ 11SiriNetwork24ConnectionTCPInfoMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f5c (     0x8) symbolic _____Sg 11SiriNetwork14ConnectionTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f64 (     0x8) symbolic _____Sg s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f6c (     0x8) symbolic _____Sg s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f74 (     0x6) symbolic _____ 11SiriNetwork12SafeCallbackC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f7a (     0x8) symbolic SaySSG [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f82 (     0xa) symbolic _____ySSG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f8c (     0xa) symbolic _____yypG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78f96 (    0x20) symbolic _____ySi3key_Say_____G5valuetG s23_ContiguousArrayStorageC 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78fb6 (    0x18) symbolic Si3key_Say_____G5valuet 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78fce (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78fdc (    0x14) symbolic So13OspreyChannelC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ff0 (     0x6) symbolic _____ 11SiriNetwork0aB13OspreyChannelC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ff6 (     0x8) symbolic _____Sg 11SiriNetwork23ConnectionConfigurationV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb78ffe (    0x26) symbolic So28OspreyClientStreamingContext_pSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79024 (    0x1e) symbolic ySo20OspreyMutableRequestCcSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79042 (    0x12) symbolic So6NSDataCIeyBy_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79054 (    0x14) symbolic So7NSErrorCSgIeyBy_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79068 (    0x20) symbolic So20OspreyMutableRequestCIeyBy_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79088 (     0x6) symbolic _____ 11SiriNetwork16ConnectionMethodO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7908e (     0xa) symbolic Say_____G 11SiriNetwork16ConnectionMethodO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79098 (     0x8) associated conformance 11SiriNetwork16ConnectionMethodOs12CaseIterableAA8AllCasessADP_Sl [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790a0 (    0x14) symbolic $ss12CaseIterableP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790b4 (     0x8) associated conformance 11SiriNetwork16ConnectionMethodOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790bc (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork16ConnectionMethodO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790ca (     0x6) symbolic _____ 11SiriNetwork0B18ConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790d0 (     0xa) symbolic ______pSg 11SiriNetwork0B18ConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790da (     0x8) symbolic _____Sg 11SiriNetwork0B18ConnectionProviderC18StateUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790e2 (     0x8) symbolic _____Sg 11SiriNetwork0B18ConnectionProviderC22ViabilityUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790ea (     0x8) symbolic _____Sg 11SiriNetwork0B18ConnectionProviderC23BetterPathUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb790f2 (     0xe) symbolic _____y_____G 11SiriNetwork12SafeCallbackC AA0B18ConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79100 (     0x6) symbolic _____ 11SiriNetwork0B18ConnectionProviderC18StateUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79106 (     0x6) symbolic _____ 11SiriNetwork0B18ConnectionProviderC22ViabilityUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7910c (     0x6) symbolic _____ 11SiriNetwork0B18ConnectionProviderC23BetterPathUpdateHandlerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79112 (     0x8) associated conformance 11SiriNetwork0B18ConnectionProviderCSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7911a (     0x8) symbolic ______p 11SiriNetwork0B18ConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79122 (     0x8) symbolic _____Sg 11SiriNetwork24ConnectionSnapshotReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7912a (     0xa) symbolic _____SgXw 11SiriNetwork0B18ConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79134 (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork0B18ConnectionProviderC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79142 (     0xe) symbolic _____SgIegn_ 11SiriNetwork29ConnectionEstablishmentReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79150 (     0x8) symbolic _____Sg 11SiriNetwork29ConnectionEstablishmentReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79158 (     0x8) symbolic _____Sg 7Network6NWPathV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79160 (     0x8) symbolic _____Sg 11SiriNetwork27ConnectionPreparationReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79168 (     0x8) symbolic _____Sg 11SiriNetwork0B15ConnectionErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79170 (    0x16) symbolic _____yyt______pGIegg_ s6ResultO s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79186 (     0xa) symbolic Say_____G So18OS_dispatch_sourceC8DispatchE10TimerFlagsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79190 (     0xa) symbolic _____SgXw 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7919a (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791a8 (     0x8) symbolic ______p 11SiriNetwork26ConnectionProviderProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791b0 (    0x18) symbolic xSgXwz____________RzlXX 11SiriNetwork0B18ConnectionProviderC AA0cD8ProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791c8 (     0x8) symbolic Suz_Xx [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791d0 (    0x14) symbolic _____yyt_____GIegn_ s6ResultO 11SiriNetwork0C15ConnectionErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791e4 (     0x8) symbolic _____Sg 7Network10NWEndpointO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb791ec (    0x18) symbolic xSgXwz____________RzlXX 11SiriNetwork27RPCOspreyConnectionProviderC AA0dE8ProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79204 (    0x2e) symbolic $s11SiriNetwork27RPCOspreyConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79232 (     0x6) symbolic _____ 11SiriNetwork24ConnectionSnapshotReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79238 (     0x8) symbolic _____Sg 11SiriNetwork010ConnectionB6ReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79240 (     0x8) symbolic _____Sg 11SiriNetwork24ConnectionPingInfoReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79248 (     0xa) symbolic Say_____G 11SiriNetwork25ConnectionInterfaceReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79252 (     0xa) symbolic Say_____G 11SiriNetwork24ConnectionTCPInfoMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7925c (     0x8) symbolic _____Sg 11SiriNetwork23ConnectionQualityReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79264 (     0x6) symbolic _____ 11SiriNetwork16ConnectionPolicyV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7926a (     0xa) symbolic Shy_____G 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79274 (     0x8) associated conformance 11SiriNetwork23ConnectionConfigurationVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7927c (     0xa) symbolic _____SgXw 11SiriNetwork0B9AnalyticsC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79286 (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork0B9AnalyticsC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79294 (     0xe) symbolic So6NSUUIDCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb792a2 (     0x4) symbolic Ig_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb792a6 (    0x34) symbolic So46NETSchemaNETSessionConnectionHttpHeaderCreatedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb792da (    0x44) symbolic So61NETSchemaNETNetworkConnectionStatePreparationSnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7931e (    0x48) symbolic So66NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79366 (    0x3e) symbolic So55NETSchemaNETNetworkConnectionStateReadySnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb793a4 (    0x42) symbolic So60NETSchemaNETDebugNetworkConnectionStateReadySnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb793e6 (    0x34) symbolic So45NETSchemaNETSessionConnectionSnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7941a (    0x38) symbolic So50NETSchemaNETDebugSessionConnectionSnapshotCapturedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79452 (    0x2a) symbolic So35NETSchemaNETSessionConnectionFailedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7947c (    0x26) symbolic So32NETSchemaNETPeerConnectionFailedC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794a2 (     0x6) symbolic _____ 11SiriNetwork0B21AnalyticsEventMessageV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794a8 (    0x22) symbolic So26SiriAnalyticsMessageStream_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794ca (    0x20) symbolic So23NETSchemaNETClientEventCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794ea (     0xc) symbolic So6NSUUIDC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794f6 (     0x8) symbolic _____Sg 10Foundation4UUIDV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb794fe (     0xa) symbolic _____SgXw 11SiriNetwork0B11WiFiManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79508 (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork0B11WiFiManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79516 (     0x8) symbolic Ieg_Sg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7951e (     0x6) symbolic IeyB_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79524 (     0x6) symbolic Ieg_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7952a (     0xa) symbolic Say_____G 11SiriNetwork17ConnectionMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79534 (     0x8) symbolic _____Sg 11SiriNetwork26ConnectionHTTPHeaderReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7953c (     0x6) symbolic _____ 11SiriNetwork20NoneDataDecompressorC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79542 (     0x8) associated conformance 11SiriNetwork14ConnectionTypeOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7954a (     0x6) symbolic _____ 11SiriNetwork14ConnectionTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79550 (     0x6) symbolic _____ 11SiriNetwork21ConnectionTypeWrapperC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79556 (     0x6) symbolic _____ 11SiriNetwork18NoneDataCompressorC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7955c (     0x8) symbolic _____Sg 7Network12NWConnectionC19EstablishmentReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79564 (     0x8) symbolic _____Sg 7Network11NWInterfaceV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7956c (     0xc) symbolic SDySS_____G 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79578 (    0x26) symbolic SPy_____GSo13OS_xpc_object_pSbIgygd_ s4Int8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7959e (    0x10) symbolic _____ySS_____G s17_NativeDictionaryV 11SiriNetwork14ConnectionTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795ae (     0x8) symbolic _____Sg So8tcp_infoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795b6 (     0x6) symbolic _____ 11SiriNetwork12SpeechPacketC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795bc (    0x10) symbolic SaySo6NSDataCG [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795cc (     0x6) symbolic _____ 11SiriNetwork23ConnectionQualityReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795d2 (     0x8) symbolic _____Sg 11SiriNetwork23ConnectionQualityReportV0D0O [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795da (     0x6) symbolic _____ 11SiriNetwork23ConnectionQualityReportV0D0O [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795e0 (     0x8) associated conformance 11SiriNetwork23ConnectionQualityReportV0D0OSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795e8 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC s12StaticStringV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795f6 (     0x8) symbolic _____Sg 11SiriNetwork10WiFiRecordV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb795fe (    0x12) symbolic So12CWWiFiClientC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79610 (    0x14) symbolic So12CWFInterfaceCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79624 (    0x1a) symbolic So17OS_dispatch_groupCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7963e (    0x30) symbolic $s11SiriNetwork28BackgroundConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7966e (    0x30) symbolic $s11SiriNetwork28BackgroundConnectionDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7969e (     0x6) symbolic _____ 11SiriNetwork19QueueMonitorManagerC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796a4 (    0x1a) symbolic So17OS_dispatch_queueCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796be (     0xc) symbolic SDySS_____G 11SiriNetwork13QueueObserverC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796ca (     0x6) symbolic _____ 11SiriNetwork13QueueObserverC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796d0 (     0x6) symbolic _____ 11SiriNetwork12QueueMonitorC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796d6 (    0x20) symbolic So24OS_dispatch_source_timer_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb796f6 (    0x1e) symbolic So21OS_dispatch_semaphoreCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79714 (     0x6) symbolic _____ 10Foundation4DateV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7971a (     0x6) symbolic yycSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79720 (     0x6) symbolic _____ 11SiriNetwork010ConnectionB6ReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79726 (     0xc) symbolic SDySS_____G s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79732 (     0x6) symbolic _____ 11SiriNetwork24ConnectionPingInfoReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79738 (     0xa) symbolic SPy_____G s4Int8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79742 (    0x10) symbolic _____ySS_____G s17_NativeDictionaryV s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79752 (    0x10) symbolic _____ySS_____G s17_NativeDictionaryV 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79762 (    0x2a) symbolic _____ySSSo26SNConnectionTCPInfoMetricsCG s17_NativeDictionaryV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7978c (     0x8) associated conformance 11SiriNetwork21ConnectionPolicyRouteVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79794 (     0x8) symbolic _____Sg 10Foundation6LocaleV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7979c (     0x8) associated conformance 11SiriNetwork17WiFiAssertionTypeOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797a4 (     0x6) symbolic _____ 11SiriNetwork17WiFiAssertionTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797aa (     0x6) symbolic _____ 11SiriNetwork10WiFiRecordV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797b0 (     0x6) symbolic _____ 11SiriNetwork24WiFiRecordRepresentationC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797b6 (     0x6) symbolic _____ 11SiriNetwork26ConnectionHTTPHeaderReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797bc (     0x6) symbolic _____ 11SiriNetwork25ConnectionInterfaceReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797c2 (     0x8) symbolic _____Sg 11SiriNetwork24ConnectionTCPInfoMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797ca (     0xa) symbolic _____SgXw 11SiriNetwork10ConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797d4 (     0xe) symbolic _____SgXwz_Xx 11SiriNetwork10ConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797e2 (     0x4) symbolic yp [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797e6 (    0x10) symbolic ______pSgIegg_ s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797f6 (     0x6) symbolic _____ 11SiriNetwork10ConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb797fc (     0xe) symbolic _____SgIegn_ 11SiriNetwork17ConnectionMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7980a (    0x20) symbolic So19SNConnectionMetricsCSgIegg_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7982a (    0x28) symbolic So28SNConnectionDelegateInternal_pSgXw [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79852 (    0x18) symbolic So17OS_dispatch_groupC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7986a (     0x8) symbolic _____Sg 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79872 (     0x8) symbolic _____Sg 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7987a (     0xa) symbolic Shy_____G 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79884 (     0x8) symbolic ______p 11SiriNetwork28BackgroundConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7988c (     0xe) symbolic _____y_____G s11_SetStorageC 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7989a (     0xe) symbolic _____y_____G s11_SetStorageC 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb798a8 (    0x22) symbolic So19SNConnectionMetricsCSgIeyBy_ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb798ca (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork25ConnectionInterfaceReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb798d8 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork24ConnectionTCPInfoMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb798e6 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork26ConnectionResolutionReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb798f4 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork25ConnectionHandshakeReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79902 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork24ConnectionEndpointReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79910 (     0xe) symbolic _____y_____G s11_SetStorageC s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7991e (     0xa) symbolic _____ySdG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79928 (     0x6) symbolic _____ 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7992e (     0x6) symbolic _____ 11SiriNetwork20BackgroundConnectionC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79934 (     0xe) symbolic _____y_____G s11_SetStorageC 11SiriNetwork16ConnectionMethodO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79942 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 11SiriNetwork17ConnectionMetricsV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79950 (     0x6) symbolic _____ 11SiriNetwork29ConnectionEstablishmentReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79956 (     0xa) symbolic Say_____G 11SiriNetwork25ConnectionHandshakeReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79960 (     0xa) symbolic Say_____G 11SiriNetwork26ConnectionResolutionReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7996a (     0x8) symbolic _____Sg 11SiriNetwork24ConnectionEndpointReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79972 (    0x26) symbolic $s11SiriNetwork18ConnectionProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79998 (    0x26) symbolic $s11SiriNetwork18ConnectionDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799be (     0x8) associated conformance 11SiriNetwork20ConnectionPolicyTypeOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799c6 (     0x6) symbolic _____ 11SiriNetwork20ConnectionPolicyTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799cc (     0x8) associated conformance 11SiriNetwork24ConnectionPolicyProtocolOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799d4 (     0x6) symbolic _____ 11SiriNetwork24ConnectionPolicyProtocolO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799da (     0x8) symbolic _____Sg 11SiriNetwork24ConnectionPolicyProtocolO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799e2 (     0x8) symbolic _____Sg 11SiriNetwork20ConnectionPolicyTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799ea (    0x14) symbolic _____ySiSay_____GG s18_DictionaryStorageC 11SiriNetwork21ConnectionPolicyRouteV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb799fe (     0xe) symbolic _____ySnySiGG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a0c (    0x28) symbolic So32SNNetworkManagerObserverInternal_p [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a34 (     0x8) symbolic _____Sg s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a3c (     0x6) symbolic _____ 11SiriNetwork14ConnectionInfoC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a42 (    0x1a) symbolic So18SAConnectionPolicyCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a5c (    0x20) symbolic So23SAConnectionPolicyRouteCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a7c (     0x8) associated conformance 11SiriNetwork16ConnectionPolicyVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a84 (     0x6) symbolic _____ 11SiriNetwork27ConnectionPreparationReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a8a (     0xa) symbolic Say_____G 11SiriNetwork24ConnectionEndpointReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a94 (     0x8) symbolic _____Sg 8Dispatch0A4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79a9c (    0x10) symbolic _____y_____ypG s18_DictionaryStorageC s11AnyHashableV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79aac (    0x20) symbolic $s11SiriNetwork13SessionObjectP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79acc (     0x6) symbolic _____ 11SiriNetwork18ZlibDataCompressorC [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79ad2 (     0xc) symbolic ______pSgXw 11SiriNetwork28BackgroundConnectionDelegateP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79ade (     0xa) symbolic ______pSg 11SiriNetwork26ConnectionProviderProtocolP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79ae8 (     0xa) symbolic Shy_____G 11SiriNetwork16ConnectionMethodO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79af2 (     0x6) symbolic _____ 11SiriNetwork15ConnectionStateO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79af8 (     0x8) associated conformance 11SiriNetwork15ConnectionStateOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b00 (     0x8) associated conformance 11SiriNetwork20BackgroundConnectionCSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b08 (    0x18) symbolic So16OS_dispatch_dataCSg [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b20 (     0x6) symbolic _____ 11SiriNetwork0B15ConnectionErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b26 (     0x8) symbolic _____Sg 11SiriNetwork22LinkRecommendationInfoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b2e (     0x6) symbolic _____ 11SiriNetwork22LinkRecommendationInfoV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b34 (     0x6) symbolic _____ s5Int64V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b3a (     0x6) symbolic _____ s4Int8V [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b40 (     0xa) symbolic SDySSSiG [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b4a (     0xa) symbolic SDySSypG [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b54 (     0x6) symbolic _____ 11SiriNetwork25ConnectionHandshakeReportV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b5a (    0x2c) symbolic SS4name_SS4typeSS6domain_____Sg9interfacet 7Network11NWInterfaceV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b86 (    0x18) symbolic _____4host______4portt 7Network10NWEndpointO4HostO AC4PortV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79b9e (     0x8) symbolic _____Sg 7Network10NWEndpointO4PortV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79ba6 (    0x22) symbolic $s11SiriNetwork15DataCompressingP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79bc8 (    0x24) symbolic $s11SiriNetwork17DataDecompressingP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79bec (     0x8) associated conformance 11SiriNetwork28ConnectionProtocolTechnologyOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79bf4 (     0x6) symbolic _____ 11SiriNetwork28ConnectionProtocolTechnologyO [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79bfa (     0x8) symbolic _____Sg 11SiriNetwork16ConnectionPolicyV [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb79c02 (     0x8) symbolic _____Sg 10Foundation13URLComponentsV [PEXT, NameNList, MangledNameNList, NList] 
            0x000000020fb79c10 (  0x2746) __TEXT __swift5_reflstr
            0x000000020fb7c358 (  0x1c40) __TEXT __swift5_fieldmd
                0x000000020fb7c358 (    0x28) reflection metadata field descriptor ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c380 (    0xb8) reflection metadata field descriptor z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c438 (    0x1c) reflection metadata field descriptor nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c454 (   0x310) reflection metadata field descriptor tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c764 (    0x1c) reflection metadata field descriptor tcp_conn_status [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c780 (    0x10) reflection metadata field descriptor tcp_conn_status.__Unnamed_union___Anonymous_field0 [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c790 (    0x10) reflection metadata field descriptor NetworkManagerObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c7a0 (    0xe8) reflection metadata field descriptor NetworkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c888 (    0x28) reflection metadata field descriptor ConnectionConfigurationError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c8b0 (    0x64) reflection metadata field descriptor AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c914 (    0x10) reflection metadata field descriptor ConnectionProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c924 (    0x10) reflection metadata field descriptor ConnectionProviderDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c934 (    0x10) reflection metadata field descriptor NetworkConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7c944 (   0x10c) reflection metadata field descriptor RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7ca50 (    0x4c) reflection metadata field descriptor ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7ca9c (   0x100) reflection metadata field descriptor ConnectionTCPInfoMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cb9c (    0x1c) reflection metadata field descriptor SafeCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cbb8 (    0x34) reflection metadata field descriptor SiriNetworkOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cbec (    0x40) reflection metadata field descriptor ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cc2c (   0x130) reflection metadata field descriptor NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cd5c (    0x10) reflection metadata field descriptor NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cd6c (    0x10) reflection metadata field descriptor NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cd7c (    0x10) reflection metadata field descriptor NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cd8c (    0x10) reflection metadata field descriptor RPCOspreyConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cd9c (    0x7c) reflection metadata field descriptor ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7ce18 (    0x94) reflection metadata field descriptor ConnectionPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7ceac (    0xdc) reflection metadata field descriptor NetworkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cf88 (    0x34) reflection metadata field descriptor NetworkAnalyticsEventMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cfbc (    0x34) reflection metadata field descriptor ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7cff0 (    0x58) reflection metadata field descriptor ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d048 (   0x100) reflection metadata field descriptor ConnectionMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d148 (    0x10) reflection metadata field descriptor NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d158 (   0x130) reflection metadata field descriptor ConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d288 (    0x1c) reflection metadata field descriptor ConnectionTypeWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d2a4 (    0x10) reflection metadata field descriptor NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d2b4 (    0x40) reflection metadata field descriptor SpeechPacket [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d2f4 (    0x40) reflection metadata field descriptor ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d334 (    0x34) reflection metadata field descriptor ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d368 (    0x40) reflection metadata field descriptor NetworkWiFiManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d3a8 (    0x10) reflection metadata field descriptor BackgroundConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d3b8 (    0x10) reflection metadata field descriptor BackgroundConnectionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d3c8 (    0x28) reflection metadata field descriptor QueueMonitorManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d3f0 (    0x28) reflection metadata field descriptor QueueObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d418 (    0x70) reflection metadata field descriptor QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d488 (   0x118) reflection metadata field descriptor ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d5a0 (    0x34) reflection metadata field descriptor ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d5d4 (    0x34) reflection metadata field descriptor WiFiAssertionType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d608 (    0x64) reflection metadata field descriptor WiFiRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d66c (    0x64) reflection metadata field descriptor WiFiRecordRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d6d0 (    0x34) reflection metadata field descriptor ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d704 (    0x4c) reflection metadata field descriptor ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d750 (    0xc4) reflection metadata field descriptor Connection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d814 (    0x88) reflection metadata field descriptor ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d89c (    0x10) reflection metadata field descriptor ConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d8ac (    0x10) reflection metadata field descriptor ConnectionDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d8bc (    0x4c) reflection metadata field descriptor ConnectionPolicyType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d908 (    0x34) reflection metadata field descriptor ConnectionPolicyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d93c (    0x88) reflection metadata field descriptor ConnectionPolicyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d9c4 (    0x34) reflection metadata field descriptor ConnectionInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7d9f8 (    0x88) reflection metadata field descriptor ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7da80 (    0x10) reflection metadata field descriptor SessionObject [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7da90 (    0x28) reflection metadata field descriptor ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dab8 (   0x16c) reflection metadata field descriptor BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dc24 (    0x34) reflection metadata field descriptor ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dc58 (    0x28) reflection metadata field descriptor NetworkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dc80 (    0xd0) reflection metadata field descriptor LinkRecommendationInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dd50 (    0xb8) reflection metadata field descriptor NetworkConnectionError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7de08 (    0x34) reflection metadata field descriptor ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7de3c (    0x10) reflection metadata field descriptor DataCompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7de4c (    0x10) reflection metadata field descriptor DataDecompressing [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7de5c (   0x13c) reflection metadata field descriptor ConnectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
            0x000000020fb7df98 (    0xb4) __TEXT __swift5_builtin
                0x000000020fb7df98 (    0x14) reflection metadata builtin descriptor CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dfac (    0x14) reflection metadata builtin descriptor z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dfc0 (    0x14) reflection metadata builtin descriptor nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dfd4 (    0x14) reflection metadata builtin descriptor tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dfe8 (    0x14) reflection metadata builtin descriptor tcp_conn_status [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7dffc (    0x14) reflection metadata builtin descriptor tcp_conn_status.__Unnamed_union___Anonymous_field0 [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e010 (    0x14) reflection metadata builtin descriptor AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e024 (    0x14) reflection metadata builtin descriptor ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e038 (    0x14) reflection metadata builtin descriptor ConnectionProtocolTechnology [PEXT, NameNList, MangledNameNList, NList] 
            0x000000020fb7e04c (   0x138) __TEXT __swift5_assocty
                0x000000020fb7e04c (    0x18) reflection metadata associated type descriptor CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e064 (    0x18) reflection metadata associated type descriptor nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e07c (    0x18) reflection metadata associated type descriptor RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e094 (    0x18) reflection metadata associated type descriptor ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e0ac (    0x18) reflection metadata associated type descriptor ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e0c4 (    0x18) reflection metadata associated type descriptor NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e0dc (    0x18) reflection metadata associated type descriptor ConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e0f4 (    0x18) reflection metadata associated type descriptor ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e10c (    0x18) reflection metadata associated type descriptor WiFiAssertionType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e124 (    0x18) reflection metadata associated type descriptor ConnectionPolicyType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e13c (    0x18) reflection metadata associated type descriptor ConnectionPolicyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e154 (    0x18) reflection metadata associated type descriptor ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb7e16c (    0x18) reflection metadata associated type descriptor ConnectionProtocolTechnology [PEXT, NameNList, MangledNameNList, NList] 
            0x000000020fb7e184 (   0x130) __TEXT __swift5_proto
            0x000000020fb7e2b4 (    0xf8) __TEXT __swift5_types
            0x000000020fb7e3ac (   0xc14) __TEXT __swift5_capture
            0x000000020fb7efc0 (    0x10) __TEXT __swift5_mpenum
            0x000000020fb7efd0 (    0x28) __TEXT __swift5_protos
            0x000000020fb7eff8 (  0x21b0) __TEXT __unwind_info
            0x000000020fb811a8 (   0x840) __TEXT __eh_frame
            0x000000020fb819e8 (   0x274) __TEXT __objc_classname
            0x000000020fb81c5c (  0x42be) __TEXT __objc_methname
            0x000000020fb85f1a (   0xea0) __TEXT __objc_methtype
            0x000000020fb86dc0 (  0x1240) __TEXT __objc_stubs
                0x000000020fb86dc0 (    0x20) objc_msgSend$_init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86de0 (    0x20) objc_msgSend$aceHost [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86e00 (    0x20) objc_msgSend$acquireDormancySuspendAssertion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86e20 (    0x20) objc_msgSend$acquireWiFiAssertionWithWifiAssertionTypeRawValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86e40 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86e60 (    0x20) objc_msgSend$addObserver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86e80 (    0x20) objc_msgSend$assistantIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86ea0 (    0x20) objc_msgSend$bufferingAllowedDuringActiveSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86ec0 (    0x20) objc_msgSend$canUseWiFiDirectly [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86ee0 (    0x20) objc_msgSend$cancelSynchronously:isOnConnectionQueue:with: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86f00 (    0x20) objc_msgSend$cca [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86f20 (    0x20) objc_msgSend$channelInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86f40 (    0x20) objc_msgSend$connectionEdgeID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86f60 (    0x20) objc_msgSend$connectionId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86f80 (    0x20) objc_msgSend$connectionMethod [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86fa0 (    0x20) objc_msgSend$connectionPolicy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86fc0 (    0x20) objc_msgSend$connectionPolicyRoute [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb86fe0 (    0x20) objc_msgSend$connectionProtocolTechnology [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87000 (    0x20) objc_msgSend$connectionTypeRawValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87020 (    0x20) objc_msgSend$connectionTypeStringRawValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87040 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87060 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87080 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb870a0 (    0x20) objc_msgSend$delegate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb870c0 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb870e0 (    0x20) objc_msgSend$didCloseConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87100 (    0x20) objc_msgSend$didEncounterError:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87120 (    0x20) objc_msgSend$didEncounterIntermediateError:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87140 (    0x20) objc_msgSend$didOpenConnectionType:type:routeId:delay:method: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87160 (    0x20) objc_msgSend$didReceiveAceObject:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87180 (    0x20) objc_msgSend$didReceiveObject:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb871a0 (    0x20) objc_msgSend$forceFastDormancy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb871c0 (    0x20) objc_msgSend$forceOnDeviceOnlyDictation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb871e0 (    0x20) objc_msgSend$forceReconnect [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87200 (    0x20) objc_msgSend$getIsConnectionActive [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87220 (    0x20) objc_msgSend$getNetId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87240 (    0x20) objc_msgSend$getOrchestratorRequestId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87260 (    0x20) objc_msgSend$getSNConnectionMetrics:with: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87280 (    0x20) objc_msgSend$getSNLinkRecommendationMetrics: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb872a0 (    0x20) objc_msgSend$getSNProximityLinkRecommendationWithRetry:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb872c0 (    0x20) objc_msgSend$getSNSubscribeLinkRecommendation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb872e0 (    0x20) objc_msgSend$getSequenceNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87300 (    0x20) objc_msgSend$getWiFiRecordRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87320 (    0x20) objc_msgSend$imposePolicyBan [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87340 (    0x20) objc_msgSend$increaseSequenceNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87360 (    0x20) objc_msgSend$init: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87380 (    0x20) objc_msgSend$initWithConnectionInfo:connectionQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb873a0 (    0x20) objc_msgSend$initWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb873c0 (    0x20) objc_msgSend$initWithOptions:capacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb873e0 (    0x20) objc_msgSend$initWithTechnology: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87400 (    0x20) objc_msgSend$internalAceId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87420 (    0x20) objc_msgSend$internalRefId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87440 (    0x20) objc_msgSend$isCaptive [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87460 (    0x20) objc_msgSend$isEdge [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87480 (    0x20) objc_msgSend$isForceOnDeviceOnlyDictationEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb874a0 (    0x20) objc_msgSend$isNetIdAvailable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb874c0 (    0x20) objc_msgSend$isProvisional [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb874e0 (    0x20) objc_msgSend$isRestartable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87500 (    0x20) objc_msgSend$isRetryable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87520 (    0x20) objc_msgSend$isWWAN [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87540 (    0x20) objc_msgSend$isWiFiEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87560 (    0x20) objc_msgSend$languageCode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87580 (    0x20) objc_msgSend$logDebugNetworkConnectionStatePreparationSnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb875a0 (    0x20) objc_msgSend$logDebugNetworkConnectionStateReadySnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb875c0 (    0x20) objc_msgSend$logDebugSessionConnectionSnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb875e0 (    0x20) objc_msgSend$logDiagnostics [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87600 (    0x20) objc_msgSend$logNetworkConnectionStatePreparationSnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87620 (    0x20) objc_msgSend$logNetworkConnectionStateReadySnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87640 (    0x20) objc_msgSend$logPeerConnectionFailed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87660 (    0x20) objc_msgSend$logRequestLinkBetweenOrchestratorAndNetworkComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87680 (    0x20) objc_msgSend$logSessionConnectionFailed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb876a0 (    0x20) objc_msgSend$logSessionConnectionHttpHeaderCreated: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb876c0 (    0x20) objc_msgSend$logSessionConnectionSnapshotCaptured: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb876e0 (    0x20) objc_msgSend$networkManagerLostNonWWANConnectivity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87700 (    0x20) objc_msgSend$networkManagerNetworkUnreachable: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87720 (    0x20) objc_msgSend$networkManagerNonWWANDidBecomeAvailable: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87740 (    0x20) objc_msgSend$packetNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87760 (    0x20) objc_msgSend$packets [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87780 (    0x20) objc_msgSend$peerAssistantIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb877a0 (    0x20) objc_msgSend$phyMode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb877c0 (    0x20) objc_msgSend$prefersWWAN [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb877e0 (    0x20) objc_msgSend$registerClient [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87800 (    0x20) objc_msgSend$releaseDormancySuspendAssertion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87820 (    0x20) objc_msgSend$releaseWiFiAssertion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87840 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87860 (    0x20) objc_msgSend$removeObserver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87880 (    0x20) objc_msgSend$requestId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb878a0 (    0x20) objc_msgSend$reset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb878c0 (    0x20) objc_msgSend$resetNetId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb878e0 (    0x20) objc_msgSend$resetSequenceNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87900 (    0x20) objc_msgSend$rssi [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87920 (    0x20) objc_msgSend$sendData:with: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87940 (    0x20) objc_msgSend$serializedAceDataAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87960 (    0x20) objc_msgSend$setAceHost: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87980 (    0x20) objc_msgSend$setAssistantIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb879a0 (    0x20) objc_msgSend$setCca: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb879c0 (    0x20) objc_msgSend$setChannelInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb879e0 (    0x20) objc_msgSend$setConnectionId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87a00 (    0x20) objc_msgSend$setConnectionInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87a20 (    0x20) objc_msgSend$setConnectionPolicy: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87a40 (    0x20) objc_msgSend$setConnectionPolicyRoute: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87a60 (    0x20) objc_msgSend$setConnectionProtocolTechnology: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87a80 (    0x20) objc_msgSend$setDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87aa0 (    0x20) objc_msgSend$setForceOnDeviceOnlyDictation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ac0 (    0x20) objc_msgSend$setForceReconnect: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ae0 (    0x20) objc_msgSend$setImposePolicyBan: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87b00 (    0x20) objc_msgSend$setInternalAceId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87b20 (    0x20) objc_msgSend$setInternalRefId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87b40 (    0x20) objc_msgSend$setIsCaptive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87b60 (    0x20) objc_msgSend$setIsConnectionActive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87b80 (    0x20) objc_msgSend$setLanguageCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ba0 (    0x20) objc_msgSend$setNetId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87bc0 (    0x20) objc_msgSend$setNetIdAvailable: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87be0 (    0x20) objc_msgSend$setOrchestatorRequestId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87c00 (    0x20) objc_msgSend$setPacketNumber: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87c20 (    0x20) objc_msgSend$setPackets: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87c40 (    0x20) objc_msgSend$setPeerAssistantIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87c60 (    0x20) objc_msgSend$setPhyMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87c80 (    0x20) objc_msgSend$setPrefersWWAN: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ca0 (    0x20) objc_msgSend$setRssi: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87cc0 (    0x20) objc_msgSend$setSendPings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ce0 (    0x20) objc_msgSend$setSessionRequestId: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87d00 (    0x20) objc_msgSend$setSkipPeer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87d20 (    0x20) objc_msgSend$setSkipPeerErrorReason: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87d40 (    0x20) objc_msgSend$setSnr: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87d60 (    0x20) objc_msgSend$setTimeout: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87d80 (    0x20) objc_msgSend$setTimestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87da0 (    0x20) objc_msgSend$setUseWiFiHint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87dc0 (    0x20) objc_msgSend$shared [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87de0 (    0x20) objc_msgSend$sharedNetworkAnalytics [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87e00 (    0x20) objc_msgSend$skipPeer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87e20 (    0x20) objc_msgSend$skipPeerErrorReason [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87e40 (    0x20) objc_msgSend$snr [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87e60 (    0x20) objc_msgSend$startAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87e80 (    0x20) objc_msgSend$startMonitoringNetwork: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ea0 (    0x20) objc_msgSend$stopMonitoringNetwork [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ec0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87ee0 (    0x20) objc_msgSend$supportedByLocalSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87f00 (    0x20) objc_msgSend$supportedByRemoteLimitedSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87f20 (    0x20) objc_msgSend$tcpInfoMetricsByInterfaceName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87f40 (    0x20) objc_msgSend$timeout [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87f60 (    0x20) objc_msgSend$timestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87f80 (    0x20) objc_msgSend$unregisterClient [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87fa0 (    0x20) objc_msgSend$useWiFiHint [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87fc0 (    0x20) objc_msgSend$willStartConnection:type: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000020fb87fe0 (    0x20) objc_msgSend$willStartConnection:with: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000234f2fa50 (  0x6e28) __DATA_CONST SEGMENT
            0x0000000234f2fa50 (   0x2d0) __DATA_CONST __got
            0x0000000234f2fd20 (   0x2a0) __DATA_CONST __const
                0x0000000234f2fd20 (    0x20) __block_descriptor_32_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd40 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd60 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd68 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd70 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd78 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd80 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd88 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd90 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fd98 (     0x8) _swift_FORCE_LOAD_$_swiftos_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fda0 (     0x8) _swift_FORCE_LOAD_$_swiftCoreLocation_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fda8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreGraphics_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdb0 (     0x8) _swift_FORCE_LOAD_$_swiftQuartzCore_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdb8 (     0x8) _swift_FORCE_LOAD_$_swiftMetal_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdc0 (     0x8) _swift_FORCE_LOAD_$_swiftsimd_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdc8 (     0x8) _swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdd0 (     0x8) _swift_FORCE_LOAD_$_swiftCoreAudio_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdd8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreMIDI_$_SiriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fde0 (    0x10) property descriptor for ConnectionMetrics.remoteMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdf0 (     0x8) property descriptor for ConnectionTypeWrapper.connectionType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fdf8 (    0x10) property descriptor for AceObject.internalAceId [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe08 (    0x10) property descriptor for AceObject.internalRefId [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe18 (    0x10) property descriptor for SpeechPacket.internalAceId [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe28 (    0x10) property descriptor for SpeechPacket.internalRefId [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe38 (    0x10) property descriptor for SpeechPacket.packets [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe48 (    0x10) property descriptor for SpeechPacket.packetNumber [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe58 (     0x8) property descriptor for WiFiRecordRepresentation.rssi [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe60 (     0x8) property descriptor for WiFiRecordRepresentation.snr [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe68 (     0x8) property descriptor for WiFiRecordRepresentation.cca [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe70 (     0x8) property descriptor for WiFiRecordRepresentation.channelInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe78 (     0x8) property descriptor for WiFiRecordRepresentation.phyMode [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe80 (     0x8) property descriptor for WiFiRecordRepresentation.isCaptive [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe88 (     0x8) property descriptor for WiFiRecordRepresentation.timestamp [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fe90 (    0x10) property descriptor for Connection.delegate [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fea0 (     0x8) property descriptor for Connection.connectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fea8 (     0x8) property descriptor for Connection.connectionQueue [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2feb0 (    0x10) property descriptor for ConnectionInfo.connectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fec0 (    0x10) property descriptor for ConnectionInfo.connectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fed0 (    0x10) property descriptor for ConnectionInfo.assistantIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fee0 (    0x10) property descriptor for ConnectionInfo.peerAssistantIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2fef0 (    0x10) property descriptor for ConnectionInfo.connectionId [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff00 (    0x10) property descriptor for ConnectionInfo.aceHost [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff10 (    0x10) property descriptor for ConnectionInfo.languageCode [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff20 (    0x10) property descriptor for ConnectionInfo.prefersWWAN [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff30 (    0x10) property descriptor for ConnectionInfo.skipPeer [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff40 (    0x10) property descriptor for ConnectionInfo.useWiFiHint [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff50 (    0x10) property descriptor for ConnectionInfo.skipPeerErrorReason [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff60 (    0x10) property descriptor for ConnectionInfo.forceReconnect [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff70 (    0x10) property descriptor for ConnectionInfo.timeout [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff80 (    0x10) property descriptor for ConnectionInfo.imposePolicyBan [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ff90 (    0x10) property descriptor for ConnectionInfo.connectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ffa0 (    0x10) property descriptor for ConnectionInfo.connectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f2ffb0 (    0x10) property descriptor for ConnectionInfo.forceOnDeviceOnlyDictation [EXT, NameNList, MangledNameNList, NList] 
            0x0000000234f2ffc0 (   0x100) __DATA_CONST __objc_classlist
            0x0000000234f300c0 (     0x8) __DATA_CONST __objc_catlist
            0x0000000234f300c8 (    0xe0) __DATA_CONST __objc_protolist
                0x0000000234f300c8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f300d0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SNSessionObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f300d8 (     0x8) _OBJC_LABEL_PROTOCOL_$_SNConnectionDelegateInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f300e0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SNConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f300e8 (    0x38) _OBJC_LABEL_PROTOCOL_$_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30120 (    0x10) _OBJC_LABEL_PROTOCOL_$_OS_nw_path_evaluator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30130 (    0x10) _OBJC_LABEL_PROTOCOL_$_OS_dispatch_source_timer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30140 (     0x8) _OBJC_LABEL_PROTOCOL_$_OspreyClientStreamingContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30148 (     0x8) _OBJC_LABEL_PROTOCOL_$_SiriAnalyticsMessageStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30150 (    0x28) _OBJC_LABEL_PROTOCOL_$_OS_dispatch_source [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30178 (     0x8) _OBJC_LABEL_PROTOCOL_$_CoreTelephonyClientCarrierBundleDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30180 (     0x8) _OBJC_LABEL_PROTOCOL_$_CoreTelephonyClientDataDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30188 (     0x8) _OBJC_LABEL_PROTOCOL_$_CoreTelephonyClientSubscriberDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f30190 (    0x10) _OBJC_LABEL_PROTOCOL_$_CoreTelephonyClientRegistrationDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f301a0 (     0x8) _OBJC_LABEL_PROTOCOL_$_OS_nw_endpoint [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000234f301a8 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000234f301b0 (  0x5848) __DATA_CONST __objc_const
                0x0000000234f301b0 (    0x48) _OBJC_METACLASS_RO_$_SNLinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f301f8 (   0x208) _OBJC_$_INSTANCE_VARIABLES_SNLinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f30400 (   0x108) _OBJC_$_PROP_LIST_SNLinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f30508 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f306d8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f306f8 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f30740 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f307e0 (    0x18) _OBJC_$_PROTOCOL_REFS_SNSessionObject [NameNList, MangledNameNList, NList] 
                0x0000000234f307f8 (   0x158) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SNSessionObject [NameNList, MangledNameNList, NList] 
                0x0000000234f30950 (    0x28) _OBJC_$_PROP_LIST_SNSessionObject [NameNList, MangledNameNList, NList] 
                0x0000000234f30978 (    0x70) _OBJC_$_PROTOCOL_METHOD_TYPES_SNSessionObject [NameNList, MangledNameNList, NList] 
                0x0000000234f309e8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x0000000234f30a00 (    0x48) _OBJC_METACLASS_RO_$_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x0000000234f30a48 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x0000000234f30a70 (    0x98) _OBJC_$_PROP_LIST_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x0000000234f30b08 (    0x48) _OBJC_METACLASS_RO_$_SNSiriNetwork [NameNList, MangledNameNList, NList] 
                0x0000000234f30b50 (    0x48) _OBJC_CLASS_RO_$_SNSiriNetwork [NameNList, MangledNameNList, NList] 
                0x0000000234f30b98 (    0x48) _OBJC_METACLASS_RO_$_SNConnectionMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f30be0 (   0x588) _OBJC_$_INSTANCE_VARIABLES_SNConnectionMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f31168 (   0x2c8) _OBJC_$_PROP_LIST_SNConnectionMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f31430 (    0xc8) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SNConnectionDelegateInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f314f8 (    0x40) _OBJC_$_PROTOCOL_METHOD_TYPES_SNConnectionDelegateInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f31538 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SNConnectionProtocol [NameNList, MangledNameNList, NList] 
                0x0000000234f315b8 (    0x28) _OBJC_$_PROTOCOL_METHOD_TYPES_SNConnectionProtocol [NameNList, MangledNameNList, NList] 
                0x0000000234f315e0 (    0x20) _OBJC_CLASS_PROTOCOLS_$_SNConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f31600 (    0x48) _OBJC_METACLASS_RO_$_SNConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f31648 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SNConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f316b0 (    0x38) _OBJC_$_PROP_LIST_SNConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f316e8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f318b8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f318d8 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f31920 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f319c0 (    0x18) _OBJC_$_PROTOCOL_REFS_SNNetworkManagerObserverInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f319d8 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SNNetworkManagerObserverInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f31a28 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_SNNetworkManagerObserverInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f31a40 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31a58 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31ac0 (    0x58) _OBJC_$_PROP_LIST_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31b18 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x0000000234f31b40 (    0x18) _OBJC_$_PROP_LIST_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x0000000234f31b58 (    0x48) _OBJC_METACLASS_RO_$_SNConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000234f31ba0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SNConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000234f31bc8 (    0x18) _OBJC_$_PROP_LIST_SNConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000234f31be0 (    0x48) _OBJC_METACLASS_RO_$_SNConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f31c28 (   0x228) _OBJC_$_INSTANCE_VARIABLES_SNConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f31e50 (   0x118) _OBJC_$_PROP_LIST_SNConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f31f68 (    0x48) _OBJC_METACLASS_RO_$_SNNetworkWiFiManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31fb0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SNNetworkWiFiManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31fd8 (    0x18) _OBJC_$_PROP_LIST_SNNetworkWiFiManager [NameNList, MangledNameNList, NList] 
                0x0000000234f31ff0 (    0x48) _OBJC_METACLASS_RO_$_SNWiFiRecord [NameNList, MangledNameNList, NList] 
                0x0000000234f32038 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_SNWiFiRecord [NameNList, MangledNameNList, NList] 
                0x0000000234f32120 (    0x78) _OBJC_$_PROP_LIST_SNWiFiRecord [NameNList, MangledNameNList, NList] 
                0x0000000234f32198 (    0x48) _OBJC_METACLASS_RO_$_SNConnectionInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f321e0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SNConnectionInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f32208 (   0x118) _OBJC_$_PROP_LIST_SNConnectionInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f32320 (    0x48) _METACLASS_DATA__TtC11SiriNetwork20ZlibDataDecompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f32368 (    0x48) _IVARS__TtC11SiriNetwork20ZlibDataDecompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f323b0 (    0x48) _DATA__TtC11SiriNetwork20ZlibDataDecompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f323f8 (    0x60) _PROTOCOL_SNConnectionDelegateInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f32458 (    0x60) _PROTOCOL_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f324b8 (    0x18) _OBJC_$_PROTOCOL_REFS_OS_nw_path_evaluator [NameNList, MangledNameNList, NList] 
                0x0000000234f324d0 (    0x18) _OBJC_$_PROTOCOL_REFS_OS_dispatch_source_timer [NameNList, MangledNameNList, NList] 
                0x0000000234f324e8 (    0x18) _OBJC_$_PROTOCOL_REFS_OspreyClientStreamingContext [NameNList, MangledNameNList, NList] 
                0x0000000234f32500 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OspreyClientStreamingContext [NameNList, MangledNameNList, NList] 
                0x0000000234f32550 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_OspreyClientStreamingContext [NameNList, MangledNameNList, NList] 
                0x0000000234f32568 (    0x18) _OBJC_$_PROTOCOL_REFS_SiriAnalyticsMessageStream [NameNList, MangledNameNList, NList] 
                0x0000000234f32580 (    0x98) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SiriAnalyticsMessageStream [NameNList, MangledNameNList, NList] 
                0x0000000234f32618 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_SiriAnalyticsMessageStream [NameNList, MangledNameNList, NList] 
                0x0000000234f32648 (    0x40) _PROTOCOL_METHOD_TYPES_SNConnectionDelegateInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f32688 (    0x10) _PROTOCOL_PROTOCOLS_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f32698 (    0x18) _PROTOCOL_METHOD_TYPES_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f326b0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32880 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f328a0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f328e8 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32988 (    0x18) _OBJC_$_PROTOCOL_REFS_OS_dispatch_source [NameNList, MangledNameNList, NList] 
                0x0000000234f329a0 (    0x18) _CLASS_PROPERTIES_SNNetworkManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f329b8 (   0x248) _IVARS_SNNetworkManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f32c00 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32dd0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32df0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32e38 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f32ed8 (    0x28) _OBJC_CLASS_PROTOCOLS_$_SNNetworkManagerInternal(SiriNetwork1) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f32f00 (    0x18) _OBJC_$_PROTOCOL_REFS_CoreTelephonyClientCarrierBundleDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f32f18 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_CoreTelephonyClientCarrierBundleDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f32f68 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_CoreTelephonyClientCarrierBundleDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f32f80 (    0x18) _OBJC_$_PROTOCOL_REFS_CoreTelephonyClientDataDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f32f98 (   0x248) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_CoreTelephonyClientDataDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f331e0 (    0xc0) _OBJC_$_PROTOCOL_METHOD_TYPES_CoreTelephonyClientDataDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f332a0 (    0x18) _OBJC_$_PROTOCOL_REFS_CoreTelephonyClientSubscriberDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f332b8 (   0x110) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_CoreTelephonyClientSubscriberDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f333c8 (    0x58) _OBJC_$_PROTOCOL_METHOD_TYPES_CoreTelephonyClientSubscriberDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f33420 (    0x18) _OBJC_$_PROTOCOL_REFS_CoreTelephonyClientRegistrationDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f33438 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_CoreTelephonyClientRegistrationDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f33608 (    0x98) _OBJC_$_PROTOCOL_METHOD_TYPES_CoreTelephonyClientRegistrationDelegate [NameNList, MangledNameNList, NList] 
                0x0000000234f336a0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33870 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33890 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f338d8 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33978 (    0x48) _METACLASS_DATA__TtC11SiriNetwork27RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f339c0 (   0x2a8) _IVARS__TtC11SiriNetwork27RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f33c68 (    0x48) _DATA__TtC11SiriNetwork27RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f33cb0 (    0x28) _IVARS__TtC11SiriNetwork12SafeCallback [NameNList, MangledNameNList, NList] 
                0x0000000234f33cd8 (    0x18) _OBJC_$_PROTOCOL_REFS_OS_nw_endpoint [NameNList, MangledNameNList, NList] 
                0x0000000234f33cf0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33ec0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33ee0 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33f28 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x0000000234f33fc8 (    0x48) _METACLASS_DATA_SNOspreyChannel [NameNList, MangledNameNList, NList] 
                0x0000000234f34010 (    0x68) _IVARS_SNOspreyChannel [NameNList, MangledNameNList, NList] 
                0x0000000234f34078 (    0x48) _METACLASS_DATA__TtC11SiriNetwork25NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f340c0 (   0x308) _IVARS__TtC11SiriNetwork25NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f343c8 (    0x48) _DATA__TtC11SiriNetwork25NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000234f34410 (    0x48) _METACLASS_DATA__TtCC11SiriNetwork25NetworkConnectionProvider18StateUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f34458 (    0x48) _DATA__TtCC11SiriNetwork25NetworkConnectionProvider18StateUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f344a0 (    0x48) _METACLASS_DATA__TtCC11SiriNetwork25NetworkConnectionProvider22ViabilityUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f344e8 (    0x48) _DATA__TtCC11SiriNetwork25NetworkConnectionProvider22ViabilityUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f34530 (    0x48) _METACLASS_DATA__TtCC11SiriNetwork25NetworkConnectionProvider23BetterPathUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f34578 (    0x48) _DATA__TtCC11SiriNetwork25NetworkConnectionProvider23BetterPathUpdateHandler [NameNList, MangledNameNList, NList] 
                0x0000000234f345c0 (    0x18) _CLASS_PROPERTIES_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f345d8 (   0x228) _IVARS_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34800 (    0x48) _METACLASS_DATA__TtC11SiriNetwork20NoneDataDecompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f34848 (    0x48) _DATA__TtC11SiriNetwork20NoneDataDecompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f34890 (    0x48) _METACLASS_DATA_SNConnectionTypeInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f348d8 (    0x28) _IVARS_SNConnectionTypeInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34900 (    0x48) _METACLASS_DATA__TtC11SiriNetwork18NoneDataCompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f34948 (    0x48) _DATA__TtC11SiriNetwork18NoneDataCompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f34990 (    0x48) _METACLASS_DATA_SNSpeechPacketInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f349d8 (    0x88) _IVARS_SNSpeechPacketInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34a60 (    0x48) _PROPERTIES_SNSpeechPacketInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34aa8 (    0x18) _CLASS_PROPERTIES_SNNetworkWiFiManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34ac0 (    0x88) _IVARS_SNNetworkWiFiManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34b48 (    0x48) _METACLASS_DATA__TtC11SiriNetwork19QueueMonitorManager [NameNList, MangledNameNList, NList] 
                0x0000000234f34b90 (    0x48) _IVARS__TtC11SiriNetwork19QueueMonitorManager [NameNList, MangledNameNList, NList] 
                0x0000000234f34bd8 (    0x48) _DATA__TtC11SiriNetwork19QueueMonitorManager [NameNList, MangledNameNList, NList] 
                0x0000000234f34c20 (    0x48) _METACLASS_DATA__TtC11SiriNetwork13QueueObserver [NameNList, MangledNameNList, NList] 
                0x0000000234f34c68 (    0x48) _IVARS__TtC11SiriNetwork13QueueObserver [NameNList, MangledNameNList, NList] 
                0x0000000234f34cb0 (    0x48) _DATA__TtC11SiriNetwork13QueueObserver [NameNList, MangledNameNList, NList] 
                0x0000000234f34cf8 (    0x48) _METACLASS_DATA__TtC11SiriNetwork12QueueMonitor [NameNList, MangledNameNList, NList] 
                0x0000000234f34d40 (   0x108) _IVARS__TtC11SiriNetwork12QueueMonitor [NameNList, MangledNameNList, NList] 
                0x0000000234f34e48 (    0x48) _METACLASS_DATA_SNWiFiRecordInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34e90 (    0xe8) _IVARS_SNWiFiRecordInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34f78 (    0x78) _PROPERTIES_SNWiFiRecordInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f34ff0 (    0x48) _METACLASS_DATA_SNConnectionInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f35038 (   0x1e8) _IVARS_SNConnectionInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f35220 (    0x18) _PROPERTIES_SNConnectionInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f35238 (    0x48) _METACLASS_DATA_SNConnectionInfoInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f35280 (    0x68) _IVARS_SNConnectionInfoInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f352e8 (   0x128) _PROPERTIES_SNConnectionInfoInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f35410 (    0x48) _METACLASS_DATA__TtC11SiriNetwork18ZlibDataCompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f35458 (    0x48) _IVARS__TtC11SiriNetwork18ZlibDataCompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f354a0 (    0x48) _DATA__TtC11SiriNetwork18ZlibDataCompressor [NameNList, MangledNameNList, NList] 
                0x0000000234f354e8 (    0x48) _METACLASS_DATA__TtC11SiriNetwork20BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f35530 (   0x3a8) _IVARS__TtC11SiriNetwork20BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f358d8 (    0x48) _DATA__TtC11SiriNetwork20BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f35920 (    0x48) _METACLASS_DATA__TtC11SiriNetwork26NetworkWirelessCoexManager [NameNList, MangledNameNList, NList] 
                0x0000000234f35968 (    0x48) _IVARS__TtC11SiriNetwork26NetworkWirelessCoexManager [NameNList, MangledNameNList, NList] 
                0x0000000234f359b0 (    0x48) _DATA__TtC11SiriNetwork26NetworkWirelessCoexManager [NameNList, MangledNameNList, NList] 
            0x0000000234f359f8 (   0xe80) __DATA_CONST __objc_selrefs
        0x0000000234f36878 (  0x5928) __AUTH_CONST SEGMENT
            0x0000000234f36878 (   0x4c0) __AUTH_CONST __objc_const
                0x0000000234f36878 (    0x48) _OBJC_CLASS_RO_$_SNLinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f368c0 (    0x48) _OBJC_CLASS_RO_$_SNSpeechPacket [NameNList, MangledNameNList, NList] 
                0x0000000234f36908 (    0x48) _OBJC_CLASS_RO_$_SNConnectionMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f36950 (    0x40) _OBJC_$_CATEGORY_AceObject_$_SNSessionObject [NameNList, MangledNameNList, NList] 
                0x0000000234f36990 (    0x48) _OBJC_CLASS_RO_$_SNConnection [NameNList, MangledNameNList, NList] 
                0x0000000234f369d8 (    0x48) _OBJC_METACLASS_RO_$_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x0000000234f36a20 (    0x48) _OBJC_CLASS_RO_$_SNNetworkManager [NameNList, MangledNameNList, NList] 
                0x0000000234f36a68 (    0x48) _OBJC_METACLASS_RO_$_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x0000000234f36ab0 (    0x48) _OBJC_CLASS_RO_$_SNNetworkAnalytics [NameNList, MangledNameNList, NList] 
                0x0000000234f36af8 (    0x48) _OBJC_CLASS_RO_$_SNConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000234f36b40 (    0x48) _OBJC_CLASS_RO_$_SNConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x0000000234f36b88 (    0x48) _OBJC_CLASS_RO_$_SNNetworkWiFiManager [NameNList, MangledNameNList, NList] 
                0x0000000234f36bd0 (    0x48) _OBJC_CLASS_RO_$_SNWiFiRecord [NameNList, MangledNameNList, NList] 
                0x0000000234f36c18 (    0x48) _OBJC_CLASS_RO_$_SNConnectionInfo [NameNList, MangledNameNList, NList] 
                0x0000000234f36c60 (    0x48) _METACLASS_DATA_SNNetworkManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f36ca8 (    0x48) _METACLASS_DATA_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x0000000234f36cf0 (    0x48) _METACLASS_DATA_SNNetworkWiFiManagerInternal [NameNList, MangledNameNList, NList] 
            0x0000000234f36d38 (    0x60) __AUTH_CONST __cfstring
            0x0000000234f36d98 (  0x4658) __AUTH_CONST __const
                0x0000000234f36d98 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000234f36db8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000234f36dd8 (    0x30) __block_descriptor_48_e8_32s40w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36e08 (    0x30) __block_descriptor_40_e8_32w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36e38 (    0x30) __block_descriptor_48_e8_32w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36e68 (    0x28) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000234f36e90 (    0x28) full type metadata for nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36eb8 (    0x58) value witness table for z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36f10 (    0x58) full type metadata for z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36f68 (    0x70) full type metadata for CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36fd8 (    0x20) protocol witness table for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f36ff8 (    0x30) full type metadata for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37028 (    0x58) value witness table for tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37080 (   0x168) full type metadata for tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f371e8 (    0x28) full type metadata for tcp_conn_status [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37210 (    0xb0) full type metadata for tcp_conn_status.__Unnamed_union___Anonymous_field0 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f372c0 (    0x70) value witness table for ConnectionConfigurationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37330 (    0x10) full type metadata for ConnectionConfigurationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37340 (    0x40) type metadata for ConnectionConfigurationError [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37380 (    0x30) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f373b0 (    0x80) block_descriptor.4 [NameNList, MangledNameNList, NList] 
                0x0000000234f37430 (    0x78) block_descriptor.14 [NameNList, MangledNameNList, NList] 
                0x0000000234f374a8 (    0x78) block_descriptor.24 [NameNList, MangledNameNList, NList] 
                0x0000000234f37520 (    0xa0) block_descriptor.34 [NameNList, MangledNameNList, NList] 
                0x0000000234f375c0 (    0x70) value witness table for AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37630 (    0x10) full type metadata for AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37640 (    0x70) type metadata for AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f376b0 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f37708 (    0x38) block_descriptor.6 [NameNList, MangledNameNList, NList] 
                0x0000000234f37740 (    0x50) block_descriptor.10 [NameNList, MangledNameNList, NList] 
                0x0000000234f37790 (    0x28) block_descriptor.16 [NameNList, MangledNameNList, NList] 
                0x0000000234f377b8 (    0x50) block_descriptor.20 [NameNList, MangledNameNList, NList] 
                0x0000000234f37808 (    0x50) block_descriptor.26 [NameNList, MangledNameNList, NList] 
                0x0000000234f37858 (    0x50) block_descriptor.33 [NameNList, MangledNameNList, NList] 
                0x0000000234f378a8 (    0x28) block_descriptor.39 [NameNList, MangledNameNList, NList] 
                0x0000000234f378d0 (    0x50) block_descriptor.43 [NameNList, MangledNameNList, NList] 
                0x0000000234f37920 (    0x50) block_descriptor.49 [NameNList, MangledNameNList, NList] 
                0x0000000234f37970 (    0x50) block_descriptor.56 [NameNList, MangledNameNList, NList] 
                0x0000000234f379c0 (    0x80) block_descriptor.62 [NameNList, MangledNameNList, NList] 
                0x0000000234f37a40 (   0x140) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f37b80 (    0x28) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f37ba8 (    0x28) block_descriptor.106 [NameNList, MangledNameNList, NList] 
                0x0000000234f37bd0 (    0x50) block_descriptor.109 [NameNList, MangledNameNList, NList] 
                0x0000000234f37c20 (    0x58) block_descriptor.115 [NameNList, MangledNameNList, NList] 
                0x0000000234f37c78 (    0x50) block_descriptor.121 [NameNList, MangledNameNList, NList] 
                0x0000000234f37cc8 (    0x30) block_descriptor.127 [NameNList, MangledNameNList, NList] 
                0x0000000234f37cf8 (    0x30) block_descriptor.131 [NameNList, MangledNameNList, NList] 
                0x0000000234f37d28 (    0x58) value witness table for ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37d80 (    0x10) full type metadata for ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37d90 (    0x78) type metadata for ConnectionResolutionReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37e08 (    0x58) value witness table for ConnectionTCPInfoMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37e60 (    0x10) full type metadata for ConnectionTCPInfoMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37e70 (    0x78) type metadata for ConnectionTCPInfoMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f37ee8 (    0xd0) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x0000000234f37fb8 (   0x108) protocol witness table for SiriNetworkOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f380c0 (    0x28) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f380e8 (    0x28) block_descriptor.31 [NameNList, MangledNameNList, NList] 
                0x0000000234f38110 (    0x28) block_descriptor.34 [NameNList, MangledNameNList, NList] 
                0x0000000234f38138 (    0x70) value witness table for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f381a8 (    0x10) full type metadata for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f381b8 (   0x250) type metadata for ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f38408 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f38460 (    0x58) block_descriptor.157 [NameNList, MangledNameNList, NList] 
                0x0000000234f384b8 (    0x80) block_descriptor.163 [NameNList, MangledNameNList, NList] 
                0x0000000234f38538 (    0x78) block_descriptor.172 [NameNList, MangledNameNList, NList] 
                0x0000000234f385b0 (    0x28) block_descriptor.182 [NameNList, MangledNameNList, NList] 
                0x0000000234f385d8 (    0xb8) block_descriptor.186 [NameNList, MangledNameNList, NList] 
                0x0000000234f38690 (    0x50) block_descriptor.200 [NameNList, MangledNameNList, NList] 
                0x0000000234f386e0 (    0x28) block_descriptor.208 [NameNList, MangledNameNList, NList] 
                0x0000000234f38708 (    0x58) block_descriptor.212 [NameNList, MangledNameNList, NList] 
                0x0000000234f38760 (    0x58) value witness table for ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f387b8 (    0x10) full type metadata for ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f387c8 (    0x88) type metadata for ConnectionSnapshotReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f38850 (    0x58) value witness table for ConnectionPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f388a8 (    0x10) full type metadata for ConnectionPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f388b8 (    0xb0) type metadata for ConnectionPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f38968 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f389c0 (    0x78) block_descriptor.7 [NameNList, MangledNameNList, NList] 
                0x0000000234f38a38 (    0x80) block_descriptor.16 [NameNList, MangledNameNList, NList] 
                0x0000000234f38ab8 (    0x50) block_descriptor.26 [NameNList, MangledNameNList, NList] 
                0x0000000234f38b08 (    0x78) block_descriptor.32 [NameNList, MangledNameNList, NList] 
                0x0000000234f38b80 (    0x50) block_descriptor.42 [NameNList, MangledNameNList, NList] 
                0x0000000234f38bd0 (    0x78) block_descriptor.48 [NameNList, MangledNameNList, NList] 
                0x0000000234f38c48 (    0x50) block_descriptor.58 [NameNList, MangledNameNList, NList] 
                0x0000000234f38c98 (    0x50) block_descriptor.64 [NameNList, MangledNameNList, NList] 
                0x0000000234f38ce8 (    0x50) block_descriptor.70 [NameNList, MangledNameNList, NList] 
                0x0000000234f38d38 (    0x78) block_descriptor.77 [NameNList, MangledNameNList, NList] 
                0x0000000234f38db0 (    0x58) block_descriptor.87 [NameNList, MangledNameNList, NList] 
                0x0000000234f38e08 (    0x50) block_descriptor.94 [NameNList, MangledNameNList, NList] 
                0x0000000234f38e58 (    0x50) block_descriptor.101 [NameNList, MangledNameNList, NList] 
                0x0000000234f38ea8 (    0x50) block_descriptor.108 [NameNList, MangledNameNList, NList] 
                0x0000000234f38ef8 (    0x50) block_descriptor.115 [NameNList, MangledNameNList, NList] 
                0x0000000234f38f48 (    0x50) block_descriptor.122 [NameNList, MangledNameNList, NList] 
                0x0000000234f38f98 (    0x50) block_descriptor.129 [NameNList, MangledNameNList, NList] 
                0x0000000234f38fe8 (    0x50) block_descriptor.136 [NameNList, MangledNameNList, NList] 
                0x0000000234f39038 (    0x50) block_descriptor.143 [NameNList, MangledNameNList, NList] 
                0x0000000234f39088 (    0x50) block_descriptor.150 [NameNList, MangledNameNList, NList] 
                0x0000000234f390d8 (    0x28) block_descriptor.157 [NameNList, MangledNameNList, NList] 
                0x0000000234f39100 (    0x58) value witness table for NetworkAnalyticsEventMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39158 (    0x10) full type metadata for NetworkAnalyticsEventMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39168 (    0x48) type metadata for NetworkAnalyticsEventMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f391b0 (    0x38) block_descriptor.205 [NameNList, MangledNameNList, NList] 
                0x0000000234f391e8 (    0x58) value witness table for ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39240 (    0x10) full type metadata for ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39250 (    0x38) type metadata for ConnectionEndpointReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39288 (    0x70) value witness table for ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f392f8 (    0x10) full type metadata for ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39308 (    0x70) type metadata for ConnectionProviderState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39378 (    0x30) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f393a8 (    0x78) block_descriptor.7 [NameNList, MangledNameNList, NList] 
                0x0000000234f39420 (    0x50) block_descriptor.16 [NameNList, MangledNameNList, NList] 
                0x0000000234f39470 (    0x28) block_descriptor.22 [NameNList, MangledNameNList, NList] 
                0x0000000234f39498 (    0x58) value witness table for ConnectionMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f394f0 (    0x10) full type metadata for ConnectionMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39500 (    0x90) type metadata for ConnectionMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39590 (    0x78) protocol witness table for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39608 (    0x70) value witness table for ConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39678 (    0x10) full type metadata for ConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39688 (    0x10) type metadata for ConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39698 (    0x90) protocol witness table for AceObject [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39728 (    0x20) protocol witness table for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39748 (   0x140) protocol witness table for NWConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39888 (    0x40) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f398c8 (    0x98) protocol witness table for SpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39960 (    0x58) value witness table for ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f399b8 (    0x10) full type metadata for ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f399c8 (    0x30) type metadata for ConnectionQualityReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f399f8 (    0x70) value witness table for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39a68 (    0x10) full type metadata for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39a78 (    0xa0) type metadata for ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39b18 (    0x58) value witness table for ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39b70 (    0x10) full type metadata for ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39b80 (    0x88) type metadata for ConnectionNetworkReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39c08 (    0x58) value witness table for ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39c60 (    0x10) full type metadata for ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39c70 (    0xa8) type metadata for ConnectionPingInfoReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39d18 (    0xf0) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f39e08 (    0x70) value witness table for WiFiAssertionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39e78 (    0x10) full type metadata for WiFiAssertionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39e88 (    0x18) type metadata for WiFiAssertionType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39ea0 (    0x58) value witness table for ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39ef8 (    0x10) full type metadata for ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39f08 (    0x38) type metadata for ConnectionHTTPHeaderReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39f40 (    0x58) value witness table for ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39f98 (    0x10) full type metadata for ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f39fa8 (    0xb0) type metadata for ConnectionInterfaceReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a058 (    0xa8) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f3a100 (    0x50) block_descriptor.16 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a150 (    0x58) block_descriptor.23 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a1a8 (    0x78) block_descriptor.29 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a220 (    0x50) block_descriptor.39 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a270 (    0x58) protocol witness table for Connection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a2c8 (   0x170) protocol witness table for Connection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a438 (    0x50) block_descriptor.119 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a488 (    0x80) block_descriptor.127 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a508 (    0x78) block_descriptor.133 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a580 (    0x50) block_descriptor.143 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a5d0 (    0x30) block_descriptor.149 [NameNList, MangledNameNList, NList] 
                0x0000000234f3a600 (    0x58) value witness table for ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a658 (    0x10) full type metadata for ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a668 (    0xc8) type metadata for ConnectionEstablishmentReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a730 (    0x70) value witness table for ConnectionPolicyType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a7a0 (    0x10) full type metadata for ConnectionPolicyType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a7b0 (    0x10) type metadata for ConnectionPolicyType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a7c0 (    0x70) value witness table for ConnectionPolicyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a830 (    0x10) full type metadata for ConnectionPolicyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a840 (    0x10) type metadata for ConnectionPolicyProtocol [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a850 (    0x58) value witness table for ConnectionPolicyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a8a8 (    0x10) full type metadata for ConnectionPolicyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a8b8 (    0xa0) type metadata for ConnectionPolicyRoute [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3a958 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f3a9b0 (    0x50) block_descriptor.10 [NameNList, MangledNameNList, NList] 
                0x0000000234f3aa00 (    0x28) block_descriptor.17 [NameNList, MangledNameNList, NList] 
                0x0000000234f3aa28 (    0x50) block_descriptor.21 [NameNList, MangledNameNList, NList] 
                0x0000000234f3aa78 (    0x78) block_descriptor.27 [NameNList, MangledNameNList, NList] 
                0x0000000234f3aaf0 (    0x58) value witness table for ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ab48 (    0x10) full type metadata for ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ab58 (    0x88) type metadata for ConnectionPreparationReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3abe0 (    0x60) protocol witness table for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ac40 (    0x70) value witness table for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3acb0 (    0x10) full type metadata for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3acc0 (    0x68) type metadata for ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ad28 (    0x28) protocol witness table for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ad50 (    0xb8) protocol witness table for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3ae08 (    0xe0) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000234f3aee8 (    0x50) block_descriptor.131 [NameNList, MangledNameNList, NList] 
                0x0000000234f3af38 (    0x58) block_descriptor.138 [NameNList, MangledNameNList, NList] 
                0x0000000234f3af90 (    0x88) block_descriptor.145 [NameNList, MangledNameNList, NList] 
                0x0000000234f3b018 (    0x68) block_descriptor.157 [NameNList, MangledNameNList, NList] 
                0x0000000234f3b080 (    0x58) value witness table for LinkRecommendationInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b0d8 (    0x10) full type metadata for LinkRecommendationInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b0e8 (    0xb0) type metadata for LinkRecommendationInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b198 (    0x58) value witness table for ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b1f0 (    0x10) full type metadata for ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b200 (    0xc8) type metadata for ConnectionHandshakeReport [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b2c8 (    0x10) full type metadata for ConnectionProtocolTechnology [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b2d8 (    0x10) type metadata for ConnectionProtocolTechnology [EXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b2e8 (    0x58) value witness table for ConnectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b340 (    0x10) full type metadata for ConnectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000234f3b350 (    0xa0) type metadata for ConnectionConfiguration [EXT, NameNList, MangledNameNList, NList] 
            0x0000000234f3b3f0 (    0xe0) __AUTH_CONST __auth_ptr
            0x0000000234f3b4d0 (   0xcd0) __AUTH_CONST __auth_got
        0x0000000232c9a5a0 (  0x3248) __AUTH SEGMENT
            0x0000000232c9a5a0 (  0x1640) __AUTH __objc_data
                0x0000000232c9a5a0 (    0x28) OBJC_METACLASS_$_SNLinkRecommendationInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a5c8 (    0x28) OBJC_CLASS_$_SNLinkRecommendationInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a5f0 (    0x28) OBJC_CLASS_$_SNSpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a618 (    0x28) OBJC_METACLASS_$_SNSpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a640 (    0x28) OBJC_METACLASS_$_SNSiriNetwork [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a668 (    0x28) OBJC_CLASS_$_SNSiriNetwork [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a690 (    0x28) OBJC_METACLASS_$_SNConnectionMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a6b8 (    0x28) OBJC_CLASS_$_SNConnectionMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a6e0 (    0x28) OBJC_CLASS_$_SNConnection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a708 (    0x28) OBJC_METACLASS_$_SNConnection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a730 (    0x28) OBJC_CLASS_$_SNNetworkManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a758 (    0x28) OBJC_METACLASS_$_SNNetworkManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a780 (    0x28) OBJC_CLASS_$_SNNetworkAnalytics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a7a8 (    0x28) OBJC_METACLASS_$_SNNetworkAnalytics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a7d0 (    0x28) OBJC_CLASS_$_SNConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a7f8 (    0x28) OBJC_METACLASS_$_SNConnectionType [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a820 (    0x28) OBJC_CLASS_$_SNConnectionTCPInfoMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a848 (    0x28) OBJC_METACLASS_$_SNConnectionTCPInfoMetrics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a870 (    0x28) OBJC_CLASS_$_SNNetworkWiFiManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a898 (    0x28) OBJC_METACLASS_$_SNNetworkWiFiManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a8c0 (    0x28) OBJC_METACLASS_$_SNWiFiRecord [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a8e8 (    0x28) OBJC_CLASS_$_SNWiFiRecord [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a910 (    0x28) OBJC_CLASS_$_SNConnectionInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a938 (    0x28) OBJC_METACLASS_$_SNConnectionInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a960 (    0x48) _DATA_SNNetworkManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9a9a8 (    0x18) full type metadata for NetworkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a9c0 (   0x280) type metadata for NetworkManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9a9c0 (   0x280) OBJC_CLASS_$_SNNetworkManagerInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9ac40 (    0x48) _DATA_SNOspreyChannel [NameNList, MangledNameNList, NList] 
                0x0000000232c9ac88 (    0x18) full type metadata for SiriNetworkOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9aca0 (    0xc0) OBJC_CLASS_$_SNOspreyChannel [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x0000000232c9ad60 (    0x48) _DATA_SNNetworkAnalyticsInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9ada8 (    0x18) full type metadata for NetworkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9adc0 (   0x350) type metadata for NetworkAnalytics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9adc0 (   0x350) OBJC_CLASS_$_SNNetworkAnalyticsInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b110 (    0x48) _DATA_SNConnectionTypeInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b158 (    0x18) full type metadata for ConnectionTypeWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b170 (    0x88) type metadata for ConnectionTypeWrapper [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b170 (    0x88) OBJC_CLASS_$_SNConnectionTypeInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b1f8 (    0x48) _DATA_SNSpeechPacketInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b240 (    0x18) full type metadata for SpeechPacket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b258 (   0x128) type metadata for SpeechPacket [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b258 (   0x128) OBJC_CLASS_$_SNSpeechPacketInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b380 (    0x48) _DATA_SNNetworkWiFiManagerInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b3c8 (    0x18) full type metadata for NetworkWiFiManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b3e0 (   0x108) type metadata for NetworkWiFiManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b3e0 (   0x108) OBJC_CLASS_$_SNNetworkWiFiManagerInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b4e8 (    0x50) _DATA__TtC11SiriNetwork12QueueMonitor [NameNList, MangledNameNList, NList] 
                0x0000000232c9b538 (    0x50) _DATA_SNWiFiRecordInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b588 (    0x18) full type metadata for WiFiRecordRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b5a0 (    0x90) type metadata for WiFiRecordRepresentation [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b5a0 (    0x90) OBJC_CLASS_$_SNWiFiRecordInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b630 (    0x48) _DATA_SNConnectionInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b678 (    0x18) full type metadata for Connection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b690 (   0x2b8) type metadata for Connection [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b690 (   0x2b8) OBJC_CLASS_$_SNConnectionInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000232c9b948 (    0x48) _DATA_SNConnectionInfoInternal [NameNList, MangledNameNList, NList] 
                0x0000000232c9b990 (    0x18) full type metadata for ConnectionInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b9a8 (   0x238) type metadata for ConnectionInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9b9a8 (   0x238) OBJC_CLASS_$_SNConnectionInfoInternal [EXT, ALIAS, NameNList, MangledNameNList, NList] 
            0x0000000232c9bbe0 (  0x1c08) __AUTH __data
                0x0000000232c9bbe8 (    0x28) metaclass for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bc10 (    0x18) full type metadata for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bc28 (    0x88) type metadata for ZlibDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bcb0 (    0x28) OBJC_METACLASS_$_SNNetworkManagerInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bcd8 (    0x28) metaclass for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bd00 (    0x18) full type metadata for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9bd18 (   0x320) type metadata for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c038 (   0x1e0) protocol witness table for RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c218 (    0x28) OBJC_METACLASS_$_SNOspreyChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c240 (    0x28) metaclass for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c268 (    0x18) full type metadata for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c280 (   0x3b8) type metadata for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c638 (    0x28) metaclass for NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c660 (    0x18) full type metadata for NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c678 (    0x90) type metadata for NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c708 (    0x28) metaclass for NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c730 (    0x18) full type metadata for NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c748 (    0x90) type metadata for NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c7d8 (    0x28) metaclass for NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c800 (    0x18) full type metadata for NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c818 (    0x90) type metadata for NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9c8a8 (   0x1e0) protocol witness table for NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ca88 (    0x28) OBJC_METACLASS_$_SNNetworkAnalyticsInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cab0 (    0x28) metaclass for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cad8 (    0x18) full type metadata for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9caf0 (    0x60) type metadata for NoneDataDecompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cb50 (    0x28) OBJC_METACLASS_$_SNConnectionTypeInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cb78 (    0x28) metaclass for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cba0 (    0x18) full type metadata for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cbb8 (    0x60) type metadata for NoneDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cc18 (    0x28) OBJC_METACLASS_$_SNSpeechPacketInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cc40 (    0x28) OBJC_METACLASS_$_SNNetworkWiFiManagerInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cc68 (    0x28) metaclass for QueueMonitorManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cc90 (    0x18) full type metadata for QueueMonitorManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cca8 (    0xa8) type metadata for QueueMonitorManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cd50 (    0x28) metaclass for QueueObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cd78 (    0x18) full type metadata for QueueObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cd90 (    0x68) type metadata for QueueObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cdf8 (    0x28) metaclass for QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ce20 (    0x18) full type metadata for QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ce38 (   0x148) type metadata for QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cf80 (    0x58) value witness table for WiFiRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cfd8 (    0x10) full type metadata for WiFiRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9cfe8 (    0x30) type metadata for WiFiRecord [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d018 (    0x28) OBJC_METACLASS_$_SNWiFiRecordInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d040 (    0x28) OBJC_METACLASS_$_SNConnectionInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d068 (    0x28) OBJC_METACLASS_$_SNConnectionInfoInternal [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d090 (    0x28) metaclass for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d0b8 (    0x18) full type metadata for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d0d0 (    0x88) type metadata for ZlibDataCompressor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d158 (    0x28) metaclass for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d180 (    0x18) full type metadata for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d198 (   0x4b0) type metadata for BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d648 (    0x28) metaclass for NetworkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d670 (    0x18) full type metadata for NetworkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d688 (    0xc8) type metadata for NetworkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d750 (    0x70) value witness table for NetworkConnectionError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d7c0 (    0x10) full type metadata for NetworkConnectionError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9d7d0 (    0x18) type metadata for NetworkConnectionError [EXT, NameNList, MangledNameNList, NList] 
        0x0000000232c9d7f0 (  0x3400) __DATA SEGMENT
            0x0000000232c9d7f0 (    0x68) __DATA __objc_protorefs
            0x0000000232c9d858 (   0x190) __DATA __objc_classrefs
            0x0000000232c9d9e8 (    0x40) __DATA __objc_superrefs
            0x0000000232c9da28 (   0x17c) __DATA __objc_ivar
                0x0000000232c9da28 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._btPreference [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da2c (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._wifiPreference [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da30 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._btRSSI [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da34 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._wifiRSSI [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da38 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._wifiSNR [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da3c (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._beaconPER [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da40 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._nwType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da44 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._wifiCCA [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da48 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._lsmRecommendationBe [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da4c (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._expectedThroughputVIBE [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da50 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._packetLifetimeVIBE [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da54 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._packetLossRateVIBE [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da58 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._btRetransmissionRateTx [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da5c (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._btRetransmissionRateRx [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da60 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._btTech [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da64 (     0x4) OBJC_IVAR_$_SNLinkRecommendationInfo._timeTaken [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da68 (     0x4) OBJC_IVAR_$_SNSpeechPacket._underlyingSpeechPacket [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da6c (     0x4) OBJC_IVAR_$_SNConnectionMetrics._remoteMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da70 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._snapshotTriggerReason [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da74 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._providerStyle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da78 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._metricsCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da7c (     0x4) OBJC_IVAR_$_SNConnectionMetrics._policyId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da80 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._timeUntilOpen [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da84 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._timeUntilFirstByteRead [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da88 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._attemptCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da8c (     0x4) OBJC_IVAR_$_SNConnectionMetrics._dnsResolutionTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da90 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionStartTimeToDNSResolutionTimeMsec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da94 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionEstablishmentTimeMsec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da98 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionStartTimeToConnectionEstablishmentTimeMsec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9da9c (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionStartTimeToTLSHandshakeTimeMsec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daa0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._tlsVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daa4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._tlsHandshakeTimeMsec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daa8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._pingCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daac (     0x4) OBJC_IVAR_$_SNConnectionMetrics._meanPing [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dab0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._unacknowledgedPingCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dab4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._flowNetworkInterfaceType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dab8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._tcpInfoMetricsByInterfaceName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dabc (     0x4) OBJC_IVAR_$_SNConnectionMetrics._subflowCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dac0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectedSubflowCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dac4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._subflowSwitchCounts [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dac8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._primarySubflowInterfaceName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dacc (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dad0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionEdgeID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dad4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionEdgeType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dad8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionMethodHistory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dadc (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionFallbackReason [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dae0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._connectionDelay [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dae4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._firstTxByteDelay [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dae8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._carrierName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daec (     0x4) OBJC_IVAR_$_SNConnectionMetrics._signalStrengthBars [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daf0 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._simSubscriptions [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daf4 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._wifiPhyMode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9daf8 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._wifiChannelInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dafc (     0x4) OBJC_IVAR_$_SNConnectionMetrics._rssi [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db00 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._snr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db04 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._cca [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db08 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._isCaptive [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db0c (     0x4) OBJC_IVAR_$_SNConnectionMetrics._symptomsBasedNetworkQuality [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db10 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._idsLastMessageDelay [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db14 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._idsLastSocketDelay [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db18 (     0x4) OBJC_IVAR_$_SNConnectionMetrics._idsLastSocketOpenError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db1c (     0x4) OBJC_IVAR_$_SNConnection._delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db20 (     0x4) OBJC_IVAR_$_SNConnection._connectionInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db24 (     0x4) OBJC_IVAR_$_SNConnection._underlyingConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db28 (     0x4) OBJC_IVAR_$_SNNetworkManager._observers [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db2c (     0x4) OBJC_IVAR_$_SNNetworkManager._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db30 (     0x4) OBJC_IVAR_$_SNNetworkManager._underlyingNetworkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db34 (     0x4) OBJC_IVAR_$_SNNetworkAnalytics._underlyingNetworkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db38 (     0x4) OBJC_IVAR_$_SNConnectionType._underlyingConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db3c (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._interfaceName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db40 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._rttCurrent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db44 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._rttSmoothed [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db48 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._rttVariance [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db4c (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._rttBest [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db50 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._packetsSent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db54 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._packetsReceived [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db58 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._bytesSent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db5c (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._bytesReceived [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db60 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._bytesRetransmitted [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db64 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._bytesUnacked [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db68 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._duplicateBytesReceived [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db6c (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._outOfOrderBytesReceived [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db70 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._sendBufferBytes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db74 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._sendBandwidth [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db78 (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._synRetransmits [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db7c (     0x4) OBJC_IVAR_$_SNConnectionTCPInfoMetrics._tfoSynDataAcked [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db80 (     0x4) OBJC_IVAR_$_SNNetworkWiFiManager._underlyingNetworkWiFiManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db84 (     0x4) OBJC_IVAR_$_SNWiFiRecord._isCaptive [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db88 (     0x4) OBJC_IVAR_$_SNWiFiRecord._rssi [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db8c (     0x4) OBJC_IVAR_$_SNWiFiRecord._snr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db90 (     0x4) OBJC_IVAR_$_SNWiFiRecord._cca [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db94 (     0x4) OBJC_IVAR_$_SNWiFiRecord._channelInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db98 (     0x4) OBJC_IVAR_$_SNWiFiRecord._phyMode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9db9c (     0x4) OBJC_IVAR_$_SNWiFiRecord._timestamp [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dba0 (     0x4) OBJC_IVAR_$_SNConnectionInfo._underlyingConnectionInfo [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000232c9dba8 (   0x118) __DATA __objc_data
                0x0000000232c9dba8 (    0xc8) _PROTOCOL_INSTANCE_METHODS_SNConnectionDelegateInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dc70 (    0x50) _PROTOCOL_INSTANCE_METHODS_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000232c9dcc0 (   0xe48) __DATA __data
                0x0000000232c9dcc0 (    0x60) _OBJC_PROTOCOL_$_SNSessionObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dd20 (    0x60) _OBJC_PROTOCOL_$_SNConnectionDelegateInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dd80 (    0x60) _OBJC_PROTOCOL_$_SNConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dde0 (    0x60) _OBJC_PROTOCOL_$_SNNetworkManagerObserverInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de40 (     0x8) one-time initialization token for shared [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de48 (     0x8) one-time initialization token for siriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de50 (     0x8) one-time initialization token for sharedNetworkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de58 (     0x8) one-time initialization token for shared [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de60 (     0x8) one-time initialization token for isLittleEndian [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de68 (     0x8) one-time initialization token for htons [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de70 (     0x8) one-time initialization token for htonl [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9de78 (    0x78) outlined variable #0 of ConnectionQualityReport.Quality.init(rawValue:) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9def0 (    0x60) _OBJC_PROTOCOL_$_OS_nw_path_evaluator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9df50 (    0x60) _OBJC_PROTOCOL_$_OS_dispatch_source_timer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9dfb0 (    0x60) _OBJC_PROTOCOL_$_OspreyClientStreamingContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e010 (    0x60) _OBJC_PROTOCOL_$_SiriAnalyticsMessageStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e070 (     0x8) lazy cache variable for type metadata for nw_path_status_t [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e078 (     0x8) lazy cache variable for type metadata for z_stream_s [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e080 (     0x8) lazy cache variable for type metadata for CTSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e088 (     0x8) lazy cache variable for type metadata for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e090 (     0x8) lazy cache variable for type metadata for tcp_info [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e098 (     0x8) lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e0a0 (     0x8) lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e0a8 (     0x8) lazy cache variable for type metadata for tcp_conn_status [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e0b0 (    0x10) lazy cache variable for type metadata for tcp_conn_status.__Unnamed_union___Anonymous_field0 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e0c0 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e120 (    0x60) _OBJC_PROTOCOL_$_OS_dispatch_source [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e180 (     0x8) static NetworkManager.shared [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e188 (     0x8) direct field offset for NetworkManager.pathEvaluator [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e190 (     0x8) direct field offset for NetworkManager.coreTelephonyClient [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e198 (     0x8) direct field offset for NetworkManager.lock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1a0 (     0x8) direct field offset for NetworkManager.observers [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1a8 (     0x8) direct field offset for NetworkManager.dataServiceDescriptor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1b0 (     0x8) direct field offset for NetworkManager.lastDataSubscriptionSlot [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1b8 (     0x8) direct field offset for NetworkManager.subscriptionSlotOneStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1c0 (     0x8) direct field offset for NetworkManager.subscriptionSlotTwoStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1c8 (     0x8) direct field offset for NetworkManager.lastSuccessfulSymptomsFetch [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1d0 (     0x8) direct field offset for NetworkManager.lastFetchInProgress [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1d8 (     0x8) direct field offset for NetworkManager.lastSignalStrength [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1e0 (     0x8) direct field offset for NetworkManager.subscriptionCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1e8 (     0x8) direct field offset for NetworkManager.carrierName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1f0 (     0x8) direct field offset for NetworkManager.pathStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e1f8 (     0x8) direct field offset for NetworkManager.pathUsesCellular [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e200 (     0x8) direct field offset for NetworkManager.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e208 (     0x8) direct field offset for NetworkManager.networkWiFiManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e210 (     0x8) direct field offset for NetworkManager.networkWirelessCoexManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e218 (     0x8) lazy cache variable for type metadata for OS_dispatch_queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e220 (     0x8) lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e228 (     0x8) demangling cache variable for type metadata for [OS_dispatch_queue.Attributes] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e230 (     0x8) lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e238 (     0x8) lazy protocol witness table cache variable for type ConnectionConfigurationError and conformance ConnectionConfigurationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e240 (     0x8) lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e248 (     0x8) lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e250 (    0x60) _OBJC_PROTOCOL_$_CoreTelephonyClientCarrierBundleDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e2b0 (    0x60) _OBJC_PROTOCOL_$_CoreTelephonyClientDataDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e310 (    0x60) _OBJC_PROTOCOL_$_CoreTelephonyClientSubscriberDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e370 (    0x60) _OBJC_PROTOCOL_$_CoreTelephonyClientRegistrationDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e3d0 (    0x10) lazy cache variable for type metadata for CTServiceDescriptor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e3e0 (    0x10) demangling cache variable for type metadata for [DispatchWorkItemFlags] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e3f0 (     0x8) demangling cache variable for type metadata for NSObject? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e3f8 (     0x8) lazy cache variable for type metadata for CTXPCServiceSubscriptionContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e400 (    0x10) demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e410 (     0x8) lazy protocol witness table cache variable for type NetworkConnectionError and conformance NetworkConnectionError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e418 (     0x8) lazy protocol witness table cache variable for type RPCOspreyConnectionProvider and conformance RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e420 (     0x8) lazy protocol witness table cache variable for type RPCOspreyConnectionProvider and conformance RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e428 (     0x8) demangling cache variable for type metadata for RPCOspreyConnectionProtocol? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e430 (     0x8) demangling cache variable for type metadata for Error? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e438 (     0x8) demangling cache variable for type metadata for NWError? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e440 (     0x8) demangling cache variable for type metadata for Error [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e448 (     0x8) demangling cache variable for type metadata for Result<(), NetworkConnectionError> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e450 (     0x8) demangling cache variable for type metadata for URL? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e458 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e460 (     0x8) demangling cache variable for type metadata for CFStringRef? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e468 (     0x8) lazy protocol witness table cache variable for type CFStringRef? and conformance <A> A? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e470 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<(CFStringRef?, Bool)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e478 (     0x8) demangling cache variable for type metadata for [CFStringRef? : Bool] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e480 (     0x8) demangling cache variable for type metadata for Any? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e488 (     0x8) demangling cache variable for type metadata for _NativeDictionary<AnyHashable, Any> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e490 (     0x8) demangling cache variable for type metadata for _NativeDictionary<String, String> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e498 (     0x8) lazy cache variable for type metadata for OS_os_log [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e4a0 (    0x80) type metadata instantiation cache for SafeCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e520 (    0x60) _OBJC_PROTOCOL_$_OS_nw_endpoint [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e580 (     0x8) demangling cache variable for type metadata for [String] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e588 (     0x8) lazy protocol witness table cache variable for type [String] and conformance [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e590 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<String> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e598 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Any> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5a0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<(key: Int, value: [ConnectionPolicyRoute])> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5a8 (     0x8) demangling cache variable for type metadata for (key: Int, value: [ConnectionPolicyRoute]) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5b0 (    0x10) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionPolicyRoute> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5c0 (     0x8) direct field offset for SiriNetworkOspreyChannel.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5c8 (     0x8) direct field offset for SiriNetworkOspreyChannel.ospreyClientStreamingContext [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5d0 (     0x8) direct field offset for SiriNetworkOspreyChannel.ospreyRequestBuilder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5d8 (     0x8) lazy cache variable for type metadata for NSURLSessionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5e0 (     0x8) lazy protocol witness table cache variable for type [ConnectionMethod] and conformance [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5e8 (     0x8) demangling cache variable for type metadata for [ConnectionMethod] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5f0 (     0x8) lazy protocol witness table cache variable for type ConnectionMethod and conformance ConnectionMethod [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e5f8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionMethod> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e600 (     0x8) lazy protocol witness table cache variable for type RPCOspreyConnectionProvider and conformance RPCOspreyConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e608 (     0x8) lazy protocol witness table cache variable for type NetworkConnectionProvider and conformance NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e610 (    0x10) type metadata singleton initialization cache for NetworkConnectionProvider.StateUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e620 (    0x10) type metadata singleton initialization cache for NetworkConnectionProvider.ViabilityUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e630 (    0x10) type metadata singleton initialization cache for NetworkConnectionProvider.BetterPathUpdateHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e640 (     0x8) lazy protocol witness table cache variable for type NetworkConnectionProvider and conformance NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e648 (     0x8) lazy protocol witness table cache variable for type NetworkConnectionProvider and conformance NetworkConnectionProvider [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e650 (     0x8) demangling cache variable for type metadata for NetworkConnectionProtocol? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e658 (     0x8) demangling cache variable for type metadata for NetworkConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e660 (     0x8) demangling cache variable for type metadata for ConnectionSnapshotReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e668 (     0x8) demangling cache variable for type metadata for ConnectionEstablishmentReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e670 (     0x8) demangling cache variable for type metadata for NWPath? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e678 (     0x8) demangling cache variable for type metadata for ConnectionPreparationReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e680 (     0x8) demangling cache variable for type metadata for NetworkConnectionError? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e688 (     0x8) lazy protocol witness table cache variable for type NWError and conformance NWError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e690 (     0x8) lazy cache variable for type metadata for OS_dispatch_source [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e698 (     0x8) lazy protocol witness table cache variable for type OS_dispatch_source.TimerFlags and conformance OS_dispatch_source.TimerFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6a0 (     0x8) demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6a8 (     0x8) lazy protocol witness table cache variable for type [OS_dispatch_source.TimerFlags] and conformance [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6b0 (     0x8) demangling cache variable for type metadata for NWEndpoint? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6b8 (     0x8) demangling cache variable for type metadata for UInt64? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6c0 (     0x8) demangling cache variable for type metadata for ConnectionPingInfoReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6c8 (     0x8) demangling cache variable for type metadata for ConnectionQualityReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6d0 (     0x8) demangling cache variable for type metadata for ConnectionNetworkReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6d8 (     0x8) static ConnectionPolicy.maxGlobalTimeout [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6e0 (     0x8) lazy cache variable for type metadata for SAConnectionPolicyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6e8 (     0x8) lazy protocol witness table cache variable for type ConnectionConfiguration and conformance ConnectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6f0 (     0x8) static NetworkAnalytics.sharedNetworkAnalytics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e6f8 (     0x8) direct field offset for NetworkAnalytics.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e700 (     0x8) direct field offset for NetworkAnalytics.netId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e708 (     0x8) direct field offset for NetworkAnalytics.orchestratorRequestId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e710 (     0x8) direct field offset for NetworkAnalytics.netIdForRequestLink [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e718 (     0x8) direct field offset for NetworkAnalytics.isConnectionActive [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e720 (     0x8) direct field offset for NetworkAnalytics.netIdAvailable [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e728 (     0x8) direct field offset for NetworkAnalytics.sequenceNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e730 (     0x8) direct field offset for NetworkAnalytics.httpHeaderEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e738 (     0x8) direct field offset for NetworkAnalytics.preparationSnapshotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e740 (     0x8) direct field offset for NetworkAnalytics.debugPreparationSnapshotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e748 (     0x8) direct field offset for NetworkAnalytics.readySnapshotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e750 (     0x8) direct field offset for NetworkAnalytics.debugReadySnapshotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e758 (     0x8) direct field offset for NetworkAnalytics.sessionConnectionSnapthotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e760 (     0x8) direct field offset for NetworkAnalytics.debugSessionConnectionSnapthotEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e768 (     0x8) direct field offset for NetworkAnalytics.sessionConnectionFailedEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e770 (     0x8) direct field offset for NetworkAnalytics.peerConnectionFailedEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e778 (     0x8) direct field offset for NetworkAnalytics.siriAnalyticsMessageStream [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e780 (     0x8) lazy cache variable for type metadata for NSUUID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e788 (     0x8) demangling cache variable for type metadata for UUID? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e790 (     0x8) lazy cache variable for type metadata for SISchemaUUID [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e798 (     0x8) direct field offset for ConnectionTypeWrapper.connectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7a0 (     0x8) lazy protocol witness table cache variable for type ConnectionType and conformance ConnectionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7a8 (     0x8) lazy protocol witness table cache variable for type AceSerializationError and conformance AceSerializationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7b0 (     0x8) demangling cache variable for type metadata for NWConnection.EstablishmentReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7b8 (     0x8) demangling cache variable for type metadata for NWInterface? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7c0 (     0x8) demangling cache variable for type metadata for _NativeDictionary<String, ConnectionType> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7c8 (     0x8) demangling cache variable for type metadata for tcp_info? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7d0 (     0x8) direct field offset for SpeechPacket.internalAceId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7d8 (     0x8) direct field offset for SpeechPacket.internalRefId [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7e0 (     0x8) direct field offset for SpeechPacket.packets [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7e8 (     0x8) direct field offset for SpeechPacket.packetNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7f0 (     0x8) lazy cache variable for type metadata for NSData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e7f8 (     0x8) lazy protocol witness table cache variable for type ConnectionQualityReport.Quality and conformance ConnectionQualityReport.Quality [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e800 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<StaticString> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e808 (     0x8) static NetworkWiFiManager.shared [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e810 (     0x8) direct field offset for NetworkWiFiManager.interface [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e818 (     0x8) demangling cache variable for type metadata for WiFiRecord? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e820 (     0x8) direct field offset for NetworkWiFiManager.wifiClient [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e828 (     0x8) direct field offset for NetworkWiFiManager.queue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e830 (     0x8) direct field offset for NetworkWiFiManager.queueGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e838 (     0x8) static Endian.isLittleEndian [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e840 (    0x10) static Endian.htons [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e850 (    0x10) static Endian.htonl [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e860 (    0x10) type metadata singleton initialization cache for QueueMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e870 (     0x8) demangling cache variable for type metadata for Double? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e878 (     0x8) demangling cache variable for type metadata for UnsafePointer<Int8> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e880 (     0x8) demangling cache variable for type metadata for _NativeDictionary<String, UInt64> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e888 (     0x8) demangling cache variable for type metadata for _NativeDictionary<String, Data> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e890 (     0x8) demangling cache variable for type metadata for _NativeDictionary<String, SNConnectionTCPInfoMetrics> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e898 (     0x8) lazy protocol witness table cache variable for type ConnectionPolicyRoute and conformance ConnectionPolicyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8a0 (     0x8) demangling cache variable for type metadata for Locale? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8a8 (     0x8) direct field offset for WiFiRecordRepresentation.rssi [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8b0 (     0x8) direct field offset for WiFiRecordRepresentation.snr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8b8 (     0x8) direct field offset for WiFiRecordRepresentation.cca [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8c0 (     0x8) direct field offset for WiFiRecordRepresentation.channelInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8c8 (     0x8) direct field offset for WiFiRecordRepresentation.phyMode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8d0 (     0x8) direct field offset for WiFiRecordRepresentation.isCaptive [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8d8 (     0x8) lazy protocol witness table cache variable for type WiFiAssertionType and conformance WiFiAssertionType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8e0 (    0x10) type metadata singleton initialization cache for WiFiRecord [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e8f0 (    0x10) type metadata singleton initialization cache for WiFiRecordRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e900 (     0x8) demangling cache variable for type metadata for ConnectionTCPInfoMetrics? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e908 (     0x8) direct field offset for Connection.delegate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e910 (     0x8) direct field offset for Connection.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e918 (     0x8) direct field offset for Connection.connectionQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e920 (     0x8) direct field offset for Connection.activeBackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e928 (     0x8) direct field offset for Connection.activeRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e930 (     0x8) direct field offset for Connection.isCanceled [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e938 (     0x8) direct field offset for Connection.isCanceledInternal [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e940 (     0x8) direct field offset for Connection.connectionMethodUsedHistory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e948 (     0x8) direct field offset for Connection.networkManager [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e950 (     0x8) direct field offset for Connection.pendingBackgroundConnections [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e958 (     0x8) direct field offset for Connection.pendingRoutes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e960 (     0x8) direct field offset for Connection.comatoseBackgroundConnections [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e968 (     0x8) direct field offset for Connection.comatoseRoutes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e970 (     0x8) direct field offset for Connection.scheduledRoutes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e978 (     0x8) direct field offset for Connection.activeConnectionGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e980 (     0x8) lazy protocol witness table cache variable for type ConnectionConfigurationError and conformance ConnectionConfigurationError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e988 (     0x8) demangling cache variable for type metadata for BackgroundConnectionProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e990 (     0x8) demangling cache variable for type metadata for _SetStorage<BackgroundConnection> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e998 (     0x8) demangling cache variable for type metadata for _SetStorage<ConnectionPolicyRoute> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9a0 (     0x8) lazy protocol witness table cache variable for type BackgroundConnection and conformance BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9a8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionInterfaceReport> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9b0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionTCPInfoMetrics> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9b8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionResolutionReport> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9c0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionHandshakeReport> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9c8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionEndpointReport> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9d0 (     0x8) demangling cache variable for type metadata for _SetStorage<AnyHashable> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9d8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Double> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9e0 (     0x8) demangling cache variable for type metadata for _SetStorage<ConnectionMethod> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9e8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<ConnectionMetrics> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9f0 (     0x8) demangling cache variable for type metadata for ConnectionEndpointReport? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9e9f8 (     0x8) lazy protocol witness table cache variable for type ConnectionPolicyType and conformance ConnectionPolicyType [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea00 (     0x8) lazy protocol witness table cache variable for type ConnectionPolicyProtocol and conformance ConnectionPolicyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea08 (     0x8) demangling cache variable for type metadata for _DictionaryStorage<Int, [ConnectionPolicyRoute]> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea10 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea18 (     0x8) demangling cache variable for type metadata for NetworkManagerObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea20 (     0x8) demangling cache variable for type metadata for AnyHashable? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea28 (     0x8) direct field offset for ConnectionInfo.connectionConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea30 (     0x8) direct field offset for ConnectionInfo.policy [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea38 (     0x8) direct field offset for ConnectionInfo.policyRoute [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea40 (     0x8) lazy protocol witness table cache variable for type ConnectionPolicy and conformance ConnectionPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea48 (     0x8) demangling cache variable for type metadata for DispatchData? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea50 (     0x8) lazy protocol witness table cache variable for type DispatchData and conformance DispatchData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea58 (     0x8) lazy cache variable for type metadata for SNConnectionTCPInfoMetrics [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea60 (     0x8) demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea68 (     0x8) demangling cache variable for type metadata for String? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea70 (     0x8) lazy cache variable for type metadata for NETSchemaNETPathInterface [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea78 (     0x8) lazy cache variable for type metadata for NETSchemaNETEndpoint [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea80 (     0x8) lazy protocol witness table cache variable for type ConnectionState and conformance ConnectionState [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea88 (     0x8) lazy protocol witness table cache variable for type BackgroundConnection and conformance BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea90 (     0x8) lazy protocol witness table cache variable for type BackgroundConnection and conformance BackgroundConnection [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ea98 (     0x8) demangling cache variable for type metadata for ConnectionProviderProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eaa0 (    0x10) type metadata singleton initialization cache for NetworkConnectionError [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eab0 (     0x8) lazy cache variable for type metadata for NWError? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eab8 (     0x8) lazy protocol witness table cache variable for type String and conformance String [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eac0 (     0x8) demangling cache variable for type metadata for [String : Int] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eac8 (     0x8) demangling cache variable for type metadata for [String : Any] [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ead0 (     0x8) demangling cache variable for type metadata for (name: String, type: String, domain: String, interface: NWInterface?) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9ead8 (     0x8) demangling cache variable for type metadata for (host: NWEndpoint.Host, port: NWEndpoint.Port) [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eae0 (     0x8) demangling cache variable for type metadata for NWEndpoint.Port? [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eae8 (     0x8) lazy cache variable for type metadata for NETSchemaNETHandShakeProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eaf0 (     0x8) lazy cache variable for type metadata for NETSchemaNETEstablishmentResolution [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eaf8 (     0x8) lazy protocol witness table cache variable for type ConnectionProtocolTechnology and conformance ConnectionProtocolTechnology [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232c9eb00 (     0x8) demangling cache variable for type metadata for URLComponents? [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000232c9eb10 (  0x20a0) __DATA __bss
                0x0000000232c9eb10 (     0x8) sharedInstance.sSharedInstance [NameNList, MangledNameNList, NList] 
                0x0000000232c9eb18 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000232c9eb20 (     0x8) sharedSNNetworkAnalytics.onceToken [NameNList, MangledNameNList, NList] 
                0x0000000232c9eb28 (     0x8) sharedSNNetworkAnalytics.shared [NameNList, MangledNameNList, NList] 
                0x0000000232c9eb30 (    0x80) metadata instantiation cache for protocol conformance descriptor for CTSubscriptionSlot [NameNList, MangledNameNList, NList] 
                0x0000000232c9ebb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for nw_path_status_t [NameNList, MangledNameNList, NList] 
                0x0000000232c9ec30 (    0x80) metadata instantiation cache for protocol conformance descriptor for nw_path_status_t [NameNList, MangledNameNList, NList] 
                0x0000000232c9ecb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x0000000232c9ed30 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x0000000232c9edb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x0000000232c9ee30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionConfigurationError [NameNList, MangledNameNList, NList] 
                0x0000000232c9eeb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionConfigurationError [NameNList, MangledNameNList, NList] 
                0x0000000232c9ef30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionConfigurationError [NameNList, MangledNameNList, NList] 
                0x0000000232c9efb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for AceSerializationError [NameNList, MangledNameNList, NList] 
                0x0000000232c9f030 (    0x80) metadata instantiation cache for protocol conformance descriptor for RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f0b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f130 (    0x80) metadata instantiation cache for protocol conformance descriptor for RPCOspreyConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f1b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionResolutionReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9f230 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionTCPInfoMetrics [NameNList, MangledNameNList, NList] 
                0x0000000232c9f2b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionMethod [NameNList, MangledNameNList, NList] 
                0x0000000232c9f330 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionMethod [NameNList, MangledNameNList, NList] 
                0x0000000232c9f3b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionMethod [NameNList, MangledNameNList, NList] 
                0x0000000232c9f430 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionMethod [NameNList, MangledNameNList, NList] 
                0x0000000232c9f4b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f530 (    0x80) metadata instantiation cache for protocol conformance descriptor for NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f5b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for NetworkConnectionProvider [NameNList, MangledNameNList, NList] 
                0x0000000232c9f630 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionSnapshotReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9f6b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000232c9f730 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000232c9f7b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionEndpointReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9f830 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9f8b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9f930 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9f9b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionQualityReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9fa30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionQualityReport.Quality [NameNList, MangledNameNList, NList] 
                0x0000000232c9fab0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionQualityReport.Quality [NameNList, MangledNameNList, NList] 
                0x0000000232c9fb30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionQualityReport.Quality [NameNList, MangledNameNList, NList] 
                0x0000000232c9fbb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionNetworkReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9fc30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPingInfoReport [NameNList, MangledNameNList, NList] 
                0x0000000232c9fcb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyRoute [NameNList, MangledNameNList, NList] 
                0x0000000232c9fd30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyRoute [NameNList, MangledNameNList, NList] 
                0x0000000232c9fdb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for WiFiAssertionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9fe30 (    0x80) metadata instantiation cache for protocol conformance descriptor for WiFiAssertionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9feb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for WiFiAssertionType [NameNList, MangledNameNList, NList] 
                0x0000000232c9ff30 (    0x80) metadata instantiation cache for protocol conformance descriptor for WiFiRecord [NameNList, MangledNameNList, NList] 
                0x0000000232c9ffb0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionHTTPHeaderReport [NameNList, MangledNameNList, NList] 
                0x0000000232ca0030 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionInterfaceReport [NameNList, MangledNameNList, NList] 
                0x0000000232ca00b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionEstablishmentReport [NameNList, MangledNameNList, NList] 
                0x0000000232ca0130 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyType [NameNList, MangledNameNList, NList] 
                0x0000000232ca01b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyType [NameNList, MangledNameNList, NList] 
                0x0000000232ca0230 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyType [NameNList, MangledNameNList, NList] 
                0x0000000232ca02b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyProtocol [NameNList, MangledNameNList, NList] 
                0x0000000232ca0330 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyProtocol [NameNList, MangledNameNList, NList] 
                0x0000000232ca03b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicyProtocol [NameNList, MangledNameNList, NList] 
                0x0000000232ca0430 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicy [NameNList, MangledNameNList, NList] 
                0x0000000232ca04b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPolicy [NameNList, MangledNameNList, NList] 
                0x0000000232ca0530 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionPreparationReport [NameNList, MangledNameNList, NList] 
                0x0000000232ca05b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionState [NameNList, MangledNameNList, NList] 
                0x0000000232ca0630 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionState [NameNList, MangledNameNList, NList] 
                0x0000000232ca06b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionState [NameNList, MangledNameNList, NList] 
                0x0000000232ca0730 (    0x80) metadata instantiation cache for protocol conformance descriptor for BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000232ca07b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000232ca0830 (    0x80) metadata instantiation cache for protocol conformance descriptor for BackgroundConnection [NameNList, MangledNameNList, NList] 
                0x0000000232ca08b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for LinkRecommendationInfo [NameNList, MangledNameNList, NList] 
                0x0000000232ca0930 (    0x80) metadata instantiation cache for protocol conformance descriptor for NetworkConnectionError [NameNList, MangledNameNList, NList] 
                0x0000000232ca09b0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionHandshakeReport [NameNList, MangledNameNList, NList] 
                0x0000000232ca0a30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionProtocolTechnology [NameNList, MangledNameNList, NList] 
                0x0000000232ca0ab0 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionProtocolTechnology [NameNList, MangledNameNList, NList] 
                0x0000000232ca0b30 (    0x80) metadata instantiation cache for protocol conformance descriptor for ConnectionProtocolTechnology [NameNList, MangledNameNList, NList] 
            0x0000000232ca0bb0 (    0x40) __DATA __common
                0x0000000232ca0bb0 (    0x18) static Logger.siriNetwork [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ca0bc8 (     0x8) direct field offset for QueueMonitor.initialWaitingTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ca0bd0 (     0x8) direct field offset for QueueMonitor.handler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ca0bd8 (     0x8) direct field offset for QueueMonitor.currentReports [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ca0be0 (     0x8) direct field offset for QueueMonitor.maxNumberOfReports [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ca0be8 (     0x8) direct field offset for WiFiRecordRepresentation.timestamp [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
