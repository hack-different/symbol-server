/usr/lib/libhunspell-1.2.0.dylib [arm64e, 0.037988 seconds]:
    BAB0B3FA-4BD4-3D0F-BBBC-2EA06B0DE586 /usr/lib/libhunspell-1.2.0.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000220c93000 ( 0x27ff8) __TEXT SEGMENT
            0x0000000220c93000 (   0x90c) MACH_HEADER
            0x0000000220c9390c ( 0x1a1f0) __TEXT __text
                0x0000000220c9390c (    0x8c) PfxEntry::PfxEntry(AffixMgr*, affentry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c93998 (     0x4) PfxEntry::PfxEntry(AffixMgr*, affentry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9399c (    0x80) PfxEntry::~PfxEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c93a1c (     0x4) PfxEntry::~PfxEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c93a20 (   0x10c) PfxEntry::add(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c93b2c (   0x378) PfxEntry::test_condition(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c93ea4 (   0x1a4) PfxEntry::checkword(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94048 (   0x120) PfxEntry::check_twosfx(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94168 (   0x120) PfxEntry::check_twosfx_morph(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94288 (   0x3a8) PfxEntry::check_morph(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94630 (    0xb0) SfxEntry::SfxEntry(AffixMgr*, affentry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c946e0 (     0x4) SfxEntry::SfxEntry(AffixMgr*, affentry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c946e4 (    0x8c) SfxEntry::~SfxEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94770 (     0x4) SfxEntry::~SfxEntry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94774 (   0x124) SfxEntry::add(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94898 (   0x490) SfxEntry::test_condition(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94d28 (   0x2ac) SfxEntry::checkword(char const*, int, int, AffEntry*, char**, int, int*, unsigned short, unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c94fd4 (   0x190) SfxEntry::check_twosfx(char const*, int, int, AffEntry*, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c95164 (   0x238) SfxEntry::check_twosfx_morph(char const*, int, int, AffEntry*, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9539c (   0x120) SfxEntry::get_next_homonym(hentry*, int, AffEntry*, unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c954bc (   0x150) AffixMgr::AffixMgr(char const*, HashMgr**, int*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9560c (  0x105c) AffixMgr::parse_file(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96668 (     0x4) AffixMgr::AffixMgr(char const*, HashMgr**, int*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9666c (   0x424) AffixMgr::~AffixMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96a90 (     0x4) AffixMgr::~AffixMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96a94 (    0x90) AffixMgr::parse_flag(char*, unsigned short*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96b24 (    0x84) AffixMgr::parse_num(char*, int*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96ba8 (   0x184) AffixMgr::parse_cpdsyllable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96d2c (   0x1f8) AffixMgr::parse_reptable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c96f24 (   0x23c) AffixMgr::parse_convtable(char*, FileMgr*, RepList**, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c97160 (   0x27c) AffixMgr::parse_phonetable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c973dc (   0x25c) AffixMgr::parse_checkcpdtable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c97638 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000220c97648 (   0x2cc) AffixMgr::parse_defcpdtable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c97914 (   0x298) AffixMgr::parse_maptable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c97bac (   0x18c) AffixMgr::parse_breaktable(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c97d38 (   0x718) AffixMgr::parse_affix(char*, char, FileMgr*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98450 (    0x10) (null) [FUNC, FunctionStarts] 
                0x0000000220c98460 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000220c98478 (    0x48) AffixMgr::process_pfx_tree_to_list() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c984c0 (    0x48) AffixMgr::process_sfx_tree_to_list() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98508 (   0x18c) AffixMgr::process_pfx_order() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98694 (   0x194) AffixMgr::process_sfx_order() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98828 (    0x48) AffixMgr::get_encoding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98870 (    0xac) AffixMgr::build_pfxtree(AffEntry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9891c (    0xb8) AffixMgr::build_sfxtree(AffEntry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c989d4 (    0x50) AffixMgr::process_pfx_in_order(AffEntry*, AffEntry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98a24 (    0x50) AffixMgr::process_sfx_in_order(AffEntry*, AffEntry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98a74 (    0x8c) AffixMgr::debugflag(char*, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98b00 (     0x8) AffixMgr::encode_flag(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98b08 (    0x7c) AffixMgr::condlen(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98b84 (    0xa4) AffixMgr::encodeit(affentry*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98c28 (   0x1a0) AffixMgr::prefix_check(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98dc8 (   0x114) AffixMgr::prefix_check_twosfx(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c98edc (   0x1e0) AffixMgr::prefix_check_morph(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c990bc (   0x1b4) AffixMgr::prefix_check_twosfx_morph(char const*, int, char, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c99270 (   0x1dc) AffixMgr::cpdrep_check(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9944c (   0x150) AffixMgr::cpdpat_check(char const*, int, hentry*, hentry*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9959c (   0x110) AffixMgr::cpdcase_check(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c996ac (   0x4ec) AffixMgr::defcpd_check(hentry***, short, hentry*, hentry**, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c99b98 (   0x110) AffixMgr::get_syllable(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c99ca8 (    0xcc) AffixMgr::setcminmax(int*, int*, char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c99d74 (  0x1280) AffixMgr::compound_check(char const*, int, short, short, short, short, hentry**, char, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9aff4 (    0x70) AffixMgr::lookup(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9b064 (   0x3b4) AffixMgr::suffix_check(char const*, int, int, AffEntry*, char**, int, int*, unsigned short, unsigned short, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9b418 (    0xf8) AffixMgr::affix_check(char const*, int, unsigned short, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9b510 (  0x1624) AffixMgr::compound_check_morph(char const*, int, short, short, short, short, hentry**, char, char**, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9cb34 (   0x194) AffixMgr::affix_check_morph(char const*, int, unsigned short, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ccc8 (   0x174) AffixMgr::suffix_check_twosfx(char const*, int, int, AffEntry*, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ce3c (   0x374) AffixMgr::suffix_check_twosfx_morph(char const*, int, int, AffEntry*, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9d1b0 (   0x820) AffixMgr::suffix_check_morph(char const*, int, int, AffEntry*, unsigned short, unsigned short, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9d9d0 (   0x324) AffixMgr::morphgen(char*, int, unsigned short const*, unsigned short, char*, char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9dcf4 (   0x564) AffixMgr::expand_rootword(guessword*, int, char const*, int, unsigned short const*, unsigned short, char*, int, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e258 (     0x8) AffixMgr::get_numrep() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e260 (     0x8) AffixMgr::get_reptable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e268 (     0x8) AffixMgr::get_iconvtable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e270 (     0x8) AffixMgr::get_oconvtable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e278 (     0x8) AffixMgr::get_phonetable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e280 (     0x8) AffixMgr::get_nummap() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e288 (     0x8) AffixMgr::get_maptable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e290 (     0x8) AffixMgr::get_numbreak() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e298 (     0x8) AffixMgr::get_breaktable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2a0 (     0x8) AffixMgr::get_langnum() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2a8 (     0x8) AffixMgr::get_complexprefixes() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2b0 (     0x8) AffixMgr::get_fullstrip() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2b8 (     0xc) AffixMgr::get_keepcase() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2c4 (     0x8) AffixMgr::get_checksharps() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2cc (     0x8) AffixMgr::get_ignore() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2d4 (    0x10) AffixMgr::get_ignore_utf16(int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e2e4 (    0x48) AffixMgr::get_key_string() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e32c (    0x10) AffixMgr::get_try_string() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e33c (     0x8) AffixMgr::get_wordchars() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e344 (    0x10) AffixMgr::get_wordchars_utf16(int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e354 (    0x30) AffixMgr::get_compound() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e384 (     0xc) AffixMgr::get_compoundflag() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e390 (     0xc) AffixMgr::get_forbiddenword() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e39c (     0xc) AffixMgr::get_nosuggest() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3a8 (     0xc) AffixMgr::get_needaffix() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3b4 (     0xc) AffixMgr::get_onlyincompound() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3c0 (     0xc) AffixMgr::get_compoundroot() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3cc (     0xc) AffixMgr::get_compoundbegin() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3d8 (     0x8) AffixMgr::get_checknum() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3e0 (    0x18) AffixMgr::get_prefix() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e3f8 (     0x8) AffixMgr::get_suffix() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e400 (     0x8) AffixMgr::get_version() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e408 (     0xc) AffixMgr::get_lemma_present() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e414 (     0x8) AffixMgr::have_contclass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e41c (     0x8) AffixMgr::get_utf8() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e424 (     0x8) AffixMgr::get_maxngramsugs() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e42c (     0x8) AffixMgr::get_nosplitsugs() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e434 (     0x8) AffixMgr::get_sugswithdots() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e43c (    0xc0) AffixMgr::reverse_condition(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e4fc (   0x264) AffixMgr::redundant_condition(char, char*, int, char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e760 (   0x100) u16_u8(char*, int, w_char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e860 (   0x100) u8_u16(w_char*, int, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9e960 (    0x40) (null) [FUNC, FunctionStarts] 
                0x0000000220c9e9a0 (    0xa4) flag_qsort(unsigned short*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ea44 (    0x50) flag_bsearch(unsigned short*, unsigned short, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ea94 (    0x84) mystrsep(char**, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9eb18 (    0x64) mystrdup(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9eb7c (    0x68) mystrcat(char*, char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ebe4 (    0x5c) mychomp(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ec40 (    0x70) myrevstrdup(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ecb0 (   0x108) line_tok(char const*, char***, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9edb8 (   0x124) line_uniq(char*, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9eedc (   0x1c0) line_uniq_app(char**, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f09c (    0x6c) freelist(char***, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f108 (    0xbc) strlinecat(char*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f1c4 (    0x28) tr(char*, char, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f1ec (   0x334) morphcmp(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f520 (    0xd8) get_sfxcount(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f5f8 (    0x3c) fieldlen(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f634 (    0x7c) copy_field(char*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f6b0 (    0xfc) mystrrep(char*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f7ac (    0x5c) reverseword(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f808 (    0xc8) reverseword_utf(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f8d0 (    0xcc) uniqlist(char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f99c (    0x2c) mkallcap(char*, cs_info const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f9c8 (    0x2c) mkallsmall(char*, cs_info const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9f9f4 (    0xc8) mkallsmall_utf(w_char*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fabc (    0x44) unicodetolower(unsigned short, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fb00 (    0xc8) mkallcap_utf(w_char*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fbc8 (    0x44) unicodetoupper(unsigned short, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fc0c (    0x1c) mkinitcap(char*, cs_info const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fc28 (     0x8) store_pointer(char*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fc30 (     0x8) get_stored_pointer(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fc38 (    0x58) enmkallcap(char*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fc90 (    0x68) get_current_cs(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fcf8 (    0x58) enmkallsmall(char*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fd50 (    0x68) enmkinitcap(char*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fdb8 (    0xa8) get_casechars(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fe60 (    0x60) get_default_enc(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9fec0 (    0x64) get_lang_num(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ff24 (    0xac) initialize_utf_tbl() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220c9ffd0 (    0x50) free_utf_tbl() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0020 (    0x24) unicodeisalpha(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0044 (    0xa0) get_captype(char*, int, cs_info*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca00e4 (   0x164) get_captype_utf8(w_char*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0248 (   0x110) remove_ignored_chars_utf(char*, unsigned short*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0358 (    0x58) remove_ignored_chars(char*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca03b0 (    0xa4) parse_string(char*, char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0454 (    0xe0) parse_array(char*, char**, unsigned short**, int*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0534 (    0x60) DictMgr::DictMgr(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0594 (   0x1ec) DictMgr::parse_file(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0780 (     0x4) DictMgr::DictMgr(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0784 (    0x9c) DictMgr::~DictMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0820 (     0x4) DictMgr::~DictMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0824 (    0x60) DictMgr::mychomp(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0884 (    0xdc) DictMgr::mystrsep(char**, char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0960 (    0x68) DictMgr::mystrdup(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca09c8 (    0x10) DictMgr::get_list(dictentry**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca09d8 (    0x9c) HashMgr::HashMgr(char const*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0a74 (   0x4d0) HashMgr::load_config(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca0f44 (   0x3d4) HashMgr::load_tables(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1318 (     0x4) HashMgr::HashMgr(char const*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca131c (   0x174) HashMgr::~HashMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1490 (     0x4) HashMgr::~HashMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1494 (    0x50) HashMgr::lookup(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca14e4 (    0x54) HashMgr::hash(char const*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1538 (   0x34c) HashMgr::add_word(char const*, int, int, unsigned short*, int, char const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1884 (    0x28) HashMgr::get_aliasm(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca18ac (   0x224) HashMgr::add_hidden_capitalized_word(char*, int, int, unsigned short*, int, char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1ad0 (    0xcc) HashMgr::get_clen_and_captype(char const*, int, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1b9c (    0xcc) HashMgr::remove(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1c68 (    0xd8) HashMgr::remove_forbidden_flag(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1d40 (    0xcc) HashMgr::add(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1e0c (   0x128) HashMgr::add_with_affix(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1f34 (    0x4c) HashMgr::walk_hashtable(int&, hentry*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1f80 (    0x5c) HashMgr::get_aliasf(int, unsigned short**, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca1fdc (   0x268) HashMgr::decode_flags(unsigned short**, char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2244 (    0x78) HashMgr::decode_flag(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca22bc (    0xfc) HashMgr::encode_flag(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca23b8 (   0x25c) HashMgr::parse_aliasf(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2614 (   0x23c) HashMgr::parse_aliasm(char*, FileMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2850 (    0x10) HashMgr::is_aliasf() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2860 (    0x10) HashMgr::is_aliasm() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2870 (   0x148) Hunspell::Hunspell(char const*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca29b8 (     0x4) Hunspell::Hunspell(char const*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca29bc (    0xe4) Hunspell::~Hunspell() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2aa0 (     0x4) Hunspell::~Hunspell() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2aa4 (    0x9c) Hunspell::add_dic(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2b40 (   0x140) Hunspell::cleanword2(char*, char const*, w_char*, int*, int*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2c80 (   0x278) Hunspell::cleanword(char*, char const*, int*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca2ef8 (   0x12c) Hunspell::mkallcap(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3024 (    0xe0) Hunspell::mkallcap2(char*, w_char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3104 (    0x30) Hunspell::mkallsmall(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3134 (    0xe0) Hunspell::mkallsmall2(char*, w_char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3214 (    0x54) Hunspell::sharps_u8_l1(char*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3268 (   0x188) Hunspell::spellsharps(char*, char*, int, int, char*, int*, char**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca33f0 (   0x44c) Hunspell::checkword(char const*, int*, char**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca383c (    0x70) Hunspell::is_keepcase(hentry const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca38ac (    0x8c) Hunspell::insert_sug(char***, char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca3938 (   0x8b0) Hunspell::spell(char const*, int*, char**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca41e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000220ca41fc (    0x98) Hunspell::mkinitcap2(char*, w_char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca4294 (   0xd94) Hunspell::suggest(char***, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca5028 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000220ca503c (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000220ca5050 (   0x3a8) Hunspell::spellml(char***, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca53f8 (    0x98) Hunspell::mkinitsmall2(char*, w_char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca5490 (    0xc0) Hunspell::mkinitcap(char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca5550 (     0xc) Hunspell::free_list(char***, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca555c (     0x8) Hunspell::get_dic_encoding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca5564 (   0x374) Hunspell::stem(char***, char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca58d8 (    0x6c) Hunspell::stem(char***, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca5944 (   0x8f0) Hunspell::analyze(char***, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6234 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000220ca6248 (     0x8) Hunspell::get_wordchars() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6250 (     0x8) Hunspell::get_wordchars_utf16(int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6258 (    0x10) Hunspell::add(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6268 (    0x10) Hunspell::add_with_affix(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6278 (    0x10) Hunspell::remove(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6288 (     0x8) Hunspell::get_version() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6290 (     0x8) Hunspell::get_csconv() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6298 (    0x6c) Hunspell::cat_result(char*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6304 (   0x23c) Hunspell::generate(char***, char const*, char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6540 (    0x80) Hunspell::generate(char***, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca65c0 (    0xbc) Hunspell::get_xml_par(char*, char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca667c (    0x84) Hunspell::get_xml_pos(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6700 (    0x88) Hunspell::check_xml_par(char const*, char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6788 (   0x104) Hunspell::get_xml_list(char***, char*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca688c (    0x60) Hunspell_create [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca68ec (    0x64) Hunspell_create_key [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6950 (    0x5c) Hunspell_destroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69ac (     0xc) Hunspell_spell [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69b8 (     0x8) Hunspell_get_dic_encoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69c0 (     0x4) Hunspell_suggest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69c4 (     0x4) Hunspell_analyze [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69c8 (     0x4) Hunspell_stem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69cc (     0x4) Hunspell_stem(Hunhandle*, char***, char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69d0 (     0x4) Hunspell_generate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69d4 (     0x4) Hunspell_generate(Hunhandle*, char***, char const*, char**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69d8 (    0x10) Hunspell_add [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69e8 (    0x10) Hunspell_add_with_affix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca69f8 (    0x10) Hunspell_remove [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6a08 (     0xc) Hunspell_free_list [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6a14 (   0x1b4) SuggestMgr::SuggestMgr(char const*, int, AffixMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6bc8 (     0x4) SuggestMgr::SuggestMgr(char const*, int, AffixMgr*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6bcc (    0x74) SuggestMgr::~SuggestMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6c40 (     0x4) SuggestMgr::~SuggestMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6c44 (   0x104) SuggestMgr::testsug(char**, char const*, int, int, int, int*, unsigned long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca6d48 (   0x2f0) SuggestMgr::checkword(char const*, int, int, int*, unsigned long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7038 (   0x550) SuggestMgr::suggest(char***, char const*, int, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7588 (    0xd8) SuggestMgr::capchars_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7660 (    0xb4) SuggestMgr::capchars(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7714 (   0x294) SuggestMgr::replchars(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca79a8 (   0x144) SuggestMgr::mapchars(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7aec (   0x230) SuggestMgr::swapchar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7d1c (   0x1d0) SuggestMgr::swapchar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca7eec (   0x15c) SuggestMgr::longswapchar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8048 (   0x138) SuggestMgr::longswapchar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8180 (   0x2e0) SuggestMgr::badcharkey_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8460 (   0x1e8) SuggestMgr::badcharkey(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8648 (   0x130) SuggestMgr::extrachar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8778 (   0x100) SuggestMgr::extrachar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8878 (   0x164) SuggestMgr::forgotchar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca89dc (   0x158) SuggestMgr::forgotchar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8b34 (   0x22c) SuggestMgr::movechar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8d60 (   0x1ec) SuggestMgr::movechar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca8f4c (   0x188) SuggestMgr::badchar_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca90d4 (   0x150) SuggestMgr::badchar(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9224 (   0x16c) SuggestMgr::doubletwochars_utf(char**, w_char const*, int, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9390 (   0x138) SuggestMgr::doubletwochars(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca94c8 (   0x338) SuggestMgr::twowords(char**, char const*, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9800 (   0x234) SuggestMgr::map_related_utf(w_char*, int, int, int, char**, int, mapentry const*, int, int*, unsigned long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9a34 (   0x210) SuggestMgr::map_related(char const*, int, char**, int, int, mapentry const*, int, int*, unsigned long*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9c44 (   0x124) SuggestMgr::check_forbidden(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9d68 (    0x6c) SuggestMgr::mystrlen(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220ca9dd4 (   0xe58) SuggestMgr::ngsuggest(char**, char*, int, HashMgr**, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220caac2c (   0x2cc) SuggestMgr::ngram(int, char*, char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220caaef8 (   0x208) SuggestMgr::leftcommonsubstring(char*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cab100 (    0x88) SuggestMgr::bubblesort(char**, char**, int*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cab188 (    0x9c) SuggestMgr::lcslen(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cab224 (   0x260) SuggestMgr::commoncharacterpositions(char*, char const*, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cab484 (   0x31c) SuggestMgr::suggest_morph(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cab7a0 (   0x394) SuggestMgr::suggest_hentry_gen(hentry*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cabb34 (   0x4bc) SuggestMgr::suggest_gen(char**, int, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cabff0 (   0x26c) SuggestMgr::lcs(char const*, char const*, int*, int*, char**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cac25c (    0x68) init_phonet_hash(phonetable&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cac2c4 (    0x24) myisalpha(char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cac2e8 (   0x8c8) phonet(char const*, char*, int, phonetable&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacbb0 (    0x34) FileMgr::fail(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacbe4 (    0xf0) FileMgr::FileMgr(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220caccd4 (     0x4) FileMgr::FileMgr(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220caccd8 (    0x5c) FileMgr::~FileMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacd34 (     0x4) FileMgr::~FileMgr() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacd38 (    0xa4) FileMgr::getline() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacddc (    0x10) FileMgr::getlinenum() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacdec (    0x34) Hunzip::fail(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cace20 (    0x84) Hunzip::Hunzip(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cacea4 (   0x404) Hunzip::getcode(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad2a8 (   0x1ac) Hunzip::getbuf() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad454 (     0x4) Hunzip::Hunzip(char const*, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad458 (    0x48) Hunzip::~Hunzip() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad4a0 (     0x4) Hunzip::~Hunzip() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad4a4 (   0x23c) Hunzip::getline() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad6e0 (    0x40) RepList::RepList(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad720 (    0x40) RepList::RepList(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad760 (    0x78) RepList::~RepList() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad7d8 (     0x4) RepList::~RepList() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad7dc (     0x8) RepList::get_pos() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad7e4 (     0xc) RepList::item(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad7f0 (    0x8c) RepList::near(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad87c (    0x58) RepList::match(char const*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad8d4 (   0x104) RepList::add(char*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000220cad9d8 (   0x124) RepList::conv(char const*, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x0000000220cadafc (   0x1f0) __TEXT __auth_stubs
                0x0000000220cadafc (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb0c (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb1c (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb2c (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb3c (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb4c (    0x10) DYLD-STUB$$atoi [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb5c (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb6c (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb7c (    0x10) DYLD-STUB$$clock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb8c (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadb9c (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbac (    0x10) DYLD-STUB$$fgets [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbbc (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbcc (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbdc (    0x10) DYLD-STUB$$fread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbec (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadbfc (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc0c (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc1c (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc2c (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc3c (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc4c (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc5c (    0x10) DYLD-STUB$$sprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc6c (    0x10) DYLD-STUB$$strcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc7c (    0x10) DYLD-STUB$$strchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc8c (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadc9c (    0x10) DYLD-STUB$$strcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadcac (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadcbc (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadccc (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000220cadcdc (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000220cadcec (   0x4f4) __TEXT __cstring
            0x0000000220cae1e0 (  0xc780) __TEXT __const
                0x0000000220cae1f0 (  0xc770) utf_lst [NameNList, MangledNameNList, NList] 
            0x0000000220cba960 (   0x288) __TEXT __gcc_except_tab
                0x0000000220cba960 (   0x10c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000220cbaa6c (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000220cbaa8c (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000220cbaaac (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000220cbaacc (    0x44) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000220cbab10 (    0x38) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000220cbab48 (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000220cbab70 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000220cbab88 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000220cbab9c (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x0000000220cbabac (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x0000000220cbabbc (     0xc) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x0000000220cbabc8 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000220cbabdc (     0xc) GCC_except_table3 [NameNList, MangledNameNList, NList] 
            0x0000000220cbabe8 (   0x410) __TEXT __unwind_info
        0x000000022e822df8 (   0x128) __DATA_CONST SEGMENT
            0x000000022e822df8 (    0x18) __DATA_CONST __got
            0x000000022e822e10 (   0x110) __DATA_CONST __const
                0x000000022e822e10 (   0x110) encds [NameNList, MangledNameNList, NList] 
        0x0000000238296588 (   0x138) __AUTH_CONST SEGMENT
            0x0000000238296588 (    0x38) __AUTH_CONST __auth_ptr
            0x00000002382965c0 (   0x100) __AUTH_CONST __auth_got
        0x0000000231a35cf0 (  0x3568) __DATA SEGMENT
            0x0000000231a35cf0 (  0x3558) __DATA __data
                0x0000000231a35cf0 (   0x300) iso1_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a35ff0 (   0x300) iso2_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a362f0 (   0x300) iso3_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a365f0 (   0x300) iso4_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a368f0 (   0x300) iso5_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a36bf0 (   0x300) iso6_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a36ef0 (   0x300) iso7_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a371f0 (   0x300) iso8_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a374f0 (   0x300) iso9_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a377f0 (   0x300) iso10_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a37af0 (   0x300) koi8r_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a37df0 (   0x300) koi8u_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a380f0 (   0x300) cp1251_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a383f0 (   0x300) iso13_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a386f0 (   0x300) iso14_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a389f0 (   0x300) iso15_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a38cf0 (   0x300) iscii_devanagari_tbl [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231a38ff0 (   0x258) lang2enc [EXT, NameNList, MangledNameNList, NList] 
            0x0000000231a39248 (    0x10) __DATA __bss
                0x0000000231a39248 (     0x8) utf_tbl_count [NameNList, MangledNameNList, NList] 
                0x0000000231a39250 (     0x8) utf_tbl [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
